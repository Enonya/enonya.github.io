{"config": {"lang": ["ja"], "separator": "[\\s\\-\uff0c\u3002]+", "pipeline": ["stemmer"]}, "docs": [{"location": "", "title": "Index", "text": "<p><p>     NOIp2023 Countdown :      Day(s) </p></p> <p> source: falseknees.com  </p> <p>we need THE ANSWER, not anything else.</p> <p>\u9996\u9875\u4e0d\u662f\u67d0\u4e2a\u4eba\u62ff\u6765\u788e\u788e\u5ff5\u7684\u5730\u65b9\u3002</p> <p>\u514d\u5f97\u4e0d\u8ba4\u8bc6\u4ed6\u7684\u4eba\u79bb\u5f00\uff0c\u8fd9\u513f\u6709\u4e00\u4e9b\u5173\u4e8e\u4ed6\u7684\u8d44\u6599\uff1a</p> <p>ID: black_trees, Enonya, BTe, hylwxqwq, ...</p> <p>Hobbies: Algorithm, Basketball, Mug, ...</p> <p>Location: Room 201, Algorithm Research Institute, 13-th Street, Border Area, Gensokyo.</p> <p>(contact information is at the bottom of this site.)</p>"}, {"location": "links/", "title": "Friendlinks", "text": "<p>\u8fd9\u4e9b\u662f\u53cb\u94fe\uff0c\u6b22\u8fce\u4ea4\u6362\uff0c\u5177\u4f53\u53ef\u4ee5 E-mail \u6211\u6216\u8005\u76f4\u63a5 +q\u3002</p> <p>\u65e5\u540e\u4f1a\u8003\u8651\u5f04\u4e00\u4e0b Gitalk\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u8bc4\u8bba\u533a\u91cc\u9762\u641e\u4e86\uff08upd:\u5f04\u4e86\uff09\u3002</p> <p>Shmilyty - hb \u52bf\u529b CharlesWu - cw \u52bf\u529b Islauso - cw \u52bf\u529b ETK - \u6da6\u6da6\u52bf\u529b </p> <p>\u6478\u9c7c\u9171 - \u9b54\u6014\u52bf\u529b Hyl\u5929\u68a6 - \u540c\u540d\u52bf\u529b \u5e7b\u5f71\u5f6d - cw \u52bf\u529b \u65e5\u8bed\u9171 - \u53ef\u7231\u52bf\u529b</p> <p>FrancisDrake - cw \u52bf\u529b Eray - cw \u52bf\u529b(github) Eray - cw \u52bf\u529b(gitlab) </p> <p>Fat-Old-Eight - cw \u52bf\u529b 10circle - \u672a\u77e5\u52bf\u529b H2Sxxa - \u8f66\u4e07\u52bf\u529b</p>"}, {"location": "algor/", "title": "Index", "text": "<p>\u8fd9\u4e2a\u5b50\u76ee\u5f55 <code>Algorithm</code> \u4e0b\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u5185\u5bb9\uff1a</p> <ul> <li>\u7b97\u6cd5\u7684\u57fa\u7840/\u8fdb\u9636\u77e5\u8bc6</li> <li>\u7b97\u6cd5\u7684\u57fa\u7840/\u6269\u5c55\u8fd0\u7528</li> </ul> <p>Trick \u7c7b\u7684\u4e1c\u897f\u4e0d\u4f1a\u7279\u522b\u591a\uff0c\u5927\u90e8\u5206 Tricks \u90fd\u653e\u5728 Record \u91cc\u9762\u3002</p> <p>\u4e5f\u53ef\u4ee5\u4e0d\u662f\u7b97\u6cd5\uff0c\u6bd4\u5982\u7ec4\u5408\u6570\u5b66\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002</p>"}, {"location": "algor/basic/binary-lifting/", "title": "\u500d\u589e", "text": ""}, {"location": "algor/basic/binary-lifting/#_1", "title": "\u6982\u8ff0", "text": "<p>\u5e8f\u5217\u500d\u589e\u672c\u8d28\u4e0a\u662f\u5bf9\u4e8e\u9012\u63a8\u7684\u4e00\u79cd\u4f18\u5316\uff0c\u901a\u5e38\u548c\u4e8c\u8fdb\u5236\u62c6\u5206\uff08\u4efb\u610f\u4e00\u4e2a\u6b63\u6574\u6570\u90fd\u53ef\u4ee5\u88ab\u62c6\u6210 \\(2\\) \u7684\u6574\u6570\u6b21\u5e42\u7684\u548c\uff09\u642d\u914d\u4f7f\u7528\u3002</p> <p>\u987e\u540d\u601d\u4e49\uff0c\u500d\u589e\uff0c\u5c31\u662f\u6210\u500d\u589e\u957f\uff0c\u6bcf\u6b21\u5c06\u8303\u56f4\u6269\u5927\u6216\u8005\u51cf\u5c0f\u4e00\u500d\u3002</p> <p>\u5f62\u5f0f\u5316\u7684\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u64cd\u4f5c \\(f^n(x)\\) \u7684\u6c42\u503c\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5bf9 \\(f^1(x),f^2(x),f^4(x),f^{2^k}(x)\\) \u7684\u6c42\u503c\u3002</p> <p>\u5982\u679c\u8bf4\u6c42 \\(f(x)\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(1)\\)\uff0c\u90a3\u4e48\u6c42 \\(f^n(x)\\) \u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u4ece\u539f\u672c\u7684 \\(O(n)\\) \u53d8\u4e3a \\(O(\\log n)\\)\u3002</p> <p>\u500d\u589e\u7684\u601d\u60f3\u548c\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ecf\u5178\u7684\u4f8b\u5b50\uff0c\u5154\u5b50\u8df3\u6765\u8bf4\u660e\u3002</p> <p>\u4f60\u73b0\u5728\u8981\u4ece \\(1\\) \u5f00\u59cb\u8df3\u5230\u67d0\u4e00\u4e2a\u683c\u5b50 \\(t\\)\uff0c\u6bcf\u6b21\u53ea\u80fd\u5411\u524d\u8df3 \\(2^k\\) \u6b65\uff0c\u4f60\u4e0d\u77e5\u9053\u8fd9\u4e2a\u683c\u5b50\u662f\u591a\u5c11\u3002</p> <p>\u7136\u540e\u4f60\u6bcf\u6b21\u53ef\u4ee5\u8be2\u95ee\u4ea4\u4e92\u5e93\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 \\(k\\)\uff0c\u4ea4\u4e92\u5e93\u4f1a\u544a\u8bc9\u4f60\u4f60\u4ece\u5f53\u524d\u4f4d\u7f6e\u8df3 \\(2^k\\) \u6b65\u662f\u591a\u4e86\u8fd8\u662f\u5c11\u4e86\u6216\u8005\u5230\u4e86\u3002</p> <p>\u4f60\u9700\u8981\u5728\u5c3d\u91cf\u5c11\u7684\u8be2\u95ee\u6b21\u6570\u5185\u5230\u8fbe \\(t\\)\uff0c\u4fdd\u8bc1 \\(k \\le limit\\)\u3002</p> <p>\u6bd4\u5982\u4ee4 \\(limit = 8, t = 23\\)\u3002</p> <p>\u5148\u4ece\u5927\u7684\u5f00\u59cb\u95ee\uff0c\\(k = 8\\)\uff0c\\(2^8 = 256 &gt; 23\\) \u8fc7\u4e86\uff0c\u4e00\u76f4\u5230 \\(2^5 = 32 &gt; 23\\) \u90fd\u662f\u8fc7\u4e86\u3002</p> <p>\u7136\u540e\u5230\u4e86 \\(k = 4, 2^4 = 16 &lt; 23\\)\uff0c\u53d1\u73b0\u5c11\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u65ad\u5b9a \\(t\\) \u5728 \\((16,32)\\) \u4e4b\u95f4\u3002</p> <p>\u6b64\u65f6\u8df3\u5230 \\(16\\)\uff0c\u6211\u4eec\u7ee7\u7eed\u95ee\uff0c\u663e\u7136 \\(k \\ge 4\\) \u7684\u90fd\u4e0d\u4f1a\u518d\u95ee\u4e86\uff0c\u56e0\u4e3a\u5f53\u524d\u5c31\u662f \\(2^4\\)\uff0c\u518d\u591a\u54ea\u6015\u4e00\u4e2a \\(2^4\\)\uff0c\u5c31\u8df3\u8fc7\u4e86\u3002</p> <p>\u6240\u4ee5\u4ece \\(k = 3\\) \u5f00\u59cb\u95ee\uff0c\\(16 + 2^3 = 24 &gt; 23\\)\uff0c\u8fc7\u4e86\uff0c\u518d\u95ee \\(k = 2\\)\uff0c\\(16 + 2^2 = 20\\)\uff0c\u5c11\u4e86\uff0c\u6240\u4ee5\u8df3\u5230 \\(20\\)\u3002</p> <p>\u663e\u7136\u6b64\u65f6 \\(k \\ge 2\\) \u7684\u6211\u4eec\u90fd\u4e0d\u4f1a\u95ee\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u518d\u95ee\u4e00\u4e2a \\(k = 2\\)\uff0c\u90a3\u4e48\u5c31\u4f1a\u591a \\(2^2\\)\uff0c\u7136\u540e\u8df3\u5230 \\(24\\)\uff0c\u5c31\u8df3\u8fc7\u4e86\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u95ee \\(k = 1\\)\uff0c\\(20 + 2^1 = 22 &lt; 23\\)\uff0c\u5c11\u4e86\uff0c\u6240\u4ee5\u8df3\u5230 \\(22\\)\uff0c\u6b64\u65f6\u6700\u540e\u95ee \\(k = 0\\)\uff0c\u7136\u540e\u5c31\u8df3\u5230\u4e86 \\(23\\)\u3002</p> <p>\u770b\u8d77\u6765\u6709\u70b9\u9ebb\u70e6\uff1f\u4e0d\u8fc7\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f \\(O(\\log n)\\) \u7684\uff0c\u5728\u6570\u636e\u5927\u8d77\u6765\u4e4b\u540e\u662f\u975e\u5e38\u597d\u7528\u7684\uff01\uff01</p> <p>\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\uff1a</p> <ul> <li>\u53ef\u4ee5\u53d1\u73b0 \\(23 = 2^4 + 2^2 + 2^1 + 2^0\\)\uff0c\u8fd9\u662f\u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u800c\u51fa\u73b0\u7684\u6307\u6570\uff0c\u6070\u597d\u90fd\u662f\u95ee\u4ea4\u4e92\u5e93\u4e86\u4e4b\u540e\u6211\u4eec\u8df3\u4e86\u7684 \\(k\\)\uff0c\u6240\u4ee5\u500d\u589e\u6709\u65f6\u4e5f\u53ef\u4ee5\u770b\u4f5c\u4e00\u79cd\u4e8c\u8fdb\u5236\u62c6\u5206\u3002</li> <li>\u6211\u4eec\u6bcf\u6b21\u8df3\u4e86\u8fc7\u540e\uff0c\u5047\u8bbe\u4e4b\u524d\u95ee\u4e86 \\(k\\)\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u7edd\u5bf9\u4e0d\u4f1a\u95ee \\(\\ge k\\) \u7684\u4e86\uff0c\u8fd9\u4e2a\u9053\u7406\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6b64\u65f6\u518d\u591a\u52a0\u4e00\u4e2a \\(2^k\\)\uff0c\u5c31\u8df3\u5230\u4e86 \\(2^{k + 1}\\)\uff0c\u5df2\u7ecf\u8df3\u5230\u4e86\u4e0a\u754c\uff08\u5f00\u533a\u95f4\uff09\u4e86\uff0c\u80af\u5b9a\u4e0d\u884c\u3002\uff08\u8fd9\u4e2a\u70b9\u5728\u6211\u4eec\u5199\u5faa\u73af\u7684\u65f6\u5019\u4f1a\u7528\u5230\uff09</li> <li>\u500d\u589e\u5c31\u662f\u6bcf\u6b21\u770b\u201c\u591a\u4e86\u6ca1\u6709\uff1f\u5c11\u4e86\u6ca1\u6709\uff1f\u201d\uff0c\u7136\u540e\u505a\u51fa\u5bf9\u4e8e\u8303\u56f4\u7684\u6269\u5927\u6216\u8005\u7f29\u5c0f\uff0c\u5229\u7528\u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u901a\u8fc7 \\(2\\) \u7684\u6574\u6570\u6b21\u5e42\u6765\u6784\u9020\u4efb\u610f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u7684\u7b54\u6848\u3002</li> </ul> <p>\u5199\u4e00\u4efd\u7b80\u5355\u7684\u4ee3\u7801\uff1a</p> <pre><code>    auto ask_over_or_not = [](int x) -&gt; bool {\ncout &lt;&lt; \"? \" &lt;&lt; x &lt;&lt; endl;\nint xx; cin &gt;&gt; xx; return xx;\n};\n\nint nowpos = 1;\nfor(int j = 6; j &gt;= 0; --j) { // \u6839\u636e\u603b\u7ed3\u7684\u7b2c\u4e8c\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5012\u5e8f\u5faa\u73af\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\nbool status = ask_over_or_not(j);\nif(status == 0) nowpos += (1 &lt;&lt; j); }\n\ncout &lt;&lt; \"! \" &lt;&lt; nowpos &lt;&lt; endl;\n</code></pre> <p>\u5f53\u7136\uff0c\u4f60\u540c\u6837\u53ef\u4ee5\u4ece\u5c0f\u5f00\u59cb\u8df3\uff0c\u672c\u8d28\u4e0a\u6ca1\u6709\u4efb\u4f55\u533a\u522b\uff0c\u53ea\u662f\u6211\u4eec\u4ee3\u7801\u5b9e\u73b0\u7684\u65f6\u5019\u679a\u4e3e\u6307\u6570\u7684\u987a\u5e8f\u4ece\u964d\u5e8f\u53d8\u6210\u4e86\u5347\u5e8f\u3002</p>"}, {"location": "algor/basic/binary-lifting/#_2", "title": "\u4f8b\u9898", "text": "<p>CF1647E\uff0c\u9898\u89e3\u3002</p> <p>Warning</p> <p>\u63a8\u8350\u6c42 \\(to\\) \u7684\u65f6\u5019\u628a \\(j\\) \u653e\u5728\u5916\u9762\uff0c\u56e0\u4e3a\u5982\u679c\u6240\u6709\u7684 \\(i\\) \u4f9d\u6b21\u7ec4\u6210\u7684\u4e0d\u662f\u4e00\u4e2a\u5355\u8c03\u7684\u5e8f\u5217\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u53ef\u80fd\u51fa\u73b0\u4ece \\(to(3) \\to to(1)\\) \u8fd9\u79cd\u3002</p> <p>\u90a3\u4e48\u628a \\(i\\) \u653e\u5728\u5916\u9762\u5c31\u4f1a\u6709\u95ee\u9898\uff0c\u5982\u679c \\(i\\) \u662f\u5355\u8c03\u7684\uff0c\u90a3\u4e48\u600e\u6837\u90fd\u884c\u3002</p> <p>\u8fd9\u5c31\u662f\u500d\u589e\uff0c\u5f88\u6709\u610f\u601d\u5427\uff0c\u500d\u589e\u8fd8\u6709\u5f88\u591a\u6bd4\u8f83\u6709\u610f\u601d\u7684\u5e94\u7528\uff0c</p>"}, {"location": "algor/basic/binary-lifting/#_3", "title": "\u5e94\u7528", "text": ""}, {"location": "algor/basic/binary-lifting/#st", "title": "ST \u8868", "text": "<p>\u533a\u95f4\u6700\u503c\u95ee\u9898\u53ef\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002</p> <p>\u4e0d\u8fc7\u6709\u4e00\u4e2a\u66f4\u597d\u5199\u4e00\u70b9\u7684\u65b9\u6cd5\uff0c\\(\\text{O}(n \\log n)\\) \u9884\u5904\u7406\uff0c\\(\\text{O}(1)\\) \u8be2\u95ee\uff0c\u4f46\u662f\u4e0d\u80fd\u5e26\u4fee\u3002</p> <p>\u8fd9\u5c31\u662f ST \u8868\uff0c\u5229\u7528\u500d\u589e\u7684\u601d\u60f3\u8003\u8651\uff1a</p> <p>\u8bbe \\(f_{i,j}\\) \u8868\u793a\u4ece \\(i\\) \u5f00\u59cb\u7684 \\(2^j\\) \u4e2a\u6570\u5f53\u4e2d\u7684\u6700\u503c\u3002</p> <p>\u7c7b\u4f3c\u7ebf\u6bb5\u6811\uff0c\u628a\u4e24\u4e2a\u534a\u533a\u95f4\u7684\u4fe1\u606f\u4e0a\u4f20\u5230\u5927\u533a\u95f4\u3002</p> <p></p> <p>\u90a3\u4e48 \\(f_{i,j}=\\max(f_{i,j-1},f_{i+2^{j-1},j-1})\\)</p> <p>\u8be2\u95ee\u533a\u95f4 \\([l,r]\\) \u7684\u6700\u503c\u7684\u65f6\u5019\uff0c\u627e\u5230\u4e00\u4e2a \\(k\\) \u4f7f\u5f97 \\(2^k \\le r-l+1 \\le 2^{k+1}\\) \uff08\u7c7b\u4f3c\u6211\u4eec\u4e0a\u9762\u5154\u5b50\u8df3\u8bf4\u7684\u4e0a\u754c\u548c\u4e0b\u754c\uff09\u3002</p> <p>\u90a3\u4e48 \\(ans=\\max(f_{l,k},f_{r-2^k+1,k})\\)\u3002\u8fd9\u4e24\u4e2a\u533a\u95f4\u4f1a\u8986\u76d6\uff0c\u4f46\u662f\u6ca1\u6709\u5f71\u54cd\u3002 </p> <pre><code>const int si = 1e5 + 10;\n\nint st[si][20];\nint a[si], Log[si];\n\nvoid ST_prework() {\nfor(int i = 2; i &lt;= n; ++i) {\nLog[i] = Log[i &gt;&gt; 1] + 1;\n}\nfor(int i = 1; i &lt;= n; ++i) {\nst[i][0] = a[i];\n}\nfor(int j = 1; j &lt;= Log[n]; ++j) {\nfor(int i = 1; i &lt;= (n + 1) - (1 &lt;&lt; j); ++i) { // \u6ce8\u610f\u5faa\u5e8f\uff0c\u6b64\u5904\u4e3a\u4e86\u65e0\u540e\u6548\u6027\u5fc5\u987b\u8fd9\u4e48\u5199.\nst[i][j] = max(st[i][j - 1], st[i + (1 &lt;&lt; (j - 1))][j - 1]);\n}\n}\n}\ninline int query(int l, int r) {\nint k = Log[r - l + 1];\nreturn max(f[l][k], f[r - (1 &lt;&lt; k) + 1][k]);\n}\n</code></pre> <p>ST \u8868\u672c\u8d28\u4e0a\u662f\u5bf9\u533a\u95f4\u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898\u7684\u6c42\u89e3\u3002</p> \u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898\u662f\u5565\uff1f\uff08\u6765\u6e90 OI-wiki\uff09 <p>\u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898 \u662f\u6307\u5bf9\u4e8e\u8fd0\u7b97 \\(\\operatorname{opt}\\)\uff0c\u6ee1\u8db3 \\(x\\operatorname{opt} x=x\\)\uff0c\u5219\u5bf9\u5e94\u7684\u533a\u95f4\u8be2\u95ee\u5c31\u662f\u4e00\u4e2a\u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u6700\u5927\u503c\u6709 \\(\\max(x,x)=x\\)\uff0cgcd \u6709 \\(\\operatorname{gcd}(x,x)=x\\)\uff0c\u6240\u4ee5 RMQ \u548c\u533a\u95f4 GCD \u5c31\u662f\u4e00\u4e2a\u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898\u3002\u50cf\u533a\u95f4\u548c\u5c31\u4e0d\u5177\u6709\u8fd9\u4e2a\u6027\u8d28\uff0c\u5982\u679c\u6c42\u533a\u95f4\u548c\u7684\u65f6\u5019\u91c7\u7528\u7684\u9884\u5904\u7406\u533a\u95f4\u91cd\u53e0\u4e86\uff0c\u5219\u4f1a\u5bfc\u81f4\u91cd\u53e0\u90e8\u5206\u88ab\u8ba1\u7b97\u4e24\u6b21\uff0c\u8fd9\u662f\u6211\u4eec\u6240\u4e0d\u613f\u610f\u770b\u5230\u7684\u3002\u53e6\u5916\uff0c\\(\\operatorname{opt}\\) \u8fd8\u5fc5\u987b\u6ee1\u8db3\u7ed3\u5408\u5f8b\u624d\u80fd\u4f7f\u7528 ST \u8868\u6c42\u89e3\u3002</p>"}, {"location": "algor/basic/binary-lifting/#lca", "title": "\u500d\u589e\u6c42 LCA", "text": "<p>\u89c1 \u6700\u8fd1\u516c\u5171\u7956\u5148\u3002</p>"}, {"location": "algor/basic/binary-lifting/#suffix-array", "title": "\u500d\u589e\u6c42 Suffix Array", "text": "<p>SA \u8fd8\u6ca1\u5b66\u3002</p>"}, {"location": "algor/basic/binary-operation/", "title": "\u4f4d\u8fd0\u7b97", "text": ""}, {"location": "algor/basic/binary-operation/#_1", "title": "\u57fa\u7840\u8fd0\u7b97\u7b26", "text": "<p><code>and,or,xor</code> \u7684\u663e\u8457\u7279\u70b9\u5c31\u662f\u4e8c\u8fdb\u5236\u4e0b\u4e0d\u8fdb\u4f4d\u3002</p> <p>\u4e0b\u9762\u8bf4\u7684\u201c\u6309\u4f4d\u201d\uff0c\u6307\u7684\u662f\u628a\u53c2\u52a0\u8fd0\u7b97\u7684\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u53d8\u6210\u540c\u4f4d\u6570\u7684\uff0c\u7136\u540e\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u8fdb\u884c\u64cd\u4f5c\u3002</p> <ul> <li>\u6309\u4f4d\u4e0e <code>&amp;</code> \uff0c<code>bitand</code></li> </ul> <p>\u7279\u70b9\uff1a\u4e8c\u5143\u8fd0\u7b97\u7b26\uff0c\u4e8c\u8fdb\u5236\u4e0b\u6309\u4f4d\u8fdb\u884c\u8fd0\u7b97\uff0c\u5168 \\(1\\) \u5219 \\(1\\) \uff0c\u53cd\u4e4b\u4e3a \\(0\\)\u3002</p> <p>\u6027\u8d28\uff1a\\(a \\&amp; b \\le \\min(a,b)\\)\uff08\u624b\u63a8\u5373\u53ef\uff09\u3002</p> <ul> <li>\u6309\u4f4d\u6216 <code>|</code> \uff0c<code>bitor</code></li> </ul> <p>\u7279\u70b9\uff1a\u4e8c\u5143\u8fd0\u7b97\u7b26\uff0c\u4e8c\u8fdb\u5236\u4e0b\u6309\u4f4d\u8fdb\u884c\u8fd0\u7b97\uff0c\u6709 \\(1\\) \u5219 \\(1\\) \uff0c\u5168 \\(0\\) \u5219 \\(0\\)\u3002</p> <p>\u6027\u8d28\uff1a\\(a | b \\ge \\max(a,b)\\)</p> <p>\u6709\u4e2a\u602a\u60f3\u6cd5\uff1a\u65e2\u7136\u4e0d\u7ba1\u662f\u5565 | 1 \u90fd\u662f 1\uff0c\u90a3\u662f\u4e0d\u662f\u53ef\u4ee5\u5f88\u5feb\u7684\u628a\u67d0\u4e2a\u6570\u53d8\u6210 \\(2^n-1\\) \u7684\u5f62\u5f0f\uff1f</p> <ul> <li>\u6309\u4f4d\u5f02\u6216 <code>^</code> \uff0c<code>xor</code></li> </ul> <p>\u7279\u70b9\uff1a\u4e8c\u5143\u8fd0\u7b97\u7b26\uff0c\u4e8c\u8fdb\u5236\u4e0b\u6309\u4f4d\u8fdb\u884c\u8fd0\u7b97\uff0c\u76f8\u53cd\u5219 \\(1\\) \uff0c\u53cd\u4e4b\u5219 \\(0\\)\u3002</p> <p>\u76f8\u5f53\u4e8e\u4e8c\u8fdb\u5236\u4e0b\u7684\u4e0d\u8fdb\u4f4d\u52a0\u6cd5\u3002</p> <p>\\(x \\operatorname{xor} y = k \\ \\Rightarrow x \\operatorname{xor} k =y \\ \\Rightarrow y \\operatorname{xor} k=x\\) </p> <p>\u53ef\u4ee5\u7528\u4e8e\u6210\u5bf9\u53d8\u6362\uff08\u56fe\u8bba\u5f53\u4e2d\u5e38\u7528\uff09\u3002</p> <p>\u4ee4 \\(n\\) \u4e3a\u5076\u6570\uff0c\u90a3\u4e48 \\(n \\operatorname{xor} 1 = n+1\\)\u3002</p> <p>\u4ee4 \\(n\\) \u4e3a\u5947\u6570\uff0c\u90a3\u4e48 \\(n \\operatorname{xor} 1 =n-1\\)\u3002</p> <ul> <li>\u6309\u4f4d\u53d6\u53cd <code>~</code> \uff0c<code>not</code></li> </ul> <p>\u7279\u70b9\uff1a\u4e00\u5143\u8fd0\u7b97\u7b26\uff0c\u4e8c\u8fdb\u5236\u4e0b\u7684\u6bcf\u4e00\u4f4d\u90fd\u53d6\u53cd\uff08\u5305\u62ec\u7b26\u53f7\u4f4d\uff09\u3002</p> <ul> <li>\u5de6\u79fb <code>&lt;&lt;</code></li> </ul> <p>\u7279\u70b9\uff1a\u4e00\u5143\u8fd0\u7b97\u7b26\uff0c\u4e8c\u8fdb\u5236\u4e0b\u628a\u6bcf\u4e00\u4f4d\u5411\u5de6\u5e73\u79fb\uff0c\u9ad8\u4f4d\u8d8a\u754c\u5219\u820d\u5f03\uff0c\u4f4e\u4f4d\u7528 \\(0\\) \u8865\u8db3\u3002</p> <p>\u516c\u5f0f\\(1 &lt;&lt; n =2^n,x&lt;&lt;n=x\\times 2^n\\)\u516c\u5f0f</p> <ul> <li>\u7b97\u672f\u53f3\u79fb <code>&gt;&gt;</code></li> </ul> <p>\u7279\u70b9\uff1a\u4e00\u5143\u8fd0\u7b97\u7b26\uff0c\u4e8c\u8fdb\u5236\u4e0b\u628a\u6bcf\u4e00\u4f4d\u5411\u53f3\u5e73\u79fb\uff0c\u4f4e\u4f4d\u8d8a\u754c\u5219\u820d\u5f03\uff0c\u9ad8\u4f4d\u7528\u7b26\u53f7\u4f4d\u8865\u8db3\u3002</p> <p>\\(n&gt;&gt;1=\\lfloor \\frac{n}{2}\\rfloor\\) \u3002 GNU \u7684 GCC\u548cG++\u90fd\u4f7f\u7528\u7b97\u672f\u53f3\u79fb\uff0c\u903b\u8f91\u53f3\u79fb\u9ad8\u4f4d\u7528 \\(0\\) \u8865\u8db3\u3002</p>"}, {"location": "algor/basic/binary-operation/#_2", "title": "\u4e00\u4e9b\u6280\u5de7", "text": ""}, {"location": "algor/basic/binary-operation/#lowbit", "title": "lowbit", "text": "<p>\\(\\operatorname{lowbit}(n)\\) \u8868\u793a\u4e8c\u8fdb\u5236\u4e0b \\(n\\) \u7684\u6700\u4f4e\u7684\u4e00\u4e2a \\(1\\) \u548c\u5b83\u540e\u9762\u7684 \\(0\\) \u7ec4\u6210\u7684\u6570\u3002</p> <p>\u516c\u5f0f\uff1a\\(\\operatorname{lowbit}(n)=n \\&amp; -n\\)\u3002</p>"}, {"location": "algor/basic/binary-operation/#popcnt", "title": "popcnt", "text": "<p>\\(\\operatorname{popcnt}(n)\\) \u8868\u793a\u4e8c\u8fdb\u5236\u4e0b \\(n\\) \u6709\u591a\u5c11\u4f4d\u662f \\(1\\) \u3002</p> <p>\u53ef\u4ee5\u76f4\u63a5\u7528 </p> <pre><code>int __builtin_popcount(unsigned int x)\nint __builtin_popcountll(unsigned long long x)\n</code></pre> <p>\u6bd5\u7adf\u73b0\u5728\u7684 NOI Linux 2.0 \u652f\u6301 C++14 \u548c G++ 9.8.3\u3002</p> <p>\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u624b\u5199</p> <pre><code>int res=0;\nwhile(n){\n++res;\nn-=lowbit(n);\n}\n</code></pre>"}, {"location": "algor/basic/binary-operation/#_3", "title": "\u72b6\u538b", "text": "<p>\u628a\u72b6\u6001\u8868\u793a\u4e3a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u4e4b\u540e\u8fdb\u884c\u64cd\u4f5c\uff08\u5f53\u7136\u53ef\u4ee5\u7528 bitset\uff0c\u4f46\u662f\u80af\u5b9a\u6ca1\u6709\u76f4\u63a5\u62ff\u4e00\u4e2a\u6570\u6765\u505a\u597d\uff09\u3002</p> <p>\u5047\u8bbe\u6700\u4f4e\u4f4d\u4e3a\u7b2c\u4e00\u4f4d\u3002</p> <pre><code>   (highest)      (lowest)\n|               |             V               V bit : 9 8 7 6 5 4 3 2 1                num : 0 1 1 1 0 0 0 1 1\n</code></pre> <p>\u90a3\u4e48\u53ef\u4ee5\u6709\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li>\u68c0\u6d4b\u7b2c \\(k\\) \u4f4d\u662f \\(0/1\\) \uff1a<code>(n&amp;(1&lt;&lt;(k-1)))!=0</code> -&gt; 1</li> <li>\u7ed9\u7b2c \\(k\\) \u4f4d\u53d6\u53cd\uff1a<code>n^=(1&lt;&lt;(k-1))</code></li> <li>\u5c06\u7b2c \\(k\\) \u4f4d\u8d4b\u503c\u4e3a \\(1\\)\uff1a<code>n|=(1&lt;&lt;(k-1))</code></li> <li>\u5c06\u7b2c \\(k\\) \u4f4d\u8d4b\u503c\u4e3a \\(0\\)\uff1a<code>n&amp;=(~(1&lt;&lt;(k-1)))</code></li> </ul> <p>\u56e0\u4e3a C++ \u9ed8\u8ba4\u662f \\(0\\) \u5f00\u5934\u7684\uff0c\u6240\u4ee5\u8981 \\(-1\\)\u3002</p> <p>\u4e0d\u8fc7\u7ec8\u6001\u4ecd\u65e7\u662f \\(1&lt;&lt;n\\) \uff08\u548c\u6700\u4f4e\u4f4d\u4e3a \\(0\\) \u7684\u4e0d\u51cf\u4e00\u5199\u6cd5\u662f\u4e00\u6837\u7684\uff09</p> <p>\u8bf4\u767d\u4e86\uff0c\u5982\u679c\u4ee5 \\(0\\) \u505a\u6700\u4f4e\u4f4d\uff0c\u4e0d \\(-1\\) \u3002\u4ee5 \\(1\\) \u505a\u6700\u4f4e\u4f4d\uff0c\u8981 \\(-1\\) \uff0c\u4f46\u662f\uff1b\u8fd9\u4e24\u79cd\u5199\u6cd5\u5199\u7684\u65f6\u5019\uff0c\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5b9e\u9645\u4e0a\u662f\u4e00\u6837\u7684\u3002</p> <pre><code>// C++ Version\nbool isPowerOfTwo(int n) { return n &gt; 0 &amp;&amp; (n &amp; (n - 1)) == 0; }\n// C++ Version\nint modPowerOfTwo(int x, int mod) { return x &amp; (mod - 1); }\n// C++ Version\nint Abs(int n) {\nreturn (n ^ (n &gt;&gt; 31)) - (n &gt;&gt; 31);\n/* n&gt;&gt;31 \u53d6\u5f97 n \u7684\u7b26\u53f7\uff0c\u82e5 n \u4e3a\u6b63\u6570\uff0cn&gt;&gt;31 \u7b49\u4e8e 0\uff0c\u82e5 n \u4e3a\u8d1f\u6570\uff0cn&gt;&gt;31 \u7b49\u4e8e -1\n     \u82e5 n \u4e3a\u6b63\u6570 n^0=n, \u6570\u4e0d\u53d8\uff0c\u82e5 n \u4e3a\u8d1f\u6570\u6709 n^(-1)\n     \u9700\u8981\u8ba1\u7b97 n \u548c -1 \u7684\u8865\u7801\uff0c\u7136\u540e\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\n     \u7ed3\u679c n \u53d8\u53f7\u5e76\u4e14\u4e3a n \u7684\u7edd\u5bf9\u503c\u51cf 1\uff0c\u518d\u51cf\u53bb -1 \u5c31\u662f\u7edd\u5bf9\u503c */\n}\n// C++ Version\n// \u5982\u679c a&gt;=b,(a-b)&gt;&gt;31 \u4e3a 0\uff0c\u5426\u5219\u4e3a -1\nint max(int a, int b) { return b &amp; ((a - b) &gt;&gt; 31) | a &amp; (~(a - b) &gt;&gt; 31); }\nint min(int a, int b) { return a &amp; ((a - b) &gt;&gt; 31) | b &amp; (~(a - b) &gt;&gt; 31); }\n</code></pre>"}, {"location": "algor/basic/binary-operation/#_4", "title": "\u5feb\u901f\u5e42", "text": "<p>\u7ed9\u5b9a \\(a,b \\le 10^{9}\\) \uff0c\\(p\\) \u4e3a\u4e00\u4e2a\u5927\u8d28\u6570\uff0c\u6c42 \\(a^b \\operatorname{mod} p\\)\u3002</p> <p>\u8003\u8651\u4e8c\u8fdb\u5236\u62c6\u5206\u601d\u60f3\uff0c\u628a \\(b\\) \u5728\u4e8c\u8fdb\u5236\u4e0b\uff08\u4e00\u5171 \\(k\\) \u4f4d\uff09\u7684\u6bcf\u4e00\u4e2a \\(1\\) \u5355\u72ec\u62c6\u5f00\uff1a</p> <p>\\(b= \\sum\\limits_{i=1}^k c_i \\times 2^{i-1}\\)</p> <p>\u628a\u5f0f\u5b50\u5c55\u5f00\u4e4b\u540e\u653e\u5230\u6307\u6570\u4f4d\u7f6e\uff1a</p> <p>\\(a^b=\\prod\\limits_{i=1}^{k} a^{c_k\\times2^{k-1}}\\)</p> <p>\u7136\u540e\u53d1\u73b0 \\(a^{2^i}=(a^{2^{i-1}})^2\\) \uff0c\u6240\u4ee5\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u9012\u63a8\u3002</p> <p>\u56e0\u4e3a \\(k \\le \\log(b)\\) \uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f \\(\\text{O}(\\log(b))\\)\u3002</p> <pre><code>inline int qpow(int a,int b,int p){\nint ans=1%p; // attention\nfor(;b;b&gt;&gt;=1){\nif(b&amp;1) ans=(long long)ans*a%p; // b \u7684\u5f53\u524d\u4f4d\u662f 1 \uff0c\u7d2f\u4e58\u7b54\u6848\u3002\na=(long long)a*a%p; // \u9012\u63a8\u3002\n} return ans;\n}\n</code></pre>"}, {"location": "algor/basic/binary-operation/#_5", "title": "\u9f9f\u901f\u4e58", "text": "<p>\u5982\u679c \\(10^{18}\\)\uff1f</p> <p>\u53d1\u73b0\u5feb\u901f\u5e42\u7684\u65f6\u5019\u4e58\u6cd5\u5bb9\u6613\u7206\uff0c\u6240\u4ee5\u8003\u8651\u5199\u4e00\u4e2a\u7c7b\u4f3c\u201c64\u4f4d\u6574\u6570\u4e58\u6cd5\u201d\u7684\u4e1c\u897f\u3002</p> <p>\u4ecd\u7136\u8003\u8651\u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u9012\u63a8\uff0c\u4e0d\u8fc7\u4e0a\u9762\u662f\u4e58\uff0c\u8fd9\u91cc\u662f\u7d2f\u52a0\u3002</p> <pre><code>#define int long long\ninline int turtle_mul(int a,int b,int p){\nint ans=0;\nfor(;b;b&gt;&gt;=1){\nif(b&amp;1) ans=(ans+a)%p;\na=a*2%p;\n} return ans;\n}\n#undef int \n</code></pre>"}, {"location": "algor/basic/binary-operation/#_6", "title": "\u5feb\u901f\u4e58", "text": "<p>\u53d1\u73b0\u9f9f\u901f\u4e58\u7684\u65f6\u5019\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(\\log\\) \u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u60f3\u4e00\u60f3\u53c8\u6ca1\u6709\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\u3002</p> <p>\u9a86\u53ef\u5f3a\u795e\u4ed9\u57282009\u5e74\u7684\u96c6\u8bad\u961f\u8bba\u6587\u91cc\u63d0\u5230\u4e86\u4e00\u4e2a\u6709\u610f\u601d\u7684\u505a\u6cd5\u3002</p> <p>\u56e0\u4e3a \\(a\\times b \\operatorname{mod} p=a\\times b -\\lfloor \\frac{a\\times b}{p} \\rfloor \\times p\\) \u3002</p> <p>\u8003\u8651\u7528 <code>long double</code> \u5b58 \\(\\frac{a\\times b}{p}\\) \uff0c\u90a3\u4e48\u76f4\u63a5\u770b\u6574\u6570\u90e8\u5206\u5373\u53ef\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u4e0a\u9762\u7684\u51cf\u6cd5\u5f53\u4e2d\uff0c\u524d\u8005\u548c\u540e\u8005\u7684\u5dee\u4e0d\u4f1a\u5927\u4e8e \\(p\\) \uff0c\u6240\u4ee5\u5206\u522b\u7528 <code>long long</code> \u5b58\uff0c\u53ea\u9700\u8981\u5173\u5fc3\u8f83\u4f4e\u4f4d\u5c31\u884c\u3002</p> <p>\u6574\u6570\u8fd0\u7b97\u6ea2\u51fa\u5c31\u76f8\u5f53\u4e8e\u53d6\u6a21\uff0c\u6240\u4ee5\u5b8c\u5168\u53ef\u4ee5\u8fd9\u4e48\u5e72\uff08\u4e0d\u8fc7\u5728 \\(p\\) \u5927\u4e86\u4e4b\u540e\u4f1a\u6709\u7cbe\u5ea6\u95ee\u9898\uff09\u3002</p> <pre><code>#define int long long\ninline int qmul(int a,int b,int p){\na%=p,b%=p;\nint c=(a*b)/p;\nint ans=a*b-c*p;\nif(ans&lt;0) ans+=p;\nelse if(ans&gt;=p) ans-=p;\nreturn ans;\n}\n#undef int \n</code></pre>"}, {"location": "algor/basic/binary-search/", "title": "\u4e8c\u5206", "text": ""}, {"location": "algor/basic/binary-search/#_1", "title": "\u6cdb\u5316", "text": "<p>\u4f5c\u7528\u662f\u5728\u5355\u8c03\u7684\u5e8f\u5217\u6216\u8005\u5355\u8c03\u7684\u51fd\u6570\u5f53\u4e2d\u8fdb\u884c\u67e5\u627e\u3002</p> <p>\u4e5f\u53ef\u4ee5\u5c06\u6700\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\u53ef\u884c\u6027\u95ee\u9898\u4e4b\u540e\u8fdb\u884c\u5224\u5b9a\u6c42\u89e3\u3002</p>"}, {"location": "algor/basic/binary-search/#_2", "title": "\u5e94\u7528", "text": ""}, {"location": "algor/basic/binary-search/#_3", "title": "\u6574\u6570\u57df\u4e8c\u5206", "text": "<p>\u95ee\u9898\uff1a\u5728\u5355\u8c03\u9012\u589e\u7684\u5e8f\u5217\u5f53\u4e2d\u67e5\u627e\u5927\u4e8e\u7b49\u4e8e \\(x\\) \u7684\u6700\u5c0f\u7684\u4e00\u4e2a\u6570</p> <p>\u5f00\u59cb\u4ee4\u4e24\u4e2a\u6307\u9488 \\(l = 1, r = n\\)\uff0c\u8868\u793a\u6211\u4eec\u5f53\u524d\u80fd\u786e\u5b9a\u7684\u7b54\u6848\u6240\u5728\u7684\u533a\u95f4\u3002</p> <p>\u6211\u4eec\u79f0 \\([1, l)\\) \u4e3a\u4e0d\u53ef\u884c\u533a\u95f4\uff0c\\([r, n]\\) \u4e3a\u53ef\u884c\u533a\u95f4\uff08\u95ed\u5f00\u7684\u539f\u56e0\u4e4b\u540e\u4f1a\u8bf4\uff09\uff0c\u53ef\u884c\u533a\u95f4\u6307\u7684\u662f\u6ee1\u8db3\u95ee\u9898\u7ea6\u675f\u7684\u533a\u95f4\u3002</p> <p>\u6bcf\u6b21\u53d6 \\(mid = \\lfloor (l + r) / 2 \\rfloor\\)\u3002</p> <p>\u5982\u679c \\(a_{mid} \\ge x\\)\uff0c\u90a3\u4e48\u8bc1\u660e \\([mid, n]\\) \u5c31\u4e00\u5b9a\u662f\u53ef\u884c\u533a\u95f4\uff0c\u56e0\u4e3a\u5e8f\u5217\u5355\u8c03\u9012\u589e\uff0c\u8bc1\u660e \\(mid\\) \u4e4b\u540e\u7684 \\(a\\) \u90fd\u5fc5\u7136 \\(\\ge x\\)\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7f29\u5c0f\u7b54\u6848\u533a\u95f4\uff0c\u4ee4 \\(r = mid\\)\u3002</p> <p>\u53cd\u4e4b\uff0c\u8bc1\u660e \\([1, mid]\\) \u90fd\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u6240\u4ee5\u7b54\u6848\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u80af\u5b9a\u4e0d\u662f \\(mid\\)\uff0c\u6240\u4ee5\u4ee4 \\(l = mid + 1\\)\u3002</p> <p>\u5f53 \\(l = r\\)\uff0c\u5373\u7b54\u6848\u533a\u95f4\u7f29\u5c0f\u4e3a\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u7684 \\(a_l\\) \u5c31\u662f\u7b54\u6848\u3002</p> <p>\u5982\u679c\u9700\u8981\u5224\u65ad\u65e0\u89e3\uff0c\u5f00\u59cb\u65f6\u4ee4 \\(r = n + 1\\) \uff0c\u5982\u679c\u6700\u540e \\(l = r = n + 1\\) \uff0c\u90a3\u4e48\u65e0\u89e3\u3002</p> <p>\u8fd9\u79cd\u5199\u6cd5\u4e0b \\(mid\\) \u6c38\u8fdc\u4e0d\u4f1a\u53d6\u5230 \\(r\\)\uff0c\u56e0\u4e3a\u5982\u679c \\(mid\\) \u8981\u53d6\u5230 \\(r\\)\uff0c\u5c31\u5fc5\u987b\u8ba9 \\(l\\) \u4e0d\u65ad\u6536\u7f29\u8fc7\u6765\uff0c\u800c\u5f53 \\(l = r\\) \u65f6\uff0c\u5faa\u73af\u5df2\u7ecf\u7ed3\u675f\u4e86\uff0c\u6240\u4ee5 \\(mid\\) \u4e0d\u53ef\u80fd\u53d6\u5230 \\(r\\)\u3002</p> <p>\u539f\u672c\u7684\u4e8c\u5206\u533a\u95f4\u662f \\([1, n]\\)\uff0c\u73b0\u5728\u5c06\u5176\u6269\u5927\u4e00\u683c\u53d8\u4e3a \\([1, n + 1]\\)\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8d8a\u754c\u7684\u4e0b\u6807\u672c\u8eab\u7684\u610f\u4e49\u5c31\u662f\u201c\u65e0\u89e3\u201d\uff0c\u7c7b\u4f3c stl \u5bb9\u5668\u7684 <code>end()</code>\u3002</p> <pre><code>int l = 1, r = n; // \u5224\u65e0\u89e3\u5219\u4ee4 r = n + 1\uff0c\u8fd9\u79cd\u5199\u6cd5 mid \u6c38\u8fdc\u4e0d\u4f1a\u53d6\u5230 r\nwhile(l &lt; r) {\nint mid = (l + r) &gt;&gt; 1;\nif(a[mid] &gt;= x) r = mid; // mid \u4e5f\u53ef\u80fd\u662f\u7b54\u6848\uff0c\u4e5f\u8981\u53d6\u3002\nelse l = mid + 1;\n} ans = a[l];\n</code></pre> <p>\u5982\u679c\u95ee\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u4e5f\u5c31\u662f\u53ef\u884c\u533a\u95f4\u5728 \\(mid\\) \u5de6\u4fa7\uff0c\u53cd\u8fc7\u6765\u5373\u53ef\uff1a</p> <p>\u53ea\u4e0d\u8fc7\u4e3a\u4e86\u8ba9\u8d8a\u754c\u503c\u4e3a \\(0\\)\uff0c\u9700\u8981\u8ba9 \\(mid = \\lfloor (l + r + 1) / 2 \\rfloor\\)\u3002</p> <p>\u7406\u89e3\u65b9\u5f0f\u540c\u4e0a\u3002</p> <pre><code>int l = 1, r = n; // \u5224\u65e0\u89e3\u5219\u4ee4 l = 0\uff0c\u8fd9\u79cd\u5199\u6cd5 mid \u6c38\u8fdc\u4e0d\u4f1a\u53d6\u5230 l\nwhile(l &lt; r) {\nint mid =(l + r + 1) &gt;&gt; 1;\nif(a[mid] &lt;= x) l = mid; // mid \u4e5f\u53ef\u80fd\u662f\u7b54\u6848\uff0c\u4e5f\u8981\u53d6\u3002\nelse r = mid - 1;\n} ans = a[l];\n</code></pre> <p>\u4e00\u5f20\u56fe\u7406\u89e3\uff0c\u4e0b\u56fe\u7eff\u8272\u4e3a\u53ef\u884c\u533a\u95f4\uff1a</p> <p></p> <p>upd on 01.23.23\uff1a\u6628\u5929\u5728 uoj \u7fa4\u91cc\u56de\u7b54\u4e86\u4e00\u4f4d\u5c0f\u670b\u53cb\u7684\u95ee\u9898\u3002</p> <p>\u4e5f\u7b97\u662f\u6709\u4e9b\u65b0\u7684\u60f3\u6cd5\u5427\uff0c\u5c31\u662f\u5176\u5b9e\u4e8c\u5206\u7684\u5199\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u533a\u522b\u4e00\u822c\u5728\u4e8e\u5bf9\u7b54\u6848\u533a\u95f4\u7684\u6536\u7f29\u4e0a\u3002</p> <p>\u6709\u7684\u5199\u6cd5\u662f\u4e0d\u7ba1 mid \u662f\u5426 valid \u90fd\u8981\u53d6 mid\uff0c\u6709\u7684\u5199\u6cd5\u662f\u5de6\u95ed\u53f3\u5f00\uff0c\u6709\u7684\u5199\u6cd5\u662f\u5de6\u5f00\u53f3\u95ed\u3002</p> <p>\u7136\u540e\u5faa\u73af\u505c\u6b62\u7684\u9650\u5236\u4e5f\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u5bfc\u81f4\u8bb0\u5f55\u7b54\u6848\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u8fd9\u4e2a\u8981\u81ea\u5df1\u53bb\u533a\u5206\uff0c\u4e0d\u80fd\u778e\u5199\uff08</p> <p>\u867d\u7136\u6211\u7528\u7684\u5199\u6cd5\u533a\u5206\u4e86\u4e24\u79cd\u65b9\u5f0f\uff0c\u4f46\u662f\u76f8\u5bf9\u6765\u8bf4\u4e0d\u90a3\u4e48\u5bb9\u6613\u7406\u89e3\u51fa\u9519\uff1f</p> <p>\u602a\u4e0d\u5f97 Programming Pearl \u8bf4\u53ea\u6709 \\(20\\%\\) \u7684\u7a0b\u5e8f\u5458\u80fd\u5199\u5bf9\u4e8c\u5206\uff08\uff08\u56e0\u4e3a\u5f88\u591a\u7a0b\u5e8f\u5458\u90fd\u662f\u7f3a\u4e4f\u601d\u8003\u7684\u5427\uff01</p>"}, {"location": "algor/basic/binary-search/#_4", "title": "\u5b9e\u6570\u57df\u4e8c\u5206", "text": "<p>\u548c\u6574\u6570\u57df\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8fd8\u9700\u8981\u8bbe\u7f6e \\(eps\\) \u6765\u907f\u514d\u7cbe\u5ea6\u8bef\u5dee\u3002</p> <p>\u56e0\u4e3a\u662f\u5b9e\u6570\u57df\u4e0a\u7684\u4e8c\u5206\u4e86\uff0c\u7528\u4e4b\u524d\u90a3\u79cd <code>+-1</code> \u7684\u65b9\u5f0f\u7cbe\u5ea6\u662f\u5b8c\u5168\u4e0d\u591f\u7684\uff08</p> <p>\u6240\u4ee5\u5c31\u4e0d\u7ba1\u662f\u5426\u5408\u6cd5\u90fd\u6536\u7f29\u5230 mid\uff0c\u6240\u4ee5\u8981\u8bb0\u5f55\u7b54\u6848\u800c\u4e0d\u662f\u53ef\u4ee5\u76f4\u63a5\u7528\u4e0b\u6807\u8f93\u51fa\u3002</p> <pre><code>double l = 0.0, r = (double)(1e9 + 7), ans;\nwhile(l + eps &lt; r){\ndouble mid = (l + r) / 2;\nif(valid(mid)) r = mid, ans = mid;\nelse l = mid;\n}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u8ba1\u7b97\u4e4b\u540e\u8bbe\u7f6e\u6b21\u6570\u4e8c\u5206\u3002</p>"}, {"location": "algor/basic/binary-search/#_5", "title": "\u4e8c\u5206\u7b54\u6848", "text": "<p>\u5982\u679c\u4e00\u4e2a\u6700\u4f18\u89e3\u95ee\u9898\u7684\u6700\u4f18\u89e3\u662f \\(x\\) \uff0c\u5e76\u4e14 \\(x\\) \u7684\u4e00\u8fb9\u4e0d\u5408\u6cd5\uff0c\u4e00\u8fb9\u5408\u6cd5\uff0c\u5219\u8fd9\u4e2a\u95ee\u9898\u5177\u6709\u5355\u8c03\u6027\u3002</p> <p>\u53ef\u4ee5\u5728\u6bcf\u6b21\u4e8c\u5206\u7684\u65f6\u5019\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u65b9\u6848\uff0c\u4f7f\u5f97\u89e3\u4e3a \\(mid\\) \u3002</p> <p>\u4e8c\u5206\u7b54\u6848 \\(x\\) \u5e76\u8fdb\u884c\u5224\u5b9a\u3002</p> <p>\u7136\u540e\u6839\u636e\u53ef\u884c\u533a\u95f4\u7684\u65b9\u5f0f\u9009\u62e9\u4e8c\u5206\u65b9\u5f0f\u5373\u53ef\u3002</p> <p>\u6b64\u7c7b\u95ee\u9898\u7684\u663e\u8457\u7279\u70b9\u5c31\u662f\u201c\u6700\u5c0f\u503c\u6700\u5927\u201d\uff0c\u201c\u6700\u5927\u503c\u6700\u5c0f\u201d\u3002</p> <p>\u4e0d\u8fc7\u4e5f\u6709\u4f8b\u5916\uff0c\u6bd4\u5982 AGC006D\u3002</p>"}, {"location": "algor/basic/binary-search/#stl", "title": "STL \u4e8c\u5206", "text": "<ul> <li><code>lower_bound</code> \uff1a\u5728\u6709\u5e8f\u5e8f\u5217\u67e5\u627e\u5927\u4e8e\u7b49\u4e8e \\(x\\) \u7684\u7b2c\u4e00\u4e2a\u3002</li> <li><code>upper_bound</code> \uff1a\u5927\u4e8e \\(x\\)\u3002</li> </ul> <p>\u5982\u679c\u7c7b\u4f3c <code>set</code> \uff0c\u81ea\u5df1\u5e26\u6709 <code>lower_bound</code>\u3002</p> <p>\u5c31\u4e00\u5b9a\u9009\u62e9\u5bb9\u5668\u81ea\u8eab\u7684\uff1a<code>s.lower_bound(x)</code> \u800c\u4e0d\u662f <code>lower_bound(s.begin(),s.end(),x)</code>\u3002</p> <p>\u8fd9\u6837\u6548\u7387\u66f4\u9ad8\uff0c\u56e0\u4e3a \\(s\\) \u672c\u8eab\u4e0d\u662f\u7c7b\u4f3c\u6570\u7ec4\u90a3\u6837\u7684\u968f\u673a\u8bbf\u95ee\uff08\u4ed6\u6ca1\u6709\u652f\u6301\u968f\u673a\u8bbf\u95ee\u7684\u8fed\u4ee3\u5668\uff09\uff0c\u4ed6\u662f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u6240\u4ee5\u8981\u7528 STL \u5728\u6811\u4e0a\u7ed9\u4f60\u5b9e\u73b0\u7684 <code>lower_bound</code>\u3002</p>"}, {"location": "algor/basic/difference-and-prefix-sum/", "title": "\u524d\u7f00\u548c & \u5dee\u5206", "text": ""}, {"location": "algor/basic/difference-and-prefix-sum/#_1", "title": "\u524d\u7f00\u548c", "text": ""}, {"location": "algor/basic/difference-and-prefix-sum/#_2", "title": "\u4e00\u7ef4\u524d\u7f00\u548c", "text": "<p>\u53ef\u4ee5\u5b9e\u73b0 \\(\\text{O}(n)\\) \u9884\u5904\u7406\uff0c\\(\\text{O}(1)\\) \u8be2\u95ee\u533a\u95f4\u548c\u3002</p> <p>\u4ee4 \\(sum_i\\) \u8868\u793a\u533a\u95f4 \\([0,i]\\) \u7684\u524d\u7f00\u548c\u3002</p> <p>\u7279\u522b\u7684\uff0c\\(a_0=0\\)\u3002</p> <p>\u90a3\u4e48\u6bcf\u6b21\u7d2f\u52a0\u5373\u53ef\uff0c\u67e5\u8be2\u533a\u95f4 \\([l,r]\\) \u7684\u548c\u53ea\u9700\u8981\u8f93\u51fa \\(sum_r-sum_{l-1}\\)\u3002</p> <pre><code>int a[si],sum[si]; a[0]=sum[0]=0;\nfor(register int i=1;i&lt;=n;++i){\nscanf(\"%d\",&amp;a[i]),sum[i]=sum[i-1]+a[i];\n} int l,r; scanf(\"%d%d\",&amp;l,&amp;r),printf(\"%d\\n\",sum[r]-sum[l-1]);\n</code></pre>"}, {"location": "algor/basic/difference-and-prefix-sum/#_3", "title": "\u4e8c\u7ef4\u524d\u7f00\u548c", "text": "<p>\u53ef\u4ee5\u5b9e\u73b0 \\(\\text{O}(n^2)\\) \u9884\u5904\u7406\uff0c\\(\\text{O}(1)\\) \u8be2\u95ee\u77e9\u9635\u548c\u3002</p> <p>\u4ee4 \\(sum_{i,j}\\) \u8868\u793a\u5de6\u4e0a\u89d2\u4e3a \\((1,1)\\) \uff0c\u53f3\u4e0b\u89d2\u4e3a \\((i,j)\\) \u7684\u77e9\u9635\u548c\u3002</p> <p>\u8003\u8651\u5bb9\u65a5\uff0c\u9884\u5904\u7406\u7684\u65f6\u5019\u4ee4 \\(sum_{i,j}=sum_{i-1,j}+sum_{i,j-1}-sum_{i-1,j-1}+a[i][j]\\)\u3002</p> <p></p> <p>\u4ecd\u7136\u8003\u8651\u5bb9\u65a5\uff0c\u8be2\u95ee\u5de6\u4e0a\u89d2\u4e3a \\((x_1,y_1)\\) \uff0c\u53f3\u4e0b\u89d2\u4e3a \\((x_2,y_2)\\) \u7684\u5b50\u77e9\u9635\u5219\u53ea\u9700\u8981\uff1a</p> <p>\\(ans=sum_{x_2,y_2}-sum_{x_1,y_2}-sum_{x_2,y_1}+sum_{x_1,y_1}\\) \u3002</p> <p></p> <pre><code>int a[si][si],sum[si][si];\nmemset(sum,0,sizeof sum);\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1;j&lt;=m;++j){\nscanf(\"%d\",&amp;a[i][j]),sum[i][j]+=a[i][j];\n}\n}\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1;j&lt;=m;++j){\nsum[i][j]+=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1];\n}\n}\nint x,xx,y,yy; scanf(\"%d%d%d%d\",&amp;x,&amp;y,&amp;xx,&amp;yy);\nprintf(\"%d\\n\",sum[xx][yy]-sum[x][yy]-sum[xx][y]+sum[x][y]);\n</code></pre>"}, {"location": "algor/basic/difference-and-prefix-sum/#_4", "title": "\u5dee\u5206", "text": ""}, {"location": "algor/basic/difference-and-prefix-sum/#_5", "title": "\u4e00\u7ef4\u5dee\u5206", "text": "<p>\u53ef\u4ee5\u5b9e\u73b0 \\(\\text{O}(1)\\) \u4fee\u6539\uff0c\\(\\text{O}(n)\\) \u67e5\u8be2\u3002</p> <p>\u4e00\u4e2a\u4fbf\u4e8e\u7406\u89e3\u7684\u7279\u70b9\u5c31\u662f\uff0c\u539f\u6570\u7ec4\u5c31\u662f\u5dee\u5206\u5e8f\u5217\u7684\u524d\u7f00\u548c\u3002</p> <p>\u5b9a\u4e49\u5dee\u5206\u5e8f\u5217 \\(c_i=\\begin{cases}a_1 &amp; i=1 \\\\ a_i-a_{i-1} &amp; \\text{otherwise.}\\end{cases}\\)</p> <p>\u7136\u540e\u5982\u679c\u8981\u4fee\u6539 \\([l,r]\\) \uff0c\u90a3\u4e48\u7ed9 \\(c[l]\\) \u52a0\u4e0a \\(d\\)\uff0c\\(c[r+1]\\) \u51cf\u53bb \\(d\\) \u3002</p> <p>\u5176\u5b9e\u5f88\u597d\u7406\u89e3\uff0c\u8981\u8ba9 \\(c\\) \u7684\u524d\u7f00\u548c\u6570\u7ec4\u7684 \\([l,r]\\) \u6539\u53d8\uff0c\u90a3\u5148\u5728 \\(l\\) \u8fd9\u513f\u52a0\u4e0a \\(d\\) \uff0c\u8ba9 \\(a[l]\\to a[n]\\) \u90fd\u591a\u4e00\u4e2a \\(d\\) \u3002</p> <p>\u7136\u540e\u5728 \\(r+1\\) \u8fd9\u513f\u51cf\u53bb \\(d\\) \uff0c\u8ba9 \\(a[r+1] \\to a[n]\\) \u90fd\u5c11\u4e00\u4e2a \\(d\\) \u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>int a[si],c[si];\nscanf(\"%d\",&amp;a[1]),c[0]=0,c[1]=a[1];\nfor(register int i=2;i&lt;=n;++i){\nscanf(\"%d\",&amp;a[i]),c[i]=a[i]-a[i-1];\n} int l,r,d; scanf(\"%d%d%d\",&amp;l,&amp;r,&amp;d),c[l]+=d,c[r+1]-=d;\nfor(register int i=1;i&lt;=n;++i){\nc[i]+=c[i-1],printf(\"%d\\n\",c[i]);\n} // \u505a\u524d\u7f00\u548c\u6062\u590d\u5e8f\u5217\u3002\n</code></pre>"}, {"location": "algor/basic/difference-and-prefix-sum/#_6", "title": "\u4e8c\u7ef4\u5dee\u5206", "text": "<p>\u53ef\u4ee5\u5b9e\u73b0 \\(\\text{O}(1)\\) \u4fee\u6539\uff0c \\(\\text{O}(n^2)\\) \u67e5\u8be2\u3002</p> <p>\u5b9a\u4e49\u5dee\u5206\u77e9\u9635 \\(c_{i,j}\\) \uff0c\u6ee1\u8db3 \\(a_{i,j}\\) \u4e3a \\(c_{i,j}\\) \u7684\u524d\u7f00\u548c\u77e9\u9635\u3002</p> <p>\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u601d\u60f3\u53ef\u4ee5\u5f97\u5230\uff1a</p> <p>\\(a_{i,j}=a_{i-1,j}+a_{i,j-1}-a_{i-1,j-1}+c_{i,j}\\)\u3002</p> <p>\u90a3\u4e48 \\(c_{i,j}=a_{i,j}-a_{i-1,j}-a_{i,j-1}+a_{i-1,j-1}\\)\u3002</p> <p>\u7136\u540e\u8003\u8651\u600e\u4e48\u6837\u8fdb\u884c\u77e9\u9635\u7ef4\u62a4\u3002</p> <p>\u7c7b\u4f3c\u4e00\u7ef4\u5dee\u5206\u7684\u601d\u60f3\uff0c\u6211\u6253\u7b97\u5728\u7aef\u70b9\u5904\u8fdb\u884c\u7ef4\u62a4\u3002</p> <p>\u6bd4\u5982\u7ed9 \\((x_1,y_1)\\) \u4e3a\u5de6\u4e0a\u89d2\uff0c\\((x_2,y_2)\\) \u4e3a\u53f3\u4e0b\u89d2\u7684\u5b50\u77e9\u9635\u5168\u90e8\u52a0\u4e0a \\(d\\) \uff0c\u53ef\u4ee5\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u8fd9\u91cc\u8003\u8651\u5dee\u5206\u3002</p> <p>\u9996\u5148\u5c1d\u8bd5\u7ed9 \\(c_{x_1,y_1}\\) \u52a0\u4e0a \\(d\\) \uff0c\u90a3\u4e48\u53d1\u73b0\u4ece \\((x_1,y_1)\\) \u4e00\u76f4\u5230\u6574\u4e2a\u77e9\u9635\u7684\u53f3\u4e0b\u89d2\u90fd\u88ab\u52a0\u4e86 \\(d\\) \uff0c\u7136\u540e\u6211\u4eec\u53c8\u9700\u8981\u4fdd\u7559 \\((x_1,y_1) \\to (x_2,y_2)\\)\u3002</p> <p>\u90a3\u4e48\u7528\u5bb9\u65a5\u601d\u60f3\uff0c\u8ba9 \\(c_{x_1,y_2+1}\\)\uff0c\u548c \\(c_{x_2+1,y_1}\\) \u5168\u90e8\u51cf\u53bb \\(d\\) \uff0c\u7136\u540e\u53d1\u73b0\u6709\u4e2a\u90e8\u5206\u88ab\u591a\u51cf\u53bb\u4e86\uff0c\u662f \\(c_{x_2+1,y_2+1}\\)\uff0c\u6240\u4ee5\u7ed9\u5b83\u52a0\u56de\u6765\u3002</p> <p></p> <p>\u90a3\u4e48\u4fee\u6539\u5c31\u5316\u4e3a\u4e86\u56db\u6b65\u3002</p> <pre><code>int a[si][si],c[si][si];\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1;j&lt;=m;++j){\nscanf(\"%d\",&amp;a[i][j]);\nc[i][j]=a[i][j]-a[i-1][j]-a[i][j-1]+a[i-1][j-1];\n}\n} int x,xx,y,yy,d; scanf(\"%d%d%d%d%d\",&amp;x,&amp;y,&amp;xx,&amp;yy,&amp;d);\nc[x][y]+=d,c[x][yy+1]-=d,c[xx+1][y]-=d,c[xx+1][yy+1]+=d;\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1;j&lt;=m;++j){\na[i][j]=a[i-1][j]+a[i][j-1]-a[i-1][j-1]+c[i][j];\n}\n} // \u505a\u4e8c\u7ef4\u524d\u7f00\u548c\u8fd8\u539f\u77e9\u9635\u3002\n</code></pre> <p>\u53ea\u8981\u6ce8\u610f\u5dee\u5206\u548c\u524d\u7f00\u548c\u7684\u7d27\u5bc6\u5173\u7cfb\uff0c\u73b0\u63a8\u90fd\u662f\u53ef\u4ee5\u7684\u3002</p>"}, {"location": "algor/basic/greedy/", "title": "\u8d2a\u5fc3", "text": ""}, {"location": "algor/basic/greedy/#_1", "title": "\u6982\u8ff0", "text": "<p>\u8d2a\u5fc3\uff0c\u4e3b\u8981\u7684\u601d\u60f3\u5c31\u662f\u201c\u53ea\u770b\u773c\u524d\u7684\u6700\u4f18\u5229\u76ca\u201d\u3002</p> <p>\u4e2a\u4eba\u8ba4\u4e3a\u8d2a\u5fc3\u7b97\u6cd5\u7684\u91cd\u70b9\u5c31\u5728\u4e8e\u731c\u3002</p> <p>\u5c31\u662f\u8981\u5148\u53bb\u5927\u80c6\u731c\u6d4b\u201c\u5c40\u90e8\u6700\u4f18\u80fd\u63a8\u5e7f\u5230\u5168\u5c40\u6700\u4f18\u201d\uff0c\u7136\u540e\u53bb\u627e\u51fa\u201c\u5c40\u90e8\u6700\u4f18\u201d\u3002</p> <p>\u7136\u540e\u5229\u7528\u4e0b\u9762\u63d0\u5230\u7684\u65b9\u5f0f\u53bb\u8bc1\u660e/\u8bc1\u4f2a\u3002</p>"}, {"location": "algor/basic/greedy/#_2", "title": "\u8303\u56f4\u7f29\u653e\u6cd5", "text": "<p>\u4e00\u822c\u9700\u8981\u8bc1\u660e\u4efb\u4f55\u5bf9\u4e8e\u5c40\u90e8\u201c\u6700\u4f18\u201d\u51b3\u7b56\u7684\u4f5c\u7528\u8303\u56f4\u7684\u6269\u5c55\u4e0d\u4f1a\u5f71\u54cd\u5168\u5c40\u6700\u4f18\u89e3\uff08\u4e0d\u9020\u6210\u6574\u4f53\u7ed3\u679c\u53d8\u5dee\uff09\u3002</p> <p>\u5e38\u7528\u4e8e\u4e00\u4e9b\u51b3\u7b56\u5177\u6709\u524d\u540e\u5173\u8054\u7684\u95ee\u9898\u5f53\u4e2d\uff08\u8fd9\u79cd\u8981\u7279\u522b\u5c0f\u5fc3\uff0c\u5bb9\u6613\u548c DP \u641e\u6df7\u6dc6\u3002\uff09</p> \u4f8b\u9898\uff1aPOJ3614 Sunscreen <p>To avoid unsightly burns while tanning, each of the C (1 \u2264 C \u2264 2500) cows must cover her hide with sunscreen when they're at the beach. Cow i has a minimum and maximum SPF rating (1 \u2264 minSPFi \u2264 1,000; minSPFi \u2264 maxSPFi \u2264 1,000) that will work. If the SPF rating is too low, the cow suffers sunburn; if the SPF rating is too high, the cow doesn't tan at all........</p> <p>The cows have a picnic basket with L (1 \u2264 L \u2264 2500) bottles of sunscreen lotion, each bottle i with an SPF rating SPFi (1 \u2264 SPFi \u2264 1,000). Lotion bottle i can cover coveri cows with lotion. A cow may lotion from only one bottle.</p> <p>What is the maximum number of cows that can protect themselves while tanning given the available lotions? </p> \u9898\u89e3 <p>\u6211\u4eec\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u60f3\u6cd5\uff1a\u524d\u9762\u7684\u725b\u6d82\u9632\u6652\u971c\u7684\u65f6\u5019\uff0c\u8981\u5c3d\u91cf\u8ba9\u540e\u9762\u80fd\u66f4\u591a\u7684\u6d82\uff0c\u8fd9\u6837\u7b54\u6848\u624d\u80fd\u66f4\u4f18\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u8fdb\u884c\u6392\u5e8f\uff0c\u4e00\u4e2a\u6bd4\u8f83 naive \u7684\u60f3\u6cd5\u662f\uff0c\u6309\u7167 \\(\\text{minSPF}\\) \u5347\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u5c3d\u91cf\u9009\u80fd\u7528\u7684\u9632\u6652\u971c\u91cc\u9762\u6700\u5c0f\u7684\u4e00\u4e2a\u3002</p> <p>\u8fd9\u6837\u770b\u8d77\u6765\u53ef\u4ee5\u8ba9\u540e\u9762\u7684\u6709\u66f4\u591a\u9009\u62e9\uff0c\u4f46\u662f\u80fd\u4e25\u8c28\u8bc1\u660e\u5417\uff1f</p> <p>\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u70b9\u7684\u51b3\u7b56\u4f1a\u5f71\u54cd\u5230\u4e4b\u540e\u7684\u51b3\u7b56\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4f7f\u7528\u8303\u56f4\u653e\u7f29\u6cd5\u8bc1\u660e\u8fd9\u4e2a\u7ed3\u8bba\u3002</p> <p>\u4e5f\u5c31\u662f\u53bb\u8bc1\u660e\u6309\u7167\u8fd9\u79cd\u65b9\u5f0f\u6392\u5e8f\u4e4b\u540e\uff0c\u6bcf\u6b21\u9009\u53d6\u80fd\u7528\u7684\u91cc\u9762\u6700\u5c0f\u7684\u4e00\u4e2a\uff0c\u4e0d\u4f1a\u8ba9\u540e\u9762\u7684\u7ed3\u679c\u53d8\u5dee\u3002</p> <p>\u8003\u8651\u5f53\u524d\u4e3a\u7b2c \\(i\\) \u5934\u725b\uff0c\u5bf9\u4e8e\u5b83\u80fd\u4f7f\u7528\u7684\u4efb\u610f\u4e24\u79cd\u9632\u6652\u971c \\(x,y\\)\uff0c\u5047\u8bbe \\(\\text{SPF}(x) &lt; \\text{SPF}(y)\\)\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u53bb\u9009\u62e9 \\(x\\)\uff0c\u770b\u4e00\u4e0b\u5bf9\u4e8e\u540e\u9762\u4f1a\u4e0d\u4f1a\u6709\u4ec0\u4e48\u5f71\u54cd\uff0c\u663e\u7136\uff0c\u5bf9\u4e8e\u540e\u9762\u7684\u725b\uff0c\u6709\uff1a</p> <ul> <li>\\(x,y\\) \u90fd\u6ca1\u6cd5\u9002\u5408</li> <li>\\(x,y\\) \u90fd\u80fd\u9002\u5408</li> <li>\\(x\\) \u9002\u5408\u800c \\(y\\) \u4e0d\u9002\u5408</li> <li>\\(y\\) \u9002\u5408\u800c \\(x\\) \u4e0d\u9002\u5408</li> </ul> <p>\u8fd9\u56db\u79cd\u60c5\u51b5\uff0c\u7b2c\u4e00\u79cd\u548c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u7ba1\u6211\u4eec\u662f\u9009 \\(x\\) \u8fd8\u662f\u9009 \\(y\\) \uff0c\u7ed3\u679c\u90fd\u4e0d\u4f1a\u53d8\u5dee\uff0c\u53ef\u4ee5\u4e0d\u7528\u7ba1\u3002</p> <p>\u7b2c\u56db\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9009\u4e86 \\(x\\)\uff0c\u5bf9\u540e\u9762\u4e5f\u4e0d\u4f1a\u6709\u5f71\u54cd\uff0c\u552f\u4e00\u4f1a\u9020\u6210\u5f71\u54cd\u7684\u5c31\u662f\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u5176\u5b83\u4e09\u8005\u90fd\u6709\u6bd4\u8f83\u663e\u7136\u7684\u4f8b\u5b50\u80fd\u8bc1\u660e\u4ed6\u4eec\u4f1a\u51fa\u73b0\uff0c\u73b0\u5728\u8003\u8651\u7b2c\u4e09\u79cd\u60c5\u51b5\u4f1a\u4e0d\u4f1a\u51fa\u73b0  \uff0c\u597d\u5224\u65ad\u8fd9\u4e2a\u8d2a\u5fc3\u65b9\u5f0f\u662f\u5426\u6b63\u786e\u3002</p> <p>\u73b0\u5728 \\(\\text{minSPF}\\) \u7684\u5355\u8c03\u6027\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u5047\u8bbe \\(\\text{maxSPF}\\) \u4e5f\u5355\u8c03\u9012\u589e\u7684\u8bdd\uff0c\u90a3\u4e48\u7b2c\u4e09\u79cd\u60c5\u51b5\u5c31\u4e0d\u5b58\u5728\uff0c\u6240\u4ee5\u770b\u8d77\u6765\u8fd9\u4e2a\u8d2a\u5fc3\u662f\u5bf9\u7684\u3002</p> <p>\u4f46\u662f\u95ee\u9898\u5c31\u5728\u4e8e\uff0c\\(\\text{maxSPF}\\) \u4e0d\u4e00\u5b9a\u5355\u8c03\u9012\u589e\u554a\uff01\u6709\u53ef\u80fd\u7a81\u7136\u201c\u7f29\u56de\u6765\u201d\u4e86\u3002</p> <p>\u6bd4\u5982\u8fd9\u6837\uff1a</p> <pre><code>1 2 3 4 5 6\n|_________|\n|___|\n|___|\n\u725b\uff1a[1, 6]; [2, 4]; [3, 5].\n\u9632\u6652\u971c : SPF = 3, cover = 1;\nSPF = 6, cover = 1;\n</code></pre> <p>\u7136\u540e\u4f60\u5c31\u53d1\u73b0\uff0c\u7b2c\u4e09\u79cd\u60c5\u51b5\u662f\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u8fd9\u79cd\u8d2a\u5fc3\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u51b3\u7b56\u4f1a\u5bfc\u81f4\u540e\u9762\u7684\u5168\u5c40\u7b54\u6848\u53d8\u5dee\u3002</p> <p>\u6709\u6ca1\u6709\u66f4\u4f18\u79c0\u7684\u8d2a\u5fc3\u65b9\u5f0f\uff1f\u663e\u7136\u4e00\u76f4\u9009\u6700\u5c0f\u7684\u80fd\u9009\u7684\u9632\u6652\u971c\uff0c\u5728 \\(\\text{minSPF}\\) \u6216\u8005 \\(\\text{maxSPF}\\) \u5347\u5e8f\u6392\u5e8f\u7684\u65f6\u5019\u7684\u5927\u65b9\u5411\u4e00\u5b9a\u662f\u5bf9\u7684\u3002</p> <p>\u8fd9\u91cc\u6392 \\(\\text{minSPF}\\) \u4e0d\u884c\uff0c\u4e3a\u5565\u4e0d\u6392 \\(\\text{maxSPF}\\) \u5462\uff1f\u6240\u4ee5\u73b0\u5728\u8003\u8651\uff0c\u6309\u7167 \\(\\text{maxSPF}\\) \u5347\u5e8f\u6392\u5e8f\uff0c\u6bcf\u6b21\u8003\u8651\u9009\u9002\u5408\u7684\u9632\u6652\u971c\u91cc\u9762 \\(\\text{SPF}\\) \u6700\u5c0f\u7684\u3002</p> <p>\u4eff\u7167\u4e0a\u9762\u7684\u65b9\u5f0f\uff0c\u8003\u8651\u6bcf\u4e00\u4e2a\u70b9\u4efb\u610f\u7684\u4e24\u79cd\u51b3\u7b56 \\(x,y\\)\u3002\u53d1\u73b0\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4ecd\u65e7\u4e0d\u7528\u7ba1\u3002</p> <p>\u7b2c\u56db\u79cd\u60c5\u51b5\u4e5f\u53ef\u80fd\u51fa\u73b0\uff0c\u4e0d\u8fc7\u4e5f\u4e0d\u7528\u62c5\u5fc3\uff0c\u7136\u540e\u7b2c\u4e09\u79cd\u60c5\u51b5\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u62ff\u4e0a\u9762\u7684\u53cd\u4f8b\u6765\u4e3e\u4e2a\u4f8b\u5b50\u3002</p> <pre><code>1 2 3 4 5 6\n|___|\n|___|\n|_________|\n\u725b\uff1a[1, 6]; [2, 4]; [3, 5].\n\u9632\u6652\u971c : SPF = 3, cover = 1;\nSPF = 6, cover = 1;\n</code></pre> <p>\u7528\u8303\u56f4\u7f29\u653e\u6cd5\uff0c\u53ef\u4ee5\u77e5\u9053\u7b2c\u4e8c\u79cd\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\u3002</p> <p>\u5f53\u7136\uff0c\u5982\u679c\u8003\u8651\u9009\u5927\u7684\uff0c\u90a3\u5c31\u662f \\(\\text{minSPF}\\) \u964d\u5e8f\u6392\u5e8f\uff0c\u9053\u7406\u4e00\u6837\uff0c\u4e0d\u8fc7\u5c31\u662f\u6392\u5217\u4e00\u4e0b \\(\\text{min/maxSPF}\\) \u548c \\(\\text{SPF}\\) \u7684\u6392\u5217\u65b9\u5f0f\u800c\u5df2\u3002</p> \u5b9e\u73b0 <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\n// using i64 = long long;\n\nconst int si = 3e4 + 10;\n\nint C, L;\nstruct Cows {\nint maxSPF, minSPF;\nbool operator &lt; (const Cows &amp;b) const {\nif(maxSPF == b.maxSPF) return minSPF &lt; b.minSPF;\nreturn maxSPF &lt; b.maxSPF;\n}\n}a[si];\nstruct Fk {\nint SPF, cover;\nbool operator &lt; (const Fk &amp;b) const {\nreturn SPF &lt; b.SPF;\n}\n}b[si];\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; C &gt;&gt; L;\nfor(int i = 1; i &lt;= C; ++i) cin &gt;&gt; a[i].minSPF &gt;&gt; a[i].maxSPF;\nfor(int i = 1; i &lt;= L; ++i)\ncin &gt;&gt; b[i].SPF &gt;&gt; b[i].cover;\n\nsort(a + 1, a + 1 + C);\nsort(b + 1, b + 1 + L);\n\nint ans = 0;\n// int current = 1;\nfor(int i = 1; i &lt;= C; ++i) {\nfor(int j = 1; j &lt;= L; ++j) {\nif(a[i].minSPF &lt;= b[j].SPF &amp;&amp; b[j].SPF &lt;= a[i].maxSPF &amp;&amp; b[j].cover != 0) {\nans++, b[j].cover--; break;\n}\n}\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> \u4f8b\u9898\uff1aPOJ3190 Stall Reservations <p>Oh those picky N (1 &lt;= N &lt;= 50,000) cows! They are so picky that each one will only be milked over some precise time interval A..B (1 &lt;= A &lt;= B &lt;= 1,000,000), which includes both times A and B. Obviously, FJ must create a reservation system to determine which stall each cow can be assigned for her milking time. Of course, no cow will share such a private moment with other cows.</p> <p>Help FJ by determining: The minimum number of stalls required in the barn so that each cow can have her private milking period An assignment of cows to these stalls over time Many answers are correct for each test dataset; a program will grade your answer.</p> \u9898\u89e3 <p>\u8fd9\u9898\u672c\u8d28\u4e0a\u5c31\u662f\u7ed9\u4f60\u82e5\u5e72\u4e2a\u533a\u95f4\uff0c\u8981\u4f60\u628a\u5b83\u4eec\u5206\u6210\u82e5\u5e72\u4e2a\u7ec4\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u7ec4\u91cc\u9762\u533a\u95f4\u4e0d\u76f8\u4ea4\uff0c\u6c42\u6700\u5c0f\u7684\u533a\u95f4\u6570\uff0c\u6784\u9020\u65b9\u6848\u3002</p> <p>\u548c CSPS2021T1 \u6781\u5ea6\u7c7b\u4f3c\uff0c\u6211\u5f53\u65f6\u5728\u573a\u4e0a\u60f3\u4e86\u65e0\u6570\u505a\u6cd5\uff0c\u5f88\u53ef\u60dc\u8d2a\u5fc3\u6ca1\u5b66\u597d\uff0c\u5bc4\u6389\u4e86\uff0c\u73b0\u5728\u771f\u7684\u662f\u6094\u6b7b\u4e86\u3002</p> <p>\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a\u66b4\u529b\uff1a\u76f4\u63a5\u7ef4\u62a4\u5f53\u524d\u755c\u680f\u7684\u4e2a\u6570 \\(tot\\)\uff0c\u5e76\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u755c\u680f\u5f53\u524d\u653e\u8fdb\u53bb\u7684\u725b\u7684\u7ed3\u675f\u65f6\u95f4\u3002</p> <p>\u7136\u540e\u8003\u8651\u5bf9\u4e8e\u725b\uff0c\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f\uff0c\u6bcf\u6b21\u5982\u679c\u5f53\u524d\u6709\u755c\u680f\u53ef\u7528\uff0c\u5c31\u653e\u8fdb\u53bb\uff0c\u5426\u5219\u65b0\u5efa\u4e00\u4e2a\u755c\u680f\u3002</p> <p>\u7136\u540e\u7528 <code>std::priority_queue</code> \u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u5230\u5f53\u524d\u6700\u65e9\u7ed3\u675f\u7684\u4e00\u4e2a\uff0c\u628a\u725b\u5c1d\u8bd5\u5f80\u8fd9\u4e2a\u91cc\u9762\u653e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n\\log n)\\)\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u8d2a\u5fc3\uff0c\u601d\u8003\u51fa\u6765\u5e94\u8be5\u4e0d\u96be\uff0c\u8003\u8651\u5982\u4f55\u8bc1\u660e\u8fd9\u4e2a\u8d2a\u5fc3\u3002</p> <p>\u5176\u5b9e\u5c31\u662f\uff0c\u56e0\u4e3a\u4f60\u6392\u8fc7\u5e8f\u4e86\uff0c\u6240\u4ee5\u7ed3\u675f\u7684\u65e9\u7684\u80fd\u5c3d\u91cf\u65e9\u7684\u653e\u4e00\u5934\u725b\u8fdb\u53bb\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u6d6a\u8d39\u65f6\u95f4\uff0c\u5bf9\u540e\u9762\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u5f71\u54cd\u3002</p> <p>\u6709\u4e00\u4e2a\u611f\u89c9\u662f\u53cd\u4f8b\u7684\u4e1c\u897f\uff1a\u4e07\u4e00\u6392\u5e8f\u8fc7\u540e\u524d\u4e00\u4e2a\u662f <code>[3, 6]</code>\uff0c\u540e\u4e00\u4e2a\u662f <code>[3,5]</code> \u600e\u4e48\u529e\uff1f</p> <p>\u5443\uff0c\u76f4\u63a5\u628a\u7ed3\u675f\u65f6\u95f4\u4e5f\u8ba1\u5165\u5173\u952e\u5b57\u5c31\u5b8c\u4e8b\u513f\u4e86\uff0c\u8fd9\u6837\u505a\u5c31\u80fd\u5c3d\u91cf\u8282\u7701\u65f6\u95f4\uff0c\u63d0\u5347\u6548\u7387\u3002</p> \u5b9e\u73b0 <pre><code>// author : black_trees\n\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\n// using i64 = long long;\n\nconst int si = 5e4 + 10;\n\nint n;\nstruct Cow {\nint l, r, id;\nbool operator &lt; (const Cow &amp;b) const {\nif(l == b.l) return r &lt; b.r;\nreturn l &lt; b.l;\n}\n}a[si];\nint ans[si];\nint tot = 0;\nstruct Stall {\nint id, ed;\nbool operator &lt; (const Stall &amp;b) const {\nreturn ed &gt; b.ed;\n}\n};\n\nstd::priority_queue&lt;Stall&gt; q;\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i].l &gt;&gt; a[i].r, a[i].id = i;\nsort(a + 1, a + 1 +n);\n\n// for(int i = 1; i &lt;= n; ++i)\n//  meow(i) &lt;&lt; \" \", meow(a[i].l) &lt;&lt; \" \", meow(a[i].r) &lt;&lt; endl;\n\ntot++; Stall tmp;\ntmp.id = tot, tmp.ed = a[1].r;\nq.push(tmp), ans[a[1].id] = 1;\n\nfor(int i = 2; i &lt;= n; ++i) {\nStall tp = q.top();\n// meow(i) &lt;&lt; \" \", meow(q.top().id) &lt;&lt; \" \", meow(q.top().ed) &lt;&lt; endl;   \nif(tp.ed &lt; a[i].l) {\nans[a[i].id] = tp.id;\nq.pop(), tp.ed = a[i].r, q.push(tp);\n}\nelse tmp.id = ++tot, tmp.ed = a[i].r, ans[a[i].id] = tot, q.push(tmp);\n}\n\ncout &lt;&lt; tot &lt;&lt; endl;\nfor(int i = 1; i &lt;= n; ++i)\ncout &lt;&lt; ans[i] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/basic/greedy/#_3", "title": "\u51b3\u7b56\u5305\u5bb9\u6027", "text": "<p>\u4e00\u822c\u662f\u8bc1\u660e\u5728\u4efb\u610f\u7684\u5c40\u9762\u4e0b\uff0c\u505a\u51fa\u5c40\u90e8\u6700\u4f18\u51b3\u7b56\u4e4b\u540e\uff0c\u8fd9\u4e2a\u51b3\u7b56\u5728\u95ee\u9898\u72b6\u6001\u7a7a\u95f4\u91cc\u7684\u53ef\u8fbe\u96c6\u5408\u5305\u542b\u4e86\u6240\u6709\u8fd9\u4e00\u6b65\u505a\u51fa\u5176\u5b83\u4efb\u610f\u51b3\u7b56\u7684\u53ef\u8fbe\u96c6\u5408\u3002</p> <p>\u4e5f\u5c31\u662f\u8fd9\u4e2a\u5c40\u90e8\u6700\u4f18\u51b3\u7b56\u63d0\u4f9b\u7684\u53ef\u80fd\u6027\u5305\u542b\u4e86\u5176\u5b83\u6240\u6709\u7b56\u7565\u7684\u53ef\u80fd\u6027\u3002</p> \u4f8b\u9898\uff1aPOJ1328 Radar Installation <p>Assume the coasting is an infinite straight line. Land is in one side of coasting, sea in the other. Each small island is a point locating in the sea side. And any radar installation, locating on the coasting, can only cover d distance, so an island in the sea can be covered by a radius installation, if the distance between them is at most d.</p> <p>We use Cartesian coordinate system, defining the coasting is the x-axis. The sea side is above x-axis, and the land side below. Given the position of each island in the sea, and given the distance of the coverage of the radar installation, your task is to write a program to find the minimal number of radar installations to cover all the islands. Note that the position of an island is represented by its x-y coordinates.</p> \u9898\u89e3 <p>\u5148\u7528\u52fe\u80a1\u5b9a\u7406\u628a\u6bcf\u4e2a Building \u5904\u7406\u4e00\u4e0b\uff0c\u4e5f\u5c31\u662f\u5904\u7406\u4e00\u4e0b \\(x\\) \u8f74\u4e0a\u7684\u54ea\u4e00\u4e2a\u533a\u95f4\u53ef\u4ee5\u8986\u76d6\u5b83\u3002</p> <p>\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff0c\u7ed9\u5b9a \\(n\\) \u4e2a\u533a\u95f4\uff0c\u7528\u6700\u5c11\u7684\u70b9\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u533a\u95f4\u90fd\u6709\u4e00\u4e2a\u70b9\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u8d2a\u5fc3\uff1a\u6309\u7167\u533a\u95f4\u5de6\u7aef\u70b9 \\(l\\) \u5347\u5e8f\u6392\u5e8f\uff0c\u7ef4\u62a4\u5f53\u524d\u6700\u540e\u4e00\u4e2a\u653e\u7684\u70b9\u7684\u5750\u6807 \\(p\\)\u3002</p> <p>\u5982\u679c\u5f53\u524d\u626b\u5230\u7684\u533a\u95f4\u4e0d\u80fd\u88ab\u8fd9\u4e2a\u70b9\u63a7\u5236\u5230\uff0c\u4e5f\u5c31\u662f \\(l &gt; p\\)\uff0c\u90a3\u4e48\u65b0\u653e\u4e00\u4e2a\u70b9\u5728 \\(r\\)\u3002</p> <p>\u5426\u5219\u8ba9 \\(p = \\min(p, r)\\)\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u8ba9\u5f53\u524d\u533a\u95f4\u88ab\u4e0a\u4e00\u4e2a\u7ba1\u8f96\u3002</p> <p>\u6700\u540e\u8f93\u51fa\u65b0\u653e\u7684\u6570\u91cf\u5373\u53ef\uff08\u521d\u59cb \\(p = -\\infty\\)\uff09\u3002</p> <p>\u8bc1\u660e\uff1a</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4 \\([l_i,r_i]\\)\uff0c\u6709\u4e24\u79cd\u9009\u62e9\uff1a1. \u88ab\u4e4b\u524d\u653e\u7684\u70b9\u63a7\u5236\u30022. \u65b0\u5efa\u4e00\u4e2a\u70b9\u63a7\u5236\u5b83\u3002</p> <p>\u4e0a\u9762\u7684\u8d2a\u5fc3\u7b56\u7565\u662f\uff0c\u5982\u679c\u80fd \\(1\\) \u5c31\u4f7f\u7528 \\(1\\)\uff0c\u8fd9\u6837\u4e4b\u540e\u968f\u4fbf\u5728\u54ea\u91cc\u653e\u90fd\u884c\uff0c\u56e0\u4e3a \\(i\\) \u548c\u5b83\u4ee5\u524d\u7684\u90fd\u6709\u70b9\u63a7\u5236\u4e86\u3002</p> <p>\u5426\u5219\u4f7f\u7528 \\(2\\)\uff0c\u8fd9\u6837\u9700\u8981\u5728 \\([l_i, r_i]\\) \u4e0a\u653e\u70b9\uff0c\u53ef\u4ee5\u53d1\u73b0 \\(1\\) \u80fd\u5230\u8fbe\u7684\u51b3\u7b56\u96c6\u5408\u5305\u62ec\u4e86 \\(2\\) \u7684\u3002</p> <p>\u56e0\u4e3a 1 \u7684\u65f6\u5019\uff0c\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u4efb\u610f\u653e\u3002</p> <p>\u7136\u540e\u5982\u679c\u9009\u62e9 1\uff0c\u628a\u4e0a\u4e00\u4e2a\u70b9\u653e\u5230 \\(min(r_i,p)\\) \u7684\u4f4d\u7f6e\uff0c\u5c31\u662f\u5c3d\u91cf\u5f80\u540e\u653e\u3002</p> <p>\u8fd9\u4e2a\u201c\u5c3d\u91cf\u5f80\u540e\u653e\u201d\u7684\u7b56\u7565\u663e\u7136\u5305\u542b\u4e86\u201c\u653e\u5728\u66f4\u524d\u9762\u7684\u4f4d\u7f6e\u201d \u672a\u6765\u4f1a\u5230\u8fbe\u7684\u72b6\u6001\u3002\u3002</p> <p>\u4e4b\u524d\u5df2\u7ecf\u6392\u8fc7\u5e8f\u4e86\uff0c\u6240\u4ee5\u8c03\u6574\u662f\u4e0d\u4f1a\u5f71\u54cd\u524d\u9762\u7684\u51b3\u7b56\u7684\uff0c\u8fd9\u4e2a\u8d2a\u5fc3\u5c31\u662f\u6b63\u786e\u7684\u3002</p> <p>\u56e0\u4e3a\u8fd9\u4e2a\u8d2a\u5fc3\u7684\u51b3\u7b56\u5728\u95ee\u9898\u72b6\u6001\u7a7a\u95f4\u91cc\u7684\u53ef\u8fbe\u96c6\u5408\u5305\u542b\u4e86\u6240\u6709\u8fd9\u4e00\u6b65\u505a\u51fa\u5176\u5b83\u4efb\u610f\u51b3\u7b56\u7684\u53ef\u8fbe\u96c6\u5408\u3002</p> \u6211\u7684\u601d\u8def <p>\u5904\u7406\u51fa\u4e00\u4e9b\u533a\u95f4\uff0c</p> <p>\u7528\u52fe\u80a1\u5b9a\u7406\u7b97\u4e00\u4e0b\u3002</p> <p>\u7136\u540e\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u6c42\u6700\u5c11\u7528\u591a\u5c11\u4e2a\u70b9\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u533a\u95f4\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u70b9\u3002</p> <p>\u611f\u89c9\u6709\u70b9\u7c7b\u4f3c\u4e4b\u524d CF \u4e0a\u4e00\u5806\u5706\uff0c\u5305\u542b\uff0c\u76f8\u5207\uff0c\u76f8\u79bb\u7684\u67d0\u4e2a\u6811\u5f62DP\u9898\u3002</p> <p>\u4e0d\u8fc7\u9053\u7406\u4e0d\u4e00\u81f4\uff0c\u8fd9\u4e00\u9898\u533a\u95f4\u53ef\u4ee5\u76f8\u4ea4\uff0cCF\u90a3\u9898\u4e0d\u884c\uff0c\uff08\u6211\u8fd8\u4ea4\u8fc7\u7ffb\u8bd1\uff09</p> <p>\u753b\u4e86\u4e00\u4e2a\u56fe\uff0c\u521a\u597d\u662f\u6309\u7167\u5de6\u7aef\u70b9\u6392\u8fc7\u5e8f\u7684\u3002</p> <p>\u8003\u8651\u80fd\u4e0d\u80fd\u8d2a\u5fc3\u3002</p> <p>\u5148\u770b\u770b\u6570\u636e\u8303\u56f4\uff0c\u662f\u4e0d\u662f \\(n \\log n\\) \u5806\uff0c\u6216\u8005 on \u5355\u8c03\u6808/\u961f\u5217 \u4e4b\u7c7b\u7684\u3002</p> <p>\\(1e3\\), \\(n^2\\) \u53ef\u4ee5\u8fc7\u3002</p> <p>\u8003\u8651 \\(n^2\\) \u5427\u3002</p> <p>\u600e\u4e48\u8d2a\u5fc3\u554a\u3002</p> <p>\u662f\u4e0d\u662f\u8981\u8003\u8651\u4e00\u4e0b\u5c40\u90e8\u6700\u4f18\u7b56\u7565\u662f\u5565\uff0c\u7136\u540e\u76f4\u63a5\u5c1d\u8bd5\u8bc1\u660e\u6b63\u786e\u6027\uff1f</p> <p>\u5c40\u90e8\u6700\u4f18\u5e94\u8be5\u5c31\u662f\u8003\u8651\u9009\u80fd\u8986\u76d6\u5230\u533a\u95f4\u5c3d\u91cf\u591a\u7684\u4f4d\u7f6e\uff1f</p> <p>\u6bd4\u5982\u6211\u8003\u8651\u7ef4\u62a4\u5f53\u524d\u5bf9\u4e8e\u8c01\u8fdb\u884c\u64cd\u4f5c\uff08\u5c31\u662f\u8bb0\u5f55\u4e00\u4e0b\u54ea\u4e00\u4e9b\u5df2\u7ecf\u88ab\u653e\u8fc7\u4e86\uff09</p> <p>\u7136\u540e\u5728\u8fd9\u4e2a\u533a\u95f4\u7684\u6240\u6709\u5bf9\u5e94\u7b56\u7565\u91cc\u9009\u62e9\u80fd\u8986\u76d6\u533a\u95f4\u6700\u591a\u7684\u4e00\u4e2a\uff1f</p> <p>\u518d\u628a\u5bf9\u5e94\u7684\u9009\u62e9\u8986\u76d6\u5230\u7684\u533a\u95f4\u5168\u90e8\u6807\u8bb0\uff1f</p> <p>\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u90fd\u626b\u4e00\u6b21\u5c31\u662f \\(O(n)\\) \u4e86\uff0c\u7136\u540e\u6bcf\u4e2a\u533a\u95f4\u8d2a\u5fc3\u505a\u51b3\u5b9a\u7684\u65f6\u5019\u5c31\u662f \\(O(n)\\)\u3002\u590d\u6742 \\(n^2\\) \u53ef\u4ee5\u8fc7\u3002</p> <p>\u5c1d\u8bd5\u8bc1\u660e\u6b63\u786e\u6027\uff1f\u4e4b\u524d\u7684\u8d2a\u5fc3\u90fd\u6ca1\u81ea\u5df1\u8bc1\u660e\u8fc7\u6765\u7740\u3002</p> <p>\u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u5c5e\u4e8e\u51b3\u7b56\u4f1a\u5f71\u54cd\u540e\u9762\u7684\uff1f\u8003\u8651\u7528\u6269\u5c55\u6cd5\u8bc1\u660e\uff1f</p> <p>\u7b49\u4e0b\uff0c\u8fd9\u4e2a\u6700\u591a\uff0c\u662f\u4e0d\u662f\u8981\u8003\u8651\u6392\u9664\u4e00\u79cd\u60c5\u51b5\uff1f\u56fe\u4f8b\u91cc\u9762 \u201c\u7ea2\u8272\u586b\u5145\u8868\u8986\u76d6\u8fc7\u4e86\u201d \u90a3\u4e00\u5757\u3002</p> <p></p> <p>==== \u5982\u679c\u6211\u9009\u62e9\u524d\u9762\u7684\u51b3\u7b56\uff0c\u770b\u8d77\u6765\u80fd\u8986\u76d6\u4e09\u4e2a\uff0c\u4f46\u662f\u540e\u9762\u53c8\u6709\u56db\u4e2a\u7684\uff0c\u6309\u7167\u8fd9\u79cd\u60f3\u6cd5\u5e94\u8be5\u662f\u9009\u540e\u9762\uff0c</p> <p>\u4f46\u662f\u540e\u9762\u7684\u80af\u5b9a\u73b0\u5728\u4e0d\u4f1a\u66f4\u65b0\u554a\uff08\u56e0\u4e3a\u6211\u6392\u4e86\u5e8f\uff09\uff0c\u800c\u4e14\u5982\u679c\u6211\u5c40\u90e8\u5c31\u662f\u8fd9\u6837\uff0c\u4f60\u524d\u540e\u6700\u7ec8\u90fd\u662f\u8981\u9009\u7684\u3002</p> <p>\u6240\u4ee5\u6ca1\u6709\u5f71\u54cd\uff0c\u6700\u591a\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u6ca1\u95ee\u9898\u3002</p> <p>====</p> <p>\u56de\u5230\u8bc1\u660e\uff0c\u6b38</p> <p>\u611f\u89c9\u4e0a\u9762\u8fd9\u4e2a\u60f3\u6cd5\u5df2\u7ecf\u5f88\u5bf9\u4e86\uff0c\u5c31\u662f\u7a81\u7136\u60f3\u5230\u8fd9\u4e2a\u6700\u591a\u5e94\u8be5\u662f\u600e\u6837\u6700\u591a\u3002</p> <p>\u56e0\u4e3a\u4f60\u8fdf\u65e9\u90fd\u8981\u9009\u7684\u554a\uff0c\u4f60\u8fd8\u4e0d\u5982\u5c3d\u91cf\u591a\u641e\u4e00\u70b9\u3002</p> <p>\u5443\uff0c\u6240\u4ee5\u601d\u8def\u5c31\u8fd9\u6837\u4e86\uff0c\u770b\u770b\u5bf9\u4e0d\u5bf9\u5427\u3002</p> <p>\u548c lyd \u60f3\u6cd5\u4e0d\u592a\u4e00\u81f4\uff1f\uff1f</p> <p>\u4f46\u6211\u89c9\u5f97\u6211\u7684\u601d\u8def\u672c\u8d28\u4e0a\u548c\u4ed6\u7684\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u4ed6\u7684\u66f4\u597d\u5b9e\u73b0\u4e00\u70b9\u3002</p> <p>\u6211\u7684\u60f3\u6cd5\u91cc\u9762\u90a3\u4e2a \"\u56e0\u4e3a\u4f60\u8fdf\u65e9\u90fd\u8981\u9009\u7684\u554a\uff0c\u4f60\u8fd8\u4e0d\u5982\u5c3d\u91cf\u591a\u641e\u4e00\u70b9\"</p> <p>\u5c31\u7b49\u540c\u4e8e lyd \u505a\u6cd5\u91cc\u9762\u7684\u5c3d\u91cf\u4f7f\u7528 \"1\"\u3002</p> \u5b9e\u73b0 <pre><code>#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define ld long double\nusing namespace std;\n\nconst int N = 1006;\nconst double INF = -0x3f3f3f3f, eps = 0.000001;\n\nint n, d, num = 0;\nstruct Point {\nint x, y;\ndouble l, r;\nbool operator &lt;(const Point x) const {\nreturn l &lt; x.l;\n}\n} p[N];\n\nvoid Solve() {\nfor(int i = 1; i &lt;= n; i++) scanf(\"%d %d\", &amp;p[i].x, &amp;p[i].y);\nbool b = 1;\nfor(int i = 1; i &lt;= n; i++)\nif(p[i].y &gt; d) {\nb = 0;\nbreak;\n}\nif(!b) {\ncout &lt;&lt; \"Case \" &lt;&lt; ++num &lt;&lt; \": -1\" &lt;&lt; endl;\nreturn;\n}\nfor(int i = 1; i &lt;= n; i++) {\nld k = sqrt((ld)d * d -(ld)p[i].y * p[i].y);\np[i].l = p[i].x - k, p[i].r = p[i].x + k;\n}\nsort(p + 1, p + n + 1);\nint ans = 1;\ndouble pos = -INF;\nfor(int i = 1; i &lt;= n; i++) {\nif(pos + eps &lt; p[i].l) {\nans++;\npos = p[i].r;\n} else pos = min(p[i].r, pos);\n}\ncout &lt;&lt; \"Case \" &lt;&lt; ++num &lt;&lt; \": \" &lt;&lt; ans &lt;&lt; endl;\n}\n\nint main() {\nwhile(cin &gt;&gt; n &gt;&gt; d &amp;&amp; n &amp;&amp; d) Solve();\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/basic/greedy/#exchange-argument", "title": "Exchange Argument", "text": "<p>\u53ef\u4ee5\u7528\u6765\u8bc1\u660e\u67d0\u4e2a\u8d2a\u5fc3\u7b97\u6cd5\u662f\u5426\u662f\u6700\u4f18\u7684\uff0c\u6216\u8005\u8bf4\u63a8\u5bfc\u51fa\u4e00\u4e2a\u6700\u4f18\u7684\u8d2a\u5fc3\u7b97\u6cd5\u5e94\u5f53\u4ee5\u4f55\u79cd\u7b56\u7565\u8d2a\u5fc3\u3002</p> <p>\u4e00\u822c\u662f\u8981\u6c42\u4f60\u5728\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217\u4e0a\u627e\u5230\u4e00\u4e2a\u6700\u4f18\u7684\u64cd\u4f5c\u987a\u5e8f\uff08\u4e0d\u540c\u7684\u4f4d\u7f6e\uff0c\u9009\u62e9\u987a\u5e8f\u4e0d\u540c\u65f6\u7684\u4ee3\u4ef7\u4e0d\u76f8\u540c\uff09\u3002</p> <p>\u601d\u8def\u901a\u5e38\u90fd\u662f\u62ff\u67d0\u4e24\u4e2a\u76f8\u90bb\u7684\u9879\u51fa\u6765\uff0c\u7136\u540e\u8003\u8651\u5982\u4f55\u5224\u5b9a\u4ed6\u4eec\u7684\u9009\u53d6\u987a\u5e8f\u662f\u4e0d\u662f\u6700\u4f18\u7684\u3002</p> <p>\u6bd4\u5982\u6211\u6709\u4e00\u4e2a\u7b97\u6cd5 \\(\\mathcal{O}\\)\uff0c\u5b83\u5bf9\u4e8e \\(i, i + 1\\) \u8fd9\u4e24\u9879\u7684\u9009\u62e9\u987a\u5e8f\u5c31\u662f \\(i \\to i + 1\\)\u3002</p> <p>\u7136\u540e\u73b0\u5728\u9700\u8981\u8bc1\u660e\u6216\u8005\u8bc1\u4f2a\u8fd9\u4e2a \\(\\mathcal{O}\\) \u662f\u6700\u4f18\u7684\u3002</p> <p>\u663e\u7136\u8fd8\u6709\u4e00\u79cd\u53ef\u80fd \\(\\mathcal{A}\\)\uff0c\u9009\u53d6\u7684\u987a\u5e8f\u662f \\(i + 1 \\to i\\)\uff0c\u6211\u4eec\u5c31\u9700\u8981\u6bd4\u8f83 \\(\\mathcal{O, A}\\) \u7684\u64cd\u4f5c\u4ee3\u4ef7\u3002</p> <p>\u5047\u8bbe \\(\\mathcal{O}\\) \u662f\u6700\u4f18\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u5c31\u9700\u8981\u6210\u7acb\uff1a</p> \\[ (\\texttt{cost}_{i} \\times \\texttt{order}_{1}) + (\\texttt{cost}_{i + 1} \\times \\texttt{order}_{2}) &lt; (\\texttt{cost}_{i} \\times \\texttt{order}_{2}) + (\\texttt{cost}_{i + 1} \\times \\texttt{order}_{1}) \\] <p>\u5176\u4e2d \\(\\texttt{cost}_{x}\\) \u8868\u793a \\(x\\) \u8fd9\u4e2a\u5143\u7d20\u7684\u6743\u503c\uff0c\\(\\texttt{order}_{1,2}\\) \u8868\u793a\u5148\uff08\u540e\uff09\u9009\u53d6\u6240\u4e58\u4e0a\u7684\u4ee3\u4ef7\u56e0\u5b50\u3002</p> <p>\u5982\u679c\u628a\u5206\u522b\u5173\u4e8e \\(\\texttt{cost}\\) \u548c\u5173\u4e8e \\(\\texttt{order}\\) \u7684\u4e24\u4e2a\u4e0d\u7b49\u5173\u7cfb\u4ee3\u5165\u4e0a\u9762\u7684\u4e0d\u7b49\u5f0f\uff0c\u5f97\u5230\u4e86\u77db\u76fe\u7684\u7ed3\u679c\uff0c\u8bf4\u660e \\(\\mathcal{O}\\) \u5e76\u4e0d\u662f\u6700\u4f18\u7684\u7b97\u6cd5\uff0c\\(\\mathcal{A}\\) \u624d\u662f\uff0c\u53cd\u4e4b\u5219\u8bc1\u660e \\(\\mathcal{O}\\) \u624d\u662f\u6700\u4f18\u7684\u7b97\u6cd5\u3002</p> <p>\u6e05\u695a\u4e86\u8c01\u662f\u6700\u4f18\u7684\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u7a0d\u5fae\u6539\u5199\u4e00\u4e0b\uff0c\u5c3d\u53ef\u80fd\u6d88\u53bb \\(\\texttt{order}\\)\uff0c\u5f97\u5230\u4e00\u4e2a\u5173\u4e8e \\(\\texttt{cost}\\) \u7684\u4e0d\u7b49\u5f0f\uff0c\u4e14\u5c06\u5173\u4e8e \\(i\\) \u7684\u53d8\u91cf\u653e\u5728\u4e0d\u7b49\u53f7\u4e00\u7aef\uff0c\u5173\u4e8e \\(i + 1\\) \u7684\u653e\u5728\u53e6\u4e00\u7aef\uff0c\u8fd9\u4e2a\u5c31\u662f\u6700\u4f18\u7b97\u6cd5\u7684\u8d2a\u5fc3\uff08\u6392\u5e8f\uff09\u7b56\u7565\uff08\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u6700\u4f18\u7684\u987a\u5e8f\uff08\u672a\u77e5\u91cf\uff09\uff0c\u6240\u4ee5\u9700\u8981\u5c3d\u91cf\u6d88\u53bb\u8d2a\u5fc3\u7b56\u7565\u91cc\u5173\u4e8e\u987a\u5e8f\u7684\u53d8\u91cf\uff09\u3002</p> <p>\u5f53\u7136\u5b9e\u9645\u5e94\u7528\u7684\u65f6\u5019 \\(\\texttt{cost}\\) \u53ef\u80fd\u9700\u8981\u7528\u66f4\u590d\u6742\u4e00\u70b9\u7684\u65b9\u5f0f\u8ba1\u7b97\uff0c\u4e0d\u8fc7\u90fd\u662f\u4e00\u6837\u7684\u3002 </p> <p>\u4f46\u6709\u4e00\u5b9a\u53ef\u80fd\u662f\u641e\u4e0d\u51fa\u6765\u7684\uff08\u6240\u4ee5\u5f97\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790/oh</p> <p>\u5f88\u591a\u65f6\u5019\u601d\u8003\u201c\u5b89\u6392\u987a\u5e8f\u201d\u7c7b\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b Exchange Argument\u3002</p> <p>\u4e00\u4e2a\u6bd4\u8f83\u57fa\u672c\u7684\u5e94\u7528\u5c31\u662f\u6392\u5e8f\u4e0d\u7b49\u5f0f\uff1a</p> \u6392\u5e8f\u4e0d\u7b49\u5f0f <p>\u82e5\u6709\u5e8f\u5217 \\(f\\)\uff0c\u6ee1\u8db3 \\(0 \\le f_1 \\le f_2 \\le f_3 \\le \\dots \\le f_n\\)\u3002</p> <p>\u5e76\u6709\u5b66\u5217 \\(g\\)\uff0c\u6ee1\u8db3 \\(0\\le g_1\\le g_2 \\le g_3 \\le \\dots \\le g_n\\)\u3002</p> <p>\u8bbe\u4ee3\u4ef7\u51fd\u6570 \\(c(f,g) = \\sum (f_i\\times g_j)\\)\uff0c\u5176\u4e2d \\((i,j)\\) \u8868\u793a\u4e00\u7ec4\u9009\u62e9\u3002</p> <p>\u5373\u662f\uff0c\u4ece \\(g\\) \u4e2d\u5206\u522b\u7ed9\u6bcf\u4e00\u4e2a \\(f_i\\) \u5206\u914d\u67d0\u4e00\u4e2a \\(g_j\\)\u3002</p> <p>\u5219\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u5fc5\u7136\u662f\uff1a</p> \\[\\max= f_1g_1 +f_2g_2 + \\dots +f_ng_n\\] <p>\u5f97\u5230\u7684\u6700\u5c0f\u4ef7\u503c\u662f\uff1a</p> \\[\\min = f_1g_n+f_2g_{n-1} + \\dots + f_ng_1\\] Proof <p>\u8bbe \\(f_i &lt; f_j,g_i &lt; g_j,i &lt; j\\)\u3002</p> <p>\u5219\uff1a</p> \\[(f_ig_i +f_jg_j)-(f_ig_j+f_jg_i)\\] \\[= f_i(g_i-g_j)+f_j(g_j-g_i)\\] \\[=f_i(g_i-g_j)-f_j(g_i-g_j)\\] \\[=(f_i-f_j)(g_i-g_j) &gt; 0\\] <p>\\(\\therefore (f_ig_i +f_jg_j) &gt; (f_ig_j+f_jg_i)\\)</p> <p>\u5f52\u7eb3\u540e\u53ef\u8bc1\u660e\u6392\u5e8f\u4e0d\u7b49\u5f0f\u3002</p> <p>\u5148\u770b\u4e00\u4e2a\u5e8f\u5217\u4e0a\u7684 Exc Arg\uff1a</p> \u4f8b\u9898\uff1aNOIP2012TG \u56fd\u738b\u6e38\u620f <p>\u6070\u9022 H \u56fd\u56fd\u5e86\uff0c\u56fd\u738b\u9080\u8bf7 \\(n\\) \u4f4d\u5927\u81e3\u6765\u73a9\u4e00\u4e2a\u6709\u5956\u6e38\u620f\u3002\u9996\u5148\uff0c\u4ed6\u8ba9\u6bcf\u4e2a\u5927\u81e3\u5728\u5de6\u3001\u53f3\u624b\u4e0a\u9762\u5206\u522b\u5199\u4e0b\u4e00\u4e2a\u6574\u6570\uff0c\u56fd\u738b\u81ea\u5df1\u4e5f\u5728\u5de6\u3001\u53f3\u624b\u4e0a\u5404\u5199\u4e00\u4e2a\u6574\u6570\u3002\u7136\u540e\uff0c\u8ba9\u8fd9 \\(n\\) \u4f4d\u5927\u81e3\u6392\u6210\u4e00\u6392\uff0c\u56fd\u738b\u7ad9\u5728\u961f\u4f0d\u7684\u6700\u524d\u9762\u3002\u6392\u597d\u961f\u540e\uff0c\u6240\u6709\u7684\u5927\u81e3\u90fd\u4f1a\u83b7\u5f97\u56fd\u738b\u5956\u8d4f\u7684\u82e5\u5e72\u91d1\u5e01\uff0c\u6bcf\u4f4d\u5927\u81e3\u83b7\u5f97\u7684\u91d1\u5e01\u6570\u5206\u522b\u662f\uff1a\u6392\u5728\u8be5\u5927\u81e3\u524d\u9762\u7684\u6240\u6709\u4eba\u7684\u5de6\u624b\u4e0a\u7684\u6570\u7684\u4e58\u79ef\u9664\u4ee5\u4ed6\u81ea\u5df1\u53f3\u624b\u4e0a\u7684\u6570\uff0c\u7136\u540e\u5411\u4e0b\u53d6\u6574\u5f97\u5230\u7684\u7ed3\u679c\u3002</p> <p>\u56fd\u738b\u4e0d\u5e0c\u671b\u67d0\u4e00\u4e2a\u5927\u81e3\u83b7\u5f97\u7279\u522b\u591a\u7684\u5956\u8d4f\uff0c\u6240\u4ee5\u4ed6\u60f3\u8bf7\u4f60\u5e2e\u4ed6\u91cd\u65b0\u5b89\u6392\u4e00\u4e0b\u961f\u4f0d\u7684\u987a\u5e8f\uff0c\u4f7f\u5f97\u83b7\u5f97\u5956\u8d4f\u6700\u591a\u7684\u5927\u81e3\uff0c\u6240\u83b7\u5956\u8d4f\u5c3d\u53ef\u80fd\u7684\u5c11\u3002\u6ce8\u610f\uff0c\u56fd\u738b\u7684\u4f4d\u7f6e\u59cb\u7ec8\u5728\u961f\u4f0d\u7684\u6700\u524d\u9762\u3002</p> \u9898\u89e3 <p>\u4f7f\u7528 Exchange Argument\u3002</p> <p>\u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u6709\u4e00\u4e9b\u5927\u81e3\u548c\u56fd\u738b\u4e00\u8d77\u7ad9\u5728\u524d\u9762\uff0c\u4e14\u5df2\u7ecf\u662f\u6700\u4f18\u51b3\u7b56\uff0c\u5047\u8bbe\u73b0\u5728\u6709\u4e24\u4e2a\u4eba\u5019\u9009\uff0c\u6211\u4eec\u8981\u901a\u8fc7\u7b97\u6cd5 \\(\\mathcal{A}\\) \u5b89\u6392\u4ed6\u4eec\u5728\u961f\u5c3e\u7684\u4f4d\u7f6e\u3002</p> <p>\\(\\mathcal{O}\\) \u5219\u662f\u4e00\u4e2a\u6700\u4f18\u7b97\u6cd5\uff0c\u5e76\u4e14 \\(\\mathcal{O}\\) \u548c \\(\\mathcal{A}\\) \u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u4eba\u7684\u6392\u5e8f\uff0c\u4e4b\u524d\u7684\uff08\u5904\u7406\u73b0\u5728\u5df2\u7ecf\u6392\u597d\u4e86\u7684\u4eba\u7684\u65b9\u5f0f\uff09\u90fd\u4e00\u6a21\u4e00\u6837\u3002</p> <p>\u7b2c\u4e00\u4e2a\u4eba\u7528 \\((a_1, b_1)\\) \u8868\u793a\uff08\u5de6\u53f3\u624b\u4e0a\u7684\u6570\uff09\uff0c\u7b2c\u4e8c\u4e2a\u4eba\u7528 \\((a_2, b_2)\\) \u8868\u793a\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\u53ef\u9009\u7684\u7b97\u6cd5\u53ea\u6709 \\(\\mathcal{A}: \\{1, 2\\}\\) \u548c \\(\\mathcal{A}\\prime: \\{2, 1\\}\\) \u4e24\u79cd\u3002</p> <p>\uff08\\(\\mathcal{A}\\prime\\) \u5c31\u662f \\(\\mathcal{A}\\) \u901a\u8fc7\u4e00\u4e2a Exchange \u4e4b\u540e\u5f97\u5230\u7684\u65b0\u7b97\u6cd5\uff09\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4 \\(\\mathcal{O}\\) \u53ea\u80fd\u662f \\(\\mathcal{A,A}\\prime\\) \u4e8c\u8005\u4e4b\u4e00\uff0c\u6240\u4ee5\u6211\u4eec\u6bd4\u8f83 \\(\\mathcal{A,A}\\prime\\) \u5c31\u884c\u4e86\u3002</p> <p>\u8bbe\u4e4b\u524d\u6240\u6709\u4eba\u5de6\u624b\u4e0a\u7684\u6570\u7684\u4e58\u79ef\u4e3a \\(\\pi\\)\u3002</p> <p>\u5047\u8bbe \\(\\mathcal{A}\\) \u4e25\u683c\u4f18\u79c0\u4e8e \\(\\mathcal{A}\\prime\\)\uff0c\u5373\u662f \\(\\max(\\dfrac{\\pi}{b_1}, \\dfrac{\\pi \\times a_1}{b_2}) &lt; \\max(\\dfrac{\\pi}{b_2}, \\dfrac{\\pi \\times a_2}{b_1})\\cdots (*)\\)</p> <p>\u56e0\u4e3a\u6240\u6709\u53d8\u91cf\u90fd\u662f\u6b63\u6574\u6570\uff0c\u6240\u4ee5 \\(\\dfrac{\\pi}{b_2} \\le \\dfrac{\\pi \\times a_1}{b_2} \\cdots (**)\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5047\u8bbe \\(\\dfrac{\\pi \\times a_1}{b_2} \\ge \\dfrac{\\pi \\times a_2}{b_1}\\)\uff0c\u7531 \\((**)\\) \u4f1a\u63a8\u51fa \\(\\max(\\dfrac{\\pi}{b_1}, \\dfrac{\\pi \\times a_1}{b_2}) \\ge \\max(\\dfrac{\\pi}{b_2}, \\dfrac{\\pi \\times a_2}{b_1}) \\cdots (***)\\)\uff08\u56e0\u4e3a \\(\\dfrac{\\pi \\times a_1}{b_2}\\) \u4e0d\u5c0f\u4e8e\u53f3\u8fb9\u7684\u4efb\u4f55\u4e00\u9879\uff09\u3002</p> <p>\u663e\u7136 \\((*)\\) \u662f \\((***)\\) \u7684\u5426\u5b9a\uff0c\u77db\u76fe\u3002</p> <p>\u6240\u4ee5 \\(\\dfrac{\\pi \\times a_1}{b_2} &lt; \\dfrac{\\pi \\times a_2}{b_1}\\)\uff0c\u8fd9\u4e2a\u6761\u4ef6\u548c \\(\\dfrac{\\pi \\times a_1}{b_2} \\ge \\dfrac{\\pi \\times a_2}{b_1}\\) \u6784\u6210\u4e86\u5168\u96c6\uff0c\u6240\u4ee5\u5982\u679c\u540e\u8005\u9519\u4e86\uff0c\u6839\u636e\u524d\u9762\u7684\u5047\u8bbe\u548c\u7ea6\u675f\uff0c\u524d\u8005\u5fc5\u7136\u5bf9\u3002</p> <p>\u90a3\u4e48\u6839\u636e \\(\\dfrac{\\pi \\times a_1}{b_2} &lt; \\dfrac{\\pi \\times a_2}{b_1}\\)\uff0c\u53ef\u4ee5\u5f97\u5230 \\(a_1b_1 &lt; a_2b_2\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u6700\u4f18\u7b97\u6cd5 \\(\\mathcal{O}\\) \u5e94\u5f53\u6ee1\u8db3 \\(a_1b_1 &lt; a_2b_2\\)\u3002</p> <p>\u6240\u4ee5\u6700\u4f18\u7684\u8d2a\u5fc3\u7b56\u7565\u662f\u6309\u7167 \\(a_i\\times b_i\\) \u5347\u5e8f\u6392\u5e8f\uff0c\u8ba9\u8fd9\u4e2a\u503c\u5c0f\u7684\u5c3d\u91cf\u653e\u5728\u524d\u9762\u3002</p> <p>\u9700\u8981\u5199\u9ad8\u7cbe\u5ea6\u3002</p> \u5b9e\u73b0 <pre><code>N=int(input())\ns=input().split()\nS=int(s[0])\nT=int(s[1])\na=[]\n\nfor i in range(1,N+1):\n    k=input().split()\n    a.append((int(k[0]),int(k[1])))\n\na.sort(key=lambda x:x[0]*x[1])\n\nans=0\n\nfor i in range(0,N):\n    if(S//(a[i])[1]&gt;ans):\n        ans=S//(a[i])[1]\n    S*=(a[i])[0]\n\nprint(ans)\n</code></pre> <p>Exc Arg \u4e5f\u53ef\u4ee5\u653e\u5230\u6811\u4e0a\uff1a</p> \u4f8b\u9898\uff1aPOJ2054 Color a Tree <p>\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u4e2a\u6743\u503c \\(C_i\\)\uff0c\u8981\u67d3\u8272\u4e00\u4e2a\u8282\u70b9\u5fc5\u987b\u5148\u67d3\u8272\u5b83\u7684\u7236\u4eb2\u3002</p> <p>\u67d3\u8272\u82b1\u8d39\u662f \\(T_i \\times C_i\\)\uff0c\\(T_i\\) \u662f\u67d3\u8272 \\(i\\) \u7684\u65f6\u95f4\u6233\u3002</p> <p>\u6c42 \\(\\min\\{\\sum T_iC_i\\}\\)\uff0c\\(N \\le 1000\\)\uff0c\u6307\u5b9a\u6839\u8282\u70b9\u3002</p> \u9898\u89e3 <p>\u8003\u8651\u6ca1\u6709\u6811\u7684\u9650\u5236\u600e\u4e48\u505a\uff0c\u5f88\u663e\u7136\u5c31\u662f\u4ece\u5927\u5230\u5c0f\u9009\uff08\u672c\u8d28\u4e0a\u662f\u6392\u5e8f\u4e0d\u7b49\u5f0f\uff09\u3002</p> <p>\u7136\u540e\u8fd9\u91cc\u6709\u5148\u9009\u7236\u4eb2\u7684\u9650\u5236\u4e86\uff0c\u6240\u4ee5\u5047\u8bbe\u6811\u4e2d\u6700\u5927\u7684\u70b9 \\(u\\) \u7684\u7236\u4eb2\u4e3a \\(fa\\)\uff0c\u5728 \\(fa\\) \u67d3\u8272\u540e\u6211\u4e0b\u4e00\u6b65\u5fc5\u7136\u67d3\u8272 \\(u\\)\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5047\u8bbe\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u70b9 \\(v\\)\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5148\u67d3\u8272 \\(u, fa\\) \u7684\u6761\u4ef6\u5e94\u8be5\u662f\u5565\uff08\u8fd9\u91cc\u5f00\u59cb exc arg \u4e86\uff09\u3002</p> <ul> <li>\u5982\u679c\u5148\u67d3\u8272 \\(v\\)\uff0c\u82b1\u8d39 \\(p = C_v + 2\\times C_{fa} + 3\\times C_u\\)\u3002</li> <li>\u5982\u679c\u5148\u67d3\u8272 \\(fa \\to u\\)\uff0c\u82b1\u8d39 \\(q = C_{fa} + 2\\times C_u + 3\\times C_v\\)\u3002</li> </ul> <p>\u90a3\u4e48\u5c31\u9700\u8981 \\(q &lt; p\\)\uff0c\u5373\u662f \\(C_v + 2\\times C_{fa} + 3\\times C_u &lt; C_{fa} + 2\\times C_u + 3\\times C_v\\)\u3002</p> <p>\u8fd9\u91cc\u53ea\u5173\u5fc3\u5927\u5c0f\u5173\u7cfb\uff0c\u6240\u4ee5\u60f3\u529e\u6cd5\u5316\u7b80\u4e00\u4e0b\uff0c\u4e24\u8fb9\u540c\u65f6\u52a0\u4e0a \\(C_v - C_u\\) \u7136\u540e\u9664\u4ee5 \\(2\\)\u3002</p> <p>\u5f97\u5230\uff1a\\((C_u + C_{fa})/2 + 2\\times C_v &lt; C_v + 2\\times ((C_u + C_{fa}) / 2)\\)</p> <p>\u5c31\u76f8\u5f53\u4e8e\u6bd4\u8f83 \\(v\\) \u548c\u4e00\u4e2a\u6743\u503c\u4e3a \\((C_u + C_{fa})/2\\) \u7684\u8282\u70b9\u7684\u5148\u540e\u67d3\u8272\u987a\u5e8f\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u628a \\(u, fa\\) \u5408\u5e76\uff0c\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u4ee4\u4ed6\u4eec\u7684\u7b49\u6548\u6743\u503c\u4e3a \\((C_u + C_{fa})/2\\)\u3002</p> <p>\u7136\u540e\u63a8\u5e7f\u53ef\u4ee5\u5f97\u5230\uff0c\u4e00\u4e2a\u7531 \\(n\\) \u4e2a\u70b9\u7ec4\u6210\u7684\u7b49\u6548\u70b9\uff0c\u5b83\u7684\u7b49\u6548\u6743\u503c\u4e3a \\(\\dfrac{\\sum C}{n}\\)\u3002</p> <p>\u6240\u4ee5\u6bcf\u6b21\u53d6\u7b49\u6548\u6743\u503c\u6700\u5927\u7684\u7b49\u6548\u70b9 \\(u\\)\uff0c\u62ff\u51fa\u6765\u548c\u5b83\u7684 \\(\\text{father}\\) \u5408\u5e76\uff0c\u5e76\u8bb0\u5f55\u4e00\u4e0b\uff0c\u67d3\u8272\u5b8c \\(\\text{father}\\) \u5f53\u524d\u6240\u5305\u542b\u7684\u6240\u6709\u539f\u6811\u4e0a\u8282\u70b9\u4e4b\u540e\uff0c\u5e94\u8be5\u67d3\u8272 \\(u.top\\)\uff08\\(u\\) \u672c\u8d28\u4e0a\u662f\u4e00\u9897\u5b50\u6811\uff0c\u6211\u4eec\u4e00\u822c\u7528\u5b83\u7684\u6811\u6839 \\(u.top\\) \u6765\u6307\u4ee3\u8fd9\u9897\u5b50\u6811\uff0c\u7c7b\u4f3c\u5e76\u67e5\u96c6\uff09\u3002</p> <p>\u5b9e\u73b0\u5c31\u662f\u8ba9\u6bcf\u4e00\u4e2a\u70b9\uff08\u53ef\u4ee5\u662f\u539f\u59cb\u4e5f\u53ef\u4ee5\u662f\u5408\u5e76\u540e\u7684\uff09\u7684\u6743\u503c\u7b49\u4ef7\u4e8e\u5b83\u7684\u6240\u6709\u8282\u70b9\u7684\u6743\u503c\u603b\u548c\u9664\u4ee5\u70b9\u7684\u4e2a\u6570\u3002</p> <p>\u7528\u4e00\u4e2a\u5806\u7ef4\u62a4\uff0c\u6bcf\u6b21\u53d6\u7b49\u6548\u6743\u503c\u6700\u5927\u7684\u70b9\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u548c\u4ed6\u7684 \\(\\text{father}\\) \u5408\u5e76\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff08\u6811\u4e0a\u539f\u59cb\u7ed3\u70b9\uff09\u8bb0\u5f55\u4e00\u4e2a \\(\\text{nxt}\\) \u8868\u793a\u67d3\u5b8c\u5b83\u4e4b\u540e\u4f1a\u67d3\u54ea\u4e00\u4e2a\u8282\u70b9\u3002</p> <p>\u8bb0\u5f55\u6bcf\u4e2a\u65b0\u8282\u70b9\u7684\u7b49\u6548\u6743\u503c\u4ee5\u53ca\u201c\u9876\u201d \\(\\text{top}\\)\uff0c\u5c31\u662f\u6700\u4e0a\u9762\u7684\u90a3\u4e2a\u8282\u70b9\uff08\u6216\u8005\u8bf4\u770b\u6210\u5e76\u67e5\u96c6\u7684 pa\uff09\uff0c\u8fd8\u6709\u201c\u5e95\u201d\uff0c\u5c31\u662f\u6700\u4e0b\u9762\u65b0\u5408\u5e76\u8fdb\u6765\u7684\u8282\u70b9 \\(\\text{but}\\)\u3002</p> <p>\u5806\u91cc\u9762\u653e\u7684\u5c31\u662f\u8fd9\u4e9b\u6240\u8c13\u201c\u65b0\u8282\u70b9\u201d\u3002\u6240\u4ee5 <code>merge(u, fa)</code> \u53ef\u4ee5\u8868\u793a\u6210</p> <p>\u5148\u4e0d\u65ad\u8df3<code>fa.top</code>\u5230\u4e00\u4e2a\u6ca1\u6709\u5f80\u4e0a\u5408\u5e76\u8fc7\u7684\u8282\u70b9 <code>fafa</code> \u4e0a\u3002</p> <p>\uff08\u5982\u679c <code>fafa</code> \u5411\u4e0a\u5408\u5e76\u8fc7\uff0c\u90a3\u4e48\u5b83\u7684 <code>top</code> \u5fc5\u7136\u4e0d\u4f1a\u662f\u5b83\u672c\u8eab\uff0c\u5728\u540e\u9762\u5408\u5e76\u7684\u65f6\u5019\u5c31\u4f1a\u6709\u95ee\u9898\uff09</p> <p>\u7136\u540e\u4ee4 <code>fafa.but.nxt = u.top, fafa.but = u.but u.vis = true, u.top = fafa</code>\uff08\u6ce8\u610f\u987a\u5e8f\uff09\u3002</p> <p>\u6700\u540e\u628a <code>fafa</code> \u6254\u8fdb\u5806\u91cc\u9762\uff0c\u5806\u91cc\u4e0d\u80fd\u6709 \\(\\text{root}\\).</p> <p>\u7edf\u8ba1\u7b54\u6848\u626b\u4e00\u904d\u5c31\u884c\u4e86\u3002</p> \u5b9e\u73b0 <pre><code>// author : black_trees\n\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\n// using i64 = long long;\n\nconst int si = 1e3 + 10;\nconst long double eps = 1e-7;\n\nint Fa[si];\nstruct node {\nbool vis;               // \u6807\u8bb0\nint val, tot, sum;      // \u8bb0\u5f55\u539f\u6743\u503c\uff0c\u7b49\u6548\u6743\u503c\nint top, but, nxt;      // \u9876\uff0c\u5e95\uff0c\u4e0b\u4e00\u4e2a\u67d3\u8272\u7684\u539f\u8282\u70b9\u7684\u7f16\u53f7\n} a[si];\nstruct Node {\nint id; long double w;\nbool operator &lt; (const Node &amp;b) const {\nreturn (w - b.w) &lt; eps;\n}\n};\npriority_queue&lt;Node&gt; q;\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint n, rt;\nwhile(cin &gt;&gt; n &gt;&gt; rt &amp;&amp; n &amp;&amp; rt) {\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i].val, a[i].sum = a[i].val, a[i].top = a[i].but = i, a[i].tot = 1, a[i].vis = false;\nfor(int i = 1; i &lt; n; ++i) {\nint u, v; cin &gt;&gt; u &gt;&gt; v, Fa[v] = u;\n}\nNode tmp; for(int i = 1; i &lt;= n; ++i) {\ntmp.id = i, tmp.w = (1.0 * a[i].val);\nif(i != rt) q.push(tmp);\n} while(!q.empty()) {\ntmp = q.top(); q.pop();\nif(a[tmp.id].vis) continue;\na[tmp.id].vis = true;\nint fa = Fa[tmp.id];\nwhile(fa != rt &amp;&amp; a[fa].vis == true)\nfa = a[fa].top;\na[a[fa].but].nxt = a[tmp.id].top, a[fa].but = a[tmp.id].but, a[tmp.id].top = fa;\na[fa].sum += a[tmp.id].sum, a[fa].tot += a[tmp.id].tot;\ntmp.id = fa, tmp.w = (1.0 * a[fa].sum) / (1.0 * a[fa].tot);\nif(fa != rt) q.push(tmp);\n}\nint ans = 0;\nfor(int dfn = 1, u = rt; dfn &lt;= n; ++dfn,u = a[u].nxt) ans += dfn * a[u].val;\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre> <p>\u8fd8\u6709\u4e00\u79cd\u5e94\u7528\u662f\uff0c\u5bf9\u4e8e\u67d0\u4e2a dp \u95ee\u9898\uff0c\u4f60\u76f4\u63a5\u5728\u539f\u5e8f\u5217\u4e0a dp \u4f1a\u6709\u540e\u6548\u6027\uff0c\u4f46\u662f\u6309\u7167\u67d0\u79cd\u987a\u5e8f\u6392\u5e8f\u4e4b\u540e\uff0cdp\u5c31\u6ca1\u6709\u540e\u6548\u6027\u4e86\u3002</p> \u4f8b\u9898\uff1aCODE FESTIVAL 2017 Problem D <p>\u6709 \\(n\\) \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u624b\u4e0a\u6709 \\(a_i\\) \u4e2a\u77f3\u5934\uff0c\u8eab\u9ad8\u4e3a \\(b_i\\)\uff0c</p> <p>\u5982\u679c\u8f6e\u5230\u7b2c \\(i\\) \u4e2a\u4eba\u653e\u77f3\u5934\u7684\u65f6\u5019\uff0c\u77f3\u5934\u5806\u91cc\u7684\u77f3\u5934\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e \\(b_i\\)\uff0c\u8fd9\u4e2a\u4eba\u5c31\u4f1a\u653e \\(a_i\\) \u4e2a\u77f3\u5934\u8fdb\u53bb\uff0c\u5426\u5219\u6446\u70c2</p> <p>\u95ee\u600e\u4e48\u6837\uff08\u4ee5\u67d0\u79cd\u987a\u5e8f\uff09\u624d\u80fd\u8ba9\u653e\u4e86\u77f3\u5934\u7684\u4eba\u6700\u591a\uff0c\u6700\u591a\u662f\u591a\u5c11\u3002</p> <p>\\(n \\le 5000, 0 \\le b_i \\le 1e9, 1 \\le a_i \\le 1e9\\)\u3002 </p> <p>Bonus : \\(n \\le 1e5\\)\uff0c\uff08\u76ee\u524d\u4e0d\u4f1a\uff0ccf blog \u4e0a\u6709\u63d0\u5230\uff09</p> \u9898\u89e3 <p>\u76f4\u63a5 DP \u663e\u7136\u6709\u95ee\u9898\uff0c\u5c31\u662f\u5982\u679c\u76f4\u63a5\u6309\u7167\u8f93\u5165\u7684\u987a\u5e8f\u641e\u7684\u8bdd\u3002</p> <p>\u8fd9\u6837\u5b50\u53ea\u80fd\u8003\u8651\u5728 \\(1, 2, 3, 4\\) \u7684\u5b50\u5e8f\u5217\u5f53\u4e2d\u9009\u53d6\uff0c\u6240\u4ee5\u662f\u6709\u5c40\u9650\u6027\u7684\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6cd5\u8986\u76d6\u9009\u62e9 \\(4, 2, 1, 3\\) \u8fd9\u6837\u201c\u4e71\u5e8f\u201d\u7684\u60c5\u51b5\u3002</p> <p>\u8fd9\u9053\u9898\u672c\u8eab\u5c31\u662f\u5728\u201c\u5b89\u6392\u987a\u5e8f\u201d\uff0c\u5c31\u662f Exc arg \u7684\u4e00\u4e2a Key\u3002</p> <p>\u5f88\u660e\u663e \\(1,2,4,3 \\ | \\ 2, 4, 1, 3\\ |\\ 4, 1, 2, 3 \\dots\\) \u8fd9\u4e9b\u5404\u79cd\u987a\u5e8f\u91cc\u9762\u5927\u90e8\u5206\u90fd\u4e0d\u53ef\u80fd\u6210\u4e3a\u6700\u4f18\u51b3\u7b56\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528 Exc arg \u5206\u6790\u4e00\u4e0b\uff0c\u7136\u540e\u518d DP\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u4eba \\(i,j\\) \u9700\u8981\u786e\u5b9a\u4e00\u4e2a\u57fa\u672c\u987a\u5e8f\u3002</p> <p>\u8003\u8651\u5230\u5982\u679c \\(i\\) \u653e\u4e86\u4e4b\u540e\uff0c\u9ad8\u5ea6\u81f3\u591a\u662f \\(a_i + b_i\\)\uff0c\\(j\\) \u653e\u4e86\u4e4b\u540e\uff0c\u9ad8\u5ea6\u81f3\u591a\u662f \\(a_j + b_j\\)\u3002</p> <p>\u6211\u4eec\u5e0c\u671b\u8ba9\u80fd\u653e\u77f3\u5b50\u7684\u4eba\u66f4\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba9\u5148\u653e\u7684\u90a3\u4e00\u4e2a\u4eba\u653e\u5b8c\u4e4b\u540e\u7684\u6700\u5927\u9ad8\u5ea6\u5c3d\u53ef\u80fd\u7684\u5c0f\u3002</p> <p>\u5047\u8bbe \\(i\\) \u5e94\u5f53\u6bd4 \\(j\\) \u5148\u653e\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u6ee1\u8db3\u4e0d\u7b49\u5f0f\uff1a\\(a_i+b_i &lt; a_j+b_j\\)\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6309\u7167 \\(a+b\\) \u6392\u5e8f\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u6700\u4f18\u7684\uff0c\u53ef\u4ee5\u7528\u6765 dp \u7684\u987a\u5e8f\u3002</p> <p>\u6392\u5b8c\u5e8f\u4e4b\u540e\u76f4\u63a5\u4e00\u4e2a\u7b80\u5355\u7684 \\(O(n^2)\\) dp \u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u8bbe \\(dp(i)\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u4eba\uff08\u6392\u5e8f\u540e\uff09\uff0c\u80fd\u53d6\u5230\u7684\u9ad8\u5ea6\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5728\u6240\u6709\u53ef\u884c\u7684 \\(dp\\) \u91cc\u9762\u53d6\u4eba\u6570\u6700\u5927\u503c\u5373\u53ef\u3002</p> Tips <p>\u8fd9\u91cc\u7684 Exchange Argument \u91cc\u7684 \u201d\u4ee3\u4ef7\u201c \u5c31\u6bd4\u8f83 \u201c\u5e7f\u4e49\u201d \u4e86\uff0c\u662f \u201c\u8ba9\u64cd\u4f5c\u8fc7\u540e\u7684\u9ad8\u5ea6\u5c3d\u91cf\u5c0f\u201d\u3002</p> <p>\u4e0d\u8fc7\u8fd8\u662f\u7167\u6837\u53ef\u4ee5\u5f52\u5316\u5230\u4e0a\u9762\u8bf4\u7684 Observation\u3002</p> \u5b9e\u73b0 <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e3 + 10;\n\nstruct zabuton {\ni64 a, b;\nbool operator &lt; (const zabuton &amp;c) const {\nreturn (a + b) &lt; (c.a + c.b);\n}\n}arr[si];\ni64 dp[si];\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint n; cin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; arr[i].b &gt;&gt; arr[i].a;\nsort(arr + 1, arr + 1 + n);\n\nmemset(dp, 0x3f, sizeof dp);\ndp[0] = 0;\nfor(int i = 1; i &lt;= n; ++i)\nfor(int j = i; j; --j)\nif(dp[j - 1] &lt;= arr[i].b) dp[j] = min(dp[j], dp[j - 1] + arr[i].a * 1ll);\ni64 mx = -1;\nfor(int i = 1; i &lt;= n; ++i)\nif(dp[i] &lt; 1e18) mx = max(mx, 1ll * i);\ncout &lt;&lt; mx &lt;&lt; endl;\n\nreturn 0;\n}\n// ref : https://blog.csdn.net/Leo_Nasir/article/details/81228924\n</code></pre> <p>\u8fdb\u9636\u53ef\u4ee5\u770b\u770b ZJK \u7237\u7237\u7684 Paper\u3002</p> <p>ref: https://www.cnblogs.com/Gavin_Liu/archive/2011/04/10/2011108.html</p>"}, {"location": "algor/basic/greedy/#_4", "title": "\u53cd\u8bc1\u6cd5", "text": "<p>\u5495\u5495\u5495</p>"}, {"location": "algor/basic/greedy/#_5", "title": "\u6570\u5b66\u5f52\u7eb3\u6cd5", "text": "<p>\u5495\u5495\u5495</p>"}, {"location": "algor/basic/greedy/#_6", "title": "\u53cd\u6094\u8d2a\u5fc3", "text": "<p>\u5495\u5495\u5495</p>"}, {"location": "algor/basic/hash-table/", "title": "\u54c8\u5e0c\u8868", "text": ""}, {"location": "algor/basic/hash-table/#hash", "title": "Hash", "text": "<p>\u8bf4 Hash table \u4e4b\u524d\u5148\u7b80\u5355\u7684\u63d0\u4e00\u5634 Hash\u3002</p> <p>Hash \u7684\u601d\u60f3\u5c31\u662f mapping\uff0c\u6216\u8005\u8bf4 \u201c\u6620\u5c04\u201d\u3002</p> <p>\u5b83\u7684\u4f5c\u7528\u5c31\u662f \u201c\u7f29\u5c0f\u4fe1\u606f\u57df\u201d\uff0c\u628a\u539f\u6765\u5f88\u5206\u6563\u6216\u8005\u8303\u56f4\u5f88\u5927\u7684\u4e1c\u897f\u538b\u7f29\u4e00\u4e0b\uff0c\u65b9\u4fbf\u5904\u7406\u3002</p> <p>\u6700\u5e38\u89c1\u7684\u5e94\u7528\u5c31\u662f\u79bb\u6563\u5316\uff0c\u628a \\(a_i\\) \u6620\u5c04\u6210 \\(val(a_i)\\)\uff0c\u90a3\u4ece \\(\\{a\\} \\to val\\) \u7684\u8fd9\u4e2a\u6620\u5c04\u5c31\u5229\u7528\u4e86 Hash \u7684\u601d\u60f3\u3002</p> <p>\u4e00\u822c Hash \u90fd\u4f1a\u6709\u4e00\u4e2a Hash function\uff0c\u7528\u6765\u628a\u5bf9\u5e94\u503c\u6620\u5c04\u5230\u4e00\u4e2a\u65b0\u7684\u4f4d\u7f6e\u4e0a\u53bb\uff0c\u6bd4\u5982\u79bb\u6563\u5316\u5f53\u4e2d\u7684 Hash function \u5c31\u662f \\(val\\)\u3002</p>"}, {"location": "algor/basic/hash-table/#hash-table", "title": "Hash table", "text": "<p>\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u6570\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\\(0\\le a_i \\le 1e5\\)\u3002</p> <p>\u663e\u7136\u4f1a\u60f3\u5230\u76f4\u63a5\u7528\u6876\u8ba1\u6570\uff0c\u90a3\u4e48\u6269\u5c55\u4e00\u4e0b\u95ee\u9898\uff0c\u4ee4 \\(a_i \\in [-10^{18},10^{18}]\\)\uff1f</p> <p>\u76f4\u63a5\u7edf\u8ba1\u6ca1\u6cd5\u505a\u4e86\uff0c\u5f53\u7136\u4f60\u53ef\u4ee5\u79bb\u6563\u5316\u4e4b\u540e\u626b\u4e00\u904d\uff0c\u6216\u8005\u76f4\u63a5\u5229\u7528 STL Map \u6765\u5b9e\u73b0\u3002</p> <p>STL Map \u672c\u8d28\u4e0a\u662f\u4e00\u9897\u7ea2\u9ed1\u6811\uff0c\u4f46\u662f gnu_pbds \u91cc\u9762\u6709\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\u53eb cc/gp_hash_table\uff0c\u8fd9\u4e24\u4e2a\u4e1c\u897f\u5c31\u662f Hash table \u4f5c\u4e3a\u5e95\u5c42\u7684\uff0c\u53ea\u4e0d\u8fc7\u5e94\u5bf9 Hash \u51b2\u7a81\u7684\u65b9\u6cd5\u4e0d\u540c\u3002</p> <p>\u8003\u8651\u8bbe Hash function : \\(H(x) = (x \\mod p) + 1\\)\uff0c\\(p\\) \u662f\u4e00\u4e2a\u8f83\u5927\u7684\u4f46\u662f\u5c0f\u4e8e \\(n\\) \u7684\u8d28\u6570\u3002</p> <p>\u8fd9\u4e2a Hash function \u4f1a\u628a\u5e8f\u5217\u5206\u6210 \\(p\\) \u7ec4\uff0c\u5728\u5e8f\u5217\u968f\u673a\u7ed9\u51fa\u7684\u60c5\u51b5\u4e0b\u6bcf\u7ec4\u7684\u5927\u5c0f\u662f\u5747\u5300\u7684\u3002</p> <p>\u6211\u4eec\u628a\u8fd9 \\(p\\) \u7ec4\u6570\u6254\u5230\u90bb\u63a5\u8868\u4e0a\u3002</p> <p>\u5bf9\u4e8e\u5e8f\u5217 \\(a\\)\uff0c\u6211\u4eec\u4ece\u5934\u5f00\u59cb\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\uff0c\u5bf9\u4e8e \\(a_i\\)\uff0c\u6211\u4eec\u4ece \\(head(H(a_i))\\) \u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u627e\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u94fe\u8868\u91cc\u9762\u5f00\u59cb\u627e\uff0c\u5982\u679c\u627e\u4e0d\u5230 \\(a_i\\)\uff0c\u6211\u4eec\u5c31\u5728\u8fd9\u7ec4\u94fe\u8868\u7684\u5f00\u5934\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\u5e76\u5c06\u5176\u50a8\u5b58\u7684\u503c\u52a0\u4e00\uff0c\u627e\u5230\u4e86\u5c31\u76f4\u63a5\u5728\u5bf9\u5e94\u4f4d\u7f6e\u52a0\u4e00\u3002</p> <p>\u56e0\u4e3a\u6570\u636e\u968f\u673a\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7684\u671f\u671b\u590d\u6742\u5ea6\u8fd1\u4f3c \\(O(n)\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u6b21\u63d2\u5165\u64cd\u4f5c\u5747\u644a \\(O(1)\\)</p> <p>\u4e2a\u4eba\u611f\u89c9\u5728\u5c3e\u90e8\u63d2\u5165\u4e5f\u5dee\u4e0d\u591a\uff1f\u4e0d\u8fc7\u5728\u5934\u90e8\u63d2\u5165\u4f1a\u597d\u5199\u4e00\u70b9\uff08\u6bd5\u7adf\u94fe\u5f0f\u524d\u5411\u661f\u5c31\u8fd9\u4e48\u5199\uff09\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u53eb\u62c9\u94fe\u6cd5\uff0c\u4e5f\u53eb\u5f00\u6563\u5217\u6cd5\uff0c\u5b83\u7684\u601d\u60f3\u662f\u628a\u6240\u6709 Hash \u51b2\u7a81\u7684\u5143\u7d20\u6254\u5230\u4e00\u4e2a\u7ec4\u91cc\u9762\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u662f\u63a2\u67e5\u6cd5\uff0c\u76f4\u63a5\u628a\u6240\u6709\u5143\u7d20\u5b58\u5728\u4e00\u4e2a\u8868\u5f53\u4e2d\uff0c\u5982\u679c\u53d1\u751f Hash \u51b2\u7a81\u5219\u6839\u636e\u67d0\u79cd\u65b9\u5f0f\u7ee7\u7eed\u8fdb\u884c\u63a2\u67e5\uff0c\u627e\u5230\u4e00\u4e2a\u7a7a\u7684\u4f4d\u7f6e\u628a\u5b83\u653e\u8fdb\u53bb\u3002</p> <p>\u5e38\u7528\u7684\u63a2\u67e5\u65b9\u6cd5\u662f\u7ebf\u6027\u63a2\u67e5\u6cd5\uff0c\u5c31\u662f\u5982\u679c\u5728 \\(pos\\) \u53d1\u751f\u51b2\u7a81\uff0c\u5c31\u4e0d\u65ad\u627e \\(pos + 1, pos + 2, \\dots\\) \u76f4\u5230\u4e0d\u51b2\u7a81\u3002</p> <p>\u8fd9\u91cc\u53ea\u5b9e\u73b0\u4e86\u62c9\u94fe\u6cd5\u3002</p> <pre><code>// \u778e\u5199\u7684\uff0c\u6ca1\u7f16\u8bd1\u6ca1\u6d4b\u8fc7\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\nconst int si = 1e5 + 10;\nint n, a[si], tot = 0;\nint head[si], val[si], cnt[si], Next[si];\n\nint H(int x) { return (x % p) + 1; }\nbool insert(int x) {\nbool exist = false;\nint u = H(x); for(int i = head[u]; ~i; i = Next[i]) {\nif(val[i] == x) {\ncnt[i]++, exist = true;\nbreak;\n}\n}\nif(exist) return true;\n++tot, Next[tot] = head[u], val[tot] = x, cnt[tot] = 1, head[u] = tot;\nreturn false;\n}\nint query(int x) {\nint u = H(x);\nfor(int i = head[u]; ~i; i = Next[i])\nif(val[i] == x) return cnt[i];\nreturn 0;\n}\n// \u8bb0\u5f97\u521d\u59cb\u5316\u3002\n</code></pre>"}, {"location": "algor/basic/sorting/", "title": "\u6392\u5e8f", "text": ""}, {"location": "algor/basic/sorting/#_1", "title": "\u7a33\u5b9a\u6027", "text": "<p>\u5c31\u662f\u8bf4\uff0c\u5047\u8bbe\u539f\u5e8f\u5217\u5f53\u4e2d\u6709\u4e24\u4e2a\u76f8\u540c\u7684\u5143\u7d20 \\(a_i, a_j\\)\u3002</p> <p>\u5982\u679c\u8fd9\u4e2a\u6392\u5e8f\u7b97\u6cd5\u6ca1\u6709\u6539\u53d8 \\(a_i, a_j\\) \u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u6392\u5e8f\u7b97\u6cd5\u5c31\u662f\u7a33\u5b9a\u7684\u3002</p> <p>\u57fa\u6570\u6392\u5e8f\u3001\u8ba1\u6570\u6392\u5e8f\u3001\u63d2\u5165\u6392\u5e8f\u3001\u5192\u6ce1\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u662f\u7a33\u5b9a\u6392\u5e8f\u3002</p> <p>\u9009\u62e9\u6392\u5e8f\u3001\u5806\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u4e0d\u662f\u7a33\u5b9a\u6392\u5e8f\u3002</p>"}, {"location": "algor/basic/sorting/#_2", "title": "\u9009\u62e9\u6392\u5e8f", "text": "<p>\u5c31\u662f\u904d\u5386 \\(n\\) \u8f6e \\(1 \\to n\\)\uff0c\u7b2c \\(i\\) \u8f6e\u627e\u5230\u7b2c \\(i\\) \u5c0f\u7684\u6570\uff0c\u7136\u540e\u653e\u5230\u4f4d\u7f6e \\(i\\) \u4e0a\uff08\u5b9e\u73b0\u65f6\u628a\u8fd9\u4e2a\u6570\u548c \\(a_i\\) \u4ea4\u6362\uff09\u3002</p> <p>\u5e73\u5747\uff0c\u6700\u574f\uff0c\u6700\u4f18\uff0c\u590d\u6742\u5ea6 \\(O(n^2)\\)\uff0c\u56e0\u4e3a\u6bcf\u6b21\u5faa\u73af\u6b21\u6570\u662f\u56fa\u5b9a\u7684\u3002</p> <pre><code>for(int i = 1; i &lt; n; ++i) {\nint ith = i;\nfor(int j = i + 1; j &lt;= n; ++j) {\nif(a[j] &lt; a[ith]) ith = j;\n}\nswap(a[i], a[ith]);\n}\n</code></pre>"}, {"location": "algor/basic/sorting/#_3", "title": "\u63d2\u5165\u6392\u5e8f", "text": "<p>\u7c7b\u4f3c\u6253\u724c\u7684\u65f6\u5019\u7684\u6392\u5e8f\u65b9\u6cd5\u3002</p> <p>\u628a\u539f\u5e8f\u5217\u5206\u6210\u3010\u6ca1\u6709\u6392\u5e8f\u3011\u548c\u3010\u6392\u5e8f\u8fc7\u3011\u4e24\u90e8\u5206\u3002</p> <p>\u6bcf\u6b21\u4ece\u3010\u6ca1\u6709\u6392\u5e8f\u3011\u7684\u91cc\u9762\u6293\u4e00\u5f20\uff0c\u6254\u5230\u3010\u6392\u5e8f\u8fc7\u3011\u7684\u4e00\u4e2a\u5408\u9002\u4f4d\u7f6e\uff08\u7b2c\u4e00\u4e2a\u5927\u4e8e\u5b83\u7684\u5143\u7d20\uff09\u524d\u9762\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\u662f\uff0c\u4ece \\(2\\) \u5f00\u59cb\uff0c\u5047\u8bbe \\([1, i)\\) \u662f\u5df2\u7ecf\u6392\u5e8f\u8fc7\u7684\uff0c\u7136\u540e\u5bf9\u4e8e \\(a_i\\)\uff0c\u4e0d\u65ad\u8ba9\u524d\u9762\u7684\u5143\u7d20\u540e\u79fb\uff0c\u76f4\u5230\u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e\uff0c\u5c31\u628a \\(a_i\\) \u653e\u8fdb\u53bb\u3002</p> <pre><code>for(int i = 2; i &lt;= n; ++i) {\nint key = a[i]; // \u6ce8\u610f\u8981\u63d0\u524d\u50a8\u5b58 a[i]\uff0c\u4e0d\u7136\u7b2c\u4e00\u6b21\u540e\u79fb a[i] = a[i - 1] \u5c31\u628a a[i] \u8986\u76d6\u6389\u4e86\u3002\nint j = i - 1;\nwhile(j &gt; 0 &amp;&amp; a[j] &gt; key) a[j + 1] = a[j], --j;\na[j + 1] = key;\n}\n</code></pre> <p>\u6700\u4f18\u590d\u6742\u5ea6 \\(O(n)\\)\uff0c\u5c31\u662f\u5982\u679c\u5e8f\u5217\u5df2\u7ecf\u6392\u597d\u4e86\u5c31\u5b8c\u5168\u4e0d\u4f1a\u540e\u79fb\uff0c\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u3002</p> <p>\u6700\u574f\u590d\u6742\u5ea6 \\(O(n^2)\\)\uff0c\u5982\u679c\u5e8f\u5217\u7ffb\u8f6c\u8fc7\u6765\uff0c\u603b\u5171\u8981\u8dd1\u7684\u8ddd\u79bb\u5c31\u662f \\(\\sum\\limits_{i = 1}^{n} (i - 1) = O(n^2)\\)\u3002</p> <p>\u5e73\u5747\u590d\u6742\u5ea6\u662f \\(O(n^2)\\)\u3002</p>"}, {"location": "algor/basic/sorting/#_4", "title": "\u5192\u6ce1\u6392\u5e8f", "text": "<p>\u626b\u7279\u522b\u591a\u904d\uff0c\u6bcf\u6b21\u626b\u63cf\u90fd\u4ea4\u6362\u770b\u5230\u7684\u9006\u5e8f\u5bf9\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u8bc1\u660e\uff0c\u626b\u5b8c\u7b2c \\(i\\) \u8f6e\u4e4b\u540e\uff0c\u540e \\(i\\) \u9879\u662f\u6700\u5927\u7684 \\(i\\) \u9879\u3002</p> <p>\u8fd9\u4e2a\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u5c31\u80fd\u8bc1\u660e\u3002</p> <p>\u5c31\u662f\u4f60\u8003\u8651\u7b2c\u4e00\u8f6e\uff0c\u5047\u8bbe\u5728\u4f4d\u7f6e \\(x\\) \u627e\u5230\u4e86\u6700\u5927\u7684\u5143\u7d20\uff0c\u5b83\u5fc5\u7136\u4f1a\u88ab\u4e00\u76f4\u4ea4\u6362\u4ea4\u6362\u4ea4\u6362\uff0c\u7136\u540e\u4e00\u76f4\u4ea4\u6362\u5230\u6700\u540e\u3002</p> <p>\u7b2c\u4e8c\u8f6e\u5fc5\u7136\u4f1a\u628a\u7b2c\u4e8c\u5927\u7684\u5143\u7d20\u4ea4\u6362\u4ea4\u6362\u5230 \\(n-1\\)\u3002</p> <p>\u4ee5\u6b64\u7c7b\u63a8\u53ef\u4ee5\u8bc1\u660e\u5192\u6ce1\u6392\u5e8f\u7684\u6b63\u786e\u6027\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u597d\u6bd4\u6ce1\u6ce1\u5192\u4e0a\u53bb\u4e00\u6837\uff0c\u6240\u4ee5\u53eb\u5192\u6ce1\u6392\u5e8f\u3002</p> <pre><code>bool ff = true;\nwhile(ff) {\nff = false;\nfor(int i = 1; i &lt; n; ++i) {\nif(a[i] &gt; a[i + 1]) ff = true, swap(a[i], a[i + 1]);\n}\n}\n</code></pre> <p>\u6700\u4f18\u590d\u6742\u5ea6\u5c31\u662f\u5df2\u7ecf\u6392\u5e8f\u8fc7\u7684\u60c5\u51b5\uff0c\u626b\u4e00\u904d\u5c31\u5b8c\u4e86\uff0c\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> <p>\u6700\u574f\u60c5\u51b5\uff0c\u5c31\u662f\u7ffb\u8f6c\u8fc7\u6765\uff0c\u8981\u4ea4\u6362 \\(\\dfrac{n(n - 1)}{2} = O(n^2)\\) \u6b21\u3002</p> <p>\u5e73\u5747\u590d\u6742\u5ea6\u662f \\(O(n^2)\\)\u3002</p> <p>\u663e\u7136\u662f\u7a33\u5b9a\u7684\uff0c\u56e0\u4e3a\u8003\u8651\u4e24\u4e2a\u76f8\u540c\u7684\u5143\u7d20 \\(a_x, a_y, x &lt; y\\)\uff0c\u90a3\u4e48 \\(a_x\\) \u88ab\u4ea4\u6362\u5230 \\(y - 1\\) \u7684\u4f4d\u7f6e\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u88ab\u4ea4\u6362\u5230\u540e\u9762\u4e86\uff08\u56e0\u4e3a\u5199\u7684 \\(a_i &gt; a_{i + 1}\\) \u624d\u4ea4\u6362\uff09\uff0c\u90a3 \\(a_y\\) \u5fc5\u7136\u5148\u88ab\u6362\u5230\u540e\u9762\uff0c\u76f8\u5bf9\u987a\u5e8f\u6ca1\u6709\u6539\u53d8\u3002</p> <p>\u5173\u4e8e\u5192\u6ce1\u6392\u5e8f\u6709\u4e00\u4e2a\u7ed3\u8bba\uff08\u6765\u81ea POJ2299 - Ultra-QuickSort\uff09</p> <p>\u5c31\u662f\uff0c\u5982\u679c\u53ea\u5141\u8bb8\u8fdb\u884c\u6bd4\u8f83\u548c\u4ea4\u6362\u76f8\u90bb\u4e24\u9879\u7684\u64cd\u4f5c\uff08\u5c31\u662f\u5192\u6ce1\u6392\u5e8f\uff09\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u5e8f\u5217 \\(a\\)\uff0c\u8ba9\u4ed6\u6709\u5e8f\uff0c\u6700\u5c11\u9700\u8981\u7684\u64cd\u4f5c\u6b21\u6570\u5c31\u662f \\(a\\) \u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002</p> <p>\u6240\u4ee5\u5192\u6ce1\u6392\u5e8f\u4f7f\u4e00\u4e2a\u5e8f\u5217\u6709\u5e8f\u7684\u4ea4\u6362\u6b21\u6570\u5e94\u5f53\u662f \\(a\\) \u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002</p> <p>\uff08\u56e0\u4e3a\u5192\u6ce1\u6bcf\u6267\u884c\u4e00\u6b21\u4ea4\u6362\u64cd\u4f5c\uff0c\u5c31\u76f8\u5f53\u4e8e\u6d88\u9664\u4e86\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u5e76\u4e14\u4e4b\u540e\u4e0d\u4f1a\u518d\u8ba9\u8fd9\u4e2a\u9006\u5e8f\u5bf9\u51fa\u73b0\uff09</p>"}, {"location": "algor/basic/sorting/#_5", "title": "\u8ba1\u6570\u6392\u5e8f", "text": "<p>\u5f00\u4e00\u4e2a\u6876\uff0c\u7ef4\u62a4\u503c\u57df \\(|w|\\)\uff0c\uff08\u6ce8\u610f\u8fd9\u4e2a\u4e0d\u662f\u6876\u6392\u662f\u8ba1\u6570\uff09\u3002</p> <p>\u7136\u540e \\(O(n)\\) \u626b\u4e00\u904d\u628a\u6240\u6709\u5143\u7d20\u6254\u8fdb\u6876\u91cc\u9762\u3002  </p> <p>\u7136\u540e\u4ece\u5c0f\u5230\u5927\u62ff\u51fa\u6765\u5c31\u884c\u4e86\uff0c\u663e\u7136\u662f\u7a33\u5b9a\u7684\uff0c\u56e0\u4e3a\u5148\u51fa\u73b0\u7684\u4f1a\u88ab\u5148\u653e\u8fdb\u6876\uff0c\u4f60\u53ef\u4ee5\u628a\u6876\u7406\u89e3\u4e3a\u4e00\u4e2a\u961f\u5217\u3002</p> <p>\u4f46\u8fd9\u6837\u8fd8\u4e0d\u591f\u5feb\uff0c\u56e0\u4e3a\u503c\u57df\u91cc\u9762\u4e0d\u4e00\u5b9a\u90fd\u4f1a\u51fa\u73b0\u3002</p> <p>\u6240\u4ee5\u7ed9\u6876\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u5012\u8fc7\u6765\u8ba1\u7b97\u4e00\u4e0b\u6392\u540d\u5c31\u884c\u4e86\u3002</p> <pre><code>for(int i = 1; i &lt;= n; ++i) cnt[a[i]]++;\nfor(int i = 1; i &lt;= w; ++i)\ncnt[i] += cnt[i - 1];\nfor(int i = n; i &gt;= 1; --i) b[cnt[a[i]]--] = a[i];\n</code></pre> <p>\u590d\u6742\u5ea6\u7a33\u5b9a \\(O(n + w)\\)\u3002</p>"}, {"location": "algor/basic/sorting/#_6", "title": "\u5feb\u901f\u6392\u5e8f", "text": "<p>\u6bcf\u6b21\u628a\u5e8f\u5217\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5b50\u5e8f\u5217\u7684\u6570\u90fd\u5c0f\u4e8e\u540e\u4e00\u4e2a\u5b50\u5e8f\u5217\u7684\u6570\u3002</p> <p>\u7136\u540e\u9012\u5f52\u5230\u6bcf\u4e2a\u5b50\u5e8f\u5217\u91cc\u9762\u5728\u641e\u3002</p> <p>\u6700\u540e\u9012\u5f52\u5b8c\u4e86\u5c31\u76f4\u63a5\u6709\u5e8f\u4e86\uff0c\u4e00\u822c\u5b9e\u73b0\u7684\u65f6\u5019\u4f1a\u968f\u673a\u9009\u4e00\u4e2a\u5206\u754c \\(key\\)\uff0c\u5927\u4e8e \\(key\\) \u7684\u6254\u5230\u540e\u9762\uff0c\u5c0f\u4e8e\u7b49\u4e8e \\(key\\) \u7684\u6254\u5230\u524d\u9762\u3002</p> <p>\u7136\u540e\u6709\u4e00\u79cd\u53eb\u4e09\u8def\u5feb\u6392\u7684\u4f18\u5316\uff0c\u5c31\u662f\u628a\u7b49\u4e8e\u7684\u5355\u72ec\u6254\u5230\u57fa\u51c6\u5206\u754c\u503c\u9644\u8fd1\uff0c\u8fd9\u6837\u591a\u4e2a\u76f8\u7b49\u7684\u5143\u7d20\u5c31\u4f1a\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u51cf\u5c0f\u4e4b\u540e\u591a\u6b21\u5904\u7406\u7684\u5e38\u6570\u3002</p> <pre><code>void Qsort(int a[], int len) {\nif(len &lt;= 1) return;\nint key = a[1 + rand() % len];\n// i\uff1a\u5f53\u524d\u64cd\u4f5c\u7684\u5143\u7d20\n// j\uff1a\u7b2c\u4e00\u4e2a\u7b49\u4e8e key \u7684\u5143\u7d20\n// k\uff1a\u7b2c\u4e00\u4e2a\u5927\u4e8e key \u7684\u5143\u7d20\nint i = 1, j = 1, k = len + 1;\n// \u5b8c\u6210\u4e00\u8d9f\u4e09\u8def\u5feb\u6392\uff0c\u5c06\u5e8f\u5217\u5206\u4e3a\uff1a\n// \u5c0f\u4e8e pivot \u7684\u5143\u7d20\uff5c \u7b49\u4e8e pivot \u7684\u5143\u7d20 \uff5c \u5927\u4e8e pivot \u7684\u5143\u7d20\nwhile(i &lt; k) {\nif(a[i] &lt; key) swap(a[i++], a[j++]);\nelse if(a[i] &gt; key) swap(a[i], a[--k]);\nelse ++i;\n}\nQsort(a, j - 1), Qsort(a + k - 1, len - k + 1);\n}\n</code></pre> <p>\u660e\u663e\u4e0d\u7a33\u5b9a\uff0c\u539f\u59cb\u5feb\u6392\u6700\u574f \\(O(n^2)\\)\uff0c\u5e73\u5747\u6700\u4f18\u90fd\u662f \\(O(n \\log n)\\)\u3002</p> <p>\u56e0\u4e3a\u6bcf\u6b21\u53d6 key \u7684\u65f6\u5019\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u80fd\u53d6\u5230\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u5206\u754c\uff0c\u9012\u5f52\u5f0f\u662f \\(T(n) = 2T(n/2) + \\Theta(n)\\)\uff0c\u4e3b\u5b9a\u7406\u53ef\u4ee5\u5f97\u5230\u3002</p> <p>\u5982\u679c\u6bcf\u6b21\u90fd\u53d6\u5230\u6700\u5927\u503c\uff0c\u9012\u5f52\u5f0f\u5c31\u662f \\(T(n) = T(n - 1) + \\Theta(n)\\)\uff08\u957f\u5ea6\u7b49\u4e8e\u4e00\u4e0d\u7528\u9012\u5f52\uff09\uff0c\u7d2f\u52a0\u53ef\u4ee5\u5f97\u5230\u3002</p>"}, {"location": "algor/basic/sorting/#_7", "title": "\u5f52\u5e76\u6392\u5e8f", "text": "<p>\u5f88\u6709\u610f\u601d\u7684\u4e00\u4e2a\u7b97\u6cd5\u3002</p> <p>\u5c31\u662f\u628a\u5e8f\u5217\u5148\u4ece\u4e2d\u95f4\u5206\u5f00\uff0c\u7136\u540e\u9012\u5f52\u4e0b\u53bb\u5bf9\u4e24\u5757\u5757\u5185\u6392\u5e8f\uff0c</p> <p>\u9012\u5f52\u56de\u6765\uff0c\u5047\u8bbe\u6b64\u65f6\u5e8f\u5217\u5de6\u53f3\u4e24\u534a\u90fd\u5df2\u7ecf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u597d\uff08\u5148\u4e0d\u7ba1\u5b83\u600e\u4e48\u6392\u7684\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\uff0c\u6700\u540e\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\u5c31\u662f\u6392\u5e8f\u597d\u7684\uff0c\u7136\u540e\u4e00\u5c42\u4e00\u5c42\u8fd4\u56de\u4e0a\u6765\u5408\u5e76\u7684\u65f6\u5019\u5c31\u6392\u597d\u5e8f\u4e86\uff09\u3002</p> <p>\u7136\u540e\u76f4\u63a5\u4e0d\u65ad\u53d6\u4e24\u5757\u7684\u201c\u5934\u201d\u7684\u6700\u5c0f\u503c\uff0c\u6254\u8fdb\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4\u3002</p> <p>\u6700\u540e\u8d4b\u503c\u4e00\u4e0b\u5c31\u884c\u4e86\u3002</p> <pre><code>void MergeSort(int l, int r) {\nif(l &gt;= r) return; // length == 1 or &lt; 1\nint mid = (l + r) &gt;&gt; 1;\nMergeSort(l, mid), MergeSort(mid + 1, r);\nfor(int i = l, j = mid + 1, k = l; k &lt;= r; ++k) {\nif((j &gt; r) || (i &lt;= mid &amp;&amp; a[i] &lt;= a[j])) // \u6ce8\u610f\u7528 &lt;= \u4fdd\u8bc1\u7a33\u5b9a\u6027\ntmp[k] = a[i++];\nelse tmp[k] = a[j++];\n}\nfor(int i = l; i &lt;= r; ++i) a[i] = tmp[i];\n}\n</code></pre> <p>\u7a33\u5b9a\u7684 \\(O(n \\log n)\\) \u7684\u6392\u5e8f\u3002</p> <p>\u7136\u540e\u8fd9\u4e2a\u662f\u53ef\u4ee5\u62ff\u6765\u505a\u9006\u5e8f\u5bf9\u7684\u3002</p> <p>\u56e0\u4e3a\u9009\u540e\u4e00\u6bb5\u7684\u65f6\u5019\u5c31\u76f8\u5f53\u4e8e\u6d88\u9664\u4e86\u9006\u5e8f\u5bf9\uff0c\u4e2a\u6570\u662f\u524d\u4e00\u6bb5\u5f53\u524d\u6ca1\u6709\u52a0\u8fdb\u53bb\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u5c31\u662f <code>mid - i + 1</code> \u4e2a\u3002</p> <p>\u4ee3\u7801\u89c1\u4e0b\u9762\u9006\u5e8f\u5bf9\u677f\u5757\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u5229\u7528\u5b83\u7ebf\u6027\u627e\u7b2c \\(k\\) \u5927\u7684\u7b97\u6cd5\uff0c\u56e0\u4e3a\u4e0d\u662f\u7a33\u5b9a\u7684\uff0c\u6240\u4ee5\u627e\u4e0d\u5230\u6700\u524d\u7684\u4e00\u4e2a\u7b2c \\(k\\) \u5927\u3002</p> <p>\u4f46\u662f Median of Median \u53ef\u4ee5\u6700\u574f \\(O(n)\\) \u505a\u7a33\u5b9a\u7684\u7b2c \\(k\\) \u5927\u3002</p>"}, {"location": "algor/basic/sorting/#_8", "title": "\u4e00\u4e9b\u7b80\u5355\u5e94\u7528", "text": ""}, {"location": "algor/basic/sorting/#_9", "title": "\u79bb\u6563\u5316", "text": "<pre><code>vector&lt;int&gt;v;\nint main(){\nfor(register int i=1;i&lt;=n;++i){\nscanf(\"%d\",&amp;a[i]);\nv.push_back(a[i]);\n}\nsort(v.begin(),v.end());\nv.erase(unique(v.begin(),v.end()),v.end());\nfor(register int i=1;i&lt;=n;++i){\na[i]=lower_bound(v.begin(),v.end(),a[i])-v.begin()+1;\n}\n}\n</code></pre> <p>\u601d\u60f3\u5c31\u662f\u628a\u4e00\u4e9b\u7279\u522b\u5927\u7684\u6570\u6620\u5c04\u5230\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u8303\u56f4\u4e4b\u5185\u3002</p> <p>\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u53e6\u5916\u65b0\u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58\u79bb\u6563\u4e4b\u540e\u7684\u503c\u3002</p> <pre><code>// \u4e8c\u7ef4\nvector&lt;int&gt;v;\nint main(){\nfor(register int i=1;i&lt;=n;i++){\nscanf(\"%d%d%d\",&amp;x[i],&amp;y[i],&amp;e[i]);\nv.push_back(x[i]);\nv.push_back(y[i]);\n}\nsort(v.begin(),v.end()); // \u6392\u5e8f\nv.erase(unique(v.begin(),v.end()),v.end()); // \u53bb\u91cd\nfor(register int i=1;i&lt;=n;i++){\nx[i]=lower_bound(v.begin(),v.end(),x[i])-v.begin()+1;\ny[i]=lower_bound(v.begin(),v.end(),y[i])-v.begin()+1;\n} // \u53ea\u7528\u4e00\u4e2a vector \u4f1a\u7701\u7a7a\u95f4\n}\n</code></pre>"}, {"location": "algor/basic/sorting/#_10", "title": "\u5bf9\u9876\u5806", "text": "<p>\u7ef4\u62a4\u52a8\u6001\u4e2d\u4f4d\u6570\u95ee\u9898\u3002</p> <p>\u5047\u8bbe\u6bcf\u4e2a\u65f6\u523b\u5e8f\u5217 \\(a\\) \u7684\u957f\u5ea6 \\(n\\) \u90fd\u662f\u5947\u6570\u3002</p> <p>\u90a3\u4e48\u8ba9\u6392\u540d\u5728 \\(1 \\to \\lfloor m/2 \\rfloor\\) \u7684\u6254\u5230\u5927\u6839\u5806\uff0c\u5176\u4ed6\u7684\u6254\u5230\u5c0f\u6839\u5806\u3002</p> <p>\u5982\u679c\u67d0\u4e2a\u5806\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u628a\u5b83\u7684\u5806\u9876\u6254\u5230\u53e6\u5916\u4e00\u4e2a\u5806\u53bb\u3002</p> <p>\u7b54\u6848\u5c31\u662f\u5c0f\u6839\u5806\u7684\u5806\u9876\u3002</p>"}, {"location": "algor/basic/sorting/#_11", "title": "\u9006\u5e8f\u5bf9", "text": "<p>\u5b9a\u4e49\u9006\u5e8f\u5bf9\u4e3a\u5f62\u5982 (i, j)\uff0c\u4fdd\u8bc1 \\(i &lt; j, a_i &gt; a_j\\) \u7684\u70b9\u5bf9\u3002</p> <p>\u6c42\u4e00\u4e2a\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002</p> <p>\u6700\u7b80\u5355\u7684\u505a\u6cd5\u5c31\u662f\u66b4\u529b \\(O(n^2)\\)\u3002</p> <p>\\(\\log\\) \u505a\u6cd5\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u5f52\u5e76\u6392\u5e8f\u3002</p> <p>\u6811\u72b6\u6570\u7ec4\u505a\u6cd5\u53ef\u80fd\u66f4\u7b80\u5355\u4e00\u70b9\u3002</p> <p>\u53ea\u9700\u8981\u79bb\u6563\u5316\uff0c\u7136\u540e\u52a8\u6001\u52a0\u5165\uff0c\u6bcf\u6b21\u52a0\u5165\u7684\u65f6\u5019\u67e5\u4e00\u67e5\u524d\u9762\u6bd4\u4ed6\u5927\u7684\u6570\u6709\u591a\u5c11\u4e2a\u5373\u53ef\u3002</p> <p>\u5f52\u5e76\u6392\u5e8f\u7684\u8bdd\uff1a</p> <p>\u4ee3\u7801\u5b9e\u73b0\u4e2d\u7684 <code>ans += mid - i + 1</code> \u5c31\u662f\u5728\u7edf\u8ba1\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u7b97\u6cd5\u628a\u9760\u540e\u7684\u6570\u653e\u5230\u524d\u9762\u4e86\uff08\u8f83\u5c0f\u7684\u6570\u653e\u5728\u524d\u9762\uff09\uff0c\u6240\u4ee5\u5728\u8fd9\u4e2a\u6570\u539f\u6765\u4f4d\u7f6e\u4e4b\u524d\u7684\u3001\u6bd4\u5b83\u5927\u7684\u6570\u90fd\u4f1a\u548c\u5b83\u5f62\u6210\u9006\u5e8f\u5bf9\uff0c\u800c\u8fd9\u4e2a\u4e2a\u6570\u5c31\u662f\u8fd8\u6ca1\u6709\u5408\u5e76\u8fdb\u53bb\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5373 <code>mid - i + 1</code>\u3002</p> <pre><code>void MergeSort(int l, int r) {\nif(l &gt;= r) return;\nMergeSort(l, mid), MergeSort(mid + 1, r);\nfor(int i = l, j = mid + 1, k = l; k &lt;= r; ++k) {\nif((j &gt; r) || (i &lt;= mid &amp;&amp; a[i] &lt;= a[j]))\ntmp[k] = a[i++];\nelse tmp[k] = a[j++], ans += (mid - i + 1);\n}\nfor(int i = l; i &lt;= r; ++i) a[i] = tmp[i];\n}\n</code></pre>"}, {"location": "algor/basic/time-complexity/", "title": "\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790", "text": ""}, {"location": "algor/basic/time-complexity/#_1", "title": "\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790", "text": ""}, {"location": "algor/basic/time-complexity/#_2", "title": "\u57fa\u672c\u64cd\u4f5c\u6570", "text": "<p>\u8ba1\u7b97\u673a\u6267\u884c\u7684\u4e00\u6b21\u8d4b\u503c\uff0c\u4e00\u6b21\u8fd0\u7b97\uff0c\u4e00\u6b21\u5bf9\u5185\u5b58\u7684\u8bbf\u95ee\u90fd\u53eb\u505a\u4e00\u6b21\u57fa\u672c\u64cd\u4f5c\u3002</p> <p>\u4e00\u822c\u90fd\u4f1a\u7528\u4e00\u4e2a\u7b97\u6cd5\u5728\u67d0\u4e2a\u6570\u636e\u89c4\u6a21\u4e0b\u7684\u57fa\u672c\u64cd\u4f5c\u6570\u8fdb\u884c\u8ba1\u6570\u4ee5\u63cf\u8ff0\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u3002</p>"}, {"location": "algor/basic/time-complexity/#_3", "title": "\u65f6\u95f4\u590d\u6742\u5ea6", "text": "<p>\u4e00\u822c\u6765\u8bf4\uff0c\u8861\u91cf\u4e00\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u90fd\u9700\u8981\u5728\u6570\u636e\u89c4\u6a21\u4e0b\u770b\u4ed6\u7684\u8fd0\u884c\u65f6\u95f4\u589e\u957f\u8d8b\u52bf\u3002</p> <p>\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u7528\u4e00\u4e2a\u51fd\u6570 \\(f\\)\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7b97\u6cd5\u5efa\u7acb\u8d77\u4ece\u6570\u636e\u89c4\u6a21\u5230\u8fd0\u884c\u65f6\u95f4\u7684\u6620\u5c04\u3002</p> <p>\u800c\u8fd0\u884c\u65f6\u95f4\u4e00\u822c\u90fd\u4f7f\u7528\u57fa\u672c\u64cd\u4f5c\u7684\u6570\u91cf\u6765\u63cf\u8ff0\uff0c\u518d\u6839\u636e\u8ba1\u7b97\u673a\u5b9e\u9645\u7684\u786c\u4ef6\u914d\u7f6e\uff08\u5355\u4f4d\u65f6\u95f4\u80fd\u8fdb\u884c\u591a\u5c11\u6b21\u57fa\u672c\u64cd\u4f5c\uff09\u6765\u770b\u5728\u8ba1\u7b97\u673a\u4e0a\u5b9e\u9645\u7684\u8fd0\u884c\u65f6\u95f4\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3b\u8981\u5206\u56db\u79cd\uff1a</p> <ul> <li>\u6700\u574f\u590d\u6742\u5ea6\uff0c\u63cf\u8ff0\u7b97\u6cd5\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u8fd0\u884c\u6548\u7387\uff0c\u76f4\u63a5\u8bf4\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u822c\u90fd\u6307\u6700\u574f\u590d\u6742\u5ea6\u3002   </li> <li>\u6700\u4f18\u590d\u6742\u5ea6\uff0c\u63cf\u8ff0\u7b97\u6cd5\u6700\u597d\u60c5\u51b5\u4e0b\u7684\u8fd0\u884c\u6548\u7387\uff0c\u4e0d\u5e38\u7528\u3002</li> <li>\u5e73\u5747\u590d\u6742\u5ea6\uff08\u671f\u671b\u590d\u6742\u5ea6\uff09\uff0c\u5f53\u8f93\u5165\u6570\u636e\u89c4\u6a21\u968f\u673a\u7684\u65f6\u5019\u7684\u590d\u6742\u5ea6\uff0c\u5c31\u662f\u5404\u4e2a\u6570\u636e\u89c4\u6a21\u4e0b\u590d\u6742\u5ea6\u7684\u5e73\u5747\u3002</li> <li>\u5747\u644a\u590d\u6742\u5ea6\uff0c\u591a\u6b21\u64cd\u4f5c\u7684\u603b\u590d\u6742\u5ea6\u9664\u4ee5\u64cd\u4f5c\u6b21\u6570\uff0c\u5c31\u662f\u5355\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\uff0c\uff08\u6ce8\u610f\u548c\u5e73\u5747\u590d\u6742\u5ea6\u505a\u533a\u5206\uff09</li> </ul>"}, {"location": "algor/basic/time-complexity/#_4", "title": "\u6e10\u8fdb\u8bb0\u53f7", "text": "<p>\u6e10\u8fdb\u7b26\u53f7\u662f\u51fd\u6570\u7684\u9636\u7684\u89c4\u8303\u63cf\u8ff0\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u6e10\u8fdb\u7b26\u53f7\u5ffd\u7565\u4e86\u4e00\u4e2a\u51fd\u6570\u4e2d\u589e\u957f\u8f83\u6162\u7684\u90e8\u5206\u4ee5\u53ca\u5404\u9879\u7684\u7cfb\u6570\uff08\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u5173\u5206\u6790\u4e2d\uff0c\u7cfb\u6570\u4e00\u822c\u88ab\u79f0\u4f5c\u201c\u5e38\u6570\u201d\uff09\uff0c\u800c\u4fdd\u7559\u4e86\u53ef\u4ee5\u7528\u6765\u8868\u660e\u8be5\u51fd\u6570\u589e\u957f\u8d8b\u52bf\u7684\u91cd\u8981\u90e8\u5206\u3002</p> <p>\u6240\u4ee5\u8bf4\u5728\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u65f6\u5019\uff08\u5728\u6e10\u8fdb\u610f\u4e49\u4e0a\uff09\u4e00\u822c\u90fd\u662f\u76f4\u63a5\u5ffd\u7565\u6389\u63cf\u8ff0\u57fa\u672c\u64cd\u4f5c\u6570\u7684\u591a\u9879\u5f0f\u7684\u5e38\u6570\u9879\u8fd8\u6709\u4e00\u4e9b\u4f4e\u6b21\u9879\u5bf9\u4e8e\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5f71\u54cd\u7684\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8981\u5361\u5e38\uff0c\u4e0d\u5ffd\u7565\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4e0d\u8fc7\u8fd9\u5c31\u4e0d\u662f\u4e25\u8c28\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bb0\u6cd5\u4e86\u3002</p> <ul> <li>\\(\\Theta\\)\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u51fd\u6570 \\(f(n), g(n)\\)\uff0c\u5982\u679c\u5b58\u5728 \\(c_1,c_2,n_0 &gt; 0\\)\uff0c\u4f7f\u5f97 \\(\\forall n\\ge n_0, 0 \\le c_1 \\cdot g(n) \\le f(n) \\le c_2 \\cdot g(n)\\)\uff0c\u5219\u8bb0\u4e3a \\(f(n) = \\Theta(g(n))\\)\uff0c\u7528\u4e8e\u63cf\u8ff0\u7b97\u6cd5\u7684\u4e0a\u4e0b\u754c\u3002</li> <li>\\(O\\)\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u51fd\u6570 \\(f(n), g(n)\\)\uff0c\u5982\u679c\u5b58\u5728 \\(c, n_0 &gt; 0\\)\uff0c\u4f7f\u5f97 \\(\\forall n\\ge n_0,0 \\le f(n) \\le c \\cdot g(n)\\)\uff0c\u5219\u8bb0\u4e3a \\(f(n) = O(g(n))\\)\uff0c\u7528\u4e8e\u63cf\u8ff0\u7b97\u6cd5\u7684\u4e0a\u754c\uff0c\u5927\u90e8\u5206\u65f6\u5019\u90fd\u7528\u8fd9\u4e2a\u63cf\u8ff0\uff0c\u4e0d\u8fc7\u7b97\u6cd5\u4f7f\u7528\u7684\u65f6\u5019\u7684\u6700\u574f\u590d\u6742\u5ea6\u4e0d\u662f\u5927 \\(O\\) \u8bb0\u53f7\uff0c\u7528 \\(\\Theta\\) \u8868\u793a\u6700\u574f\u590d\u6742\u5ea6\u662f\u5b8c\u5168\u53ef\u4ee5\u7684\uff0c\u53ea\u4e0d\u8fc7\u5927\u90e8\u5206\u65f6\u5019\u90fd\u53ea\u6bd4\u8f83\u65b9\u4fbf\u8bc1\u660e\u51fa\u4e0a\u754c\uff0c\u6240\u4ee5\u7528\u5927 \\(O\\) \u7528\u7684\u591a\uff0c\u5c31\u662f\u8bf4\uff0c\u5728\u4e00\u5b9a\u60c5\u51b5\u4e0b \\(O\\) \u53ef\u4ee5\u8868\u793a\u6700\u574f\u590d\u6742\u5ea6\u3002</li> <li>\\(o\\)\uff1a\u5c31\u662f \\(O\\) \u53bb\u6389\u7b49\u53f7\u53d8\u6210 \\(&lt;\\)\u3002</li> <li>\\(\\Omega\\)\uff1a\\(\\ge\\)\u3002</li> <li>\\(\\omega\\)\uff1a\\(&gt;\\)\u3002</li> </ul> <p>\u4e00\u4e9b\u6027\u8d28\uff1a</p> <ul> <li>\\(f1(n) + f2(n) = O(\\max(f1(n), f2(n)))\\) \uff08\u4e24\u4e2a\u51fd\u6570\u4e4b\u548c\u7684\u4e0a\u754c\u662f\u4ed6\u4eec\u5f53\u4e2d\u5728\u6e10\u8fdb\u610f\u4e49\u4e0a\u8f83\u5927\u7684\u51fd\u6570\uff09\u3002</li> <li>\\(f1(n)\\cdot f2(n) = O(f1(n) \\times f2(n))\\)\u3002</li> <li>\\(\\forall a \\not=1, \\log_a(n) = O(\\log_2(n))\\)\uff0c\u6240\u4ee5\u6e10\u8fdb\u65f6\u95f4\u590d\u6742\u5ea6\u7684 \\(\\log\\) \u90fd\u8868\u793a \\(\\log_2\\)\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6240\u6709\u5bf9\u6570\u51fd\u6570\uff0c\u4e0d\u7ba1\u5e95\u6570\u5982\u4f55\uff0c\u589e\u957f\u7387 (\\(\\Theta\\)) \u90fd\u662f\u76f8\u540c\u7684\uff0c\u4e3a\u4e86\u8ba8\u8bba\u65b9\u4fbf\uff0c\u90fd\u6362\u6210\u5e95\u6570\u4e3a \\(2\\) \u7684\u5bf9\u6570\u3002</li> </ul> Extend <p>\u7531\u6362\u5e95\u516c\u5f0f \\(\\log_ab = \\dfrac{\\log_cb}{\\log_ca}\\) \u53ef\u4ee5\u77e5\u9053\uff1a\\(\\log_a n=\\log_2 n\\times\\log_a2\\)\u3002</p> <p>\u800c \\(\\log_a2\\) \u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u5728\u6e10\u8fdb\u610f\u4e49\u4e0b\u5c31\u88ab\u5ffd\u7565\u4e86\u3002</p>"}, {"location": "algor/basic/time-complexity/#_5", "title": "\u5e38\u6570\u56e0\u5b50", "text": "<p>\u4e00\u822c\u8bf4\u4e00\u4e2a\u7b97\u6cd5\u6709\u51e0\u500d\u5e38\u6570\u7684\u65f6\u5019\uff0c\u4e00\u822c\u662f\u8bf4\u5b9e\u9645\u8dd1\u8d77\u6765\u7684\u57fa\u672c\u64cd\u4f5c\u6570\u7684\u6570\u91cf\u7ea7\u662f\u7b97\u51fa\u6765\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u51e0\u500d\u3002</p> <p>\u6bd4\u5982\u6211\u6709\u4e00\u4e2a\u7b97\u6cd5\u662f \\(O(n)\\) \u7684\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u8dd1\u51fa\u6765\u7684\u57fa\u672c\u64cd\u4f5c\u6570\u662f \\(4n\\) \u7ea7\u522b\u7684\uff0c\u90a3\u6211\u5c31\u4f1a\u8bf4\u6211\u7684\u7b97\u6cd5\u6709 4 \u500d\u5e38\u6570\u3002</p> <p>\u4e0d\u8fc7\u611f\u89c9\u8fd9\u4e2a\u662f\u4e00\u4e2a\u6bd4\u8f83\u6c11\u95f4\u7684\u53eb\u6cd5\u3002</p>"}, {"location": "algor/basic/time-complexity/#_6", "title": "\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6", "text": "<p>\u5c31\u662f\u770b\u4e00\u770b\u8fdb\u884c\u4e86\u591a\u5c11\u6b21\u57fa\u7840\u64cd\u4f5c\u5c31\u884c\u4e86\u3002</p> <p>\u9012\u5f52\u7b97\u6cd5\u753b\u9012\u5f52\u6811\u7b97\u6bcf\u5c42\u6bcf\u4e2a\u8282\u70b9\u590d\u6742\u5ea6\u6bd4\u8f83\u597d\uff0c\u4e5f\u53ef\u4ee5\u89c6\u60c5\u51b5\u7528\u4e3b\u5b9a\u7406\uff0c\u4f46\u662f\u4e3b\u5b9a\u7406\u5c31\u662f\u9012\u5f52\u6811\u8bc1\u660e\u7684\uff08\u3002</p> <p>\u7136\u540e\u9012\u63a8\uff0cDP \u554a\u4e4b\u7c7b\u7684\u5c31\u770b\u5faa\u73af\u5c42\u6570\u548c\u5faa\u73af\u533a\u95f4\u4e58\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u5927\u90e8\u5206\u90fd\u662f\uff0c\u7b97\u6bcf\u4e00\u8f6e\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\uff0c\u7136\u540e\u4e58\u4e0a\u8f6e\u6570\u3002</p> <p>\u6216\u8005\u662f\u7b97\u6bcf\u4e00\u5c42\u7684\u590d\u6742\u5ea6\u3002</p>"}, {"location": "algor/basic/time-complexity/#_7", "title": "\u4e3b\u5b9a\u7406", "text": "<p>\u5bf9\u4e8e\u4e00\u4e2a\u9012\u5f52\u5f0f\u7b97\u6cd5 \\(T(n) = aT(\\dfrac{n}{b}) + f(n)\\)\uff0c</p> <p>\u5176\u4e2d \\(n\\) \u662f\u95ee\u9898\u89c4\u6a21\u5927\u5c0f\uff0c\\(a\\) \u662f\u5b50\u95ee\u9898\u7684\u4e2a\u6570\uff0c\\(\\dfrac{n}{b}\\) \u662f\u6bcf\u4e2a\u5b50\u95ee\u9898\u7684\u5927\u5c0f\uff08\u89c4\u6a21\uff09\uff0c\\(f(n)\\) \u662f\u5c06\u539f\u95ee\u9898\u5206\u6210\u5b50\u95ee\u9898\u548c\u5c06\u5b50\u95ee\u9898\u7684\u89e3\u5408\u5e76\u7684\u65f6\u95f4\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5f0f\u5b50\uff1a</p> <p></p> <p>\u4e3e\u51e0\u4e2a\u4f8b\u5b50\uff1a</p> \u5e94\u75281 <p>\u5bf9\u4e8e\u4e8c\u5206\uff0c</p> <p>\u90a3\u4e48 \\(T(n) = T(n/2) + \\Theta(1)\\)\uff0c</p> <p>\u89e3\u91ca\uff1a\u4e8c\u5206\u6bcf\u6b21\u628a\u5b50\u95ee\u9898\u89c4\u6a21\u7f29\u5c0f\u4e00\u534a\uff0c\u6bcf\u6b21\u53ea\u9012\u5f52\u4e00\u904d\uff0c\u6240\u4ee5\uff08\u5904\u7406\u7684\uff09\u5b50\u95ee\u9898\u4e2a\u6570\u662f \\(a = 1\\)\u3002</p> <p>\u5bf9\u4e8e condition 1\uff0c\u663e\u7136 \\(\\displaystyle n^{\\log_b(a-\\epsilon)}\\) \u5728 \\(\\epsilon &gt; 0\\) \u65f6\u65e0\u610f\u4e49\uff0c\u80af\u5b9a\u4e0d\u662f</p> <p>\u5bf9\u4e8e condition 2\uff0c\u56e0\u4e3a \\(\\displaystyle n^{\\log_b(a)} = 1\\)\uff0c\u4e14 \\(f(n) = \\Theta(1)\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee4 \\(k = 0\\)\uff0c\u7136\u540e\u53d1\u73b0 \\(\\displaystyle n^{\\log_b(a)}\\log^k n\\) \u8fd9\u5768\u5c31\u7b49\u4e8e \\(\\Theta(1)\\)\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f \\(\\Theta(\\log^{0 + 1} n) = \\Theta(\\log n)\\)\u3002</p> <p>\u7136\u540e\u5982\u679c\u5e26\u4e00\u4e2a \\(Check\\) \u7684\u8bdd\uff0c\u4f60\u53ef\u80fd\u4f1a\u5199\u51fa \\(T(n) = T(n/2) + \\Theta(n)\\)\uff0c\u4f46\u8fd9\u4e2a\u4e0d\u5b8c\u5168\u5bf9\u7684\u3002</p> <p>\u56e0\u4e3a\u4f60\u6bcf\u6b21 \\(n\\) \u4f1a\u7f29\u5c0f\uff0cCheck \u7684\u89c4\u6a21\u5c31\u53d8\u4e86\uff0c\u8ba1\u7b97\u65b9\u5f0f\u5e94\u8be5\u662f\u76f4\u63a5\u8ba1\u6570\u3002</p> <p>\u4e8c\u5206\u6700\u591a\u8c03\u7528 \\(O(\\log n)\\) \u6b21 check\uff0ccheck \u7684\u603b\u590d\u6742\u5ea6\u662f \\(n + n/2 + n/4 + .... = 2n\\)\u3002</p> <p>\u7136\u540e \\(\\sum (\\log n \\times \\text{check}) = \\log n \\times \\sum \\text{check} = n \\log n\\)\u3002</p> \u5e94\u75282 <p>\u5bf9\u4e8e\u5f52\u5e76\u6392\u5e8f\uff0c</p> <p>\\(T(n) = 2T(n / 2) + \\Theta(n)\\)\u3002</p> <p>\u89e3\u91ca\uff1a\u6bcf\u6b21\u628a\u5b50\u95ee\u9898\u4e8c\u5206\uff0c\u89c4\u6a21\u7f29\u5c0f\u4e00\u534a\uff0c\u6bcf\u6b21\u9012\u5f52\u4e24\u8fb9\uff0c\u6240\u4ee5\uff08\u5904\u7406\u7684\uff09\u5b50\u95ee\u9898\u4e2a\u6570\u662f \\(a = 2\\)\u3002</p> <p>\u7136\u540e\u8fd8\u662f\u4e00\u4e2a condition \u4e00\u4e2a condition \u7684\u770b\u3002</p> <p>\u53d1\u73b0 \\(\\displaystyle n^{\\log_b(a)} = \\Theta(n)\\)\uff0c\u4f60\u53d1\u73b0\u548c\u4e8c\u5206\u7684\u6709\u70b9\u50cf\uff0c\u90fd\u662f \\(\\displaystyle n^{\\log_b(a)} = f(n)\\)\uff0c\u7136\u540e\u4ee4 \\(k = 0\\).</p> <p>\u6240\u4ee5\u590d\u6742\u5ea6 \\(\\Theta(n\\log n)\\)\u3002</p> \u5e94\u75283 <p>\\(T(n) = 9T(n/3) + n\\).</p> <p>\u53d1\u73b0 \\(\\displaystyle n^{\\log_b(a)} = 2\\)\uff0c\\(n^2 &gt; n\\)\uff0c\u6240\u4ee5\u590d\u6742\u5ea6 \\(\\Theta(n^2)\\)\u3002</p> Warning <p>\u5bf9\u4e8e \\(a\\) \u7684\u786e\u5b9a\uff0c\u4e8c\u5206\u548c\u5f52\u5e76\u6392\u5e8f\u7528\u201c\u9012\u5f52\u4e86\u90a3\u51e0\u8fb9\u201d\u662f\u53ef\u884c\u7684\u3002</p> <p>\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u5355\u70b9\u6539\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u7ebf\u6bb5\u533a\u95f4\u67e5\u5c31\u4e0d\u884c\u4e86\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u6709\u4e00\u4e2a \\([l, r]\\subset [ql, qr]\\) \u7684\u526a\u679d\u3002</p> <p>\u9700\u8981\u5355\u72ec\u5206\u8ba8\u5206\u6790\uff0c\u4e0d\u80fd\u4e3b\u5b9a\u7406\u3002 </p>"}, {"location": "algor/dp/about_dp/", "title": "\u91cd\u65b0\u89e3\u6784 DP", "text": ""}, {"location": "algor/dp/about_dp/#definitions", "title": "Definitions", "text": "<p>\u5176\u5b9e\u52a8\u6001\u89c4\u5212\u7684\u672c\u8d28\u662f\uff0c\u5728\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\u4e2d\uff0c\u5efa\u7acb\u4e86\u4e00\u5f20 DAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\uff0c\u8fd9\u4fdd\u8bc1\u4e86\u52a8\u6001\u89c4\u5212\u7684 \u65e0\u540e\u6548\u6027\uff08\u4e0d\u4f1a\u6210\u73af\uff09\u3002\u5176\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a \u72b6\u6001\uff0c\u540c\u5c42\u7684\u4e00\u7cfb\u5217\u8282\u70b9\u79f0\u4e4b\u4e3a \u9636\u6bb5\uff0c\u5b83\u5bf9\u5e94\u7684\u5c31\u662f\u4e00\u4e2a \u5b50\u95ee\u9898\u3002</p> <p>\u800c \u6700\u4f18\u5b50\u7ed3\u6784 \u5219\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff0c\u5b83\u4e00\u5b9a\u5305\u542b\u4e86\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff0c\u6216\u8005\u8bf4\uff0c\u4e00\u4e2a\u95ee\u9898\u7684\u6700\u4f18\u89e3\u5e94\u5f53\u7531\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u5bfc\u51fa\uff0c\u800c \u51b3\u7b56 \u5219\u662f\u8fd9\u5f20\u56fe\u4e0a\u7684\u6709\u5411\u8fb9\u3002</p> <p>\u8d2a\u5fc3\u7b97\u6cd5\u5176\u5b9e\u4e5f\u662f\u6ee1\u8db3\u4e86\u6700\u4f18\u5b50\u7ed3\u6784\u7684\uff0c\u53ea\u662f\u5b83\u548c\u52a8\u6001\u89c4\u5212\u7684\u8f6c\u79fb\u4e0d\u540c\uff0c\u5b83\u6bcf\u6b21\u53ea \u6d45\u663e \u7684\u53d6\u4e86 \u5f53\u524d\u5c40\u9762 \u4e0b\u7684\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u5b83\u7684\u8f6c\u79fb\u56fe\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u52a8\u6001\u89c4\u5212\u5219\u662f\uff0c\u4ece\u5148\u524d\u7684\uff08\u591a\u4e2a\uff09\u5b50\u95ee\u9898\u5f53\u4e2d\uff0c\u627e\u5230\u5f53\u524d\u5c40\u9762\u7684\u6700\u4f18\u89e3\uff0c\u5b83\u7684\u8f6c\u79fb\u56fe\u5219\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u52a8\u6001\u89c4\u5212\u5c31\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u6ee1\u8db3\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u7684\u4fe1\u606f\uff0c\u901a\u8fc7\u5206\u5272\u5b50\u95ee\u9898\uff0c\u5728\u5b50\u95ee\u9898\u95f4\u65e0\u540e\u6548\u6027\u8f6c\u79fb\uff0c\u6c42\u5f97\u6700\u7ec8\u89e3\u7684\u7b97\u6cd5\u3002</p> <p>\u5177\u4f53\u8981\u6ce8\u610f\u7684\u4e8b\u9879\uff0c\u6280\u5de7\u4f1a\u5728\u4e0b\u9762\u7684\u4e09\u9053\u9898\u91cc\u9762\u63d0\u5230\u3002</p>"}, {"location": "algor/dp/about_dp/#arc153d-sum-of-sum-dights", "title": "ARC153D Sum of Sum Dights", "text": ""}, {"location": "algor/dp/about_dp/#statement", "title": "Statement", "text": "<p>\u8bb0 \\(f(x)\\) \u8868\u793a \\(\\text{popcount}_{10}(x)\\)\uff0c\u5982 \\(f(114514) = 1 + 1 + 4 + 5 + 1 + 4 = 16\\)\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 \\(a_1, \\dots a_n\\)\uff0c\u6c42\u4e00\u4e2a \\(x\\) \u4f7f\u5f97 \\(\\sum f(a_i + x)\\) \u6700\u5c0f\uff0c\u6c42\u51fa\u8fd9\u4e2a\u6700\u5c0f\u7684 \\(\\sum f(a_i + x)\\) \u7684\u503c\u3002</p> <p>\\(1\\le n \\le 2\\times 10^5, a_i \\in [1, 10^9]\\)\u3002</p>"}, {"location": "algor/dp/about_dp/#solution", "title": "Solution", "text": "<p>\u6ce8\u610f\u5230\u8fd9\u91cc\u662f\u5bf9\u6570\u4f4d\u8fdb\u884c\u8003\u8651\uff0c\u4e0d\u96be\u7531\u7ecf\u5178\u5957\u8def\u60f3\u5230\uff1a\u6211\u4eec\u5927\u6982\u7387\u662f\u8981\u76f4\u63a5\u5bf9\u6574\u4f53\u7684\u6bcf\u4e00\u4f4d\u505a\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u4ee5\u6bcf\u4e00\u4f4d\u4f5c\u4e3a\u9636\u6bb5\u8003\u8651\u3002</p> <p>\u601d\u8003\u4e00\u4e0b\uff0c\u8fd9\u4e2a \\(x\\) \u52a0\u8fdb\u6765\u4e4b\u540e\uff0c\u5bf9 \\(f()\\) \u7684\u5f71\u54cd\u5e94\u8be5\u662f\u4ec0\u4e48\uff1a</p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5982\u679c \\(x\\) \u8ba9 \\(f()\\) \u53d8\u5c0f\u4e86\uff0c\u663e\u7136\u662f \\(a_i + x\\) \u4ea7\u751f\u4e86\u8fdb\u4f4d\uff08\u5e76\u4e14\u4e24\u4e2a\u6570\u76f8\u52a0\u6700\u591a\u8fdb \\(1\\)\uff09\uff0c\u6240\u4ee5\u5bf9\u4e8e\u67d0\u4e00\u4f4d\uff0c\u8fdb\u4f4d\u7684\u5f71\u54cd\u5e94\u8be5\u662f\uff1a\\(a_i(j) + x(j) + lst\\)\uff0c\u5176\u4e2d \\(lst\\) \u8868\u793a\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d\u3002</p> <p>\u56e0\u4e3a\u6bcf\u6b21\u8fdb\u4f4d\u53ea\u4f1a\u8fdb \\(1\\)\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u72b6\u6001\u4e2d\u5e94\u8be5\u8bb0\u5f55\u67d0\u4e00\u4f4d\u7684\u8fdb\u4f4d\u6b21\u6570\uff08\u6709\u591a\u5c11\u4e2a \\(a_i\\) \u8fdb\u4e86\u4f4d\uff09\u3002</p> <p>\u4e8e\u662f\u679a\u4e3e\u4e0a\u4e00\u4f4d\u7684 \\(x(j - 1)\\) \u8fdb\u884c\u51b3\u7b56\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u6b21\u8f6c\u79fb\u6211\u4eec\u9700\u8981\u77e5\u9053\uff0c\u54ea\u4e9b \\(a_i\\) \u5728\u4e0a\u4e00\u4f4d\u8fdb\u4e86\u4f4d\uff0c\u8fd9\u6837\u5c31\u53d8\u6210 \\(O(n^2)\\) \u7ea7\u522b\u7684\u590d\u6742\u5ea6\u4e86\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u600e\u4e48\u4f18\u5316\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5982\u679c\u6211\u4eec\u786e\u5b9a\u4e86 \\(x\\) \u7684\u7b2c \\(j - 1\\) \u4f4d\uff0c\u90a3\u4e48\u6709\u4e00\u4e9b \\(a_i\\) \u662f\u4e00\u5b9a\u4e0d\u4f1a\u8fdb\u4f4d\u7684\uff08\u4e5f\u5c31\u662f\u8bf4\u5b9e\u9645\u4e0a\u5bf9\u4e8e\u4e00\u4e2a\u786e\u5b9a\u7684 \\(x(j - 1)\\)\uff0c\u8fd9\u4e00\u4f4d\u7684\u8fdb\u4f4d\u60c5\u51b5\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c\u4e0d\u7528\u679a\u4e3e\uff09</p> <p>\u90a3\u4e48\u5982\u679c\u6211\u4eec\u5bf9\u7740 \\(a\\) \u6309\u7167\u4f4e \\(j - 1\\) \u4f4d\u6392\u5e8f\uff0c\u6bcf\u6b21\u8fdb\u4f4d\u7684\u4e00\u5b9a\u662f\u4e00\u6bb5\u540e\u7f00\uff0c\u679a\u4e3e \\(x(j - 1)\\in[0,9]\\)\uff0c\u7136\u540e\u5c31\u80fd \\(O(n)\\) \u786e\u5b9a\u6240\u6709 \\(x(j - 1)\\) \u7684\u8fdb\u4f4d\u60c5\u51b5\u4e86\u3002 </p> <p>\u90a3\u4e48\u8bbe \\(dp(j, k)\\) \u8868\u793a\uff0c\u8003\u8651\u5230\u4f4e \\(j\\) \u4f4d\uff0c\u5f53\u524d\u6709\u957f\u5ea6\u4e3a \\(k\\) \u7684\u4e00\u6bb5\u540e\u7f00\u8fdb\u4f4d\u7684\u65b9\u6848\u6570\u3002</p> <p>\u8f6c\u79fb\u5c31\u5f88\u5bb9\u6613\u4e86\uff0c\u590d\u6742\u5ea6 \\(O(n \\times 10^2)\\)\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u57fa\u6570\u6392\u5e8f\u3002</p>"}, {"location": "algor/dp/about_dp/#enlightenment", "title": "Enlightenment", "text": "<ul> <li>dp \u6570\u7ec4\u5f53\u4e2d\u5e94\u5f53\u8bb0\u5f55\u4e24\u4e2a\u4e1c\u897f\uff0c\u4e00\u4e2a\u662f\u9636\u6bb5\uff0c\u4e00\u4e2a\u662f\u72b6\u6001\uff0c\u9636\u6bb5\u662f\u4e00\u5b9a\u8981\u786e\u5b9a\u6e05\u695a\u7684\uff0c\u72b6\u6001\u53ef\u4ee5\u5148\u6682\u65f6\u4e0d\u7ba1\uff0c\u6162\u6162\u6839\u636e\u8f6c\u79fb\u7684\u9700\u6c42\u6765\u786e\u5b9a\u3002</li> <li>\u5f53\u6211\u4eec\u53d1\u73b0 dp \u7684\u72b6\u6001\u6709\u70b9\u591a\uff0c\u590d\u6742\u5ea6\u9ad8\u7684\u65f6\u5019\uff0c\u4e0d\u59a8\u8003\u8651\u7cbe\u7b80\u72b6\u6001\uff0c\u770b\u770b\u54ea\u4e9b\u72b6\u6001\u662f\u4e00\u5b9a\u4e0d\u53ef\u80fd\u8f6c\u79fb\u7684\uff0c\u4ee5\u6b64\u8fbe\u5230\u6392\u9664\u5197\u6742\u72b6\u6001\u7684\u76ee\u7684\u3002</li> <li>\u8bbe\u8ba1 dp \u9636\u6bb5\u65f6\u4e00\u5b9a\u4e0d\u8981\u62d8\u6ce5\u4e8e\u57fa\u672c\u60c5\u51b5\uff0c\u8981\u601d\u8003\u66f4\u6df1\u5165\u7684\u60c5\u51b5\u3002</li> <li>\u5728\u672c\u9898\u4e2d\uff0c\u5c31\u4e0d\u5e94\u5f53\u601d\u8003\u6700\u57fa\u672c\u7684\uff0c\u600e\u4e48\u786e\u5b9a\u8fd9\u4e2a \\(x\\)\uff0c\u6211\u4eec\u5e94\u5f53\u8003\u8651\u7684\u662f\uff0c\u600e\u4e48\u5904\u7406 \\(x\\) \u5bf9\u4e8e\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u76f8\u5f53\u4e8e\u662f\uff0c\u5176\u5b9e\u6211\u4eec\u5e76\u4e0d\u5728\u610f\u8fd9\u4e2a \\(x\\) \u5177\u4f53\u662f\u591a\u5c11\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u600e\u4e48\u6c42\u51fa\u8fd9\u4e2a\u6700\u4f18\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 \\(x\\) \u5728\u6bcf\u4e00\u4f4d\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u5c31\u884c\u4e86\uff0c\u5f53\u7136\u5982\u679c\u8981\u6c42\u8fd9\u4e2a \\(x\\) \u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u76f4\u63a5\u5012\u63a8\u56de\u53bb\u5c31\u884c\u4e86\u3002</li> </ul>"}, {"location": "algor/dp/about_dp/#lougu7152-bovine-genetics-g", "title": "Lougu7152 Bovine Genetics G", "text": ""}, {"location": "algor/dp/about_dp/#statement_1", "title": "Statement", "text": "<p>\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u7531 \\(\\texttt{A,C,G,T,?}\\) \u7ec4\u6210\u7684\u57fa\u56e0\u7ec4\u5e8f\u5217 \\(a\\) \u7684\u4e00\u6b21\u64cd\u4f5c\u5982\u4e0b\uff1a</p> <ol> <li>\u5728\u6240\u6709\u8fde\u7eed\u76f8\u540c\u5b57\u7b26\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5c06\u5f53\u524d\u57fa\u56e0\u7ec4\u5207\u5f00</li> <li>\u53cd\u8f6c\u6240\u6709\u5f97\u5230\u7684\u5b50\u4e32\u5e76\u8fde\u63a5\u3002 \u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u64cd\u4f5c\u8fc7\u540e\u7684\u5e8f\u5217\uff0c\u6c42\u6709\u591a\u5c11\u79cd\u53ef\u80fd\u7684\u521d\u59cb\u5e8f\u5217\uff0c\u5176\u4e2d \\(\\texttt{?} \\in \\{\\texttt{A,C,G,T}\\}\\)\u3002</li> </ol> <p>\u57fa\u56e0\u7ec4\u957f\u5ea6 \\(n \\in [1, 10^5]\\)\uff0c\u7b54\u6848\u5bf9 \\(10^9+7\\) \u53d6\u6a21\u3002</p>"}, {"location": "algor/dp/about_dp/#solution_1", "title": "Solution", "text": ""}, {"location": "algor/dp/about_dp/#method-1", "title": "Method 1", "text": "<p>\u5957\u8def\u7684\uff0c\u5148\u4e0d\u8003\u8651 \\(\\texttt{?}\\) \u7684\u8d21\u732e\uff0c\u4e4b\u540e\u518d\u5206\u522b\u8ba1\u5165\uff0c\u6216\u8005\u770b\u505a\u6cd5\u662f\u4e0d\u662f\u5df2\u7ecf\u5929\u7136\u652f\u6301\u5904\u7406\u901a\u914d\u7b26\u4e86\u3002</p> <p>\u6211\u4eec\u8bb0\u6700\u521d\u7684\u5e8f\u5217\u4e3a \\(S\\)\uff0c\u64cd\u4f5c\u540e\u7684\u5e8f\u5217\u4e3a \\(T\\)\u3002</p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5982\u679c\u6211\u4eec\u5bf9 \\(T\\) \u8fdb\u884c\u5212\u5206\uff0c\u8981\u60f3\u80fd\u4ece \\(S \\to T\\)\uff0c\u5fc5\u7136\u6ee1\u8db3\uff1a</p> <ul> <li>\u6bcf\u4e00\u6bb5\u5185\u4e0d\u4f1a\u51fa\u73b0\u8fde\u7eed\u7684\u5b57\u7b26\uff0c\u56e0\u4e3a\u6211\u4eec\u7edd\u5bf9\u4f1a\u65ad\u5f00\u3002</li> <li>\u5bf9\u4e8e\u7b2c \\(i\\) \u6bb5\u5b50\u4e32\u548c\u7b2c \\(i + 1\\) \u6bb5\u5b50\u4e32\uff0c\u7b2c \\(i\\) \u6bb5\u7684\u5f00\u5934\u4e00\u5b9a\u548c\u7b2c \\(i + 1\\) \u6bb5\u7684\u7ed3\u5c3e\u76f8\u7b49\uff0c\u5426\u5219\u8f6c\u56de\u53bb\u4e4b\u540e\uff0c\u8fd9\u4e2a\u5730\u65b9\u662f\u4e0d\u80fd\u65ad\u5f00\u7684\u3002</li> </ul> <p>\u7531\u6b64\u8fd8\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u539f\u5e8f\u5217\uff0c\u5b83\u5bf9\u5e94\u7684\u64cd\u4f5c\u540e\u7684\u5e8f\u5217\u662f\u552f\u4e00\u7684 \uff08\u4f46\u662f\u53cd\u8fc7\u6765\u5c31\u4e0d\u662f\u4e86\uff09\u3002</p> <p>\u8fd9\u5c31\u63d0\u793a\u6211\u4eec\u4ee5\u201c\u5206\u5272\u201d\u4f5c\u4e3a dp \u7684\u51b3\u7b56\u8981\u7d20\uff0c\u610f\u601d\u662f\uff0c\u6211\u4eec\u7684\u51b3\u7b56\u6307\u5411\u4ec0\u4e48\u72b6\u6001\uff0c\u53d6\u51b3\u4e8e\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u5426\u65ad\u5f00\u3002</p> <p>\u800c\u51b3\u7b56\u7684\u9009\u62e9\u53c8\u63d0\u793a\u4e86\u6211\u4eec\uff0c\u8be5\u5982\u4f55\u9009\u62e9\u9636\u6bb5\uff0c\u5e94\u5f53\u8003\u8651\uff0c\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u9636\u6bb5\uff0c\u8fd9\u6837\u5904\u7406\u7684\u72b6\u6001\u5c31\u662f\uff0c\u5f53\u524d\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6240\u6709\u53ef\u80fd\u60c5\u51b5\u3002</p> <p>\u4e8e\u662f\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u5bdf\uff0c\u72b6\u6001\u5e94\u5f53\u8bb0\u5f55\u4ec0\u4e48\uff0c\u5f88\u663e\u7136\u5f53\u524d\u4f4d\u7f6e \\(i\\) \u4e0d\u662f\u5e76\u5165\u4e0a\u4e00\u6bb5\uff0c\u5c31\u662f\u65b0\u5f00\u4e00\u6bb5\uff08\u8fd9\u4e2a\u4e5f\u662f\u8fd9\u7c7b\u6210\u6bb5\u8f6c\u79fb\u7684 dp \u7684\u5957\u8def\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u77e5\u9053\u4e00\u4e9b\u4fe1\u606f\uff0c\u786e\u8ba4 \\(i\\) \u5230\u5e95\u5e94\u8be5\u5f52\u5c5e\u4e8e\u54ea\u4e00\u90e8\u5206\u3002</p> <p>\u4f46\u662f\u8fd9\u8fd8\u4e0d\u591f\uff0c\u56e0\u4e3a\uff0c\u53ea\u8bb0\u5f55 \\(i\\) \u5c5e\u4e8e\u4e0a\u4e00\u6bb5\uff0c\u8fd8\u662f\u65b0\u5f00\u4e00\u6bb5\uff0c\u5e76\u4e0d\u80fd\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u7684\u51b3\u7b56\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u7684\u9650\u5236\u662f\uff0c\u76f8\u90bb\u4e24\u6bb5\u7684\u5934\u548c\u5c3e\u4e00\u5b9a\u662f\u76f8\u7b49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u72b6\u6001\uff0c\u8fd8\u9700\u8981\u8bb0\u5f55\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\uff1a</p> <ul> <li>\u9996\u5148\u8981\u8bb0\u5f55\u4e0a\u4e00\u6bb5\uff08\u5047\u8bbe\u5f53\u524d\u8fd8\u6ca1\u52a0\u5165 \\(i\\)\uff09\u7684\u5c3e\u548c\u4e0a\u4e0a\u6bb5\u7684\u5934\uff0c\u8fd9\u662f\u56e0\u4e3a\uff0c\u5982\u679c \\(i\\) \u5c31\u6210\u4e86\u4e0a\u4e00\u6bb5\u7684\u5c3e\uff0c\u6211\u4eec\u9700\u8981\u5224\u65ad\u662f\u5426\u80fd\u8f6c\u79fb\u3002</li> <li>\u7136\u540e\u8981\u8bb0\u5f55\u4e0a\u4e00\u6bb5\u7684\u5934\uff0c\u56e0\u4e3a\u5f53 \\(i\\) \u65b0\u5f00\u4e00\u6bb5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u65b0\u5f00\u4e00\u6bb5\u8fd9\u4e2a\u64cd\u4f5c\u662f\u5426\u5408\u6cd5\u3002</li> </ul> <p>\u53ef\u80fd\u6709\u4eba\u4f1a\u7591\u60d1\uff0c\u4e07\u4e00\u65b0\u5f00\u7684\u8fd9\u4e00\u6bb5\u540e\u9762\u53c8\u52a0\u4e86\u4e00\u4e2a\u5b57\u7b26\uff0c\u90a3 \\(i\\) \u4e0d\u662f\u5c31\u4e0d\u7528\u548c\u4e0a\u4e00\u6bb5\u7684\u5934\u76f8\u7b49\u4e86\u5417\uff1f</p> <p>\u95ee\u9898\u662f\u597d\u7684\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u5728\u505a\u52a8\u6001\u89c4\u5212\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u5f53\u524d\u8fd9\u4e2a\u9636\u6bb5\u600e\u4e48\u8f6c\u79fb\uff0c\u6211\u4eec\u4e0d\u5173\u5fc3\u4e4b\u540e\u7684\u60c5\u51b5\uff0c\u53ea\u8981\u80fd\u8986\u76d6\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\u5c31\u884c\u4e86\u3002</p> <p>\u8fd9\u79cd\u60c5\u51b5\uff0c\u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u8986\u76d6\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u4e0a\u4e00\u6bb5\u5177\u4f53\u662f\u54ea\u91cc\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u53ea\u662f\uff0c\u600e\u4e48\u4ece\u4e4b\u524d\u7684\u5b50\u95ee\u9898\u8f6c\u79fb\u8fc7\u6765\uff0c\u5728\u8003\u8651 \\(i + 1\\) \u90a3\u4e2a\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u60c5\u51b5\u53c8\u548c \\(i\\) \u6ca1\u6709\u533a\u522b\u4e86\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u81ea\u7136\u800c\u7136\u7684\u5199\u51fa dp \u6570\u7ec4\u7684\u5b9a\u4e49\uff1a</p> <p>\u8bbe \\(dp(i, fh, ft, sh)\\)\uff0c\u8868\u793a\u5f53\u524d\u8003\u8651\u5230\u7b2c \\(i\\) \u4e2a\u5b57\u7b26\uff0c\u4e0a\u4e00\u6bb5\u7684\u5934\u5c3e\u5206\u522b\u4e3a \\(fh,ft\\)\uff0c\u4e0a\u4e0a\u6bb5\u7684\u6bb5\u5934\u4e3a \\(sh\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u8f6c\u79fb\u5176\u5b9e\u4e0a\u9762\u8003\u8651\u8bb0\u5f55\u72b6\u6001\u7684\u65f6\u5019\u5df2\u7ecf\u63d0\u5230\u4e86\uff0c\u7565\u53bb\u3002</p> <p>\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\uff0c\\(\\sum\\limits_{i}\\sum\\limits_{j}\\sum\\limits_{k} dp(n, i, j, k)\\)\u3002</p> <p>\u7136\u540e\u901a\u914d\u7b26\u600e\u4e48\u5904\u7406\u5462\uff1f\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u628a\u5f53\u524d\u4f4d\u7f6e\u5206\u522b\u5f53\u6210 \\(\\texttt{A,C,G,T}\\) \u8f6c\u79fb\u5c31\u884c\u4e86\u3002</p>"}, {"location": "algor/dp/about_dp/#method-2", "title": "Method 2", "text": "<p>\u8fd8\u6709\u4e00\u79cd\uff0c\u66f4\u52a0\u6df1\u523b\u7684\u601d\u8003\u65b9\u5f0f\u3002</p> <p>\u6211\u4eec\u9009\u53d6\u9636\u6bb5\u7684\u65f6\u5019\uff0c\u4e0d\u9009\u53d6\u6bcf\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u72b6\u6001\uff0c\u800c\u662f\u5c06\u201c\u6bb5\u201d\u4f5c\u4e3a\u9636\u6bb5\u3002</p> <p>\u8fd9\u770b\u8d77\u6765\u975e\u5e38\u4e0d\u76f4\u89c2\uff0c\u4f46\u5176\u5b9e\uff0c\u8fd9\u79cd\u5212\u5206\u578b\u7684 dp\uff0c\u9664\u4e86\u4e00\u4e2a\u4e2a\u52a0\u5165\uff0c\u66f4\u52a0\u6b63\u5e38\u7684\u60f3\u6cd5\u5e94\u8be5\u662f\uff0c\u8003\u8651\u5f53\u524d\u6bb5\u600e\u4e48\u5206\u5272\uff0c\u7136\u540e\u4ece\u5206\u5272\u597d\u7684\u4e0a\u4e00\u6bb5\u8f6c\u79fb\u8fc7\u6765\u3002</p> <p>dp \u72b6\u6001\u662f\uff1a\u8bbe \\(dp(i, s)\\) \u8868\u793a\uff0c\u8003\u8651\u5230\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u4e14\u5b83\u662f\u4e00\u4e2a\u5212\u5206\u7684\u7ed3\u5c3e\uff0c\u5f53\u524d\u8fd9\u4e2a\u5212\u5206\u7684\u72b6\u6001\u4e3a \\(s\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u8868\u9762\u4e0a\u6765\u770b\uff0c\u6211\u4eec\u7684\u9636\u6bb5\u662f\u4e0b\u6807\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u4f4d\u7f6e\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u94a6\u5b9a\u4e86 \\(i\\) \u662f\u4e00\u4e2a\u5212\u5206\u7684\u7ed3\u5c3e\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u5904\u7406\uff0c\u201c\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u4e00\u7cfb\u5217\u5212\u5206\u201d\uff0c\u8fd9\u4e2a\u624d\u662f\u771f\u6b63\u7684\u9636\u6bb5\u3002</p> <p>\u7136\u540e\u8003\u8651\u51b3\u7b56\u662f\u4ec0\u4e48\uff08\u600e\u4e48\u8f6c\u79fb\uff09\uff0c\u663e\u7136\u662f\u5957\u8def\u7684\u679a\u4e3e\u4e0a\u4e00\u6bb5\u7684\u672b\u5c3e \\(j\\)\uff0c\u8f6c\u79fb\u5230\u8fd9\u4e00\u6bb5\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u8003\u5bdf\uff0c\u72b6\u6001\u5e94\u8be5\u8bb0\u5f55\u4ec0\u4e48\uff0c\u624d\u80fd\u4ece \\(j\\) \u8f6c\u79fb\u5230 \\(i\\)\u3002</p> <p>\u663e\u7136\uff0c\u7531\u4e8e\u9898\u76ee\u7684\u9650\u5236\uff0c\u6211\u4eec\u9700\u8981\u4ee4 \\(j\\) \u5bf9\u5e94\u8fd9\u4e00\u6bb5\u7684\u5f00\u5934\u5b57\u7b26\u548c \\(T_i\\) \u4e00\u81f4\uff0c\u8fd9\u4e2a\u662f\u5e94\u5f53\u88ab\u8bb0\u5f55\u8fdb\u72b6\u6001\u4e2d\u7684\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u8fd8\u9700\u8981\u77e5\u9053 \\([j + 1, i]\\) \u8fd9\u4e00\u6bb5\u5728\u5f53\u524d\u72b6\u6001 \\(c\\) \u4e0b\uff0c\u5e94\u8be5\u6709\u591a\u5c11\u79cd\u586b\u6cd5\uff08\u5f53\u524d\u5df2\u7ecf\u94a6\u5b9a\u4e86 \\(i\\)\uff09\uff0c\u6211\u4eec\u5148\u4e0d\u7ba1\u8fd9\u4e2a\u600e\u4e48\u7b97\uff0c\u5148\u8bb0\u4e3a \\(w(j + 1, i, c)\\)\u3002</p> <p>\u7136\u540e\u8f6c\u79fb\u53ef\u4ee5\u5199\u4f5c\uff1a\\(dp(i, s) = \\sum\\limits_{j = 1}^{i - 1}\\sum\\limits_{c}\\sum\\limits_{d} dp(j, d) \\times w(j + 1, i, c)\\)</p> <p>\u4e5f\u5c31\u662f\uff0c\u679a\u4e3e\u4e0a\u4e00\u6bb5\uff0c\u679a\u4e3e\u4e0a\u4e00\u6bb5\u7684\u72b6\u6001\uff0c\u679a\u4e3e\u8fd9\u4e00\u6bb5\u7684\u72b6\u6001\u3002</p> <p>\u5f88\u590d\u6742\u5bf9\u5427\uff1f\u5148\u522b\u614c\uff0c\u4e09\u7ef4\u7684\u4e1c\u897f\u4e0d\u597d\u5904\u7406\uff0c\u6211\u4eec\u5c1d\u8bd5\u5f3a\u5236\u628a\u5b83\u53d8\u6210\u4e8c\u7ef4\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u5176\u5b9e\u52a8\u6001\u89c4\u5212\u7684\u8f6c\u79fb\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u77e9\u9635\u4e58\u6cd5\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u5f52\u5316\u5230\u7c7b\u4f3c\u7684\u5f62\u5f0f\u4e0a\u6765\u5904\u7406\u3002</p> <p>\u4e8e\u662f\u5957\u8def\u7684\uff0c\u8ba9\u548c\u4e0a\u4e00\u6bb5\u76f8\u5173\u7684\u653e\u5728\u4e00\u8d77\uff0c\u548c\u8fd9\u4e00\u6bb5\u76f8\u5173\u7684\u653e\u5728\u4e00\u8d77\uff0c\u7136\u540e\u628a\u8fd9\u4e00\u6bb5\u76f8\u5173\u7684\u5408\u5e76\u8d77\u6765\uff1a</p> <p>\u5148\u4ea4\u6362 \\(\\sum\\)\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5199\u6210 \\(\\sum\\limits_{j = 1}^{i - 1}\\sum\\limits_{d}(\\sum\\limits_{c} dp(j, d) \\times w(j + 1, i, c))\\)\u3002</p> <p>\u540e\u9762\u8fd9\u90e8\u5206\u662f\u80fd\u4e58\u6cd5\u5206\u914d\u5f8b\u7684\uff0c\u53ef\u4ee5\u5199\u4f5c \\(\\sum\\limits_{j = 1}^{i - 1}\\sum\\limits_{d}(dp(j, d) \\times \\sum\\limits_{c}w(j + 1, i, c))\\)\u3002</p> <p>\u6211\u4eec\u628a\u8fd9\u540e\u9762\u4e00\u5768\u8bb0\u4f5c\u4e00\u4e2a\u65b0\u7684\u72b6\u6001\uff1a\\(f(i, j, d)\\)\uff0c\u6211\u4eec\u5148\u8003\u8651\u6269\u5c55\u5f53\u524d\u6bb5\u7684\u8f6c\u79fb\uff1a\u53ef\u4ee5\u53d1\u73b0\u5f53 \\(i + 1\\) \u7684\u65f6\u5019\uff0c\\(f(i, j, d) \\to f(i + 1, j, d)\\) \u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\uff0c\u591a\u51fa\u4e86\uff1a</p> \\[ \\sum\\limits_{j = 1}^{i}\\sum\\limits_{d}(dp(j, d) \\times \\sum\\limits_{c}w(j + 1, i, c)) - \\sum\\limits_{j = 1}^{i - 1}\\sum\\limits_{d}(dp(j, d) \\times \\sum\\limits_{c}w(j + 1, i, c)) \\\\ =\\sum\\limits_{j = 1}^{i - 1}\\sum\\limits_{d}(dp(j, d) \\times \\sum\\limits_{c}w(j + 1, i, c)) + \\sum\\limits_{d}(dp(i, d) \\times \\sum\\limits_{c}w(i + 1, i + 1, c)) - \\sum\\limits_{j = 1}^{i - 1}\\sum\\limits_{d}(dp(j, d) \\times \\sum\\limits_{c}w(j + 1, i, c)) \\\\ = \\sum\\limits_{c}w(i + 1, i + 1, c) \\times \\sum\\limits_{d}dp(i, d) \\] <p>\u6240\u4ee5\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 \\(\\sum\\limits_{j = 1}^{i - 1}\\sum\\limits_{d}f(i,j,d)\\)\uff0c\u66f4\u65b0\u65f6\u52a0\u4e0a\u589e\u91cf\u5373\u53ef\u3002</p> <p>\\(w(i, j, c)\\) \u53ef\u4ee5\u4ece \\(w(i - 1, j, c)\\) dp \u8f6c\u79fb\u8fc7\u6765\u3002</p> <p>\u4e8e\u662f\uff0c\u5176\u5b9e\u6b64\u65f6\u7684\u6bcf\u4e2a\u72b6\u6001\uff0c\u4ee3\u8868\u7684\u5c31\u4e0d\u662f\u81ea\u5df1\u4e86\uff0c\u5e94\u5f53\u8868\u793a\u7684\u662f\uff0c\u4e00\u7cfb\u5217\u524d\u7f00\u9636\u6bb5\uff0c\u5bf9\u5e94\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u5982\u679c\u753b\u51fa\u8f6c\u79fb\u56fe\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u5c31\u76f8\u5f53\u4e8e\u4e00\u79cd\u201c\u5e73\u884c\u8f6c\u79fb\u201d\uff0c\u53ea\u662f\u9636\u6bb5\u53d8\u4e86\uff0c\u4f46\u662f\u72b6\u6001\u5728\u9636\u6bb5\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5e76\u6ca1\u6709\u6539\u53d8\u3002</p> <p>\u7136\u540e\u56e0\u4e3a\u6211\u4eec\u7ef4\u62a4\u7684\u5b9e\u9645\u4e0a\uff0c\u662f\u524d\u7f00\u7684\u4e00\u7cfb\u5217\u72b6\u6001\uff0c\u6211\u4eec\u5e76\u4e0d\u80fd\u7ef4\u62a4\u5230\u65b0\u589e\u7684\uff0c\u6ca1\u6709\u5e73\u884c\u524d\u9a71\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u989d\u5916\u5904\u7406\u4e00\u4e0b\u5f53\u524d\u4f4d\u7f6e\u989d\u5916\u65b0\u5f00\u4e00\u6bb5\u7684\u60c5\u51b5\uff0c\u5c31\u662f\u56fe\u4e2d\u65b0\u589e\u7684\u201c\u4e0d\u5e73\u884c\u8f6c\u79fb\u201d\uff1a</p> <p></p> <p>\u6700\u540e\u5199\u51fa\u6765\uff0c\u4e24\u79cd\u89e3\u6cd5\u6ca1\u6709\u4efb\u4f55\u672c\u8d28\u533a\u522b\uff0c\u53ea\u662f\u89e3\u6cd5\u4e8c\u4ece\u66f4\u6df1\u5c42\uff0c\u66f4\u901a\u7528\u7684\u89d2\u5ea6\u601d\u8003\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u89e3\u6cd5\u4e00\u7684\u65b0\u5f00\u4e00\u6bb5\uff0c\u5c31\u662f\u89e3\u6cd5\u4e8c\u4e2d\u7684\u4e0d\u5e73\u884c\u8f6c\u79fb\uff0c\u5408\u5e76\u5230\u4e0a\u4e00\u6bb5\uff0c\u5c31\u662f\u89e3\u6cd5\u4e8c\u4e2d\u7684\u5e73\u884c\u8f6c\u79fb\u3002</p>"}, {"location": "algor/dp/about_dp/#enlightenment_1", "title": "Enlightenment", "text": "<ul> <li>\u8003\u8651 dp \u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u4e0d\u8981\u8003\u8651\u4ee5\u540e\u7684\u9636\u6bb5\u600e\u4e48\u5904\u7406\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u600e\u4e48\u5206\u5272\u5f53\u524d\u7684\u5b50\u95ee\u9898\uff0c\u53ea\u5173\u5fc3\u600e\u4e48\u6837\u8986\u76d6\u5b8c\u72b6\u6001\u7a7a\u95f4\u3002</li> <li>\u5bf9\u4e8e\u4e00\u7c7b\u8ba1\u6570 dp \u95ee\u9898\uff0c\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u524d\u63d0\u6761\u4ef6\uff1a\u4e00\u79cd\u5408\u6cd5\u7684\u57fa\u672c\u60c5\u51b5\u548c\u4e00\u4e2a\u5408\u6cd5\u7684\u8f6c\u79fb\u5e8f\u5217\u662f\u552f\u4e00\u5bf9\u5e94\u7684\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u5904\u7406\u7684\u4fe1\u606f\u5929\u7136\u5c31\u6ee1\u8db3\u4e0d\u91cd\u4e0d\u6f0f\u6027\u8d28\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u8f6c\u79fb\u5408\u6cd5\uff0c\u5c31\u80fd\u8986\u76d6\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\u3002</li> <li>\u672c\u9898\u5f53\u4e2d\uff0c\u8fd9\u4e2a\u6027\u8d28\u5219\u662f\uff1a\u201c\u4e00\u4e2a \\(S\\) \u6c38\u8fdc\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u786e\u5b9a\u7684 \\(T\\)\u201d\u3002</li> <li>\u5982\u679c\u5927\u6b65\u5927\u6b65\u7684\u8f6c\u79fb\u6bd4\u8f83\u56f0\u96be\uff0c\u7c7b\u4f3c\u672c\u9898\u4e2d\u7684\u6210\u6bb5\u8f6c\u79fb\uff0c\u4e0d\u5982\u8003\u8651\u5206\u5272\u4e00\u4e0b\uff0c\u53d8\u6210\u5c0f\u6b65\u5c0f\u6b65\u7684\u52a0\u5165\u548c\u65b0\u5efa\uff0c\u8fd9\u6837\u80fd\u5927\u5e45\u964d\u4f4e\u601d\u8003\u96be\u5ea6\u3002</li> </ul>"}, {"location": "algor/dp/about_dp/#cf1542e2-abnormal-permutation-pairs-hard-version", "title": "CF1542E2 Abnormal Permutation Pairs (hard version)", "text": ""}, {"location": "algor/dp/about_dp/#statement_2", "title": "Statement", "text": "<p>\u7ed9\u5b9a \\(n,m\\)\uff0c\u6c42\u6709\u591a\u5c11\u5bf9\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6392\u5217 \\(p,q\\)\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u3002</p> <ul> <li>\\(p\\) \u7684\u5b57\u5178\u5e8f\u5c0f\u4e8e \\(q\\)</li> <li>\\(p\\) \u7684\u9006\u5e8f\u5bf9\u4e2a\u6570 \u4e25\u683c\u5927\u4e8e \\(q\\)</li> </ul> <p>\u7b54\u6848\u5bf9 \\(m\\) \u53d6\u6a21\u3002</p> <p>\\(1\\le n\\le 500,1\\le m\\leq 10^9\\)\uff0c\u4e0d\u4fdd\u8bc1 \\(m\\) \u4e3a\u7d20\u6570\u3002</p>"}, {"location": "algor/dp/about_dp/#solution_2", "title": "Solution", "text": ""}, {"location": "algor/dp/about_dp/#enlightenment_2", "title": "Enlightenment", "text": ""}, {"location": "algor/dp/about_dp/#references", "title": "References", "text": "<ul> <li>Huan_yp \u5b66\u957f\u7684\u8bfe\u4ef6</li> </ul>"}, {"location": "algor/dp/digit-dp/", "title": "\u6570\u4f4d DP", "text": ""}, {"location": "algor/dp/digit-dp/#_1", "title": "\u6cdb\u5316", "text": "<p>\u8fd9\u4e00\u7c7b\u95ee\u9898\u90fd\u662f\u8be2\u95ee\u67d0\u4e2a\u533a\u95f4 \\([L,R]\\) \u5f53\u4e2d\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u5e76\u4e14 \\(L,R\\) \u7684\u8303\u56f4\u4e00\u822c\u5f88\u5927</p> <p>\u5e38\u89c1\u7684\u9650\u5236\u6709\uff1a</p> <ol> <li>\u5404\u4f4d\u6570\u5b57\u548c\u4e0d\u80fd\u662f\u67d0\u4e2a\u6574\u6570\u7684\u500d\u6570</li> <li>\u67d0\u4e00\u4e2a\u6570\u5b57\u4e0d\u80fd\u51fa\u73b0</li> <li>\u6570\u5b57\u5fc5\u987b\u6309\u7167\u5347\u5e8f\u6392\u5217</li> <li>\u4e0d\u80fd\u51fa\u73b0\u67d0\u4e24\u4e2a\u8fde\u7eed\u7684\u6570\u5b57</li> </ol>"}, {"location": "algor/dp/digit-dp/#_2", "title": "\u5b9e\u73b0", "text": "<p>\u5957\u8def\u65e0\u975e\u4e24\u6b65\uff1a</p> <ul> <li>\u5148\u628a \\(F(L),F(R)\\) \u7b97\u51fa\u6765\uff0c\u7b54\u6848\u5c31\u662f \\(F(R)-F(L-1)\\)\u3002</li> </ul> <p>\u5176\u4e2d \\(F(X)\\) \u8868\u793a \\([1,X]\\) \u5f53\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <ul> <li>\u8003\u8651\u6bcf\u4e00\u4f4d\u600e\u4e48\u586b\uff0c\u662f\u5426\u6709\u4e0a\u754c\u9650\u5236\u6216\u8005\u524d\u5bfc\u96f6\u9650\u5236\u3002</li> </ul> <p>\u4e0a\u754c\u9650\u5236\u662f\u8fd9\u6837\u7684\uff1a\u6bd4\u5982\u4f60\u73b0\u5728\u8981\u6c42 \\(F(n)\\) \u3002</p> <p>\u5e76\u4e14 \\(n=12345678\\)</p> <p>\u6211\u4eec\u4ece\u6700\u9ad8\u4f4d\uff0c\u4e5f\u5c31\u662f \\(8\\) \u6240\u5904\u7684\u4f4d\u7f6e\u5f00\u59cb\u5904\u7406\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e00\u4f4d\u5c31\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u8fd9\u4e00\u4f4d\u586b \\(8\\) \uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0b\u4e00\u4f4d\u53ea\u80fd\u586b \\(0 \\sim 7\\)\u3002</li> <li>\u8fd9\u4e00\u4f4d\u586b \\(0\\sim 7\\) \u7684\u67d0\u4e00\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0b\u4e00\u4f4d\uff0c\u5305\u62ec\u4e4b\u540e\u7684\u6240\u6709\u4f4d\u60f3\u600e\u4e48\u586b\u600e\u4e48\u586b\uff08\\(0 \\sim 9\\)\uff09</li> </ul> <p>\u8fd9\u4e2a\u5c31\u76f4\u63a5\u5f00\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u4e00\u4e0b\uff0c\u6765\u786e\u5b9a\u5f53\u524d\u7684\u51b3\u7b56\u96c6\u5408\u662f\u4ec0\u4e48\uff08\u53ef\u4ee5\u9009\u62e9\u7684\u6570\u5b57\u6709\u54ea\u4e9b\uff09\u3002</p> <p>\u7136\u540e\u524d\u5bfc\u96f6\u9650\u5236\u4e5f\u662f\u76f4\u63a5\u8bb0\u5f55\u4e00\u4e0b\u5373\u53ef\uff08\u5982\u679c\u524d\u5bfc\u96f6\u6807\u8bb0\u4e3a True \u5219\u8868\u793a\u4ece\u5f00\u59cb\u641c\u7d22\u4e00\u76f4\u5230\u73b0\u5728\u90fd\u586b\u7684\u662f \\(0\\)\uff09\u3002</p> <p>\u8fd9\u4e2a\u5c31\u662f\u5728 DP\uff0c\u8bbe \\(dp(x, y, 0/1, 0/1)\\) \u8868\u793a\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u7684\u7b54\u6848\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u5b9e\u73b0\u65b9\u4fbf\uff0c\u901a\u5e38\u4f1a\u5199\u8bb0\u5fc6\u5316\u641c\u7d22\u3002</p> <pre><code>function dfs(\u5f53\u524d\u4f4d\u6570 x, \u5f53\u524d\u72b6\u6001 y, \u524d\u5bfc\u96f6\u9650\u5236 st, \u4e0a\u754c\u9650\u5236 limit):\nif \u5230\u8fbe\u8fb9\u754c and \u7b26\u5408\u8981\u6c42 then \u8fd4\u56de\u8fb9\u754c\u7684\u5408\u6cd5\u7b54\u6848\nif \u5230\u8fbe\u8fb9\u754c and \u4e0d\u7b26\u5408\u8981\u6c42 then\n\u8fd4\u56de\u8fb9\u754c\u7684\u4e0d\u5408\u6cd5\u7b54\u6848          # \u8fd9\u4e2a\u4e00\u822c\u4e0d\u4f1a\u6709\uff0c\u4e00\u822c\u679a\u4e3e\u586b\u6570\u7684\u65f6\u5019\u5982\u679c\u6ca1\u6709\u9650\u5236\u5c31\u4f1a\u6709\uff08\u53ea\u8981\u4f1a\u8bbf\u95ee\u5230\u8fb9\u754c\u4e0d\u5408\u6cd5\u60c5\u51b5\u5c31\u8981\u52a0\u4e0a\uff09\u3002 if \u5f53\u524d\u7684\u72b6\u6001\u5df2\u7ecf\u8bb0\u5fc6\u5316\u8fc7 then\n\u8fd4\u56de\u8bb0\u5f55\u7684\u7b54\u6848\n\nvar result = 0         # \u8bb0\u5f55\u7b54\u6848\nvar up = 9           # \u5f53\u524d\u4f4d\u586b\u6570\u7684\u4e0a\u9650\nif \u6709\u4e0a\u754c\u9650\u5236 then\nup=\u5f53\u524d\u4f4d\u5728 n \u5f53\u4e2d\u7684\u6570\u5b57       # n \u662f\u8981\u6c42\u7684 F(n) \u7684\u81ea\u53d8\u91cf\n\nfor \u679a\u4e3e\u5f53\u524d\u4f4d\u7684\u586b\u6570\u503c from 0 to up :\nif \u5f53\u524d\u4f4d\u586b\u7684\u6570\u4e0d\u7b26\u5408\u9650\u5236 then\ncontinue\nif \u6709\u524d\u5bfc\u96f6\u9650\u5236 and \u5f53\u524d\u586b\u5199\u7684\u662f 0 then result += dfs(x - 1, \u4e0b\u4e00\u4e2a\u72b6\u6001, true, \u662f\u5426\u89e6\u78b0\u4e0a\u754c\u9650\u5236)\nelse then\nresult += dfs(x - 1, \u4e0b\u4e00\u4e2a\u72b6\u6001, false, \u662f\u5426\u89e6\u78b0\u4e0a\u754c\u9650\u5236)\n\n\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u7684\u7b54\u6848 f[x][y]     = result\n\u8fd4\u56de\u7b54\u6848 result\n\n\nfunction solve(\u8981\u6c42\u7684F\u7684\u81ea\u53d8\u91cf n)\n\u5b58\u50a8\u6bcf\u4e00\u4f4d\u6570\u5b57\u7684 vector \u6e05\u7a7a\nwhile n!=0 then\nvector &lt;== n%base           # base\u8868\u793a\u662f\u54ea\u4e00\u4e2a\u8fdb\u5236\nn/=base\n\u6e05\u7a7a\u72b6\u6001\u6570\u7ec4\n\u8fd4\u56de\u5bf9\u5e94\u72b6\u6001\u7684\u7b54\u6848\uff08\u8c03\u7528 dfs\uff09\n</code></pre> <p>\u6709\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a</p> <ul> <li>\u5f53\u524d\u72b6\u6001 \\(y\\) \u9700\u8981\u7531\u9898\u76ee\u7684\u9650\u5236\u51b3\u5b9a\uff0c\u6bd4\u5982 \u4e0a\u4e00\u4e2a\u586b\u5199\u7684/\u5f53\u524d\u7684\u6570\u4f4d\u603b\u548c/\u5df2\u7ecf\u586b\u4e86\u591a\u5c11\u4f4d \u8fd9\u79cd\u9650\u5236\u3002</li> <li>\u8fb9\u754c\u4e00\u822c\u662f \\(x=0\\)\uff0c\u6709\u7684\u65f6\u5019\u9700\u8981\u5224\u65ad\u5f53\u524d\u72b6\u6001\u662f\u5426\u5408\u6cd5\uff08\u6bd4\u5982\u662f\u5426\u662f\u67d0\u4e2a\u6570\u7684\u500d\u6570\u4e4b\u7c7b\u7684\uff09\uff0c\u800c\u4e14\u8fb9\u754c\u7684\u7b54\u6848\u8981\u770b\u60c5\u51b5\u800c\u5b9a\u3002</li> <li>\u7b2c 15 \u884c\u7684\u201c\u9650\u5236\u201d\uff0c\u8fd9\u4e2a\u9700\u8981\u770b\u9898\u76ee\u8981\u6c42\uff0c\u6bd4\u5982\u6709\u6ca1\u6709\u54ea\u4e00\u4e2a\u6570\u4e0d\u80fd\u51fa\u73b0\uff0c\u54ea\u4e24\u4e2a\u6570\u4e0d\u80fd\u8fde\u7eed\u51fa\u73b0\uff08\u8fd9\u4e2a\u9700\u8981\u5728\u5f00\u59cb\u7684\u65f6\u5019\u8bb0\u5f55\u4e0a\u4e00\u4f4d\uff09\u7684\u8981\u6c42\u3002</li> <li>\u524d\u5bfc\u96f6\u9650\u5236\u4e0d\u662f\u6240\u6709\u9898\u90fd\u4f1a\u6709\uff0c\u5982\u679c\u6709\u524d\u5bfc\u96f6\u9650\u5236\uff0c\u5728\u9012\u5f52\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\u65f6\u5019\u8bb0\u5f97\u8ba9\u4e0b\u4e00\u4e2a\u72b6\u6001\u5f3a\u5236\u5408\u6cd5\uff08\u56e0\u4e3a\u5728\u524d\u5bfc\u96f6\u9650\u5236\u4e0b\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e00\u4f4d\u662f\u6ca1\u6709\u586b\u6570\u5b57\u7684\uff0c\u800c\u4e0d\u662f\u586b\u4e86 0\uff09\u3002</li> </ul>"}, {"location": "algor/dp/digit-dp/#_3", "title": "\u4f8b\u9898", "text": "<p>\u6765\u4e00\u9053\u7ecf\u5178\u9898\uff08\u5305\u542b\u6240\u6709\u8981\u7d20\uff09\uff1a</p> <p>[SCOI2009] Windy\u6570\uff1a\u4e0d\u542b\u524d\u5bfc\u96f6\u4e14\u76f8\u90bb\u4e24\u4e2a\u6570\u5b57\u4e4b\u5dee\u81f3\u5c11\u4e3a \\(2\\) \u7684\u6b63\u6574\u6570\u88ab\u79f0\u4e3a Windy \u6570\u3002</p> <p>\u95ee\u4f60 \\(L \\sim R\\) \u5f53\u4e2d\u6709\u591a\u5c11\u4e2a Windy \u6570\u3002\\(1\\le L \\le R \\le 2\\times 10^9\\) </p> <p>\uff08\u6211\u6700\u5f00\u59cb\u6709\u4e2a\u9519\uff0c\u533a\u95f4\u662f\u9ed8\u8ba4 \\(L\\not=R\\) \u7684\uff0c\u6240\u4ee5\u5982\u679c\u8981\u76f8\u7b49\u5c31\u4e0d\u80fd\u5199\u201c\u533a\u95f4\u201d\uff0c\u67d0\u6b21\u6a21\u62df\u8d5b\u7684\u9898\u4e5f\u56e0\u4e3a\u8fd9\u4e2a\u5dee\u70b9\u88ab\u55b7\uff08</p> <p>\u5957\u677f\u5b50\u5c31\u884c\u4e86\uff0c\u6839\u672c\u4e0d\u9700\u8981\u8fc7\u591a\u7684\u601d\u8003\u3002</p> <p>\u6ce8\u610f\u8fd9\u4e2a\u4e0d\u542b\u524d\u5bfc\u96f6\u7684\u610f\u601d\u662f\uff0c<code>0012</code>, <code>012</code>, <code>12</code> \u7b97\u4f5c\u540c\u4e00\u4e2a\u65b9\u6848\u3002</p> <p>\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c\u6709\u51e0\u4e2a\u5c0f\u7684\u6ce8\u610f\u70b9\u5df2\u7ecf\u5199\u5728\u91cc\u9762\u4e86\uff1a</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 15 + 10;\nint L, R;\nstd::vector&lt;int&gt;dight;\nint f[si][si][2][2];\n\nint dfs(int x, int y, int st, int limit) {\nif(!x) return 1;\nif(~f[x][y][st][limit]) return f[x][y][st][limit];\nint ret = 0, up = 9;\nif(limit) up = dight[x - 1];\nfor(int i = 0; i &lt;= up; ++i) {\nif(abs(i - y) &lt; 2) continue; // \u4e0d\u5408\u6cd5\nif(st &amp;&amp; i == 0)\nret += dfs(x - 1, 11, 1, limit &amp;&amp; i == up); // \u5f3a\u5236\u5408\u6cd5\nelse ret += dfs(x - 1, i, 0, limit &amp;&amp; i == up);\n}\nf[x][y][st][limit] = ret;\nreturn ret;\n}\nint solve(int n) {\ndight.clear();\nwhile(n) dight.push_back(n % 10), n /= 10;\nmemset(f, -1, sizeof f);            // \u6ce8\u610f\u6e05\u7a7a\nreturn dfs(dight.size(), 11, 1, 1); // \u5f3a\u5236\u5408\u6cd5\n}\n\nint main() {  cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; L &gt;&gt; R;\ncout &lt;&lt; solve(R) - solve(L - 1) &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <p>\u8fd8\u6709\u51e0\u4e2a\u9700\u8981\u7279\u6b8a\u6ce8\u610f\u7684\u70b9\uff1a</p> <p>Warning</p> <p>\u6839\u636e\u72b6\u6001\u6765\u5f00\u8bb0\u5fc6\u5316\u7684\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u4e0d\u8981\u5f00\u5c0f\u4e86\uff0c\u4e5f\u8981\u5c0f\u5fc3\u8d1f\u4e0b\u6807\uff01\u3002</p> <p>\u6e05\u7a7a\u8bb0\u5fc6\u5316\u6570\u7ec4\u7684\u65f6\u673a\u4e5f\u9700\u8981\u628a\u63e1\u3002</p> <p>\u5982\u679c\u4e0d\u7ba1\u600e\u4e48\u8be2\u95ee\u9700\u8981\u7684\u72b6\u6001\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728 <code>main()</code> \u7684\u6700\u5f00\u5934\u5199 <code>memset</code></p> <p>\u5982\u679c\u6bcf\u4e00\u4e2a\u8be2\u95ee\u5e95\u4e0b\u4f1a\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u8981\u5728 <code>solve</code> \u6216\u8005\u5f53\u524d\u8be2\u95ee\u5e95\u4e0b\u5199 <code>memset</code>\uff08\u8fd9\u79cd\u5e38\u89c1\u4e00\u70b9\uff09\u3002</p>"}, {"location": "algor/dp/expectation/", "title": "\u671f\u671b DP", "text": "<p>\u57fa\u672c\u7684\u4e00\u4e9b\u4e1c\u897f\u53ef\u4ee5\u770b\u8fd9\u91cc</p>"}, {"location": "algor/dp/expectation/#dp", "title": "\u671f\u671b dp", "text": "<p>\u671f\u671b dp \u548c\u6982\u7387 dp \u7684\u533a\u522b\u5c31\u5728\u4e8e\uff0c\u671f\u671b dp \u8fd8\u9700\u8981\u8003\u8651\u53d6\u503c\u95ee\u9898\u3002</p> <p>\u6240\u4ee5\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u671f\u671b dp \u7684\u5904\u7406\u90fd\u6bd4\u6982\u7387 dp \u7a0d\u8981\u590d\u6742\u4e00\u4e9b\uff0c\u4e0d\u8fc7\u5176\u5b9e\u4e5f\u4e0d\u7b97\u592a\u96be\u3002</p>"}, {"location": "algor/dp/expectation/#abc280e-critical-hit", "title": "ABC280E Critical Hit", "text": "<p>\u6709\u4e00\u4e2a \\(n\\) \u6ef4\u8840\u7684\u602a\u7269\u3002\u6bcf\u4e00\u6b21\u653b\u51fb\u4f60\u6709 \\(P\\%\\) \u7684\u6982\u7387\u8ba9\u5b83\u5931\u53bb \\(2\\) \u6ef4\u8840\uff0c\u6709 \\((100-P)\\%\\) \u7684\u6982\u7387\u8ba9\u5b83\u5931\u53bb \\(1\\) \u6ef4\u8840\u3002</p> <p>\u5982\u679c\u653b\u51fb\u8fc7\u540e\u602a\u7269\u7684\u8840\u91cf \\(\\leq 0\\)\uff0c\u5b83\u5c31\u6b7b\u4e86\u3002\u4f60\u9700\u8981\u4e00\u76f4\u653b\u51fb\u602a\u7269\u76f4\u5230\u5b83\u6b7b\u4ea1\u3002\u8f93\u51fa\u653b\u51fb\u6b21\u6570\u7684\u671f\u671b\u5bf9 \\(998244353\\) \u53d6\u6a21\u7684\u503c\u3002</p> <p>\\(1\\leq n\\leq 2\\times10^5,0\\leq P\\leq 100\\)\u3002</p> <p>\u8bbe \\(dp(i)\\) \u8868\u793a\u6253\u6b7b\u4e00\u53ea\u8840\u91cf\u4e3a \\(i\\) \u7684\u602a\u7269\u7684\u6b65\u6570\u671f\u671b\u3002</p> <p>\u56e0\u4e3a\u8840\u91cf\u4e3a \\(1\\) \u7684\u65f6\u5019\u600e\u4e48\u6253\u90fd\u662f gg\uff0c\u6240\u4ee5 \\(dp(1) = 1\\)\u3002</p> <p>\u65b9\u7a0b\u6bd4\u8f83\u663e\u7136\uff0c\u5982\u679c\u5f53\u524d\u6253\u6389\u4e86 \\(1\\) \u6ef4\u8840\uff0c\u90a3\u4e48\u5e94\u5f53\u4ece \\(dp(i - 1)\\) \u8f6c\u79fb\u8fc7\u6765\uff0c\u6982\u7387\u4e3a \\(\\dfrac{100 - P}{100}\\)\uff0c\u653b\u51fb\u6b21\u6570\u52a0\u4e00\u3002</p> <p>\u5426\u5219\u4ece \\(dp(i - 2)\\) \u8f6c\u79fb\u8fc7\u6765\uff0c\u6982\u7387\u4e3a \\(\\dfrac{P}{100}\\)\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230\u65b9\u7a0b\uff1a</p> \\[dp(i) = \\dfrac{100 - P}{100}dp(i - 1) + \\dfrac{P}{100}dp(i - 2) + 1\\] <p>\u6211\u4eec\u8fd9\u91cc\u7701\u53bb\u4e86\u76f4\u63a5\u4ee3\u5165\u671f\u671b\u7684\u5b9a\u4e49\u7684\u8fc7\u7a0b\uff0c\u53ea\u9700\u8981\u4e58\u6cd5\u5206\u914d\u5f8b\u4e00\u4e0b\u5c31\u53ef\u4ee5\u77e5\u9053\u5f0f\u5b50\u7684\u6b63\u786e\u6027\u4e86\u3002</p> <p>\u4f60\u53ef\u4ee5\u628a\u4e0a\u4e00\u4e2a\u72b6\u6001\u770b\u4f5c\u8fd9\u4e2a\u72b6\u6001\u7684\u4e00\u4e2a\u53d6\u503c\uff0c\u4e0d\u8fc7\u5176\u672c\u8d28\u8fd8\u662f\u63a8\u5f0f\u5b50\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\n// using i64 = long long;\n#define int long long\n\nconst int si = 2e5 + 10;\nconst int mod = 998244353;\n\nint n, p;\nint dp[si];\nint qpow(int a, int b) {\nint ret = 1 % mod;\nfor(; b; b &gt;&gt;= 1) {\nif(b &amp; 1) ret = ret * a % mod;\na = a * a % mod;\n}\nreturn ret % mod;\n}\nint inv(int x) { return qpow(x, mod - 2); }\nconst int iv = inv(100);\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; p;\ndp[0] = 0, dp[1] = 1; for(int i = 2; i &lt;= n + 1; ++i)\ndp[i] = ((dp[i - 1] * (100 - p + mod) % mod * iv % mod)\n+ (dp[i - 2] * p % mod * iv % mod) + 1 % mod + mod) % mod;\ncout &lt;&lt; dp[n] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/dp/expectation/#acwing217", "title": "Acwing217. \u7eff\u8c46\u86d9\u7684\u5f52\u5bbf", "text": "<p>\u7ed9\u51fa\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u7684\u8fde\u901a\u56fe\uff0c\u8d77\u70b9\u4e3a \\(1\\)\uff0c\u7ec8\u70b9\u4e3a \\(N\\)\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u957f\u5ea6\u3002</p> <p>\u6570\u636e\u4fdd\u8bc1\u4ece\u8d77\u70b9\u51fa\u53d1\u80fd\u591f\u5230\u8fbe\u56fe\u4e2d\u6240\u6709\u7684\u70b9\uff0c\u56fe\u4e2d\u6240\u6709\u7684\u70b9\u4e5f\u90fd\u80fd\u591f\u5230\u8fbe\u7ec8\u70b9\u3002</p> <p>\u7eff\u8c46\u86d9\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u8d70\u5411\u7ec8\u70b9\u3002</p> <p>\u5230\u8fbe\u6bcf\u4e00\u4e2a\u9876\u70b9\u65f6\uff0c\u5982\u679c\u6709 \\(K\\) \u6761\u79bb\u5f00\u8be5\u70b9\u7684\u9053\u8def\uff0c\u7eff\u8c46\u86d9\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u4e00\u6761\u9053\u8def\u79bb\u5f00\u8be5\u70b9\uff0c\u5e76\u4e14\u8d70\u5411\u6bcf\u6761\u8def\u7684\u6982\u7387\u4e3a \\(\\dfrac{1}{K}\\)\u3002</p> <p>\u73b0\u5728\u7eff\u8c46\u86d9\u60f3\u77e5\u9053\uff0c\u4ece\u8d77\u70b9\u8d70\u5230\u7ec8\u70b9\u6240\u7ecf\u8fc7\u7684\u8def\u5f84\u603b\u957f\u5ea6\u7684\u671f\u671b\u662f\u591a\u5c11\uff1f</p> <p>\\(1\\le n \\le 1e5, 1\\le m \\le 2e5\\)\u3002</p> <p>\u9996\u5148\u6211\u4eec\u6ce8\u610f\u5230\u8981\u6c42\u7684\u662f\u4ece \\(1 \\to n\\) \u7684\u8def\u5f84\u957f\u5ea6\u7684\u671f\u671b\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u53ef\u80fd\u7684\u8def\u5f84\u957f\u5ea6\u4e58\u4e0a\u5bf9\u5e94\u7684\u6982\u7387\u3002</p> <p>\u663e\u7136\u6211\u4eec\u4e0d\u53ef\u80fd\u76f4\u63a5\u4e00\u4e2a\u5f0f\u5b50\u5c31\u628a\u8fd9\u4e2a\u4e1c\u897f\u5199\u51fa\u6765\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u671f\u671b\u9012\u63a8/dp\u3002</p> <p>\u8bbe \\(dp(u)\\) \u8868\u793a\u4ece \\(1 \\to u\\) \u7684\u8def\u5f84\u957f\u5ea6\u7684\u671f\u671b\u3002</p> <p>\u6211\u4eec\u6839\u636e\u5b9a\u4e49\u5c1d\u8bd5\u63a8\u4e00\u4e0b\u5f0f\u5b50\uff0c\u5047\u8bbe \\(u\\) \u662f\u4ece \\(v_1 \\dots v_r\\) \u8fd9\u4e9b\u8282\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u3002</p> <p>\u5047\u8bbe \\(x(v_i)_j\\) \u8868\u793a\u4ece \\(1 \\to v_i\\) \u7684\u8def\u5f84\u7684\u67d0\u4e00\u79cd\u53ef\u80fd\u957f\u5ea6\uff0c\\(p(v_i)_j\\) \u8868\u793a\u51fa\u73b0 \\(x(v_i)_j\\) \u8fd9\u79cd\u60c5\u51b5\u7684\u6982\u7387\u3002</p> <p>\u90a3\u4e48\u5c31\u6709\uff1a</p> \\[ \\begin{aligned}     dp(u) &amp;= \\sum\\limits_i\\sum\\limits_j(p(v_i)_j \\times \\dfrac{1}{deg(v_i)} \\times (x(v_i)_j + w(u, v_i))) \\\\     &amp;= \\sum\\limits_i(\\dfrac{1}{deg(v_i)} \\times \\sum\\limits_j (p(v_i)_j \\times x(v_i)_j + p(v_i)_j \\times w(u, v_i))) \\\\     &amp;= \\sum\\limits_i(\\dfrac{1}{deg(v_i)} \\times (dp(v_i) + w(u, v_i) \\times \\sum\\limits_j p(v_i)_j)) \\end{aligned} \\] <p>\u6ce8\u610f\u5230 \\(\\sum\\limits_j (p(v_i)_j)\\) \u5c31\u662f\u4ece \\(1\\) \u51fa\u53d1\uff0c\u8d70\u5230 \\(v_i\\) \u7684\u6982\u7387\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8f6c\u79fb dp \u7684\u65f6\u5019\u987a\u5e26\u7740\u5904\u7406\u4e00\u4e2a\u6570\u7ec4 \\(P(v_i)\\) \u8868\u793a\u4ece \\(1 \\to v_i\\) \u7684\u6982\u7387\u5c31\u884c\u4e86\u3002</p> <p>\u521d\u59cb\u5316 \\(dp(1) = 0\\)\uff0c\u7ec8\u6001 \\(dp(n)\\)\u3002</p> <p>\u5176\u5b9e\u8fd9\u79cd\u201c\u6b63\u63a8\u201d\u7684\u65b9\u6cd5\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5176\u539f\u56e0\u5728\u5728\u4e8e\u9700\u8981\u5904\u7406 \\(P\\) \u8fd9\u4e2a\u6570\u7ec4\uff0c\u56e0\u4e3a\u4ece \\(1 \\to v_i\\) \u7684\u6982\u7387\u662f\u4e0d\u80fd\u76f4\u63a5\u786e\u5b9a\u7684\u3002</p> <p>\u6ce8\u610f\u5230\u6211\u4eec\u6700\u540e\u4e00\u5b9a\u4f1a\u8d70\u5230 \\(n\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece \\(\\forall u \\not= n, P(u \\to n) = 1\\)\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u8003\u8651\u5012\u63a8\u4f1a\u600e\u6837\u5462\uff1f</p> <p>\u8bbe \\(dp(u)\\) \u8868\u793a\u4ece \\(u \\to n\\) \u7684\u8def\u5f84\u957f\u5ea6\u671f\u671b\uff0c\u5e76\u4e14 \\(u\\) \u53ef\u4ee5\u5230\u8fbe \\(v_1 \\dots v_r\\)\u3002</p> <p>\u6839\u636e\u5b9a\u4e49\uff0c\u7c7b\u4f3c\u6b63\u63a8\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\uff1a</p> \\[ \\begin{aligned}     dp(u) = \\dfrac{1}{deg(u)}\\sum\\limits_i(dp(v_i) + w(u, v_i) \\times \\sum\\limits_j p(v_i)_j) \\end{aligned} \\] <p>\u662f\u4e0d\u662f\u57fa\u672c\u4e00\u6837\uff1f\u5e76\u4e0d\uff0c\u6ce8\u610f\u5230\u8fd9\u91cc\u7684 \\(\\sum\\limits_jp(v_i)_j\\) \u8868\u793a\u7684\u662f\u4ece \\(v_i\\) \u51fa\u53d1\u8d70\u5230 \\(n\\) \u7684\u6982\u7387\uff0c\u8fd9\u4e2a\u6982\u7387\u4e00\u5b9a\u662f \\(1\\)\uff0c\u6240\u4ee5\u72b6\u6001\u8f6c\u79fb\u53d8\u4e3a\uff1a</p> \\[ \\begin{aligned}     dp(u) = \\dfrac{1}{deg(v_i)} \\sum\\limits_i(dp(v_i) + w(u, v_i)) \\end{aligned} \\] <p>\u7136\u540e\u8f6c\u79fb\u5c31\u4e0d\u7528\u989d\u5916\u7ef4\u62a4\u4fe1\u606f\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\n\nconst int si = 1e5 + 10;\n\nint n, m;\nint tot = 0, head[si];\nstruct Edge { int ver, Next, w; } e[si &lt;&lt; 1];\ninline void add(int u, int v, int w) { e[tot] = (Edge) {v, head[u], w}, head[u] = tot++; }\n\nstd::queue&lt;int&gt; q;\nint deg[si], k[si];\nldb dp[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head);\ncin &gt;&gt; n &gt;&gt; m, dp[n] = 0;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nadd(v, u, w), deg[u]++, k[u]++;\n}\nq.push(n);\nwhile(!q.empty()) {\nint u = q.front();\nq.pop();\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver, w = e[i].w;\ndeg[v] --;\ndp[v] += (dp[u] + 1.0 * w) / (1.0 * k[v]);\nif(!deg[v]) q.push(v);  }\n}\ncout &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; dp[1] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/dp/expectation/#hnoi2013", "title": "[HNOI2013] \u6e38\u8d70", "text": "<p>\u5c0f Z \u5728\u8be5\u56fe\u4e0a\u8fdb\u884c\u968f\u673a\u6e38\u8d70\uff0c\u521d\u59cb\u65f6\u5c0f Z \u5728 \\(1\\) \u53f7\u9876\u70b9\uff0c\u6bcf\u4e00\u6b65\u5c0f Z \u4ee5\u76f8\u7b49\u7684\u6982\u7387\u968f\u673a\u9009\u62e9\u5f53\u524d\u9876\u70b9\u7684\u67d0\u6761\u8fb9\uff0c\u6cbf\u7740\u8fd9\u6761\u8fb9\u8d70\u5230\u4e0b\u4e00\u4e2a\u9876\u70b9\uff0c\u83b7\u5f97\u7b49\u4e8e\u8fd9\u6761\u8fb9\u7684\u7f16\u53f7\u7684\u5206\u6570\u3002\u5f53\u5c0f Z \u5230\u8fbe \\(n\\) \u53f7\u9876\u70b9\u65f6\u6e38\u8d70\u7ed3\u675f\uff0c\u603b\u5206\u4e3a\u6240\u6709\u83b7\u5f97\u7684\u5206\u6570\u4e4b\u548c\u3002 \u73b0\u5728\uff0c\u8bf7\u4f60\u5bf9\u8fd9 \\(m\\) \u6761\u8fb9\u8fdb\u884c\u7f16\u53f7\uff0c\u4f7f\u5f97\u5c0f Z \u83b7\u5f97\u7684\u603b\u5206\u7684\u671f\u671b\u503c\u6700\u5c0f\u3002</p> <p>\u4fdd\u8bc1 \\(2\\leq n \\leq 500\\)\uff0c \\(1 \\leq m \\leq 125000\\)\uff0c\\(1 \\leq u, v \\leq n\\)\uff0c\u7ed9\u51fa\u7684\u56fe\u65e0\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u4e14\u4ece \\(1\\) \u51fa\u53d1\u53ef\u4ee5\u5230\u8fbe\u6240\u6709\u7684\u8282\u70b9\u3002</p> <p>\u5148\u76f4\u63a5\u8003\u8651\u7b97\u8fb9\u7684\u8d21\u732e\uff0c\u76f4\u63a5\u7b97\u7684\u8bdd\uff0c\u6ca1\u6cd5 \\(O(m)\\) \u7684\uff0c\u6ce8\u610f\u5230 \\(n \\le 500\\)\uff0c\u6211\u4eec\u4ece \\(n\\) \u5165\u624b\u3002</p> <p>\u53ef\u4ee5\u8bbe \\(g(i)\\) \u8868\u793a\u7f16\u53f7\u4e3a \\(i\\) \u7684\u8fb9\u88ab\u7ecf\u8fc7\u7684\u671f\u671b\u6b21\u6570\uff0c\u6211\u4eec\u8ba9 \\(g(i)\\) \u5927\u7684\u7f16\u53f7\u5c0f\u5373\u53ef\uff0c\u8fd9\u4e2a\u662f\u6392\u5e8f\u4e0d\u7b49\u5f0f\u3002</p> <p>\u5982\u679c \\(f(i)\\) \u8868\u793a\u70b9 \\(i\\) \u88ab\u7ecf\u8fc7\u7684\u6b21\u6570\uff0c\u90a3\u4e48 \\(g(u \\to v) = \\dfrac{f(u)}{d(u)} + \\dfrac{f(v)}{d(v)}\\)\u3002</p> <p>\u5176\u4e2d \\(d\\) \u8868\u793a\u5ea6\u6570\uff0c\u800c \\(f(i) = \\sum\\limits_{v \\to u\\land v\\not=n} \\dfrac{f(v)}{d(v)},(i \\not= 1)\\)\u3002</p> <p>\u5982\u679c \\(i = 1, f(i) = \\sum\\limits_{v \\to u \\land v\\not= n} \\dfrac{f(v)}{d(v)} + 1\\)\u3002</p> <p>\u7136\u540e\u8fd9\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u9ad8\u65af\u6d88\u5143\u5373\u53ef\uff0c\u590d\u6742\u5ea6 \\(O(n^3)\\)\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\n\nconst ldb eps = 1e-5;\nconst int si = 5e2 + 10;\nconst int sim = 5e5 + 10;\n\nint n, m;\nint tot = 0, head[si];\nstruct Edge { int ver, Next; } e[sim];\ninline void add(int u, int v) { e[tot] = (Edge){v, head[u]}, head[u] = tot++; } int from[sim], to[sim];\n\nldb f[sim], deg[si];\nnamespace Gauss {\nldb x[si];\nldb c[si][si], d[si];\nvoid fill() {\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= n; ++j)\nc[i][j] = 0.0;\nd[i] = 0.0, x[i] = 0.0;\n}\nfor(int u = 1; u &lt; n; ++u) {\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == u) continue;\nc[u][v] = (1.0 / deg[v]);\n}\nc[u][u] = -1.0, d[u] = -0.0;\n}\nd[1] = -1.0, x[n] = 0.0;\n}\nvoid solve() {\nfor(int i = 1; i &lt; n; ++i) {\nint l = i;\nfor(int j = i + 1; j &lt; n; ++j)\nif(fabs(c[j][i]) - fabs(c[l][i]) &gt; eps)\nl = j;\nif(l != i) {\nfor(int j = 1; j &lt;= n; ++j)\nswap(c[l][j], c[i][j]);\nswap(d[l], d[i]);\n}\nif(fabs(c[i][i]) &gt;= eps) {\nfor(int j = 1; j &lt; n; ++j) {\nif(i == j) continue;\nldb rate = c[j][i] / c[i][i];\nfor(int k = 1; k &lt;= n; ++k)\nc[j][k] -= c[i][k] * rate;\nd[j] -= rate * d[i];\n}\n}\n}       for(int i = n - 1; i &gt;= 1; --i) {\nfor(int j = i + 1; j &lt; n; ++j)\nd[i] -= x[j] * c[i][j];\nx[i] = d[i] / c[i][i];\n}\n}\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v;\ncin &gt;&gt; u &gt;&gt; v; add(u, v), add(v, u);\nfrom[i] = u, to[i] = v;\ndeg[u] += 1.0, deg[v] += 1.0;\n}\nGauss::fill(), Gauss::solve();\nfor(int i = 1; i &lt;= m; ++i) {\nif(from[i] != n) f[i] += Gauss::x[from[i]] / deg[from[i]];\nif(to[i] != n) f[i] += Gauss::x[to[i]] / deg[to[i]];\n}\nldb ans = 0.0;\nsort(f + 1, f + 1 + m); for(int i = 1; i &lt;= m; ++i)\nans += f[i] * (m - i + 1);\n\ncout &lt;&lt; fixed &lt;&lt; setprecision(3) &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/dp/expectation/#cf24d-broken-robot", "title": "CF24D Broken Robot", "text": "<p>\\(n\\) \u884c \\(m\\) \u5217\u7684\u77e9\u9635\uff0c\u73b0\u5728\u5728 \\((x,y)\\)\uff0c\u6bcf\u6b21\u7b49\u6982\u7387\u5411\u5de6\uff0c\u53f3\uff0c\u4e0b\u8d70\u6216\u539f\u5730\u4e0d\u52a8\uff0c\u4f46\u4e0d\u80fd\u8d70\u51fa\u53bb\uff0c\u95ee\u8d70\u5230\u6700\u540e\u4e00\u884c\u671f\u671b\u7684\u6b65\u6570\u3002</p> <p>\u6ce8\u610f\uff0c\\((1,1)\\) \u662f\u6728\u677f\u7684\u5de6\u4e0a\u89d2\uff0c\\((n,m)\\) \u662f\u6728\u677f\u7684\u53f3\u4e0b\u89d2\u3002</p> <p>\\(1\\le n,m\\le 10^3\\)\uff0c\\(1\\le x\\le n\\)\uff0c\\(1\\le y\\le m\\)\u3002</p> <p>\u65b9\u7a0b\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u5982\u679c\u8bbe \\(dp(x, y)\\) \u8868\u793a\u4ece \\(x, y\\) \u8d70\u5230\u6700\u540e\u4e00\u884c\u7684\u671f\u671b\u3002</p> <p>\u7136\u540e\u8003\u8651\u8fb9\u754c\u5206\u5f00\u8f6c\u79fb\uff0c\u65b9\u7a0b\u7565\uff0c\u53ef\u4ee5\u5199\u6210\u9ad8\u65af\u6d88\u5143\u7684\u5f62\u5f0f\uff0c\u6ce8\u610f\u5230\u7cfb\u6570\u77e9\u9635\u6bd4\u8f83\u7279\u6b8a\uff1a</p> \\[ \\begin{bmatrix} &amp;-\\frac{2}{3} &amp;\\frac{1}{3} &amp;0 &amp;0 \\\\ &amp;\\frac{1}{4} &amp;-\\frac{3}{4} &amp;\\frac{1}{4} &amp;0 \\\\ &amp;0 &amp;\\frac{1}{4} &amp;-\\frac{3}{4} &amp;\\frac{1}{4} \\\\ &amp;0 &amp;0 &amp;\\frac{1}{3} &amp;-\\frac{2}{3} \\end{bmatrix} \\] <p>\u76f4\u63a5\u4ece\u4e0b\u5f80\u4e0a\u56de\u4ee3\u5c31\u662f \\(O(n^2)\\) \u7684\u4e86\uff0c\u7c7b\u4f3c\u7684\u8fd8\u6709\uff1a\u5206\u624b\u662f\u795d\u613f\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u5f88\u597d\u73a9\u7684\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\n\nconst int si = 1e3 + 10;\n\nldb dp[si][si];\nint n, m, x, y;\nnamespace Gauss {\nldb c[si][si];\nvoid solve() {\nfor(int j = n - 1; j &gt;= 1; --j) {\nfor(int i = 1; i &lt;= m; ++i) {\nc[i][i] = 3, c[i][i - 1] = c[i][i + 1] = -1;\nc[i][m + 1] = 4 + dp[j + 1][i];\nif(i == 1) c[i][m + 1]--, c[i][i]--;\nif(i == m) c[i][m + 1]--, c[i][i]--;\n}\nfor(int i = 1; i &lt;= m; ++i) {\nif(c[i][i] == 0) {\ncout &lt;&lt; \"No Solution\" &lt;&lt; endl;\nexit(0);\n}\nelse {\nif(i != m)\nc[i][i + 1] = c[i][i + 1] / c[i][i];\nc[i][m + 1] = c[i][m + 1] / c[i][i], c[i][i] = 1;\nif(i != m) {\nc[i + 1][i + 1] = c[i + 1][i + 1] - c[i + 1][i] * c[i][i + 1];\nc[i + 1][m + 1] = c[i + 1][m + 1] - c[i + 1][i] * c[i][m + 1];\nc[i + 1][i] = 0;\n}\n}\n}\nfor(int i = m; i &gt;= 1; --i) {\ndp[j][i] = c[i][m + 1];\nif(i != 1) c[i - 1][m + 1] -= c[i - 1][i] * dp[j][i];\n}\n}\n}\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; x &gt;&gt; y;\nfor(int i = 1; i &lt;= m; ++i) dp[n][i] = 0.0;\nGauss::solve(), cout &lt;&lt; fixed &lt;&lt; setprecision(10) &lt;&lt; dp[x][y];\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/dp/expectation/#_1", "title": "\u603b\u7ed3", "text": "<p>\u6c42\u89e3\u671f\u671b DP \u65f6\uff0c\u53ef\u4ee5\u5c06\u4e0a\u4e00\u4e2a\u72b6\u6001\u5f53\u4f5c\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\u968f\u673a\u53d8\u91cf\u7684\u53d6\u503c\uff0c\u8fdb\u800c\u7b80\u5316\u8f6c\u79fb\u3002</p> <p>\u5176\u672c\u8d28\u7c7b\u4f3c\uff1a\\(\\sum (x_ip_i\\times P) = P \\times \\sum(x_ip_i)\\)\u3002</p> <p>\u5f88\u591a\u65f6\u5019\uff0c\u6b63\u63a8\u9700\u8981\u989d\u5916\u5904\u7406\u6982\u7387\uff0c\u5728\u786e\u5b9a\u7ec8\u6001\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5012\u63a8\uff0c\u501f\u6b64\u6765\u7701\u53bb\u5904\u7406\u6982\u7387\u7684\u7e41\u7410\u6b65\u9aa4\u3002</p> <p>\u5982\u679c\u65b9\u7a0b\u6709\u540e\u6548\u6027\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u5957\u4e0a\u4e00\u4e2a\u9ad8\u65af\u6d88\u5143\u3002</p>"}, {"location": "algor/dp/interval-dp/", "title": "\u533a\u95f4 DP", "text": ""}, {"location": "algor/dp/interval-dp/#_1", "title": "\u533a\u95f4\u4f5c\u4e3a\u9636\u6bb5", "text": "<p>\u5178\u578b\u7684\u9898\u76ee\u5c31\u662f\u5408\u5e76\u77f3\u5b50\uff0c\u80fd\u91cf\u9879\u94fe\u8fd9\u79cd\u3002</p> <p>\u9898\u9762\u4e00\u822c\u4f1a\u8bf4 \u201c\u5408\u5e76\u201d \u4e4b\u7c7b\u7684\u8bcd\uff0c\u72b6\u6001\u4e00\u822c\u4f1a\u662f \\(f_{l,r}\\) \u8868\u793a\u5c06\u533a\u95f4 \\(l,r\\) \u5168\u90e8\u5408\u5e76\u7684\u6700\u4f18\u4ef7\u503c\u3002</p> <p>\u5f53\u7136\u4e5f\u6709\u53ef\u80fd\u662f \u201c\u5904\u7406\u5b8c\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u4f18\u201d\uff0c\u90a3\u4e48\u505a\u6cd5\u76f8\u5e94\u7684\u4f1a\u6709\u4e00\u70b9\u53d8\u5316\uff08\u6bd4\u5982 CQOI\u7684\u6d82\u8272\uff0c\u548c\u8001\u738b\u53bb\u5173\u8def\u706f\u90a3\u4e2a\u9898\uff09</p> <p>\u505a\u6cd5\u662f\u4ee5\u533a\u95f4\u4f5c\u4e3a\u9636\u6bb5\uff0c\u7136\u540e\u679a\u4e3e\u533a\u95f4\u5de6\u7aef\u70b9\u3002</p> <p>\u518d\u5728\u6bcf\u4e00\u4e2a\u533a\u95f4\u91cc\u627e\u5230\u4e00\u4e2a\u201c\u5206\u5272\u70b9\u201d\uff0c\u628a\u524d\u540e\u4e24\u4e2a\u90e8\u5206\u5408\u5e76\u8d77\u6765\u5e76\u52a0\u4e0a\u64cd\u4f5c\u7684\u6743\u503c\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\u4e00\u822c\u957f\u8fd9\u6837\uff1a</p> <pre><code>init(); //\u9884\u5904\u7406\u957f\u5ea6\u4e3a 1,...,a \u7684\u533a\u95f4\n\nfor(int len = a + 1; len &lt;= n; ++len) {\nfor(int i = 1; i + len - 1 &lt;= n; ++i) {\nint j = i + len - 1;\nfor(int k = i; k &lt; j; ++k) {\nf[i][j] = min/max(f[i][j], f[i][k] + f[k + 1][j] + calc(k)); //calc(k) \u662f\u4ece k, k+ 1 \u8fd9\u91cc\u65ad\u5f00\u7684\u64cd\u4f5c\u4ef7\u503c\u3002\n}   // k \u8868\u793a \u4ece k, k + 1 \u8fd9\u4e24\u4e2a\u70b9\u4e2d\u95f4\u65ad\u5f00\uff0c\u6240\u4ee5 k &lt; j\u3002\n}\n}\n</code></pre>"}, {"location": "algor/dp/interval-dp/#_2", "title": "\u65ad\u73af\u6210\u94fe", "text": "<p>\u5f53\u533a\u95f4DP\u95ee\u9898\u88ab\u653e\u5230\u73af\u4e0a\u7684\u65f6\u5019\u53ef\u4ee5\u91c7\u53d6\u3002</p> <p>\u53ea\u9700\u8981\u628a\u539f\u5e8f\u5217\u590d\u5236\u4e00\u8fb9\u6254\u5230\u540e\u9762\u5373\u53ef\u3002</p> <pre><code>a1, a2, a3, a4, a5,...an, a1, a2, a3,......an\n</code></pre> <p>\u76f8\u5e94\u7684\uff0c\u521d\u59cb\u5316\u548c\u8bfb\u5165\u64cd\u4f5c\u9700\u8981\u7684\u6570\u7684\u65f6\u5019\u4e5f\u9700\u8981\u590d\u5236\u5e76\u6269\u5c55\u4e00\u500d\u3002</p> <p>\u5047\u8bbe\u95ee\u9898\u8981\u6c42\u7684\u662f\u6574\u4e2a\u73af\u5408\u5e76\u8d77\u6765\u7684\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u5faa\u73af\u6c42\u6700\u4f18\u89e3\u9700\u8981\u8fd9\u4e48\u5199\uff1a</p> <pre><code>int res = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nint j = i + n - 1; // [i,j] \u662f\u65ad\u73af\u6210\u94fe\u4e4b\u540e\u6240\u6709\u957f\u5ea6\u4e3a n \u7684\u533a\u95f4\nres = max(res, f[i][j]);\n}\n</code></pre>"}, {"location": "algor/dp/interval-dp/#_3", "title": "\u5206\u5272\u578b", "text": "<p>\u95ee\u9898\u4e00\u822c\u662f\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u8981\u6c42\u4f60\u628a\u4ed6\u5206\u6210 \\(m\\) \u4e2a\u90e8\u5206\uff0c\u4f7f\u5f97\u6743\u503c\u548c\u6700\u5927\u3002</p> <p>\u8fd9\u91cc\u7684\u6743\u503c\u548c\u4f1a\u968f\u7740\u5206\u5272\u90e8\u5206\u7684\u4e0d\u540c\u800c\u53d8\u5316\u3002</p> <p>\u90a3\u4e48\u8bbe \\(f_{i,j}\\) \u4ece \\(1\\to i\\) \u6784\u6210\u7684\u5e8f\u5217\uff0c\u5206\u5272\u6210 \\(j\\) \u90e8\u5206\u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u6743\u503c\u548c\u7684\u6700\u503c\u3002</p> <p>\u8003\u8651\u4ece \u201c\u6700\u540e\u4e00\u4e2a\u201d \u4e0b\u624b\uff0c\u4e5f\u5c31\u662f \u201c\u6700\u540e\u4e00\u4e2a\u90e8\u5206\u201d\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728 \\(1 \\to i\\) \u8fd9\u4e00\u6bb5\u4e0a\u679a\u4e3e\u4e00\u4e2a\u5206\u5272\u70b9 \\(k\\)\u3002</p> <p>\u4f7f\u5f97 \\([k+1,i]\\) \u6784\u6210\u7b2c \\(j\\) \u90e8\u5206\u3002</p> <p>\u56e0\u4e3a\u524d\u9762\u5fc5\u987b\u8981\u5206\u5272\u6210 \\(j-1\\) \u4e2a\u90e8\u5206\uff0c\u6240\u4ee5 \\(1 \\to k\\) \u8d77\u7801\u8981\u6709 \\(j - 1\\) \u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u5b9e\u9645\u679a\u4e3e\u7684\u65f6\u5019 \\(k \\in [j-1,i)\\) \u624d\u884c\u3002 </p> <p>\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\\(f_{i,j}=\\max\\limits_{j - 1\\le k &lt; i}\\{f_{k,j-1}+w_{k+1,i}\\}\\)</p> <p>\\(\\max()\\) \u662f\u76f4\u63a5\u5728\u51fd\u6570\u91cc\u7684\u6240\u6709\u53d8\u91cf\u5f53\u4e2d\u53d6 \\(\\max\\) \uff0c\u800c \\(\\max\\{\\}\\) \u8868\u793a\u5728\u6240\u6709\u7684\u53ef\u80fd\u91cc\u53d6\u6700\u5927\u503c\u3002</p> <p>\u6b64\u5904\u7684\u51b3\u7b56\u53d8\u91cf\u662f \\(k\\) \uff0c\u6240\u4ee5\u662f\u5728\u6240\u6709\u7684 \\(k\\) \u4ee3\u8868\u7684 \\(f_{k,j-1}+w_{k+1,i}\\) \u5f53\u4e2d\u53d6\u6700\u5927\u503c\uff08\u5728\u51b3\u7b56\u96c6\u5408\u4e2d\u53d6\u6700\u5927\u503c\uff09\u3002</p> <p>\\(w\\) \u4e00\u822c\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u5f97\u5230\u3002</p> <p>\u65b9\u7a0b\u76f4\u63a5\u6839\u636e\u9898\u9b54\u6539\u5373\u53ef\u3002</p> <pre><code>memset(f, 0, sizeof f);\n\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= m; ++j) {\nfor(int k = j - 1; k &lt; i; ++k) {\nf[i][j] = max(f[i][j], f[k][j - 1] + w(k + 1,i));\n}\n}\n} ans = f[n][m];\n</code></pre> <p>\u5178\u578b\u9898\u6709 IOI2000 \u7684\u90ae\u5c40\u548c IOI1999 \u7684\u82b1\u5e97\u6a71\u7a97\u5e03\u7f6e\u3002</p> <p>\u4e00\u4e9b\u60f3\u6cd5</p> <p>\u6700\u8fd1\uff08<code>May/05/2022</code>\uff09\u53d1\u73b0\u8fd9\u4e2a\u65b9\u7a0b\u633a\u5e38\u89c1\u7684\uff08</p> <p>\u800c\u4e14\u8fd8\u6709\u5f88\u591a\u53d8\u5f0f\uff0c\u6bd4\u5982\u8fd9\u4e1c\u897f\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6eda\u52a8\u6570\u7ec4\uff0c</p> <p>\\(i, j\\) \u5206\u522b\u4f5c\u4e3a\u9636\u6bb5\u90fd\u662f\u53ef\u4ee5\u4fdd\u8bc1\u540e\u6548\u6027\u7684\u3002 </p> <p>\u5982\u679c\u9898\u76ee\u6ca1\u6709\u8981\u6c42\u4f60\u5177\u4f53\u8981\u5206\u591a\u5c11\u6bb5\uff0c\u53ef\u4ee5\u7701\u53bb\u7b2c\u4e8c\u7ef4\u548c \\(j\\) \u7684\u679a\u4e3e\uff0c\u5e76\u4e14 \\(k\\) \u7684\u53d6\u503c\u8303\u56f4\u5c06\u4f1a\u53d8\u6210 \\(0 \\le k &lt; i\\)\u3002</p> <p>\u5f88\u591a\u6570\u636e\u7ed3\u6784\u4f18\u5316 DP \u9898\u90fd\u4f1a\u9047\u5230\u8fd9\u4e2a\u65b9\u7a0b(\u7684\u53d8\u5f0f)\u3002</p> <p>\u6bd4\u5982 The battle of chibi\uff0cThe Bakery\uff0cOptimal Partition \u90fd\u662f\u3002</p> <p>\u4efb\u52a1\u5b89\u63921 \u4e5f\u7528\u4e86\u540c\u6837\u7684\u601d\u60f3\u3002</p> <p>\u7b2c\u4e00\u9898\u548c\u7b2c\u4e09\u3001\u56db\u9898\u662f\u6ca1\u6709\u8981\u6c42\u5206\u591a\u5c11\u6bb5\uff0c\u7136\u540e\u53ef\u4ee5\u5229\u7528\u7ef4\u62a4\u503c\u57df\u7684\u6811\u72b6\u6570\u7ec4\u4ee3\u66ff\u5e73\u8861\u6811\u63d2\u5165\u51b3\u7b56\uff0c\u5e76\u4ee5\u52a8\u6001\u63d2\u5165\u7684\u65b9\u5f0f\u4fdd\u8bc1\u65b9\u7a0b\u7684\u4e00\u4e2a\u6761\u4ef6 \\(j &lt; i\\) \u6210\u7acb\u3002</p> <p>\u7b2c\u4e8c\u9898\u662f\u8981\u6c42\u4e86\u5206\u591a\u5c11\u6bb5\uff0c\u6211\u601d\u8003\u65f6\u4e3a\u4e86\u7edf\u4e00\u4f18\u5316\u65b9\u5f0f\uff0c\u628a \\(i,j\\) \u4ea4\u6362\u4e86\uff0c\u4f46\u4e8b\u540e\u53d1\u73b0\u5176\u5b9e\u4e24\u4e2a\u90fd\u4e00\u6837\uff08</p> <p>\u5bf9\u8fd9\u4e2a\u65b9\u7a0b\u7684\u4f18\u5316\u90fd\u662f\u4e00\u4e2a\u5957\u8def\uff1a\u56fa\u5b9a\u5916\u5c42\u5faa\u73af\uff0c\u7136\u540e\u770b\u5185\u5c42\u5faa\u73af\u51b3\u7b56\u96c6\u5408\u7684\u53d8\u5316\uff0c\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u9009\u62e9\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u7ef4\u62a4\u3002</p> <p>\u800c\u4e14\u6570\u636e\u7ed3\u6784\u8d77\u7684\u4f5c\u7528\u90fd\u662f\u5feb\u901f\u5730\u76f4\u63a5\u5f97\u5230\u51b3\u7b56\u96c6\u5408\u7684\u8f6c\u79fb\u4fe1\u606f\uff08\u6700\u503c\uff08\u7ebf\u6bb5\u6811/\u6811\u72b6\u6570\u7ec4\uff09\uff0c\u603b\u548c\uff08\u6811\u72b6\u6570\u7ec4\uff09\uff09\u3002</p>"}, {"location": "algor/dp/knapsack-dp/", "title": "\u80cc\u5305 DP", "text": ""}, {"location": "algor/dp/knapsack-dp/#01", "title": "01 \u80cc\u5305", "text": "<p>\u7ed9\u4f60 \\(n\\) \u4e2a\u7269\u54c1\uff0c\\(m\\) \u7684\u5bb9\u91cf\uff0c\u6bcf\u4e2a\u7269\u54c1\u6709\u4f53\u79ef \\(v_i\\) \u548c\u4ef7\u503c \\(w_i\\)\uff0c\u95ee\u4f60\u80fd\u83b7\u5f97\u7684\u4ef7\u503c \\(\\max\\)\u3002</p> <p>\u8003\u8651\u8bbe\u8ba1\u4e00\u4e2a\u72b6\u6001 \\(dp(i, j)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u7269\u54c1\uff0c\u81f3\u591a\u4f7f\u7528\u4e86 \\(j\\) \u7684\u7a7a\u95f4\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u8003\u8651\u5bf9\u4e8e \\(i\\) \u7684\u51b3\u7b56\u6709\u4ec0\u4e48\uff0c\u65e0\u975e\u5c31\u662f\u9009 \\(i\\) \u6216\u8005\u4e0d\u9009 \\(i\\)\uff0c\u4ee5\u6b64\u4e3a\u4f9d\u636e\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u6ee1\u8db3\u5728\u524d \\(i\\) \u4e2a\u7269\u54c1\u91cc\u9762\u81f3\u591a\u7528 \\(j\\) \u7684\u7a7a\u95f4\u7684\u6240\u6709\u51b3\u7b56\u5206\u7c7b\u3002</p> <p>\u7b2c\u4e00\u7c7b\u5c31\u662f\u4e0d\u9009 \\(i\\) \u8fd9\u4e2a\u7269\u54c1\u7684\uff0c\u7b2c\u4e8c\u7c7b\u5c31\u662f\u9009 \\(i\\) \u8fd9\u4e2a\u7269\u54c1\u7684\u3002</p> <p>\u90a3\u4e48\u4ece\u7b2c\u4e00\u7c7b\u8f6c\u79fb\u8fc7\u6765\u5c31\u662f \\(dp(i - 1, j) \\to dp(i, j)\\)\u3002</p> <p>\u4ece\u7b2c\u4e8c\u7c7b\u8f6c\u79fb\u8fc7\u6765\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u7c7b\u90fd\u9009\u4e86 \\(i\\) \u8fd9\u4e2a\u7269\u54c1\uff0c\u6240\u4ee5\u662f \\(dp(i - 1, j - v_i) + w_i \\to dp(i, j)\\)\u3002</p> <p>\u90a3\u4e48\u56e0\u4e3a\u5c5e\u6027\u662f\u4ee3\u4ef7\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5728\u8fd9\u4e24\u79cd\u51b3\u7b56\u91cc\u9762\u9009\u6700\u5927\u503c\u5373\u53ef\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ dp(i, j) = \\max(dp(i - 1, j), dp(i - 1, j - v_i) + w_i (\\text{if } j \\ge v_i.)) \\] <p>\u53ef\u4ee5\u68c0\u67e5\u4e00\u4e0b\uff0c\u53d1\u73b0\u5f53\u524d\u9636\u6bb5\uff08\u8003\u8651\u7269\u54c1 \\(i\\) \u7684\uff09\u72b6\u6001\u90fd\u7531 \\(i - 1\\) \u9636\u6bb5\u8f6c\u79fb\u8fc7\u6765\uff0c\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u662f\u4e0d\u6210\u73af\u7684\uff0c\u663e\u7136\u65e0\u540e\u6548\u6027\u3002</p> <p>\u8fd9\u91cc\u4f7f\u7528\u4e86\u96c6\u5408\u7684\u601d\u60f3\u8003\u8651\u51b3\u7b56\uff0c\u53ef\u4ee5\u53d1\u73b0\u663e\u7136\u8986\u76d6\u4e86\u5b8c\u6574\u7684\u72b6\u6001\u7a7a\u95f4\uff0c\u6b63\u786e\u6027\u6ca1\u6709\u95ee\u9898\u3002</p> <p>\u7136\u540e\u8003\u8651\u600e\u4e48\u521d\u59cb\u5316\uff0c\u6839\u636e\u72b6\u6001\u7684\u5b9a\u4e49\uff0c\u8fd9\u91cc\u4e0d\u662f\u6070\u597d\u662f\u81f3\u591a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4ee4\u6240\u6709\u72b6\u6001\u521d\u59cb\u5747\u4e3a \\(0\\) \u5373\u53ef\uff0c\uff08\u5728\u6ca1\u6709\u51b3\u7b56\u4e4b\u524d\uff0c\u81f3\u591a\u4f7f\u7528\u4efb\u610f\u7684\u7a7a\u95f4\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u90fd\u662f \\(0\\)\u3002\uff09</p> <p>\u7b54\u6848\uff08\u76ee\u6807\u72b6\u6001\uff09\uff0c\u6839\u636e\u5b9a\u4e49\u5c31\u662f \\(dp(n, m)\\)\u3002</p> <p>\u90a3\u4e48\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5199\u4ee3\u7801\u4e86\u3002</p> <pre><code>memset(dp, 0, sizeof dp);\nfor(int i = 1; i &lt;= n; ++i)\nfor(int j = 0; j &lt;= m; ++j) {\ndp[i][j] = dp[i - 1][j];\nif(j &gt;= v[i]) dp[i][j] = max(dp[i][j], dp[i - 1][j - v[i]] + w[i]);\n}\ncout &lt;&lt; dp[n][m] &lt;&lt; endl;\n</code></pre> <p>\u7136\u540e\u6ce8\u610f\u5230\u8fd9\u4e2a\u72b6\u6001\u7684\u5f53\u524d\u9636\u6bb5\u53ea\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u4e2a\u9636\u6bb5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u53eb\u6eda\u52a8\u6570\u7ec4\u7684\u6280\u5de7\uff0c\u6bcf\u6b21\u53ea\u4fdd\u5b58\u4e0a\u4e00\u4e2a\u9636\u6bb5\u548c\u8fd9\u4e00\u4e2a\u9636\u6bb5\u7684\u72b6\u6001\uff0c\u5728\u8fd9\u4e24\u4e2a\u6570\u7ec4\u91cc\u9762\u4e0d\u65ad\u8f6c\u79fb\u5373\u53ef\uff1a</p> <pre><code>int dp[2][si];\n\nmemset(dp, 0, sizeof dp);\nfor(int i = 1; i &lt;= n; ++i) {\nint now = i &amp; 1, last = (i &amp; 1) ^ 1;\nfor(int j = 0; j &lt;= m; ++j) {\ndp[now][j] = dp[last][j];\nif(j &gt;= v[i]) dp[now][j] = max(dp[now][j], dp[last][j - v[i]] + w[i]);\n}\n}\ncout &lt;&lt; dp[n &amp; 1][m] &lt;&lt; endl;\n</code></pre> <p>\u53d1\u73b0\u5176\u5b9e\u8fd8\u80fd\u518d\u4f18\u5316\uff0c\u6ce8\u610f\u5230\u6211\u4eec\u6bcf\u79cd\u7269\u54c1\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5 \\(dp(i, j)\\) \u5fc5\u7136\u662f\u4ece\u4e0a\u4e00\u4e2a\u9636\u6bb5\u7684\u4e00\u4e2a \\(j^\\prime &lt; j\\) \u8f6c\u79fb\u8fc7\u6765\u7684\uff08\\(v_i &gt; 0\\)\uff09\u3002</p> <p>\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e24\u7ef4\u538b\u7f29\u5230\u4e00\u8d77\uff0c\u867d\u7136\u662f\u76f4\u63a5\u7ee7\u627f\u4e0a\u4e00\u4e2a\u9636\u6bb5\u4e86\uff0c\u4f46\u662f\u76f4\u63a5\u8f6c\u79fb\u663e\u7136\u6709\u95ee\u9898\uff0c\u56e0\u4e3a \\(dp(j)\\) \u4f1a\u4f9d\u8d56 \\(dp(j - v_i)\\)\uff0c\u800c\u6b63\u7740\u5faa\u73af \\(j\\) \u4f1a\u5bfc\u81f4 \\(dp(j -v_i)\\) \u63d0\u524d\u88ab\u66f4\u65b0\u6210 \\(i\\) \u9636\u6bb5\u7684 \\(dp(j - v_i)\\)\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u5012\u5e8f\u5faa\u73af\u6765\u4fdd\u8bc1\u8f6c\u79fb\u4e0d\u6210\u73af\u3002</p> <p>\u90a3\u4e48\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801\uff1a</p> <pre><code>int dp[si];\n\nmemset(dp, 0, sizeof dp);\nfor(int i = 1; i &lt;= n; ++i)\nfor(int j = m; j &gt;= v[i]; --j)\ndp[j] = max(dp[j], dp[j - v[i]] + w[i]);\n// \u56e0\u4e3a\u76f4\u63a5\u5171\u7528\u4e00\u4e2a\u6570\u7ec4\u4e86\uff0c\u6240\u4ee5\u4e0d\u7528\u624b\u52a8\u7ee7\u627f\u4e0a\u4e00\u4e2a\u9636\u6bb5\u4e86\u3002\ncout &lt;&lt; dp[m] &lt;&lt; endl;\n</code></pre>"}, {"location": "algor/dp/knapsack-dp/#_1", "title": "\u5b8c\u5168\u80cc\u5305", "text": "<p>\u7ed9\u4f60 \\(n\\) \u79cd\u7269\u54c1\uff0c\\(m\\) \u7684\u5bb9\u91cf\uff0c\u6bcf\u79cd\u7269\u54c1\u6709\u4f53\u79ef \\(v_i\\) \u548c\u4ef7\u503c \\(w_i\\)\uff0c\u6bcf\u79cd\u7269\u54c1\u53ef\u4ee5\u6709\u65e0\u7a77\u591a\u4e2a\uff0c\u95ee\u4f60\u80fd\u83b7\u5f97\u7684\u4ef7\u503c \\(\\max\\)\u3002</p> <p>\u4f9d\u65e7\u8003\u8651\u6cbf\u7528 01 \u80cc\u5305\u7684\u72b6\u6001\uff0c\u8bbe \\(dp(i, j)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u7269\u54c1\uff0c\u81f3\u591a\u4f7f\u7528\u4e86 \\(j\\) \u7684\u7a7a\u95f4\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u4f46\u663e\u7136\u8fd9\u91cc\u7684\u51b3\u7b56\u4e0d\u592a\u4e00\u6837\u4e86\uff0c\u56e0\u4e3a\u6bcf\u79cd\u7269\u54c1\u90fd\u6709\u65e0\u9650\u591a\u4e2a\uff0c\u6240\u4ee5\u51b3\u7b56\u53ef\u80fd\u4f1a\u5728\u67d0\u79cd\u7269\u54c1\u4e0a\u51b3\u7b56\u591a\u6b21\uff0c\u8f6c\u79fb\u5c31\u53ef\u80fd\u5728\u540c\u9636\u6bb5\u8f6c\u79fb\u3002</p> <p>\u90a3\u4e48\u5206\u7c7b\u8ba8\u8bba\u770b\u770b\u80fd\u4ece\u4ec0\u4e48\u5730\u65b9\u8f6c\u79fb\u8fc7\u6765\u3002</p> <p>\u9996\u5148\u5982\u679c\u6211\u4eec\u4e0d\u9009\u8fd9\u79cd\u7269\u54c1\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u7b97\u662f\u4e00\u79cd\uff0c\u8f6c\u79fb\u4f1a\u53d8\u6210 \\(dp(i - 1,j) \\to dp(i, j)\\)\u3002</p> <p>\u7136\u540e\u5982\u679c\u6211\u4eec\u9009\u4e86\u8fd9\u79cd\u7269\u54c1\u7684\u4e00\u4e2a\uff0c\u8f6c\u79fb\u4f1a\u53d8\u6210 \\(dp(i - 1, j - v_i) + w_i\\to dp(i, j)\\)\u3002</p> <p>\u5982\u679c\u9009\u4e86\u4e24\u4e2a\uff0c\u8f6c\u79fb\u4f1a\u53d8\u6210 \\(dp(i - 1, j - 2v_i) + w_i \\to dp(i, j - v_i) + w_i \\to dp(i, j)\\)\u3002</p> <p>\u6211\u4eec\u4e0d\u5e0c\u671b\u4e00\u6b21\u51b3\u7b56\u4e24\u4e2a\u72b6\u6001\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u9009\u4e24\u4e2a\u662f\u4ee5\u9009\u4e86\u4e00\u4e2a\u7684\u72b6\u6001\u4f5c\u4e3a\u57fa\u7840\u518d\u9009\u4e00\u4e2a\u7684\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a \\(j\\) \u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8f6c\u79fb\uff1a\u4ece\u4e0a\u4e00\u9636\u6bb5\u7684 \\(dp(j)\\) \u6216\u8005 \\(dp(j - v_i)\\) \u8f6c\u79fb\u8fc7\u6765\uff0c\u4ece\u8fd9\u4e00\u9636\u6bb5\u7684 \\(dp(j - v_i)\\) \u8f6c\u79fb\u8fc7\u6765\u3002</p> <p>\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u8f6c\u79fb\u663e\u7136\u4f1a\u91cd\u590d\u8f6c\u79fb\u5f88\u591a\uff0c\u753b\u56fe\u53ef\u4ee5\u53d1\u73b0\u7701\u53bb \\(dp(i - 1,j - v_i)\\) \u4e4b\u540e\u72b6\u6001\u7a7a\u95f4\u4ecd\u7136\u80fd\u88ab\u8986\u76d6\u6ee1\uff0c\u6240\u4ee5\u6700\u7ec8\u65b9\u7a0b\u53d8\u4e3a\uff1a</p> \\[ dp(i, j) = \\max(dp(i - 1, j), dp(i, j - v_i) + w_i(\\text{if } j \\ge v_i.)) \\] <p>\uff08\u5728\u8bbe\u8ba1\u666e\u901a\u7684 dp \u7684\u65f6\u5019\u72b6\u6001\u8f6c\u79fb\u53ef\u4ee5\u6709\u91cd\u590d\uff08\u6c42 max/min \u7684\u65f6\u5019\uff09\uff0c\u4f46\u662f\u4e0d\u80fd\u6f0f\u6389\u72b6\u6001\uff0c\u4f46\u662f\u8ba1\u6570 dp \u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u8981\u540c\u65f6\u6ee1\u8db3\u4e0d\u91cd\u4e0d\u6f0f\uff01\uff09</p> <p>\u7c7b\u4f3c 01 \u80cc\u5305\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u6eda\u52a8\u6570\u7ec4\uff0c\u7136\u540e\u518d\u7f29\u6389\u4e00\u4e2a\u7ef4\u5ea6\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u6709\u540c\u5c42\u7684\u8f6c\u79fb\uff0c\u6240\u4ee5\u5e94\u5f53\u662f\u6b63\u5e8f\u5faa\u73af\uff0c\u5426\u5219\u8f6c\u79fb\u4f1a\u6210\u73af\u3002</p> <p>\u90a3\u4e48\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801\uff1a</p> <pre><code>memset(dp, 0, sizeof dp);\nfor(int i = 1; i &lt;= n; ++i)\nfor(int j = v[i]; j &lt;= m; ++j)\ndp[j] = max(dp[j], dp[j - v[i]] + w[i]);\ncout &lt;&lt; dp[m] &lt;&lt; endl;\n</code></pre>"}, {"location": "algor/dp/knapsack-dp/#_2", "title": "\u591a\u91cd\u80cc\u5305", "text": "<p>\u5495\u5495\u5495\u6389\u4e86</p>"}, {"location": "algor/dp/knapsack-dp/#_3", "title": "\u5206\u7ec4\u80cc\u5305", "text": "<p>\u5495\u5495\u5495\u6389\u4e86</p>"}, {"location": "algor/dp/knapsack-dp/#_4", "title": "\u6811\u4e0a\u80cc\u5305", "text": "<p>\u5495\u5495\u5495\u6389\u4e86</p>"}, {"location": "algor/dp/knapsack-dp/#_5", "title": "\u72b6\u6001\u7684\u81f3\u591a\uff0c\u6070\u597d\uff0c\u81f3\u5c11", "text": "<p>\u6700\u4e3b\u8981\u7684\u533a\u522b\u5c31\u662f\u4ed6\u4eec\u7684\u5b57\u9762\u610f\u601d\uff0c\u4f7f\u7528\u5bf9\u5e94\u72b6\u6001\u7684\u65f6\u5019\u8981\u60f3\u6e05\u695a\u8fd9\u79cd\u5bf9\u5e94\u7684\u72b6\u6001\u8981\u600e\u4e48\u5199\u3002</p> <p>\u521d\u59cb\u503c\u548c\u7ec8\u6001\u8981\u6839\u636e\u72b6\u6001\u672c\u8eab\u7684\u5b9a\u4e49\u6765\u5199\u3002</p> <p>\u8fd9\u91cc\u5047\u5b9a\u9700\u8981\u6c42\u89e3\u7684\u95ee\u9898\u662f\u666e\u901a\u768401\u80cc\u5305\uff0c\u72b6\u6001\u8bbe\u8ba1\u4e3a\u4e8c\u7ef4\uff0c\u65e0\u6eda\u52a8\u6570\u7ec4\uff0c\u53ea\u9700\u8981\u4ef7\u503c\u6700\u5927\u5373\u53ef\uff0c\u6ca1\u6709\u6070\u597d\u88c5\u6ee1\u7684\u6761\u4ef6\u3002</p> <ul> <li>\u6070\u597d</li> </ul> <p>\u5b8c\u6574\u7684\u72b6\u6001\u662f\uff1a\u8003\u8651\u4ece\u524d \\(i\\) \u4e2a\u7269\u54c1\u91cc\u9762\u9009\uff0c\u6070\u597d\u7528 \\(j\\) \u7684\u7a7a\u95f4\u7684\u6240\u6709\u65b9\u6848\uff0c\u6743\u503c\u548c\u7684\u6700\u5927\u503c\u3002</p> <p>\u56e0\u4e3a \\(f_0\\) \u7cfb\u7684\u72b6\u6001\u5c31\u662f\u6240\u6709\u7684\u8003\u8651\u4ece\u524d \\(0\\) \u4e2a\u7269\u54c1\u91cc\u9009\uff08\u4e0d\u9009\uff09\u7684\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u5728\u201c\u6070\u597d\u201d\u7684\u7ea6\u675f\u4e0b\uff0c\u53ea\u6709 \\(f_{0,0}=0\\) ,\u4e5f\u5c31\u662f\u6070\u597d\u7528 \\(0\\) \u7684\u7a7a\u95f4\u624d\u662f\u5408\u6cd5\u7684\u3002</p> <p>\u5176\u4ed6\u7684\u4e0d\u5408\u6cd5\u6761\u4ef6\u90fd\u8981\u8bbe\u7f6e\u4e3a \\(-\\infty\\) \uff0c\uff08\u4e0d\u4ec5\u8868\u793a\u201c\u4e0d\u5408\u6cd5\u201d\uff0c\u4e5f\u662f\u4e3a\u4e86\u4e4b\u540e\u8f6c\u79fb\uff09</p> <p>\u6240\u4ee5\u4f1a\u8fd9\u4e48\u5199\uff1a</p> <pre><code>memset(f,0xcf,sizeof f),f[0][0]=0;\n</code></pre> <p>\u90a3\u4e48\uff0c\u5728dp\u5b8c\u4e86\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u626b\u63cf \\(f_n\\) \u7cfb\u7684\u72b6\u6001\uff0c\u56e0\u4e3a\u88c5\u4e0d\u6ee1\u4e5f\u6709\u53ef\u80fd\u662f\u6700\u503c\uff08\u5f53\u524d\u95ee\u9898\u6ca1\u6709\u6070\u597d\u7684\u9650\u5236\uff0c\u5982\u679c\u6709\uff0c\u76f4\u63a5\u8f93\u51fa\u7ec8\u6001\u5373\u53ef\uff09\u3002</p> <p>\uff08\u4e0d\u8bba\u6709\u6ca1\u6709\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u90fd\u9700\u8981\uff09</p> <ul> <li>\u81f3\u591a</li> </ul> <p>\u5b8c\u6574\u7684\u72b6\u6001\u662f\uff1a\u8003\u8651\u4ece\u524d \\(i\\) \u4e2a\u7269\u54c1\u91cc\u9762\u9009\uff0c\u7528\u4e0d\u8d85\u8fc7 \\(j\\) \u7684\u7a7a\u95f4\u7684\u6240\u6709\u65b9\u6848\uff0c\u6743\u503c\u548c\u7684\u6700\u5927\u503c\u3002</p> <p>\u56e0\u4e3a\u8fd9\u91cc\u7684\u9650\u5236\u662f\u4e0d\u8d85\u8fc7\uff0c\u6240\u4ee5 \\(f_0\\) \u7cfb\u7684\u6240\u6709\u72b6\u6001\u90fd\u662f\u5408\u6cd5\u7684\u3002</p> <p>\u4f60\u60f3\uff0c\u4f60\u4e0d\u9009\u4efb\u4f55\u7269\u54c1\uff0c\u90a3\u81ea\u7136\u6240\u6709\u53ef\u80fd\u7684\u7a7a\u95f4\u7684\u4e0d\u4f1a\u8d85\u8fc7\u554a\u3002</p> <p>\u6240\u4ee5\u521d\u59cb\u503c\u5168\u90e8\u8bbe\u7f6e\u4e3a \\(0\\)\u3002</p> <p>\u90a3\u4e48\uff0c\u5728dp\u5b8c\u4e86\u4e4b\u540e\uff0c\u76f4\u63a5\u8f93\u51fa\u7ec8\u6001 \\(f_{n,m}\\) \u5373\u53ef\uff0c\uff08\u6bd5\u7adf\u72b6\u6001\u8bbe\u8ba1\u7684\u662f\u201c\u6240\u6709\u65b9\u6848\u201d\uff09</p> <p>\u56e0\u4e3a\u81f3\u591a\u548c\u6070\u597d\u90fd\u9002\u7528\u4e8e \u201c\u6700\u5927\u201d\uff0c\u6240\u4ee5\u653e\u5728\u4e0a\u9762\uff0c\u800c\u81f3\u5c11\u9002\u7528\u4e8e\u201c\u6700\u5c0f\u201d\uff0c\u6240\u4ee5\u5355\u72ec\u5206\u79bb\uff08\u4e0d\u8fc7\u6070\u597d\u4e5f\u662f\u53ef\u4ee5\u505a\u7684\uff0c\u9053\u7406\u4e00\u6837\uff09</p> <p>\u95ee\u9898\uff1a\u4f60\u81f3\u5c11\u9700\u8981\u7528 \\(j\\) \u7684\u7a7a\u95f4\uff0c\u6c42\u4ef7\u503c\u7684\u6700\u5c0f\u503c\u3002</p> <ul> <li>\u81f3\u5c11 </li> </ul> <p>\u5b8c\u6574\u7684\u72b6\u6001\u662f\uff1a\u8003\u8651\u4ece\u524d \\(i\\) \u4e2a\u7269\u54c1\u5f53\u4e2d\u9009\uff0c\u81f3\u5c11\u7528 \\(j\\) \u7684\u7a7a\u95f4\u7684\u6240\u6709\u65b9\u6848\uff0c\u6743\u503c\u548c\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u662f\u548c\u4e0a\u9762\u5dee\u4e0d\u591a\u7684\uff0c\u4e0d\u8fc7\u521d\u59cb\u5316\u548c\u8f6c\u79fb\u65b9\u5f0f\u9700\u8981\u6539\u53d8\u3002</p> <p>\u56e0\u4e3a\u5f53\u4f60\u4e0d\u9009\u7684\u65f6\u5019\uff0c\u53ea\u6709 \\(f_{0,0}=0\\) \u662f\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u5176\u4ed6\u7684\u8bbe\u7f6e\u4e3a \\(+\\infty\\)\u3002</p> <pre><code>memset(f,0x3f,sizeof f),f[0][0]=0;\n</code></pre> <p>\u4f46\u662f\u8f6c\u79fb\u5c31\u7565\u6709\u4e0d\u540c\u4e86\u3002</p> <p>\u5982\u679c\u8bf4\uff0c\u4f60\u679a\u4e3e\u5230\u7684 \\(j\\) \u6ca1\u6709\u529e\u6cd5\u6ee1\u8db3\u5f53\u524d \\(v_i\\) \u7684\u9700\u6c42\uff0c\u4e0d\u5e94\u8be5\u53ea\u662f\u7ee7\u627f\u4e0a\u4e00\u8f6e\u7684\u72b6\u6001\u3002</p> <p>\u56e0\u4e3a\uff0c\u5728\u4e0d\u8003\u8651\u8bbf\u95ee\u65e0\u6548\u4e0b\u6807\u7684\u60c5\u51b5\u4e0b\uff0c\\(f_{i,j}=\\min\\{f_{i-1,j-v_i}\\},(j-v_i&lt;0)\\) \u4e5f\u662f\u5408\u6cd5\u7684\u8f6c\u79fb\u3002</p> <p>\u81f3\u5c11\u9700\u8981\u8d1f\u6570\u7684\u7a7a\u95f4\uff0c\u90a3\u4f60\u4e0d\u9009\u4e5f\u662f\u6ee1\u8db3\u7684\u554a\uff0c\\(f\\) \u53c8\u662f\u8bb0\u5f55\u6700\u5c0f\u503c\uff0c\u81ea\u7136\u9700\u8981\u628a \\(f_{i-1,j-v_i}=0\\) \u554a\u3002</p> <p>\u6240\u4ee5\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u9700\u8981\u53d8\u6210\u8fd9\u6837\uff1a\uff08\u4ee3\u7801\u5199\u7684\u662f\u4e8c\u7ef4\u80cc\u5305\u4e0d\u6eda\u52a8\u7684\u60c5\u51b5\uff0c\u5176\u4ed6\u9053\u7406\u4e00\u6837\uff09</p> <pre><code>memset(f,0x3f,sizeof f),f[0][0][0]=0;\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=0;j&lt;=O2_need;++j){\nfor(register int k=0;k&lt;=N_need;++k){\nf[i][j][k]=f[i-1][j][k];\nf[i][j][k]=min(f[i][j][k],f[i-1][max(0,j-a[i])][max(0,k-b[i])]+c[i]);\n}\n}\n} return printf(\"%d\\n\",f[n][O2_need][N_need]),0;\n</code></pre>"}, {"location": "algor/dp/sos-dp/", "title": "\u9ad8\u7ef4\u524d\u7f00\u548c", "text": "<p>\u8fd9\u4e2a\u4e1c\u897f\u4e5f\u53eb \u9ad8\u7ef4\u524d\u7f00\u548c \u6216\u8005 \u5b50\u96c6\u6c42\u548c\u3002</p> <p>\u5230\u7701\u9009\u4ee5\u4e0a\u5e38\u5e38\u4f1a\u7ed3\u5408 FWT \uff08\u5feb\u901f\u6c83\u5c14\u4ec0\u53d8\u6362\uff09\u7b97\u6cd5\u3002</p> <p>\u5168\u79f0 Sum Over Subset Dynamic Programming.</p>"}, {"location": "algor/dp/sos-dp/#_1", "title": "\u6cdb\u5316", "text": "<p>SOSDP \u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u8fd9\u6837\u7684\u4e00\u7c7b\u95ee\u9898\uff1a</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a_0,a_1,a_2,\\dots,a_{2^n - 1}\\)\u3002</p> <p>\u8981\u4f60\u6c42 \\(b_i = \\sum\\limits_{j \\ \\texttt{and}\\  i = j} a_j\\)\u3002</p> <p>\uff08\u6b64\u5904\u7684 \\(\\sum\\) \u4e5f\u53ef\u4ee5\u6362\u6210 \\(\\min,\\max,\\bigoplus\\)\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u6ee1\u8db3\u7ed3\u5408\u5f8b\u548c\u4ea4\u6362\u5f8b\uff1f\uff09</p> <p>\u53ef\u80fd\u6709\u70b9\u770b\u4e0d\u61c2\uff0c\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\uff0c\u6b64\u5904\u628a \\(a\\) \u548c \\(b\\) \u7684\u4e0b\u6807\u90fd\u770b\u4f5c\u4e86\u4e00\u4e2a\u4e2a\u4e8c\u8fdb\u5236\u6570\uff08\u4e0b\u6807\u4ece 0 \u5f00\u59cb\uff09\uff0c</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\\(a\\) \u548c \\(b\\) \u7684\u4e0b\u6807\u8868\u793a\u7684\u662f\u4e00\u4e2a\u5927\u5c0f\u4e3a \\(n\\) \u7684\u96c6\u5408\u3002</p> <p>\u90a3\u4e48\u4e0a\u9762\u7684\u5f0f\u5b50\u4e5f\u53ef\u4ee5\u5199\u6210 \\(\\sum\\limits_{j \\subset i} a_j\\)\u3002</p> <p>\u8fd9\u4e2a\u5f0f\u5b50\u5728\u5e72\u5565\u5462\uff1f</p> <p>\u6211\u4eec\u8bbe \\(a_i\\) \u4e3a\u4e8c\u8fdb\u5236\u4e0b\u8868\u793a\u4e3a \\(i\\) \u7684\u96c6\u5408 \uff08\u672c\u6587\u4e2d\u8bb0\u4f5c \\(S(i)\\)\uff09 \u7684\u6743\u503c\u3002</p> <p>\\(b_i\\) \u5c31\u8868\u793a\u7684\u662f \\(S(i)\\) \u7684\u6240\u6709\u5b50\u96c6\u7684\u6743\u503c\u548c\uff0c\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u4e5f\u53eb \u5b50\u96c6\u6c42\u548c\u3002</p> <p>\u800c\u6362\u4e00\u4e2a\u89d2\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e0b\u6807\u770b\u6210 \\(n\\) \u7ef4\u7a7a\u95f4\u91cc\u7684\u4e00\u4e2a\u5750\u6807 \\((x_0, x_1, x_2, \\dots, x_{n - 1}), x_i \\in \\{0, 1\\}\\)\u3002 </p> <p>\u90a3\u4e48\u8fd9\u4e2a \\(b_i\\) \u5176\u5b9e\u5c31\u662f\u4e00\u4e2a \u9ad8\u7ef4\u524d\u7f00\u548c\u3002</p>"}, {"location": "algor/dp/sos-dp/#_2", "title": "\u505a\u6cd5", "text": "<p>\u9996\u5148\u8003\u8651\u4e00\u4e2a\u66b4\u529b\uff0c\u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u6240\u6709\u5b50\u96c6\u7136\u540e\u8ba1\u7b97\u6743\u503c\u548c\u3002</p> <p>\u7136\u540e\u8fd9\u73a9\u610f\u513f\u662f \\(\\text{O}(3^{n})\\) \u7684\u3002</p> <p>\u6211\u4eec\u628a\u8fd9\u4e2a\u5f0f\u5b50\u518d\u62ff\u51fa\u6765\u770b\u770b\uff1a</p> \\[b_i = \\sum\\limits_{j \\ \\texttt{and}\\ i = j} a_j\\] <p>\u65e2\u7136\u521a\u624d\u90fd\u8bf4\u4e86\u4e8c\u8fdb\u5236\u4e0b\u8003\u8651\uff0c\u90a3\u6211\u4eec\u5c31\u76f4\u63a5\u4e8c\u8fdb\u5236\u62c6\u5f00\uff1a</p> <p>\\(b_i\\) \u53ef\u4ee5\u5199\u4f5c \\(b_{(x_0, x_1, \\dots x_{n - 1})}\\)\uff0c\u7136\u540e\u6709\uff1a</p> \\[b_{(x_0, x_1, \\dots x_{n - 1})} = \\sum\\limits_{y_0 \\le x_0}\\sum\\limits_{y_1 \\le x_1}\\dots \\sum\\limits_{y_{n - 1} \\le x_{n - 1}} a_{(y_0, y_1, \\dots y_{n - 1})}\\] <p>\u8fd9\u662f\u9ad8\u7ef4\u524d\u7f00\u548c\u7684\u76f4\u63a5\u8868\u793a\u6cd5\u3002</p> <p>\u8003\u8651\u4e00\u4e2a DP\uff0c\u8bbe \\(dp(msk, i)\\) \u8868\u793a\u8003\u8651\u6c42 \\(msk\\) \u8fd9\u4e2a\u96c6\u5408\u7684\u5b50\u96c6\u548c\uff0c\u5f53\u524d\u5df2\u7ecf\u505a\u5230\u4e86\u7b2c \\(i\\) \u4f4d\uff0c\u76ee\u524d\u7684\u548c\u662f\u591a\u5c11\u3002</p> <p>\u6211\u4eec\u628a \\(msk\\) \u770b\u4f5c \\((x_0, x_1, \\dots x_{n - 1})\\)\u3002</p> <p>\u7528\u76f4\u63a5\u8868\u793a\u7684\u65b9\u6cd5\u5199\u51fa \\(dp(msk, i)\\)\u3002</p> \\[dp(msk, i) = \\sum\\limits_{y_0 \\le x_0}\\sum\\limits_{y_1 \\le x_1} \\dots \\sum\\limits_{y_{i - 1} \\le x_{i - 1}} a_(y_0, y_1 \\dots y_{i - 1}, x_i, x_{i + 1}, \\dots x_{n - 1})\\] <p>\u8003\u8651\u600e\u4e48\u8f6c\u79fb\uff0c</p> <p>\u5c31\u662f\u8003\u8651 \\(x_i\\) \u662f \\(0\\) \u8fd8\u662f \\(1\\)\uff0c\u5982\u679c\u662f \\(0\\)\uff0c\u90a3\u4e48\u8fd9\u4e00\u7ef4\u5c31\u76f4\u63a5\u7ee7\u627f\u4e0a\u4e00\u4f4d\u7684\u5373\u53ef</p> <p>\uff08\u56e0\u4e3a\u5f0f\u5b50\u662f\u957f\u6210 \\(\\sum\\limits_{y_i \\le x_i}\\) \u8fd9\u6837\u7684\uff0c\u5982\u679c \\(x_i\\) \u662f \\(0\\) \u5c31\u76f4\u63a5\u52a0\u4e0a\u524d\u4e00\u4f4d\u7684\u72b6\u6001\uff09\u3002</p> <p>\u5982\u679c\u662f \\(1\\)\uff0c\u76f8\u5f53\u4e8e\u5bf9\u7740\u4e0a\u4e00\u4f4d\u7684\u4e24\u79cd\u60c5\u51b5\u90fd\u6c42\u4e86\u548c\uff0c\u6240\u4ee5\u7528\u4e0a\u4e00\u4f4d\u662f \\(0/1\\) \u7684\u4e24\u79cd\u60c5\u51b5\u52a0\u8d77\u6765\u5373\u53ef\uff1a</p> <p>\u5f97\u5230\u65b9\u7a0b\uff1a</p> \\[dp(\\{x_0,x_1,\\dots,x_{n - 1}\\},i) = \\begin{cases} dp(\\{x_0,x_1,\\dots x_{i - 1}, 0, x_{i + 1}, \\dots x_{n - 1}\\}, i - 1) &amp; x_i = 0 \\\\ \\sum\\limits_{bit \\in \\{0, 1\\}}dp(\\{x_0, x_1, \\dots, x_{i - 1}, bit, x_{i + 1}, \\dots x_{n - 1}\\}, i - 1) &amp; x_i = 1 \\end{cases}\\] <p>\u521d\u59cb\u5316 \\(dp(msk, 0) = a_{msk}\\)\u3002</p> <p>\u53d1\u73b0\u8fd9\u91cc \\(dp(?,i)\\) \u7684\u72b6\u6001\u53ea\u548c \\(dp(?, i- 1)\\) \u6709\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u6eda\u52a8\u6570\u7ec4\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u6211\u4eec\u76f4\u63a5\u4ece \\(0 \\sim 2^n - 1\\) \u679a\u4e3e \\(msk\\) \u7684\u8bdd\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u53bb\u6389\u6700\u540e\u4e00\u7ef4\uff0c\u56e0\u4e3a\u65b9\u7a0b\u672c\u8eab\u7684\u7279\u6b8a\u6027\uff0c\u8fd9\u6837\u4ecd\u7136\u662f\u65e0\u540e\u6548\u6027\u7684\u3002</p> <p>\u53ef\u4ee5\u81ea\u5df1\u753b\u56fe\u624b\u63a8\uff0c\u539f\u56e0\u7c7b\u4f3c 01 \u80cc\u5305\u3002</p> <p>\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa\u4ee3\u7801\uff1a</p> <pre><code>for(int msk = 0; msk &lt; (1 &lt;&lt; n); ++msk) dp[msk] = a[msk]; for(int i = 0; i &lt; n; ++i) {\nfor(int msk = 0; msk &lt; (1 &lt;&lt; n); ++msk) {\nif(msk &amp; (1 &lt;&lt; i))\ndp[msk] += dp[msk ^ (1 &lt;&lt; i)];\n}\n}\n</code></pre> <p>\u8fd9\u4e2a\u505a\u6cd5\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5206\u5f00\u5bf9\u6bcf\u4e00\u7ef4\u5206\u522b\u505a\u524d\u7f00\u548c\u7136\u540e\u518d\u5408\u8d77\u6765\u3002</p> <p>\u6bd4\u5982\u4e8c\u7ef4\u524d\u7f00\u548c\u5c31\u662f\u5148\u5bf9\u4e8e \\(\\forall i, s(i,j) \\gets s(i, j - 1) + a(j)\\)\uff0c\u7136\u540e \\(\\forall i, s(i,j) \\gets s(i - 1, j) + s(i, j)\\)</p>"}, {"location": "algor/dp/states-compressing-dp/", "title": "\u72b6\u538b DP", "text": ""}, {"location": "algor/dp/states-compressing-dp/#_1", "title": "\u6cdb\u5316", "text": "<p>\u601d\u60f3\u5c31\u662f\u628a\u4e00\u4e2a\u8868\u793a\u201c\u5b58\u5728\u201d\u7684 \u201c\u96c6\u5408\u201d \u8f6c\u6362\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u3002</p> <p>\u7136\u540e\u8fdb\u884c\u5bf9\u5e94\u7684\u8f6c\u79fb\u3002</p>"}, {"location": "algor/dp/states-compressing-dp/#_2", "title": "\u5177\u4f53\u7ec6\u8282", "text": "<p>\u6bd4\u5982\u8bbe \\(f_{msk}\\) \u8868\u793a\u83b7\u5f97\u72b6\u6001\u4e3a \\(msk\\) \u7684\u7269\u54c1\u6240\u9700\u7684\u4ee3\u4ef7\u3002</p> <p>\u5176\u4e2d\u5982\u679c \\(msk\\) \u7684\u7b2c \\(i\\) \u4f4d\u662f \\(1\\) \uff0c\u90a3\u4e48\u8868\u793a\u7b2c \\(i\\) \u4e2a\u7269\u54c1\u5df2\u7ecf\u88ab\u53d6\u5f97\u3002</p> <p>\u901a\u5e38\u9700\u8981\u5bf9 \\(msk\\) \u8fdb\u884c\u4e00\u4e9b\u4f4d\u8fd0\u7b97\u7684\u64cd\u4f5c\uff1a</p> <ol> <li>\u68c0\u67e5 \\(msk\\) \u7684\u7b2c \\(i\\) \u4f4d\u662f\u4e0d\u662f \\(1\\) \uff1a</li> <li><code>(msk&gt;&gt;(i-1)&amp;1)==1</code> \u5219\u4e3a \\(1\\)\u3002</li> <li><code>(msk&amp;(1&lt;&lt;(i-1)))!=0</code> \u5219\u4e3a \\(1\\)\u3002</li> <li>\u5c06 \\(msk\\) \u7684\u7b2c \\(i\\) \u4f4d\u8bbe\u7f6e\u4e3a \\(1\\) \uff1a<code>msk|=(1&lt;&lt;(i-1))</code></li> <li>\u5c06 \\(msk\\) \u7684\u7b2c \\(i\\) \u4f4d\u8bbe\u7f6e\u4e3a \\(0\\) \uff1a<code>msk&amp;=(~(1&lt;&lt;(i-1)))</code></li> <li>\u5c06 \\(msk\\) \u7684\u7b2c \\(i\\) \u4f4d\u53d6\u53cd\uff1a<code>msk^=(1&lt;&lt;(i-1))</code>\u3002</li> </ol> <p>\u5176\u5b83\u7684\u53ef\u4ee5\u770b\u4f4d\u8fd0\u7b97\u7684\u90e8\u5206\u3002\u6bd4\u5982 <code>lowbit</code> \u548c <code>popcnt</code> \u4e4b\u7c7b\u7684\u3002</p> <p>\u679a\u4e3e\u72b6\u6001\u4e00\u822c\u8fd9\u4e48\u5199\uff1a</p> <pre><code>for(register int msk=0;msk&lt;(1&lt;&lt;n);++msk) // n \u662f\u4f4d\u6570\u3002\n</code></pre> <p>\u4e00\u79cd\u5e38\u89c1\u7684\u7684\u4f18\u5316\u590d\u6742\u5ea6\u7684\u65b9\u5f0f\u5c31\u662f\u628a\u5408\u6cd5\u7684\u72b6\u6001\uff08\u51b3\u7b56\uff09\u5168\u90e8\u5904\u7406\u51fa\u6765\u5b58\u5230\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4\u91cc\u9762\u3002</p> <p>\u5faa\u73af\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u8fd9\u6837\uff1a</p> <pre><code>for(register int i=1;i&lt;=cnt;++i) // cnt \u662f\u5408\u6cd5\u72b6\u6001\u4e2a\u6570\u3002\n</code></pre> <p>\u666e\u901a\u72b6\u538b\u4e00\u822c\u5206\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u57fa\u4e8e\u8054\u901a\u6027\u7684\u72b6\u538bDP\uff08\u68cb\u76d8\u7c7b\uff09\uff0c\u4e00\u79cd\u662f\u96c6\u5408\u7c7b\u7684\u72b6\u538bDP\u3002</p> <p>\u524d\u4e00\u79cd\u7684\u5178\u578b\u5c31\u662f\u201c[POJ2411]\u83ab\u5fb7\u91cc\u5b89\u7684\u68a6\u60f3\u201c\uff0c\u201c[SCOI2005]\u4e92\u4e0d\u4fb5\u72af\u201d\u548c\u201c[NOI2001]\u70ae\u5175\u9635\u5730\u201d\u3002</p> <p>\u8fd9\u7c7b\u95ee\u9898\u4e00\u822c\u90fd\u9700\u8981\u5904\u7406\u6bcf\u4e00\u884c\u7684\u5408\u6cd5\u72b6\u6001\uff0c\u7136\u540e\u8fdb\u884c\u8f6c\u79fb\uff0c\u8f6c\u79fb\u7684\u9636\u6bb5\u4e00\u822c\u90fd\u662f \u201c\u884c\u201d\u3002</p> <p>\u540e\u4e00\u79cd\u7684\u5178\u578b\u5c31\u662f\u201c[NOIP2016]\u6124\u6012\u7684\u5c0f\u9e1f\u201d\uff0c\u201c[NOIP2017]\u5b9d\u85cf\u201d</p> <p>\u8fd9\u7c7b\u95ee\u9898\u4e00\u822c\u9700\u8981\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u5df2\u7ecf\u5904\u7406\u4e86\u54ea\u4e9b\u4e8b\u4ef6\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u4e00\u822c\u4ee5\u72b6\u6001 \\(msk\\) \u4f5c\u4e3a\u9636\u6bb5\u3002</p> <p>\u8fd9\u4e24\u79cd\u7684\u5171\u540c\u70b9\u5c31\u662f\uff0c\u67d0\u4e2a\u53d8\u91cf\u7684\u6570\u636e\u8303\u56f4\u4e00\u822c\u4f1a\u5f88\u5c0f\u3002</p>"}, {"location": "algor/dp/states-compressing-dp/#_3", "title": "\u4f8b\u9898", "text": ""}, {"location": "algor/dp/states-compressing-dp/#p1879-usaco06novcorn-fields-g", "title": "P1879 [USACO06NOV]Corn Fields G", "text": "<p>\u68cb\u76d8\u7c7b\uff0c\u6700\u597d\u5199\u4e5f\u662f\u6700\u7ecf\u5178\u7684\u72b6\u538b\u9898\u4e4b\u4e00\u3002</p> <p>\u9898\u610f\uff1a\u8981\u6c42\u4f60\u5728 \\(n \\times m\\) \u7684\u77e9\u9635\u4e0a\u653e\u4e00\u4e9b\u7269\u54c1\uff0c\u6709\u4e9b\u4f4d\u7f6e\u4e0d\u80fd\u653e\uff0c\u4f60\u4e0d\u80fd\u8ba9\u4e24\u4e2a\u7269\u54c1\u6328\u7740\uff0c\u6c42\u65b9\u6848\u6570\u5e76\u53d6\u6a21\u3002</p> <p>\\(n,m \\le 13\\)</p> <p>\u9996\u5148\u53d1\u73b0\u8fd9\u4e00\u9898\u7684 \\(n,m\\) \u90fd\u662f \\(\\le 13\\) \u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u72b6\u538b\u3002</p> <p>\u5148\u8003\u8651\u6ca1\u6709\u4e0d\u80fd\u653e\u7684\u9650\u5236\uff0c\u6211\u4eec\u7528\u4e8c\u8fdb\u5236\u9884\u5904\u7406\u51fa\u4e00\u884c\u91cc\u6240\u6709\u7684\u53ef\u884c\u72b6\u6001 \\(sta\\)\u3002</p> <p>\u8fd9\u6837\u5b50\u53ef\u4ee5\u5c11\u679a\u4e3e\u4e00\u5c42\uff0c\u4e0d\u7136\u4f1a\u7206\u70b8\u3002</p> <p>\u5982\u679c\u8bf4\u6211\u4eec\u5904\u7406\u51fa\u6765\u7684\u60c5\u51b5\u662f\u6211\u4eec\u5904\u7406\u5230\u7684\u90a3\u4e00\u884c\u7684\u539f\u6765\u7684\u72b6\u6001\u7684\u5b50\u96c6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u72b6\u6001\u5c31\u662f\u53ef\u884c\u7684\u3002</p> <p>\u610f\u601d\u5c31\u662f\u8bf4\uff0c\u6bd4\u5982\u4f60\u662f\u8fd9\u6837\u5b50\u7684\uff1a</p> <pre><code>\u539f\u6765\u7684\u72b6\u6001\uff1a 1 0 1 1 0 0 1 0 0 1 1 1\n\u5904\u7406\u7684\u72b6\u6001\uff1a 1 0 1 0 0 0 1 0 0 1 0 1\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5904\u7406\u7684\u72b6\u6001\u5f53\u4e2d\u653e\u4e86\u8349\u7684\u4f4d\u7f6e\u5728\u539f\u6765\u7684\u5730\u65b9\u90fd\u662f\u53ef\u4ee5\u79cd\u8349\u7684\u3002\u90a3\u4e48\u5c31\u662f\u53ef\u884c\u7684\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8bbe \\(f_{i,j}\\) \u8868\u793a\u8003\u8651\u7b2c \\(i\\) \u884c\uff0c\u4f60\u8003\u8651\u5904\u7406\u51fa\u6765\u7684\u7b2c \\(j\\) \u4e2a\u72b6\u6001\u7684\u65b9\u6848\u6570\u3002</p> <p>\u5982\u679c\u8bf4\u8fd9\u7b2c \\(j\\) \u4e2a\u72b6\u6001\u662f\u53ef\u884c\u7684\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u4f1a\u6709\u65b9\u6848\u3002</p> <p>\u53cd\u4e4b\u5982\u679c\u4e0d\u53ef\u884c\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u8f6c\u79fb\u5230\u5b83\uff0c\u65b9\u6848\u6570\u662f \\(0\\)\u3002</p> <p>\u8003\u8651\u679a\u4e3e\u4e0a\u4e00\u884c\u7684\u6240\u6709\u53ef\u884c\u72b6\u6001 \\(k\\) \uff0c\u7136\u540e\u65b9\u7a0b\u5c31\u662f \\(f_{i,j}=f_{i,j}+f_{i-1,k} , \\text{if} \\ sta(j)\\&amp; sta (k) =0\\)\u3002</p> <p>\\(\\ sta(j)\\&amp; sta (k) =0\\) \u662f\u56e0\u4e3a\u4f60\u9700\u8981\u5224\u65ad\u4e0a\u4e0b\u6709\u6ca1\u6709\u76f8\u90bb\u7684\u3002</p> <p>\u5904\u7406\u53ef\u884c\u72b6\u6001 \\(sta\\) \u7684\u8bdd\u53ea\u9700\u8981\u679a\u4e3e\u6240\u6709\u7684 \\(2^n\\) \u4e2a\u72b6\u6001\uff0c\u770b\u4ed6\u6709\u6ca1\u6709\u4e24\u4f4d\u662f\u76f8\u90bb\u7684\u5373\u53ef\u3002 </p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int si=14;\nconst int stasi=4096+10; // \u53ef\u884c\u72b6\u6001\u4e00\u5b9a\u5728 2n \u8303\u56f4\u4ee5\u5185.\nconst int bitsi=4096+10;\nconst int p=100000000;\ninline int mod(int x,int p){ return x&lt;0?(x+p)-(((x+p)/p)*p):x-((x/p)*p);}\nint n,m,cnt=0;\nint f[si][stasi];\nint sta[stasi],yard[si];\n\ninline void init(int n){\nfor(register int i=0;i&lt;=n;++i){ // \u4e0d\u8981\u5fd8\u4e86\u90fd\u4e0d\u653e (0) \u4e5f\u662f\u53ef\u884c\u7684\nif((i&amp;(i&lt;&lt;1))!=0 || (i&amp;(i&gt;&gt;1))!=0) continue;// \u8bb0\u5f97\u6253\u62ec\u53f7\nsta[++cnt]=i; // \u5408\u6cd5\u72b6\u6001\n// printf(\"%d\\n\",sta[cnt]);\n}\n}\ninline bool valid(int l,int s){\nif(!((yard[l]&amp;sta[s])==sta[s])) return false; // \u72b6\u6001\u7b26\u5408\u7b2c l \u884c\u7684\u60c5\u51b5\nreturn true;\n}\n\nint main(){\nmemset(f,0,sizeof f),scanf(\"%d%d\",&amp;n,&amp;m);\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1,k;j&lt;=m;++j){\nscanf(\"%1d\",&amp;k);\nif(k) yard[i]+=(1&lt;&lt;(m-j)); // \u628a\u6bcf\u4e00\u884c\u7684\u72b6\u6001\u8f6c\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\n}\n// printf(\"%d\\n\",yard[i]);\n} init((1&lt;&lt;m)-1); // \u53bb\u6389\u6700\u540e\u7684\u7684\u4e00\u4e2a\uff0c\u4e0d\u7136\u4f1a\u591a\u4e00\u4e2a\u72b6\u6001\u3002\nfor(register int i=1;i&lt;=cnt;++i){\nif(valid(1,i)) f[1][i]=mod(1,p); // \u4e0d\u8981\u5fd8\u8bb0\u8fd9\u91cc\u4e5f\u8981\u5224\u5408\u6cd5\n}\nfor(register int i=2;i&lt;=n;++i){\nfor(register int j=1;j&lt;=cnt;++j){ // \u679a\u4e3e\u5f53\u524d\u5c42\u72b6\u6001\nif(!valid(i,j)) continue; // \u72b6\u6001\u662f\u5426\u7b26\u5408\u5f53\u524d\u884c\u7684\u60c5\u51b5\nfor(register int k=1;k&lt;=cnt;++k){ // \u679a\u4e3e\u4e0a\u4e00\u5c42\u72b6\u6001\nif((sta[j]&amp;sta[k])!=0) continue; // \u4e0a\u4e0b\u4e0d\u5408\u6cd5\nf[i][j]=mod(f[i][j]+f[i-1][k],p);\n}\n}\n} int res=0;\nfor(register int i=1;i&lt;=cnt;++i){\nres=mod(res+f[n][i],p);\n} return printf(\"%d\\n\",mod(res,p)),0;\n}\n</code></pre>"}, {"location": "algor/dp/states-compressing-dp/#poj2411-mondriaans-dream", "title": "POJ2411 Mondriaan's Dream", "text": "<p>\u68cb\u76d8\u7c7b\u3002</p> <p>\u7ed9\u4f60\u4e00\u4e2a \\(n\\times m\\) \u7684\u77e9\u9635\u3002</p> <p>\u4f60\u53ef\u4ee5\u7528 \\(1\\times 2\\) \u7684\u957f\u65b9\u5f62\u53bb\u586b\u5145\u5b83\uff0c\u53ef\u4ee5\u7ad6\u7740\u4e5f\u53ef\u4ee5\u6a2a\u7740\u3002</p> <p>\u95ee\u6070\u597d\u586b\u6ee1\u7684\u65b9\u6848\u6570\u3002</p> <p>\\(1\\le n,m\\le 11\\) \u3002</p> <p>\u4ed4\u7ec6\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u5f53\u524d\u53ea\u8003\u8651\u7b2c \\(i\\) \u884c\uff0c\u90a3\u4e48\u65e0\u975e\u5c31\u662f\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u7528 \\(1\\times 2\\) \u7684\uff08<code>==</code>\uff09 \u586b\u5145</li> <li>\u7528 \\(2\\times 1\\) \u7684\u4e0a\u4e00\u534a\u586b\u5145\u3002</li> <li>\u7528 \\(2\\times 1\\) \u7684\u4e0b\u534a\u90e8\u5206\u586b\u5145\uff08\u5e76\u4e14\u4e0a\u4e00\u884c\u7684\u5bf9\u5e94\u4f4d\u7f6e\u662f \\(2\\times 1\\) \u7684\u4e0a\u4e00\u534a\uff09\u3002</li> </ol> <p>\u6700\u9ebb\u70e6\u7684\u5c31\u662f\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u72b6\u538b\uff0c\u8bbe \\(msk\\) \u8868\u793a\u67d0\u4e00\u884c\u7684\u72b6\u6001\uff0c\u7b2c \\(i\\) \u4f4d\u4e3a \\(1\\) \u5219\u8868\u793a\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4e0a\u653e\u7684\u662f \\(2\\times 1\\) \u7684\u4e0a\u4e00\u534a\u3002</p> <p>\u6240\u4ee5\uff0c\u4e0a\u4e00\u884c\u7684\u72b6\u6001 \\(msk_{i-1}\\) \u8981\u60f3\u8f6c\u79fb\u5230\u5f53\u524d\u884c \\(msk_i\\)\uff0c\u5fc5\u987b\u6ee1\u8db3 \\(msk_{i-1} \\operatorname{and} msk_i =0\\)\u3002</p> <p>\u4f46\u662f\u4e5f\u9700\u8981\u8003\u8651\u7b2c\u4e00\u79cd\u60c5\u51b5\u653e\u4e0d\u653e\u7684\u4e86\u3002\u90a3\u4e48\u5148\u628a\u4e0a\u4e00\u884c\u7684\u72b6\u6001 \\(\\operatorname{or}\\) \u8fc7\u6765\uff0c\u90a3\u4e48\u4e0b\u534a\u90e8\u5206\u7684\u4f4d\u7f6e\u5c31\u786e\u5b9a\u4e86\u3002</p> <p>\u56e0\u4e3a\u662f \\(1\\times 2\\) \u7684\uff0c\u6240\u4ee5\u4e0a\u4e0b\u4e24\u4e2a\u72b6\u6001\u8fdb\u884c\u6309\u4f4d\u6216\u4e4b\u540e\uff0c\u9700\u8981\u6ee1\u8db3\uff1a\u4efb\u610f \\(0\\) \u7684\u8fde\u901a\u5757\u91cc\uff0c\\(0\\) \u7684\u4e2a\u6570\u662f\u5076\u6570\u4e2a\u3002</p> <p>\u90a3\u4e48\u5148\u9884\u5904\u7406\u6240\u6709\u884c\u5185\u5408\u6cd5\u7684\u72b6\u6001\u3002</p> <p>\u7136\u540e\u679a\u4e3e\u884c\uff0c\u518d\u679a\u4e3e\u4e0a\u4e00\u884c\u7684\u72b6\u6001\u548c\u5f53\u524d\u884c\u7684\u72b6\u6001\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef\u3002  </p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si=20;\nconstexpr int stasi=1&lt;&lt;12;\nint n,m;\nint f[si][stasi];\nbool vis[stasi];\n\nsigned main(){\nwhile(scanf(\"%lld%lld\",&amp;n,&amp;m)!=EOF &amp;&amp; n &amp;&amp; m){\nfor(register int msk=0;msk&lt;(1&lt;&lt;m);++msk){\nbool ff=false,cnt=false;\nfor(register int i=1;i&lt;=m;++i){\nif(msk&gt;&gt;(i-1)&amp;1) ff|=cnt,cnt=false;\nelse cnt^=1;\n} vis[msk]=ff|cnt?0:1;\n} memset(f,0,sizeof f),f[0][0]=1;\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=0;j&lt;(1&lt;&lt;m);++j){\nfor(register int k=0;k&lt;(1&lt;&lt;m);++k){\nif((j&amp;k)!=0 || !vis[j|k]) continue;\nf[i][j]+=f[i-1][k];\n}\n}\n} printf(\"%lld\\n\",f[n][0]);\n} return 0;\n}  </code></pre>"}, {"location": "algor/dp/tree-dp/", "title": "\u6811\u5f62 DP", "text": ""}, {"location": "algor/dp/tree-dp/#dp", "title": "\u666e\u901a\u6811\u5f62DP", "text": "<p>\u6811\u5f62DP\u7684\u56fa\u6709\u7279\u5f81\u5c31\u662f\u4f7f\u7528 dfs \u9012\u5f52\u5b9e\u73b0\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\u90fd\u662f dfs \u5230\u513f\u5b50\uff0c\u7136\u540e\u4e0a\u4f20\u4fe1\u606f\u66f4\u65b0\u7236\u4eb2\uff0c\u6700\u540e\u5f97\u51fa\u7b54\u6848\u3002</p> <p>\u5e38\u89c1\u7684\u8f85\u52a9\u6570\u7ec4\u662f\uff1a</p> <ul> <li><code>siz[u]</code>\uff1a\u8bb0\u5f55\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f</li> <li><code>dep[u]</code> \uff1a\u8bb0\u5f55\u4ee5\u67d0\u4e2a\u8282\u70b9\uff08\u901a\u5e38\u662f \\(1\\)\uff09\u4e3a\u6839\u7684\u65f6\u5019 \\(u\\) \u7684\u6df1\u5ea6\u3002</li> <li><code>dis[u]</code>\uff1a\\(u\\) \u80fd\u5411\u4e0b\u8d70\u7684\u6700\u8fdc\u8ddd\u79bb / \u4ee5 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\u6240\u6709\u8282\u70b9\u5230 \\(u\\) \u7684\u8ddd\u79bb\u548c\u3002</li> </ul> <p>\uff08\u9664\u4e86\u6362\u6839DP\u4f1a\u5728\u7b2c\u4e8c\u6b21 dfs \u7684\u65f6\u5019\u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\uff09</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u72b6\u6001\u90fd\u662f\u8bbe\u8ba1\u6210\u8fd9\u79cd \uff1a\\(f_{u}\\) \u8868\u793a\u8282\u70b9 \\(u\\) blablabla\uff0c\u8868\u793a\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811 blablabla\u2026\u2026</p>"}, {"location": "algor/dp/tree-dp/#_1", "title": "\u4f8b\u5b50", "text": "<p>\u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a\uff1a\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u5982\u679c\u9009\u4e86\u67d0\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u9009\u8fd9\u4e2a\u8282\u70b9\uff0c\u8282\u70b9\u6709\u70b9\u6743\uff0c\u95ee\u4f60\u53ef\u4ee5\u9009\u62e9\u7684\u70b9\u6743\u548c\u7684\u6700\u5927\u503c\u3002</p> <p>\u8bbe \\(f[u][0/1]\\) \u8868\u793a\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811\uff0c \\(u\\) \u53c2\u52a0\u6216\u8005\u4e0d\u53c2\u52a0\u821e\u4f1a\u7684\u6240\u6709\u60c5\u51b5\uff0c\u5c5e\u6027\u4e3a\uff1a\u53d6\u5f97\u7684\u6700\u5927\u6743\u503c\u3002</p> <p>\u8fd9\u6837\u5b50\u8bbe\u8ba1\u624d\u80fd\u591f\u8868\u793a\u51fa\u9898\u76ee\u4e2d\u6240\u6709\u7684\u9650\u5236\u5173\u7cfb\uff1a\u4ece\u5c5e\uff0c\u662f\u5426\u53c2\u52a0\u3002</p> <p>\u6839\u636e\u72b6\u6001\u8bbe\u8ba1\uff0c\u5206 \\(f[u][0]\\) \u548c \\(f[u][1]\\) \u4e24\u79cd\u60c5\u51b5\u6765\u8ba8\u8bba\u3002</p> <p>\u5982\u679c \\(u\\) \u4e0d\u53c2\u52a0\u821e\u4f1a\uff0c\u90a3\u4e48\u5b83\u7684\u513f\u5b50\u4eec\u90fd\u53ef\u4ee5\u53c2\u52a0\u821e\u4f1a\u3002</p> <p>\u6ce8\u610f\u5230 \\(r_i\\) \u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u8981\u5728\u513f\u5b50\u53c2\u52a0\u548c\u4e0d\u53c2\u52a0\u91cc\u9762\u53d6\u4e2a\u6700\u5927\u503c\u7136\u540e\u518d\u6c42\u548c\u3002</p> <p>\\(f[u][0]=\\sum \\max(f[v][1],f[v][0])\\)</p> <p>\u7136\u540e\u5982\u679c \\(u\\) \u53c2\u52a0\u4e86\u821e\u4f1a\uff0c\u90a3\u4e48\u5b83\u7684\u513f\u5b50\u8282\u70b9\u5c31\u90fd\u4e0d\u4f1a\u53c2\u52a0\uff0c\u4f46\u662f\u5b83\u81ea\u5df1\u8981\u53c2\u52a0\u3002</p> <p>\u6240\u4ee5 \\(f[u][1]=\\sum f[v][0]+r_u\\)</p> <p>\u7136\u540e\u6211\u4eecDP\u5b8c\u4e86\u4e4b\u540e\u5c31\u5728 \\(f[root][0]\\) \u548c \\(f[root][1]\\) \u4e4b\u95f4\u53d6\u4e2a\u6700\u5927\u503c\u5373\u53ef\u3002</p> <p>\u4ece\u8fd9\u9053\u9898\u4e0d\u96be\u53d1\u73b0\uff0c\u6811\u5f62DP\u7684\u91cd\u70b9\u5c31\u5728\u4e8e\u5982\u4f55\u5229\u7528\u72b6\u6001\u8868\u793a\u8282\u70b9\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u4ece\u5c5e\uff0c\u9650\u5236\u7b49\u5173\u7cfb\u3002</p> <p>\u5e76\u4e14\u8bbe\u8ba1\u72b6\u6001\u7684\u65f6\u5019\u4e00\u822c\u90fd\u662f\u95ee\u4ec0\u4e48\u8bbe\u4ec0\u4e48\uff08\u548c\u7ebf\u6027DP\u5dee\u4e0d\u591a\uff09\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int si=6e3+10;\nstruct Tree{\nint ver,head,Next;\n}e[si*2];\nint root=0,cnt=0;\nvoid add(int u,int v){\ne[++cnt].ver=v,e[cnt].Next=e[u].head;\ne[u].head=cnt;\n}\n\nint r[si];\nint f[si][2];\nbool nrt[si];\n\nvoid dp(int u,int fa){\nf[u][0]=0;\nf[u][1]=r[u];\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver;\nif(v==fa) continue;\ndp(v,u);\nf[u][0]+=max(f[v][1],f[v][0]);\nf[u][1]+=f[v][0];\n}\n}\n\nint n;\nint main(){\nscanf(\"%d\",&amp;n);\nfor(register int i=1;i&lt;=n;++i){\nscanf(\"%d\",&amp;r[i]);\n}\nfor(register int i=1;i&lt;n;++i){\nint u,v;\nscanf(\"%d%d\",&amp;u,&amp;v);\nadd(u,v),add(v,u);\nnrt[v]=true;\n}\nfor(register int i=1;i&lt;=n;++i){\nif(!nrt[i]){\nroot=i;break;\n}\n}\ndp(root,0);\nint res=max(f[root][0],f[root][1]);\nprintf(\"%d\\n\",res);\n}\n</code></pre>"}, {"location": "algor/dp/tree-dp/#_2", "title": "\u6811\u4e0a\u80cc\u5305", "text": "<p>\u8fd9\u4e2a\u89c1 \u80cc\u5305\u95ee\u9898 \u3002</p>"}, {"location": "algor/dp/tree-dp/#dp_1", "title": "\u6362\u6839DP", "text": ""}, {"location": "algor/dp/tree-dp/#_3", "title": "\u6cdb\u5316", "text": "<p>\u8fd9\u7c7b\u95ee\u9898\u7684\u663e\u8457\u7279\u70b9\u662f\u4e24\u6b21dfs\uff0c\u4e00\u6b21\u6536\u96c6\u4fe1\u606f\uff0c\u4e00\u6b21\u8fdb\u884c\u8f6c\u79fb\u3002</p> <p>\u6709\u7684\u65f6\u5019\u66b4\u529b\u9700\u8981\u6bcf\u4e2a\u70b9\u8fdb\u884c\u4e00\u6b21 \\(\\text{O}(n)\\) \u7684 dfs\uff0c\u590d\u6742\u5ea6 \\(\\text{O}(n^2)\\)\u3002</p> <p>\u6b64\u65f6\u4e00\u822c\u90fd\u53ef\u4ee5\u4f7f\u7528\u6362\u6839DP\u8fdb\u884c \\(\\text{O}(n)\\) \u7684\u8ba1\u7b97\u3002</p> <p>\u89e3\u51b3\u65f6\u4e00\u822c\u5206\u4e09\u6b65\uff1a</p> <ol> <li> <p>\u786e\u5b9a\u4e00\u4e2a\u6839\u8282\u70b9 \\(rt\\)</p> </li> <li> <p>\u4ece \\(rt\\) \u51fa\u53d1\uff0c\u5411\u4e0b dfs\uff0c\u5e76\u7528\u513f\u5b50\u66f4\u65b0\u7236\u4eb2\u7684\u4fe1\u606f\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u6b21 dfs\uff0c\u4e00\u822c\u8fd8\u662f\u4ece\u6700\u5f00\u59cb\u786e\u5b9a\u7684\u6839\u8282\u70b9 \\(rt\\) \u5f00\u59cb\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u65f6\u5019\u9700\u8981\u7528\u4ee5\u7236\u4eb2 \\(u\\) \u4e3a\u6574\u68f5\u6811\u7684\u6839\u7684\u7b54\u6848\uff0c\u7ed3\u5408\u4fe1\u606f\u6765\u66f4\u65b0\u4ee5\u513f\u5b50 \\(v\\) \u4e3a\u6574\u68f5\u6811\u7684\u6839\u7684\u7b54\u6848\u3002</p> </li> </ol> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6b64\u65f6\u8fdb\u884c\u6362\u6839DP\u7684\u65f6\u5019\uff0c\u4f1a\u8bbe \\(f_u\\) \u8868\u793a\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u65f6\u5019\u7684\u7b54\u6848\uff0c\u7136\u540e\u4ece\u6700\u5f00\u59cb\u9009\u5b9a\u7684\u6839\u8282\u70b9\u5411\u4e0b\u8f6c\u79fb\u3002</p> <p>\u56e0\u4e3a\u6bcf\u6b21\u53ea\u4f1a\u5411\u5f53\u524d\u8282\u70b9\u7684\u513f\u5b50\u8282\u70b9\u8f6c\u79fb\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5bf9\u4fe1\u606f\u8fdb\u884c\u4e00\u4e9b\u6574\u5408\u3001\u8ba1\u7b97\u5c31\u53ef\u4ee5\u5f97\u5230\u513f\u5b50\u8282\u70b9\u7684\u7b54\u6848\u3002</p> <p>\uff08\u6b64\u5904\u6240\u8bf4\u7684\u201c\u7236\u4eb2\u201d\uff0c\u201c\u513f\u5b50\u201d\uff0c\u90fd\u662f\u5728\u6700\u5f00\u59cb\u9009\u5b9a\u7684\u6839\u8282\u70b9 \\(rt\\) \u4e3a\u6574\u68f5\u6811\u7684\u6839\u7684\u60c5\u51b5\u4e0b\u5b9a\u4e49\u7684\uff09</p>"}, {"location": "algor/dp/tree-dp/#_4", "title": "\u4f8b\u5b50", "text": "<p>[POI2008]STA-Station\uff1a\u7ed9\u4f60\u4e00\u9897\u65e0\u6839\u65e0\u6743\u6811\uff0c\u8bf7\u4f60\u627e\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u4f7f\u5f97\u4ee5\u8fd9\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u65f6\u5019\uff0c\u6811\u7684\u8282\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u6700\u5927\u3002</p> <p>\u9996\u5148\u4ee5 \\(1\\) \u4e3a\u6839\uff0c\u8003\u8651\u8fdb\u884c\u4e00\u6b21 dfs\uff0c\u6c42\u51fa\u6b64\u65f6\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6 \\(depth\\)\uff0c\u5b50\u6811\u5927\u5c0f \\(siz\\)\uff0c\u5b50\u6811\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\u548c \\(dis\\)\u3002</p> <p>\u90a3\u4e48\u8bbe \\(f_u\\) \u8868\u793a\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u65f6\u5019\uff0c\u6811\u7684\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u3002</p> <p>\u8003\u8651\u4ece \\(u\\) \u7684\u7236\u4eb2 \\(fa\\) \u8f6c\u79fb\u8fc7\u6765\u3002</p> <p>\u9996\u5148\uff0c\\(f_u\\) \u80af\u5b9a\u8981\u5148\u52a0\u4e0a \\(dis_u\\)\uff0c\u8fd9\u4e00\u90e8\u5206\u672c\u6765\u5c31\u662f\u4ee5 \\(u\\) \u4e3a\u6839\uff0c\u6240\u4ee5\u6df1\u5ea6\u548c\u81ea\u7136\u662f\u5230 \\(u\\) \u7684\u8ddd\u79bb\u548c\uff08\u56e0\u4e3a\u65e0\u6743\uff09\u3002</p> <p>\u7136\u540e\u53d1\u73b0 \\(u\\) \u7684\u4e0a\u9762\u90a3\u90e8\u5206\u9700\u8981\u7edf\u8ba1\u3002</p> <p>\u660e\u663e\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 \\(f_{fa}\\) \u6c42\u51fa\u4e0a\u9762\u7684\u90e8\u5206\uff0c\u4f46\u662f \\(f_{fa}\\) \u672c\u8eab\u5c31\u5305\u542b\u4e86 \\(u\\) \u7684\u5b50\u6811\u4fe1\u606f\u3002</p> <p>\u6240\u4ee5\u8981\u7ed9 \\(f_{fa}\\) \u51cf\u53bb \\(dis_u\\) \uff0c\u4e0d\u8fc7 \\(fa\\) \u548c \\(u\\) \u5728\u4ee5 \\(1\\) \u4e3a\u6839\u7684\u65f6\u5019\u662f\u6709\u6df1\u5ea6\u5dee\u7684\uff0c\u6240\u4ee5\u8981\u518d\u51cf\u53bb \\(siz_u(\\times 1)\\)\u3002</p> <p>\u521a\u597d\uff0c\u8fd9\u4e2a\u6df1\u5ea6\u5dee\u53c8\u4f1a\u9020\u6210\u4e0a\u9762\u7684\u90a3\u4e00\u90e8\u5206\u5728\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u65f6\u5019\u7684\u6df1\u5ea6\u6bd4\u4ee5 \\(fa\\) \u4e3a\u6839\u7684\u65f6\u5019\u589e\u52a0 \\(1\\)\u3002</p> <p>\u6240\u4ee5\u8981\u52a0\u4e0a \\(siz_1-siz_u\\)\u3002</p> <p></p> <p>\u6574\u7406\u4e0b\u5f0f\u5b50\uff1a\\(f_u=f_{fa}-dis_u+dis_u-siz_u+siz_1-siz_u=f_{fa}+siz_1-2siz_u\\)\u3002</p> <p>\u6240\u4ee5\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u8bb0\u5f55 \\(siz\\) \u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u4f46\u662f\u4f60\u4e3a\u4e86\u8f6c\u79fb\uff0c\u80af\u5b9a\u8981\u5728\u6362\u6839\u4e4b\u524d\u5148\u6c42\u51fa \\(f_1\\) \u3002\u8fd9\u4e2a\u5229\u7528 \\(depth\\) \u66b4\u529b\u52a0\u5373\u53ef\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si=1e6+10;\nint n;\nstruct Tree{\nint head,ver,Next;\n}e[si&lt;&lt;1];\nint tot=0;\ninline void add(int u,int v){\ne[++tot].ver=v,e[tot].Next=e[u].head;\ne[u].head=tot;\n}\nint f[si],siz[si],depth[si];\ninline void dfs1(int u,int fa){\nsiz[u]=1;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver;\nif(v==fa) continue;\ndepth[v]=depth[u]+1;\ndfs1(v,u),siz[u]+=siz[v];\n} return ;\n}\ninline void dfs2(int u,int fa){\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver;\nif(v==fa) continue;\nf[v]=f[u]+siz[1]-2*siz[v];\ndfs2(v,u);\n} return ;\n}\n\nsigned main(){\nscanf(\"%lld\",&amp;n);\nfor(register int i=1;i&lt;n;++i){\nint u,v; scanf(\"%lld%lld\",&amp;u,&amp;v);\nadd(u,v),add(v,u);\n} depth[1]=0;\ndfs1(1,0);\nfor(register int i=1;i&lt;=n;++i){\nf[1]+=depth[i];\n} dfs2(1,0);\nint res=0,ans=-114514;\nfor(register int i=1;i&lt;=n;++i){\nif(f[i]&gt;ans) ans=f[i],res=i;\n} return printf(\"%lld\\n\",res),0;\n}\n</code></pre> <p>\u518d\u603b\u7ed3\u4e00\u4e0b\uff1a</p> <ol> <li>\u627e\u4e00\u4e2a\u6839\u8282\u70b9 \\(rt\\)</li> <li>\u7edf\u8ba1\u6b64\u65f6\u7684\u4fe1\u606f</li> <li>\u6362\u6839\uff0c\u5229\u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\u7684\u7b54\u6848\uff0c\u8f6c\u79fb\u4e4b\u524d\u8981\u5148\u521d\u59cb\u5316\u7b2c\u4e00\u904d dfs \u65f6\u5019\u7684\u6839 \\(rt\\) \u7684\u7b54\u6848\u3002</li> </ol>"}, {"location": "algor/dp/tree-dp/#_5", "title": "\u53e6\u5916\u4e00\u4e2a\u4f8b\u5b50", "text": "<p>[USACO12FEB]Nearby Cows G\uff1a\u7ed9\u4f60\u4e00\u68f5 \\(n\\) \u4e2a\u70b9\u7684\u6811\uff0c\u70b9\u5e26\u6743\uff0c</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 \\(i\\)\uff0c\u6c42\u51fa\u8ddd\u79bb\u5b83\u4e0d\u8d85\u8fc7 \\(K\\) \u7684\u6240\u6709\u8282\u70b9\u7684\u6743\u503c\u548c \\(m_i\\)\uff0c</p> <p>\\(K\\) \u7ed9\u5b9a\uff0c\u5e76\u4e14 \\(n\\times K \\le 2\\times 10^6, K \\le 20\\)\u3002</p> <p>\u6211\u4eec\u4ecd\u7136\u8003\u8651\u5148 dfs \u4e00\u904d \u6c42\u51fa\u6240\u9700\u8981\u7684\u4fe1\u606f\uff0c\u800c\u8fd9\u91cc\u95ee\u7684\u662f\u8282\u70b9\u6743\u503c\u548c\uff0c\u53c8\u6709 \\(K\\) \u7684\u9650\u5236\u3002</p> <p>\u90a3\u4e48\u5148\u627e\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u6bd4\u5982 \\(1\\) \uff0c\u7136\u540e\u8bbe \\(f_{u,k}\\) \u8868\u793a\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\uff0c\u548c \\(u\\) \u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7 \\(k\\) \u7684\u8282\u70b9\u7684\u6743\u503c\u548c\u3002</p> <p>\u8fd9\u91cc \\(f_{u,k}=\\sum f_{v,k-1}\\)\uff0c\u521d\u59cb\u5316 \\(\\forall f_{u,i}=a_u\\)\u3002</p> <p>\u7136\u540e\u8003\u8651\u8fdb\u884c\u6362\u6839\u3002</p> <p>\u8bbe \\(dis_{u,k}\\) \u8868\u793a\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u65f6\u5019\uff0c\\(K=k\\) \u7684\u65f6\u5019\u7684 \\(m_u\\)\u3002</p> <p>\u90a3\u4e48\u8003\u8651\u4ece \\(dis_{fa}\\) \u8f6c\u79fb\u3002</p> <p>\u7b80\u5355\u63a8\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\\(dis_{u,k}=f_{u,k}+dis_{fa,k-1}-f_{u,k-2}\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5904\u7406\u51fa \\(f\\) \u4e4b\u540e\uff0c\u5148\u628a \\(f\\) \u590d\u5236\u7ed9 \\(dis\\) \uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019 \\(dis_1\\) \u5176\u5b9e\u5c31\u5df2\u7ecf\u7b97\u51fa\u6765\u4e86\uff0c\u6362\u6839\u5b8c\u540e\u8f93\u51fa\u5373\u53ef\u3002</p> <p>\u4e0d\u8fc7\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u70b9\u662f\uff0c\u5982\u679c\u662f\u7528\u513f\u5b50\u66f4\u65b0\u7236\u4eb2\u7684\u4fe1\u606f \uff08<code>dfs1</code>\uff09 \uff0c\u90a3\u4e48\u8981\u5148 dfs \u7136\u540e\u518d\u66f4\u65b0\u3002</p> <p>\u5982\u679c\u662f\u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\u7684\u4fe1\u606f\uff08<code>dfs2</code>\uff09\uff0c\u9700\u8981\u5148\u66f4\u65b0\u518d dfs\u3002</p> Code1 <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si=1e5+10;\nint n,k;\nstruct Tree{\nint head,ver,Next;\n}e[si&lt;&lt;1];\nint tot=0;\ninline void add(int u,int v){\ne[++tot].ver=v,e[tot].Next=e[u].head;\ne[u].head=tot;\n}\nint f[si][22],dis[si][22];\nint a[si];\n\ninline void dfs1(int u,int fa){\nfor(register int i=0;i&lt;=k;++i){\nf[u][i]=a[u];\n}\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver;\nif(v==fa) continue;\ndfs1(v,u);\nfor(register int j=1;j&lt;=k;++j){\nf[u][j]+=f[v][j-1];\n}\n}\n}\ninline void dfs2(int u,int fa){\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver;\nif(v==fa) continue;\ndis[v][1]+=f[u][0];\nfor(register int j=2;j&lt;=k;++j){\ndis[v][j]+=dis[u][j-1]-f[v][j-2];\n} dfs2(v,u);\n}\n}\n\nsigned main(){\nscanf(\"%lld%lld\",&amp;n,&amp;k);\nfor(register int i=1;i&lt;n;++i){\nint u,v;\nscanf(\"%lld%lld\",&amp;u,&amp;v);\nadd(u,v),add(v,u);\n}\nfor(register int i=1;i&lt;=n;++i){\nscanf(\"%lld\",&amp;a[i]);\n} dfs1(1,0);\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=0;j&lt;=k;++j){\ndis[i][j]=f[i][j];\n}\n} dfs2(1,0);\nfor(register int i=1;i&lt;=n;++i){\nprintf(\"%lld\\n\",dis[i][k]);\n} return 0;\n}\n</code></pre> <p>\u5f53\u7136 \\(f\\) \u4e5f\u53ef\u4ee5\u8fd9\u4e48\u6c42\uff1a</p> <p>\u521d\u59cb\u5316 \\(f_{u, 0} = a_u\\)\uff0c\u7136\u540e \\(f_{u,k}=\\sum f_{v,k-1}\\)\u3002</p> <p>\u6b64\u65f6\u6c42\u7684\u662f\u8ddd\u79bb\u6070\u597d\u4e3a \\(k\\)\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u505a\u4e00\u904d\u524d\u7f00\u548c\u3002</p> <p>\u8fd9\u79cd\u5199\u6cd5\u7684\u5b9e\u73b0\uff1a</p> Code2 <pre><code>int dp[si][22]; // \u4ee5 1 \u4e3a\u6839, u \u7684\u5b50\u6811\uff0c\u8ddd\u79bb\u4e0d\u8d85\u8fc7 i\uff0ccnt\u3002\n// \u521d\u59cb\u662f\u6070\u597d\uff0c\u4e4b\u540e\u505a\u524d\u7f00\u548c\u3002\nint ans[si][22];\n// \u4ee5 u \u4e3a\u6839\u7684\u7b54\u6848\uff0cans[u][1] \u76f4\u63a5\u9884\u5904\u7406\uff0cans[u][2] \u5f00\u59cb\u518d\u6362\u6839 dp\u3002\n\n// \u7b2c\u4e00\u904d dfs\nvoid dfs1(int u, int fa) {\ndp[u][0] = a[u];\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\ndfs1(v, u);\nfor(int j = 1; j &lt;= k; ++j)\ndp[u][j] += dp[v][j - 1];\n}\n}\n// \u524d\u7f00\u548c\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528 dfs\u3002\nvoid dfs2(int u, int fa) {\nfor(int i = 1; i &lt;= k; ++i) dp[u][i] += dp[u][i - 1];\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\ndfs2(v, u);\n}\n}\n// \u6362\u6839\nvoid dfs3(int u, int fa) {  for(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\nans[v][1] = dp[v][1] + a[u];\nfor(int j = 2; j &lt;= k; ++j)\nans[v][j] = dp[v][j] + ans[u][j - 1] - dp[v][j - 2];\ndfs3(v, u);\n}\n}\nvoid solve() {\nmemset(dp, 0, sizeof dp);\nmemset(ans, 0, sizeof ans);\ndfs1(1, 0), dfs2(1, 0);\nmemcpy(ans[1], dp[1], sizeof ans[1]);\ndfs3(1, 0);\nfor(int i = 1; i &lt;= n; ++i)\ncout &lt;&lt; ans[i][k] &lt;&lt; \" \" [i != n];\ncout &lt;&lt; endl; return; }\n</code></pre>"}, {"location": "algor/dp/basic/how-to-think/", "title": "\u5982\u4f55\u8bbe\u8ba1\u72b6\u6001 & \u65b9\u7a0b", "text": ""}, {"location": "algor/dp/basic/how-to-think/#_1", "title": "\u5206\u6790", "text": "<p>\u6700\u91cd\u8981\u7684\u662f\u63d0\u53d6\u51fa\u9898\u76ee\u4e2d\u7684\u6240\u6709\u8981\u7d20\uff0c\u5e76\u5c3d\u53ef\u80fd\u7684\u5c06\u5176\u8f6c\u5316\u4e3a\u72b6\u6001\u7684\u4fe1\u606f\u7ef4\u5ea6\u6216\u8005\u72b6\u6001\u6240\u8868\u793a\u7684\u4fe1\u606f\u3002</p> <p>\u5c31\u662f\u672c\u7740\u201c\u95ee\u5565\u8bbe\u5565\u201d\u7684\u7406\u5ff5\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff1a</p> <p>\u4e00\u4e2a\u516c\u53f8\u6709\u4e09\u4e2a\u79fb\u52a8\u670d\u52a1\u5458\uff0c\u6700\u521d\u5206\u522b\u5728\u4f4d\u7f6e \\(1\uff0c2\uff0c3\\) \u5904\u3002</p> <p>\u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e\uff08\u7528\u4e00\u4e2a\u6574\u6570\u8868\u793a\uff09\u6709\u4e00\u4e2a\u8bf7\u6c42\uff0c\u90a3\u4e48\u516c\u53f8\u5fc5\u987b\u6307\u6d3e\u67d0\u540d\u5458\u5de5\u8d76\u5230\u90a3\u4e2a\u5730\u65b9\u53bb\u3002</p> <p>\u67d0\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u5458\u5de5\u80fd\u79fb\u52a8\uff0c\u4e14\u4e0d\u5141\u8bb8\u5728\u540c\u6837\u7684\u4f4d\u7f6e\u51fa\u73b0\u4e24\u4e2a\u5458\u5de5\u3002</p> <p>\u4ece \\(p\\) \u5230 \\(q\\) \u79fb\u52a8\u4e00\u4e2a\u5458\u5de5\uff0c\u9700\u8981\u82b1\u8d39 \\(c(p,q)\\)\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u4e0d\u4e00\u5b9a\u5bf9\u79f0\uff0c\u4f46\u4fdd\u8bc1 \\(c(p,p)=0\\)\u3002</p> <p>\u7ed9\u51fa \\(N\\) \u4e2a\u8bf7\u6c42\uff0c\u8bf7\u6c42\u53d1\u751f\u7684\u4f4d\u7f6e\u5206\u522b\u4e3a \\(p_1 \\sim p_N\\)\u3002</p> <p>\u516c\u53f8\u5fc5\u987b\u6309\u987a\u5e8f\u4f9d\u6b21\u6ee1\u8db3\u6240\u6709\u8bf7\u6c42\uff0c\u4e14\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u53bb\u5176\u4ed6\u989d\u5916\u7684\u4f4d\u7f6e\uff0c\u76ee\u6807\u662f\u6700\u5c0f\u5316\u516c\u53f8\u82b1\u8d39\uff0c\u8bf7\u4f60\u5e2e\u5fd9\u8ba1\u7b97\u8fd9\u4e2a\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\\(1\\le L \\le 200, 1\\le N \\le 3000\\)\u3002</p> <p>\u9996\u5148\u627e DP \u7684\u201d\u9636\u6bb5\u201c\uff0c\u4e5f\u5c31\u662f\u6700\u5916\u5c42\u5faa\u73af\u5e94\u8be5\u662f\u7531\u4ec0\u4e48\u51b3\u5b9a\u7684\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ebf\u6027 DP \u95ee\u9898\uff0c\u90a3\u4e48\u8981\u627e\u7684\u5c31\u662f\u201c\u6309\u987a\u5e8f\u6210\u4e00\u6761\u7ebf\u201c\u7684\u8981\u7d20\u3002</p> <p>\uff08\u6811\u5f62 DP \u5c31\u662f\u627e\u4ee5 xxx \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u533a\u95f4 DP \u662f\u627e\u5212\u5206\u548c\u533a\u95f4\u957f\u5ea6\uff09</p> <p>\u4ed4\u7ec6\u9605\u8bfb\u80fd\u53d1\u73b0\uff1a</p> <p>\u987a\u5e8f\u4f9d\u6b21\u6ee1\u8db3\u6240\u6709\u8bf7\u6c42</p> <p>\u6240\u4ee5\u201d\u8bf7\u6c42\u201c\u5c31\u6784\u6210\u4e86 DP \u72b6\u6001\u4fe1\u606f\u7ef4\u5ea6\u7684\u201d\u9636\u6bb5\u201c\u8fd9\u4e00\u7ef4\u3002</p> <p>\u7136\u540e\u6240\u4ee5\u53ef\u4ee5\u5148\u8bbe\u8ba1\u51fa\u4e00\u7ef4\u72b6\u6001\uff1a\\(dp_i\\) \u8868\u793a\u5904\u7406\u524d \\(i\\) \u4e2a\u8bf7\u6c42\uff0c\u4ec0\u4e48\u4ec0\u4e48\u4e1c\u897f\u3002</p> <p>\u9636\u6bb5\u7c7b\u7684\u4fe1\u606f\u4e00\u822c\u90fd\u5e26\u6709 \u201d\u524d\uff08\\(i\\) \u4e2a\uff09\uff0c\u5f53\u524d\uff08\u7b2c \\(i\\) \u4e2a\uff09\u201c \u7684\u5b57\u6837\u3002</p> <p>\u672c\u9898\u662f\u8981\u5904\u7406\u5b8c\u8bf7\u6c42\uff0c\u6240\u4ee5\u9009\u62e9 \u201d\u524d\u201c \u4f5c\u4e3a\u8981\u7d20\u3002</p> <p>\u7136\u540e\u8bbe\u8ba1 DP \u72b6\u6001\u7684\u51b3\u7b56\u4fe1\u606f\u7ef4\u5ea6\u3002 </p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u7ec8 DP \u72b6\u6001\u6240\u8868\u793a\u7684\u4e1c\u897f\u5e94\u5f53\u548c \u201d\u82b1\u8d39\u201c \u6709\u5173\uff0c\u4e14\u5c5e\u6027\u5e94\u4e3a\u6700\u5c0f\u503c\u3002</p> <p>\u51b3\u7b56\u7ef4\u5ea6\u662f\u7528\u4e8e\u201d\u51b3\u5b9a/\u786e\u5b9a\u201c DP \u72b6\u6001\u6700\u7ec8\u8868\u793a\u7684\u4e1c\u897f\u5e94\u5f53\u662f\u591a\u5c11\u7684\u3002</p> <p>\u6240\u4ee5\u672c\u9898\u7684\u51b3\u7b56\u7ef4\u5ea6\u9700\u8981\u80fd\u591f\u51b3\u5b9a\u201d\u82b1\u8d39\u201c\u7684\u503c\u3002</p> <p>\u800c\u53d1\u73b0\u672c\u9898\u7684\u201d\u82b1\u8d39\u201c\u662f\u7531\u51fd\u6570 \\(c()\\) \u51b3\u5b9a\u7684\uff0c\u800c\u51fd\u6570 \\(c\\) \u7684\u81ea\u53d8\u91cf\u5219\u662f\u201d\u5458\u5de5\u7684\u4f4d\u7f6e\u201c\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u77e5\u9053\uff0cDP \u72b6\u6001\u7684\u51b3\u7b56\u4fe1\u606f\u7ef4\u5ea6\u5e94\u5f53\u542b\u6709 \u201d\u5458\u5de5\u7684\u4f4d\u7f6e\u201c \u8fd9\u4e00\u8981\u7d20\u3002</p> <p>\u6211\u4eec\u5c06\u4e09\u4e2a\u5458\u5de5\u6240\u5904\u7684\u4f4d\u7f6e\u90fd\u8bbe\u8ba1\u8fdb\u72b6\u6001\uff0c\u56e0\u4e3a\u65e0\u540e\u6548\u6027\u5df2\u7ecf\u7531\u9636\u6bb5\u4fdd\u8bc1\uff0c\u6240\u4ee5\u201d\u4f4d\u7f6e\u201c\u8fd9\u4e00\u72b6\u6001\u4e0d\u9700\u8981\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u8f6c\u79fb\u3002</p> <p>\u90a3\u4e48\u8bbe\u8ba1\u51fa DP \u72b6\u6001\uff1a</p> <p>\u8bbe \\(dp_{i,x,y,z}\\) \u8868\u793a\u5904\u7406\u5b8c\u524d \\(i\\) \u4e2a\u8bf7\u6c42\uff0c\u5458\u5de5 \\(1,2,3\\) \u5206\u522b\u5728\u4f4d\u7f6e \\(x,y,z\\) \u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u82b1\u8d39\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u7136\u540e\u8f6c\u79fb\u65b9\u7a0b\u5c31\u9700\u8981\u6839\u636e\u51b3\u7b56\u4fe1\u606f\u7ef4\u5ea6\u548c\u4ee3\u4ef7\u51fd\u6570\u6765\u8bbe\u8ba1\u3002</p> <p>\u5e76\u4e14\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u63d0\u5230\uff1a</p> <p>\u4e0d\u5141\u8bb8\u5728\u540c\u6837\u7684\u4f4d\u7f6e\u51fa\u73b0\u4e24\u4e2a\u5458\u5de5</p> <p>\u6240\u4ee5\u8f6c\u79fb\u65f6\u8fd8\u8981\u4fdd\u8bc1\u72b6\u6001\u7684\u5408\u6cd5\u6027\uff0c\u5373 \\(x\\not=y\\not=z\\)\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u65b9\u7a0b\u5fc5\u7136\u65e0\u6cd5\u901a\u8fc7\u6240\u6709\u6570\u636e\uff0c\u56e0\u4e3a\u7a7a\u95f4\u5f00\u9500\u592a\u5927\u4e86\uff08\\(3000 \\times 200 \\times 200 \\times 200\\)\uff09\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8981\u5728\u9898\u76ee\u8981\u7d20\u4e2d\u5bfb\u627e\u80fd\u591f\u51cf\u5c11\u7a7a\u95f4\u5f00\u9500\u7684\u8981\u7d20\u3002</p> <p>\u4f46\u662f\u53d1\u73b0\u6211\u4eec\u8981\u60f3\u8f6c\u79fb\uff0c\u5c31\u5fc5\u987b\u540c\u65f6\u77e5\u9053\u4e09\u4e2a\u4eba\u7684\u4f4d\u7f6e\u3002</p> <p>\u6240\u4ee5\u6b64\u5904\u8003\u8651\u7684\u662f\u901a\u8fc7\u66f4\u5c11\u7684\u4fe1\u606f\u53ef\u4ee5\u63a8\u51fa\u5b8c\u6574\u7684\u4fe1\u606f\u7684\u4f18\u5316\u3002</p> <p>\u4e5f\u5c31\u662f\u8981\u60f3\u529e\u6cd5\u53ea\u7528\u4e00\u4e2a\u4eba\u6216\u8005\u4e24\u4e2a\u4eba\u7684\u4f4d\u7f6e\u786e\u5b9a\u4e09\u4e2a\u4eba\u7684\u4f4d\u7f6e\u3002</p> <p>\u53d1\u73b0\u9898\u76ee\u4e2d\u8bf4\uff1a</p> <p>\u4e14\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u53bb\u5176\u4ed6\u989d\u5916\u7684\u4f4d\u7f6e</p> <p>\u90a3\u4e48\u4f18\u5316\u65b9\u5f0f\u5c31\u660e\u4e86\u4e86\uff0c\u5229\u7528\u53e6\u5916\u4e24\u4e2a\u4eba\u7684\u4f4d\u7f6e \\(x,y\\)\uff0c\u548c\u6700\u540e\u5904\u7406\u7684\u8bf7\u6c42\u4f4d\u7f6e\uff08\\(p_{i}\\)\uff09\uff0c\u63a8\u51fa\u5904\u7406\u7b2c \\(i\\) \u4e2a\u8bf7\u6c42\u7684\u5458\u5de5\u7684\u4f4d\u7f6e \\(z=p_i\\) \u5373\u53ef\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5199\u51fa Code </p> <pre><code>memset(dp, 0x3f, sizeof dp);\ndp[0][1][2] = 0, p[0] = 3;\nfor(int i = 0; i &lt;= n; ++i) {\nfor(int x = 1; x &lt;= l; ++x) {\nfor(int y = 1; y &lt;= l; ++y) {\nif(x == y || x == p[i] || y == p[i]) continue;\ndp[i + 1][x][y] = min(dp[i + 1][x][y], dp[i][x][y] + c[p[i]][p[i + 1]]);\ndp[i + 1][p[i]][y] = min(dp[i + 1][p[i]][y], dp[i][x][y] + c[x][p[i + 1]]);\ndp[i + 1][x][p[i]] = min(dp[i + 1][x][p[i]], dp[i][x][y] + c[y][p[i + 1]]);\n}\n}\n}\n</code></pre> <p>\u72b6\u6001\u7684\u521d\u59cb\u5316\u4e5f\u662f\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\u90fd\u9700\u8981\u6839\u636e\u9898\u76ee\u8981\u6c42\u521d\u59cb\u5316\u6240\u6709\u7684\u72b6\u6001\uff0c\u7136\u540e\u5355\u72ec\u7ed9\u7c7b\u4f3c \"0\" \u8fd9\u79cd\u8fb9\u754c\u72b6\u6001\u8d4b\u503c\u3002</p> <p>\u6bd4\u5982\u672c\u9898\uff0c\u56e0\u4e3a\u6c42\u7684\u662f\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u81ea\u7136\u53ef\u4ee5\u60f3\u5230\u7ed9\u6240\u6709 DP \u503c\u8d4b\u503c\u4e3a \\(+\\infty\\)\u3002</p> <p>\u4f46\u662f\u5982\u679c\u76f4\u63a5\u8d4b\u503c\u4e4b\u540e\u4ec0\u4e48\u90fd\u4e0d\u5e72\uff0c\u90a3\u6240\u6709\u7684 DP \u503c\u90fd\u4e0d\u4f1a\u88ab\u66f4\u65b0\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\u8981\u8ba9 \\(dp_{0}\\) \u8fd9\u79cd\u72b6\u6001\u6d3e\u4e0a\u7528\u573a\uff0c\u4e00\u822c\u6765\u8bf4\u8fd9\u79cd\u72b6\u6001\u90fd\u4f1a\u8bbe\u8ba1\u4e3a \\(0\\)\uff0c\u4fbf\u4e8e\u8f6c\u79fb\u3002</p> <p>\u672c\u9898\u8bf4\uff0c\u521d\u59cb\u4e09\u4e2a\u5458\u5de5\u5206\u522b\u5728 \\(1,2,3\\) \uff0c\u90a3\u4e48\u65e0\u4f18\u5316\u7684\u72b6\u6001\u4e0b\uff0c\u5c31\u9700\u8981\u4ee4 \\(dp_{0,1,2,3} = 0\\)\u3002</p> <p>\u4f46\u662f\u5f53\u524d\u5df2\u7ecf\u4f18\u5316\u4e86\uff0c\u7b2c\u4e09\u4e2a\u5458\u5de5\u7684\u4f4d\u7f6e\u662f\u8981\u63a8\u51fa\u6765\u7684\uff0c\u90a3\u5c31\u5047\u8bbe\u6700\u5f00\u59cb\u6709\u4e00\u4e2a \\(0\\) \u53f7\u8bf7\u6c42\uff0c</p> <p>\u8fd9\u4e2a\u8bf7\u6c42\u7531 \\(3\\) \u53f7\u5458\u5de5\u5b8c\u6210\uff0c\u4e14\u5b83\u7684\u4f4d\u7f6e\u662f \\(p_0 =3\\)\u3002</p> <p>\u540c\u65f6\u4ee4 \\(dp_{0,1,2}=0\\) \u5373\u53ef\u5b8c\u6210\u521d\u59cb\u5316\u3002</p> <p>\u5f53\u7136\uff0c\u5faa\u73af\u65f6\u4e0d\u8981\u5fd8\u8bb0\u4ee4 \\(i = 0\\) \uff0c\u8981\u4e0d\u7136\u521d\u59cb\u5316\u90fd\u6ca1\u7528\u4e86\u3002</p>"}, {"location": "algor/dp/basic/how-to-think/#_2", "title": "\u603b\u7ed3", "text": "<ul> <li>\u8bbe\u8ba1\u72b6\u6001\uff1a\u6293\u9898\u76ee\u8981\u7d20\uff0c\u6309\u7167\u201d\u9636\u6bb5-&gt;\u51b3\u7b56-&gt;\u610f\u4e49\u201c \u7684\u987a\u5e8f\u53bb\u51b3\u5b9a DP \u72b6\u6001\u3002</li> </ul> <p>\u5176\u4e2d\uff0c\u201d\u9636\u6bb5\u201c\u7531 DP \u79cd\u7c7b\u51b3\u5b9a\uff0c\u201d\u51b3\u7b56\u201c\u7531\u8ba1\u7b97\u82b1\u8d39\u7684\u51fd\u6570\u7684\u81ea\u53d8\u91cf\u51b3\u5b9a\uff0c\u201d\u610f\u4e49\u201c\u7531\u9898\u76ee\u8981\u6c42\u51b3\u5b9a\u3002</p> <ul> <li> <p>\u8bbe\u8ba1\u65b9\u7a0b\uff1a\u6839\u636e\u72b6\u6001\u8f6c\u79fb\uff0c\u6ce8\u610f\u65e0\u540e\u6548\u6027\uff0c\u5408\u6cd5\u6027\uff0c\u53ef\u884c\u6027\u3002</p> </li> <li> <p>\u72b6\u6001\u521d\u59cb\u5316\uff1a\u6839\u636e\u8981\u6c42\uff0c\u5355\u72ec\u5904\u7406\u8fb9\u754c\u3002</p> </li> </ul>"}, {"location": "algor/dp/basic/set-analytical-method/", "title": "\u96c6\u5408\u5f0f\u5206\u6790\u6cd5", "text": ""}, {"location": "algor/dp/basic/set-analytical-method/#_1", "title": "\u6982\u8ff0", "text": "<p>\u8fd9\u79cd\u65b9\u5f0f\u548c\u4e00\u822c DP \u5206\u6790\u65b9\u5f0f\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e\uff0c</p> <p>\u8fd9\u79cd DP \u5206\u6790\u65b9\u5f0f\u628a DP \u7684\u72b6\u6001\u7a7a\u95f4\u770b\u4f5c\u5168\u96c6\uff0c\u4e00\u4e2a\u4e2a DP \u72b6\u6001\u770b\u4f5c\u4e00\u4e2a\u4e2a\u5c0f\u96c6\u5408\u3002</p> <p>\u628a\u51b3\u7b56\u8f6c\u79fb\u53d8\u6210\u4e86\u96c6\u5408\u7684\u5212\u5206\uff0c\u4ee5\u8fbe\u5230\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u5e76\u628a DP \u72b6\u6001\u62c6\u5206\u4e3a\u4e86\u4e24\u79cd\u5c5e\u6027\u3002</p> <p>\u7528\u4e09\u4e2a\u7ebf\u6027 DP \u7684\u7ecf\u5178\u6a21\u578b\u4f5c\u4f8b\u5b50\u8bf4\u660e\u3002</p>"}, {"location": "algor/dp/basic/set-analytical-method/#lis", "title": "LIS \u95ee\u9898", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 \\(a\\) \uff0c\u6c42\u5b83\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p> <p>\\(|a| \\le 3000\\)\u3002</p> <p>\u672c\u7740\u95ee\u5565\u8bbe\u5565\u7684\u539f\u5219\uff0c\u6211\u4eec\u8bbe\u8ba1\u7684\u72b6\u6001\u9700\u8981\u5305\u542b\u8981\u7d20\uff1a\u201d\u4e0a\u5347\u81ea\u5e8f\u5217\uff0c\u6700\u957f\u201c\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u7528\u6765\u8bbe\u8ba1\u72b6\u6001\u7684 \u201d\u6807\u5fd7\u201c\u90fd\u662f \u201d\u5f53\u524d\uff0c\u6700\u540e\u201c\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u72b6\u6001\u4e00\u822c\u90fd\u4f1a\u8bbe\u8ba1\u6210\uff1a\u201c\u5f53\u524d\u72b6\u6001\u7684\u4ec0\u4e48\u4ec0\u4e48\u4fe1\u606f\uff0c\u6709\u4ec0\u4e48\u4ec0\u4e48\u5c5e\u6027\u201d\uff0c\u6216\u8005 \u201c\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u7684\u4fe1\u606f\u662f\u4ec0\u4e48\u4ec0\u4e48\uff0c\u5c5e\u6027\u662f\u4ec0\u4e48\u4ec0\u4e48\u201d \u7684\u6837\u5b50\u3002</p> <p>\u6240\u4ee5\uff0c\u8bbe \\(dp_{i}\\) \u8868\u793a\u6240\u6709\u4ee5 \\(a_i\\) \u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u5c5e\u6027\u4e3a Max\u3002</p> <p>\u90a3\u4e48\u5982\u4f55\u5904\u7406\u8f6c\u79fb\uff1f</p> <p>\u5c06 \\(dp_i\\) \u6240\u4ee3\u8868\u7684\u96c6\u5408\u5212\u5206\u4e3a\u591a\u4e2a\u5b50\u96c6\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5b50\u96c6\u90fd\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u72b6\u6001\u6765\u8868\u793a\u3002</p> <p>\u5212\u5206\u7684\u4f9d\u636e\u5219\u662f \u201c\u6700\u540e\u4e00\u4e2a\u4e0d\u540c\u7684\u70b9\u201d\u3002</p> <p>\u9996\u5148\u5199\u51fa \\(dp_i\\) \u4ee3\u8868\u7684\u96c6\u5408\u662f\u4ec0\u4e48\uff1a\u201c\u6240\u6709\u4ee5 \\(a_i\\) \u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u201d\u3002</p> <p>\u628a \\(dp_i\\) \u8fd9\u4e2a\u96c6\u5408\u5305\u542b\u7684\u6240\u6709\u5b50\u5e8f\u5217\u5c55\u5f00\uff0c\u53ef\u4ee5\u53d1\u73b0\u4ed6\u4eec\u5168\u90e8\u957f\u6210\u8fd9\u6837\uff1a</p> \\[ \\begin{matrix}\\dots &amp; las_1 &amp; a_i \\\\ \\dots &amp; las_2 &amp; a_i \\\\ \\dots &amp; las_3 &amp; a_i \\end{matrix} \\] <p>\u5176\u4e2d \\(las\\) \u8868\u793a\u8fd9\u4e2a\u5b50\u5e8f\u5217\u7684\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\u3002</p> <p>\u53d1\u73b0 \u201c\u6700\u540e\u4e00\u4e2a\u4e0d\u540c\u7684\u70b9\u201d \u5c31\u662f\u8fd9\u4e9b\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20 \\(las\\)\uff0c\u56e0\u4e3a\u6240\u6709\u5b50\u5e8f\u5217\u7684\u5012\u6570\u7b2c\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u76f8\u540c\u7684\u3002</p> <p>\u6240\u4ee5\u5c31\u4ee5\u8fd9\u4e9b \\(las\\) \u4f5c\u4e3a\u5212\u5206\u4f9d\u636e\uff0c\u53ef\u4ee5\u5c06\u96c6\u5408 \\(dp_i\\) \u5212\u5206\u5982\u4e0b\uff1a</p> <p></p> <p>\u56fe\u4e2d\u6a59\u8272\u5b57\u4f53\u662f\u4ee3\u8868\u4e86\u8fd9\u4e2a\u5b50\u96c6\u7684\u72b6\u6001\uff0c\u7eff\u8272\u5b57\u4f53\u8bf4\u660e\u4e86\u8fd9\u4e2a\u5b50\u96c6\u4ee3\u8868\u4e86\u4ec0\u4e48\u3002</p> <p>\u5212\u5206\u5b8c\u4e4b\u540e\uff0c\u89c2\u5bdf \\(dp_i\\) \u8fd9\u4e2a\u96c6\u5408\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u662f \\(\\max\\)\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5728\u6240\u6709\u5212\u5206\u51fa\u6765\u7684\u96c6\u5408\u5bf9\u5e94\u7684\u72b6\u6001\u5f53\u4e2d\u53d6\u6700\u5927\u503c\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230\u65b9\u7a0b\uff1a</p> \\[ dp_{i} = \\max\\{dp_j\\} + 1 \\] <p>\u4f46\u662f\u6ce8\u610f\u5230\u8fd9\u4e9b\u5212\u5206\u51fa\u6765\u7684\u96c6\u5408\u4e0d\u4e00\u5b9a\u90fd\u80fd\u591f\u8f6c\u79fb\u5230\u96c6\u5408\uff0c\u6bd4\u5982\u5b58\u5728\u4e00\u4e2a \\(a_j &gt; a_i,j &lt; i\\) \u7684\u9006\u5e8f\u5bf9\uff0c</p> <p>\u90a3\u4e48 \\(dp_j\\) \u8fd9\u4e2a\u96c6\u5408\u5c31\u4e0d\u53ef\u80fd\u8f6c\u79fb\u5230 \\(dp_i\\)\uff0c\u56e0\u4e3a \\(dp_j\\) \u4ee3\u8868\u4e86 \u201d\u6240\u6709\u4ee5 \\(a_j\\) \u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u6784\u6210\u7684\u96c6\u5408\u201c\u3002</p> <p>\u800c\u8fd9\u4e2a\u96c6\u5408\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5b50\u5e8f\u5217\u63d0\u51fa\u6765\uff0c\u5728\u540e\u9762\u63a5\u4e0a \\(a_i\\) \u540e\uff0c\u5b83\u90fd\u4e0d\u4f1a\u518d\u662f\u4e00\u4e2a\u4e0a\u5347\u5b50\u5e8f\u5217\u4e86\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u5224\u65ad\u5212\u5206\u51fa\u6765\u7684\u96c6\u5408\u662f\u5426\u5408\u6cd5\uff0c\u65b9\u7a0b\u53d8\u4e3a\uff1a</p> \\[ dp_i = \\max\\{dp_j\\} + 1,a_i &gt; a_j \\] <p>\u800c\u5212\u5206\u96c6\u5408\u7684\u65f6\u5019\u53d1\u73b0\uff0c \\(a_i\\) \u672c\u8eab\u4e5f\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u51fa\u73b0\uff0c\u6240\u4ee5\u521d\u59cb\u5316\u7684\u65f6\u5019\u8981\u4ee4 \\(dp_i = 1\\)\u3002</p> <p>\u65b9\u7a0b\u53d8\u4e3a\uff1a</p> \\[ dp_i = \\max\\{dp_j + 1\\},a_i &gt; a_j,dp_i =1(\\text{initially}) \\] <p>\u628a \\(+1\\) \u653e\u8fdb \\(\\max\\) \u91cc\u662f\u4e3a\u4e86\u65b9\u4fbf\u8f6c\u79fb\u3002</p> <p>\u6839\u636e\u5b9a\u4e49\uff0c\u7b54\u6848\u662f \\(\\max\\{dp_i\\}\\)\u3002</p> <p>\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>for(int i = 1; i &lt;= n; ++i) dp[i] = 1;\n\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt; i; ++j) {\nif(a[i] &gt; a[j]) dp[i] = max(dp[i], dp[j] + 1);\n}\n}\n\nint res = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nres = max(res, dp[i]);\n}\n</code></pre> <p>\u590d\u6742\u5ea6 \\(\\text{O}(n^2)\\)\uff0c\u6bcf\u6b21\u5212\u5206\u679a\u4e3e\u5b50\u96c6\u8f6c\u79fb\u6d88\u8017 \\(\\text{O}(n)\\)\uff0c\u679a\u4e3e\u4ee5\u6240\u6709\u70b9\u4f5c\u4e3a\u7ed3\u5c3e\u7684\u60c5\u51b5\u6d88\u8017 \\(\\text{O}(n)\\)\u3002</p> <p>\u672c\u9898\u6240\u7ed9\u7684\u542f\u793a\uff1a</p> <ol> <li>DP \u7684\u672c\u8d28\u662f \u201d\u806a\u660e\u201c \u5730\u5212\u5206\u96c6\u5408\u3002</li> <li>DP \u7684\u521d\u59cb\u5316\u8981\u6839\u636e\u72b6\u6001\u672c\u8eab\u7684\u5b9a\u4e49\u548c\u8f6c\u79fb\u9700\u6c42\u6765\u8bbe\u7f6e\u3002</li> <li>DP \u5212\u5206\u7684\u91cd\u8981\u4f9d\u636e\u662f \u201d\u6700\u540e\u4e00\u4e2a\u4e0d\u540c\u70b9\u201c\uff0c\u601d\u8003\u65f6\u9700\u8981\u8003\u8651\u628a\u5f53\u524d\u96c6\u5408\u5c55\u5f00\u3002</li> <li>\u5212\u5206\u51fa\u7684\u5b50\u96c6\u4e0d\u4e00\u5b9a\u90fd\u80fd\u7528\u6765\u8f6c\u79fb\uff0c\u8981\u8fdb\u884c\u53ef\u884c\u6027\u7684\u5224\u65ad\u3002</li> </ol>"}, {"location": "algor/dp/basic/set-analytical-method/#lcs", "title": "LCS \u95ee\u9898", "text": "<p>\u7ed9\u5b9a\u4e24\u4e2a\u5e8f\u5217 \\(a\uff0cb\\) \uff0c\u6c42\u4ed6\u4eec\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u3002</p> <p>\\(|a|,|b| \\le 3000\\)\u3002</p> <p>\u672c\u9898\u7684\u8981\u7d20\u662f \u201d\u516c\u5171\uff0c\u6700\u957f\u201c\u3002</p> <p>\u8003\u8651\u5982\u4f55\u5904\u7406\u8fd9\u4e2a \u201d\u516c\u5171\u201c\uff0c\u53d1\u73b0\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\uff0c\u627e\u5230\u4e00\u7ec4 \\(i,j\\) \u4f7f\u5f97 \\(a_i = b_j\\) \uff0c\u7136\u540e\u8fdb\u884c\u8f6c\u79fb\u3002</p> <p>\u6240\u4ee5\u8bbe \\(dp_{i,j}\\) \u8868\u793a\u7531 \\(a[1\\sim i],b[1 \\sim j]\\) \u6784\u6210\u7684\u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u5c5e\u6027\u4e3a \\(\\max\\)\u3002</p> <p>\u53d1\u73b0\u96c6\u5408\u53ef\u4ee5\u5212\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u7b2c\u4e00\u4e2a\u90e8\u5206\u662f \\(a_i \\not = b_j\\) \u65f6\uff0c\u7531 \\(a[1 \\sim i],b[1\\sim j]\\) \u6784\u6210\u7684\u516c\u5171\u5b50\u5e8f\u5217\u3002</p> <p>\u7b2c\u4e8c\u90e8\u5206\u662f\u5f53 \\(a_i = b_j\\) \u65f6\uff0c\u7531 \\(a[1 \\sim i-1],b[1\\sim j-1]\\) \u6784\u6210\u7684\u516c\u5171\u5b50\u5e8f\u5217\u3002</p> <p>\u4e3a\u4ec0\u4e48\u662f\u7531 \\(a[1\\sim i-1],b[1 \\sim j-1]\\) \u6784\u6210\u7684\u5462\uff1f\u56e0\u4e3a\u6b64\u65f6 \\(a_i = b_j\\) \uff0c\u6240\u4ee5\u8fd9\u534a\u90e8\u5206\u6240\u4ee3\u8868\u7684\u96c6\u5408\u4e2d\u7684\u516c\u5171\u5b50\u5e8f\u5217\u90fd\u957f\u6210\u8fd9\u6837\uff1a</p> \\[ \\begin{matrix}\\dots &amp; ... &amp; a_i/b_j \\\\ \\dots &amp; ... &amp; a_i/b_j \\\\ \\dots &amp; ... &amp; a_i/b_j\\end{matrix} \\] <p>\u90a3\u4e48\u6b64\u65f6\u7684\u7b54\u6848\u5c31\u662f\u524d\u9762\u90e8\u5206\u7684\u957f\u5ea6\u7684\u6700\u5927\u503c \\(+1\\)\uff0c\u800c\u524d\u9762\u90a3\u90e8\u5206\u957f\u5ea6\u7684\u6700\u5927\u503c\u5b9e\u9645\u4e0a\u5c31\u662f\u7531 \\(a[1\\sim i-1],b[1\\sim j-1]\\) \u6784\u6210\u7684\u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u6700\u5927\u503c\uff0c\u96c6\u5408 \\(dp_{i-1,j-1}\\) \u5373\u53ef\u8868\u793a\u8fd9\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u8fd9\u90e8\u5206\u662f\u7531 \\(a[1\\sim i-1],b[1\\sim j-1]\\) \u6784\u6210\u7684\uff0c\u53ea\u662f\u8f6c\u79fb\u65f6 \\(a_i,b_j\\) \u4f1a\u6709\u8d21\u732e\u800c\u5df2\u3002</p> <p>\u7136\u540e\u8003\u8651\u7b2c\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u529e\u6cd5\u5bf9\u5b83\u7528\u4e00\u4e2a\u72b6\u6001\u76f4\u63a5\u8868\u793a\uff0c\u6240\u4ee5\u518d\u6b21\u5bf9\u4ed6\u8fdb\u884c\u5212\u5206\u3002</p> <p>\u56e0\u4e3a \\(a_i \\not= b_j\\)\uff0c\u6240\u4ee5\u6211\u4eec\u5206\u522b\u628a \\(a_i,b_j\\) \u8e22\u51fa\u53bb\uff0c\u7136\u540e\u8fdb\u884c\u8f6c\u79fb\u3002</p> <p>\u90a3\u4e48\u7b2c\u4e00\u90e8\u5206\u5c31\u53ef\u4ee5\u5212\u5206\u6210 \\(dp_{i,j-1},dp_{i-1,j}\\) \u4e24\u4e2a\u5b50\u96c6\uff0c\u56e0\u4e3a \\(dp_{i,j}\\) \u7684\u5c5e\u6027\u662f \\(\\max\\)\uff0c\u800c\u8f6c\u79fb\u65f6 \\(a_i \\not= b_j\\)\uff0c\u4e0d\u80fd\u63d0\u4f9b\u8d21\u732e\uff0c\u6240\u4ee5\u76f4\u63a5\u8ba9 \\(dp_{i, j}\\) \u7ee7\u627f \\(\\max\\{dp_{i,j-1},dp_{i-1,j}\\}\\) \u5373\u53ef\u3002</p> <p>\u5212\u5206\u5982\u4e0b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u5f97\u5230\u65b9\u7a0b\uff1a</p> \\[ dp_{i,j} = \\begin{cases}\\max(dp_{i-1,j},dp_{i,j-1}) &amp; a_i \\not= b_j\\\\ dp_{i-1,j-1} + 1 &amp; a_i = b_j\\end{cases} \\] <p>\u6839\u636e\u72b6\u6001\u5b9a\u4e49\uff0c\\(dp\\) \u5e94\u5f53\u5168\u90e8\u521d\u59cb\u5316\u4e3a \\(0\\)\uff0c\u7b54\u6848\u4e3a \\(dp_{n,n}\\)</p> <pre><code>memset(dp, 0, sizeof dp);\n\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= n; ++j) {\nif(a[i] == b[j]) dp[i][j] = dp[i - 1][j - 1] + 1;\nelse dp[i][j] = max(dp[i][j - 1], dp[i - 1][j]);\n}\n}\n\ncout &lt;&lt; dp[n][n] &lt;&lt; endl;\n// \u8fd9\u4e2a\u5199\u6cd5\u4fdd\u8bc1 |a| = |b| = n\u3002\n</code></pre> <p>\u590d\u6742\u5ea6 \\(\\text{O}(n^2)\\)\u3002</p> <p>\u672c\u9898\u6240\u7ed9\u7684\u542f\u793a\uff1a</p> <ol> <li>\u5212\u5206\u540e\u7684\u8f6c\u79fb\u5b9e\u9645\u4e0a\u662f\u5229\u7528 \u201d\u5b50\u96c6\u201c \u548c \u201d\u5f53\u524d\u4fe1\u606f\u201c \u7684\u7ed3\u5408\u3002</li> <li>\u5982\u679c\u5f53\u524d\u4fe1\u606f\u5360\u7528\u4e86\u96c6\u5408\u7684\u4e00\u90e8\u5206\uff0c\u5212\u5206\u65f6\u5e94\u5f53\u628a\u5b83\u5228\u6389\u3002</li> </ol>"}, {"location": "algor/dp/basic/set-analytical-method/#_2", "title": "\u6570\u5b57\u4e09\u89d2\u5f62\u95ee\u9898", "text": "<p>\u4e3a\u4e86\u65b9\u4fbf\u53d9\u8ff0\uff0c\u6b64\u5904\u6362\u6210\u4e86\u68cb\u76d8\u7c7b DP \u7684\u6a21\u677f\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a \\(n \\times m\\) \u7684\u77e9\u9635\uff0c\u521d\u59cb\u4f60\u5728 \\((1,1)\\)\uff0c\u6bcf\u6b21\u53ef\u4ee5\u5f80\u4e0b\u6216\u8005\u5f80\u53f3\u8d70\u4e00\u6b65\u3002</p> <p>\u95ee\u8d70\u5230 \\((n,m)\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u8bbe \\(dp_{i,j}\\) \u8868\u793a\u4ece \\((1,1)\\) \u8d70\u5230 \\((i,j)\\) \u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u6570\u91cf\uff08\u6ce8\u610f\u8fd9\u91cc\u53d8\u4e3a\u4e86\u6570\u91cf\uff09\u3002</p> <p>\u8003\u8651\u5212\u5206\u96c6\u5408 \\(dp_{i,j}\\)\u3002</p> <p>\u5c55\u5f00 \\(dp_{i,j}\\) \u4e2d\u7684\u6240\u6709\u65b9\u6848\uff0c\u53d1\u73b0\u4ed6\u4eec\u90fd\u957f\u8fd9\u6837\uff1a</p> \\[ \\begin{matrix}(1,1) \\to \\dots \\to (x_1,y_1) \\to (i,j) \\\\ (1,1) \\to \\dots \\to (x_2,y_2) \\to (i,j)\\end{matrix} \\] <p>\u53d1\u73b0 \u201d\u6700\u540e\u4e00\u4e2a\u4e0d\u540c\u70b9\u201c \u5c31\u662f \u201d\u4e0a\u4e00\u6b65\u201c \u6240\u5904\u7684\u4f4d\u7f6e \\((x,y)\\)\u3002</p> <p>\u800c\u672c\u9898\u8981\u6c42\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\uff0c\u6240\u4ee5\u53ea\u6709\u4ece\u4e0a\u9762\u548c\u5de6\u9762\u8d70\u8fc7\u6765\u4e24\u79cd\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u96c6\u5408\u53ef\u4ee5\u5212\u5206\u6210 \\(dp_{i,j-1},dp_{i-1,j}\\) \u8fd9\u4e24\u90e8\u5206\u3002</p> <p>\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b\uff1a</p> \\[ dp_{i,j} = dp_{i,j} + (dp_{i-1,j} + dp_{i, j-1}) \\] <p>\u5176\u4e2d\u6839\u636e\u72b6\u6001\u5b9a\u4e49\uff0c\\(dp_{1,1}\\) \u5e94\u5f53\u521d\u59cb\u5316\u4e3a \\(1\\)\uff0c\u5176\u5b83\u7684\u5e94\u5f53\u4e3a \\(0\\)\u3002</p> <p>\u4f46\u662f\u8981\u6ce8\u610f\u5224\u65ad\u662f\u5426\u8d8a\u754c\uff0c\u6240\u4ee5\u6b64\u65f6\u53ef\u4ee5\u5229\u7528\u53e6\u4e00\u79cd DP \u65b9\u5f0f\uff0c\u987a\u63a8\u3002</p> <p>\u4e5f\u5c31\u662f\u8003\u8651\u628a\u5f53\u524d\u96c6\u5408\u7684\u65b9\u6848\u6570\u52a0\u5230\u6240\u6709\u5212\u5206\u540e\u76f4\u63a5\u542b\u6709\u5b83\u7684\u96c6\u5408\u7684\u65b9\u6848\u6570\u5f53\u4e2d\u3002</p> <p>\u5f00\u5927\u6570\u7ec4\u540e\u5c31\u4e0d\u7528\u5224\u8fb9\u754c\u4e86\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u65b0\u7684\u65b9\u7a0b\uff1a</p> \\[ dp_{i+1,j} = dp_{i+1,j}+dp_{i,j},dp_{i,j+1} = dp_{i,j+1} + dp_{i,j} \\] <p>\u521d\u59cb\u5316\u4e0d\u53d8\u3002</p> <p>\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801\uff1a</p> <pre><code>memset(dp, 0, sizeof dp);\ndp[1][1] = 1;\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= m; ++j) {\ndp[i + 1][j] += dp[i][j];\ndp[i][j + 1] += dp[i][j];\n}\n}\ncout &lt;&lt; dp[n][m] &lt;&lt; endl;\n</code></pre> <p>\u672c\u9898\u6240\u7ed9\u7684\u542f\u793a\uff1a</p> <ol> <li>\u4e0d\u6b62\u53ef\u4ee5\u5212\u5206\u540e\u7528\u5b50\u96c6\u6765\u66f4\u65b0\u5f53\u524d\u96c6\u5408\uff0c\u4e5f\u53ef\u4ee5\u5212\u5206\u540e\u7528\u5f53\u524d\u96c6\u5408\u53bb\u66f4\u65b0\u8ba9\u5f53\u524d\u72b6\u6001\u4f5c\u4e3a\u5b50\u96c6\u7684\u96c6\u5408\u3002</li> <li>DP \u7684\u5c5e\u6027\u4e0d\u6b62 \\(\\min,\\max\\)\uff0c\u8fd8\u6709\u6570\u91cf\uff0c\u671f\u671b\uff0c\u6982\u7387\u7b49\u3002</li> </ol>"}, {"location": "algor/dp/opt/convex-optimize-old/", "title": "Convex optimize old", "text": ""}, {"location": "algor/dp/opt/convex-optimize-old/#_1", "title": "\u6cdb\u5316", "text": "<p>\u8fd9\u4e00\u7c7b\u95ee\u9898\u548c\u5355\u8c03\u961f\u5217\u4f18\u5316DP\u6709\u5171\u540c\u7684\u5730\u65b9\u3002</p> <p>\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u601d\u60f3\u601d\u8003\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u5185\u5bb9\u3002</p> <p>\u8003\u8651\u5355\u8c03\u961f\u5217\u4f18\u5316DP\u91cc\u9762\u90a3\u4e2a 1D1D \u7684\u5f0f\u5b50\u3002</p> \\[f_{i}=\\min\\limits_{L(i)\\le j \\le R(i)}\\{f_j+val(i,j)\\}\\] <p>\u5176\u4e2d \\(val(i,j)\\) \u662f\u5173\u4e8e \\(i,j\\) \u7684\u591a\u9879\u5f0f\u3002</p> <p>\u5e76\u4e14\u53ef\u4ee5\u5206\u88c2\u4e3a\u4e24\u4e2a\u5206\u522b\u53ea\u548c \\(i,j\\) \u76f8\u5173\u7684\u90e8\u5206\u3002</p> <p>\u4f46\u5982\u679c \\(val(i,j)\\) \u5f53\u4e2d\u6709\u540c\u65f6\u548c \\(i,j\\) \u76f8\u5173\u7684\u90e8\u5206\uff08\u4e58\u79ef\u548c\u505a\u9664\u6cd5\uff09\uff0c\u90a3\u4e48\u5355\u8c03\u961f\u5217\u4f18\u5316DP\u5c31\u4e0d\u518d\u9002\u7528\u3002</p> <p>\u6b64\u65f6\u5c31\u9700\u8981\u4f7f\u7528\u659c\u7387\u4f18\u5316DP\u3002</p> <p>\u800c\u51b3\u7b56\u96c6\u5408\u7684\u4e0a\u4e0b\u754c \\([L(i),R(i)]\\) \u7684\u53d8\u5316\u5219\u51b3\u5b9a\u4e86\u8f85\u52a9\u659c\u7387\u4f18\u5316\u4f7f\u7528\u7684\u7b97\u6cd5\u3002</p> <p>\u5982\u679c\u51b3\u7b56\u96c6\u5408\u662f\u5355\u8c03\u53d8\u5316\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5355\u8c03\u961f\u5217\u3002</p> <p>\u5426\u5219\u9700\u8981\u6839\u636e\u60c5\u51b5\u4f7f\u7528\u4e8c\u5206\u6216\u8005\u5e73\u8861\u6811\uff0c\u8fd9\u91cc\u7684\u9009\u62e9\u5219\u662f\u53d6\u51b3\u4e8e\u51b3\u7b56\u96c6\u5408\u7684\u53d8\u5316\u662f\u5728\u5934\u5c3e\u653e\u5165\u8fd8\u662f\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u3002</p>"}, {"location": "algor/dp/opt/convex-optimize-old/#_2", "title": "\u4f8b\u9898", "text": "<p>\\(n\\) \u4e2a\u4efb\u52a1\u6392\u6210\u4e00\u4e2a\u5e8f\u5217\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u7b49\u5f85\u5b8c\u6210\uff08\u987a\u5e8f\u4e0d\u5f97\u6539\u53d8\uff09\uff0c\u8fd9 \\(n\\) \u4e2a\u4efb\u52a1\u88ab\u5206\u6210\u82e5\u5e72\u6279\uff0c\u6bcf\u6279\u5305\u542b\u76f8\u90bb\u7684\u82e5\u5e72\u4efb\u52a1\u3002 \u4ece\u96f6\u65f6\u523b\u5f00\u59cb\uff0c\u8fd9\u4e9b\u4efb\u52a1\u88ab\u5206\u6279\u52a0\u5de5\uff0c\u7b2c \\(i\\) \u4e2a\u4efb\u52a1\u5355\u72ec\u5b8c\u6210\u6240\u9700\u7684\u65f6\u95f4\u4e3a \\(t_i\\)\u3002\u5728\u6bcf\u6279\u4efb\u52a1\u5f00\u59cb\u524d\uff0c\u673a\u5668\u9700\u8981\u542f\u52a8\u65f6\u95f4 \\(s\\)\uff0c\u800c\u5b8c\u6210\u8fd9\u6279\u4efb\u52a1\u6240\u9700\u7684\u65f6\u95f4\u662f\u5404\u4e2a\u4efb\u52a1\u9700\u8981\u65f6\u95f4\u7684\u603b\u548c\uff08\u540c\u4e00\u6279\u4efb\u52a1\u5c06\u5728\u540c\u4e00\u65f6\u523b\u5b8c\u6210\uff09\u3002 \u6bcf\u4e2a\u4efb\u52a1\u7684\u8d39\u7528\u662f\u5b83\u7684\u5b8c\u6210\u65f6\u523b\u4e58\u4ee5\u4e00\u4e2a\u8d39\u7528\u7cfb\u6570 \\(c_i\\)\u3002\u8bf7\u786e\u5b9a\u4e00\u4e2a\u5206\u7ec4\u65b9\u6848\uff0c\u4f7f\u5f97\u603b\u8d39\u7528\u6700\u5c0f\u3002</p>"}, {"location": "algor/dp/opt/convex-optimize-old/#1-", "title": "\u505a\u6cd51 - \u66b4\u529b", "text": "<p>\u4fdd\u8bc1 \\(n \\le 500,1\\le s \\le 50,1\\le t_i,c_i \\le 100\\)</p> <p>\u8003\u8651\u6700\u66b4\u529b\u7684\u65b9\u5f0f\uff0c\u8bbe \\(f_{i,j}\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u4efb\u52a1\uff0c\u5206\u6210 \\(j\\) \u6279\u6267\u884c\u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u662f\u603b\u8d39\u7528\u6700\u5c0f\u3002</p> <p>\u679a\u4e3e\u4e0a\u4e00\u6279\u4efb\u52a1\u7684\u6700\u540e\u4e00\u4e2a\u70b9\u5373\u53ef\u3002</p> <p>\\(f_{i,j}=\\min\\limits_{0\\le k &lt; i}\\{f_{k,j-1}+c[k+1\\sim i]\\times (t[k+1\\sim i]+s\\times j)\\}\\)</p> <p>\u5904\u7406\u524d\u7f00\u548c\u53ef\u4ee5\u505a\u5230 \\(\\text{O}(n^3)\\)</p>"}, {"location": "algor/dp/opt/convex-optimize-old/#2-", "title": "\u505a\u6cd52 - \u8d39\u7528\u63d0\u524d\u8ba1\u7b97", "text": "<p>\u4fdd\u8bc1 \\(n\\le 5000,1\\le s \\le 50,1\\le t_i,c_i \\le 100\\)</p> <p>\u53d1\u73b0\u4e0a\u4e00\u4e2a\u65b9\u7a0b\u7684\u74f6\u9888\u5728\u4e8e \\(j\\) \uff0c\u9700\u8981\u77e5\u9053\u542f\u52a8\u4e86\u591a\u5c11\u6b21\uff0c\u56e0\u4e3a \\(s\\) \u9020\u6210\u7684\u8d21\u732e\u4f1a\u548c\u542f\u52a8\u6b21\u6570\u6210\u6b63\u6bd4\u3002</p> <p>\u53d1\u73b0\u5982\u679c\u4e00\u6279\u4efb\u52a1\u786e\u5b9a\u88ab\u5206\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u4e4b\u540e\u7684\u6240\u6709\u4efb\u52a1\u7684\u7ed3\u675f\u65f6\u95f4\u81ea\u7136\u90fd\u4f1a\u589e\u52a0 \\(s\\)\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u5148\u628a\u8fd9\u4e2a \\(s\\) \u52a0\u5230\u540e\u9762\uff08\u8d39\u7528\u63d0\u524d\u8ba1\u7b97\uff09</p> <p>\u56e0\u4e3a\u9898\u76ee\u6ca1\u6709\u5206\u591a\u5c11\u7ec4\u7684\u9650\u5236\uff0c\u8bbe \\(f_i\\) \u8868\u793a\u628a\u524d \\(i\\) \u4e2a\u4efb\u52a1\u5206\u6210\u82e5\u5e72\u4e2a\u6279\u6b21\u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\u679a\u4e3e\u4e0a\u4e00\u7ec4\u7684\u6700\u540e\u7aef\u70b9\u53ef\u4ee5\u5f97\u5230\uff1a</p> <p>\\(f_i=\\min\\limits_{0\\le j &lt; i}\\{f_j+s\\times c[j+1\\sim n]+t[1\\sim i] \\times c[j+1 \\sim i]\\}\\)</p> <p>\u9884\u5904\u7406\u524d\u7f00\u548c\u53ef\u4ee5\u505a\u5230 \\(\\text{O}(n^2)\\)</p>"}, {"location": "algor/dp/opt/convex-optimize-old/#3-", "title": "\u505a\u6cd53 - \u659c\u7387\u4f18\u5316", "text": "<p>\u4fdd\u8bc1 \\(n \\le 3\\times 10^5,1\\le s \\le 512,1\\le t_i,c_i \\le 512\\)</p> <p>\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6 \\(\\text{O}(n)\\)\u3002</p> <p>\u53d1\u73b0\u8fd9\u4e2a\u65b9\u7a0b\u5c31\u662f 1D1D \u7684\u5f62\u5f0f\uff0c\u7528\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u91cd\u65b0\u5199\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u7a0b\uff1a</p> <p>\\(f_i=\\min\\limits_{0\\le j &lt; i}\\{f_j+s\\times (sumc[n]-sumc[j])+sumt[i]\\times(sumc[i]-sumc[j])\\}\\) </p> <p>\u53d1\u73b0\u540e\u9762\u7684 \\(val(i,j)\\) \u8fd9\u4e2a\u591a\u9879\u5f0f\u662f </p> <p>\\(s\\times (sumc[n]-sumc[j])+sumt[i]\\times(sumc[i]-sumc[j])\\)</p> <p>\u628a \\(i\\) \u76f8\u5173\u9879\uff0c \\(j\\) \u76f8\u5173\u9879\uff0c\\(i,j\\) \u76f8\u5173\u9879\u5206\u79bb\uff1a</p> <p>\u5e38\u9879\uff1a\\(s\\times sumc[n]\\)</p> <p>\\(i\\) \u76f8\u5173\u9879\uff1a \\(sumt[i]\\times sumc[i]\\)</p> <p>\\(j\\) \u76f8\u5173\u9879\uff1a\\(-s\\times sumc[j]\\)</p> <p>\\(i,j\\) \u76f8\u5173\u9879\uff1a \\(-sumt[i]\\times sumc[j]\\)</p> <p>\u628a\u5916\u5c42\u5faa\u73af\u56fa\u5b9a\u65f6\u5019\u7684\u5e38\u91cf\u63d0\u51fa\u53bb</p> <p>\\(f_i=s\\times sumc[n]+sumt[i]\\times sumc[i]+\\min\\limits_{0 \\le j &lt; i}\\{f_j -s\\times sumc[j]-sumt[i]\\times sumc[j]\\}\\)</p> <p>\u628a \\(\\min\\) \u53bb\u6389\uff0c\u628a\u5173\u4e8e\u51b3\u7b56\u70b9 \\(j\\) \u7684\u770b\u4f5c\u53d8\u91cf\u3002</p> <p>\\(f_j=(s+sumt[i])\\times sumc[j]+f_i-sumt[i]\\times sumc[i]-s\\times sumc[n]\\)</p> <p>\u5982\u679c\u628a \\(f_j\\) \u5f53\u4f5c \\(y\\) \uff0c\\(sumc[j]\\) \u770b\u4f5c \\(x\\)\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230\u4e00\u6761\u76f4\u7ebf \\(y=kx+b\\)</p> <p>\u5176\u4e2d \\(b=f_i-sumt[i]\\times sumc[i]-s\\times sumc[n]\\)</p> <p>\u5b9e\u9645\u4e0a\u8fd9\u6761\u76f4\u7ebf\u5e94\u5f53\u662f\u8fd9\u6837\u7684\u5f62\u5f0f\uff1a</p> <p>\\(y\\) \u662f\u53ea\u548c \\(j\\) \u76f8\u5173\u7684\u9879\uff0c\u7136\u540e \\(kx\\) \u5c31\u662f\u628a \\(i\\times j\\) \u8fd9\u79cd\u9879\u653e\u8fc7\u6765\uff0c\u5176\u4e2d \\(k\\) \u5bf9\u5e94 \\(i\\) \u7684\u4e00\u6b21\u9879\uff0c\\(x\\) \u5bf9\u5e94 \\(j\\) \u7684\u4e00\u6b21\u9879\u3002</p> <p>\u5269\u4e0b\u7684\u90e8\u5206\u5c31\u662f \\(b\\) \u4e86\u3002</p> <p>\u5982\u679c\u9047\u5230\u4e24\u4e2a \\(i\\times j\\) \u9879\uff0c\u53ef\u4ee5\u8003\u8651\u628a\u4ed6\u4eec\u62c6\u5f00\uff0c\u7136\u540e\u518d\u5206\u522b\u653e\u5230\u5bf9\u5e94\u4f4d\u7f6e\u53bb\u3002</p> <p>\u6bd4\u5982 \\(a_ia_j+b_ib_j\\) \u8fd9\u79cd\uff0c\u5c31\u628a\u4ed6\u62c6\u6210 \\((a_i+b_i)(a_j+b_j)-a_ib_i-a_jb_j\\)\u3002</p> <p>\u7b2c\u4e00\u90e8\u5206\u653e\u5230 \\(kx\\) \u9879\uff0c\u7b2c\u4e8c\u90e8\u5206\u653e\u5230 \\(b\\) \u9879\uff0c\u7b2c\u4e09\u90e8\u5206\u653e\u5230 \\(y\\) \u9879\u5373\u53ef\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u659c\u7387\u4f18\u5316\u5904\u7406 \\(i\\times j\\) \u7684\u65b9\u5f0f\u5c31\u662f\u628a\u5b83\u5f53\u4f5c\u76f4\u7ebf\u65b9\u7a0b\u4e2d\u7684 \\(kx\\)\u3002</p> <p>\u628a \\(j=0\\to n-1\\) \u7684 \u6bcf\u4e2a\u4e8c\u5143\u7ec4 \\((sumc[j],f_j)\\) \u5f53\u4f5c\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0a\u7684\u4e00\u4e2a\u70b9 \\((x,y)\\)\uff08\u8fd9\u5c31\u662f\u8981\u53bb\u6389 \\(\\min\\) \u7684\u539f\u56e0\uff09</p> <p>\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u76f4\u7ebf\u4e2d \\(x\\) \u4f4d\u7f6e\u7684\u5f0f\u5b50\u5f53\u4f5c\u5750\u6807\u7cfb\u91cc\u7684 \\(x\\) \u5750\u6807\uff0c\\(y\\) \u4f4d\u7f6e\u7684\u5f0f\u5b50\u5f53\u4f5c\u5750\u6807\u7cfb\u91cc\u7684 \\(y\\) \u5750\u6807\uff09</p> <p>\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u4e00\u4e2a\u4e1c\u897f\uff1a</p> <p></p> <p>\u53d1\u73b0\u76f4\u7ebf \\(y=kx+b\\) \u7684\u659c\u7387\u662f \\((s+sumt[i])\\)</p> <p>\u662f\u4e00\u4e2a\u5173\u4e8e \\(i\\) \u7684\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684 \\(i\\) \uff0c\u6211\u4eec\u5f97\u5230\u7684\u659c\u7387\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> <p>\u5f53\u7136\u5982\u679c\u51fa\u73b0 \\(sumt[i]\\) \u5148\u589e\u518d\u51cf\u5c11\u5bfc\u81f4\u6709\u4e24\u4e2a\u4e0d\u540c\u7684 \\(i\\) \u7684 \\(sumt[i]\\) \u4e00\u6837\uff0c\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002</p> <p>\u56de\u60f3\u4e00\u4e0b\u95ee\u9898\uff1a\u6700\u5c0f\u5316 \\(f_n\\)\uff0c\u5bf9\u5e94\u5230\u6bcf\u4e2a\u51b3\u7b56\u7684\u95ee\u9898\u5c31\u662f\u6700\u5c0f\u5316 \\(f_i\\)\u3002</p> <p>\u800c \\(f_i\\) \u5904\u4e8e\u622a\u8ddd \\(b\\) \u4e4b\u4e2d\uff0c\u5f53 \\(y,x,k\\) \u56fa\u5b9a\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u8ba9 \\(b\\) \u6700\u5c0f\uff0c\\(f_i\\) \u5c31\u6700\u5c0f\u3002</p> <p>\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(i\\) \uff0c\u62ff\u4e00\u6761\u659c\u7387\u4e3a \\(k\\) \u7684\u76f4\u7ebf\u4ece\u4e0b\u5f80\u4e0a\u5e73\u79fb\uff0c\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u70b9\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\u3002</p> <p></p> <p>\u4f46\u662f\u5c31\u7b97\u8fd9\u6837\uff0c\u8fd8\u662f\u9700\u8981\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684 \\(j\\) \uff0c\u590d\u6742\u5ea6\u4f9d\u65e7\u662f \\(n^2\\) \u7ea7\u522b\u3002</p> <p>\u90a3\u4e48\u600e\u4e48\u4f18\u5316\uff1f</p> <p>\u968f\u4fbf\u627e\u4e09\u4e2a \\(x\\) \u5750\u6807\u9012\u589e\u7684\u70b9 \\(i,j,k\\)</p> <p>\u8fde\u63a5 \\(i\\to j,j \\to k\\)</p> <p>\u53d1\u73b0\u53ea\u53ef\u80fd\u6709\u5982\u4e0b\u7684\u4e24\u79cd\u60c5\u51b5\uff08\u4e09\u70b9\u5171\u7ebf\u7684\u4e0d\u7b97\uff09\u3002</p> <p></p> <p>\u53d1\u73b0\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\\(j\\) \u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u53ef\u80fd\u6210\u4e3a\u6700\u4f18\u51b3\u7b56\u3002</p> <p>\u5f62\u5f0f\u5316\u7684\u63cf\u8ff0\u5c31\u662f \\(k_{i,j}&gt;k_{j,k}\\) \uff0c\u90a3\u4e48 \\(j\\) \u4e0d\u53ef\u80fd\u6210\u4e3a\u6700\u4f18\u51b3\u7b56\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5904\u7406\u51fa\u6240\u6709\u7684\u4e0d\u53ef\u80fd\u6210\u4e3a\u6700\u4f18\u51b3\u7b56\u7684\u51b3\u7b56\u70b9\uff0c\u7136\u540e\u8f6c\u79fb\u5c31\u5728\u5269\u4e0b\u7684\u90e8\u5206\u8fdb\u884c\u5373\u53ef\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u5728\u672c\u9898\u5c31\u662f\u5728\u7ef4\u62a4\u4e00\u4e2a \\(x\\) \u5355\u8c03\u9012\u589e\uff0c\\(k\\) \u5355\u8c03\u9012\u589e\u7684 \u4e0b\u51f8\u58f3\uff0c</p> <p></p> <p>\u5177\u4f53\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u4e0b\u51f8\u58f3\u5462\uff1f</p> <p>\u8003\u8651\u4ece \\(0 \\to n-1\\) \u66b4\u529b\u626b\u4e00\u6b21\uff0c\u6bcf\u6b21\u65b0\u589e\u4e00\u4e2a\u70b9\u90fd\u9700\u8981\u628a\u5b83\u548c\u4e0a\u4e00\u4e2a\u88ab\u52a0\u5165\u7684\u70b9\uff0c\u4e0a\u4e0a\u4e2a\u88ab\u52a0\u5165\u7684\u70b9\u76f8\u4e92\u4e4b\u95f4\u8fde\u8fb9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u66f4\u4f18\uff0c\u53bb\u6389\u4e0a\u4e00\u4e2a\uff0c\u628a\u8fd9\u4e2a\u70b9\u653e\u8fdb\u6765\u3002</p> <p>GIF\uff1a</p> <p></p> <p>\u56e0\u4e3a\u5728\u672c\u9898\uff0c\u659c\u7387\u5728 \\(i\\) \u589e\u52a0\u7684\u65f6\u5019\u4e00\u5b9a\u589e\u52a0\uff08\u56e0\u4e3a \\(sumt[i]\\) \u80af\u5b9a\u5355\u8c03\u4e0a\u5347\uff09</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u628a\u524d\u9762\u5df2\u7ecf\u51b3\u7b56\u8fc7\u7684\u5220\u9664\uff0c\u5728\u540e\u9762\u8fdb\u884c\u51b3\u7b56\u3002</p> <p>\u4e5f\u5c31\u662f\u961f\u5934\u548c\u961f\u5934\u52a0\u4e00\u7684\u659c\u7387\u5c0f\u4e8e \\(s+sumt[i]\\)\uff0c\u5c31\u628a\u961f\u5934\u5f39\u51fa\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconstexpr int si=3e5+10;\n\n#define ll long long\nll f[si],sumt[si],sumc[si];   int q[si],n,S;\n\nint main() {   scanf(\"%d%d\",&amp;n,&amp;S);  for(register int i=1;i&lt;=n;i++){   int t,c; scanf(\"%d%d\",&amp;t,&amp;c);   sumt[i]=sumt[i-1]+t,sumc[i]=sumc[i-1]+c;   } memset(f,0x3f,sizeof(f)),f[0]=0;   int head=1,tail=1; q[1]=0;   for(register int i=1;i&lt;=n;i++){   while(head&lt;tail &amp;&amp; (f[q[head+1]]-f[q[head]])&lt;=(S+sumt[i])*(sumc[q[head+1]]-sumc[q[head]])) head++;   f[i]=f[q[head]]-(S+sumt[i])*sumc[q[head]]+sumt[i]*sumc[i]+S*sumc[n];   while(head&lt;tail &amp;&amp; (f[q[tail]]-f[q[tail-1]])*(sumc[i]-sumc[q[tail]])&gt;=(f[i]-f[q[tail]])*(sumc[q[tail]]- sumc[q[tail-1]])) tail--;   q[++tail]=i;   } return printf(\"%lld\\n\",f[n]),0;\n}\n</code></pre> <p>\u6211\u8fd9\u4efd\u4ee3\u7801\u662f\u5199\u7684\u7ef4\u62a4 \\([head, tail)\\) \u8fd9\u4e2a\u534a\u95ed\u534a\u5f00\u533a\u95f4\u3002</p> <p>\u6240\u4ee5\u521d\u59cb\u7684\u65f6\u5019 <code>head = 1, tail = 1</code>\u3002</p> <p>\u4f46\u662f\u6211\u5982\u679c\u76f4\u63a5\u6539\u6210\u7ef4\u62a4\u95ed\u533a\u95f4 \\([head, tail]\\) \u5c31\u4f1a\u5bc4\u3002</p> <p>\u53ef\u80fd\u662f\u4ee3\u7801\u79fb\u52a8\u7aef\u70b9\u7684\u65f6\u5019\u51fa\u4e86\u7ec6\u8282\u95ee\u9898\uff0c\u4e4b\u540e\u518d\u770b\u5427\u3002</p> <p>\u590d\u6742\u5ea6 \\(\\text{O}(n)\\)\u3002</p> <p>\u8fd9\u9898\u7684 \\(\\text{O}(n^2)\\) \u505a\u6cd5\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u65b9\u7a0b\uff0c</p> <p>\u5c31\u662f\u628a\u5f53\u524d\u6279\u6b21\u4efb\u52a1\u7684\u8d21\u732e\u5e26\u7740 \\(S\\) \u4e5f\u76f4\u63a5\u5f80\u540e\u9762\u52a0\u4e86\uff1a</p> \\[dp_{i} = \\min\\limits_{0\\le j &lt; i}\\{dp_j + (S + sumt[i] - sumt[j]) \\times (sumc[n] - sumc[j])\\}\\] <p>\u8fd9\u4e2a\u4e5f\u662f\u53ef\u4ee5\u659c\u7387\u4f18\u5316\u7684\uff0c\u7528\u4e0a\u9762\u603b\u7ed3\u7684\u627e\u76f4\u7ebf\u65b9\u7a0b\u7684\u6bcf\u4e00\u90e8\u5206\u7684\u65b9\u6cd5\u5373\u53ef\u3002</p> <p>\u6027\u8d28\u4e5f\u5dee\u4e0d\u591a\u3002</p>"}, {"location": "algor/dp/opt/convex-optimize-old/#4-", "title": "\u505a\u6cd54 - \u4e8c\u5206 + \u659c\u7387\u4f18\u5316", "text": "<p>\u6761\u4ef6\u540c3\uff0c\\(t_i\\) \u53ef\u80fd\u662f\u8d1f\u6570\u3002</p> <p>\u53d1\u73b0 \\(sumt\\) \u4e0d\u518d\u662f\u5355\u8c03\u4e0a\u5347\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u5229\u7528\u5355\u8c03\u961f\u5217\u76f4\u63a5\u5f39\u6389\u961f\u5934\u5197\u6742\u3002</p> <p>\u51b3\u7b56\u7684\u65f6\u5019\u5c31\u9700\u8981\u5728\u6574\u4e2a\u51f8\u58f3\u4e0a\u4e8c\u5206\u3002</p> <p>\u53ea\u9700\u8981\u627e\u5230\u8fd9\u6837\u7684\u4e00\u4e2a\u8282\u70b9\u5373\u53ef\uff1a</p> <p>\u5982\u679c\u67d0\u4e2a\u9876\u70b9\u5de6\u4fa7\u7684\u7ebf\u6bb5\u659c\u7387\u6bd4 \\(k\\) \u5c0f\uff0c\u53f3\u4fa7\u6bd4 \\(k\\) \u5927\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u662f\u6700\u4f18\u51b3\u7b56\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconstexpr int si=3e5+10;\n\ninline __int128 read(){\n__int128 x=0,f=1; char ch=getchar();\nwhile(ch&lt;'0'||ch&gt;'9'){\nif(ch=='-') f=-1;\nch=getchar();\n}\nwhile(ch&gt;='0'&amp;&amp;ch&lt;='9') x=(x&lt;&lt;1)+(x&lt;&lt;3)+(ch^48),ch=getchar();\nreturn x*f;\n}\ninline void write(__int128 x){\nif(x&lt;0) putchar('-'),x=-x;\nif(x&gt;9) write(x/10);\nputchar(x%10+'0');\n}\n\n__int128  f[si],sumt[si],sumc[si];   int q[si],n,S,head,tail;\ninline int Mylower_bound(int slope){\nif(head==tail) return q[head];\nint l=head,r=tail;\nwhile(l&lt;r){\nint mid=(l+r)&gt;&gt;1;\nif(f[q[mid+1]]-f[q[mid]]&lt;=slope*(sumc[q[mid+1]]-sumc[q[mid]])) l=mid+1;\nelse r=mid;\n} return q[l];\n}\n\nint main() {   scanf(\"%d%d\",&amp;n,&amp;S);  for(register int i=1;i&lt;=n;i++){   __int128 t,c; t=read(),c=read();  sumt[i]=sumt[i-1]+t,sumc[i]=sumc[i-1]+c;   } memset(f,0x3f,sizeof(f)),f[0]=0;   head=1,tail=1,q[1]=0;   for(register int i=1;i&lt;=n;i++){  int qwq=Mylower_bound(S+sumt[i]);\nf[i]=f[qwq]-(S+sumt[i])*sumc[qwq]+sumt[i]*sumc[i]+S*sumc[n];   while(head&lt;tail &amp;&amp; (f[q[tail]]-f[q[tail-1]])*(sumc[i]-sumc[q[tail]])&gt;=(f[i]-f[q[tail]])*(sumc[q[tail]]- sumc[q[tail-1]])) tail--;   q[++tail]=i;   } return write(f[n]),0;\n} // \u672c\u9898\u4f1a\u7206 long long, use __int128.\n</code></pre>"}, {"location": "algor/dp/opt/convex-optimize-old/#5-", "title": "\u505a\u6cd55 - \u5e73\u8861\u6811 + \u659c\u7387\u4f18\u5316", "text": "<p>\u5982\u679c \\(c_i\\) \u4e5f\u6709\u53ef\u80fd\u662f\u8d1f\u6570\uff1f</p> <p>\u9700\u8981\u5728\u51f8\u58f3\u7684\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\uff0c\u67e5\u8be2\uff0c\u6240\u4ee5\u9700\u8981\u5e73\u8861\u6811\u3002</p> <p>\u8fd8\u4e0d\u592a\u4f1a\u3002</p>"}, {"location": "algor/dp/opt/convex-optimize/", "title": "\u659c\u7387\u4f18\u5316", "text": ""}, {"location": "algor/dp/opt/convex-optimize/#_1", "title": "\u6cdb\u5316", "text": "<p>\u53ef\u4ee5\u659c\u7387\u4f18\u5316\u7684\u65b9\u7a0b\u901a\u5e38\u5177\u6709\u4ee5\u4e0b\u5f62\u5f0f\uff1a</p> <p>\\(dp(i) = \\min\\limits_{j = L(i)}^{R(i)}\\{dp(j) + val(i, j)\\}\\)\uff0c\u5176\u4e2d \\(val(i, j)\\) \u4e3a\u4e00\u4e2a\u5173\u4e8e \\(i, j\\) \u7684\u591a\u9879\u5f0f\uff0c\\(L(i), R(i)\\) \u4e3a\u4e00\u4e2a\u5173\u4e8e \\(i\\) \u7684\u51fd\u6570\uff0c\u7528\u4e8e\u9650\u5236 \\(j\\) \u7684\u8303\u56f4\u3002</p> <p>\u5e76\u4e14 \\(val(i, j)\\) \u5b58\u5728\u5f62\u5982 \\(i \\times j\\) \u7684\u9879\uff0c\u4e0e\u5355\u8c03\u961f\u5217\u4f18\u5316\u7684\u4ec5\u6709 \\(i, j\\) \u9879\u4e0d\u540c\u3002</p> <p>\u659c\u7387\u4f18\u5316\u7684\u601d\u60f3\u662f\uff0c\u5148\u62c6\u6389 \\(L(i), R(i)\\) \u7684\u9650\u5236\uff0c\u5c06\u6240\u6709\u51b3\u7b56\u70b9\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u5c06\u65b9\u7a0b\u8f6c\u5316\u4e3a\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\u6765\u8fdb\u884c\u51b3\u7b56\uff0c\u5728\u51b3\u7b56\u65f6\u518d\u52a0\u4e0a \\(L(i), R(i)\\) \u7684\u9650\u5236\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5efa\u7acb\u4ee5\u4e0b\u6620\u5c04\uff1a</p> <ul> <li>\u5c06\u4ec5\u548c \\(j\\) \u76f8\u5173\u7684\u9879\u770b\u4f5c \\(y\\)\uff0c\u8bb0\u8fd9\u4e9b\u9879\u7ec4\u6210\u7684\u591a\u9879\u5f0f\u4e3a \\(y_i\\)\uff0c\u5f62\u5982 \\(dp(j) + v(j) + \\dots\\)\u3002</li> <li>\u5c06\u548c \\(i,j\\) \u540c\u65f6\u76f8\u5173\u7684\u9879\u770b\u4f5c \\(k,x\\)\uff0c\u5176\u4e2d \\(i\\) \u8fd9\u4e00\u90e8\u5206\u4f5c\u4e3a \\(k\\)\uff0c\u8bb0\u4e3a \\(k_i\\)\uff0c\\(j\\) \u8fd9\u4e00\u90e8\u5206\u4f5c\u4e3a \\(x\\)\uff0c\u8bb0\u4e3a \\(x_j\\)\uff0c\u5f0f\u5b50\u5f62\u5982 \\(C_1\\times(C_2 - v(i)) \\times w(j)\\)\uff08\u5176\u4e2d \\(C_1,C_2\\) \u4e3a\u5e38\u91cf\uff09\uff0c\u90a3\u4e48 \\(k_i = C_1\\times(C_2 - v(i)), x_j = w(j)\\)</li> <li>\u5c06\u4ec5\u548c \\(i\\) \u76f8\u5173\u7684\u9879\u770b\u4f5c \\(b\\)\uff0c\u8bb0\u4e3a \\(b_i\\)\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u628a\u5e38\u91cf\u4e5f\u7b97\u8fdb\u8fd9\u4e00\u90e8\u5206\uff0c\u5f0f\u5b50\u5f62\u5982 \\(dp(i) + v(i) \\times w(i) + C\\)\uff0c\u6211\u4eec\u8981\u6700\u5c0f\u5316\u7684\u5c31\u662f\u8fd9\u4e00\u90e8\u5206\uff08\u672c\u8d28\u662f\u6700\u5c0f\u5316 \\(dp(i)\\)\uff0c\u5176\u5b83\u7684\u662f\u5e38\u91cf\u6240\u4ee5\u65e0\u6240\u8c13\u3002\uff09</li> </ul> <p>\uff08\u4ee5\u4e0a\u7684\u5f0f\u5b50\u53ea\u662f\u505a\u4e00\u4e2a\u53c2\u8003\u7406\u89e3\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6765\u6539\u53d8\u3002\uff09</p> <p>\u7136\u540e\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff0c\u7ed9\u5b9a\u4e00\u5806\u5e73\u9762\u4e0a\u7684\u70b9 \\((x_j, y_j)\\)\uff0c\u5bf9\u4e8e\u4e00\u6761\u76f4\u7ebf \\(y = k_ix + b_i\\)\uff0c\u6211\u4eec\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u6ee1\u8db3 \\(L(i) \\le j \\le R(i)\\) \u9650\u5236\u7684 \\((x_j, y_j)\\) \u4ee3\u5165\u76f4\u7ebf\uff0c\u4f7f\u5f97 \\(b_i\\) \u6700\u5c0f\u3002</p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5728\u53d6 \\(\\min\\) \u65f6\uff0c\u53ea\u6709\u4e0b\u51f8\u58f3\u4e0a\u7684\u70b9\u53ef\u4ee5\u4f5c\u4e3a\u6700\u4f18\u7684\u51b3\u7b56\u70b9\uff1a</p> <p></p> <p>\uff08\u8fd9\u662f\u4e0b\u9762\u4f8b\u9898\u7684\u4f8b\u5b50\uff0c\u5b83\u7684 \\(y_j = dp(j), x_j = sumc(j)\\)\uff09</p> <p>\u4e8e\u662f\uff0c\u5728 \\(k_i\\) \u968f \\(k\\) \u5355\u8c03\u9012\u589e\uff0c\u4e14\u53ea\u9700\u8981\u5728\u5c3e\u90e8\u63d2\u5165\u51b3\u7b56\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u5355\u8c03\u961f\u5217\u6765\u7ef4\u62a4\u4e0b\u51f8\u58f3\u4e0a\u7684\u70b9\u8fdb\u884c\u51b3\u7b56\u5c31\u884c\u4e86\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u8bbe \\(K(u, v)\\) \u8868\u793a\u7ecf\u8fc7 \\((x_u, y_u),(x_v,y_v)\\) \u7684\u76f4\u7ebf\u659c\u7387\uff0c\u6211\u4eec\u4fdd\u8bc1\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5355\u8c03\u961f\u5217 \\(q(l, r)\\)\uff0c\u6ee1\u8db3 \\(\\forall i\\in (l,r)\\)\uff0c\u6709 \\(K(i - 1, i) &lt; K(i, i + 1)\\)\u3002</p> <p>\u7136\u540e\u51b3\u7b56\u5b8c\u4e00\u4e2a\u70b9 \\(i\\) \u4e4b\u540e\u8003\u8651\u63d2\u5165 \\((x_i, y_i)\\)\uff0c\u8fd9\u6837\u5c31\u80fd\u6ee1\u8db3\u524d\u7f00\u4e0b\u6807\u9650\u5236 \\(j &lt; i\\) \u4e86\uff08\u601d\u60f3\u7c7b\u4f3c\u4e8c\u7ef4\u6570\u70b9\uff09\uff0c\u5982\u679c\u662f\u66f4\u4e00\u822c\u7684 \\(L(i), R(i)\\) \u968f \\(i\\) \u5355\u8c03\u9012\u589e\u7684\u7ea6\u675f\uff0c\u5c31\u5728\u5355\u8c03\u961f\u5217\u4e2d\u6392\u9664\u5197\u6742\u5373\u53ef\uff0c\u6574\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u4e0b\u56fe\uff1a</p> <p></p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684 \\(k_i\\)\uff0c\u4f7f\u5f97\u7b54\u6848 \\(b_i\\) \u6700\u5c0f\u7684 \\(j\\)\uff0c\u4e00\u5b9a\u6ee1\u8db3 \\(K(i - 1, i) &lt; k_i &lt; K(i, i + 1)\\)\uff0c\u4e8e\u662f\u6211\u4eec\u4e0d\u65ad\u5f39\u6389\u961f\u5934\uff0c\u76f4\u5230\u627e\u5230\u8fd9\u4e2a\u70b9\u5373\u53ef\u3002</p> <p>\u5f53\u7136\uff0c\u5982\u679c \\(k_i\\) \u7684\u53d8\u5316\u4e0d\u662f\u5355\u8c03\u7684\uff08\u6ca1\u6cd5\u4f7f\u7528\u5355\u8c03\u961f\u5217\uff09\uff0c\u4ea6\u6216\u662f\u9700\u8981\u652f\u6301\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165/\u5220\u9664\u51b3\u7b56\uff0c\u53c8\u6216\u8005\u662f \\(L(i), R(i)\\) \u7684\u53d8\u5316\u5f88\u4e0d\u597d\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4e8c\u5206/\u5e73\u8861\u6811/cdq\u5206\u6cbb/\u674e\u8d85\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u51f8\u58f3\uff0c\u8fd9\u4e2a\u5728\u4e0b\u9762\u4f1a\u63d0\u5230\u3002</p>"}, {"location": "algor/dp/opt/convex-optimize/#_2", "title": "\u4f8b\u9898", "text": "<p>\\(n\\) \u4e2a\u4efb\u52a1\u6392\u6210\u4e00\u4e2a\u5e8f\u5217\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u7b49\u5f85\u5b8c\u6210\uff08\u987a\u5e8f\u4e0d\u5f97\u6539\u53d8\uff09\uff0c\u8fd9 \\(n\\) \u4e2a\u4efb\u52a1\u88ab\u5206\u6210\u82e5\u5e72\u6279\uff0c\u6bcf\u6279\u5305\u542b\u76f8\u90bb\u7684\u82e5\u5e72\u4efb\u52a1\u3002</p> <p>\u4ece\u96f6\u65f6\u523b\u5f00\u59cb\uff0c\u8fd9\u4e9b\u4efb\u52a1\u88ab\u5206\u6279\u52a0\u5de5\uff0c\u7b2c \\(i\\) \u4e2a\u4efb\u52a1\u5355\u72ec\u5b8c\u6210\u6240\u9700\u7684\u65f6\u95f4\u4e3a \\(t_i\\)\u3002\u5728\u6bcf\u6279\u4efb\u52a1\u5f00\u59cb\u524d\uff0c\u673a\u5668\u9700\u8981\u542f\u52a8\u65f6\u95f4 \\(s\\)\uff0c\u800c\u5b8c\u6210\u8fd9\u6279\u4efb\u52a1\u6240\u9700\u7684\u65f6\u95f4\u662f\u5404\u4e2a\u4efb\u52a1\u9700\u8981\u65f6\u95f4\u7684\u603b\u548c\uff08\u540c\u4e00\u6279\u4efb\u52a1\u5c06\u5728\u540c\u4e00\u65f6\u523b\u5b8c\u6210\uff09\u3002 </p> <p>\u6bcf\u4e2a\u4efb\u52a1\u7684\u8d39\u7528\u662f\u5b83\u7684\u5b8c\u6210\u65f6\u523b\u4e58\u4ee5\u4e00\u4e2a\u8d39\u7528\u7cfb\u6570 \\(c_i\\)\u3002\u8bf7\u786e\u5b9a\u4e00\u4e2a\u5206\u7ec4\u65b9\u6848\uff0c\u4f7f\u5f97\u603b\u8d39\u7528\u6700\u5c0f\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a</p> <p>I. \\(n \\le 500,1\\le s \\le 50,1\\le t_i,c_i \\le 100\\)</p> <p>II. \\(n\\le 5000,1\\le s \\le 50,1\\le t_i,c_i \\le 100\\)</p> <p>III. \\(n \\le 3\\times 10^5,1\\le s \\le 512,1\\le t_i,c_i \\le 512\\)</p> <p>IV. \u6761\u4ef6\u540c III\uff0c\\(t_i\\) \u53ef\u80fd\u662f\u8d1f\u6570\u3002</p> <p>V. \u6761\u4ef6\u540c IV, \\(c_i\\) \u53ef\u80fd\u662f\u8d1f\u6570\u3002</p>"}, {"location": "algor/dp/opt/convex-optimize/#i", "title": "I. \u66b4\u529b", "text": "<p>\u8bbe \\(dp(i, j)\\) \u8868\u793a\uff0c\u8003\u8651\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u5206\u4e86 \\(j\\) \u6bb5\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u6839\u636e\u5b9a\u4e49\uff0c\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4f4d\u7f6e \\(k\\)\uff0c\u53ef\u4ee5\u5f97\u5230\u65b9\u7a0b\uff1a\\(dp(i, j) = \\min\\limits_{k = 0}^{i - 1}\\{dp(k, j - 1) + \\sum\\limits_{l = k + 1}^i c(l) \\times (s \\times j + \\sum\\limits_{l = 1}^{i} t(i))\\}\\)\u3002</p> <p>\u9884\u5904\u7406\u524d\u7f00\u548c\uff0c\u53ef\u4ee5\u505a\u5230 \\(O(n^3)\\)\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 500; const int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, s;\nint t[si], c[si];\nint dp[si][si], st[si], sc[si];\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(dp, 0x3f, sizeof dp);\n\ncin &gt;&gt; n &gt;&gt; s, dp[0][0] = st[0] = sc[0] = 0;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; t[i] &gt;&gt; c[i], st[i] = st[i - 1] + t[i], sc[i] = sc[i - 1] + c[i];\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= i; ++j) {\nfor(int k = 0; k &lt; i; ++k) {\ndp[i][j] = min(dp[i][j], dp[k][j - 1] + (sc[i] - sc[k]) * (s * j + st[i]));\n}\n}\n}\nint ans = inf;\nfor(int i = 1; i &lt;= n; ++i) {\nans = min(ans, dp[n][i]);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/dp/opt/convex-optimize/#ii", "title": "II. \u8d39\u7528\u63d0\u524d\u8ba1\u7b97", "text": "<p>\u6ce8\u610f\u5230\u672c\u9898\u5e76\u4e0d\u8981\u6c42\u5206\u591a\u5c11\u6bb5\uff0c\u7528 Fence \u7684\u601d\u8def\u53ef\u4ee5\u6539\u8fdb\u4e00\u4e0b\uff1a</p> <p>\u8bbe \\(dp(i)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u5206\u4e86\u82e5\u5e72\u6bb5\u7684\u4ee3\u4ef7\u6700\u5c0f\u503c\uff0c\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4f4d\u7f6e \\(j\\) \u5373\u53ef\u8f6c\u79fb\u3002</p> <p>\u4f46\u662f\u8f6c\u79fb\u7684\u65f6\u5019\u5e76\u4e0d\u80fd\u77e5\u9053\u673a\u5668\u542f\u52a8\u4e86\u591a\u5c11\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u79cd\u53eb\u8d39\u7528\u63d0\u524d\u8ba1\u7b97\u7684\u601d\u60f3\uff0c\u77e5\u9053\u8fd9\u91cc\u5df2\u7ecf\u542f\u52a8\u4e86\u4e00\u6b21\u4e86\uff0c\u5c31\u628a\u5b83\u4f1a\u5bf9\u4e4b\u540e\u7684\u6240\u6709\u72b6\u6001\u505a\u7684\u8d21\u732e\u76f4\u63a5\u52a0\u5230\u5f53\u524d\u72b6\u6001\u91cc\u9762\uff0c\u4e5f\u5c31\u662f\uff0c\u5bf9\u4e8e\u540e\u9762\u7684\u6240\u6709\u4efb\u52a1\uff0c\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e9b\u4efb\u52a1\u53c8\u591a\u51fa\u4e86 \\(s\\) \u7684\u65f6\u95f4\uff0c\u90a3\u4e48\u51b3\u7b56\u5230\u540e\u9762\u7684\u4efb\u52a1\u65f6\uff0c\u5f71\u54cd\u5c31\u88ab\u6d88\u9664\u4e86\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230\uff1a\\(dp(i) = \\min\\limits_{j = 0}^{i - 1} \\{dp(j) + \\sum\\limits_{k = j + 1}^{n} c(k) \\times s + \\sum\\limits_{k = j + 1}^{i} c(k) \\times \\sum\\limits_{k = 1}^{i} t(i)\\}\\)</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u662f\u628a\u4e0a\u9762\u90a3\u4e2a\u65b9\u7a0b\u7684 \\(s \\times j \\times \\sum\\limits_{l = k + 1}^{i} c(l)\\) \u79fb\u52a8\u5230\u524d\u9762\u7684\u72b6\u6001\u8fdb\u884c\u8ba1\u7b97\u4e86\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n^2)\\)\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e3 + 10;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, s;\nint t[si], c[si];\nint st[si], sc[si];\nint dp[si];\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(dp, 0x3f, sizeof dp);\n\ndp[0] = st[0] = sc[0] = 0, cin &gt;&gt; n &gt;&gt; s;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; t[i] &gt;&gt; c[i], st[i] = st[i - 1] + t[i], sc[i] = sc[i - 1] + c[i];\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 0; j &lt; i; ++j) {\ndp[i] = min(dp[i], dp[j] + (sc[n] - sc[j]) * s + (sc[i] - sc[j]) * st[i]);\n}\n}\ncout &lt;&lt; dp[n] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/dp/opt/convex-optimize/#iii", "title": "III. \u659c\u7387\u4f18\u5316", "text": "<p>\u8003\u8651\u7528\u524d\u7f00\u548c\u5199\u4e0b II \u7684\u5f0f\u5b50\uff1a</p> <p>\\(dp(i) = \\min\\limits_{j = 0}^{i - 1}\\{dp(j) + (sc(n) - sc(j)) \\times s + (sc(i) - sc(j)) \\times st(i)\\}\\)</p> <p>\u4e58\u5f00\uff1a\\(dp(i) = \\min\\limits_{j = 0}^{i - 1}\\{dp(j) + sc(n) \\times s - sc(j) \\times s + sc(i) \\times st(i) - sc(j) \\times st(i)\\}\\)</p> <p>\u5957\u7528\u659c\u7387\u4f18\u5316\u7684\u677f\u5b50\uff0c\u6211\u4eec\u53bb\u6389 \\(\\min\\)\uff1a</p> <p>\\(dp(i) = dp(j) + sc(n) \\times s - sc(j) \\times s + sc(i) \\times st(i) - sc(j) \\times st(i)\\)</p> <p>\u5199\u6210\u4e00\u6b21\u51fd\u6570 \\(b = -kx + y\\)\u7684\u5f62\u5f0f\uff1a</p> <p>\\(dp(i) - sc(i) \\times st(i) - sc(n) \\times s = -(st(i) + s) \\times sc(j) + dp(j)\\)</p> <p>\u6240\u4ee5 \\((x, y)\\) \u8fd9\u4e9b\u70b9\u5c31\u662f \\((sc(j), dp(j))\\) \u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u8ba9 \\(dp(i)\\) \u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u5c31\u662f\u8ba9\u4ee5 \\((st(i) + s)\\) \u4e3a\u659c\u7387\u7684\u76f4\u7ebf\u7ecf\u8fc7\u4e00\u4e2a\u6700\u4f18\u7684 \\((sc(j), dp(j))\\)\u3002</p> <p>\u56e0\u4e3a\u4e0b\u6807\u9650\u5236\u662f \\(j \\in [0, i)\\)\uff0c\\(k_i\\) \u968f \\(i\\) \u5355\u8c03\u9012\u589e\uff0c\u4e14\u53ea\u9700\u8981\u5728\u672b\u5c3e\u63d2\u5165\u51b3\u7b56\uff0c\u6240\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u51b3\u7b56\u5b8c\u63d2\u5165\u5355\u8c03\u961f\u5217\u5c31\u597d\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e3 + 10;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, s;\nint t[si], c[si];\nint st[si], sc[si], dp[si];\nint q[si], l, r;\n\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nst[0] = sc[0] = 0;\nmemset(q, 0, sizeof q), l = 1, r = 1;\nmemset(dp, 0x3f, sizeof dp), dp[0] = 0;\n// \u8ba9 (x0, y0) \u5165\u961f\uff08j \u53ef\u4ee5\u53d6\u5230 0\uff09\n// \u961f\u5217\u672c\u8eab\u8fd8\u662f\u95ed\u533a\u95f4\uff0c\u4f46\u662f\u4e3a\u4e86\u4fdd\u8bc1 l + 1, r - 1 \u4e0d\u4f1a\u8d8a\u754c\uff0c\u6240\u4ee5\u5199\u7684\u662f l &lt; r.\n\ncin &gt;&gt; n &gt;&gt; s;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; t[i] &gt;&gt; c[i], sc[i] = sc[i - 1] + c[i], st[i] = st[i - 1] + t[i];\nfor(int i = 1; i &lt;= n; ++i) {\nwhile(l &lt; r &amp;&amp;  dp[q[l + 1]] - dp[q[l]] &lt;= (st[i] + s) * (sc[q[l + 1]] - sc[q[l]]))\n++l;\ndp[i] = dp[q[l]] - (st[i] + s) * sc[q[l]] + sc[i] * st[i] + sc[n] * s; while(l &lt; r &amp;&amp; (dp[q[r]] - dp[q[r - 1]]) * (sc[i] - sc[q[r]]) &gt;= (dp[i] - dp[q[r]]) * (sc[q[r]] - sc[q[r - 1]]))\n--r;\nq[++r] = i;\n}\n// \u4e3a\u4e86\u907f\u514d\u7cbe\u5ea6\u95ee\u9898\uff0c\u76f4\u63a5\u628a\u659c\u7387\u7684\u5f0f\u5b50\u5199\u51fa\u6765\uff0c\u5206\u6bcd\u4e58\u5230\u5bf9\u9762\u3002\n\ncout &lt;&lt; dp[n] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/dp/opt/convex-optimize/#iv", "title": "IV. \u4e8c\u5206", "text": "<p>\u6ce8\u610f\u5230 \\(t_i\\) \u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u610f\u5473\u7740 \\(\\exists i, st(i) &lt; 0\\)\u3002</p> <p>\u4e0b\u6807\u9650\u5236\u4f9d\u7136\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\u6765\u6ee1\u8db3\uff0c\u4f46\u662f\u56e0\u4e3a \\(k_i\\) \u4e0d\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6ca1\u6cd5\u76f4\u63a5\u6254\u5230\u5355\u8c03\u961f\u5217\u91cc\u9762\u5747\u644a \\(O(1)\\) \u8f6c\u79fb\uff08\u4e0d\u7136\u4f60\u66f4\u65b0\u5b8c \\(i - 1\\) \u7684\u65f6\u5019\u53ef\u80fd\u628a \\(i\\) \u7684\u6700\u4f18\u9009\u62e9\u7ed9\u5f39\u6389\uff09\u3002</p> <p>\u6ce8\u610f\u5230 \\(sc(i)\\) \u4ecd\u65e7\u662f\u5355\u8c03\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u652f\u6301\u5728\u672b\u5c3e\u63d2\u5165\u51b3\u7b56\u70b9.</p> <p>\u90a3\u4e48\u6211\u4eec\u4ecd\u65e7\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u8fd9\u4e2a\u51f8\u58f3\uff0c\u4f46\u662f\u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u5728\u51f8\u58f3\u4e0a\u76f4\u63a5\u4e8c\u5206\u4e00\u4e2a\u4f4d\u7f6e \\(e\\)\uff0c\u4f7f\u5f97 \\(K(e - 1, e) &lt; k_i &lt; K(e, e + 1)\\) \u800c\u4e0d\u662f\u76f4\u63a5\u53d6\u961f\u5934\u66f4\u65b0\uff0c\u6ce8\u610f\u9700\u8981\u7279\u6b8a\u5224\u65ad\u5934\u5c3e\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u5e94\u8be5\u662f\u5224 \\(q(mid), q(mid + 1)\\) \u6784\u6210\u7684\u76f4\u7ebf\u659c\u7387\uff0c\u4e0d\u7136\u4ee5\u8fd9\u6837\u7684\u4e8c\u5206\u65b9\u5f0f\u4f1a\u51fa\u9519\uff08\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u624b\u6a21\u4e00\u4e0b\uff09\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cctype&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing i128 = __int128_t;\n\ntemplate &lt;typename __Tp&gt; void read(__Tp &amp;x) {\nint f = x = 0; char ch = getchar();\nfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = 1;\nfor (; isdigit(ch); ch = getchar()) x = (x &lt;&lt; 1) + (x &lt;&lt; 3) + (ch ^ 48);\nif (f) x = -x;\n}\nvoid read(char &amp;ch) { for (ch = getchar(); isspace(ch); ch = getchar()); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void read(__Tp1 &amp;x, __Tp2 &amp;... y) { read(x), read(y...); }\ntemplate &lt;typename __Tp&gt; void write(__Tp x) {\nif (x &lt; 0) putchar('-'), x = -x;\nif (x &gt; 9) write(x / 10);\nputchar(x % 10 + 48);\n}\nvoid write(char ch) { putchar(ch); }\nvoid write(const char *s) { for (; *s; ++s) putchar(*s); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void write(__Tp1 x, __Tp2 ... y) { write(x), write(y...); }\n\nconst int si = 3e5 + 10;\n\nint n, q[si], s, l, r;\ni128 dp[si], st[si], sc[si];\n\nint find(int slope) {\nif(l == r) return q[l];\nint L = l, R = r;\nwhile(L &lt; R) {\nint mid = (L + R) &gt;&gt; 1;\nif(dp[q[mid + 1]] - dp[q[mid]] &lt;= slope * (sc[q[mid + 1]] - sc[q[mid]]))\nL = mid + 1;\nelse R = mid;\n}\nreturn q[L];\n}\n\nint main() {\n\n// cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\nmemset(q, 0, sizeof q);\nmemset(dp, 0x3f, sizeof dp);\ndp[0] = 0, l = 1, r = 1;\n\nread(n, s);\nfor(int i = 1; i &lt;= n; ++i) {\ni128 t, c; read(t, c);\nst[i] = st[i - 1] + t, sc[i] = sc[i - 1] + c;\n}\nfor(int i = 1; i &lt;= n; ++i) {\nint p = find(s + st[i]);\ndp[i] = dp[p] - (s + st[i]) * sc[p] + st[i] * sc[i] + s * sc[n];\nwhile(l &lt; r &amp;&amp; (dp[q[r]] - dp[q[r - 1]]) * (sc[i] - sc[q[r]]) &gt;= (dp[i] - dp[q[r]]) * (sc[q[r]] - sc[q[r - 1]]))\n--r;\nq[++r] = i;\n}\n\nwrite(dp[n], endl);\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/dp/opt/convex-optimize/#v-cdq", "title": "V. \u5e73\u8861\u6811/CDQ \u5206\u6cbb/\u674e\u8d85\u6811", "text": "<p>\u6ce8\u610f\u5230 \\(\\exists i, sc(i) &lt; 0\\)\uff0c\u4e5f\u5c31\u662f\u8bf4 \\(sc(i)\\) \u4e5f\u4e0d\u662f\u5355\u8c03\u9012\u589e\u7684\u4e86\uff0c\u6211\u4eec\u53ef\u80fd\u5728\u4efb\u610f\u7684\u4f4d\u7f6e\u63d2\u5165\u51b3\u7b56\u70b9\u3002</p> <p>\u4e0b\u6807\u9650\u5236\u8fd8\u662f\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\u6765\u6ee1\u8db3\uff0c\u90a3\u4e48\u6709\u4e00\u4e2a\u4e0d\u52a8\u8111\u5b50\u7684\u505a\u6cd5\uff0c\u76f4\u63a5\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u51f8\u58f3\uff0c\u4e8c\u5206\u8f6c\u5316\u4e3a\u5728\u5e73\u8861\u6811\u4e0a\u4e8c\u5206\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u806a\u660e\u4e00\u70b9\u7684\u505a\u6cd5\u662f\u4f7f\u7528 CDQ \u5206\u6cbb\u3002</p> <p>\u5c31\u662f\u8bf4\uff0cCDQ \u5206\u6cbb\u7684\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u5c31\u662f\uff0c\u628a\u4e00\u4e2a\u52a8\u6001\u95ee\u9898\u8f6c\u5316\u4e3a\u9759\u6001\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u601d\u60f3\uff0c\u5c06\u9700\u8981\u52a8\u6001\u63d2\u5165\u7684\u51f8\u58f3\u8f6c\u5316\u4e3a\u9759\u6001\u7684\u51f8\u58f3\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe \\(\\text{Solve}(l, r)\\) \u8868\u793a\u8ba1\u7b97 \\([l, r]\\) \u7684 \\(dp(i)\\)\uff0c\u5206\u4e09\u6b65\uff1a</p> <ol> <li>\u9012\u5f52\u8ba1\u7b97 \\(\\text{Solve}(l, mid)\\)\u3002</li> <li>\u6b64\u65f6 \\(dp(l \\sim mid)\\) \u5df2\u7ecf\u8ba1\u7b97\u51fa\u6765\uff0c\u6211\u4eec\u8003\u8651\u7ef4\u62a4 \\([l, mid]\\) \u8fd9\u4e00\u6bb5\u7684\u6240\u6709\u51b3\u7b56\u70b9\u6784\u6210\u7684\u51f8\u58f3\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u961f\u5217\uff0c\u4f46\u662f\u8981\u5148\u6309\u7167 \\(x\\) \u6392\u5e8f\uff08\u56e0\u4e3a\u672c\u6765\u5c31\u662f\u4e71\u5e8f\u561b\uff0c\u4f60\u73b0\u5728\u53ea\u66f4\u65b0 \\([mid + 1, r]\\) \u7684\uff0c\u524d\u9762\u7684\u4e0b\u6807\u987a\u5e8f\u6ca1\u5565\u5f71\u54cd\uff0c\u6392\u5e8f\u4e5f\u6ca1\u4e8b\uff0c\u53ea\u8981\u6700\u540e\u590d\u539f\u4e00\u4e0b\u5c31\u597d\u4e86\uff09\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u4e8e \\(dp(mid + 1\\sim r)\\)\uff0c\u8003\u8651\u4ece\u8fd9\u4e2a\u51f8\u58f3\u4e0a\u66f4\u65b0\u7b54\u6848\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u4e8c\u5206\uff08\u56e0\u4e3a\u659c\u7387\u4e0d\u662f\u5355\u8c03\u7684\u561b\uff09\u3002</li> <li>\u9012\u5f52\u8ba1\u7b97 \\(\\text{Solve}(mid + 1, r)\\)\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u201c\u4e2d\u5e8f\u904d\u5386\u201d\uff0c\u6240\u4ee5 dp \u8f6c\u79fb\u7684\u6b63\u786e\u6027\u662f\u6709\u4fdd\u8bc1\u7684\uff0c\u800c \\(dp(mid + 1, r)\\) \u663e\u7136\u4e0d\u53ef\u80fd\u53ea\u5728 \\([l, mid]\\) \u4e0a\u53d6\u5230\u6700\u4f18\uff0c\u8fd9\u4e2a\u9012\u5f52\u8ba1\u7b97\u7684\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa \\(dp(mid + 1, r)\\)\u3002</li> </ol> <p>\u5982\u679c\u6709\u5220\u9664\u64cd\u4f5c\uff0c\u6216\u8005\u8bf4\u5bf9\u4e8e\u4e00\u4e2a \\(i\\)\uff0c\u5b83\u7684 \\(L(i), R(i)\\) \u53d8\u5316\u5f88\u4e0d\u5747\u5300\uff0c\u6211\u4eec\u4ecd\u65e7\u53ef\u4ee5\u4f7f\u7528 CDQ \u5206\u6cbb\uff0c\u6bcf\u6b21\u5728\u51f8\u58f3\u4e0a\u4e8c\u5206\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u53d6\u6ee1\u8db3 \\([u, v] \\in [L(i), R(i)]\\) \u7684\u4e00\u6bb5\u6765\u4e8c\u5206\u5c31\u884c\u4e86\u3002</p> <p>\u5982\u679c\u51fa\u9898\u4eba\u6bd4\u8f83**\uff0c\u7ed9\u4f60\u6765\u4e00\u4e2a\u4e2d\u95f4\u6263\u6389\u4e00\u4e2a\u7684\u5220\u9664\uff0c\u5c31\u6bd4\u8f83\u6076\u4fd7\uff0c\u4e0d\u8fc7\u597d\u50cf\u53ef\u4ee5\u8f6c\u5316\u6210 CDQ \u91cc\u9762\u7684 \u4fee\u6539-\u8be2\u95ee\u5173\u7cfb\uff1f\u662f\u4e0d\u662f\u8fd8\u53ef\u4ee5\u7ebf\u6bb5\u6811\u5206\u6cbb + \u674e\u8d85\u6811\uff1f\u4e0d\u8fc7\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u5e73\u8861\u6811\u7ef4\u62a4\u5c31\u662f\u6700\u7b80\u5355\u7684\u4e86\uff0c\u8fd9\u91cc\u7528 Leafy Tree \u53ef\u80fd\u4f1a\u6bd4\u8f83\u7b80\u5355\u3002</p> <p>\u674e\u8d85\u6811\u7684\u8bdd\uff0c\u56e0\u4e3a\u4e0d\u652f\u6301\u5220\u9664\u6240\u4ee5\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027\uff0c\u6240\u4ee5\u5927\u90e8\u5206\u65f6\u5019\u6211\u4eec\u8fd8\u662f\u4f7f\u7528 CDQ \u5206\u6cbb\uff0c\u4e0d\u8fc7\u8fd9\u9898\u56e0\u4e3a \\(L(i), R(i)\\) \u7684\u9650\u5236\u6bd4\u8f83 trivial \u6240\u4ee5\u674e\u8d85\u6811\u4e5f\u662f\u53ef\u4ee5\u505a\u7684\u3002</p> <p>Tips\uff1a\u8bb0\u5f97\u5224\u659c\u7387\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u54e6\u3002</p> Code(CDQ,\u4e0d\u5e26\u5220\u9664\u64cd\u4f5c) <p>\u4ee3\u7801\u6682\u7565\uff0c\u5df2\u7ecf\u67e5\u51fa\u9519\u4e86\uff0c\u627e\u4e2a\u65f6\u95f4\u6765\u5199\u3002</p>"}, {"location": "algor/dp/opt/convex-optimize/#_3", "title": "\u603b\u7ed3", "text": "<p>\u659c\u7387\u4f18\u5316\u7684\u601d\u60f3\u5728\u6cdb\u5316\u91cc\u5df2\u7ecf\u8bf4\u4e86\uff0c\u5728\u8fd9\u91cc\u63d0\u4e00\u63d0\u5bf9\u4e8e\u51b3\u7b56\u70b9\u96c6\u5408\u7684\u7ef4\u62a4\u65b9\u5f0f\uff1a</p> <ul> <li>\u5bf9\u4e8e \\(L(i), R(i)\\) \u7684\u4e0b\u6807\u9650\u5236\uff1a<ul> <li>\u5982\u679c\u662f\u7c7b\u4f3c\u672c\u9898\u7684 \\(0 \\le j &lt; i\\)\uff0c\u8bf4\u660e\u4e0d\u9700\u8981\u5220\u9664\u51b3\u7b56\u70b9\uff0c\u800c\u4e14\u6bcf\u6b21\u53ea\u4f1a\u5728\u5c3e\u90e8\u63d2\u5165\u51b3\u7b56\uff0c\u6211\u4eec\u679a\u4e3e\u5c31\u597d\u4e86</li> <li>\u5982\u679c \\(L(i), R(i)\\) \u662f\u968f \\(i\\) \u5355\u8c03\u53d8\u5316\u7684\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5355\u8c03\u961f\u5217\u6765\u6392\u9664\u5197\u6742</li> <li>\u5982\u679c\u662f\u6ca1\u5565\u5355\u8c03\u6027\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u822c\u8981\u652f\u6301\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u5220\u9664\u51b3\u7b56\u70b9\uff0c\u5c31\u9700\u8981\u4f7f\u7528\u5e73\u8861\u6811\u6216\u8005 CDQ \u5206\u6cbb\u3002</li> </ul> </li> <li>\u5bf9\u4e8e\u659c\u7387\u7684\u9650\u5236\uff0c\u53ea\u9700\u8981\u770b\u659c\u7387\u662f\u5426\u5355\u8c03\u9012\u589e\u5373\u53ef\uff1a<ul> <li>\u5982\u679c\u659c\u7387\u968f \\(i\\) \u5355\u8c03\u9012\u589e\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5355\u8c03\u961f\u5217\u53d6\u961f\u5934\u8f6c\u79fb\u3002</li> <li>\u5982\u679c\u659c\u7387\u4e0d\u968f \\(i\\) \u5355\u8c03\u9012\u589e\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5728\u51f8\u58f3\u4e0a\u4e8c\u5206\u7b54\u6848\u627e\u5230\u6700\u4f18\u51b3\u7b56\u70b9\u3002</li> </ul> </li> <li>\u5bf9\u4e8e \\(x_j\\) \u7684\u9650\u5236\uff0c\u53ea\u9700\u8981\u770b\u5b83\u662f\u5426\u968f \\(j\\) \u5355\u8c03\u9012\u589e\u5373\u53ef\u3002<ul> <li>\u5982\u679c\u5b83\u968f \\(j\\) \u5355\u8c03\u9012\u589e\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\u51b3\u7b56\u5c31\u884c\u3002</li> <li>\u5982\u679c\u5b83\u4e0d\u968f \\(j\\) \u5355\u8c03\u9012\u589e\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5e73\u8861\u6811 / CDQ \u5206\u6cbb\u6765\u652f\u6301\u63d2\u5165\u51b3\u7b56\u70b9\u7684\u64cd\u4f5c\uff0c\u6ce8\u610f CDQ \u7ef4\u62a4\u7684\u65f6\u5019\u8fd8\u8981\u5bf9\u524d\u4e00\u534a\u6392\u5e8f\u3002</li> </ul> </li> </ul> <p>Last but not least: \u5982\u679c\u4f7f\u7528\u4ea4\u53c9\u76f8\u4e58\u6765\u907f\u514d\u7cbe\u5ea6\u95ee\u9898\uff0c\u8981\u5c0f\u5fc3\u6570\u636e\u8303\u56f4\uff0c\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u6d6e\u70b9\u6570\uff0c\u8981\u8bb0\u5f97\uff0ceps \u4e0d\u8981\u5f00\u592a\u5c0f\u4e86\uff0c\u8981\u89c6\u60c5\u51b5\u800c\u5b9a\u3002</p>"}, {"location": "algor/dp/opt/convex-optimize/#_4", "title": "\u4e60\u9898", "text": "<p>\u89c1 Vjudge \u659c\u7387\u4f18\u5316\u4e13\u9898</p>"}, {"location": "algor/dp/opt/data-structure-optimize/", "title": "\u6570\u636e\u7ed3\u6784\u4f18\u5316", "text": ""}, {"location": "algor/dp/opt/data-structure-optimize/#_1", "title": "\u4f8b\u9898", "text": ""}, {"location": "algor/dp/opt/data-structure-optimize/#cleaning-shifts", "title": "Cleaning Shifts", "text": "<p>\u519c\u592b\u7ea6\u7ff0\u96c7\u4f63\u4ed6\u7684 \\(N\\) \u5934\u5976\u725b\u5e2e\u4ed6\u8fdb\u884c\u725b\u68da\u7684\u6e05\u7406\u5de5\u4f5c\u3002</p> <p>\u4ed6\u5c06\u5168\u5929\u5206\u4e3a\u4e86\u5f88\u591a\u4e2a\u73ed\u6b21\uff0c\u5176\u4e2d\u7b2c \\(M\\) \u4e2a\u73ed\u6b21\u5230\u7b2c \\(E\\) \u4e2a\u73ed\u6b21\uff08\u5305\u62ec\u8fd9\u4e24\u4e2a\u73ed\u6b21\uff09\u4e4b\u95f4\u5fc5\u987b\u90fd\u6709\u725b\u8fdb\u884c\u6e05\u7406\u3002</p> <p>\u8fd9 \\(N\\) \u5934\u725b\u4e2d\uff0c\u7b2c \\(i\\) \u5934\u725b\u53ef\u4ee5\u4ece\u7b2c \\(a_i\\) \u4e2a\u73ed\u6b21\u5de5\u4f5c\u5230\u7b2c \\(b_i\\) \u4e2a\u73ed\u6b21\uff0c\u540c\u65f6\uff0c\u5b83\u4f1a\u7d22\u53d6 \\(c_i\\) \u7684\u4f63\u91d1\u3002</p> <p>\u8bf7\u4f60\u5b89\u6392\u4e00\u4e2a\u5408\u7406\u7684\u6e05\u7406\u73ed\u6b21\uff0c\u4f7f\u5f97 \\([M,E]\\) \u65f6\u95f4\u6bb5\u5185\u90fd\u6709\u5976\u725b\u5728\u6e05\u7406\uff0c\u5e76\u4e14\u6240\u9700\u652f\u4ed8\u7ed9\u5976\u725b\u7684\u62a5\u916c\u6700\u5c11\u3002</p> <p>\\(1\\le N \\le 1e3, 0 \\le M,E \\le 86399, a_i,b_i \\in [M,E]\\)</p> <p>\u63d0\u53d6\u9898\u76ee\u8981\u7d20\u4e4b\u540e\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u4e00\u4e2a\u72b6\u6001\uff1a</p> <p>\\(dp_i\\) \u8868\u793a \\([M,i]\\) \u8fd9\u4e00\u6bb5\u5168\u90e8\u6e05\u7406\u5b8c\u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u82b1\u8d39\u6700\u5c0f\u503c\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u5148\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u4ece\u725b\u7684\u5de5\u4f5c\u65f6\u95f4\u7684\u53f3\u7aef\u70b9\u8fdb\u884c\u8f6c\u79fb\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u65b9\u7a0b\uff1a</p> \\[dp_{b_i} = \\min\\limits_{a_i -1 \\le j &lt; b_i}\\{dp_j\\} + c_i\\] <p>\u679a\u4e3e \\(j\\) \u627e\u5230\u6700\u5c0f\u503c\u5373\u53ef\u3002</p> <p>\u8fd9\u91cc\u4f7f\u7528 \\(b_i\\) \u4f5c\u4e3a\u4e0b\u6807\u7684\u539f\u56e0\u662f\uff0c\u6211\u4eec\u5982\u679c\u76f4\u63a5\u679a\u4e3e \\(i\\)\uff0c\u65e0\u6cd5\u5f88\u597d\u7684\u786e\u5b9a\u5230\u5e95\u5f53\u524d\u8003\u8651\u7684\u662f\u54ea\u4e00\u5934\u725b\u3002</p> <p>\u5176\u5b9e\u74f6\u9888\u5c31\u5728\u4e8e\u8fd9\u4e2a\u679a\u4e3e\u7684\u8fc7\u7a0b\uff0c\u6240\u4ee5\u8003\u8651\u5bf9\u8fd9\u4e2a\u679a\u4e3e\u7684\u8fc7\u7a0b\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u53d1\u73b0\u51b3\u7b56\u96c6\u5408\u5c31\u662f \\(\\{dp_j\\} \\ | \\ j \\in [a_1 - 1, b_i]\\)\uff0c</p> <p>\u89c2\u5bdf\u5b83\u7684\u53d8\u5316\uff0c\u5f53 \\(i\\) \u589e\u52a0\u65f6\uff0c\\(b_i\\) \u662f\u4e25\u683c\u4e0d\u4e0b\u964d\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6392\u4e86\u5e8f\u3002</p> <p>\u4f46 \\(a_i\\) \u7684\u53d8\u5316\u5f88\u53ef\u80fd\u975e\u5e38\u4e0d\u5747\u5300\uff0c\u6240\u4ee5\u6211\u4eec\u4f3c\u4e4e\u6ca1\u6cd5\u505a\u7c7b\u4f3c\u5355\u8c03\u961f\u5217\u8fd9\u79cd\u76f4\u63a5\u7ef4\u62a4\u51b3\u7b56\u96c6\u5408\u7684\u4f18\u5316\u3002</p> <p>\u4f46\u662f\uff0c\u8fd9\u91cc\u662f\u8be2\u95ee \\(dp\\) \u5728\u67d0\u4e00\u6bb5\u4e0a\u7684\u6700\u5c0f\u503c\uff0c\u4e14 \\(dp\\) \u968f\u65f6\u4f1a\u53d1\u751f\u66f4\u65b0\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5229\u7528\u76f4\u63a5\u7ebf\u6bb5\u6811\u7ef4\u62a4 \\(dp\\) \u6570\u7ec4\uff08\u672c\u8d28\u4e0a\u662f\u7ef4\u62a4\u5b83\u7684\u7b2c\u4e00\u7ef4\uff09\u3002</p> <p>\u652f\u6301\u51b3\u7b56\u540e\u5355\u70b9\u4fee\u6539\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u533a\u95f4\u8be2\u95ee \\(\\min\\) \u5c31\u884c\u4e86\u3002</p> <p>\u5e76\u4e14\uff0c\u672c\u9898\u5b9e\u9645\u4e0a\u53ef\u4ee5\u4e0d\u5f00 \\(dp\\) \u6570\u7ec4\uff0c\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u6267\u884c\u4fee\u6539\u5373\u53ef\u3002</p> Code <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nconst int N=2e5+10;\nconst int INF=0x3f3f3f3f;\nusing namespace std;\nint read()\n{\nint x=0,f=0,c=getchar();\nwhile(c&lt;'0'||c&gt;'9'){if(c=='-')f=1;c=getchar();}\nwhile(c&gt;='0'&amp;&amp;c&lt;='9'){x=x*10+c-'0';c=getchar();}\nreturn f?-x:x;\n}\n\nint t[N&lt;&lt;2];\n\nvoid add(int x,int l,int r,int pos,int val)\n{\n//  cout&lt;&lt;x&lt;&lt;\" \"&lt;&lt;l&lt;&lt;\" \"&lt;&lt;r&lt;&lt;\" \"&lt;&lt;pos&lt;&lt;\" \"&lt;&lt;val&lt;&lt;endl;\nif(l==r){ t[x]=min(t[x],val); return;}//\u6ce8\u610f \u6700\u5c0f\u503c\u610f\u4e49\u4e0b\u7684\u8d4b\u503c \nint mid=(l+r)&gt;&gt;1;\nif(pos&lt;=mid) add(x*2,l,mid,pos,val);\nelse add(x*2+1,mid+1,r,pos,val);\nt[x]=min(t[x*2],t[x*2+1]);\n}\n\nint query(int x,int l,int r,int L,int R)\n{\nif(L&lt;=l&amp;&amp;R&gt;=r){ return t[x];}\nint mid=(l+r)&gt;&gt;1;\nint ans=INF;\nif(L&lt;=mid) ans=min(ans,query(x*2,l,mid,L,R));\nif(R&gt;mid) ans=min(ans,query(x*2+1,mid+1,r,L,R));\nreturn ans;\n}\n\nstruct Node\n{\nint x,y,z;\n}p[N];\nbool cmp(Node x,Node y){return x.y&lt;y.y;}\nint n,L,R,b[N],tot,f[N],cnt;\nint main()\n{\nn=read(); L=read(); R=read();\nfor(int i=1;i&lt;=n;i++) {\nint x=read(),y=read(),z=read();\nif(y&lt;L||x&gt;R) continue;\nb[++tot]=x; b[++tot]=y;\nb[++tot]=x+1; b[++tot]=y+1;\np[++cnt]=(Node){x,y,z};\n}   b[++tot]=L; b[++tot]=R;\nsort(b+1,b+tot+1);\ntot=unique(b+1,b+tot+1)-(b+1);\n\nsort(p+1,p+cnt+1,cmp);  for(int i=1;i&lt;=cnt;i++)\n{\np[i].x=lower_bound(b+1,b+tot+1,p[i].x)-b,\np[i].y=lower_bound(b+1,b+tot+1,p[i].y)-b;\n}\nL=lower_bound(b+1,b+tot+1,L)-b;\nR=lower_bound(b+1,b+tot+1,R)-b;\nmemset(f,0x3f,sizeof f);memset(t,0x3f,sizeof t);\nadd(1,0,tot,L-1,0);\nfor(int i=1;i&lt;=cnt;i++)\n{\nf[p[i].y]=min(f[p[i].y],query(1,0,tot,p[i].x-1,p[i].y-1)+p[i].z);//\u53f3\u8fb9\u754c\nadd(1,0,tot,p[i].y,f[p[i].y]); }\nint ans=INF;\nfor(int i=R;i&lt;=tot;i++)\nans=min(ans,f[i]);\nif(ans==INF){puts(\"-1\");return 0;}\nprintf(\"%d\",ans);\nreturn 0;\n}\n// \u76f4\u63a5\u8d3a\u7684\uff0c\u6bd5\u7adf\u662f\u5634\u5df4\u505a\u7684\u9898\uff08\n// \u4f5c\u8005\uff1ajuruoHBr\n// \u94fe\u63a5\uff1ahttps://www.acwing.com/solution/content/92559/\n</code></pre>"}, {"location": "algor/dp/opt/data-structure-optimize/#the-battle-of-chibi", "title": "The Battle Of Chibi", "text": "<p>\u6c42\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(A\\) \u7684\u957f\u5ea6\u4e3a \\(m\\) \u7684\u4e25\u683c\u9012\u589e\u5b50\u5e8f\u5217\u4e2a\u6570\u3002</p> <p>\u7b54\u6848\u5bf9 \\(1e9+7\\) \u53d6\u6a21\uff0c\\(1\\le n \\le 1000, |a_i| \\le 1e9\\)\u3002</p> <p>\u4e25\u683c\u9012\u589e\u5b50\u5e8f\u5217\u8fd9\u4e2a\u4e1c\u897f\u7c7b\u4f3c LIS\uff0c\u672c\u9898\u4e2d\u591a\u4e86 \\(m\\) \u8fd9\u4e2a\u9650\u5236\u3002</p> <p>\u6240\u4ee5\u5c31\u8bbe \\(dp_{i,j}\\) \u8868\u793a\u957f\u5ea6\u4e3a \\(i\\)\uff0c\u4ece \\(1\\sim j\\) \u9009\uff0c\u7531 \\(A_j\\) \u7ed3\u5c3e\u7684\u4e25\u683c\u9012\u589e\u5b50\u5e8f\u5217\u4e2a\u6570\u3002</p> <p>\u6839\u636e\u201c\u6700\u540e\u4e00\u4e2a\u4e0d\u540c\u70b9\u201d\u7684\u5212\u5206\u4f9d\u636e\uff0c\u679a\u4e3e\u4e0a\u4e00\u4e2a\u662f\u4ece\u54ea\u91cc\u8f6c\u79fb\u8fc7\u6765\u7684\u5373\u53ef\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[dp_{i,j} = \\sum\\limits_{a_{k} &lt; a_j \\operatorname{and} k &lt; j} dp_{i-1,k}\\] <p>\u521d\u59cb\u5316 \\(a_0 = +\\infty,f_{0,0} = 1\\)\uff0c\u5176\u4f59 \\(f\\) \u4e3a \\(0\\)\u3002</p> <p>\u53d1\u73b0\u5f53\u5916\u5c42\u5faa\u73af\u90fd\u56fa\u5b9a\u7684\u65f6\u5019\uff0c\u5982\u679c \\(j + 1\\)\uff0c\u90a3\u4e48 \\(k\\) \u7684\u53d6\u503c\u8303\u56f4\u5c31\u4f1a\u4ece \\([0,j)\\) \u53d8\u5230 \\([0,j+1)\\)\u3002</p> <p>\u90a3\u4e48\u51b3\u7b56\u96c6\u5408\u5c31\u53ea\u4f1a\u591a \\(dp_{i-1,j}\\) \u8fd9\u4e2a\u51b3\u7b56\u3002</p> <p>\u7136\u540e\u8981\u505a\u7684\u5c31\u662f\u5728\u51b3\u7b56\u96c6\u5408\u91cc\u67e5\u8be2\u6240\u6709\u6ee1\u8db3 \\(a_j &gt; a_k\\) \u7684 \\(dp_{i-1,k}\\) \u7684\u548c\u3002</p> <p>\u53d1\u73b0\u76f4\u63a5\u679a\u4e3e\u53ea\u9700\u8981\u4e0d\u65ad\u5224\u65ad \\(a_j &gt; a_k\\) \uff0c\u4e5f\u5c31\u662f\u53ea\u5728\u5224\u65ad\u5173\u952e\u7801\u7684\u5927\u5c0f\u5173\u7cfb\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5728\u51b3\u7b56\u96c6\u5408\u91cc\u6309\u7167 \\(a_i\\) \u6392\u5e8f\uff0c\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u8bbe  \\(a_j\\) \u79bb\u6563\u5316\u4e4b\u540e\u7684\u503c\u4e3a \\(val(a_j)\\) \u3002</p> <p>\u8be2\u95ee\u65f6\u53ea\u9700\u8981\u8be2\u95ee \\(a_j\\) \u79bb\u6563\u5316\u4e4b\u540e\u7684\u4f4d\u7f6e \\(val(a_j)\\) \u7684\u524d\u7f00\u548c\u5373\u53ef\u3002</p> <p>\u6bcf\u6b21\u5bf9\u4e8e \\(dp_{i,j}\\) \u7684\u51b3\u7b56\u8fdb\u884c\u5b8c\u4e4b\u540e\uff0c\u518d\u63d2\u5165 \\(dp_{i-1,j}\\) \u8fd9\u4e2a\u51b3\u7b56\uff0c\u4ee5\u4fdd\u8bc1\u65b9\u7a0b\u4e2d \\(k &lt; j\\) \u8fd9\u4e2a\u6761\u4ef6\u88ab\u6ee1\u8db3\u3002</p> <p>\u5b9e\u9645\u4e0a\u5c31\u662f\u7c7b\u4f3c\u53ef\u6301\u4e45\u5316 Trie \u7684\u201c\u4f9d\u6b21\u63d2\u5165\u201d\u7684\u601d\u60f3\uff0c\u4ee5\u5f3a\u5236\u53bb\u6389\uff08\u76f4\u63a5\u4e0d\u52a0\u5165\u5b83\u4eec\uff09\\(j\\) \u540e\u9762\u7684\u90e8\u5206\u7684\u65b9\u5f0f\u4f7f\u5f97 \\(k &lt; j\\) \u59cb\u7ec8\u88ab\u6ee1\u8db3\u3002 </p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u4f7f\u7528\u5e73\u8861\u6811\u3002</p> <p>\u4e0d\u8fc7\uff0c\u56e0\u4e3a \\(n\\) \u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5bf9 \\(A\\) \u79bb\u6563\u5316\uff0c\u7136\u540e\u76f4\u63a5\u5efa\u7acb\u4e00\u4e2a\u6811\u72b6\u6570\u7ef4\u62a4\u6240\u6709\u79bb\u6563\u5316\u540e\u7684\u4f4d\u7f6e\u3002</p> <p>\u63d2\u5165\u51b3\u7b56 \\(dp_{i-1,j}\\) \u7684\u64cd\u4f5c\uff0c\u5c31\u4ee4 \\(j\\) \u8fd9\u4e2a\u4f4d\u7f6e\u52a0\u4e0a \\(dp_{i-1,j}\\) \u5373\u53ef\u3002</p> <p>\u90a3\u4e48\u67e5\u8be2\u76f4\u63a5\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u6c42\u51fa \\(val(a_j)\\) \u8fd9\u4e2a\u4f4d\u7f6e\u7684\u524d\u7f00\u548c\u5c31\u884c\u4e86\uff0c</p> <p>\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u8981\u8ba9 \\(a_0\\) \u79bb\u6563\u5316\u4e4b\u540e\u7684\u503c \\(1\\) \u4e5f\u88ab\u7b97\u5230\u6811\u72b6\u6570\u7ec4\u91cc\u53bb\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u4f18\u5316\u7684\u524d\u63d0\u662f \u201c\u5047\u5b9a\u5916\u5c42\u5faa\u73af\u56fa\u5b9a\u201d\uff0c\u6240\u4ee5\u6811\u72b6\u6570\u7ec4\u6bcf\u6b21\u5faa\u73af\u53ea\u4f1a\u7ef4\u62a4\u4e0a\u4e00\u4e2a\u9636\u6bb5\u7684\u6240\u6709\u72b6\u6001\u3002</p> <p>\u4e5f\u5c31\u662f \\(dp_{i - 1}\\) \u7cfb\u7684\u6240\u6709\u72b6\u6001\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u7684\u672c\u8d28\u662f\u7c7b\u4f3c\u4e8c\u7ef4\u6570\u70b9\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u8003\u8651\u5206\u79bb\u503c\u57df\u9650\u5236\u548c\u4e0b\u6807\u9650\u5236\u3002</p> <p>\u8fd9\u91cc\u8981\u5206\u79bb\u7684\u539f\u56e0\u662f\uff0c\u5982\u679c\u4e0d\u5206\u79bb\uff0cdp \u72b6\u6001\u662f\u5f88\u79bb\u6563\u7684\uff0c\u6c42\u548c\u4e0d\u65b9\u4fbf\uff0c\u6211\u4eec\u5e0c\u671b\u4ed6\u4eec\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u5c31\u7528\u6570\u70b9\u7684\u601d\u60f3\u4e22\u5230\u6811\u72b6\u6570\u7ec4\u4e0a\u53bb\u7ef4\u62a4\u3002</p> Code <pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int si = 1e3 + 10;\nconstexpr int mod = 1e9 + 7;\n\nint n, m;\nint a[si];\nint dp[si][si];\nint t[si];\ninline int lowbit(int x) {\nreturn x &amp; -x;\n}\ninline void add(int x, int v) {\nwhile(x &lt;= n) {\nt[x] = (t[x] + v) % mod;\nx += lowbit(x);\n}\n}\ninline int que(int x) {\nint res = 0;\nwhile(x) {\nres = (res + t[x]) % mod;\nx -= lowbit(x);\n}\nreturn res;\n}\n\nvoid solve(int qwq) {\nmemset(dp, 0, sizeof dp);\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\nstd::vector&lt;int&gt; v;\nfor(int i = 1; i &lt;= n; ++i)\nv.push_back(a[i]);\nsort(v.begin(), v.end());\nv.erase(unique(v.begin(), v.end()), v.end());\n\nfor(int i = 1; i &lt;= n; ++i)\na[i] = lower_bound(v.begin(), v.end(), a[i]) - v.begin() + 2;\na[0] = 1;\n\ndp[0][0] = 1;\nfor(int i = 1; i &lt;= m; ++i) {\nmemset(t, 0, sizeof t); // \u6811\u72b6\u6570\u7ec4\u5728\u6bcf\u4e00\u8f6e\u53ea\u7ef4\u62a4\u4e0a\u4e00\u4e2a\u9636\u6bb5 i - 1 \u7cfb\u5217\u7684\u72b6\u6001\u3002\nadd(a[0], dp[i - 1][0]);\n// \u521d\u59cb\u51b3\u7b56\u3002\nfor(int j = 1; j &lt;= n; ++j) {\ndp[i][j] = que(a[j] - 1);\nadd(a[j], dp[i - 1][j]);\n}\n}\n\nint ans = 0;\nfor(int i = 1; i &lt;= n; ++i)\nans = (ans + dp[m][i]) % mod;\ncout &lt;&lt; \"Case #\" &lt;&lt; qwq &lt;&lt; \": \" &lt;&lt; ans &lt;&lt; endl;\n}\n\nint main() {\nint T;\ncin &gt;&gt; T;\nint cnt = 0;\nwhile(T--)\nsolve(++cnt);\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/dp/opt/data-structure-optimize/#_2", "title": "\u6cdb\u5316", "text": "<p>DP \u7684\u4f18\u5316\u5927\u591a\u90fd\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ol> <li>\u5bf9\u72b6\u6001\u7684\u4f18\u5316</li> <li>\u5bf9\u51b3\u7b56\u7684\u4f18\u5316</li> </ol> <p>\u7b2c\u4e00\u79cd\u4e3b\u8981\u662f\u6eda\u52a8\u6570\u7ec4\uff0c\u63d0\u53d6\u9898\u76ee\u4fe1\u606f\u7b49\u5c42\u9762\u7684\u4f18\u5316\u3002</p> <p>\u7b2c\u4e8c\u79cd\u5c31\u662f\u659c\u7387\u4f18\u5316\uff0cDS\u4f18\u5316\uff0c\u8d39\u7528\u63d0\u524d\u8ba1\u7b97\u8fd9\u79cd\u6280\u5de7\u6027\u7684\u4f18\u5316\u3002</p> <p>\u5176\u601d\u60f3\u5927\u591a\u90fd\u662f\uff0c\u5728\u5916\u5c42\u5faa\u73af\u56fa\u5b9a\u7684\u6761\u4ef6\u4e0b\uff0c</p> <p>\u5c06\u5229\u7528\u679a\u4e3e\u6765\u5728\u51b3\u7b56\u96c6\u5408\u4e2d\u8f6c\u79fb\u7684\u64cd\u4f5c\uff0c\u4f18\u5316\u4e3a\u76f4\u63a5\u5728\u51b3\u7b56\u96c6\u5408\u4e2d\u627e\u5230\u6700\u4f18/\u603b\u548c\u5bf9\u5e94\u7684\u72b6\u6001\u6216\u8005\u4fe1\u606f\u3002</p> <p>\u5e76\u6839\u636e\u51b3\u7b56\u96c6\u5408\u7684\u4e0a\u4e0b\u754c\u53d8\u5316\uff0c\u5355\u8c03\u6027\u8d28\u53bb\u9009\u62e9\u5bf9\u5e94\u7684\u4f18\u5316\u7b56\u7565\u3002</p> <p>DS \u4f18\u5316\u4e3b\u8981\u7528\u4e8e\u4e0a\u4e0b\u754c\u4e0d\u5747\u5300\u7684\u53d8\u5316\uff08\u63d2\u5165\u7b49\u53d8\u5316\u65b9\u5f0f\uff09\uff0c\u6216\u8005\u51b3\u7b56\u96c6\u5408\u53ef\u80fd\u88ab\u4fee\u6539\u800c\u4e0d\u662f\u53bb\u9664\u7684\u60c5\u51b5\u3002</p> <p>\u4e0a\u65b9\u7684\u4e24\u9053\u4f8b\u9898\uff0c\u6070\u597d\u5206\u522b\u5bf9\u5e94\u4e86\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002</p>"}, {"location": "algor/dp/opt/data-structure-optimize/#1", "title": "\u60c5\u51b51", "text": "<p>\u7b2c\u4e00\u9053\u662f\u4e0a\u4e0b\u754c\u4e0d\u5747\u5300\u53d8\u5316\uff08\u5bf9\u53f3\u7aef\u70b9\u6392\u5e8f\u8fc7\u540e\uff0c\u5de6\u7aef\u70b9\u4e0d\u4e00\u5b9a\u662f\u5355\u8c03\u7684\uff09+ \u51b3\u7b56\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u53ef\u80fd\u968f\u7740\u8f6c\u79fb\u88ab\u4fee\u6539\u3002</p> <p>\u6240\u4ee5\u65e0\u6cd5\u4f7f\u7528\u76f4\u63a5\u7ef4\u62a4\u96c6\u5408\u7684\u65b9\u5f0f\uff0c\u90a3\u4e48\u6b64\u65f6\u8003\u8651\u7684\u5c31\u662f\u76f4\u63a5\u5229\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4 \\(dp\\) \u6570\u7ec4\u7684\u4e0b\u6807\uff08\u67d0\u4e2a\u7ef4\u5ea6\uff09\u3002</p> <p>\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u9700\u8981\u6839\u636e\u65b9\u7a0b\u672c\u8eab\u7684\u9700\u6c42\u6765\u5b9a\uff0c\u6bd4\u5982\u65b9\u7a0b\u9700\u8981\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002</p> <p>\u5982\u679c\u65b9\u7a0b\u9700\u8981\u67e5\u8be2\u7b2c \\(k\\) \u5927\uff0c\u7ffb\u8f6c\u533a\u95f4\uff0c\u52a8\u6001\u63d2\u5165\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5e73\u8861\u6811\u3002</p> <p>\u6216\u8005\u8bf4 \\(dp\\) \u6570\u7ec4\u7684\u4e0b\u6807\u592a\u5927\u96be\u4ee5\u7ef4\u62a4\uff0c\u4e5f\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7b49\u6570\u636e\u7ed3\u6784\uff0c\u6216\u8005\u5148\u79bb\u6563\u5316\u3002</p> <p>\u4ee5\u4e0a\u8fd9\u79cd\u60c5\u51b5\u5f88\u591a\u65f6\u5019\u90fd\u53ef\u4ee5\u76f4\u63a5\u5728\u6570\u636e\u7ed3\u6784\u4e0a\u76f4\u63a5\u7ef4\u62a4\uff0c\\(dp\\) \u6570\u7ec4\u90fd\u4e0d\u7528\u5f00\uff0c\u9ad8\u7ea7\u4e00\u70b9\u7684\u5c31\u662f\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u76f8\u4e92\u6eda\u52a8\u4fe1\u606f\u3002</p> <p>\u672c\u60c5\u51b5\u8fd8\u6709\u4e00\u9053\u7ecf\u5178\u9898\uff0c\u662f\u4e94\u6708 Tricks \u7684 Non-Equal Neighbors\u3002</p>"}, {"location": "algor/dp/opt/data-structure-optimize/#2", "title": "\u60c5\u51b52", "text": "<p>\u7b2c\u4e8c\u9053\u662f\u770b\u8d77\u6765\u4e0a\u4e0b\u754c\u5747\u5300\u53d8\u5316\uff0c\u4f46\u662f\u51b3\u7b56\u96c6\u5408\u662f\u9700\u8981\u52a8\u6001\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\uff08\u56e0\u4e3a\u5173\u952e\u5b57\u662f \\(a_i\\)\uff09\uff0c\u6240\u4ee5\u4e5f\u9700\u8981\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\u3002</p> <p>\u8fd9\u79cd\u60c5\u51b5\u5927\u591a\u90fd\u662f\u51b3\u7b56\u96c6\u5408\u53d8\u5316\u8f83\u4e3a\u5747\u5300\uff0c\u6bd4\u5982\u6ed1\u52a8\u7a97\u53e3\u5f0f\uff0c\u5355\u8c03\u53d8\u5316\u5f0f\u3002</p> <p>\u4f46\u662f\u51b3\u7b56\u96c6\u5408\u91cc\u4e00\u822c\u542b\u6709\u968f\u65f6\u4f1a\u53d8\u5316\u7684\u5143\u7d20\uff08\u6bd4\u5982 \\(dp\\) \u6570\u7ec4\u672c\u8eab\uff09\u3002</p> <p>\u6240\u4ee5\u5bfc\u81f4\u5355\u8c03\u961f\u5217\u7b49\u6570\u636e\u7ed3\u6784\u96be\u4ee5\u7ef4\u62a4\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u5229\u7528\u5e73\u8861\u6811\u6216\u8005\u79bb\u6563\u5316\u540e\u7ef4\u62a4\u4f4d\u7f6e\u7684\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\u6765\u4f18\u5316\u3002</p> <p>\uff08\u5176\u5b9e\u7ef4\u62a4\u4f4d\u7f6e\u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u79cd\u7ef4\u62a4\u4e0b\u6807\uff09</p> <p>\u5e38\u89c1\u7684\u6280\u5de7\u662f\u51b3\u7b56\u540e\u518d\u63d2\u5165\u65b0\u51b3\u7b56\uff0c\u4ee5\u4fdd\u8bc1\u4e0b\u6807\u9650\u5236\u7684\u6210\u7acb\u3002</p> <p>\u5e76\u4e14\u8fd9\u79cd\u60c5\u51b5\u7684\u65b9\u7a0b\u901a\u5e38\u53ea\u4f9d\u8d56\u4e0a\u4e00\u5c42\u7684 \\(dp\\) \u503c\uff0c\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u7684\u4e00\u822c\u90fd\u662f\u4e0a\u4e00\u4e2a\u9636\u6bb5\u7684\u503c\u3002</p> <p>\u672c\u60c5\u51b5\u8fd8\u6709\u4e24\u9053\u7ecf\u5178\u9898\uff0c\u662f\u4e94\u6708 Tricks \u7684 The Bakery\uff0c\u548c\u56db\u6708\u597d\u9898\u7684 Optimal Partition\u3002</p> <p>\u6216\u8005\u8bf4\u8fd9\u79cd\u9898\u7684\u672c\u8d28\u662f\u4e3a\u4e86\u8ba9 dp \u6570\u7ec4\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u65b9\u4fbf\u8ba1\u7b97\u800c\u8003\u8651\u7684\u3002</p>"}, {"location": "algor/dp/opt/monotonous-queue-optimize/", "title": "\u5355\u8c03\u961f\u5217\u4f18\u5316", "text": ""}, {"location": "algor/dp/opt/monotonous-queue-optimize/#_1", "title": "\u6cdb\u5316", "text": "<p>\u8fd9\u4e00\u7c7b\u95ee\u9898\u7684\u5e38\u89c1\u7279\u5f81\u662f 1D1D\uff0c \u4e5f\u5c31\u662f\u4e00\u7ef4\u72b6\u6001\u4e00\u7ef4\u8f6c\u79fb\u3002</p> <p>\u5185\u5c42\u5faa\u73af\u7684\u53d6\u503c\u8303\u56f4\u7531\u5916\u5c42\u5faa\u73af\u51b3\u5b9a\u3002</p> <p>\u5e76\u4e14\u5728\u5916\u5c42\u5faa\u73af\u53d8\u91cf\u56fa\u5b9a \u6216\u8005 \u5355\u8c03\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u5185\u5c42\u5faa\u73af\u6240\u679a\u4e3e\u7684\u51b3\u7b56\u96c6\u5408\u662f\u5355\u8c03\u53d8\u5316\u7684\u3002</p> <p>\u4e0d\u4e00\u5b9a\u975e\u7684\u8981\u5934\u548c\u5c3e\u589e\u52a0\uff08\u51cf\u5c11\uff09\u7684\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u8981\u4fdd\u8bc1\u7ecf\u8fc7\u7684\u4f4d\u7f6e\u4e0d\u4f1a\u518d\u88ab\u7ecf\u8fc7\u4e00\u6b21\u5c31\u597d\uff08\u751a\u81f3\u53ef\u4ee5\u662f\u5934\u4e00\u76f4\u4e0d\u52a8\uff0c\u5c3e\u4e00\u76f4\u589e\u52a0\uff09\u3002</p> <p>\u8fd9\u65f6\u5019\uff0c\u56e0\u4e3a\u5185\u5c42\u5faa\u73af\u53d8\u91cf\u7684\u53d6\u503c\u533a\u95f4\u5355\u8c03\u53d8\u5316\uff0c\u5c31\u53ef\u4ee5\u5229\u7528\u5355\u8c03\u961f\u5217\u7684\u601d\u60f3\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u4f7f\u7528\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u51b3\u7b56\u70b9\u7684\u53ef\u80fd\u53d6\u503c\uff0c\u5e76\u4e14\u4fdd\u6301\u961f\u5934\u662f\u6700\u4f18\u89e3\uff0c\u5982\u679c\u961f\u5934\u8d85\u8fc7\u4e86\u9650\u5236\uff0c\u5f39\u51fa\uff0c\u5982\u679c\u961f\u5c3e\u65b0\u52a0\u5165\u7684\u5143\u7d20\u6bd4\u5df2\u7ecf\u5728\u961f\u5217\u91cc\u9762\u7684\u66f4\u52a0\u4f18\u79c0\uff0c\u6392\u9664\u5197\u6742\u51b3\u7b56\u3002</p> <p>\u7136\u540e\u5229\u7528\u961f\u5934\u5143\u7d20\u8fdb\u884c\u51b3\u7b56\u5373\u53ef\u3002</p>"}, {"location": "algor/dp/opt/monotonous-queue-optimize/#_2", "title": "\u4e00\u822c\u5f62\u5f0f", "text": "<p>\u8fd9\u4e00\u7c7b\u95ee\u9898\u7684\u4e00\u822c\u65b9\u7a0b\u5f62\u5f0f\uff1a</p> \\[f_i=\\min\\limits_{L(i)\\le j \\le R(i)}\\{f_j+val(i,j)\\}\\] <p>\u5176\u4e2d \\(L(i),R(i)\\) \u662f\u5173\u4e8e \\(i\\) \u7684\u4e00\u6b21\u51fd\u6570\uff0c\u7528\u6765\u9650\u5236\u51b3\u7b56\u70b9 \\(j\\) \u7684\u8303\u56f4\uff08\u51b3\u7b56\u96c6\u5408\u4e0a\u4e0b\u754c\uff09\u3002</p> <p>\u6240\u4ee5\u4e00\u822c\u6211\u4eec\u90fd\u76f4\u63a5\u8ba9 \\(i\\) \u5355\u8c03\u53d8\u5316\uff0c\u7136\u540e\u8003\u8651\u51b3\u7b56\u96c6\u5408\uff08\\(f_{i, j}\\) \u7684\u51b3\u7b56\u96c6\u5408\u662f\u6240\u6709\u53ef\u4ee5\u8f6c\u79fb\u5230\u5b83\u7684\u5408\u6cd5\u72b6\u6001\u7ec4\u6210\u7684\u96c6\u5408\uff09\u4e0a\u4e0b\u754c\u7684\u53d8\u5316\u3002</p> <p>\u4f46\u5982\u679c\u6709\u4e24\u7ef4\u72b6\u6001\u7684\u65f6\u5019\uff0c\u901a\u5e38\u8fd9\u91cc\u5c31\u4e0d\u53ea\u662f\u5173\u4e8e \\(i\\) \u7684\u4e86\uff0c\u53ef\u80fd\u8fd8\u4f1a\u6709 \\(j\\) \u5728\u91cc\u9762\u3002</p> <p>\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9700\u8981\u56fa\u5b9a \\(i\\) \u53bb\u8003\u8651\u51b3\u7b56\u96c6\u5408\u7684\u53d8\u5316\uff08\u4e24\u4e2a\u53d8\u91cf\u641e\u5728\u4e00\u8d77\u80af\u5b9a\u96be\u53d7\uff09</p> <p>\\(val\\) \u5219\u662f\u5173\u4e8e \\(i,j\\) \u7684\u4e00\u4e2a\u591a\u9879\u5f0f\uff0c\u5e76\u4e14\u53ef\u4ee5\u628a\u5b83\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u53ea\u4e0e \\(i\\) \u76f8\u5173\uff0c\u4e00\u4e2a\u53ea\u4e0e \\(j\\) \u76f8\u5173\u3002</p> <p>\u524d\u4e00\u90e8\u5206\u5728 \\(i\\) \u56fa\u5b9a\u7684\u65f6\u5019\u662f\u5e38\u91cf\uff0c\u540e\u4e00\u90e8\u5206\u5229\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u5373\u53ef\u3002</p>"}, {"location": "algor/dp/opt/monotonous-queue-optimize/#_3", "title": "\u4f8b\u9898", "text": ""}, {"location": "algor/dp/opt/monotonous-queue-optimize/#1", "title": "\u95ee\u9898 1", "text": "<p>\u5355\u8c03\u961f\u5217\u4f18\u5316\u591a\u91cd\u80cc\u5305</p> <p>\u89c1\u300a\u80cc\u5305DP\u300b\u3002</p>"}, {"location": "algor/dp/opt/monotonous-queue-optimize/#2", "title": "\u95ee\u9898 2", "text": "<p>[POJ1821 Fence]\uff1a\u4f60\u6709 \\(P\\) \u4e2a\u5de5\u5320\uff0c\u7b2c \\(i\\) \u4e2a\u5de5\u5320\u53ea\u80fd\u7c89\u5237\u5305\u62ec \\(S_i\\) \u8fd9\u4e00\u6bb5\u6728\u677f\uff0c\u957f\u5ea6\u4e3a \\(L_i\\) \u7684\u533a\u95f4\uff0c\u5e76\u83b7\u5f97 \\(L_i \\times p_i\\) \u7684\u62a5\u916c\uff0c\u73b0\u5728\u6709 \\(n\\) \u5757\u6728\u677f\uff0c\u95ee\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u62a5\u916c\u3002</p> <p>\\(1\\le n \\le 16000,1\\le m\\le 100\\)</p> <p>\u9996\u5148\u628a\u5de5\u5320\u6309 \\(S_i\\) \u6392\u5e8f\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5de5\u5320\u7c89\u5237\u7684\u6728\u677f\u5728\u4e0a\u4e00\u4e2a\u7684\u540e\u9762\u3002</p> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u65b9\u4fbf\u7684\u8fdb\u884c DP\u3002</p> <p>\u8bbe \\(f_{i,j}\\) \u8868\u793a\u524d \\(j\\) \u5757\u6728\u677f\uff0c\u524d \\(i\\) \u4e2a\u4eba\u7c89\u5237\u7684\u6240\u6709\u60c5\u51b5\uff0c\u5c5e\u6027\u4e3a\u62a5\u916c\u7684\u6700\u5927\u503c\u3002</p> <p>\u5148\u8003\u8651\u7279\u6b8a\u7684\u3002</p> <ol> <li>\u5982\u679c\u7b2c \\(i\\) \u4e2a\u4eba\u4e0d\u7c89\u5237\uff0c\\(f_{i,j}=f_{i-1,j}\\)</li> <li>\\(j\\) \u7a7a\u7740\u4e0d\u7c89\u5237\uff0c\\(f_{i,j}=f_{i,j-1}\\)\u3002</li> </ol> <p>\u9700\u8981\u8003\u8651\u7a7a\u7740\u4e0d\u7c89\u5237\u7684\u60c5\u51b5\u662f\u56e0\u4e3a \\(\\sum L_i\\) \u6709\u53ef\u80fd\u5c0f\u4e8e \\(n\\) \uff08\u9898\u76ee\u6ca1\u6709\u4fdd\u8bc1\u5927\u4e8e\u7b49\u4e8e\uff09\u3002</p> <p>\u56e0\u4e3aDP\u4e00\u822c\u662f\u4ee5last\u4f5c\u4e3a\u5206\u754c\u7684\uff0c\u8003\u8651last\u5c31\u53ef\uff0c\u524d\u9762\u7684\u4f1a\u88ab\u4f9d\u6b21\u9012\u63a8\u3002</p> <p>\u7136\u540e\u8003\u8651\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4eba\u6700\u540e\u5237\u5230\u4e86\u54ea\u91cc\uff0c\u8bbe\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a \\(k\\)\u3002</p> <p>\u7136\u540e \\([k+1,j]\\) \u5c31\u5fc5\u987b\u662f\u7b2c \\(i\\) \u4e2a\u4eba\u6765\u5904\u7406\u3002</p> <p>\u56e0\u4e3a\u9898\u76ee\u6709\u9650\u5236\uff0c\u6240\u4ee5 \\(k\\) \u662f\u6709\u53d6\u503c\u8303\u56f4\u7684\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230\u65b9\u7a0b\uff1a</p> \\[f_{i,j}=\\max\\limits_{j-L_i\\le k \\le S_i-1}\\{f_{i-1,k}+P_i\\times(j-k)\\},j \\ge L_i\\] <p>\u590d\u6742\u5ea6 \\(O(n^3)\\) \u4e0d\u80fd\u63a5\u53d7\uff0c\u53d1\u73b0\u65b9\u7a0b\u662f 1D1D \u7684\u5f62\u5f0f\uff0c\u4e14 \\(k\\) \u7684\u53d8\u5316\u4e0b\u754c\u5728 \\(i\\) \u56fa\u5b9a\u7684\u65f6\u5019\u662f\u4e00\u4e2a\u5173\u4e8e \\(j\\) \u7684\u4e00\u6b21\u51fd\u6570\uff0c\u4e0a\u754c\u662f\u4e00\u4e2a\u5e38\u6570\u3002</p> <p>\u90a3\u4e48\u5c31\u8bc1\u660e\uff0c\u5f53 \\(i\\) \u56fa\u5b9a\uff0c\\(j\\) \u5355\u8c03\u53d8\u5316\u7684\u65f6\u5019\uff0c\\(k\\) \u4e5f\u662f\u5355\u8c03\u53d8\u5316\u7684\u3002</p> <p>\u5e76\u4e14 \\(P_i\\times(j-k)\\) \u662f\u4e00\u4e2a\u5173\u4e8e \\(j,k\\) \u7684\u591a\u9879\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u62c6\u5206\u6210\u4e24\u90e8\u5206\uff08\u6ca1\u6709 \\(j,k\\) \u7684\u4e58\u79ef\u9879\uff09\u3002</p> <p>\u4e8e\u662f\u628a\u8fd9\u4e00\u90e8\u5206\u62c6\u5f00\uff1a</p> \\[f_{i,j}=P_i\\times j + \\max\\limits_{j-L_i\\le k \\le S_i-1}\\{f_{i-1,k}-P_i\\times k\\},j \\ge L_i\\] <p>\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(i\\)\uff0c\u7ef4\u62a4\u4e00\u4e2a \\(f_{i-1,k}-P_i\\times k\\) \u7684\u6700\u5927\u503c\u7684\u961f\u5217\uff0c\u5e76\u4e14\u4fdd\u8bc1 \\(k\\) \u5355\u8c03\u9012\u589e\u3002</p> <p>\u5f00\u59cb\u7684\u65f6\u5019\u628a\u521d\u59cb\u7684\u51b3\u7b56\u5148\u63d2\u5165\u8fdb\u53bb\uff0c\u7136\u540e\u679a\u4e3e \\(j\\)\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(f_{i,j}\\) \u53d6\u961f\u5934\u66f4\u65b0\uff0c\u5e76\u540c\u6b65\u7ef4\u62a4\u5355\u8c03\u6027\u4ee5\u53ca\u5408\u6cd5\u6027\u5373\u53ef\u3002</p> <p>\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u5165\u961f\u51fa\u961f\u4e00\u6b21\uff0c\u590d\u6742\u5ea6 \\(\\text{O}(nP)\\)\u3002</p> Code <pre><code>#include&lt;cstdio&gt;\n#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\n#include&lt;cmath&gt;\n#include&lt;deque&gt;\nusing namespace std;\nconst int si_n=16000+100;\nconst int si_m=110;\nint n,m,i,j,k,f[si_m][si_n];\nstruct node{\nint p,l,s;\nbool operator &lt; (const node &amp;b)const{\nreturn s&lt;b.s;\n}\n}a[si_n];\ndeque&lt;int&gt;q; // \u5077\u61d2 deque, \u6570\u7ec4\u5199\u6cd5\u4e5f\u662f\u4e00\u6837\u7684\u3002\ninline void init(){\nios::sync_with_stdio(false),cin&gt;&gt;m&gt;&gt;n;\nfor(register int i=1;i&lt;=n;i++) cin&gt;&gt;a[i].l&gt;&gt;a[i].p&gt;&gt;a[i].s;\nsort(a+1,a+1+n);\n}\ninline int cal(int i,int k){\nreturn f[i-1][k]-a[i].p*k;\n}\ninline void work(){\nfor(register int i=1;i&lt;=n;i++){\nfor(register int k=max(0,a[i].s-a[i].l);k&lt;a[i].s;k++){\nwhile(q.size() &amp;&amp; cal(i,q.back())&lt;=cal(i,k)) q.pop_back();\nq.push_back(k);\n} // \u63d2\u5165\u521d\u59cb\u51b3\u7b56\nfor(register int j=1;j&lt;=m;j++) {\nf[i][j]=max(f[i-1][j],f[i][j-1]); // \u7279\u6b8a\u60c5\u51b5\nif(j&gt;=a[i].s){\nwhile(q.size() &amp;&amp; q.front()&lt;j-a[i].l) q.pop_front();\nif(q.size()) f[i][j]=max(f[i][j],a[i].p*j+cal(i,q.front())); // \u961f\u5217\u975e\u7a7a\u624d\u53ef\u4ee5\u8f6c\u79fb\n} // \u8f6c\u79fb\n}\n} cout&lt;&lt;f[n][m]; return ;\n}\n\nint main(){\ninit(),work();\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/dp/opt/monotonous-queue-optimize/#_4", "title": "\u6a21\u677f", "text": "<p>\u4e00\u822c\u5355\u8c03\u961f\u5217\u4f18\u5316\u8f6c\u79fb\u7684\u65f6\u5019\u7684\u6a21\u677f\uff1a</p> <pre><code>\u5faa\u73af \u63d2\u5165\u521d\u59cb\u51b3\u7b56\n\u5faa\u73af\n\u5148\u628a\u8fc7\u65f6\u7684\u5220\u9664\uff08\u7ef4\u62a4\u5408\u6cd5\u6027\uff09\n\u5982\u679c\u961f\u5217\u975e\u7a7a\n\u8f6c\u79fb\uff0c\uff08\u51b3\u7b56\uff09\n\u6392\u9664\u5197\u6742\uff0c\u52a0\u5165\u65b0\u72b6\u6001\u3002\uff08\u7ef4\u62a4\u5355\u8c03\u6027\uff09\n\uff08\u540e\u4e24\u6b65\u6709\u7684\u65f6\u5019\u4e0d\u9700\u8981\uff0c\u6bd4\u5982\u8fd9\u4e2a\u9898\uff09\n</code></pre> <p>\u5efa\u8bae\u8fd8\u662f\u770b\u6211\u7ed9\u5b66\u5f1f\u5199\u7684\u8bb2\u7a3f\uff0c\u611f\u89c9\u5199\u7684\u66f4\u6e05\u695a\u4e00\u70b9\u3002</p>"}, {"location": "algor/dp/opt/monotonous-stack-optimize/", "title": "\u5355\u8c03\u6808\u4f18\u5316", "text": "<p>\u611f\u89c9\u8fd9\u4e2a\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u7c7b\u4f3c\u5355\u8c03\u961f\u5217\u4f18\u5316 dp\uff0c\u53ea\u662f\u8981\u601d\u8003\u5230 NGE \u6216\u8005 NLE \u65f6\u5019\u53ef\u80fd\u7528\u5355\u8c03\u6808\u66f4\u597d\u3002</p>"}, {"location": "algor/ds/binary-search-on-segtree/", "title": "\u7ebf\u6bb5\u6811\u4e8c\u5206", "text": ""}, {"location": "algor/ds/binary-search-on-segtree/#_1", "title": "\u6982\u8ff0", "text": "<p>\u611f\u89c9\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5c0f Trick\uff0c\u5355\u72ec\u63d0\u51fa\u6765\u5199\u4e00\u4e0b\u3002</p> <p>\u672c\u8d28\u4e0a\u5c31\u662f\u8bf4\uff0c\u4f60\u628a\u4e8c\u5206\u76f4\u63a5\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\u6765\u641e\uff0c\u7136\u540e\u6ce8\u610f\u4e00\u4e0b\u5565\u65f6\u5019\u8d70\u5de6\u5b50\u6811\u5565\u65f6\u5019\u8d70\u53f3\u5b50\u6811\u5565\u65f6\u5019\u8fd4\u56de\u5c31\u884c\u4e86\u3002</p> <p>\u4e00\u822c\u9700\u8981\u95ee\u9898\u5b58\u5728\u4e00\u5b9a\u7684\u5355\u8c03\u6027\u3002</p>"}, {"location": "algor/ds/binary-search-on-segtree/#_2", "title": "\u4f8b\u9898", "text": ""}, {"location": "algor/ds/binary-search-on-segtree/#k", "title": "\u9759\u6001\u5168\u5c40\u7b2c k \u5927", "text": "<p>\u7b80\u5355\u9898\uff0c\u5168\u5c40\u7b2c \\(k\\) \u5927\uff0c\u76f4\u63a5\u5f00\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u3002</p> <p>\u7136\u540e\u4f60\u8003\u8651\u4ec0\u4e48\u65f6\u5019\u8d70\u5de6\u5b50\u6811\uff0c\u663e\u7136\u5c31\u662f\u5de6\u5b50\u6811\u7684\u548c\uff08\u5143\u7d20\u4e2a\u6570\uff09\u5927\u4e8e\u7b49\u4e8e \\(k\\)\uff0c\u8bc1\u660e\u7b2c \\(k\\) \u5927\u5728\u8fd9\u8fb9\u3002</p> <p>\u5426\u5219\u4f60\u628a\u5de6\u5b50\u6811\u5927\u5c0f \\(sz\\) \u4ece \\(k\\) \u91cc\u9762\u51cf\u6389\uff0c\u5728\u53f3\u5b50\u6811\u8be2\u95ee\u7b2c \\(k - sz\\) \u5927\u3002</p> <p>\u7136\u540e\u9012\u5f52\u4e00\u4e0b\u5c31\u5b8c\u4e86\u3002</p> <pre><code>i64 kth(int p, int l, int r, int k) {\nif(l == r) return t[p].dat;\nint mid = (l + r) &gt;&gt; 1;\nif(t[ls].dat &gt;= k) kth(ls, l, mid, k);\nelse kth(rs, mid + 1, r, k - t[ls].dat);\n}\n</code></pre>"}, {"location": "algor/ds/binary-search-on-segtree/#lower_bound", "title": "\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2 lower_bound", "text": "<p>\u4e5f\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u9898\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u6b21\u662f\u5728\u7ebf\u6bb5\u6811\u4e0a\u9762\u76f4\u63a5\u4e8c\u5206\u3002</p> <p>\u8003\u8651\u8bbe\u4e00\u4e2a \\(ask(ql,qr,d)\\) \u51fd\u6570\uff0c\u8868\u793a\u5f53\u524d\u6211\u8be2\u95ee \\([ql, qr]\\) \u7684\u6240\u6709\u6570\u5f53\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e \\(d\\) \u7684\u6570\u7684\u4e0b\u6807\u3002</p> <p>\u800c\u4e14\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7b2c\u4e8c\u4e2a\u5b9a\u4e49\uff1a\u5b9a\u4e49 \\(ask(ql, qr, d)\\) \u8868\u793a\uff0c\u6211\u80fd\u80af\u5b9a\u6f5c\u5728\u7684\u7b54\u6848\u5fc5\u7136\u5728\u533a\u95f4 \\([ql, qr]\\) \u5185\uff0c\u4e0d\u7ba1\u662f\u5426\u771f\u7684\u5b58\u5728\u8fd9\u4e2a\u5143\u7d20\uff0c\u53cd\u6b63\u5982\u679c\u53ef\u80fd\u51fa\u73b0\u5c31\u5fc5\u7136\u5728 \\([ql, qr]\\) \u91cc\u9762\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u9012\u5f52\u7684\u65f6\u5019\u8981\u4fee\u6539 \\([ql, qr]\\)\uff0c\u6b64\u65f6\u5c31\u4e0d\u80fd\u6cbf\u7528\u666e\u901a\u7ebf\u6bb5\u6811\u7684\u9012\u5f52\u548c\u8fb9\u754c\u6761\u4ef6\u4e86\u3002</p> <p>\u9996\u5148\u5982\u679c\u5f53\u524d\u7ebf\u6bb5\u6811\u8282\u70b9\u7ef4\u62a4 \\([l, r]\\)\uff0c\u4f1a\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5:</p> <ol> <li>\\([ql, qr] \\subset [l, mid]\\)\uff0c\u76f4\u63a5\u9012\u5f52\u5de6\u5b50\u6811\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a \\([ql, qr]\\) \u7684\u7ebf\u5ea6\u6bd4 \\([l, mid]\\) \u5c0f\uff0c\u6240\u4ee5\u4e0d\u7528\u6539\u53d8\u3002</li> <li>\\([ql, qr] \\subset (mid, r]\\)\uff0c\u540c\u7406\u9012\u5f52\u53f3\u5b50\u6811\u3002</li> <li>\\([ql, qr] \\subset [l, r] \\land (qr &gt; mid) \\land (ql \\le mid)\\)\uff0c\u4e5f\u5c31\u662f\u5206\u6210\u4e86\u4e24\u534a\uff0c\u56e0\u4e3a\u8981\u7b2c\u4e00\u4e2a\u6240\u4ee5\u6211\u663e\u7136\u4f18\u5148\u9012\u5f52\u5de6\u5b50\u6811\uff0c\u540c\u65f6 \\((ql, qr) \\to (ql, mid)\\)\uff0c\u5982\u679c\u5de6\u5b50\u6811\u7b54\u6848\u4e0d\u5b58\u5728\uff0c\u4e0d\u80fd\u76f4\u63a5\u8fd4\u56de\uff0c\u8fd8\u8981\u518d\u8dd1\u53f3\u5b50\u6811\u8bd5\u4e00\u8bd5\u3002</li> </ol> <p>\u7136\u540e\u8003\u8651\u8fb9\u754c\u60c5\u51b5\u5e94\u8be5\u662f\u4ec0\u4e48\uff0c\u5176\u5b9e\u5c31\u662f \\(l = r\\) \u7684\u65f6\u5019\u4f1a\u627e\u5230\u6700\u7ec8\u7684\u6f5c\u5728\u7b54\u6848\uff08\\(-1\\)\uff0c\u6216\u8005\u5c31\u662f \\(l\\)\uff09\u3002</p> <p>\u6240\u4ee5\u4f60\u5982\u679c\u627e\u5230\u4e86\u7b54\u6848\uff0c\u6700\u540e\u4e00\u5b9a\u662f\u4f1a\u7f29\u5c0f\u5230\u533a\u95f4\u957f\u5ea6 \\(= 1\\) \u7684\u3002</p> <pre><code>int ask(int p, int ql, int qr, int d) {\nint l = t[p].l, r = t[p].r;\nif(l == r) {\nif(t[p].mx &gt;= d) return l;\nreturn -1; }\nint mid = (l + r) &gt;&gt; 1;\nif(qr &lt;= mid) return ask(p &lt;&lt; 1, ql, qr, d);  if(ql &gt; mid) return ask(p &lt;&lt; 1 | 1, ql, qr, d);\nint pos = ask(p &lt;&lt; 1, ql, mid, d);\nif(~pos) return pos;\nreturn ask(p &lt;&lt; 1 | 1, mid + 1, qr, d);\n}\n</code></pre> <p>\u4f46\u662f\u8fd9\u4e2a\u5176\u5b9e\u8dd1\u7684\u5f88\u6162\u3002</p> <p>\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u6211\u4eec\u8003\u8651 \\(l = ql, r = qr\\) \u7684\u65f6\u5019\uff0c\u6211\u76f4\u63a5\u5224\u4e00\u4e0b \\(t(2p).mx,t(2p + 1).mx\\) \u662f\u4e0d\u662f \\(\\ge d\\)\uff0c\u8fd9\u6837\u7528 \\(O(1)\\) \u6362\u6389\u4e86\u53ef\u80fd\u7684\u5f88\u591a\u6b21\u9012\u5f52\u3002</p> <pre><code>int ask(int p, int ql, int qr, int d) {\nint l = t[p].l, r = t[p].r;\nif(l == ql &amp;&amp; r == qr) {\nif(t[p].mx &lt; d) return -1;\nif(l == r) return l;\nint mid = (l + r) &gt;&gt; 1;\nif(t[p &lt;&lt; 1].mx &gt;= d) return ask(p &lt;&lt; 1, ql, mid, d);\nreturn ask(p &lt;&lt; 1 | 1, mid + 1, qr, d);\n}\nint mid = (l + r) &gt;&gt; 1;\nif(qr &lt;= mid) return ask(p &lt;&lt; 1, ql, qr, d);  if(ql &gt; mid) return ask(p &lt;&lt; 1 | 1, ql, qr, d);\nint pos = ask(p &lt;&lt; 1, ql, mid, d);\nif(~pos) return pos;\nreturn ask(p &lt;&lt; 1 | 1, mid + 1, qr, d);\n}\n</code></pre>"}, {"location": "algor/ds/binary-search-on-segtree/#2020-ab", "title": "[\u7701\u9009\u8054\u8003 2020 A/B \u5377] \u51b0\u706b\u6218\u58eb", "text": "<p>\u5f88\u597d\uff0c\u6211\u8fd8\u6ca1\u505a\u3002</p>"}, {"location": "algor/ds/binary-search-on-segtree/#k_1", "title": "\u9759\u6001\u533a\u95f4\u7b2c k \u5927", "text": "<p>\u5c31\u662f\u7528\u4e3b\u5e2d\u6811\uff0c\u628a\u5168\u5c40\u53d8\u6210\u533a\u95f4\u3002</p> <p>\u7136\u540e\u5728\u4e3b\u5e2d\u6811\u4e0a\u9762\u4e8c\u5206\u5c31\u884c\u4e86\u3002</p> <p>\u5177\u4f53\u4e0d\u4f1a\uff0c\u4e4b\u540e\u5199\u3002</p>"}, {"location": "algor/ds/binary-search-on-segtree/#k_2", "title": "\u52a8\u6001\u533a\u95f4\u7b2c k \u5927", "text": "<p>\u5c31\u662f\u989d\u5916\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u53bb\u7ef4\u62a4\u4e3b\u5e2d\u6811\u7684\u4fe1\u606f\u652f\u6301\u5355\u70b9\u4fee\u6539\u5c31\u884c\u4e86\u3002</p> <p>\u7136\u540e\u548c\u9759\u6001\u533a\u95f4\u7b2c k \u5927\u6ca1\u5565\u5dee\u522b\u3002</p> <p>\u5177\u4f53\u4e0d\u4f1a\uff0c\u4e4b\u540e\u5199\u3002</p>"}, {"location": "algor/ds/blocks/", "title": "\u666e\u901a\u5206\u5757", "text": ""}, {"location": "algor/ds/blocks/#_1", "title": "\u539f\u7406", "text": "<p>\u975e\u5e38\u7b80\u5355\u4e14\u66b4\u529b\uff0c\u4ee5\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u548c\u4e3a\u4f8b\u3002</p> <p>\u8003\u8651\u628a\u5e8f\u5217\u5206\u6210 \\(\\lceil\\sqrt{n}\\rceil\\) \u5757\uff0c\u5176\u4e2d\u7b2c \\(i,(1 \\le i \\le \\lfloor\\sqrt{n}\\rfloor)\\) \u6bb5\u7684\u8fb9\u754c\u662f \\(l=(i-1)\\times \\lfloor\\sqrt{n}\\rfloor +1,r=i \\times \\lfloor\\sqrt{n}\\rfloor\\) \u3002</p> <p>\u5bf9\u4e8e\u7b2c \\(\\lceil\\sqrt{n}\\rceil\\) \u5757\uff0c\u5982\u679c\u8bf4\u7b2c \\(\\lfloor\\sqrt{n}\\rfloor\\) \u5757\u7684\u53f3\u8fb9\u754c\u6ca1\u6709\u8fbe\u5230 \\(n\\) \uff0c\u90a3\u4e48\u5c31\u8ba9\u7b2c \\(\\lceil\\sqrt{n}\\rceil\\) \u5757\u7ef4\u62a4\u533a\u95f4 \\([i\\times \\lfloor \\sqrt{n} \\rfloor +1,n]\\) \u5373\u53ef\u3002</p> <p>\u53cd\u4e4b\u662f\u4e0d\u4f1a\u6709\u7b2c \\(\\lceil\\sqrt{n}\\rceil\\) \u5757\u7684\uff0c\u56e0\u4e3a\u6b64\u65f6 \\(\\lfloor\\sqrt{n}\\rfloor=\\lceil\\sqrt{n}\\rceil=\\sqrt{n}\\)\u3002</p> <p></p> <p>\u7136\u540e\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u4f4d\u7f6e \\(i\\) \u5728\u5206\u5757\u4e4b\u540e\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5757 \uff08\\(\\text{belong}_i\\)\uff09\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\uff0c\u8bb0\u5f55\u5176\u5de6\u53f3\u8fb9\u754c\u4ee5\u53ca\u5757\u5185\u548c\uff0c\u5e76\u7ef4\u62a4\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u61d2\u6807\u8bb0\u7684 \\(\\text{add}\\)\uff0c\u8868\u793a\u8fd9\u4e2a\u5757\u91cc\u7684\u6240\u6709\u6570\u90fd\u88ab\u52a0\u8fc7\u591a\u5c11\u3002</p> <p>\u6bcf\u6b21\u64cd\u4f5c\u533a\u95f4 \\([l,r]\\) \u7684\u65f6\u5019\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a</p> <ol> <li>\u5982\u679c \\(\\text{belong}_l=\\text{belong}_r\\) \uff0c\u90a3\u4e48\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u533a\u95f4 \\([l,r]\\)\u3002</li> <li>\u53cd\u4e4b\uff0c\u628a\u8fd9\u4e2a\u533a\u95f4\u4e24\u8fb9\u975e\u6574\u5757\u7684\u90e8\u5206\u66b4\u529b\u4fee\u6539\uff0c\u7136\u540e\u4e3a\u6240\u6709\u6574\u5757\u7684\u90e8\u5206\u6253\u4e0a\u6807\u8bb0\u3002</li> </ol> <p></p> <p>\u67e5\u8be2\u7684\u65f6\u5019\u4e5f\u6bd4\u8f83\u7c7b\u4f3c\uff1a</p> <ol> <li>\u76f4\u63a5\u66b4\u529b\u626b\u4e00\u904d \\([l,r]\\) \uff0c\u6c42\u548c\u5373\u53ef\uff08\u4e0d\u8981\u5fd8\u8bb0\u628a\u6807\u8bb0\u52a0\u4e0a\uff09</li> <li>\u975e\u6574\u5757\u90e8\u5206\u66b4\u529b\u626b\uff0c\u6574\u5757\u90e8\u5206\u7528\u5757\u5185\u548c\u52a0\u4e0a \\(\\text{add}\\) \u6807\u8bb0\u3002</li> </ol> <p>\u56e0\u4e3a\u6700\u591a\u53ea\u6709 \\(\\lceil\\sqrt{n}\\rceil\\) \u5757\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f \\(\\text{O}((n+q)\\times \\sqrt{n})\\)\u3002</p> <p>\u4ee5\u4e0a\u7684\u8fc7\u7a0b\u53ef\u4ee5\u603b\u7ed3\u4e3a\u4e00\u79cd \u5206\u5757\u601d\u60f3\uff1a</p> <ol> <li>\u5c06\u5e8f\u5217\u5206\u6210 \\(B\\) \u5757</li> <li>\u5bf9\u4e8e\u4e00\u6b21\u64cd\u4f5c\uff0c\u8003\u8651\uff1a<ul> <li>\u6574\u5757\u7684\u64cd\u4f5c\u600e\u4e48\u5904\u7406\uff08\u4e00\u822c\u662f\u6574\u4f53\u5904\u7406\uff09</li> <li>\u5c0f\u6bb5\u7684\u64cd\u4f5c\u600e\u4e48\u5904\u7406\uff08\u4e00\u822c\u662f\u66b4\u529b\uff09</li> </ul> </li> <li>\u8ba1\u7b97\u51fa\u590d\u6742\u5ea6\u4e4b\u540e\uff0c\u7528\u5747\u503c\u4e0d\u7b49\u5f0f\u4e00\u7c7b\u7684\u4e1c\u897f\u6c42\u51fa\u6700\u4f18\u7684 \\(B\\)\u3002</li> </ol>"}, {"location": "algor/ds/blocks/#_2", "title": "\u4e60\u9898", "text": ""}, {"location": "algor/ds/blocks/#loj6277-1", "title": "LOJ6277. \u6570\u5217\u5206\u5757\u5165\u95e8 1", "text": "<p>\u533a\u95f4\u52a0\u5355\u70b9\u67e5\uff0c\u53ea\u9700\u8981\u5206\u5757\u7684\u65f6\u5019\u8bb0\u5f55 \\(\\text{add}\\) \u914d\u4ee5\u66b4\u529b\u4fee\u6539\u3002</p> <p>\u67e5\u8be2\u65f6\u5e26\u4e0a\u6807\u8bb0\u5373\u53ef\u3002</p> Code <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int si = 5e4 + 10;\nint n, q, t;\nint a[si], add[si];\nint L[si], R[si], belong[si];\n\ninline void change(int l, int r, int v) {\nint p = belong[l], q = belong[r];\n\nif (p == q) {\nfor (register int i = l; i &lt;= r; ++i) {\na[i] += v;\n}\n} else {\nfor (register int i = l; i &lt;= R[p]; ++i) {\na[i] += v;\n}\n\nfor (register int i = L[q]; i &lt;= r; ++i) {\na[i] += v;\n}\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nadd[i] += v;\n}\n}\n}\ninline int query(int x) {\nreturn a[x] + add[belong[x]];\n}\n\nint main() {\nscanf(\"%d\", &amp;n), t = sqrt(n);\n\nfor (register int i = 1; i &lt;= n; ++i) {\nscanf(\"%d\", &amp;a[i]);\n}\n\nfor (register int i = 1; i &lt;= t; ++i) {\nL[i] = (i - 1) * t + 1, R[i] = i * t;\n}\n\nif (R[t] &lt; n)\n++t, L[t] = R[t - 1] + 1, R[t] = n;\n\nfor (register int i = 1; i &lt;= t; ++i) {\nfor (register int j = L[i]; j &lt;= R[i]; ++j) {\nbelong[j] = i;\n}\n}\n\nfor (register int i = 1; i &lt;= n; ++i) {\nint op, l, r, c;\nscanf(\"%d%d%d%d\", &amp;op, &amp;l, &amp;r, &amp;c);\n\nif (op == 0)\nchange(l, r, c);\nelse\nprintf(\"%d\\n\", query(r));\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/blocks/#luogu3372-1", "title": "Luogu3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1", "text": "<p>\u533a\u95f4\u52a0\u533a\u95f4\u548c\uff0c\u5206\u5757\u4e4b\u540e\u6309\u7167\u4e0a\u9762\u201c\u539f\u7406\u201d\u90e8\u5206\u7684\u505a\u6cd5\u6765\u5c31\u884c\u3002</p> <p>\u53ea\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u4ec0\u4e48\u65f6\u5019\u8981\u66f4\u65b0\u5757\u5185\u548c\uff0c\u4ec0\u4e48\u65f6\u5019\u8981\u6253\u6807\u8bb0\u5c31\u884c\u3002</p> Code <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si = 2e5 + 10;\nint n, m, t;\nint a[si], add[si], belong[si];\nint L[si], R[si], sum[si];\n\ninline void change(int l, int r, int v) {\nint p = belong[l], q = belong[r];\n\nif (p == q) {\nfor (register int i = l; i &lt;= r; ++i) {\na[i] += v;\n}\n\nsum[p] += v * (r - l + 1);\n} else {\nfor (register int i = l; i &lt;= R[p]; ++i) {\na[i] += v;\n}\n\nsum[p] += v * (R[p] - l + 1);\n\nfor (register int i = L[q]; i &lt;= r; ++i) {\na[i] += v;\n}\n\nsum[q] += v * (r - L[q] + 1);\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nadd[i] += v;\n}\n}\n}\ninline int query(int l, int r) {\nint p = belong[l], q = belong[r];\nint res = 0;\n\nif (p == q) {\nfor (register int i = l; i &lt;= r; ++i) {\nres += a[i];\n}\n\nres += add[p] * (r - l + 1);\n} else {\nfor (register int i = l; i &lt;= R[p]; ++i) {\nres += a[i];\n}\n\nres += add[p] * (R[p] - l + 1);\n\nfor (register int i = L[q]; i &lt;= r; ++i) {\nres += a[i];\n}\n\nres += add[q] * (r - L[q] + 1);\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nres += sum[i], res += add[i] * (R[i] - L[i] + 1);\n}\n}\n\nreturn res;\n}\n\nsigned main() {\nscanf(\"%lld%lld\", &amp;n, &amp;m), t = sqrt(n * 1.0);\n\nfor (register int i = 1; i &lt;= n; ++i) {\nscanf(\"%lld\", &amp;a[i]);\n}\n\nfor (register int i = 1; i &lt;= t; ++i) {\nL[i] = (i - 1) * sqrt(n * 1.0) + 1, R[i] = i * sqrt(n * 1.0);\n}\n\nif (R[t] &lt; n)\n++t, L[t] = R[t - 1] + 1, R[t] = n;\n\nfor (register int i = 1; i &lt;= t; ++i) {\nfor (register int j = L[i]; j &lt;= R[i]; ++j) {\nsum[i] += a[j], belong[j] = i;\n}\n}\n\nwhile (m--) {\nint op, l, r;\nscanf(\"%lld%lld%lld\", &amp;op, &amp;l, &amp;r);\n\nif (op == 1) {\nint k;\nscanf(\"%lld\", &amp;k);\nchange(l, r, k);\n} else\nprintf(\"%lld\\n\", query(l, r));\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/blocks/#loj6278-2", "title": "LOJ6278. \u6570\u5217\u5206\u5757\u5165\u95e8 2", "text": "<p>\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u67e5\u8be2\u6bd4 \\(c^2\\) \u5c0f\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u9996\u5148\u7ee7\u7eed\u5206\u5757\uff0c\u4ecd\u65e7\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5757\u7684 \\(\\text{add}\\) \u6807\u8bb0\u3002</p> <p>\u8003\u8651\u5982\u4f55\u67e5\u8be2\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u6570\u6bd4 \\(c^2\\) \u5c0f\u3002</p> <p>\u6cbf\u7528\u201c\u5c0f\u6bb5\u6734\u7d20\uff0c\u5927\u6bb5\u7ef4\u62a4\u201d\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5728\u67e5\u8be2\u65f6\u5728\u4e24\u8fb9\u7684\u4e24\u4e2a\u4e0d\u5b8c\u6574\u5757\u8fdb\u884c\u66b4\u529b\u626b\u63cf\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u88ab\u5305\u542b\u7684\u6574\u5757\uff0c\u8003\u8651\u5728\u5757\u5185\u4e8c\u5206\u3002</p> <p>\u4e3a\u4e86\u4e8c\u5206\uff0c\u6211\u4eec\u9700\u8981\u989d\u5916\u591a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\u7ef4\u62a4\u4e00\u4e2a\u6709\u5e8f\u7684\u5e8f\u5217 \\(v\\) \u3002</p> <p>\u5f53\u6211\u4eec\u66b4\u529b\u4fee\u6539\u5c0f\u6bb5\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u5c0f\u6bb5\u6240\u5c5e\u7684\u5757\u7684\u5355\u8c03\u6027\u5c31\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u8fd9\u4e2a\u5757\u7684 \\(v\\) \u8fdb\u884c\u91cd\u6392\u3002</p> <p>\u5982\u679c\u662f\u5927\u6bb5\u6253\u6807\u8bb0\u7684\u8bdd\uff0c\u56e0\u4e3a\u5757\u5185\u6bcf\u4e00\u4e2a\u6570\u90fd\u88ab\u52a0\u4e86\u540c\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u5355\u8c03\u6027\u4e0d\u4f1a\u6539\u53d8\uff0c\u4e0d\u9700\u8981\u91cd\u6392\u3002</p> <p>\u90a3\u4e48\u5927\u6bb5\u67e5\u8be2\u7684\u65f6\u5019\u53ea\u9700\u8981\u628a \\(c^2\\) \u51cf\u53bb\u6bcf\u4e2a\u5757\u7684\u6807\u8bb0\u4e4b\u540e\u7136\u540e\u4e8c\u5206\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u521d\u59cb\u5316\u7684\u65f6\u5019\u4e0d\u8981\u5fd8\u8bb0\u628a\u5143\u7d20\u6254\u8fdb \\(v\\) \u91cc\u9762\uff01</p> Code <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int si = 5e4 + 10;\nconstexpr int bsi = ceil(sqrt(si)) + 10;\nint n, t;\nint a[si], belong[si], add[si];\nint L[si], R[si];\nstd::vector&lt;int&gt;v[bsi];\n\ninline void reset(int pos) {\nv[pos].clear();\n\nfor (register int i = L[pos]; i &lt;= R[pos]; ++i) {\nv[pos].push_back(a[i]);\n}\n\nsort(v[pos].begin(), v[pos].end());\n}\ninline void change(int l, int r, int v) {\nint p = belong[l], q = belong[r];\n\nif (p == q) {\nfor (register int i = l; i &lt;= r; ++i) {\na[i] += v;\n}\n\nreset(p);\n} else {\nfor (register int i = l; i &lt;= R[p]; ++i) {\na[i] += v;\n}\n\nreset(p);\n\nfor (register int i = L[q]; i &lt;= r; ++i) {\na[i] += v;\n}\n\nreset(q);\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nadd[i] += v;\n}\n}\n}\ninline int query(int l, int r, int c) {\nint p = belong[l], q = belong[r];\nint res = 0, limit = c * c;\n\nif (p == q) {\nfor (register int i = l; i &lt;= r; ++i) {\nif (a[i] + add[p] &lt; limit)\n++res;\n}\n} else {\nfor (register int i = l; i &lt;= R[p]; ++i) {\nif (a[i] + add[p] &lt; limit)\n++res;\n}\n\nfor (register int i = L[q]; i &lt;= r; ++i) {\nif (a[i] + add[q] &lt; limit)\n++res;\n}\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nint x = limit - add[i];\nres += lower_bound(v[i].begin(), v[i].end(), x) - v[i].begin();\n}\n}\n\nreturn res;\n}\n\nint main() {\nscanf(\"%d\", &amp;n), t = sqrt(n);\n\nfor (register int i = 1; i &lt;= n; ++i) {\nscanf(\"%d\", &amp;a[i]);\n}\n\nfor (register int i = 1; i &lt;= t; ++i) {\nL[i] = (i - 1) * sqrt(n) + 1, R[i] = i * sqrt(n);\n}\n\nif (R[t] &lt; n)\n++t, L[t] = R[t - 1] + 1, R[t] = n;\n\nfor (register int i = 1; i &lt;= t; ++i) {\nfor (register int j = L[i]; j &lt;= R[i]; ++j) {\nbelong[j] = i, v[i].push_back(a[j]);\nreset(i);\n}\n}\n\nfor (register int i = 1; i &lt;= n; ++i) {\nint op, l, r, c;\nscanf(\"%d%d%d%d\", &amp;op, &amp;l, &amp;r, &amp;c);\n\nif (op == 0)\nchange(l, r, c);\nelse\nprintf(\"%d\\n\", query(l, r, c));\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/blocks/#loj6279-3", "title": "LOJ6279. \u6570\u5217\u5206\u5757\u5165\u95e8 3", "text": "<p>\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u8be2\u95ee\u524d\u9a71\u3002</p> <p>\u6cbf\u7528\u4e0a\u4e00\u4e2a\u9898\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5c0f\u6bb5\u66b4\u529b\uff0c\u5927\u6bb5\u4e8c\u5206\u3002</p> <p>\u4f46\u662f\u5982\u679c\u76f4\u63a5\u5bf9\u5757\u5185\u4e8c\u5206\u7684\u8bdd\u53ef\u80fd\u4f1a\u56e0\u4e3a\u6ca1\u53bb\u91cd\u800c\u7206\u70b8\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u4e0a\u9762\u90a3\u9898\u7684 <code>std::vector</code> \u6362\u6210 <code>std::set</code> \u3002</p> <p>\u90a3\u4e48\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u5757\u7684 <code>std::set</code> \u91cc\u9762\u7528 <code>lower_bound</code> \u4e8c\u5206\u4e4b\u540e\u4ee4\u8fed\u4ee3\u5668\u51cf\u4e00\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\uff08\u56e0\u4e3a <code>lower_bound</code> \u6c42\u7684\u662f\u5927\u4e8e\u7b49\u4e8e \\(x\\) \u7684\u6700\u5c0f\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u8fed\u4ee3\u5668\u5728 <code>std::set</code> \u91cc\u9762\u51cf\u4e00\u4e4b\u540e\u5c31\u662f\u524d\u9a71\u4e86\uff09</p> <p>\u5f53\u7136\uff0c\u4e8c\u5206\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u4f7f\u7528\u5bb9\u5668\u672c\u8eab\u7684<code>lower_bound</code> \uff0c\u4e0d\u7136\u6548\u7387\u4f1a\u53ca\u5176\u4f4e\u4e0b\uff08\u5177\u4f53\u53ef\u4ee5\u770b\u8fd9\u91cc\uff09\u3002</p> <p>\u53e6\u5916\u4e0d\u8981\u5fd8\u8bb0\u521d\u59cb\u5316\u7684\u65f6\u5019\u628a\u5143\u7d20\u6254\u8fdb <code>std::set</code> \u91cc\u9762\uff0c\u4e5f\u4e0d\u8981\u5fd8\u8bb0\u5224\u4e8c\u5206\u4e4b\u540e\u4e8c\u5206\u51fa <code>s.begin()</code> \u7684\u60c5\u51b5\u3002</p> Code <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int si = 1e5 + 10;\nconstexpr int bsi = ceil(sqrt(si)) + 10;\nint n, t;\nint a[si], add[si], belong[si];\nint L[si], R[si];\nstd::set&lt;int&gt;s[bsi];\n\ninline void reset(int pos) {\ns[pos].clear();\n\nfor (register int i = L[pos]; i &lt;= R[pos]; ++i) {\ns[pos].insert(a[i]);\n}\n}\ninline void change(int l, int r, int c) {\nint p = belong[l], q = belong[r];\n\nif (p == q) {\nfor (register int i = l; i &lt;= r; ++i) {\na[i] += c;\n}\n\nreset(p);\n} else {\nfor (register int i = l; i &lt;= R[p]; ++i) {\na[i] += c;\n}\n\nreset(p);\n\nfor (register int i = L[q]; i &lt;= r; ++i) {\na[i] += c;\n}\n\nreset(q);\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nadd[i] += c;\n}\n}\n}\ninline int query(int l, int r, int c) {\nint p = belong[l], q = belong[r];\nint res = -1;\n\nif (p == q) {\nfor (register int i = l; i &lt;= r; ++i) {\nif (a[i] + add[p] &lt; c)\nres = max(res, a[i] + add[p]);\n}\n} else {\nfor (register int i = l; i &lt;= R[p]; ++i) {\nif (a[i] + add[p] &lt; c)\nres = max(res, a[i] + add[p]);\n}\n\nfor (register int i = L[q]; i &lt;= r; ++i) {\nif (a[i] + add[q] &lt; c)\nres = max(res, a[i] + add[q]);\n}\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nint x = c - add[i];\nstd::set&lt;int&gt;::iterator it;\nit = s[i].lower_bound(x);\n\nif (it == s[i].begin())\ncontinue;\n\nit--, res = max(res, *it + add[i]);\n}\n}\n\nreturn res;\n}\n\nint main() {\nscanf(\"%d\", &amp;n), t = sqrt(n);\n\nfor (register int i = 1; i &lt;= n; ++i) {\nscanf(\"%d\", &amp;a[i]);\n}\n\nfor (register int i = 1; i &lt;= t; ++i) {\nL[i] = (i - 1) * sqrt(n) + 1, R[i] = i * sqrt(n);\n}\n\nif (R[t] &lt; n)\n++t, L[t] = R[t - 1] + 1, R[t] = n;\n\nfor (register int i = 1; i &lt;= t; ++i) {\nfor (register int j = L[i]; j &lt;= R[i]; ++j) {\nbelong[j] = i, s[i].insert(a[j]);\n}\n}\n\nfor (register int i = 1; i &lt;= n; ++i) {\nint op, l, r, c;\nscanf(\"%d%d%d%d\", &amp;op, &amp;l, &amp;r, &amp;c);\n\nif (op == 0)\nchange(l, r, c);\nelse\nprintf(\"%d\\n\", query(l, r, c));\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/blocks/#loj6280-4", "title": "LOJ6280. \u6570\u5217\u5206\u5757\u5165\u95e8 4", "text": "<p>\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6c42\u548c\u5e76\u53d6\u6a21\u3002</p> <p>\u548c Luogu3372 \u57fa\u672c\u6ca1\u6709\u533a\u522b\uff0c\u53ea\u662f\u5728\u67e5\u8be2\u7684\u65f6\u5019\u591a\u4e86\u4e2a\u53d6\u6a21\u800c\u5df2\u3002</p> Code <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si = 2e5 + 10;\nint n, m, t;\nint a[si], add[si], belong[si];\nint L[si], R[si], sum[si];\n\ninline void change(int l, int r, int v) {\nint p = belong[l], q = belong[r];\n\nif (p == q) {\nfor (register int i = l; i &lt;= r; ++i) {\na[i] += v;\n}\n\nsum[p] += v * (r - l + 1);\n} else {\nfor (register int i = l; i &lt;= R[p]; ++i) {\na[i] += v;\n}\n\nsum[p] += v * (R[p] - l + 1);\n\nfor (register int i = L[q]; i &lt;= r; ++i) {\na[i] += v;\n}\n\nsum[q] += v * (r - L[q] + 1);\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nadd[i] += v;\n}\n}\n}\ninline int query(int l, int r, int mod) {\nint p = belong[l], q = belong[r];\nint res = 0;\n\nif (p == q) {\nfor (register int i = l; i &lt;= r; ++i) {\nres = (res + a[i]) % mod;\n}\n\nres = (res + add[p] * (r - l + 1)) % mod;\n} else {\nfor (register int i = l; i &lt;= R[p]; ++i) {\nres = (res + a[i]) % mod;\n}\n\nres = (res + add[p] * (R[p] - l + 1)) % mod;\n\nfor (register int i = L[q]; i &lt;= r; ++i) {\nres = (res + a[i]) % mod;\n}\n\nres = (res + add[q] * (r - L[q] + 1)) % mod;\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nres = (res + sum[i]) % mod, res = (res + add[i] * (R[i] - L[i] + 1)) % mod;\n}\n}\n\nreturn res % mod;\n}\n\nsigned main() {\nscanf(\"%lld\", &amp;n), t = sqrt(n);\n\nfor (register int i = 1; i &lt;= n; ++i) {\nscanf(\"%lld\", &amp;a[i]);\n}\n\nfor (register int i = 1; i &lt;= t; ++i) {\nL[i] = (i - 1) * sqrt(n) + 1, R[i] = i * sqrt(n);\n}\n\nif (R[t] &lt; n)\n++t, L[t] = R[t - 1] + 1, R[t] = n;\n\nfor (register int i = 1; i &lt;= t; ++i) {\nfor (register int j = L[i]; j &lt;= R[i]; ++j) {\nsum[i] += a[j], belong[j] = i;\n}\n}\n\nfor (register int i = 1; i &lt;= n; ++i) {\nint op, l, r, c;\nscanf(\"%lld%lld%lld%lld\", &amp;op, &amp;l, &amp;r, &amp;c);\n\nif (op == 0)\nchange(l, r, c);\nelse\nprintf(\"%lld\\n\", query(l, r, c + 1));\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/blocks/#loj6281-5", "title": "LOJ6281. \u6570\u5217\u5206\u5757\u5165\u95e8 5", "text": "<p>\u533a\u95f4\u5f00\u6839\u53f7\u5e76\u5411\u4e0b\u53d6\u6574\uff0c\u533a\u95f4\u6c42\u548c\u3002</p> <p>\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e2a\u597d\u5199\u4e00\u70b9\u7684\u505a\u6cd5\uff1a</p> <p>\u8fd8\u662f\u5206\u5757\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\u88ab\u5305\u542b\u5728\u4fee\u6539\u533a\u95f4\u7684\u5b8c\u6574\u5757\u76f4\u63a5\u5168\u90e8\u66b4\u529b\u5f00\u6839\u53f7\uff0c\u5c0f\u5757\u4e5f\u662f\u5168\u90e8\u66b4\u529b\u5f00\u6839\u53f7\u3002</p> <p>\u5982\u679c\u5757\u5185\u7684\u6700\u5927\u503c \\(\\le 1\\) \uff0c\u90a3\u4e48\u8fd9\u4e2a\u5757\u5c31\u4e0d\u7528\u5f00\u6839\u53f7\u3002</p> <p>\u6240\u4ee5\u6bcf\u6b21\u66b4\u529b\u4fee\u6539\u5b8c\u4e00\u4e2a\u5757\uff08\u6216\u5757\u7684\u90e8\u5206\uff09\u4e4b\u540e\u9700\u8981\u66f4\u65b0\u4e00\u4e0b\u533a\u95f4\u6700\u5927\u503c\u3002</p> <p>\u53c8\u53d1\u73b0\u5bf9\u4e8e <code>int</code> \u8303\u56f4\u5185\u7684\u6b63\u6574\u6570\uff0c\u5f00 \\(5\\) \u6b21\u6839\u53f7\u5c31\u53ef\u4ee5 \\(=1\\) \u4e86\u3002</p> <p>\u5219\u5bb9\u6613\u8bc1\u660e\uff0c\u6bcf\u4e2a\u5757\u6700\u591a\u4f1a\u88ab\u5f00\u6839\u53f7 \\(4\\) \u6b21\uff0c\u6240\u4ee5\u53ef\u8fc7\u3002</p> Code <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int si = 5e4 + 10;\nint n, t;\nint a[si], add[si], belong[si];\nint L[si], R[si], sum[si], maxv[si];\n\ninline void change(int l, int r) {\nint p = belong[l], q = belong[r];\n\nif (p == q) {\nif (maxv[p] == 0 || maxv[p] == 1)\nreturn;\n\nfor (register int i = l; i &lt;= r; ++i) {\nint rmp = a[i];\na[i] = sqrt(a[i]), sum[p] -= (rmp - a[i]);\n}\n\nint mx = 0;\n\nfor (register int i = L[p]; i &lt;= R[p]; ++i) {\nmx = max(mx, a[i]);\n}\n\nmaxv[p] = mx;\n} else {\nif (maxv[p] != 0 &amp;&amp; maxv[p] != 1) {\nfor (register int i = l; i &lt;= R[p]; ++i) {\nint rmp = a[i];\na[i] = sqrt(a[i]), sum[p] -= (rmp - a[i]);\n}\n\nint mx = 0;\n\nfor (register int i = L[p]; i &lt;= R[p]; ++i) {\nmx = max(mx, a[i]);\n}\n\nmaxv[p] = mx;\n}\n\nif (maxv[q] != 0 &amp;&amp; maxv[q] != 1) {\nfor (register int i = L[q]; i &lt;= r; ++i) {\nint rmp = a[i];\na[i] = sqrt(a[i]), sum[q] -= (rmp - a[i]);\n}\n\nint mx = 0;\n\nfor (register int i = L[q]; i &lt;= R[q]; ++i) {\nmx = max(mx, a[i]);\n}\n\nmaxv[q] = mx;\n}\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nif (maxv[i] == 0 || maxv[i] == 1)\ncontinue;\n\nint mx = 0;\n\nfor (register int j = L[i]; j &lt;= R[i]; ++j) {\nint rmp = a[j];\na[j] = sqrt(a[j]), sum[i] -= (rmp - a[j]);\nmx = max(mx, a[j]);\n}\n\nmaxv[i] = mx;\n}\n}\n}\ninline int query(int l, int r) {\nint p = belong[l], q = belong[r];\nint res = 0;\n\nif (p == q) {\nfor (register int i = l; i &lt;= r; ++i) {\nres += a[i];\n}\n} else {\nfor (register int i = l; i &lt;= R[p]; ++i) {\nres += a[i];\n}\n\nfor (register int i = L[q]; i &lt;= r; ++i) {\nres += a[i];\n}\n\nfor (register int i = p + 1; i &lt;= q - 1; ++i) {\nres += sum[i];\n}\n}\n\nreturn res;\n}\n\nint main() {\nscanf(\"%d\", &amp;n), t = sqrt(n);\n\nfor (register int i = 1; i &lt;= n; ++i) {\nscanf(\"%d\", &amp;a[i]);\n}\n\nfor (register int i = 1; i &lt;= t; ++i) {\nL[i] = (i - 1) * sqrt(n) + 1, R[i] = i * sqrt(n);\n}\n\nif (R[t] &lt; n)\n++t, L[t] = R[t - 1] + 1, R[t] = n;\n\nfor (register int i = 1; i &lt;= t; ++i) {\nfor (register int j = L[i]; j &lt;= R[i]; ++j) {\nbelong[j] = i, sum[i] += a[j], maxv[i] = max(maxv[i], a[j]);\n}\n}\n\nfor (register int i = 1; i &lt;= n; ++i) {\nint op, l, r, c;\nscanf(\"%d%d%d%d\", &amp;op, &amp;l, &amp;r, &amp;c);\n\nif (op == 0)\nchange(l, r);\nelse\nprintf(\"%d\\n\", query(l, r));\n}\n\nreturn 0;\n}\n// it is better to use tag &amp; rem the time of sqrt.\n</code></pre> <p>\u8fd9\u91cc\u6709\u53e6\u4e00\u79cd\u5199\u6cd5\uff1a</p> <p>\u8003\u8651\u628a\u6574\u5757\u7684\u5f00\u6839\u53f7\u6b21\u6570\u8bb0\u5f55\u4e00\u4e0b\u3002</p> <p>\u644a\u5e73 \\(\\text{add}\\) \u7684\u65f6\u5019\u53ea\u9700\u8981\u66b4\u529b\u5904\u7406\u5f00 \\(1,2,3,4\\) \u6b21\u6839\u53f7\u7684\u60c5\u51b5\uff0c\u518d\u52a0\u4e0a\u4e0a\u9762\u7684\u505a\u6cd5\u4e2d\u7684\u4f18\u5316\u5373\u53ef\u3002</p> <p>\u4e0d\u8fc7\u5904\u7406\u5f00\u8d85\u8fc7 \\(5\\) \u6b21\u6839\u53f7\u7684\u60c5\u51b5\u9700\u8981\u6ce8\u610f\u533a\u5206 \\(0\\) \u548c \\(1\\)\u3002</p>"}, {"location": "algor/ds/dsu/", "title": "\u5e76\u67e5\u96c6", "text": ""}, {"location": "algor/ds/dsu/#_1", "title": "\u6982\u8ff0", "text": "<p>dsu \u5927\u6982\u5c31\u662f\u62ff\u6765\u7ef4\u62a4\u4e00\u7cfb\u5217\u5143\u7d20\u6240\u5c5e\u96c6\u5408\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u652f\u6301\u5408\u5e76\u96c6\u5408\uff0c\u67e5\u8be2\u6240\u5c5e\u96c6\u5408\u7684\u64cd\u4f5c\u3002</p> <p>\u53d8\u79cd\u5c31\u6269\u5c55\u57df\u548c\u5e26\u6743\u4e24\u79cd\uff0c\u8fd8\u6709\u4e24\u79cd\u6bd4\u8f83\u5e38\u89c1\u7684\u5c0f trick\u3002</p> <p>\u4e0b\u9762\u5c31\u7b80\u5355\u63d0\u4e24\u53e5\u3002</p>"}, {"location": "algor/ds/dsu/#_2", "title": "\u57fa\u672c\u64cd\u4f5c", "text": "<p>\u9996\u5148\u8bbe \\(pa(i)\\) \u8868\u793a\u5143\u7d20 \\(i\\) \u6240\u5c5e\u96c6\u5408\u7684\u4ee3\u8868\u5143\u7d20\u3002\u521d\u59cb \\(pa(i) = i\\)\u3002</p>"}, {"location": "algor/ds/dsu/#_3", "title": "\u67e5\u8be2\u6240\u5c5e\u96c6\u5408", "text": "<p>\u8fd9\u4e2a\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u76f4\u63a5\u4ece\u5f53\u524d\u8282\u70b9\u4e00\u76f4\u5411\u4e0a\u8df3\uff0c\u7136\u540e\u76f4\u5230\u627e\u5230\u4e00\u4e2a \\(pa(i) = i\\) \u7684\u8282\u70b9\u5373\u53ef\u3002</p> <pre><code>int root(int x) {\nif(pa[x] != x) return root(pa[x]);\nreturn pa[x];\n}\n</code></pre> <p>\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u4f18\u5316\u662f\uff0c\u6bcf\u6b21\u67e5\u8be2\u5b8c\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\uff0c\u628a\u5b83\u7684 \\(pa(i)\\) \u76f4\u63a5\u6307\u5411\u5b9e\u9645\u7684\u96c6\u5408\u6839\u3002</p> <p>\u8fd9\u4e1c\u897f\u53eb\u8def\u5f84\u538b\u7f29\u3002</p> <pre><code>int root(int x) {\nif(pa[x] != x) pa[x] = root(pa[x]);\nreturn pa[x];\n}\n</code></pre>"}, {"location": "algor/ds/dsu/#_4", "title": "\u5408\u5e76\u4e24\u4e2a\u96c6\u5408", "text": "<p>\u5c31\u76f4\u63a5\u628a\u4e00\u4e2a\u96c6\u5408\u7684\u6839\u7684 \\(pa\\) \u8bbe\u7f6e\u6210\u53e6\u5916\u4e00\u4e2a\u96c6\u5408\u7684\u6839\u5373\u53ef\u3002</p> <pre><code>void Merge(int x, int y) {\nint rx = root(x), ry = root(y);\nif(rx == ry) return;\npa[ry] = rx; return;\n}\n</code></pre> <p>\u4f46\u662f\u6ce8\u610f\u5230\u6211\u4eec\u5e0c\u671b\u5408\u5e76\u4e4b\u540e\u7684\u8df3 \\(pa\\) \u8def\u5f84\u957f\u5ea6\u66f4\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u542f\u53d1\u5f0f\u5408\u5e76\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\u7ef4\u62a4\u96c6\u5408\u7684 \\(siz\\) \u6216\u8005 \\(dep\\)\uff0c\u7136\u540e\u542f\u53d1\u5f0f\u5408\u5e76\u4e00\u4e0b\u5373\u53ef\u3002</p> <pre><code>void Merge(int x, int y) {\nint rx = root(x), ry = rooot(y);\nif(rx == ry) return; if(siz[rx] &lt; siz[ry]) pa[rx] = ry, siz[rx] += siz[ry];\nelse pa[ry] = rx, siz[ry] += siz[rx];\n}\n</code></pre> <p>\u5982\u679c\u5355\u72ec\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u6216\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u590d\u6742\u5ea6\u90fd\u662f 1log\u3002</p> <p>\u5982\u679c\u540c\u65f6\u4f7f\u7528\uff0c\u590d\u6742\u5ea6\u662f \\(O(\\alpha(n))\\)\uff0c\u8fd1\u4e4e \\(O(1)\\)\u3002</p>"}, {"location": "algor/ds/dsu/#_5", "title": "\u53d8\u79cd", "text": ""}, {"location": "algor/ds/dsu/#_6", "title": "\u5e26\u6743\u5e76\u67e5\u96c6", "text": "<p>\u8fd9\u4e2a\u5c31\u662f\u7ef4\u62a4\u4e86\u4e00\u4e0b\u8282\u70b9\u5230\u7236\u8282\u70b9\u7684\u4e00\u4e2a\u8ddd\u79bb\u4e00\u6837\u7684\u4e1c\u897f\u3002</p> <p>\u6ca1\u5565\u597d\u8bf4\u7684\u3002</p>"}, {"location": "algor/ds/dsu/#_7", "title": "\u6269\u5c55\u57df\u5e76\u67e5\u96c6", "text": "<p>\u5176\u672c\u8d28\u662f\u6709\u591a\u4e2a\u4f20\u9012\u6027\u4fe1\u606f\u7684\u65f6\u5019\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u62c6\u591a\u4e2a\u70b9\u51fa\u6765\u7ef4\u62a4\u3002</p> <p>\u7136\u540e\u5728\u7ef4\u62a4\u7684\u65f6\u5019\u5224\u65ad\u77db\u76fe\u548c\u4ece\u5c5e\u5173\u7cfb\u3002</p>"}, {"location": "algor/ds/dsu/#_8", "title": "\u5e94\u7528", "text": ""}, {"location": "algor/ds/dsu/#_9", "title": "\u7ef4\u62a4\u4f20\u9012\u6027\u4fe1\u606f", "text": "<p>\u6bd4\u5982\u7ed9\u4f60\u4e00\u5806\u4e0d\u7b49\u5f0f\u5f62\u5982 \\(x_1 = x_2\\) \u6216 \\(x_1 \\not= x_2\\) \u8fd9\u79cd\u3002</p> <p>\u95ee\u4f60\u662f\u5426\u53ef\u80fd\u6ee1\u8db3\u8981\u6c42\u3002\u53d1\u73b0\u7b49\u53f7\u662f\u6709\u4f20\u9012\u6027\u7684\uff0c\u76f4\u63a5\u628a\u6240\u6709\u7b49\u4e8e\u7684\u6254\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\uff0c\u626b\u4e00\u904d\u4e0d\u7b49\u7684\u770b\u662f\u5426\u6ee1\u8db3\u5373\u53ef\u3002</p> <p>\u8fd9\u79cd\u95ee\u9898\u4e5f\u53ef\u4ee5\u7528 2-SAT \u6765\u505a\uff0c\u4f46\u662f 2-SAT \u9002\u7528\u6027\u66f4\u5e7f\u6cdb\u4e00\u70b9\u3002</p>"}, {"location": "algor/ds/dsu/#_10", "title": "\u5947\u602a\u7684\u8fde\u8fb9\u6280\u5de7", "text": "<p>\u8fd9\u662f\u4e4b\u524d\u505a GSS4 \u7684\u65f6\u5019 gjh \u6559\u6211\u7684\u3002</p> <p>\u76f4\u63a5\u770b\u8fd9\u91cc\u5427\uff1alink</p>"}, {"location": "algor/ds/fenwick/", "title": "\u6811\u72b6\u6570\u7ec4", "text": ""}, {"location": "algor/ds/fenwick/#_1", "title": "\u6982\u8ff0", "text": "<p>\u6570\u8bba\u91cc\u9762\u6709\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u7ed3\u8bba\uff0c\u4efb\u610f\u6b63\u6574\u6570\u90fd\u80fd\u88ab\u552f\u4e00\u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u4e0d\u540c\u7684 \\(2\\) \u7684\u6b21\u5e42\u7684\u548c</p> <p>\u8f6c\u5316\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u524d\u7f00 \\([1,x]\\)\uff0c\u5047\u8bbe \\(x\\) \u53ef\u4ee5\u88ab\u62c6\u5206\u6210 \\(2^{c_1} + 2^{c_2} + 2^{c_3} + \\dots 2^{c_m}\\)\uff0c\u90a3\u4e48 \\([1,x]\\) \u5c31\u53ef\u4ee5\u88ab\u62c6\u5206\u6210 \\(m\\) \u4e2a\u5c0f\u533a\u95f4\uff1a\\([1, 2^{c_1}], [2^{c_1} + 1, 2^{c_1} + 2^{c_2}], \\dots [2^{c_m - 1} + 1, 2^{c_m}]\\)\u3002</p> <p>\u5176\u4e2d \\(m = O(\\log x), c_i \\in [0, m], c_1 &gt; c_2 &gt; c_3 \\dots &gt; c_m\\)\u3002</p> <p>\u5982\u679c \\(x\\) \u7684\u62c6\u5206\u5305\u542b \\(2^{c_i}\\)\uff0c\u90a3\u4e48 \\(x\\) \u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u7684\u7b2c \\(c_i\\) \u4f4d\u5c31\u662f \\(1\\)\uff08\u6700\u4f4e\u4f4d\u4e3a\u7b2c \\(0\\) \u4f4d\uff09\u3002</p> <p>\u6709\u4e00\u4e2a\u7ecf\u5178\u7684\u8fd0\u7b97\u53eb \\(\\text{lowbit}\\)\uff0c\u53ef\u4ee5\u53d6\u51fa \\(x\\) \u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u7684\u6700\u4f4e\u7684 \\(1\\) \u548c\u6bd4\u5b83\u66f4\u4f4e\u7684\u6240\u6709 \\(0\\) \u7ec4\u6210\u7684\u6570\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 \\(\\text{lowbit}\\) \u6765\u904d\u5386\u524d\u7f00 \\([1,x]\\) \u5206\u6210\u7684\u8fd9\u4e9b\u533a\u95f4\uff1a</p> <pre><code>int lowbit(int x) { return x &amp; -x;} while(x) {\ncout &lt;&lt; x - lowbit(x) + 1 &lt;&lt; \" \" &lt;&lt; x &lt;&lt; endl;\nx -= lowbit(x);\n}\n</code></pre> <p>\u6811\u72b6\u6570\u7ec4\u5dee\u4e0d\u591a\u5c31\u662f\u5229\u7528\u8fd9\u4e2a\u601d\u60f3\uff0c\u5b9a\u4e49 \\(t(x)\\) \u4e3a \\(\\sum\\limits_{i = x - \\text{lowbit}(x) + 1}^x a(i)\\)\uff0c\u7136\u540e\u901a\u8fc7\u4e00\u4e9b\u6027\u8d28 \\(O(\\log n)\\) \u5730\u5feb\u901f\u7ef4\u62a4\u5e8f\u5217\u524d\u7f00\u548c\uff0c\u5e76\u4e14\u652f\u6301\u5355\u70b9\u4fee\u6539\u3002</p> <p>\u7ed3\u6784\u5982\u56fe\uff1a</p> <p></p> <p>\u5b9e\u9645\u4e0a\u6811\u72b6\u6570\u7ec4\u662f\u4e00\u4e2a\u68ee\u6797\uff0c\u56e0\u4e3a\u5f53 \\(n\\) \u4e0d\u662f \\(2\\) \u7684\u6574\u6570\u6b21\u5e42\u65f6\uff0c\u6811\u6839\u662f\u4e0d\u552f\u4e00\u7684\u3002</p> <p>\u6811\u72b6\u6570\u7ec4\u5177\u6709\u7684\u6027\u8d28\uff08\u77e5\u9053 \\(1 \\sim 4\\) \u6761\u5c31\u884c\uff09\uff1a</p> <ul> <li>\\(t(x),x \\not\\in \\text{root}\\) \u7684\u7236\u8282\u70b9\u662f \\(t(x + \\text{lowbit}(x))\\)</li> <li>\\(t(x)\\) \u7684\u5b50\u8282\u70b9\u4e2a\u6570\u662f \\(\\text{lowbit}(x)\\) \u7684\u4f4d\u6570\uff08\u6700\u4f4e\u7684\u4e00\u4f4d \\(1\\) \u662f\u7b2c\u51e0\u4f4d\uff0c\u7b2c \\(0\\) \u4f4d\u662f\u6700\u4f4e\u4f4d\uff09\u3002</li> <li>\\(t(x)\\) \u4fdd\u5b58\u7684\u662f\u5b50\u6811\u53f6\u8282\u70b9\uff08\u7b2c 0 \u5c42\uff09\u548c\u3002</li> <li>\u6df1\u5ea6\u4e3a \\(O(\\log n)\\)\u3002</li> <li>\u7b2c \\(i\\) \u5c42\u7684\u8282\u70b9\u95f4\u8ddd\u4e3a \\(2^{i - 1}\\)\u3002</li> <li>\u8282\u70b9\u7f16\u53f7\u7684 \\(\\text{lowbit}\\) \u4e3a \\(2^{i-1}\\) \uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u6240\u6709 \\(t(x)\\) \u6309 \\(\\text{lowbit}\\) \u5206\u7c7b\uff09</li> <li>\u7b2c \\(i\\) \u5c42\u7684\u8282\u70b9\u4e2a\u6570\u4e3a \\(\\lfloor\\dfrac{n + 1}{2^i}\\rfloor\\)</li> <li>\u7b2c \\(i\\) \u5c42\u7684\u8282\u70b9\u672c\u8d28\u4e0a\u662f\u5728\u786e\u5b9a \\(\\text{lowbit}\\) \u4e4b\u540e\uff0c\u4e0d\u65ad\u5728 \\(\\text{lowbit}\\) \u540e\u9762\u7684\u4f4d\u653e \\(1\\)\uff08\u524d\u9762\u4e0d\u80fd\u653e\uff0c\u4e0d\u7136 \\(\\text{lowbit}\\) \u5c31\u53d8\u4e86\uff09\u3002</li> </ul>"}, {"location": "algor/ds/fenwick/#_2", "title": "\u64cd\u4f5c", "text": ""}, {"location": "algor/ds/fenwick/#_3", "title": "\u5355\u70b9\u4fee\u6539", "text": "<p>\u6bd4\u8f83\u7b80\u5355\uff0c\u4fee\u6539\u4f4d\u7f6e \\(a(i)\\)\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u5148\u4fee\u6539 \\(t(i)\\)\uff0c\u7136\u540e\u5411\u4e0a\u4e0d\u65ad\u66f4\u65b0\u7236\u8282\u70b9\u6743\u503c\u5c31\u884c\u4e86\u3002</p> <pre><code>void add(int x, int v) {\nwhile(x &lt;= n) {\nt[x] += v;\nx += lowbit(x);\n}\n}\n</code></pre> <p>\u590d\u6742\u5ea6\u662f \\(O(\\log n)\\)\u3002</p>"}, {"location": "algor/ds/fenwick/#_4", "title": "\u5efa\u6811", "text": "<p>\u76f4\u63a5\u5bf9\u4e8e\u6bcf\u4e2a \\(a(i)\\)\uff0c\\(\\text{add}(i, a(i))\\) \u5373\u53ef\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u6837\u590d\u6742\u5ea6\u662f \\(O(n\\log n)\\) \u7684\uff0c\u8fd8\u6709\u4e24\u79cd \\(O(n)\\) \u5efa\u6811\u7684\u65b9\u6cd5\uff1a</p> <p>\u6cd5\u4e00\uff1a\u76f4\u63a5\u5904\u7406\u524d\u7f00\u548c\uff0c\u7136\u540e\u8d4b\u503c\u7ed9 \\(t\\) \uff08\u8981\u6d88\u8017\u7a7a\u95f4\u6362\u65f6\u95f4\uff09\u3002</p> <p>\u6cd5\u4e8c\uff1a\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u662f\u7531\u6240\u6709\u4e0e\u81ea\u5df1\u76f4\u63a5\u76f8\u8fde\u7684\u513f\u5b50\u7684\u503c\u6c42\u548c\u5f97\u5230\u7684\u3002\u56e0\u6b64\u53ef\u4ee5\u5012\u7740\u8003\u8651\u8d21\u732e\uff0c\u5373\u6bcf\u6b21\u786e\u5b9a\u5b8c\u513f\u5b50\u7684\u503c\u540e\uff0c\u7528\u81ea\u5df1\u7684\u503c\u66f4\u65b0\u81ea\u5df1\u7684\u7236\u4eb2\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u8fd0\u7b97\u6b21\u6570\u3002</p> <pre><code>for (int i = 1; i &lt;= n; ++i) {\nt[i] += a[i];\nint j = i + lowbit(i);\nif (j &lt;= n) t[j] += t[i];\n}\n</code></pre>"}, {"location": "algor/ds/fenwick/#_5", "title": "\u67e5\u8be2\u524d\u7f00\u548c", "text": "<p>\u76f4\u63a5\u5229\u7528 \\(\\text{lowbit}\\) \u626b\u4e00\u904d \\([1,x]\\) \u5206\u6210\u7684 \\(O(\\log x)\\) \u4e2a\u5c0f\u533a\u95f4\u5c31\u884c\uff0c</p> <p>\u56e0\u4e3a\u5b9a\u4e49\u4e86 \\(t(x) = \\sum\\limits_{i = x - \\text{lowbit}(x) + 1}^x a(i)\\)\uff0c\u6240\u4ee5\u76f4\u63a5\u7d2f\u52a0\u5c31\u884c\u4e86\u3002</p> <pre><code>int query(int x) {\nint ret = 0;\nwhile(x) {\nret += t[x];\nx -= lowbit(x);\n}\nreturn ret;\n}\n</code></pre> <p>\u590d\u6742\u5ea6 \\(O(\\log n)\\)\u3002</p> <p>\u533a\u95f4\u67e5\u8be2\u51cf\u4e00\u4e0b\u5c31\u884c\u3002</p>"}, {"location": "algor/ds/fenwick/#_6", "title": "\u65f6\u95f4\u6233\u4f18\u5316", "text": "<p>\u5bf9\u4ed8\u591a\u7ec4\u6570\u636e\u5f88\u5e38\u89c1\u7684\u6280\u5de7\u3002</p> <p>\u5982\u679c\u6bcf\u6b21\u8f93\u5165\u65b0\u6570\u636e\u65f6\uff0c\u90fd\u66b4\u529b\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\uff0c\u5c31\u53ef\u80fd\u4f1a\u9020\u6210\u8d85\u65f6\u3002</p> <p>\u56e0\u6b64\u4f7f\u7528 \\(tag\\) \u6807\u8bb0\uff0c\u5b58\u50a8\u5f53\u524d\u8282\u70b9\u4e0a\u6b21\u4f7f\u7528\u65f6\u95f4\uff08\u5373\u6700\u8fd1\u4e00\u6b21\u662f\u88ab\u7b2c\u51e0\u7ec4\u6570\u636e\u4f7f\u7528\uff09\u3002\u6bcf\u6b21\u64cd\u4f5c\u65f6\u5224\u65ad\u8fd9\u4e2a\u4f4d\u7f6e \\(tag\\) \u4e2d\u7684\u65f6\u95f4\u548c\u5f53\u524d\u65f6\u95f4\u662f\u5426\u76f8\u540c\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u8fd9\u4e2a\u4f4d\u7f6e\u5e94\u8be5\u662f \\(0\\) \u8fd8\u662f\u5f53\u524d\u6570\u636e\u7684 \\(a\\) \u6570\u7ec4\u5185\u7684\u503c\u3002</p> <p>\u5982\u679c\u4fee\u6539\u7684\u65f6\u5019\u9047\u5230\u4e86\u4e4b\u524d\u7528\u7684\u8282\u70b9\uff0c\u5c31\u76f4\u63a5\u5148\u7f6e\u96f6\u518d\u4fee\u6539\u6253 \\(tag\\)\u3002</p> <p>\u5982\u679c\u8be2\u95ee\u7684\u65f6\u5019\u9047\u5230\u4e86\u4e4b\u524d\u7684\u8282\u70b9\uff0c\u8bc1\u660e\u8fd9\u4e2a\u4f4d\u7f6e\u5728\u8fd9\u7ec4\u6570\u636e\u90fd\u6ca1\u88ab\u52a8\u8fc7\uff0c\u76f4\u63a5\u4e0d\u52a0\u5c31\u884c\u4e86\u3002</p> <pre><code>void reset() { ++dfn; }\nvoid add(int k, int v) {\nwhile(k &lt;= n) {\nif(tag[k] != dfn) t[k] = 0;\nt[k] += v, tag[k] = dfn;\nk += lowbit(k);\n}\n}\nint query(int k) {\nint ret = 0;\nwhile(k) {\nif(tag[k] == dfn) ret += t[k];\nk -= lowbit(k);\n}\nreturn ret;\n}\n</code></pre>"}, {"location": "algor/ds/fenwick/#_7", "title": "\u6269\u5c55", "text": ""}, {"location": "algor/ds/fenwick/#_8", "title": "\u533a\u95f4\u4fee\u6539\u5355\u70b9\u67e5\u8be2", "text": "<p>\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4 \\(c\\) \u5373\u53ef\u3002</p> <p>\u5355\u70b9\u67e5\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u524d\u7f00\u548c\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e6 + 10;\n\nint n, q;\nint a[si], c[si];\ni64 t[si];\n\ninline int lowbit(int x) {\nreturn x &amp; -x;\n}\nvoid add(int p, int x) {\nwhile(p &lt;= n) {\nt[p] += x;\np += lowbit(p);\n}\n}\ni64 query(int p) {\ni64 ret = 0;\nwhile(p) {\nret += t[p];\np -= lowbit(p);\n}\nreturn ret;\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; q;\na[0] = 0;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], c[i] = a[i] - a[i - 1], add(i, c[i]);\n\nwhile(q--) {\nint opt; cin &gt;&gt; opt;\nif(opt == 1) {\nint l, r, x;\ncin &gt;&gt; l &gt;&gt; r &gt;&gt; x;\nadd(l, x), add(r + 1, -x);\n}\nelse {\nint i;\ncin &gt;&gt; i;\ncout &lt;&lt; query(i) &lt;&lt; endl;\n}\n} return 0;\n}\n</code></pre>"}, {"location": "algor/ds/fenwick/#_9", "title": "\u533a\u95f4\u4fee\u6539\u533a\u95f4\u67e5\u8be2", "text": "<p>\u8fd8\u662f\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\uff0c\u5199\u51fa\u5df2\u77e5\u6761\u4ef6\u53ef\u4ee5\u5f97\u5230\uff1a\\(a(i) = \\sum\\limits_{j = 1}^{i} c(j)\\)\u3002</p> <p>\u7136\u540e\u533a\u95f4\u67e5\u8be2\u53ef\u4ee5\u8f6c\u5316\u6210\u524d\u7f00\u6c42\u548c\uff0c\u672c\u8d28\u4e0a\u662f\u6c42\u8fd9\u4e2a\u4e1c\u897f\uff1a \\(\\sum\\limits_{j = 1}^i a(j) = \\sum\\limits_{j = 1}^{i}\\sum\\limits_{k = 1}^j c(k)\\)\u3002</p> <p>\u4f46\u662f\u76f4\u63a5\u6c42\u590d\u6742\u5ea6\u8fc7\u9ad8\u6ca1\u6cd5\u63a5\u53d7\uff0c\u8003\u8651\u600e\u4e48\u628a Sigma \u62c6\u6389\uff08\u51cf\u5c11\uff09\uff0c\u8f6c\u5316\u6210\u51e0\u4e2a\u53ef\u4ee5\u7ef4\u62a4\u524d\u7f00\u548c\u7684\u5f0f\u5b50\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a \\(c(k)\\) \u88ab\u8ba1\u7b97\u7684\u6b21\u6570\u662f\u56fa\u5b9a\u7684\uff0c\u5728\u6c42\u524d\u7f00 \\([1,i]\\) \u7684\u548c\u7684\u65f6\u5019\uff0c \\(c(k), k\\in[1,i]\\) \u88ab\u52a0\u7684\u6b21\u6570\u4e00\u5171\u5c31\u662f \\(i - k + 1\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u7b97\u6bcf\u4e2a\u8282\u70b9\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u7684\u65b9\u5f0f\u6765\u66ff\u4ee3\u76f4\u63a5 Sigma\uff0c\u53ef\u4ee5\u5c11\u4e00\u5c42 Sigma\uff0c\u800c\u4e14\u80fd\u63a8\u51fa\u76f4\u63a5\u80fd\u7ef4\u62a4\u524d\u7f00\u548c\u7684\u5f0f\u5b50\u3002</p> <p>\u6240\u4ee5\u5199\u6210\uff1a\\(\\sum\\limits_{j = 1}^ic(j)\\times (i - j + 1)\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u628a\u5e38\u6570\u9879\u548c\u6240\u6709\u7684\u53d8\u91cf\u90fd\u5206\u5f00\u6c42\u548c\uff1a</p> \\[ \\sum\\limits_{j = 1}^ic(j)\\times (i - j + 1) = (i + 1)\\cdot\\sum\\limits_{j = 1}^{i}c(j) - \\sum\\limits_{j = 1}^i [c(j)\\times j] \\] <p>\u6240\u4ee5\u7ef4\u62a4\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u4e2a\u7ef4\u62a4 \\(c(i)\\)\uff0c\u4e00\u4e2a\u7ef4\u62a4 \\(c(i) \\times i\\)\u3002</p> <p>\u4fee\u6539\u7c7b\u4f3c\u4e00\u7ef4\u5dee\u5206\uff0c\u8be2\u95ee\u7c7b\u4f3c\u4e00\u7ef4\u524d\u7f00\u548c\uff08\u6811\u72b6\u6570\u7ec4\u672c\u8d28\u4e0a\u5c31\u662f\u524d\u7f00\u548c\u7684\u5347\u7ea7\uff09\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e6 + 10;\n\nint n, q;\nint a[si], c[si];\ni64 t[si], tt[si];\nint lowbit(int x) {\nreturn x &amp; -x;\n}\nvoid add(int p, int x) {\nint i = p;\nwhile(p &lt;= n) {\nt[p] += 1ll * x, tt[p] += 1ll * x * 1ll * i;\np += lowbit(p);\n}   }\ni64 query(int p) {\nint i = p;\ni64 ret = 0, rett = 0;\nwhile(p) {\nret += t[p], rett += tt[p];\np -= lowbit(p);\n}\nreturn (1ll * i + 1ll) * ret - rett;\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; q;\na[0] = 0;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], c[i] = a[i] - a[i - 1], add(i, c[i]); while(q--) {\nint opt; cin &gt;&gt; opt;\nif(opt == 1) {\nint l, r, x;\ncin &gt;&gt; l &gt;&gt; r &gt;&gt; x;\nadd(l, x), add(r + 1, -x);\n}\nelse {\nint l, r;\ncin &gt;&gt; l &gt;&gt; r;\ncout &lt;&lt; query(r) - query(l - 1) &lt;&lt; endl;\n}\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/fenwick/#_10", "title": "\u5355\u70b9\u4fee\u6539\u77e9\u9635\u6c42\u548c", "text": "<p>\u8fd9\u4e2a\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u7c7b\u6bd4\u4e00\u7ef4\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u53ef\u4ee5\u5f97\u5230 \\(t(x,y)\\) \u8868\u793a \\((x - \\text{lowbit}(x) + 1, y - \\text{lowbit}(y) + 1) \\to (x, y)\\) \u7684\u5b50\u77e9\u9635\u548c\uff0c\u7136\u540e \\(\\log^2\\) \u6c42\u4e00\u4e0b\uff0c\u8be2\u95ee\u76f4\u63a5\u4e8c\u7ef4\u524d\u7f00\u548c\u51cf\u4e00\u51cf\u5c31\u884c\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = (1 &lt;&lt; 12) + 1;\n\nint n, m;\ni64 t[si][si];\n\ninline int lowbit(int x) {\nreturn x &amp; -x;\n}\nvoid add(int x, int y, int z) {\nint yy = y;\nwhile(x &lt;= n) {\ny = yy;\nwhile(y &lt;= m) {\nt[x][y] += z;\ny += lowbit(y);\n}\nx += lowbit(x);\n}\n}\ni64 query(int x, int y) {\ni64 ret = 0;\nint yy = y;\nwhile(x) {\ny = yy;\nwhile(y) {\nret += t[x][y];\ny -= lowbit(y);\n}\nx -= lowbit(x);\n}\nreturn ret;\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\n// loj133 \u8fd9\u9898\u521d\u59cb A \u662f\u96f6\u77e9\u9635\uff0c\u6240\u4ee5\u4e0d\u7528\u5efa\u6811\u4e86\u3002\nint opt;\nwhile(cin &gt;&gt; opt) {\nif(opt == 1) {\nint x, y, k;\ncin &gt;&gt; x &gt;&gt; y &gt;&gt; k;\nadd(x, y, k);\n}\nelse {\nint a, b, c, d;\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;\ncout &lt;&lt; query(c, d) + query(a - 1, b - 1) - query(c, b - 1) - query(a - 1, d) &lt;&lt; endl;\n}\n}\n\nreturn 0;\n}\n</code></pre> <p>\u6ce8\u610f\u4e0d\u8981\u5fd8\u4e86\u8bb0\u5f55\u4e00\u4e0b \\(y\\) \u7684\u503c\uff0c\u6bcf\u6b21\u5faa\u73af\u7ed3\u675f\u91cd\u65b0\u8d4b\u503c\u4e00\u6b21\u3002</p>"}, {"location": "algor/ds/fenwick/#_11", "title": "\u77e9\u9635\u4fee\u6539\u5355\u70b9\u67e5\u8be2", "text": "<p>\u8fd9\u4e2a\u76f4\u63a5\u7ef4\u62a4\u4e8c\u7ef4\u7684\u5dee\u5206\u6570\u7ec4\u5c31\u884c\uff0c\u5957\u8def\u548c\u4e00\u7ef4\u4e00\u6837\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = (1 &lt;&lt; 12) + 1;\n\nint n, m;\ni64 t[si][si];\n\ninline int lowbit(int x) {\nreturn x &amp; -x;\n}\nvoid add(int x, int y, int z) {\nint yy = y;\nwhile(x &lt;= n) {\ny = yy;\nwhile(y &lt;= m) {\nt[x][y] += z;\ny += lowbit(y);\n}\nx += lowbit(x);\n}\n}\ni64 query(int x, int y) {\ni64 ret = 0;\nint yy = y;\nwhile(x) {\ny = yy;\nwhile(y) {\nret += t[x][y];\ny -= lowbit(y);\n}\nx -= lowbit(x);\n}\nreturn ret;\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\nint opt;\n\ncin &gt;&gt; n &gt;&gt; m;\n// loj134 \u8fd9\u9898\u521d\u59cb A \u662f\u96f6\u77e9\u9635\uff0c\u6240\u4ee5\u4e0d\u7528\u6784\u9020\u5dee\u5206\u77e9\u9635\u7136\u540e\u5efa\u6811\u4e86\u3002\nwhile(cin &gt;&gt; opt) {\nif(opt == 1) {\nint a, b, c, d, k;\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d &gt;&gt; k;\nadd(a, b, k), add(a, d + 1, -k), add(c + 1, b, -k), add(c + 1, d + 1, k);\n}\nelse {\nint x, y;\ncin &gt;&gt; x &gt;&gt; y;\ncout &lt;&lt; query(x, y) &lt;&lt; endl;\n}\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/fenwick/#_12", "title": "\u77e9\u9635\u4fee\u6539\u77e9\u9635\u67e5\u8be2", "text": "<p>\u7c7b\u6bd4\u533a\u95f4\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u7684\u5957\u8def\uff0c\u7b97\u6bcf\u4e2a \\(c(u,v)\\) \u5728\u6c42\u4e8c\u7ef4\u524d\u7f00 \\((1, 1) \\to (i, j)\\) \u7684\u7b54\u6848\u7684\u65f6\u5019\u88ab\u7b97\u4e86\u591a\u5c11\u6b21\uff0c\u7136\u540e\u63a8\u4e2a\u5f0f\u5b50\u62c6\u6389 Sigma\uff0c\u5e38\u6570\u9879\u548c\u53d8\u91cf\u5206\u5f00\u6c42\u548c\uff08\u53c2\u53d8\u5206\u79bb\uff09\u5c31\u884c\u3002</p> \\[ a(i, j ) = \\sum\\limits_{x =1}^{i}\\sum\\limits_{y = 1}^{j} c(i,j) \\] \\[ \\sum\\limits_{x = 1}^{i}\\sum\\limits_{y = 1}^{j} a(i, j) = \\sum\\limits_{x = 1}^{i}\\sum\\limits_{y = 1}^j\\sum\\limits_{u = 1}^x \\sum\\limits_{v = 1}^{y} c(u, v) \\] \\[ \\Rightarrow\\sum\\limits_{u = 1}^{i}\\sum\\limits_{v = 1}^j c(u,v)\\cdot (ij - (u-1)j - i(v - 1) + (u - 1)(i - 1)) \\] \\[ \\Rightarrow\\sum\\limits_{u = 1}^i \\sum\\limits_{v =1 }^j c(u,v) \\cdot (i j - uj + j -iv + i +ui - u - i + 1) \\] \\[ \\Rightarrow\\sum\\limits_{u = 1}^i \\sum\\limits_{v = 1}^j c(u, v) \\cdot(i -u + 1)\\cdot(j - v + 1) \\] \\[ \\Rightarrow(i + 1)(j + 1)\\sum\\limits_{u = 1}^i \\sum\\limits_{v =1 }^j c(u,v) - (j + 1)\\sum\\limits_{u = 1}^i \\sum\\limits_{v =1 }^j c(u,v) \\cdot u - (i + 1)\\sum\\limits_{u = 1}^i \\sum\\limits_{v =1 }^j c(u,v) \\cdot v + \\sum\\limits_{u = 1}^i \\sum\\limits_{v =1 }^j c(u,v) \\cdot uv \\] <p>\u6240\u4ee5\u7ef4\u62a4\u56db\u4e2a\u6811\u72b6\u6570\u7ec4\u5c31\u884c\u4e86\uff0c\u6ce8\u610f\u53ef\u4ee5\u7528\u4e00\u4e0b\u5185\u5b58\u8fde\u7eed+\u5faa\u73af\u5c55\u5f00+\u5c3d\u91cf\u4e0d\u505a\u8fc7\u591a\u7684\u4e58\u6cd5\uff0c\u51cf\u5c0f\u5e38\u6570\uff08\u4f3c\u4e4e\u6811\u72b6\u6570\u7ec4\u672c\u6765\u5e38\u6570\u5c31\u5f88\u5c0f\uff1f\uff09</p> <p>\u4fee\u6539\u7c7b\u4f3c\u4e8c\u7ef4\u5dee\u5206\uff0c\u8be2\u95ee\u7c7b\u4f3c\u4e8c\u7ef4\u524d\u7f00\u548c\u3002</p> <p>\u8fd9\u4efd\u4ee3\u7801\u76ee\u524d\u5728 Loj \u4e0a\u662f\u6700\u4f18\u89e3 1244ms\uff088/27/22\uff09\u3002</p> ScreenShots <p></p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\ntemplate &lt;typename __Tp&gt; void read(__Tp &amp;x) {\nint f = x = 0; char ch = getchar();\nfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = 1;\nfor (; isdigit(ch); ch = getchar()) x = (x &lt;&lt; 1) + (x &lt;&lt; 3) + (ch ^ 48);\nif (f) x = -x;\n}\n// void read(modint &amp;x) { int __value; read(__value); x = __value; return; } \nvoid read(char &amp;ch) { for (ch = getchar(); isspace(ch); ch = getchar()); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void read(__Tp1 &amp;x, __Tp2 &amp;... y) { read(x), read(y...); }\ntemplate &lt;typename __Tp&gt; void write(__Tp x) {\nif (x &lt; 0) putchar('-'), x = -x;\nif (x &gt; 9) write(x / 10);\nputchar(x % 10 + 48);\n}\nvoid write(char ch) { putchar(ch); }\n// void write(modint x) { write(x.val()); }\nvoid write(const char *s) { for (; *s; ++s) putchar(*s); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void write(__Tp1 x, __Tp2 ... y) { write(x), write(y...); }\n\n\nconst int si = (1 &lt;&lt; 12) + 1;\n\nint n, m;\ni64 t[si][si][4]; // \u5185\u5b58\u8fde\u7eed\ni64 ret[4] = {0};\n\ninline int lowbit(int x) {\nreturn x &amp; -x;\n}\nvoid add(int x, int y, int k) {\nint xx = x, yy = y;\nwhile(x &lt;= n) {\ny = yy;\nwhile(y &lt;= m) {\nt[x][y][0] += k, t[x][y][1] += k * xx, t[x][y][2] += k * yy, t[x][y][3] += k * xx * yy;\ny += lowbit(y);\n}\nx += lowbit(x);\n}\n}\ni64 query(int x, int y) {\nint xx = x, yy = y;\n\nret[0] = ret[1] = ret[2] = ret[3] = 0;\nwhile(x) {\ny = yy;\nwhile(y) {\nret[0] += t[x][y][0];\nret[1] += t[x][y][1];\nret[2] += t[x][y][2];\nret[3] += t[x][y][3];\ny -= lowbit(y);\n}\nx -= lowbit(x);\n}\nreturn ((xx + 1) * (yy + 1) * ret[0]) - ((yy + 1) * ret[1]) - ((xx + 1) * ret[2]) + ret[3];\n}\n\nint main() {    // cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\nread(n, m);\n\nint opt; int a, b, c, d, k;\n\nwhile(~scanf(\"%d\", &amp;opt)) {\nif(opt == 1) {\nread(a, b, c, d, k);\nadd(a, b, k), add(a, d + 1, -k), add(c + 1, b, -k), add(c + 1, d + 1, k);\n}\nelse {\nread(a, b, c, d);\nwrite( query(c, d) - query(a - 1, d) - query(c, b - 1) + query(a - 1, b - 1) , endl);\n}\n}\n\nreturn 0;\n}\n</code></pre> <p>\u611f\u89c9\u533a\u95f4\u4fee\u533a\u95f4\u67e5\uff0c\u77e9\u9635\u4fee\u77e9\u9635\u67e5\u90fd\u8fd0\u7528\u4e86\u67d0\u79cd\u6bd4\u8f83\u7ecf\u5178\u7684\u5957\u8def\uff0c\u4f3c\u4e4e\u53ef\u4ee5\u8bb0\u4e0b\u6765\u4ee5\u540e\u7528\uff1f</p> <p>\u5927\u6982\u5c31\u662f\u5728\u6c42\u548c/\u6c42\u4e58\u79ef\u6216\u8005\u5e72\u4ec0\u4e48\u7684\u65f6\u5019\uff0c\u5206\u79bb\u5305\u542b\u591a\u53d8\u91cf\u7684\u9879\uff0c\u628a\u6bcf\u4e2a\u53d8\u91cf\u90fd\u63d0\u51fa\u6765\u5355\u72ec\u7ef4\u62a4\uff0c\u8ba9\u53d8\u91cf\u548c\u53d8\u91cf\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u540c\u65f6\u7ef4\u62a4\u591a\u4e2a\u53d8\u91cf\u5bfc\u81f4\u601d\u8def\u8fc7\u4e8e\u590d\u6742\u3002</p>"}, {"location": "algor/ds/fenwick/#_13", "title": "\u533a\u95f4\u6700\u503c", "text": "<p>\u663e\u7136\u6700\u5927\u6700\u5c0f\u503c\u6ca1\u6709\u533a\u95f4\u53ef\u51cf\u6027\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528\u524d\u7f00\u548c\u51cf\u3002</p> <p>\u7136\u540e\u867d\u7136\u53ef\u4ee5\u6c42\u6700\u503c\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u633a\u9ebb\u70e6\u800c\u4e14\u4e0d\u662f\u5f88\u901a\u7528\u3002</p> <p>\u9759\u6001\u6700\u503c\u4e0d\u5982\u76f4\u63a5\u5199 st \u8868\uff0c\u52a8\u6001\u6700\u503c\u5c31\u7b97\u53ea\u652f\u6301\u5355\u70b9\u4fee\u4e5f\u633a\u9ebb\u70e6\u3002</p> <p>\u4e2a\u4eba\u89c9\u5f97\u6ca1\u6709\u5fc5\u8981\uff0c\u76f4\u63a5 segment tree \u5c31\u884c\u4e86\u3002</p> <p>\u4e0d\u8fc7\u5982\u679c\u53ea\u662f\u95ee\u524d\u7f00\u6700\u503c+\u5355\u70b9\u4fee\u6539\u90a3\u80af\u5b9a\u5c31\u5199\u6811\u72b6\u6570\u7ec4\uff0c\u5b9e\u73b0\u8fc7\u4e8e\u7b80\u5355\u61d2\u5f97\u5199\uff0c\u53ef\u4ee5\u770b\u770b\u8fd9\u9053\u9898\u91cc\u5199\u7684\uff1aOptimal Partition </p>"}, {"location": "algor/ds/fenwick/#_14", "title": "\u5e94\u7528", "text": ""}, {"location": "algor/ds/fenwick/#_15", "title": "\u6c42\u9006\u5e8f\u5bf9", "text": "<p>\u5148\u79bb\u6563\u5316\uff0c\u5728\u503c\u57df\u4e0a\u5efa\u7acb\u6811\u72b6\u6570\u7ec4\uff08\u5c31\u662f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6876\uff09\u3002</p> <p>\u626b\u63cf \\(n \\to 1\\)\uff0c\u5bf9\u4e8e \\(a(i)\\)\uff0c\u5b83\u80fd\u548c \\(a(i + 1) \\sim a(n)\\) \u6784\u6210\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u662f\u5f53\u524d\u6811\u72b6\u6570\u7ec4\u4e0a \\([1,a(i) - 1]\\) \u7684\u524d\u7f00\u548c\u3002</p> <p>\u7d2f\u52a0\u7b54\u6848\u4e4b\u540e\uff0c\u6267\u884c \\(\\text{add}(a(i), 1)\\) \u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n \\log n)\\)\uff0c\u6bd4 Merge Sort \u597d\u5199\u591a\u4e86\u3002</p> <pre><code>for(int i = n; i &gt;= 1; --i) {\nans += query(a[i] - 1);\nadd(a[i], 1);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n</code></pre>"}, {"location": "algor/ds/fenwick/#_16", "title": "\u4e09\u5143\u9006\u5e8f\u5bf9", "text": "<p>\u6c42\u6ee1\u8db3 \\(i &lt; j &lt; k, a(i) &gt; a(j) &gt; a(k)\\) \u7684 \\((i,j,k)\\) \u7684\u4e2a\u6570\u3002</p> <p>\u548c\u4e8c\u5143\u9006\u5e8f\u5bf9\u672c\u8d28\u4e00\u6837\uff0c\u79bb\u6563\u5316\u4e4b\u540e\u7ef4\u62a4\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u4e2a\u7ef4\u62a4\u9006\u5e8f\u5bf9\uff0c\u4e00\u4e2a\u7ef4\u62a4\u987a\u5e8f\u5bf9\uff0c\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u4e58\u6cd5\u539f\u7406\u4e00\u4e0b\u5373\u53ef\u3002</p>"}, {"location": "algor/ds/hld/", "title": "\u8f7b\u91cd\u94fe\u5256\u5206", "text": ""}, {"location": "algor/ds/hld/#_1", "title": "\u6982\u8ff0", "text": "<p>\u6811\u94fe\u5256\u5206\u5206\u4e09\u79cd\uff0c\u4e00\u79cd\u662f\u8f7b\u91cd\u94fe\u5256\u5206\uff0c\u4e00\u79cd\u662f\u957f\u94fe\u5256\u5206\uff0c\u8fd8\u6709\u4e00\u79cd\u662f\u5b9e\u94fe\u5256\u5206\u3002</p> <p>\u524d\u8005\u8f83\u4e3a\u5e38\u7528\uff0c\u4e2d\u95f4\u7684\u4f3c\u4e4e\u53ef\u4ee5\u62ff\u6765\u4f18\u5316 DP\uff08\u590d\u6742\u5ea6\u662f \\(\\sqrt{n}\\)\uff09\uff0c\u540e\u9762\u7684\u90a3\u4e00\u79cd\u7528\u4e8e LCT\u3002</p> <p>\u4e0b\u6587\u7528\u91cd\u94fe\u5256\u5206\u4ee3\u66ff\u6811\u94fe\u5256\u5206\u3002</p>"}, {"location": "algor/ds/hld/#_2", "title": "\u6cdb\u5316", "text": "<p>\u7b80\u5355\u6765\u8bf4\uff0c\u91cd\u94fe\u5256\u5206\u53ef\u4ee5\u628a\u6811\u4e0a\u7684\u4e00\u7c7b\u5bf9\u4e8e\u70b9\u6743\u7684\u64cd\u4f5c\u548c\u8be2\u95ee\u53d8\u4e3a\u5e8f\u5217/\u533a\u95f4\u4e0a\u7684\u64cd\u4f5c\u548c\u8be2\u95ee\u3002</p> <p>\u4e00\u822c\u8fd9\u4e9b\u64cd\u4f5c\u5206\u4e24\u7c7b\uff1a</p> <ol> <li>\u5b50\u6811\u64cd\u4f5c\uff08\u5b50\u6811\u52a0\uff0c\u5b50\u6811\u67e5\uff09</li> <li>\u8def\u5f84\u64cd\u4f5c\uff08\u8def\u5f84\u4e0a\u52a0\uff0c\u8def\u5f84\u4e0a\u67e5\uff09</li> </ol> <p>\u91cd\u94fe\u5256\u5206\u53ef\u4ee5\u5355\u6b21 \\(\\text{O}(\\log n)\\) \u7684\u590d\u6742\u5ea6\uff0c\u5feb\u901f\u5c06\u5b50\u6811\u6216\u8005\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u8f6c\u5316\u4e3a\u4e00\u6bb5\u6216\u8005\u591a\u6bb5\u533a\u95f4\u3002</p> <p>\u518d\u914d\u5408\u4ee5\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4\u7b49 \\(\\log\\) \u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u4ee5\u5355\u6b21 \\(\\text{O}(\\log^2 n)\\) \u7684\u590d\u6742\u5ea6\u5b8c\u6210\u4fe1\u606f\u7684\u4fee\u6539\u548c\u67e5\u8be2\u3002</p>"}, {"location": "algor/ds/hld/#_3", "title": "\u9884\u5904\u7406(\u5256\u5206\u8fc7\u7a0b)", "text": ""}, {"location": "algor/ds/hld/#_4", "title": "\u51e0\u4e2a\u6982\u5ff5", "text": "<p>\u5b9a\u4e49 \\(hson_u\\) \u8868\u793a \\(u\\) \u7684\u6240\u6709\u513f\u5b50\u4e2d\uff0c\u5b50\u6811\u5927\u5c0f\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u513f\u5b50\uff0c\u79f0\u4e3a\u91cd\u513f\u5b50\u3002</p> <p>\uff08\u591a\u4e2a\u76f8\u540c\u4efb\u53d6\u4e00\u4e2a\u5373\u53ef\uff09</p> <p>\u5176\u5b83\u7684\u513f\u5b50\u79f0\u4f5c \\(u\\) \u7684\u8f7b\u513f\u5b50\u3002</p> <p>\u5b9a\u4e49\u91cd\u8fb9\u4e3a \\(u\\) \u5230 \\(hson_u\\) \u7684\u4e00\u6761\u8fb9\uff08\\(u\\) \u4e0d\u9700\u8981\u662f\u5b83\u7684 \\(father\\) \u7684\u91cd\u513f\u5b50\uff09\u3002</p> <p>\u5176\u4ed6\u7684\u8fb9\u79f0\u4f5c\u8f7b\u8fb9\u3002</p> <p>\u82e5\u5e72\u6761\u91cd\u8fb9\u9996\u5c3e\u76f8\u8fde\u5f62\u6210\u7684\u94fe\u79f0\u4e3a\u91cd\u94fe\u3002</p> <p>\u843d\u5355\u7684\u8282\u70b9\u4e5f\u5f53\u4f5c\u91cd\u94fe\uff0c\u7136\u540e\u53ef\u4ee5\u6574\u68f5\u6811\u5c31\u88ab\u5256\u5206\u6210\u4e86\u82e5\u5e72\u6761\u4e0d\u76f8\u4ea4\u7684\u91cd\u94fe\u3002</p> <p>\u4f60\u77e5\u9053\u5904\u7406\u5b50\u6811\u4fe1\u606f\u53ef\u4ee5\u5229\u7528 dfs \u6811\u548c dfs \u5e8f\u7684\u6027\u8d28\uff0c\u5373\u662f\u4e00\u68f5\u5b50\u6811\u5185\u7684 \\(dfn\\) \u503c\u662f\u8fde\u7eed\u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u9884\u5904\u7406\u51fa \\(dfn\\)\uff0c\u5e76\u8bb0\u5f55\u6bcf\u4e2a \\(dfn\\) \u503c\u5bf9\u5e94\u7684\u8282\u70b9\u7f16\u53f7 \\(rnk\\) \u65b9\u4fbf\u7ebf\u6bb5\u6811\u7b49\u6570\u636e\u7ed3\u6784\u7684\u64cd\u4f5c\u3002</p> <p>\u4e3a\u4e86\u4e4b\u540e\u5904\u7406\u65b9\u4fbf\uff0c\u8fd8\u9700\u8981\u5904\u7406 \\(u\\) \u7684\u5b50\u6811\u5927\u5c0f \\(siz_u\\)\uff0c\u7236\u4eb2\u8282\u70b9 \\(fat_u\\)\uff0c\u6df1\u5ea6 \\(dep_u\\)\uff0c\u4ee5\u53ca \\(u\\) \u6240\u5728\u7684\u91cd\u94fe\u4e0a\u6df1\u5ea6\u6700\u5c0f\u7684\u8282\u70b9 \\(top\\) \uff08\u5373\u4e3a\u94fe\u9876\uff09\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u9700\u8981\u5904\u7406\u8fd9\u4e9b\u4e1c\u897f\uff1a</p> <p>\\(fat, dep, siz, hson, top, dfn, rnk\\)</p> <p>\u4e00\u5f20\u56fe\uff08\u56fe\u6e90 OI-Wiki\uff09\uff1a</p> <p></p>"}, {"location": "algor/ds/hld/#_5", "title": "\u51e0\u4e2a\u6027\u8d28", "text": "<p>1.\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u90fd\u5c5e\u4e8e\u4e14\u4ec5\u5c5e\u4e8e\u4e00\u6761\u91cd\u94fe\u3002</p> <p>\u8fd9\u4e2a\u6839\u636e\u4e0a\u9762\u6982\u5ff5\u91cc\u8bf4\u7684\uff1a</p> <p>\u843d\u5355\u7684\u8282\u70b9\u4e5f\u5f53\u4f5c\u91cd\u94fe\uff0c\u7136\u540e\u53ef\u4ee5\u6574\u68f5\u6811\u5c31\u88ab\u5256\u5206\u6210\u4e86\u82e5\u5e72\u6761\u4e0d\u76f8\u4ea4\u7684\u91cd\u94fe\u3002</p> <p>\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5f97\u5230\u3002</p> <p>2.\u5b50\u6811\u5185\u7684 \\(dfn\\) \u662f\u8fde\u7eed\u7684</p> <p>\u8fd9\u4e2a\u662f dfs \u5e8f\u7684\u6027\u8d28\uff0c\u6bd4\u8f83\u5bb9\u6613\u5f97\u5230\u3002</p> <p>\u63a8\u8bba\uff1a \u5b50\u6811\u5185 \\(dfn\\) \u503c\u7684\u533a\u95f4\u5e94\u5f53\u662f \\([dfn_u, dfn_u + siz_u - 1]\\)\u3002</p> <p>\u8fd9\u4e24\u4e2a\u7ed3\u8bba\u4f1a\u7528\u4e8e\u5b50\u6811\u64cd\u4f5c\u7684\u5904\u7406\u3002</p> <p>3.\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\u7684 \\(dfn\\) \u662f\u8fde\u7eed\u7684</p> <p>\u8fd9\u4e2a\u662f\u91cd\u94fe\u5256\u5206\u672c\u8eab\u7684\u6027\u8d28\uff0c\u9700\u8981\u6211\u4eec dfs \u5904\u7406\u65f6 \u201c\u4f18\u5148\u201d dfs \u91cd\u513f\u5b50\uff0c\u7136\u540e\u518d \\(dfn\\) \u8f7b\u513f\u5b50\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u6309 \\(dfn\\) \u5e8f\u6392\u5e8f\u4e4b\u540e\u7684\u5e8f\u5217\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u4e00\u6761\u6761\u91cd\u94fe\u62fc\u63a5\u5728\u4e86\u4e00\u8d77\u3002</p> <p>\u6240\u4ee5\u91cd\u94fe\u5256\u5206\u5b9e\u9645\u4e0a\u5c31\u662f \u201c\u6811\u4e0a\u95ee\u9898\u201d \u5e8f\u5217\u5316\u7684\u4e00\u4e2a\u5de5\u5177\u3002</p> <p>4.\u7ecf\u8fc7\u4e00\u6761\u8f7b\u8fb9 \\((u\\to v)\\)\u7684\u65f6\u5019\uff0c\\(siz_v\\) \u7684\u5927\u5c0f\u5fc5\u7136\u662f \\(siz_u\\) \u7684\u4e8c\u5206\u4e4b\u4e00\uff0c\u53ef\u80fd\u8fd8\u5c11\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u628a\u4e00\u6761\u8def\u5f84\u4ece \\(\\texttt{LCA}\\) \u62c6\u5f00\u4ece\u4e24\u8fb9\u5206\u522b\u5f80\u4e0b\u8df3\u91cd\u94fe\uff0c\u8df3\u7684\u6b21\u6570\u4f1a\u5728 \\(\\text{O}(\\log n)\\) \u7ea7\u522b\u3002</p> <p>\u6240\u4ee5\u6811\u4e0a\u4efb\u610f\u4e00\u6761\u8def\u5f84\u90fd\u53ef\u4ee5\u62c6\u6210 \\(\\text{O}(\\log n)\\) \u6761\u91cd\u94fe\u3002</p>"}, {"location": "algor/ds/hld/#_6", "title": "\u4ee3\u7801\u5b9e\u73b0", "text": "<pre><code>// \u5904\u7406\u91cd\u513f\u5b50,\u7236\u4eb2,\u6df1\u5ea6,\u5b50\u6811\u5927\u5c0f\nvoid dfs1(int u, int fa) {\nint kot = 0;\nhson[u] = -1, siz[u] = 1;\nfat[u] = fa, dep[u] = dep[fa] + 1;\n\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\n\ndfs1(v, u), siz[u] += siz[v];\n\nif(siz[v] &gt; kot)\nkot = siz[v], hson[u] = v;\n} }\n// \u5904\u7406 dfn,rnk,\u5e76\u8fdb\u884c\u91cd\u94fe\u5256\u5206\u3002\nvoid dfs2(int u, int tp) {\ntop[u] = tp, dfn[u] = ++tim, rnk[tim] = u;\n\nif(hson[u] == -1) return;\ndfs2(hson[u], tp);\n// \u5148 dfs \u91cd\u513f\u5b50,\u4fdd\u8bc1\u91cd\u94fe\u4e0a dfn \u8fde\u7eed,\u7ef4\u6301\u91cd\u94fe\u7684\u6027\u8d28\n\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fat[u] || v == hson[u]) continue;\n\ndfs2(v, v);\n}\n}\n</code></pre>"}, {"location": "algor/ds/hld/#_7", "title": "\u5b50\u6811\u64cd\u4f5c", "text": "<p>\u8fd9\u4e2a\u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u5229\u7528 \\(dfn\\) \u7684\u6027\u8d28\u64cd\u4f5c\u5373\u53ef\u3002</p> <p>\uff08\u57fa\u4e8e\u4e0a\u9762\u7684\u90a3\u4e2a\u63a8\u8bba\uff09</p> <p><code>tr</code> \u662f\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u4fe1\u606f\u6bd4\u8f83\u7b80\u5355\u7684\u65f6\u5019\u7528\u6811\u72b6\u6570\u7ec4\u3002</p> <pre><code>void add_subtree(int u, int value) {\ntr.update(1, dfn[u], dfn[u] + siz[u] - 1, value);\n// \u5b50\u6811\u4ee3\u8868\u7684\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u5206\u522b\u662f dfn[u], dfn[u] + siz[i] - 1;\n} int query_subtree(int u) {\nreturn tr.query(1, dfn[u], dfn[u] + siz[u] - 1) % mod;\n}\n</code></pre>"}, {"location": "algor/ds/hld/#_8", "title": "\u8def\u5f84\u64cd\u4f5c", "text": "<p>\u8fd9\u4e2a\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u8003\u8651\u4e0a\u9762\u6027\u8d28\u7684\u7b2c 4 \u6761\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u628a\u6811\u4e0a\u4efb\u610f\u4e00\u6761\u8def\u5f84\u62c6\u6210 \\(\\text{O}(\\log n)\\) \u6761\u91cd\u94fe\u3002</p> <p>\u7136\u540e\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u770b\u6210\u662f\u4ece \\(\\texttt{LCA}\\) \u5f80\u4e24\u8fb9\u8d70\u3002</p> <p>\u6211\u4eec\u8003\u8651\u5b83\u7684\u9006\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u7c7b\u4f3c\u500d\u589e\u6c42 \\(\\texttt{LCA}\\) \u7684\u8fc7\u7a0b\u3002</p> <p>\u6211\u4eec\u8ba9\u5f53\u524d\u6240\u5728\u94fe\u9876\u6df1\u5ea6\u66f4\u5927\u7684\u8282\u70b9\u4e0d\u65ad\u5411\u4e0a\u8df3\u91cd\u94fe\uff0c\u6bcf\u6b21\u8df3\u7684\u65f6\u5019\u5bf9\u4e8e \\(u\\) \u548c \\(top_u\\) \u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\uff08\u6bd4\u5982 <code>tr.update(1, dfn[top[u]], dfn[u], value)</code> \u8fd9\u79cd\uff09</p> <p>\u7136\u540e\u5f53 \\(u, v\\) \u5728\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\u7684\u65f6\u5019\uff0c\u6211\u4eec\u76f4\u63a5\u4ee4 \\(u\\) \u4e3a\u6df1\u5ea6\u66f4\u5c0f\u7684\u8282\u70b9\uff0c\u7136\u540e\u5bf9\u7ef4\u62a4\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\u4e0a \\([dfn_u, dfn_v]\\) \u7684\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\u5373\u53ef\u3002</p> <pre><code>// \u7c7b\u4f3c\u500d\u589e LCA \u7684\u8df3\u91cd\u94fe\u8fc7\u7a0b\nvoid add_path(int u, int v, int value) {\nwhile(top[u] != top[v]) {\nif(dep[top[u]] &lt; dep[top[v]])\nswap(u, v);\n// \u8ba9\u94fe\u9876\u6df1\u5ea6\u5927\u7684\u6765\u8df3\n\ntr.update(1, dfn[top[u]], dfn[u], value);\n// \u628a u \u5230\u94fe\u9876\u7684\u6743\u503c\u5168\u90e8\u4fee\u6539\u3002\nu = fat[top[u]];    // \u8df3\u5230\u94fe\u9876\u7684\u7236\u4eb2\u8282\u70b9\u3002   \n}\n\nif(dep[u] &gt; dep[v]) swap(u, v);\ntr.update(1, dfn[u], dfn[v], value);\n// \u4e00\u6761\u91cd\u94fe\u4e0a\u7684 dfn \u662f\u8fde\u7eed\u7684\u3002\n}\nint query_path(int u, int v) {\nint ret = 0;\nwhile(top[u] != top[v]) {\nif(dep[top[u]] &lt; dep[top[v]])\nswap(u, v);\n\nret = (ret + tr.query(1, dfn[top[u]], dfn[u])) % mod;\nu = fat[top[u]];\n}\n\nif(dep[u] &gt; dep[v]) swap(u, v);\nret = (ret + tr.query(1, dfn[u], dfn[v])) % mod;\nreturn ret % mod;\n}\n</code></pre>"}, {"location": "algor/ds/hld/#lca", "title": "\u6c42 LCA", "text": "<p>\u7c7b\u4f3c\u8def\u5f84\u64cd\u4f5c\u7684\u8fc7\u7a0b\u5373\u53ef\u3002</p> <p>\u4e5f\u662f\u4e0d\u65ad\u8df3\u91cd\u94fe\uff0c\u7136\u540e\u8df3\u5230\u540c\u4e00\u6761\u91cd\u94fe\u4e0a\u4e4b\u540e\u6df1\u5ea6\u5c0f\u7684\u8282\u70b9\u5c31\u662f \\(\\texttt{LCA}\\)\u3002</p> <p>\u5e38\u6570\u975e\u5e38\u5c0f\u3002</p> <p>\u539f\u56e0\u662f\u901a\u5e38\u8df3\u91cd\u94fe\u7684\u65f6\u5019\uff0c\u91cd\u94fe\u4e2a\u6570\u4e0d\u4f1a\u5361\u6ee1 \\(\\text{O}(\\log n)\\)\u3002</p> <p>\uff08\u9664\u975e\u62ff\u5b8c\u5168\u4e8c\u53c9\u6811\uff09\u3002</p> <pre><code>int lca(int u, int v) {\nwhile(top[u] != top[v]) {\nif(dep[top[u]] &lt; dep[top[v]]) swap(u, v);\nu = fat[top[u]];\n}\nif(dep[u] &gt; dep[v]) swap(u, v);\nreturn u;\n}\n</code></pre> <p>\u63d0\u4e00\u5634\uff1a\u5176\u5b9e\u6211\u611f\u89c9 hld \u548c\u6811\u4e0a\u5dee\u5206\u7684\u5173\u7cfb\u76f8\u5f53\u4e8e\u6811\u72b6\u6570\u7ec4\u548c\u524d\u7f00\u548c\u7684\u5173\u7cfb XD\u3002</p>"}, {"location": "algor/ds/li-chao-tree/", "title": "\u674e\u8d85\u7ebf\u6bb5\u6811", "text": "<p>\u8fd9\u91cc\u7b97\u662f\u601d\u8003\u4e00\u4e0b\u674e\u8d85tree\u7684\u8fc7\u7a0b\uff0c\u4ee5\u540e\u5199\u677f\u5b50\u4e4b\u524d\u5c31\u8fd9\u4e48\u5e72\u3002</p>"}, {"location": "algor/ds/li-chao-tree/#_1", "title": "\u6982\u8ff0", "text": "<p>\u674e\u8d85\u6811\u662f\u4e00\u79cd\u53d8\u79cd\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u52a8\u6001\u7ef4\u62a4\u4e00\u5806\u4e00\u6b21\u51fd\u6570\uff08\u53ef\u4ee5\u6709\u5b9a\u4e49\u57df\u7684\u9650\u5236\uff09\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u8be2\u95ee\u8fd9\u4e9b\u4e00\u6b21\u51fd\u6570\u5728\u67d0\u4e2a \\(x\\) \u5750\u6807\u4e0b\u7684\u6700\u5927 \\(y\\) \u503c\u3002</p> <p>\u5176\u5927\u6982\u601d\u60f3\u662f\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4 \\([l,r]\\) \u4e2d\u70b9\u4f4d\u7f6e\u7684\u53ef\u4ee5\u4ea7\u751f\u6700\u5927 \\(y\\) \u7684\u7ebf\u6bb5\uff08\u7684\u7f16\u53f7\uff09\u3002\uff08\u8fd9\u4e2a\u4e1c\u897f\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a Lazytag\uff09</p> <p>\u6ce8\u610f\u5230\u8fd9\u4e2a\u4e1c\u897f\u96be\u4ee5\u5408\u5e76\uff0cPushup \u548c Pushdown \u6bd4\u8f83 hard\uff0c\u4e14\u6211\u4eec\u6ca1\u6709\u521d\u59cb\u72b6\u6001\uff0c\u662f\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u7684\u662f\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u601d\u60f3\uff0c\u7ef4\u62a4\u4e14\u53ea\u7ef4\u62a4 Lazytag\u3002</p> <p>\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u539f\u7406\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4fee\u6539\u65f6\u4e00\u8def\u66f4\u6539\u88ab\u5f71\u54cd\u5230\u7684\u70b9\uff0c\u8be2\u95ee\u65f6\u5219\u4e00\u8def\u7d2f\u52a0\u8def\u4e0a\u7684\u6807\u8bb0\uff0c\u4ece\u800c\u7701\u53bb\u4e0b\u4f20\u6807\u8bb0\u7684\u64cd\u4f5c\u3002</p> <p>\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u7ebf\u6bb5\u7684\u65f6\u5019\uff0c\u628a\u7ef4\u62a4\u88ab\u5b83\u5b9a\u4e49\u57df\u5b8c\u6574\u5305\u542b\u7684\u533a\u95f4\u7684\u8282\u70b9\u7684\u4fe1\u606f\u5168\u90e8\u66f4\u65b0\uff08\\(O(\\log n)\\) \u4e2a\uff09\uff0c\u9012\u5f52\u5206\u5272\u627e\u5230\u8fd9 \\(O(\\log n)\\) \u4e2a\u533a\u95f4\u7684\u590d\u6742\u5ea6\u662f \\(O(\\log n)\\) \u7684\uff0c\u7c7b\u4f3c\u666e\u901a\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2\u3002</p> <p>\u7136\u540e\uff0c\u66f4\u65b0\u4e00\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\u7684\u65f6\u5019\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\uff0c\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u5904\u7406\u65b0\u52a0\u5165\u7684\u7ebf\u6bb5\u5bf9\u4e8e\u5f53\u524d\u533a\u95f4\u7684\u4fe1\u606f\u7684\u5f71\u54cd\uff0c\u5e76\u4e14\u9012\u5f52\u5230\u5b50\u6811\u5904\u7406\u4e00\u76f4\u5230\u8fb9\u754c\uff0c\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f \\(O(\\log n)\\) \u7684\uff0c\u56e0\u4e3a\u5f53\u524d\u7ebf\u6bb5\u548c\u533a\u95f4\u5df2\u7ecf\u5b58\u4e86\u7684\u7ebf\u6bb5\u7684\u4ea4\u70b9\u6700\u591a\u4e00\u4e2a\uff0c\u53ea\u4f1a\u9012\u5f52\u4e00\u8fb9\u3002</p> <p>\u5177\u4f53\u5206\u7c7b\u5c31\u8fd9\u4e48\u641e\uff1a</p> \u5177\u4f53\u5206\u7c7b\u8ba8\u8bba\u65b9\u5f0f\uff08by dwt\uff09 <p>\u5047\u8bbe\u73b0\u5728\u6211\u4eec\u9700\u8981\u63d2\u5165\u4e00\u6761\u7ebf\u6bb5 \\(f\\)\uff0c\u5728\u8fd9\u6761\u7ebf\u6bb5\u5b8c\u6574\u8986\u76d6\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u4e2d\uff0c\u67d0\u4e9b\u533a\u95f4\u7684\u6700\u4f18\u7ebf\u6bb5\u53ef\u80fd\u53d1\u751f\u6539\u53d8\u3002</p> <p>\u8003\u8651\u67d0\u4e2a\u88ab\u65b0\u7ebf\u6bb5 \\(f\\) \u5b8c\u6574\u8986\u76d6\u7684\u533a\u95f4\uff0c\u82e5\u8be5\u533a\u95f4\u65e0\u6700\u4f18\u7ebf\u6bb5\uff0c\u5219\u8be5\u7ebf\u6bb5\u53ef\u4ee5\u76f4\u63a5\u6210\u4e3a\u6700\u4f18\u7ebf\u6bb5\u3002</p> <p>\u5426\u5219\uff0c\u8bbe\u8be5\u533a\u95f4\u7684\u4e2d\u70b9\u4e3a \\(m\\)\uff0c\u6211\u4eec\u62ff\u65b0\u7ebf\u6bb5 \\(f\\) \u5728\u4e2d\u70b9\u5904\u7684\u503c\u4e0e\u539f\u6700\u4f18\u7ebf\u6bb5 \\(g\\) \u5728\u4e2d\u70b9\u5904\u7684\u503c\u4f5c\u6bd4\u8f83\u3002</p> <p>\u5982\u679c\u65b0\u7ebf\u6bb5 \\(f\\) \u66f4\u4f18\uff0c\u5219\u5c06 \\(f\\) \u548c \\(g\\) \u4ea4\u6362\u3002\u90a3\u4e48\u73b0\u5728\u8003\u8651\u5728\u4e2d\u70b9\u5904 \\(f\\) \u4e0d\u5982 \\(g\\) \u4f18\u7684\u60c5\u51b5\uff1a</p> <ol> <li>\u82e5\u5728\u5de6\u7aef\u70b9\u5904 \\(f\\) \u66f4\u4f18\uff0c\u90a3\u4e48 \\(f\\) \u548c \\(g\\) \u5fc5\u7136\u5728\u5de6\u534a\u533a\u95f4\u4e2d\u4ea7\u751f\u4e86\u4ea4\u70b9\uff0c\u9012\u5f52\u5230\u5de6\u513f\u5b50\u4e2d\u8fdb\u884c\u63d2\u5165\uff1b</li> <li>\u82e5\u5728\u53f3\u7aef\u70b9\u5904 \\(f\\) \u66f4\u4f18\uff0c\u90a3\u4e48 \\(f\\) \u548c \\(g\\) \u5fc5\u7136\u5728\u53f3\u534a\u533a\u95f4\u4e2d\u4ea7\u751f\u4e86\u4ea4\u70b9\uff0c\u9012\u5f52\u5230\u53f3\u513f\u5b50\u4e2d\u8fdb\u884c\u63d2\u5165\u3002</li> <li>\u82e5\u5728\u5de6\u53f3\u7aef\u70b9\u5904 \\(g\\) \u90fd\u66f4\u4f18\uff0c\u90a3\u4e48 \\(f\\) \u4e0d\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\uff0c\u4e0d\u9700\u8981\u7ee7\u7eed\u4e0b\u4f20\u3002</li> </ol> <p>\u6ce8\u610f\u6709\u4e00\u4e2a\u70b9\u662f\uff0c\u5982\u679c\u63d2\u5165\u4e86\u4e00\u6761\u5e73\u884c\u4e8e y \u8f74\u7684\u7ebf\u6bb5 \\((x, y_0) \\to (x,y_1), (y_0 \\le y_1)\\)\uff0c\u6211\u4eec\u9700\u8981\u628a\u5b83\u5f53\u6210\u4e00\u4e2a\u70b9\u63d2\u5165\u8fdb\u6765\uff0c\u56e0\u4e3a\u6211\u4eec\u7ef4\u62a4\u7684\u4fe1\u606f\u662f Max\uff0c\u6240\u4ee5\u53d6 \\(y_1\\) \u8fd9\u4e2a\u503c\u5e26\u8fdb\u53bb\u5c31\u884c\u4e86\u3002</p> <p>\u8be2\u95ee\u76f4\u63a5\u9012\u5f52\u5230\u5bf9\u5e94\u53f6\u5b50\u8282\u70b9\uff0c\u7d2f\u8ba1\u8def\u5f84\u4e0a\u7684\u4fe1\u606f\u5c31\u884c\u4e86\u3002</p> <p>\u63d2\u5165\u590d\u6742\u5ea6\u4e24\u4e2a log\uff0c\u67e5\u8be2\u4e00\u4e2a log\u3002</p>"}, {"location": "algor/ds/li-chao-tree/#_2", "title": "\u5e94\u7528", "text": ""}, {"location": "algor/ds/li-chao-tree/#heoi2013-segment", "title": "[HEOI2013] Segment", "text": "<p>\u8981\u6c42\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0b\u7ef4\u62a4\u4e24\u4e2a\u64cd\u4f5c\uff08\u5f3a\u5236\u5728\u7ebf\uff09\uff1a</p> <ol> <li> <p>\u5728\u5e73\u9762\u4e0a\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5\u3002\u8bb0\u7b2c \\(i\\) \u6761\u88ab\u63d2\u5165\u7684\u7ebf\u6bb5\u7684\u6807\u53f7\u4e3a \\(i\\)\uff0c\u8be5\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u4e3a \\((x_0,y_0)\\)\uff0c\\((x_1,y_1)\\)\u3002</p> </li> <li> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6570 \\(k\\)\uff0c\u8be2\u95ee\u4e0e\u76f4\u7ebf \\(x = k\\) \u76f8\u4ea4\u7684\u7ebf\u6bb5\u4e2d\uff0c\u4ea4\u70b9\u7eb5\u5750\u6807\u6700\u5927\u7684\u7ebf\u6bb5\u7684\u7f16\u53f7\uff08\u82e5\u6709\u591a\u6761\u7ebf\u6bb5\u4e0e\u67e5\u8be2\u76f4\u7ebf\u7684\u4ea4\u70b9\u7eb5\u5750\u6807\u90fd\u662f\u6700\u5927\u7684\uff0c\u5219\u8f93\u51fa\u7f16\u53f7\u6700\u5c0f\u7684\u7ebf\u6bb5\uff09\u3002\u7279\u522b\u5730\uff0c\u82e5\u4e0d\u5b58\u5728\u7ebf\u6bb5\u4e0e\u7ed9\u5b9a\u76f4\u7ebf\u76f8\u4ea4\uff0c\u8f93\u51fa \\(0\\)\u3002</p> </li> </ol> <p>\u6570\u636e\u6ee1\u8db3\uff1a\u64cd\u4f5c\u603b\u6570 \\(1 \\leq n \\leq 10^5\\)\uff0c\\(1 \\leq k, x_0, x_1 \\leq 39989\\)\uff0c\\(1 \\leq y_0, y_1 \\leq 10^9\\)\u3002</p> <p>\u6a21\u677f\u9898\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a</p> <p>\u8fd9\u9053\u9898\u6bd4\u8f83\u7279\u6b8a\uff0c\u8981\u6c42\u8f93\u51fa\u7684\u4e0d\u662f\u503c\u800c\u662f\u7f16\u53f7\uff0c\u4e14\u8981\u6c42\u7f16\u53f7\u5c3d\u91cf\u5c0f\u3002</p> Code <p>\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u70b9\uff0cbool \u8f6c\u6362\u7684\u65f6\u5019\u53ea\u8981\u4e0d\u662f 0 \u5c31\u662f true \uff01\uff01\uff01\uff01</p> <p>\u56e0\u4e3a\u8fd9\u4e2a\u88ab\u5751\u4e86 5 hours\uff01\uff01\uff01\uff01\uff01\uff01\uff01</p> <p>\u611f\u8c22 Uoj \u7fa4\u53cb\uff0c\u611f\u8c22\u53ef\u7231 do_while_true\u3002</p> <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\n// using i64 = long long;\nusing ldb = long double;\nusing pdi = std::pair&lt;ldb, int&gt;;\n\nconst ldb eps = 1e-9;\nconst int mod1 = 39989;\nconst int mod2 = 1e9;\nconst int si = 1e5 + 10;\n\nint n, tot = 0;\nstruct Line { double k, b; } a[si];\nldb calc(int idx, int x) { return (a[idx].k * x + a[idx].b); }\nvoid add(int x, int y, int xx, int yy) {\n++tot;\nif(x == xx) a[tot].k = 0, a[tot].b = max(y, yy);\nelse a[tot].k = (ldb)((1.0 * (yy - y)) / (1.0 * (xx - x))), a[tot].b = y - a[tot].k * x;\n}\nint cmp(ldb x, ldb y) {\nif((x - y) &gt; eps) return 1; // Greater.\nelse if((y - x) &gt; eps) return -1; // Less\nreturn 0;\n}\npdi Max(pdi x, pdi y) { if(cmp(x.first, y.first) == 1) return x;\nelse if(cmp(y.first, x.first) == 1) return y;\nreturn (x.second &lt; y.second) ? x : y;\n}\n\nstruct LichaoTree {\nint id[si &lt;&lt; 2];\nvoid modify(int p, int l, int r, int u) {\nint &amp;v = id[p], mid = (l + r) &gt;&gt; 1;\nif(cmp(calc(u, mid), calc(v, mid)) == 1) swap(u, v);\nint boundl = cmp(calc(u, l), calc(v, l));\nint boundr = cmp(calc(u, r), calc(v, r));\nif(boundl == 1 || (!boundl &amp;&amp; u &lt; v)) modify(p &lt;&lt; 1, l, mid, u);\nif(boundr == 1 || (!boundr &amp;&amp; u &lt; v))\nmodify(p &lt;&lt; 1 | 1, mid + 1, r, u);\n}\nvoid update(int p, int nl, int nr, int l, int r, int u) {\nif(l &lt;= nl &amp;&amp; nr &lt;= r) return modify(p, nl, nr, u);\nint mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) update(p &lt;&lt; 1, nl, mid, l, r, u);\nif(r &gt; mid) update(p &lt;&lt; 1 | 1, mid + 1, nr, l, r, u);\n} pdi query(int p, int l, int r, int x) {\nif(x &lt; l || r &lt; x) return {0.0, 0};\nldb ret = calc(id[p], x), mid = (l + r) &gt;&gt; 1;\nif(l == r) return {ret, id[p]};\nreturn Max({ret, id[p]}, Max(query(p &lt;&lt; 1, l, mid, x), query(p &lt;&lt; 1 | 1, mid + 1, r, x)));\n}\n} tr;\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint lasans = 0;\nauto decode = [&amp;](int &amp;v, const int mod) {\nv = (v + lasans - 1 + mod) % mod + 1;\n};\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) {\nint opt; cin &gt;&gt; opt;\nif(opt == 0) {\nint k; cin &gt;&gt; k, decode(k, mod1);\ncout &lt;&lt; (lasans = tr.query(1, 1, mod1, k).second) &lt;&lt; endl;\n}\nif(opt == 1) {\nint x, y, xx, yy;\ncin &gt;&gt; x &gt;&gt; y &gt;&gt; xx &gt;&gt; yy;\ndecode(x, mod1), decode(xx, mod1), decode(y, mod2), decode(yy, mod2);\nif(x &gt; xx) swap(x, xx), swap(y, yy);\nadd(x, y, xx, yy), tr.update(1, 1, mod1, x, xx, tot);\n}\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/li-chao-tree/#_3", "title": "\u7ef4\u62a4\u51f8\u58f3", "text": "<p>\u8fd9\u73a9\u610f\u513f\uff0c\u8c14\u8c14\uff0c\u5c31\u76f4\u63a5\u628a\u6240\u6709\u7ebf\u6bb5\u6254\u4e0a\u53bb\u7136\u540e\u95ee\u9898\u8f6c\u5316\u4e3a\u8be2\u95ee Min/Max\uff0c\u5c31\u5f88\u597d\u505a\u4e86\u3002</p> <p>\u7406\u6240\u5f53\u7136\u7684\uff0c\u8fd9\u4e1c\u897f\u8fd8\u53ef\u4ee5\u7528\u4e8e\u659c\u7387\u4f18\u5316\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u6709\u65f6\u95f4\u518d\u6765\u5199\u5427\uff0c\u653e\u5728\u8fd9\u91cc\u3002</p>"}, {"location": "algor/ds/list/", "title": "\u94fe\u8868", "text": ""}, {"location": "algor/ds/list/#_1", "title": "\u6982\u8ff0", "text": "<p>\u8fd9\u91cc\u8bf4\u7684\u94fe\u8868\u662f\u53cc\u5411\u94fe\u8868\uff0c\u5b83\u652f\u6301\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u6216\u8005\u5220\u9664\u5143\u7d20\uff0c\u4f46\u662f\u53ea\u80fd\u6309\u7167\u987a\u5e8f\u8bbf\u95ee\u3002</p> <p>\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u7684\u7ed3\u70b9\u901a\u5e38\u7531\u5143\u7d20\u503c \\(val\\) \uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488 \\(next\\) \u548c\u6307\u5411\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488 \\(prev\\)</p> <p>\u4e00\u822c\u6765\u8bf4\u6211\u4eec\u4f1a\u989d\u5916\u5efa\u7acb\u8868\u5934 \\(head\\) \u548c\u8868\u5c3e \\(tail\\) \u6307\u9488\uff0c\u5e76\u5c06\u5b83\u4eec\u9996\u5c3e\u76f8\u8fde\uff0c\u6765\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u95ee\u9898\u3002</p>"}, {"location": "algor/ds/list/#_2", "title": "\u5b9e\u73b0", "text": ""}, {"location": "algor/ds/list/#_3", "title": "\u521d\u59cb\u5316", "text": "<p>\u521d\u59cb\u5316\u94fe\u8868\u53ea\u9700\u8981\u628a \\(head\\) \u7684 \\(next\\) \u6307\u5411 \\(tail\\) \uff0c \\(tail\\) \u7684 \\(prev\\) \u6307\u5411 \\(head\\) \u5373\u53ef</p> <pre><code>inline void init(){\nhead=new node(),tail=new node();\nhead-&gt;next=tail,tail-&gt;prev=head;\n} // init new List\n</code></pre>"}, {"location": "algor/ds/list/#_4", "title": "\u63d2\u5165\u5143\u7d20", "text": "<p>\u5728\u8282\u70b9 \\(p\\) \u4e4b\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9 \\(q\\) \uff0c\u5e76\u4e14\u8282\u70b9\u503c\u4e3a \\(val\\) \u3002</p> <p>\u6211\u4eec\u53ea\u9700\u8981\u8ba9 \\(p\\) \u7684 \\(next\\) \u8282\u70b9\u7684 \\(prev\\) \u6307\u5411 \\(q\\) \uff0c\u8ba9 \\(q\\) \u548c \\(p\\)  \u4ee5\u53ca\u539f\u6765\u7684 \\(p.next\\) \u76f8\u8fde\u5373\u53ef\u3002</p> <p>\u6700\u540e\u628a \\(p\\) \u7684 \\(next\\) \u6307\u5411 \\(q\\) \uff0c\u6ce8\u610f\u662f\u6700\u540e\uff0c\u4e0d\u7136\u4f60\u5728\u524d\u9762\u64cd\u4f5c\u7684\u65f6\u5019\u5c31\u4f1a\u8ba9 \\(q\\) \u7684 \\(prev\\) \u6307\u5411\u81ea\u5df1\u7684\u3002</p> <pre><code>inline void insert(node *p,int val){\nnode *q;q=new node();\nq-&gt;val=val,p-&gt;next-&gt;prev=q;\nq-&gt;next=p-&gt;next,q-&gt;prev=p,p-&gt;next=q;\n} // insert a element ,value is val, after p\n</code></pre>"}, {"location": "algor/ds/list/#_5", "title": "\u5220\u9664\u5143\u7d20", "text": "<p>\u5220\u9664\u4e00\u4e2a\u8282\u70b9 \\(p\\) \u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u628a \\(p\\) \u7684 \\(prev\\) \u4ee5\u53ca \\(next\\) \u94fe\u63a5\u8d77\u6765\u5373\u53ef\u3002</p> <pre><code>inline void remove(node *p){\np-&gt;prev-&gt;next=p-&gt;next,p-&gt;next-&gt;prev=p-&gt;prev;\ndelete p;\n} // remove p\n</code></pre>"}, {"location": "algor/ds/list/#_6", "title": "\u6e05\u7a7a\u94fe\u8868", "text": "<p>\u56de\u6536\u94fe\u8868\u5185\u5b58\u7684\u8bdd\u53ea\u9700\u8981\u8ba9 \\(head\\) \u4e00\u6b65\u6b65\u903c\u8fd1 \\(tail\\) \uff0c\u5728\u903c\u8fd1\u7684\u8fc7\u7a0b\u4e2d\u628a\u8bbf\u95ee\u8fc7\u7684 \\(head.prev\\) \u5220\u9664\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u8981\u5148\u8df3 \\(next\\) \u4e4b\u540e\u518d\u5220\u9664 \\(prev\\) \uff0c\u4e0d\u7136\u5f88\u5bb9\u6613\u4f1a\u8bbf\u95ee\u65e0\u6548\u5185\u5b58\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5f00\u5934\u7684\u8fde\u63a5\u94fe\u8868\u7684\u9996\u5c3e\u5c31\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <pre><code>inline void reset(){\nwhile(head!=tail){\nhead=head-&gt;next;\ndelete head-&gt;prev;\n} delete tail;\n} // clear\n</code></pre>"}, {"location": "algor/ds/monotonous-queue/", "title": "\u5355\u8c03\u961f\u5217", "text": ""}, {"location": "algor/ds/monotonous-queue/#_1", "title": "\u6982\u8ff0", "text": "<p>\u5355\u8c03\u961f\u5217\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u961f\u5217\u91cc\u7684\u5143\u7d20\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5355\u8c03\u7684\u961f\u5217\u3002</p> <p>\u6709\u4e00\u4e2a\u5f88\u51fa\u540d\u7684\u6897\uff0c\u201c\u6bd4\u4f60\u5c0f\uff0c\u6bd4\u4f60\u5f3a\u201d\uff0c\u53ef\u4ee5\u7528\u6765\u7406\u89e3\u5355\u8c03\u961f\u5217\u3002</p> <p>\u5355\u8c03\u961f\u5217\u53ef\u4ee5\u5904\u7406\u4e00\u4e9b\u6ed1\u52a8\u7684\u533a\u95f4\u5185\u7684\u9759\u6001\u6700\u503c\u95ee\u9898\u3002</p> <p>\u590d\u6742\u5ea6\u4ece\u66b4\u529b\u7684 \\(O(nm)\\) \u53d8\u6210\u4e86 \\(O(n)\\)\u3002</p>"}, {"location": "algor/ds/monotonous-queue/#_2", "title": "\u5e94\u7528", "text": "<p>\u6709\u4e00\u4e2a\u957f\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a\\)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5927\u5c0f\u4e3a \\(k\\) \u7684\u7a97\u53e3\u3002\u73b0\u5728\u8fd9\u4e2a\u4ece\u5de6\u8fb9\u5f00\u59cb\u5411\u53f3\u6ed1\u52a8\uff0c\u6bcf\u6b21\u6ed1\u52a8\u4e00\u4e2a\u5355\u4f4d\uff0c\u6c42\u51fa\u6bcf\u6b21\u6ed1\u52a8\u540e\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c\u3002</p> <p>\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u5b58\u50a8\u5f53\u524d\u533a\u95f4\u7684\u6240\u6709\u5143\u7d20\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8003\u8651\u4fdd\u6301\u961f\u5217\u7684\u5355\u8c03\u6027\uff0c\u8ba9\u961f\u5934\u6c38\u8fdc\u662f\u6700\u5927\u7684\uff0c\u540e\u9762\u4ee5\u6b64\u9012\u51cf\u3002</p> <p>\u6bcf\u6b21\u6ed1\u52a8\u7684\u65f6\u5019\u628a\u8fc7\u65f6\u7684\u90a3\u4e00\u4e2a\u6254\u51fa\u53bb\uff0c\u65b0\u7684\u6254\u8fdb\u6765\uff0c\u7136\u540e\u4f60\u53d1\u73b0\uff0c\u5982\u679c\u50a8\u5b58\u6240\u6709\u5143\u7d20\u7684\u8bdd\uff0c\u5927\u6982\u7387\u8981\u5f39\u51fa\u7684\u65f6\u5019\u6ca1\u6cd5\u4ece\u961f\u5217\u91cc\u62ff\u51fa\u6765\u3002</p> <p>\u800c\u4e14\u5982\u679c\u8fd9\u6837\u505a\u8981\u4fdd\u6301\u5355\u8c03\u6027\uff0c\u6bcf\u6b21\u90fd\u8fd8\u8981\u6392\u5e8f\uff0c\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86 \\(O(n^2\\log n)\\)\uff0c\u4e0d\u5982\u66b4\u529b\uff01</p> <p>\u7136\u540e\u4f60\u53d1\u73b0\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981\u5b58\u50a8\u6240\u6709\u5143\u7d20\uff0c\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u672c\u6765\u5728\u961f\u5217\u4e2d\u95f4\uff0c\u8fdb\u6765\u4e00\u4e2a\u65b0\u7684\u6570\u4e4b\u540e\u5b83\u7684\u4f4d\u7f6e\u5f80\u540e\u9000\u4e86\uff0c\u5f88\u660e\u663e\u4ed6\u5c31\u662f\u4e00\u4e2a\u201c\u5197\u4f59\u51b3\u7b56\u201d\u3002</p> <p>\u56e0\u4e3a\u6709\u4e00\u4e2a\u6bd4\u4f60\u540e\u8fdb\u6765\uff0c\u5269\u4f59\u6709\u6548\u671f\u6bd4\u4f60\u591a\u7684\uff0c\u5b9e\u529b\u6bd4\u4f60\u5f3a\u7684\uff0c\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u5728\u4f60\u6709\u6548\u7684\u671f\u95f4\uff0c\u4f60\u90fd\u4e0d\u53ef\u80fd\u8d85\u8fc7\u4ed6\uff0c\u6211\u4eec\u8fd9\u91cc\u53ea\u9700\u8981\u6700\u5927\u503c\uff0c\u6240\u4ee5\u4f60\u65e2\u7136\u6c38\u8fdc\u4e0d\u53ef\u80fd\u6210\u4e3a\u5934\u4e86\uff0c\u90a3\u6211\u5c31\u628a\u4f60\u5f39\u6389\u3002</p> <p>\u7136\u540e\u961f\u5934\u53ef\u4ee5\u4e00\u76f4\u4fdd\u6301\u6700\u5927\u503c\uff0c\u4e14\u961f\u5217\u91cc\u7684\u4e0b\u6807\u4e5f\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u8fd9\u6837\u8fc7\u671f\u7684\u65f6\u5019\u53ea\u7528\u628a\u961f\u5934\u5f39\u51fa\u5c31\u884c\u4e86\uff01</p> <p>\u6a21\u62df\u4e00\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\uff1a</p> <p>\\(\\{a\\} = 5, 7, 2, 8, 4, 7, 9\\)\uff0c \\(k = 3\\)\u3002</p> <p>\u521d\u59cb\u5316\u961f\u5217\uff1a\u628a \\(5\\) \u653e\u8fdb\u6765\uff0c\u7136\u540e\u53d1\u73b0\u6709\u6bd4\u4ed6\u5c0f\u6bd4\u4ed6\u5f3a\u7684 \\(7\\)\uff0c\u5f39\u6389\uff0c\u961f\u5217\u53ea\u5269 \\(7\\)\uff0c\\(2\\) \u867d\u7136\u6bd4 \\(7\\) \u5c0f\uff0c\u4f46\u662f \\(7\\) \u5982\u679c\u8fc7\u671f\u4e86\u4e4b\u540e\u8bf4\u4e0d\u5b9a \\(2\\) \u53ef\u4ee5\uff0c\u6240\u4ee5\u5165\u961f\uff0c\u6b64\u65f6\u961f\u5217\u4e3a \\(|7, 2|\\)</p> <ul> <li> <p>\u79fb\u52a8\u4e00\u6b21\uff1a\u53d1\u73b0 \\(8\\) \u80fd\u628a \\(7,2\\) \u5168\u90e8\u66b4\u6740\uff0c\u6240\u4ee5 \\(7, 2\\) \u5f39\u6389\uff0c\u53ea\u5269 \\(8\\)\u3002</p> </li> <li> <p>\u79fb\u52a8\u4e24\u6b21\uff1a\\(4\\) \u4e5f\u8bb8\u53ef\u4ee5\uff0c\u653e\u8fdb\u6765\uff1a\\(|8, 4|\\)\u3002</p> </li> <li> <p>\u79fb\u52a8\u4e09\u6b21\uff1a\\(7\\) \u628a \\(4\\) \u66b4\u6740\uff0c\\(4\\) \u5f39\u6389\uff0c\\(7\\) \u5165\u961f\uff0c\u53d8\u6210 \\(|8, 7|\\)\u3002</p> </li> <li> <p>\u79fb\u52a8\u56db\u6b21\uff1a\\(8\\) \u8fc7\u671f\uff0c\u5f39\u6389\uff0c\u5269\u4e0b \\(7\\)\uff0c\u7136\u540e \u2468 \u628a \\(7\\) \u66b4\u6740\uff0c\u961f\u5217\u53ea\u5269 \u2468\u3002</p> </li> </ul> \u5b9e\u73b0 <pre><code>#include&lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int si = 1e6 + 10;\n\nint n, k;\nint a[si], ans[si];\nint q[si], hd = 1, tl = 0; int main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.badbit | cin.failbit);\n\ncin &gt;&gt; n &gt;&gt; k;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\nfor(int i = 1; i &lt;= n; ++i) {\nwhile(hd &lt;= tl &amp;&amp; q[hd] + k &lt;= i) hd++;//\u6392\u9664\u961f\u5934\u8fc7\u671f\u7684\u3002\nwhile(hd &lt;= tl &amp;&amp; a[i] &lt;= a[q[tl]]) tl--;//\u6392\u9664\u961f\u5c3e\u5197\u6742\u51b3\u7b56\u3002\nq[++tl] = i;\nans[i] = a[q[hd]];//\u6ce8\u610f\u8fd9\u91ccq\u5b58\u7684\u662f\u4e0b\u6807\uff0c\u6240\u4ee5\u8981\u5c06\u5176\u4f5c\u4e3a\u4e0b\u6807\u3002\n}\nreturn 0;\n}\n</code></pre> <p>Warning</p> <p>\u6ce8\u610f\u8fd9\u91cc \\(head\\) \u548c \\(tail\\) \u7684\u521d\u503c\u662f <code>head = 1, tail = 0</code>\u3002</p> <p>\u8fd9\u79cd\u5199\u6cd5\u5bf9\u5e94\u7684\u662f\u7ef4\u62a4\u95ed\u533a\u95f4 \\([head, tail]\\) </p> <p>\u5982\u679c\u7ef4\u62a4\u5de6\u95ed\u53f3\u5f00\u533a\u95f4 \\([head,tail)\\)\uff0c\u90a3\u4e48\u521d\u503c\u5e94\u5f53\u662f <code>head = 1, tail = 1</code>\u3002</p> <p>\u8fd9\u4e2a\u5728\u659c\u7387\u4f18\u5316\u91cc\u9762\u4f7f\u7528\u5230\u5355\u8c03\u961f\u5217\u65f6\u4e5f\u63d0\u5230\u8fc7\u3002</p> <p>\u4e0d\u6b62\u5355\u8c03\u961f\u5217\uff0c\u83ab\u961f\u8fd9\u79cd\u7b97\u6cd5\u4e5f\u662f\u4e00\u6837\uff0c\\(l,r\\) \u7684\u521d\u503c\u548c\u79fb\u52a8\u65b9\u5f0f\u51b3\u5b9a\u4e86\u7ef4\u62a4\u7684\u533a\u95f4\u6027\u8d28\u3002</p> <p>\u5355\u8c03\u961f\u5217\u8fd8\u53ef\u4ee5\u7528\u6765\u4f18\u5316 DP\u3002</p>"}, {"location": "algor/ds/monotonous-queue/#_3", "title": "\u603b\u7ed3", "text": "<p>\u5728\u6bcf\u9053\u9898\u4f7f\u7528\u5355\u8c03\u961f\u5217\u4e4b\u524d\u9700\u8981\u770b\u6e05\u9898\u76ee\u7684\u7aef\u70b9\u53d6\u820d\u548c\u6761\u4ef6\u3002</p> <p>\u6bd4\u5982\u6c42 m \u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u90a3\u9053\u9898\u5c31\u662f\u6c42 \\([i-k-1,i)\\) \u7684\u6700\u5c0f\u503c.</p> <p>\u6240\u4ee5\u8bf4\u6700\u597d\u5728\u7528\u4e4b\u524d\u624b\u73a9\u4e00\u4e0b\u6570\u636e\u3002</p>"}, {"location": "algor/ds/monotonous-stack/", "title": "\u5355\u8c03\u6808", "text": ""}, {"location": "algor/ds/monotonous-stack/#_1", "title": "\u6982\u8ff0", "text": "<p>\u5355\u8c03\u6808\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u6808\u5185\u5143\u7d20\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5355\u8c03\u7684\u6808\u3002</p> <p>\u5355\u8c03\u961f\u5217\u53ef\u4ee5\u7528\u6765\u7ef4\u62a4\u6ed1\u52a8\u7a97\u53e3\u6700\u503c\uff0c\u800c\u5355\u8c03\u6808\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684 NGE\uff0cNLE\u3002</p> <p>NGE = Next Greater Element, L \u540c\u7406\u3002</p> <p>\u5c31\u662f\u7ef4\u62a4\u5bf9\u4e8e \\(\\forall a_{i}\\)\uff0c\u5b83\u5de6\u8fb9\u7684\u7b2c\u4e00\u4e2a\u4f7f\u5f97 \\(a_{j} &gt; a_{i}\\) \u7684 \\(j\\)\u3002</p>"}, {"location": "algor/ds/monotonous-stack/#_2", "title": "\u5e94\u7528", "text": "<p>NGE \u7684\u66b4\u529b\u505a\u6cd5\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee \\(O(n)\\) \u8dd1\u4e00\u904d\uff0c\u590d\u6742\u5ea6 \\(O(nm)\\) \u4e0d\u80fd\u63a5\u53d7\u3002</p> <p>\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u6808\u8868\u793a\u201c\u5f53\u524d\u8fd8\u672a\u786e\u5b9a NGE\u201d \u7684\u5143\u7d20\u96c6\u5408\u3002</p> <p>\u7136\u540e\u8ba9\u6808\u4ece\u6808\u5e95\u5230\u6808\u9876\u5355\u8c03\u9012\u51cf\u3002</p> <p>\u8fd9\u6837\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5143\u7d20\u5165\u6808\u65f6\uff0c\u7834\u574f\u4e86\u6808\u5185\u5355\u8c03\u6027\uff0c\u90a3\u4e48\u4e0d\u65ad\u5f39\u51fa\u6808\u5185\u7684\u5143\u7d20\uff0c\u76f4\u5230\u6808\u9876\u4e0d\u5c0f\u4e8e\u8fd9\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u518d\u8ba9\u8fd9\u4e2a\u5143\u7d20\u5165\u6808\u3002</p> <p>\u88ab\u8fd9\u4e2a\u5143\u7d20\u5f39\u51fa\u7684\u6240\u6709\u5143\u7d20\u7684 NGE \u5c31\u662f\u8fd9\u4e2a\u65b0\u8fdb\u6808\u5143\u7d20\u7684\u4e0b\u6807\uff0c\u539f\u56e0\u663e\u7136\u3002</p> <p>\u5982\u679c\u5904\u7406\u5b8c\u6574\u4e2a\u5e8f\u5217\u4e4b\u540e\uff0c\u6808\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48\u8bf4\u660e\u6808\u4e2d\u5143\u7d20\u6ca1\u6709 NGE\u3002</p> \u5b9e\u73b0\uff08\u6d1b\u8c37\u6a21\u677f\u9898\uff09\uff1a <pre><code>// author : black_trees\n\n#include &lt;stack&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 3e6 + 10;\nconst int inf = 0x3f3f3f3f;\n\nint ans[si];\nint a[si], n;\nstd::stack&lt;int&gt; mns; // ele that waiting to cal nxt greater ele. \n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\nfor(int i = 1; i &lt;= n; ++i) {\nwhile(!mns.empty() &amp;&amp; a[i] &gt; a[mns.top()])\nans[mns.top()] = i, mns.pop();\nmns.push(i);\n}\nfor(int i = 1; i &lt;= n; ++i) cout &lt;&lt; ans[i] &lt;&lt; \" \";\ncout &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <p>\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> <p>\u5355\u8c03\u6808\u8fd8\u53ef\u4ee5\u7528\u6765\u4f18\u5316 DP\u3002</p>"}, {"location": "algor/ds/monotonous-stack/#_3", "title": "\u4e60\u9898", "text": "POJ3250 Bad Hair Day <p>\u6709 \\(N\\) \u5934\u725b\u4ece\u5de6\u5230\u53f3\u6392\u6210\u4e00\u6392\uff0c\u6bcf\u5934\u725b\u6709\u4e00\u4e2a\u9ad8\u5ea6 \\(h_i\\)\uff0c\u8bbe\u5de6\u6570\u7b2c \\(i\\) \u5934\u725b\u4e0e\u300c\u5b83\u53f3\u8fb9\u7b2c\u4e00\u5934\u9ad8\u5ea6 \\(\u2265h_i\\)\u300d\u7684\u725b\u4e4b\u95f4\u6709 \\(c_i\\) \u5934\u725b\uff0c\u8bd5\u6c42 \\(\\sum_{i=1}^{N} c_i\\)\u3002</p> <p>\u6bd4\u8f83\u57fa\u7840\u7684\u5e94\u7528\u6709\u8fd9\u4e00\u9898\uff0c\u5c31\u662f\u4e2a\u5355\u8c03\u6808\u7684\u7b80\u5355\u5e94\u7528\uff0c\u8bb0\u5f55\u6bcf\u5934\u725b\u88ab\u5f39\u51fa\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u5f39\u51fa\u8fc7\u5219\u4e3a\u6700\u8fdc\u7aef\uff0c\u7a0d\u5fae\u5904\u7406\u4e00\u4e0b\u5373\u53ef\u8ba1\u7b97\u51fa\u9898\u76ee\u6240\u9700\u7ed3\u679c\u3002</p> <p>\u53e6\u5916\uff0c\u5355\u8c03\u6808\u4e5f\u53ef\u4ee5\u7528\u4e8e\u79bb\u7ebf\u89e3\u51b3 RMQ \u95ee\u9898\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u8be2\u95ee\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u5728\u5e8f\u5217\u4e0a\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\u5230\u5f53\u524d\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u5904\uff0c\u5e76\u628a\u626b\u63cf\u5230\u7684\u5143\u7d20\u63d2\u5165\u5230\u5355\u8c03\u6808\u4e2d\u3002\u8fd9\u6837\uff0c\u6bcf\u6b21\u56de\u7b54\u8be2\u95ee\u65f6\uff0c\u5355\u8c03\u6808\u4e2d\u5b58\u50a8\u7684\u503c\u90fd\u662f\u4f4d\u7f6e \\(\\le r\\) \u7684\u3001\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u51b3\u7b56\u70b9\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5143\u7d20\u6ee1\u8db3\u5355\u8c03\u6027\u8d28\u3002\u6b64\u65f6\uff0c\u5355\u8c03\u6808\u4e0a\u7b2c\u4e00\u4e2a\u4f4d\u7f6e \\(\\ge l\\) \u7684\u5143\u7d20\u5c31\u662f\u5f53\u524d\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u5b9e\u73b0\u3002\u4f7f\u7528\u5355\u8c03\u6808\u89e3\u51b3 RMQ \u95ee\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(q\\log q + q\\log n)\\)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\u3002</p>"}, {"location": "algor/ds/odt/", "title": "\u73c2\u6735\u8389\u6811", "text": ""}, {"location": "algor/ds/odt/#_1", "title": "\u6982\u8ff0", "text": "<p>\u4e00\u79cd\u66b4\u529b\u6570\u636e\u7ed3\u6784\uff0c\u57fa\u4e8e <code>std::set</code> \u6216\u8005\u94fe\u8868</p> <p>\u57fa\u672c\u7684\u601d\u60f3\u662f\u628a\u6240\u6709\u76f8\u90bb\u4e14\u76f8\u540c\u7684\u5143\u7d20\u5408\u5e76\u6210\u4e00\u4e2a\u5143\u7d20\u7ef4\u62a4\u3002</p> <p>\u5982\u679c\u9047\u5230\u533a\u95f4\u7c7b\u7684\u64cd\u4f5c\u5c31\u5206\u88c2\uff0c\u66b4\u529b\u5904\u7406\u3002</p> <p>\u5728\u968f\u673a\u6570\u636e\u4e0b\u53ef\u4ee5\u505a\u5230\u4f18\u79c0\u7684 \\(\\text{O}(n \\log \\log n)\\)\uff0c\u94fe\u8868\u5b9e\u73b0\u53ef\u4ee5 \\(\\text{O}(n \\log n)\\)\u3002</p> <p>\u590d\u6742\u5ea6\u8bc1\u660e\u53ef\u4ee5\u770b @hqztrue \u7684\uff1ahttps://zhuanlan.zhihu.com/p/102786071</p>"}, {"location": "algor/ds/odt/#_2", "title": "\u5177\u4f53\u5b9e\u73b0", "text": ""}, {"location": "algor/ds/odt/#_3", "title": "\u521d\u59cb\u5316", "text": "<p>\u73c2\u6735\u8389\u6811\u7684\u8282\u70b9\u7531\u4e09\u4e2a\u5143\u7d20\u6784\u6210\uff0c\\((l,r,v)\\)\u3002</p> <p>\u5206\u522b\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u548c\u6743\u503c\u3002</p> <p>\u56e0\u4e3a\u9700\u8981\u7528 <code>std::set</code> \u5b9e\u73b0\uff0c\u6240\u4ee5\u8fd8\u8981\u91cd\u8f7d\u8fd0\u7b97\u7b26\u3002</p> <pre><code>struct node{\nint l,r;\nmutable int val; // if we need change a node's value which already in the set by using iterator, we have to use mutable.\nnode(const int &amp;il,const int &amp;ir,const int &amp;iv):l(il),r(ir),val(iv){}\ninline bool operator &lt; (const node &amp;b)const{ return l&lt;b.l; }\n}; std::set&lt;node&gt;odt;\n</code></pre> <p>\u521d\u59cb\u5316\u76f4\u63a5\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4 \\([1,n]\\) \u5373\u53ef\uff0c\u6743\u503c\u6839\u636e\u9898\u76ee\u5224\u65ad\u3002</p>"}, {"location": "algor/ds/odt/#_4", "title": "\u533a\u95f4\u5206\u88c2", "text": "<p>\u57fa\u672c\u64cd\u4f5c\u4e4b\u4e00\uff0c\u628a \\([l,r]\\) \u5206\u5272\u6210 \\([l,pos),[pos,r]\\)</p> <p>\u5e76\u8fd4\u56de\u4ee3\u8868\u540e\u9762\u90a3\u4e2a\u533a\u95f4\u7684\u8282\u70b9\u7684\u8fed\u4ee3\u5668\u3002</p> <p>\u5148\u4e8c\u5206\u4e00\u4e0b \\(pos\\) \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5220\u9664\u539f\u6765\u7684\u8282\u70b9\uff0c\u65b0\u52a0\u5165\u4e24\u4e2a\u8282\u70b9\u5373\u53ef\u3002</p> <pre><code>inline std::set&lt;node&gt;::iterator split(int pos){\nif(pos&gt;n) return odt.end(); // the position doesn't exist.\nstd::set&lt;node&gt;::iterator it=--odt.upper_bound((node){pos,0,0}); // find the node that pos in;\nif(it-&gt;l==pos) return it; // if pos is the begin of the node, return;\nint l=it-&gt;l,r=it-&gt;r,v=it-&gt;val;\nodt.erase(it),odt.insert((node){l,pos-1,v}); return odt.insert((node){pos,r,v}).first; // erase the original node, insert two node and return the left one's iterator.\n} // split the node [l,r] to two smaller node [l,pos),[pos,r];\n</code></pre> <p>\u8fd9\u91cc \\(it\\) \u662f\u4e2a\u8fed\u4ee3\u5668\uff0c\u6240\u4ee5\u8981\u7528\u6307\u9488\u8bbf\u95ee\u91cc\u9762\u7684\u6210\u5458\u3002</p> <p><code>std::set</code> \u5f53\u4e2d\u7684 <code>insert()</code> \u662f\u6709\u8fd4\u56de\u503c\u7684\u3002</p> <p>\u662f\u4e00\u4e2a <code>std::pair&lt;std::set&lt;Template&gt;::iterator,bool&gt;</code></p> <p>\u524d\u8005\u662f\u88ab\u63d2\u5165\u7684\u503c\u7684\u8fed\u4ee3\u5668\uff0c\u540e\u8005\u8868\u793a\u662f\u5426\u63d2\u5165\u6210\u529f\u3002</p> <p><code>--upper_bound</code> \u90a3\u91cc\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>std::prev</code></p>"}, {"location": "algor/ds/odt/#_5", "title": "\u533a\u95f4\u63a8\u5e73", "text": "<p>\u63a8\u5e73\u4e00\u6bb5\u533a\u95f4\uff0c\u4e5f\u5c31\u662f\u7ed9\u67d0\u4e2a\u533a\u95f4\u5168\u90e8\u8d4b\u503c\u6210\u67d0\u4e2a\u503c \\(v\\)\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u989d\u5916\u9650\u5236\u7684\u8bdd\uff0c\u5148\u628a \\(l,r\\) \u4ece\u4ed6\u4eec\u5404\u81ea\u6240\u5c5e\u7684\u8282\u70b9\u5f53\u4e2d <code>split</code> \u51fa\u6765\uff0c\u7136\u540e\u628a\u4ed6\u4eec\u4e2d\u95f4\u7684\u8fd9\u4e00\u6bb5\u5168\u90e8\u5220\u9664\uff0c\u518d\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 \\((l,r,v)\\) \u7ef4\u62a4\u8fd9\u4e2a\u533a\u95f4\u5373\u53ef\u3002</p> <pre><code>inline void assign(int l,int r,int v){\nstd::set&lt;node&gt;::iterator itr=split(r+1),itl=split(l); // because of [), so r+1. and **Remember, split(r+1) first. then split(l)**\nodt.erase(itl,itr),odt.insert((node){l,r,v});\n} // change all element in the interval [l,r] to v;\n</code></pre> <p>\u6ce8\u610f\u4e00\u5b9a\u8981\u5148 <code>split(r+1)</code> \uff0c\u4e0d\u7136 \\(l\\) \u539f\u6765\u6240\u5c5e\u7684\u8282\u70b9\u6709\u53ef\u80fd\u88ab\u5220\u9664\u5bfc\u81f4 Runtime Error\u3002</p>"}, {"location": "algor/ds/odt/#_6", "title": "\u5176\u5b83\u64cd\u4f5c", "text": "<p>\u5176\u5b83\u7684\u64cd\u4f5c\u5229\u7528 <code>split</code> \u548c <code>assign</code> \u66b4\u529b\u641e\u5c31\u597d\u3002</p> <p>\u57fa\u672c\u90fd\u662f\u8fd9\u6837\uff1a</p> <pre><code>inline void example(int l,int r,int v){\nstd::set&lt;node&gt;::iterator itr=split(r+1),itl=split(l);\nfor(;itl!=itr;++itl){\n// blablabla...\n} return;\n}\n</code></pre>"}, {"location": "algor/ds/old-p-seg/", "title": "\u4e3b\u5e2d\u6811", "text": ""}, {"location": "algor/ds/old-p-seg/#_2", "title": "\u6cdb\u5316", "text": "<p>\u4e3b\u5e2d\u6811\u5168\u79f0\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\uff08\u7684\u5dee\u5206\u524d\u7f00\u548c\uff09\uff0c\u56e0\u4e3a\u6743\u503c\u7ebf\u6bb5\u6811\u548c\u7ebf\u6bb5\u6811\u6ca1\u6709\u592a\u5927\u7684\u533a\u522b\uff0c\u5c31\u53ea\u8bf4\u4e3b\u5e2d\u6811\u4e86\u3002</p> <p>\u4f46\u662f\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u4e3b\u5e2d\u6811\u662f\u5229\u7528\u53ef\u6301\u4e45\u5316\u7684\u601d\u60f3\u6765\u5b9e\u73b0\u9759\u6001\u533a\u95f4\u7b2c \\(k\\) \u5927\uff0c\u800c\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u5219\u662f\u771f\u6b63\u7684\u76f4\u63a5\u7ef4\u62a4\u5404\u4e2a\u5386\u53f2\u7248\u672c\u3002</p> <p>\u4e3b\u5e2d\u6811\u7684\u601d\u60f3\u548c\u53ef\u6301\u4e45\u5316 Trie \u7684\u601d\u60f3\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u662f\u4ee5\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u65b9\u5f0f\u4fdd\u5b58\u5386\u53f2\u7248\u672c\uff0c\u4ee5\u628a\u4fe1\u606f\u4ece\u5168\u5c40\u8f6c\u5316\u4e3a\u533a\u95f4\u3002</p> <p>\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u95ee\u9898\u5c31\u662f\u9759\u6001\u533a\u95f4\u7b2c k \u5927\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u663e\u7136\u53ef\u4ee5\u5f88\u8f7b\u677e\u641e\u5b9a\u5168\u5c40\u7684\u7248\u672c\u3002</p> <p>\u4e8e\u662f\u628a\u6743\u503c\u7ebf\u6bb5\u6811\u53ef\u6301\u4e45\u5316\u4e4b\u540e\u5229\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\u5c31\u53ef\u4ee5\u505a\u533a\u95f4\u4e86\u3002</p> <p>\u4e0d\u8fc7\u4e3b\u5e2d\u6811\u4e00\u822c\u96be\u4ee5\u652f\u6301\u533a\u95f4\u4fee\u6539\uff0c\u6700\u591a\u652f\u6301\u4e00\u4e0b\u5355\u70b9\u4fee\u6539\u3002</p> <p>\u533a\u95f4\u4fee\u6539\u5728\u4fe1\u606f\u6bd4\u8f83\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u7528\u6807\u8bb0\u6c38\u4e45\u5316\u505a\uff0c\u4e0d\u8fc7\u4e5f\u975e\u5e38\u6709\u5c40\u9650\u6027\u3002</p>"}, {"location": "algor/ds/old-p-seg/#_3", "title": "\u57fa\u672c\u601d\u60f3", "text": "<p>\u4ecd\u7136\u8003\u8651\u9759\u6001\u533a\u95f4\u7b2c k \u5927\u95ee\u9898\u3002</p> <p>\u4e3b\u5e2d\u6811\u7684\u4e3b\u8981\u601d\u60f3\u5c31\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u63d2\u5165\u5e8f\u5217\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002</p> <p>\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\u7ef4\u62a4\u5386\u53f2\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5143\u7d20\u521a\u63d2\u5165\u7684\u65f6\u5019\uff0c\u7ebf\u6bb5\u6811\u7684\u6837\u5b50\u3002</p> <p>\u663e\u7136\u4e00\u4e2a\u6bd4\u8f83\u66b4\u529b\u7684\u505a\u6cd5\u662f\uff0c\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6570\uff08\u65b0\u5efa\u4e00\u4e2a\u7248\u672c\uff09\u7684\u65f6\u5019\uff0c\u90fd\u628a\u539f\u6765\u7684\u7ebf\u6bb5\u6811\u590d\u5236\u4e00\u6b21\uff0c\u7136\u540e\u628a\u65b0\u7684\u7248\u672c\u52a0\u4e0a\u53bb\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u6837\u7a7a\u95f4\u662f \\(O(nm)\\) \u7684\uff0c\u975e\u5e38\u4e0d\u4f18\u79c0\u3002</p> <p>\u53d1\u73b0\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u5728\u503c\u57df\u4e0a\u53ea\u4f1a\u4fee\u6539\u4e00\u4e2a\u70b9\uff0c\u5bf9\u5e94\u5230\u7ebf\u6bb5\u6811\u4e0a\u5c31\u662f\u53ea\u4fee\u6539\u4e00\u6761\u4ece\u6839\u8282\u70b9\u5230\u5bf9\u5e94\u53f6\u5b50\u8282\u70b9\u7684\u94fe\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u8fd9\u4e2a\u88ab\u4fee\u6539\u7684\u94fe\u5355\u72ec\u590d\u5236\u4e00\u6b21\u62c9\u51fa\u6765\uff0c\u8bb0\u5f55\u4e00\u4e0b\u63d2\u5165\u4e4b\u540e\uff0c\u5f53\u524d\u7248\u672c\u6811\u6839\u7684\u7f16\u53f7\u3002</p> <p>\u4e8e\u662f\u7a7a\u95f4\u5f00\u9500\u5c31\u5927\u5927\u51cf\u5c0f\u4e86\uff0c\u4ece \\(O(nm)\\) \u53d8\u6210\u4e86 \\(O(n + m\\log n)\\)\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u84dd\u8272\u8282\u70b9\u662f\u539f\u6765\u7248\u672c\u4e0a\u7684\u94fe\uff0c\u7ea2\u8272\u8282\u70b9\u662f\u73b0\u5728\u7248\u672c\u4e0a\u7684\u94fe\u3002</p> <p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff0c\u5bf9\u4e8e\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u8282\u70b9 \\(p\\)\uff0c\u590d\u5236\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 \\(q\\) \u51fa\u6765\u3002</p> <p>\u5982\u679c\u4e0b\u4e00\u6b65\u662f\u9012\u5f52 \\(p.ls\\)\uff0c\u90a3\u4e48 \\(q.ls\\) \u5c31\u9700\u8981\u65b0\u5efa\uff0c\u7136\u540e \\(q.rs\\) \u5c31\u662f\u539f\u6765\u7684 \\(p.ls\\)\uff0c\u53cd\u8fc7\u6765\u540c\u7406\u3002</p> <p>\u67e5\u8be2 \\([l, r]\\) \u7684\u7b2c k \u5927\u4e5f\u6bd4\u8f83\u597d\u505a\uff0c\u5c31\u76f4\u63a5\u7ebf\u6bb5\u6811\u4e8c\u5206\uff0c\u7136\u540e\u7528\u4e24\u4e2a\u6307\u9488 \\(p, q\\)\uff0c\u540c\u6b65\u904d\u5386 \\(l - 1\\)\uff0c\\(r\\) \u4e24\u4e2a\u7248\u672c\u3002</p> <p>\u6bd4\u8f83\u4e00\u4e0b\u5f53\u524d\u7684 k \u548c <code>lcnt = dat[ls[q]] - dat[ls[p]]</code> \u7684\u5927\u5c0f\uff0c\u5982\u679c \\(k \\le lcnt\\)\uff0c\u5c31\u8ba9 \\(p,q\\) \u90fd\u5f80\u5de6\u5b50\u6811\u8d70\uff0c\u5426\u5219 \\(k - lcnt\\)\uff0c\u7136\u540e\u8d70\u53f3\u5b50\u6811\u5c31\u884c\u4e86\u3002</p> <p>\u53ef\u4ee5\u7406\u89e3\u6210\u5728\u4e24\u9897\u6743\u503c\u7ebf\u6bb5\u6811\u5408\u5e76\u4e4b\u540e\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u5408\u5e76\u540e\u7684\u4fe1\u606f\u5c31\u662f \\(r\\) \u7248\u672c\u7684\u4fe1\u606f\u51cf\u53bb \\(l - 1\\) \u7684\u4fe1\u606f\u3002</p> <p>\uff08\u6240\u4ee5\u4e3b\u5e2d\u6811\u7ef4\u62a4\u7684\u4fe1\u606f\u4e0d\u4ec5\u8981\u6ee1\u8db3\u5e7a\u534a\u7fa4\u6027\u8d28\uff0c\u8fd8\u9700\u8981\u6ee1\u8db3\u533a\u95f4\u53ef\u51cf\u6027\uff01\uff09</p> <p>\u5efa\u6811\u7684\u65f6\u5019\u5148\u5bf9\u4e8e\u503c\u57df\u5efa\u4e00\u4e2a\u6bcf\u4e2a\u8282\u70b9\u6743\u503c\u90fd\u4e3a\u7a7a\u7684\u7ebf\u6bb5\u6811\uff0c\u6839\u8282\u70b9\u6807\u8bb0\u4e3a\u7b2c\u96f6\u4e2a\u7248\u672c\u7684\u6839\u8282\u70b9\uff0c\u65b9\u4fbf\u4e4b\u540e\u66f4\u65b0\u3002</p> <p>\u7a7a\u95f4\u5f00\u4e2a <code>&lt;&lt;5</code> \u5c31\u884c\u4e86\uff0c\u53cd\u6b63\u4e00\u822c\u80fd\u7528\u4e3b\u5e2d\u6811\u7684\u9898\u7a7a\u95f4\u90fd\u5f88\u5bbd\u677e\u3002</p> \u4ee3\u7801\uff1aPOJ2104 - K-th Number <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\n#ifndef ONLINE_JUDGE\n#include&lt;cstdarg&gt;\n#define meow(format, ...) \\\n    fprintf(stderr, format, ## __VA_ARGS__)\n// remember to open stream sync!\n#else\n#define meow(format, ...) 1231\n#endif\n\nusing namespace std;\n// using i64 = long long;\n\ntemplate &lt;typename __Tp&gt; void read(__Tp &amp;x) {\nint f = x = 0; char ch = getchar();\nfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = 1;\nfor (; isdigit(ch); ch = getchar()) x = (x &lt;&lt; 1) + (x &lt;&lt; 3) + (ch ^ 48);\nif (f) x = -x;\n}\n// void read(modint &amp;x) { int __value; read(__value); x = __value; return; } \nvoid read(char &amp;ch) { for (ch = getchar(); isspace(ch); ch = getchar()); }\n// template &lt;typename __Tp1, typename ...__Tp2&gt; void read(__Tp1 &amp;x, __Tp2 &amp;... y) { read(x), read(y...); }\ntemplate &lt;typename __Tp&gt; void write(__Tp x) {\nif (x &lt; 0) putchar('-'), x = -x;\nif (x &gt; 9) write(x / 10);\nputchar(x % 10 + 48);\n}\nvoid write(char ch) { putchar(ch); }\n// void write(modint x) { write(x.val()); }\nvoid write(const char *s) { for (; *s; ++s) putchar(*s); }\n// template &lt;typename __Tp1, typename ...__Tp2&gt; void write(__Tp1 x, __Tp2 ... y) { write(x), write(y...); }\n\nconst int si = 1e5 + 10;\n\nint n, m, len;\nint a[si], id[si];\n\nint tot = 0;\nint ls[si &lt;&lt; 5], rs[si &lt;&lt; 5];\nint root[si &lt;&lt; 5], dat[si &lt;&lt; 5];\n\nint build(int l, int r) {\nint p = ++tot;\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nls[p] = build(l, mid), rs[p] = build(mid + 1, r);\nreturn p;\n}\nint insert(int last, int l, int r, int val) { // last \u662f\u4e0a\u4e00\u4e2a\u7248\u672c\u7684 [l, r] \u8282\u70b9\u3002\nint p = ++tot;\ndat[p] = dat[last] + 1;\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nif(val &lt;= mid) ls[p] = insert(ls[last], l, mid, val), rs[p] = rs[last];\nelse rs[p] = insert(rs[last], mid + 1, r, val), ls[p] = ls[last];\nreturn p;\n}\nint ask(int p, int q, int l, int r, int kth) {\nif(l == r) return l;\nint mid = (l + r) &gt;&gt; 1;\nint lcnt = dat[ls[q]] - dat[ls[p]];\nif(kth &lt;= lcnt) return ask(ls[p], ls[q], l, mid, kth);\nelse return ask(rs[p], rs[q], mid + 1, r, kth - lcnt);\n}\n\nint index(int val) {\nreturn lower_bound(id + 1, id + 1 + len, val) - id;\n}\n\nint main() {\n\nread(n), read(m);\nfor(int i = 1; i &lt;= n; ++i)\nread(a[i]), id[i] = a[i];\nsort(id + 1, id + 1 + n);\nlen = unique(id + 1, id + 1 + n) - id - 1;\nroot[0] = build(1, len);\n\nfor(int i = 1; i &lt;= n; ++i)\nroot[i] = insert(root[i - 1], 1, len, index(a[i]));\n\nwhile(m --) {\nint l, r, k; read(l), read(r), read(k);\nwrite(id[ask(root[l - 1], root[r], 1, len, k)]);\nwrite(endl);\n}\n\nreturn 0;\n}\n</code></pre> <p>\u590d\u6742\u5ea6\u663e\u7136 1log\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff0c\u4e3b\u5e2d\u6811\u9898\u53ea\u9700\u8981\u8003\u8651\uff0c\u600e\u4e48\u7ef4\u62a4\u5386\u53f2\u7248\u672c\u4ee5\u8fbe\u5230\u533a\u95f4\u67e5\u8be2\uff0c</p> <p>\u600e\u4e48\u51d1\u51fa\u4e00\u4e2a\u65b0\u7684\u4fe1\u606f\uff0c\u653e\u5230\u4e00\u4e2a\u65b0\u7684\u7ebf\u6bb5\u6811\u4e0a\uff0c\u5728\u8fd9\u4e2a\u65b0\u7684\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\uff08\u65b0\u7684\u7ebf\u6bb5\u6811\u5e76\u4e0d\u9700\u8981\u5b9e\u9645\u5408\u5e76\u51fa\u6765\uff0c\u53ea\u9700\u8981\u591a\u4e2a\u6307\u9488\u540c\u6b65\u904d\u5386\u9700\u8981\u7684\u7248\u672c\u5373\u53ef\uff09</p>"}, {"location": "algor/ds/old-p-seg/#_4", "title": "\u51e0\u4e2a\u7b80\u5355\u7684\u4f8b\u9898", "text": ""}, {"location": "algor/ds/old-p-seg/#luogu3567-poi2014kur-couriers", "title": "Luogu3567 [POI2014]KUR-Couriers", "text": "<p>\u7ed9\u4e00\u4e2a\u6570\u5217\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\u5185\u6709\u6ca1\u6709\u4e00\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a \u5982\u679c\u6709\u8f93\u51fa\u8fd9\u4e2a\u6570\uff0c\u5426\u5219\u8f93\u51fa 0. 5e5</p> <p>\u59a5\u59a5\u7684\u677f\u5b50\u9898\uff0c\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\u4e8c\u5206\u5c31\u884c\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e5 + 10;\n\nint n, m, len;\nint a[si], id[si];\n\nint tot = 0;\nint ls[si &lt;&lt; 5], rs[si &lt;&lt; 5];\nint root[si &lt;&lt; 5], dat[si &lt;&lt; 5];\n\nint get_id(int val) {\nreturn lower_bound(id + 1, id + 1 + len, val) - id;\n}\nint build(int l, int r) {\nint p = ++tot;\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nls[p] = build(l, mid), rs[p] = build(mid + 1, r);\nreturn p;\n}\nint insert(int last, int l, int r, int v) {\nint p = ++tot;\ndat[p] = dat[last] + 1;\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nif(v &lt;= mid) ls[p] = insert(ls[last], l, mid, v), rs[p] = rs[last];\nelse rs[p] = insert(rs[last], mid + 1, r, v), ls[p] = ls[last];\nreturn p;\n}\nint ask(int p, int q, int l, int r, int k) {\nif(l == r) return l;\nint mid = (l + r) &gt;&gt; 1;\nint lcnt = dat[ls[q]] - dat[ls[p]];\nint rcnt = dat[rs[q]] - dat[rs[p]];\nif(k &lt; lcnt) return ask(ls[p], ls[q], l, mid, k);\nif(k &lt; rcnt) return ask(rs[p], rs[q], mid + 1, r, k);\nreturn 0;\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], id[i] = a[i];\nsort(id + 1, id + 1 + n);\nlen = unique(id + 1, id + 1 + n) - id - 1;\n\nroot[0] = build(1, len);\nfor(int i = 1; i &lt;= n; ++i)\nroot[i] = insert(root[i - 1], 1, len, get_id(a[i]));\n\nwhile(m --) {\nint l, r;\ncin &gt;&gt; l &gt;&gt; r;\ncout &lt;&lt; id[ask(root[l - 1], root[r], 1, len, (r - l + 1) &gt;&gt; 1)] &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/old-p-seg/#luogu3919-1", "title": "Luogu3919 \u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811 1\uff08\u53ef\u6301\u4e45\u5316\u6570\u7ec4\uff09", "text": "<p>\u9996\u5148\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n \\le 10^6\\) \u7684\u6570\u7ec4\uff0c\u7136\u540e\uff0c  \u5b9e\u73b0\u4e00\u4e2a\u53ef\u6301\u4e45\u5316\u7684\u6570\u7ec4\uff0c\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a 1. \u5728\u67d0\u4e2a\u5386\u53f2\u7248\u672c\u4e0a\u4fee\u6539\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u503c\u3002 2. \u8be2\u95ee\u67d0\u4e00\u4e2a\u5386\u53f2\u7248\u672c\u4e0a\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u5e76\u590d\u5236\u4e00\u4e2a\u65b0\u7248\u672c\u3002</p> <p>\u5f88\u7b80\u5355\u7684\u677f\u5b50\u9898\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u4e0d\u662f\u4e3b\u5e2d\u6811\u4e86\uff0c\u800c\u662f\u4e00\u822c\u7684\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u3002</p> <p>\u672c\u8d28\u4e00\u6837\uff0c\u4e0d\u8fc7\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u4e0d\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\u539f\u5e8f\u5217\u7684\u5143\u7d20\uff0c\u56e0\u4e3a\u6b64\u5904\u4e0d\u662f\u7ef4\u62a4\u503c\u57df\u800c\u662f\u76f4\u63a5\u7ef4\u62a4\u6574\u4e2a\u5e8f\u5217\u3002</p> <p>\u800c\u4e14\u8fd9\u91cc\u53ef\u4ee5\u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u4e3b\u5e2d\u6811\u4e0d\u5957\u4e00\u4e2a\u522b\u7684\u6570\u636e\u7ed3\u6784\u5f88\u96be\u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u56e0\u4e3a\u4e3b\u5e2d\u6811\u662f\u7ef4\u62a4\u7684\u503c\u57df\uff0c\u5728\u7ef4\u6301\u6743\u503c\u4fe1\u606f\u7684\u533a\u95f4\u53ef\u52a0\u51cf\u6027\u7684\u540c\u65f6\uff0c\u5bf9\u4e8e\u5e8f\u5217\u76f4\u63a5\u64cd\u4f5c\u5f88\u4e0d\u65b9\u4fbf\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\u5c31\u770b\u4ee3\u7801\u5427\uff0c\u8fd9\u91cc\u8fd8\u4e0d\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u53f6\u5b50\u8282\u70b9\u7684\u503c\u5c31\u884c\u4e86\u3002</p> <p>\u5982\u679c\u8981\u7ef4\u62a4\u533a\u95f4\u548c\u5c31\u8981\u52a0\u4e0a Pushup \u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e6 + 10;\n\nint n, m;\nint a[si];\n\nint tot = 0;\nint ls[si &lt;&lt; 5], rs[si &lt;&lt; 5];\nint root[si &lt;&lt; 5], dat[si &lt;&lt; 5];\n\nint build(int l, int r) {\nint p = ++tot;\nif(l == r) {\ndat[p] = a[l];\nreturn p;\n}\nint mid = (l + r) &gt;&gt; 1;\nls[p] = build(l, mid), rs[p] = build(mid + 1, r);\nreturn p;\n}\nint modify(int last, int l, int r, int pos, int v) {\nint p = ++tot;\nif(l == r) { dat[p] = v; return p; }\nint mid = (l + r) &gt;&gt; 1;\nif(pos &lt;= mid) ls[p] = modify(ls[last], l, mid, pos, v), rs[p] = rs[last];\nelse rs[p] = modify(rs[last], mid + 1, r, pos, v), ls[p] = ls[last];\nreturn p;\n}\nint query(int p, int l, int r, int pos) {\nif(l == r) return dat[p];\nint mid = (l + r) &gt;&gt; 1;\nif(pos &lt;= mid) return query(ls[p], l, mid, pos);\nelse return query(rs[p], mid + 1, r, pos);\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\nroot[0] = build(1, n);\n\nint cnt = 0;\nwhile(m --) {\nint ver, opt;\ncin &gt;&gt; ver &gt;&gt; opt;\nif(opt == 1) {\nint x, v;\ncin &gt;&gt; x &gt;&gt; v;\nroot[++cnt] = modify(root[ver], 1, n, x, v);\n}\nelse {\nint x; cin &gt;&gt; x;\nint val = query(root[ver], 1, n, x);\nroot[++cnt] = modify(root[ver], 1, n, x, val);\ncout &lt;&lt; val &lt;&lt; endl;\n}\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/old-p-seg/#luogu2633-count-on-a-tree", "title": "Luogu2633 Count on a tree", "text": "<p>\u7ed9\u5b9a\u4e00\u68f5 \\(n\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c\u3002\u6709 \\(m\\) \u4e2a\u8be2\u95ee\uff0c \u6bcf\u6b21\u7ed9\u4f60 \\(u,v,k\\)\uff0c\u4f60\u9700\u8981\u56de\u7b54 \\(u \\text{ xor last}\\) \u548c \\(v\\) \u8fd9\u4e24\u4e2a\u8282\u70b9\u95f4\u7b2c \\(k\\) \u5c0f\u7684\u70b9\u6743\u3002 \u5176\u4e2d \\(\\text{last}\\) \u662f\u4e0a\u4e00\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u5b9a\u4e49\u5176\u521d\u59cb\u4e3a \\(0\\)\uff0c\u5373\u7b2c\u4e00\u4e2a\u8be2\u95ee\u7684 \\(u\\) \u662f\u660e\u6587\u3002 1e5</p> <p>\u53d1\u73b0\u7b2c \\(i\\) \u4e2a\u7248\u672c\u7684\u4e3b\u5e2d\u6811\u53ef\u4ee5\u611f\u6027\u7684\u7406\u89e3\u4e3a\u4e00\u79cd\u524d\u7f00\u548c\u3002</p> <p>\u4e8e\u662f\u5728\u8be2\u95ee \\([l, r]\\) \u7684\u65f6\u5019\u53ef\u4ee5\u628a <code>dat[r] - dat[l - 1]</code> \u5f53\u4f5c\u4fe1\u606f\u62cd\u5230\u4e00\u4e2a\u65b0\u7684\u7ebf\u6bb5\u6811\u4e0a\u64cd\u4f5c\uff08\u5b9e\u9645\u64cd\u4f5c\u5c31\u662f\u62ff\u4e24\u4e2a\u6307\u9488\u540c\u6b65\u8d70\u4e24\u4e2a\u7248\u672c\u7684\u7ebf\u6bb5\u6811\uff09\u3002</p> <p>\u8fd9\u91cc\u662f\u5728\u6811\u4e0a\u8be2\u95ee\uff0c\u53ef\u4ee5\u8003\u8651\u6811\u5256\uff0c\u4f46\u662f\u4f3c\u4e4e\u5f88\u9ebb\u70e6\u3002</p> <p>\u4e3b\u5e2d\u6811\u7ef4\u62a4\u7684\u4fe1\u606f\u5177\u6709\u533a\u95f4\u53ef\u52a0\u53ef\u51cf\u6027\uff0c\u6362\u53e5\u8bdd\u8bf4\u53ef\u4ee5\u505a\u524d\u7f00\u548c\u4e5f\u53ef\u4ee5\u5dee\u5206\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u600e\u4e48\u51d1\u4e00\u4e2a\u65b0\u7684\u7ebf\u6bb5\u6811\uff0c\u4f7f\u4ed6\u80fd\u5305\u542b\u8def\u5f84 \\((u,v)\\) \u7684\u4fe1\u606f\uff0c\u7136\u540e\u5728\u4e0a\u9762\u7ebf\u6bb5\u6811\u4e8c\u5206\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u6211\u4eec\u8bbe\u7248\u672c \\(i\\) \u8868\u793a\u6839\u8282\u70b9\u5230\u8282\u70b9 \\(i\\) \u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u6784\u6210\u7684\u4e3b\u5e2d\u6811\uff0c</p> <p>\u7136\u540e\u53d1\u73b0\u6b64\u65f6\u53ef\u4ee5\u6811\u4e0a\u5dee\u5206\u6765\u51d1\u51fa\u8def\u5f84 \\((u, v)\\)\uff0c\u4e8e\u662f\u65b0\u7684\u7ebf\u6bb5\u6811\u7684\u4fe1\u606f\u5c31\u662f <code>dat[u] + dat[v] - dat[lca(u, v)] - dat[fa(lca(u, v))]</code>\u3002</p> <p>\u5b9e\u73b0\u76f4\u63a5\u62ff\u56db\u4e2a\u6307\u9488\u540c\u6b65\u904d\u5386\u8fd9\u56db\u4e2a\u7248\u672c\u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint n, m, len, cnt;\nint a[si], id[si];\n\nint head[si &lt;&lt; 1];\nstruct Edge {\nint ver, Next;\n}e[si &lt;&lt; 1];\nvoid add(int u, int v) {\ne[cnt].ver = v, e[cnt].Next = head[u], head[u] = cnt++;\n}\n\nint get_id(int val) {\nreturn lower_bound(id + 1, id + 1 + len, val) - id;\n}\n\nint tot = 0;\nint ls[si &lt;&lt; 5], rs[si &lt;&lt; 5];\nint root[si &lt;&lt; 5], dat[si &lt;&lt; 5];\nint build(int l, int r) {\nint p = ++tot;\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nls[p] = build(l, mid), rs[p] = build(mid + 1, r);\nreturn p;\n}\nint insert(int last, int l, int r, int v) {\nint p = ++tot;\ndat[p] = dat[last] + 1;\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nif(v &lt;= mid) ls[p] = insert(ls[last], l, mid, v), rs[p] = rs[last];\nelse rs[p] = insert(rs[last], mid + 1, r, v), ls[p] = ls[last];\nreturn p;\n}\nint ask(int p, int q, int u, int v, int l, int r, int kth) {\nif(l == r) return l;\nint mid = (l + r) &gt;&gt; 1;\nint lcnt = dat[ls[p]] + dat[ls[q]] - dat[ls[u]] - dat[ls[v]];\nif(kth &lt;= lcnt) return ask(ls[p], ls[q], ls[u], ls[v], l, mid, kth);\nelse return ask(rs[p], rs[q], rs[u], rs[v], mid + 1, r, kth - lcnt); }\n\nint dep[si];\nint f[si][21];\nvoid dfs(int u, int fa) {\nf[u][0] = fa, dep[u] = dep[fa] + 1;\nfor(int i = 1; i &lt;= 20; ++i) f[u][i] = f[f[u][i - 1]][i - 1];\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\nroot[v] = insert(root[u], 1, len, get_id(a[v]));\ndfs(v, u);\n}\n}\nint lca(int u, int v) {\nif(dep[u] &lt; dep[v]) swap(u, v);\nfor(int i = 20; i &gt;= 0; --i) if(dep[f[u][i]] &gt;= dep[v]) u = f[u][i];\nif(u == v) return u;\nfor(int i = 20; i &gt;= 0; --i) if(f[u][i] != f[v][i])\nu = f[u][i], v = f[v][i];\nreturn f[u][0];\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], id[i] = a[i];\nsort(id + 1, id + 1 + n);\nlen = unique(id + 1, id + 1 + n) - id - 1;\n\nfor(int i = 1; i &lt; n; ++i) {\nint u, v; cin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n}\n\nroot[0] = build(1, len);\nroot[1] = insert(root[0], 1, len, get_id(a[1]));\n\ndfs(1, 0);\n\nint lastans = 0;\nwhile(m --) {\nint u, v, k;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; k;\nu ^= lastans;\nint Lca = lca(u, v), Fa = f[Lca][0];\ncout &lt;&lt; (lastans = id[ask(root[u], root[v], root[Lca], root[Fa], 1, len, k)]) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/old-p-seg/#k", "title": "\u652f\u6301\u5355\u70b9\u4fee\u6539\u7684\u7b2c k \u5927", "text": "<p>Luogu2617 Dynamic Rankings</p> <p>\u5355\u70b9\u4fee\u6539\u533a\u95f4\u8be2\u95ee\u7b2c \\(k\\) \u5927\uff0c1e5\u3002</p> <p>\u76f4\u63a5\u66b4\u529b\u505a\u7684\u8bdd\uff0c\u6bcf\u6b21\u5355\u70b9\u4fee\u6539 \\(i\\) \u9700\u8981\u4fee\u6539 \\([i,n]\\) \u7684\u6240\u6709\u7248\u672c\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u662f \\(O(n \\log n)\\) \u7684\uff0c\u4e0d\u80fd\u63a5\u53d7\u3002</p> <p>\u53ef\u4ee5\u60f3\u5230\u4e3b\u5e2d\u6811\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u201c\u5e7f\u4e49\u201d\u7684\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e3b\u5e2d\u6811\uff0c\u6765\u8ba9\u9700\u8981\u4fee\u6539\u7684\u7248\u672c\u6570\u51cf\u5c11\u5230 \\(O(\\log n)\\) \u4e2a\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u6bcf\u6b21\u4fee\u6539 \\(x\\) \u8fd9\u4e2a\u7248\u672c\u7684\u67d0\u4e2a\u503c\uff0c\u5c31\u4fee\u6539 \\(x + \\text{lowbit}(x), x + \\text{lowbit}(x) + \\text{lowbit}(x + \\text{lowbit}(x)), \\dots\\) \u8fd9\u51e0\u4e2a\u7248\u672c\u7684\u8fd9\u4e2a\u503c\u5c31\u884c\u4e86\u3002</p> <p>\u7136\u540e\u4fee\u6539\u7684\u65f6\u5019\u9700\u8981\u81ea\u5df1\u5728\u81ea\u5df1\u7248\u672c\u4e0a\u65b0\u5efa\uff0c\u56e0\u4e3a\u5982\u679c\u76f4\u63a5\u4fee\u6539\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u540e\u9762\u7684\u7248\u672c\uff08\u540e\u9762\u7684\u7248\u672c\u5bf9\u524d\u9762\u7684\u7248\u672c\u6709\u4f9d\u8d56\uff09\u3002</p> <p>\u67e5\u8be2\u5c31\u9884\u5904\u7406\u51fa\u5bf9\u5e94\u7684\u4e24\u6279 \\(O(\\log n)\\) \u4e2a\u4e3b\u5e2d\u6811\u7684\u4fe1\u606f\uff0c\u5408\u5e76\u4e4b\u540e\u5728\u4e0a\u9762\u7ebf\u6bb5\u6811\u4e8c\u5206\u5373\u53ef\u3002</p> <p>\u8fd9\u91cc\u7684\u4ee3\u7801\u4f7f\u7528\u4e86\u53e6\u5916\u4e00\u79cd\u52a8\u6001\u5f00\u70b9\u7684\u5199\u6cd5\uff0c\u66f4\u8282\u7701\u7a7a\u95f4\u3002</p> <p>\u6ce8\u610f\u4e00\u5b9a\u4e0d\u8981\u5fd8\u8bb0\u5728\u521d\u59cb\u7684\u65f6\u5019\u628a\u4e3b\u5e2d\u6811\u6254\u5230\u6811\u72b6\u6570\u7ec4\u4e0a\uff01</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\n#ifndef ONLINE_JUDGE\n#include&lt;cstdarg&gt;\n#define meow(format, ...) \\\n    fprintf(stderr, format, ## __VA_ARGS__)\n// remember to open stream sync!\n#else\n#define meow(format, ...) 1231\n#endif\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m, len;\nint a[si], id[si &lt;&lt; 1];\n\nint tot = 0;\nint ls[si &lt;&lt; 8], rs[si &lt;&lt; 8];\nint root[si &lt;&lt; 8], dat[si &lt;&lt; 8];\n\nint cnt1, cnt2;\nint tr1[si], tr2[si];\n\nstruct Query { char opt; int l, r, x; } q[si];\n\ninline int lowbit(int x) { return x &amp; -x; }\ninline int getid(int val) { return lower_bound(id + 1, id + 1 + len, val) - id; }\n\nint build(int l, int r) {\nint p = ++tot;\nif(l == r) return l;\nint mid = (l + r) &gt;&gt; 1;\nls[p] = build(l, mid), rs[p] = build(mid + 1, r);\nreturn p;\n}\nvoid insert(int &amp;p, int last, int l, int r, int val, int delta) {\np = ++tot;\ndat[p] = dat[last] + delta, ls[p] = ls[last], rs[p] = rs[last];\nif(l == r) return;\nint mid = (l + r) &gt;&gt; 1;\nif(val &lt;= mid) insert(ls[p], ls[last], l, mid, val, delta);\nelse insert(rs[p], rs[last], mid + 1, r, val, delta);\n}\nint ask(int l, int r, int kth) {\nif(l == r) return l;\nint mid = (l + r) &gt;&gt; 1;\nint lcnt = 0;\nfor(int i = 1; i &lt;= cnt2; ++i) lcnt += dat[ls[tr2[i]]];\nfor(int i = 1; i &lt;= cnt1; ++i) lcnt -= dat[ls[tr1[i]]];\n\nif(kth &lt;= lcnt) {\nfor(int i = 1; i &lt;= cnt1; ++i) tr1[i] = ls[tr1[i]];\nfor(int i = 1; i &lt;= cnt2; ++i) tr2[i] = ls[tr2[i]];\nreturn ask(l, mid, kth);\n}   else {\nfor(int i = 1; i &lt;= cnt1; ++i) tr1[i] = rs[tr1[i]];\nfor(int i = 1; i &lt;= cnt2; ++i) tr2[i] = rs[tr2[i]];\nreturn ask(mid + 1, r, kth - lcnt);\n}\n}\n\nvoid change(int x, int v) {\nint y = getid(a[x]);\nwhile(x &lt;= n) {\ninsert(root[x], root[x], 1, len, y, v);\nx += lowbit(x);\n}\n}\nint query(int l, int r, int kth) {\nl --, cnt1 = cnt2 = 0;\nwhile(l) tr1[++cnt1] = root[l], l -= lowbit(l);\nwhile(r) tr2[++cnt2] = root[r], r -= lowbit(r);\nreturn ask(1, len, kth);\n}\n\nint main() {    // cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nint cnt = 0;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], id[++cnt] = a[i];\nfor(int i = 1; i &lt;= m; ++i) {\nQuery &amp;p = q[i];\ncin &gt;&gt; p.opt;\nif(p.opt == 'C')\ncin &gt;&gt; p.l &gt;&gt; p.x, id[++cnt] = p.x;\nif(p.opt == 'Q')\ncin &gt;&gt; p.l &gt;&gt; p.r &gt;&gt; p.x;\n}\n\nsort(id + 1, id + 1 + cnt);\nlen = unique(id + 1, id + 1 + cnt) - id - 1;\n\nfor(int i = 1; i &lt;= n; ++i) change(i, 1);\n\nfor(int i = 1; i &lt;= m; ++i) {\nQuery &amp;p = q[i];\nif(p.opt == 'C') change(p.l, -1), a[p.l] = p.x, change(p.l, 1);\nif(p.opt == 'Q') cout &lt;&lt; id[query(p.l, p.r, p.x)] &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// \u4e0b\u9762\u8fd9\u4e2a\u867d\u7136\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u7a7a\u95f4\u53ef\u80fd\u5c31\u5bc4\u6389\u4e86\uff0c\u6240\u4ee5\u7528\u4e0a\u9762\u7684\u5199\u6cd5\u4f1a\u597d\u5f97\u591a\u3002\n/*\n// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\n#ifndef ONLINE_JUDGE\n  #include&lt;cstdarg&gt;\n  #define meow(format, ...) \\\n    fprintf(stderr, format, ## __VA_ARGS__)\n  // remember to open stream sync!\n#else\n  #define meow(format, ...) 1231\n#endif\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m, len;\nint a[si], id[si &lt;&lt; 1];\n\nint tot = 0;\nint ls[si &lt;&lt; 9], rs[si &lt;&lt; 9];\nint root[si &lt;&lt; 9], dat[si &lt;&lt; 9];\n\nint cnt1, cnt2;\nint tr1[si], tr2[si];\n\nstruct Query { char opt; int l, r, x; } q[si];\n\ninline int lowbit(int x) { return x &amp; -x; }\ninline int getid(int val) { return lower_bound(id + 1, id + 1 + len, val) - id; }\n\nint build(int l, int r) {\n    int p = ++tot;\n    if(l == r) return l;\n    int mid = (l + r) &gt;&gt; 1;\n    ls[p] = build(l, mid), rs[p] = build(mid + 1, r);\n    return p;\n}\nvoid insert(int &amp;p, int last, int l, int r, int val, int delta) {\n    p = ++tot;\n    dat[p] = dat[last] + delta, ls[p] = ls[last], rs[p] = rs[last];\n    if(l == r) return;\n    int mid = (l + r) &gt;&gt; 1;\n    if(val &lt;= mid) insert(ls[p], ls[last], l, mid, val, delta);\n    else insert(rs[p], rs[last], mid + 1, r, val, delta);\n}\nint ask(int l, int r, int kth) {\n    if(l == r) return l;\n    int mid = (l + r) &gt;&gt; 1;\n    int lcnt = 0;\n    for(int i = 1; i &lt;= cnt2; ++i) lcnt += dat[ls[tr2[i]]];\n    for(int i = 1; i &lt;= cnt1; ++i) lcnt -= dat[ls[tr1[i]]];\n\n    if(kth &lt;= lcnt) {\n        for(int i = 1; i &lt;= cnt1; ++i) tr1[i] = ls[tr1[i]];\n        for(int i = 1; i &lt;= cnt2; ++i) tr2[i] = ls[tr2[i]];\n        return ask(l, mid, kth);\n    }   \n    else {\n        for(int i = 1; i &lt;= cnt1; ++i) tr1[i] = rs[tr1[i]];\n        for(int i = 1; i &lt;= cnt2; ++i) tr2[i] = rs[tr2[i]];\n        return ask(mid + 1, r, kth - lcnt);\n    }\n}\n\nvoid change(int x, int v) {\n    int y = getid(a[x]);\n    while(x &lt;= n) {\n        insert(root[x], root[x], 1, len, y, v);\n        x += lowbit(x);\n    }\n}\nint query(int l, int r, int kth) {\n    l --, cnt1 = cnt2 = 0;\n    while(l) tr1[++cnt1] = root[l], l -= lowbit(l);\n    while(r) tr2[++cnt2] = root[r], r -= lowbit(r);\n    return ask(1, len, kth);\n}\n\nint main() {    \n\n    // cin.tie(0) -&gt; sync_with_stdio(false);\n    // cin.exceptions(cin.failbit | cin.badbit);\n\n    cin &gt;&gt; n &gt;&gt; m;\n    int cnt = 0;\n    for(int i = 1; i &lt;= n; ++i)\n        cin &gt;&gt; a[i], id[++cnt] = a[i];\n    for(int i = 1; i &lt;= m; ++i) {\n        Query &amp;p = q[i];\n        cin &gt;&gt; p.opt;\n        if(p.opt == 'C')\n            cin &gt;&gt; p.l &gt;&gt; p.x, id[++cnt] = p.x;\n        if(p.opt == 'Q')\n            cin &gt;&gt; p.l &gt;&gt; p.r &gt;&gt; p.x;\n    }\n\n    sort(id + 1, id + 1 + cnt);\n    len = unique(id + 1, id + 1 + cnt) - id - 1;\n\n    for(int i = 1; i &lt;= n; ++i) \n        root[i] = build(1, len);\n    for(int i = 1; i &lt;= n; ++i) change(i, 1);\n\n    for(int i = 1; i &lt;= m; ++i) {\n        Query &amp;p = q[i];\n        if(p.opt == 'C') change(p.l, -1), a[p.l] = p.x, change(p.l, 1);\n        if(p.opt == 'Q') cout &lt;&lt; id[query(p.l, p.r, p.x)] &lt;&lt; endl;\n    }\n\n    return 0;\n}\n*/\n</code></pre>"}, {"location": "algor/ds/old-p-seg/#_5", "title": "\u6807\u8bb0\u6c38\u4e45\u5316", "text": "<p>HDU4348 To the moon</p> <p>\u6682\u65f6\u5495\u5495\u5495</p>"}, {"location": "algor/ds/persistent-segtree/", "title": "\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811", "text": "<p>\u8fc7\u4e86\u597d\u4e00\u6bb5\u65f6\u95f4\u624d\u4e86\u89e3\u6e05\u695a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u548c\u4e3b\u5e2d\u6811\u7684\u533a\u522b\u3002</p> <p>\u611f\u89c9\u6bd4\u8f83 shaber \u7684\uff0c\u4e0d\u8fc7\u4e5f\u501f\u6b64\u53d1\u73b0\u5176\u5b9e\u7f51\u4e0a\u6709\u4e9b\u6559\u7a0b\u4e0d\u4e00\u5b9a\u51c6\u786e\uff0c\u8fd8\u662f\u8981\u81ea\u5df1\u591a\u60f3\u60f3\u3002</p>"}, {"location": "algor/ds/persistent-segtree/#_1", "title": "\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811", "text": ""}, {"location": "algor/ds/persistent-segtree/#_2", "title": "\u6cdb\u5316", "text": "<p>\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7684\u672c\u8d28\u601d\u60f3\u5c31\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u8bf4\u4eba\u8bdd\u5c31\u662f\u4e0d\u4fee\u6539\u539f\u6709\u6570\u636e\uff0c\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\u90fd\u65b0\u5efa\u4e00\u4e2a\u526f\u672c\u6765\u8868\u8fbe\u4fee\u6539\uff0c\u501f\u4ee5\u8fbe\u5230\u652f\u6301\u5386\u53f2\u7248\u672c\u67e5\u8be2\u7684\u76ee\u7684\u3002</p> <p>\u8fd9\u4e2a\u65f6\u5019\u7528\u539f\u6765\u56fa\u5b9a\u5efa\u6811\u7684\u4e8c\u500d\u8868\u793a\u6cd5\u5c31\u7279\u522b\u9ebb\u70e6\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u52a8\u6001\u5f00\u70b9\u3002</p> <p>\u4f60\u53d1\u73b0\u5176\u5b9e\u6bcf\u6b21\u4fee\u6539\u6211\u4eec\u4e0d\u9700\u8981\u590d\u5236\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u6574\u9897\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u53ea\u9700\u8981\u989d\u5916\u628a\u88ab\u4fee\u6539\u7684\u90a3\u6761\u8def\u5f84\u6216\u8005\u591a\u6761\u8def\u5f84\u62c9\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u4ece\u662f\u5b9e\u73b0\u4e0a\u6765\u8bf4\u5c31\u662f\u65b0\u5efa\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u540c\u65f6\u7528\u4e00\u4e2a\u6307\u9488\u540c\u6b65\u904d\u5386\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u5148\u590d\u5236\u4e00\u4e2a\u5bf9\u5e94\u8282\u70b9\uff0c\u7136\u540e\u671d\u7740\u88ab\u4fee\u6539\u7684\u8282\u70b9\u65b9\u5411\u9012\u5f52\uff0c\u6ca1\u88ab\u4fee\u6539\u7684\u76f4\u63a5\u8fde\u4e00\u6761\u8fb9\u5230\u4e0a\u4e00\u4e2a\u7248\u672c\u3002</p> <p>\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <p>\u533a\u95f4\u4fee\u6539\u4e5f\u7c7b\u4f3c\uff0c\u7136\u540e\u8be2\u95ee\u5386\u53f2\u7248\u672c\u5c31\u53ea\u9700\u8981\u4ece\u5bf9\u5e94\u7248\u672c\u5bf9\u5e94\u7684\u6839\u8282\u70b9\u9012\u5f52\u4e0b\u53bb\u3002</p>"}, {"location": "algor/ds/persistent-segtree/#_3", "title": "\u5355\u70b9\u4fee\u6539", "text": "<p>Luogu3919 \u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811 1\uff08\u53ef\u6301\u4e45\u5316\u6570\u7ec4\uff09</p> <p>\u9996\u5148\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n \\le 10^6\\) \u7684\u6570\u7ec4\uff0c\u7136\u540e\uff0c </p> <p>\u5b9e\u73b0\u4e00\u4e2a\u53ef\u6301\u4e45\u5316\u7684\u6570\u7ec4\uff0c\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u5728\u67d0\u4e2a\u5386\u53f2\u7248\u672c\u4e0a\u4fee\u6539\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u503c\u3002</p> </li> <li> <p>\u8be2\u95ee\u67d0\u4e00\u4e2a\u5386\u53f2\u7248\u672c\u4e0a\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u5e76\u590d\u5236\u4e00\u4e2a\u65b0\u7248\u672c\u3002</p> </li> </ol> <p>\u5f88\u7b80\u5355\u7684\u677f\u5b50\u9898\uff0c\u5177\u4f53\u5b9e\u73b0\u5c31\u770b\u4ee3\u7801\u5427\uff0c\u8fd9\u91cc\u8fd8\u4e0d\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u53f6\u5b50\u8282\u70b9\u7684\u503c\u5c31\u884c\u4e86\u3002</p> <p>\u5982\u679c\u8981\u7ef4\u62a4\u533a\u95f4\u548c\u5c31\u8981\u52a0\u4e0a Pushup \u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e6 + 10;\n\nint n, m;\nint a[si];\n\nint tot = 0;\nint ls[si &lt;&lt; 5], rs[si &lt;&lt; 5];\nint root[si &lt;&lt; 5], dat[si &lt;&lt; 5];\n\nint build(int l, int r) {\nint p = ++tot;\nif(l == r) {\ndat[p] = a[l];\nreturn p;\n}\nint mid = (l + r) &gt;&gt; 1;\nls[p] = build(l, mid), rs[p] = build(mid + 1, r);\nreturn p;\n}\nint modify(int last, int l, int r, int pos, int v) {\nint p = ++tot;\nif(l == r) { dat[p] = v; return p; }\nint mid = (l + r) &gt;&gt; 1;\nif(pos &lt;= mid) ls[p] = modify(ls[last], l, mid, pos, v), rs[p] = rs[last];\nelse rs[p] = modify(rs[last], mid + 1, r, pos, v), ls[p] = ls[last];\nreturn p;\n}\nint query(int p, int l, int r, int pos) {\nif(l == r) return dat[p];\nint mid = (l + r) &gt;&gt; 1;\nif(pos &lt;= mid) return query(ls[p], l, mid, pos);\nelse return query(rs[p], mid + 1, r, pos);\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\nroot[0] = build(1, n);\n\nint cnt = 0;\nwhile(m --) {\nint ver, opt;\ncin &gt;&gt; ver &gt;&gt; opt;\nif(opt == 1) {\nint x, v;\ncin &gt;&gt; x &gt;&gt; v;\nroot[++cnt] = modify(root[ver], 1, n, x, v);\n}\nelse {\nint x; cin &gt;&gt; x;\nint val = query(root[ver], 1, n, x);\nroot[++cnt] = modify(root[ver], 1, n, x, val);\ncout &lt;&lt; val &lt;&lt; endl;\n}\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/persistent-segtree/#_4", "title": "\u652f\u6301\u533a\u95f4\u4fee\u6539", "text": "<p>HDU 4348 To the moon</p>"}, {"location": "algor/ds/persistent-segtree/#_5", "title": "\u4e3b\u5e2d\u6811", "text": ""}, {"location": "algor/ds/persistent-segtree/#_6", "title": "\u6cdb\u5316", "text": "<p>\u4e3b\u5e2d\u6811\u5168\u79f0\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\uff08\u7684\u5dee\u5206\u524d\u7f00\u548c\uff09\uff0c\u548c\u6b63\u5e38\u7684\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u6709\u4e00\u5b9a\u7684\u533a\u522b</p> <p>\u56e0\u4e3a\u4e3b\u5e2d\u6811\u662f\u5229\u7528\u53ef\u6301\u4e45\u5316+\u524d\u7f00\u548c\u7684\u601d\u60f3\u6765\u5b9e\u73b0\u9759\u6001\u533a\u95f4\u7b2c \\(k\\) \u5927\uff0c\u800c\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u5219\u662f\u771f\u6b63\u7684\u76f4\u63a5\u7ef4\u62a4\u5404\u4e2a\u5386\u53f2\u7248\u672c\u3002</p> <p>\u4e3b\u5e2d\u6811\u7684\u601d\u60f3\u548c\u53ef\u6301\u4e45\u5316 Trie \u7684\u601d\u60f3\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u662f\u4ee5\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u65b9\u5f0f\u4fdd\u5b58\u5386\u53f2\u7248\u672c\uff0c\u4ee5\u628a\u4fe1\u606f\u4ece\u5168\u5c40\u8f6c\u5316\u4e3a\u533a\u95f4\u3002</p> <p>\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u95ee\u9898\u5c31\u662f\u9759\u6001\u533a\u95f4\u7b2c k \u5927\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u663e\u7136\u53ef\u4ee5\u5f88\u8f7b\u677e\u641e\u5b9a\u5168\u5c40\u7684\u7248\u672c\u3002</p> <p>\u4e8e\u662f\u628a\u6743\u503c\u7ebf\u6bb5\u6811\u53ef\u6301\u4e45\u5316\u4e4b\u540e\u5229\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\u5c31\u53ef\u4ee5\u505a\u533a\u95f4\u4e86\u3002</p> <p>\u4e0d\u8fc7\u4e3b\u5e2d\u6811\u4e00\u822c\u96be\u4ee5\u652f\u6301\u533a\u95f4\u4fee\u6539\uff0c\u6700\u591a\u652f\u6301\u4e00\u4e0b\u5355\u70b9\u4fee\u6539\u3002</p> <p>\u533a\u95f4\u4fee\u6539\u5728\u4fe1\u606f\u6bd4\u8f83\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u7528\u6807\u8bb0\u6c38\u4e45\u5316\u505a\uff0c\u4e0d\u8fc7\u4e5f\u975e\u5e38\u6709\u5c40\u9650\u6027\u3002</p> <p>\u56e0\u4e3a\u4e3b\u5e2d\u6811\u7ef4\u62a4\u7684\u662f\u503c\u57df\uff0c\u76f4\u63a5\u5728\u5e8f\u5217\u4e0a\u533a\u95f4\u4fee\u6539\u5f88\u4e0d\u65b9\u4fbf\uff08</p>"}, {"location": "algor/ds/persistent-segtree/#k", "title": "\u9759\u6001\u533a\u95f4\u7b2c k \u5927", "text": "<p>\u4e3b\u5e2d\u6811\u7684\u4e3b\u8981\u601d\u60f3\u5c31\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u63d2\u5165\u5e8f\u5217\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002</p> <p>\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\u7ef4\u62a4\u5386\u53f2\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5143\u7d20\u521a\u63d2\u5165\u7684\u65f6\u5019\uff0c\u7ebf\u6bb5\u6811\u7684\u6837\u5b50\u3002</p> <p>\u663e\u7136\u4e00\u4e2a\u6bd4\u8f83\u66b4\u529b\u7684\u505a\u6cd5\u662f\uff0c\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6570\uff08\u65b0\u5efa\u4e00\u4e2a\u7248\u672c\uff09\u7684\u65f6\u5019\uff0c\u90fd\u628a\u539f\u6765\u7684\u7ebf\u6bb5\u6811\u590d\u5236\u4e00\u6b21\uff0c\u7136\u540e\u628a\u65b0\u7684\u7248\u672c\u52a0\u4e0a\u53bb\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u6837\u7a7a\u95f4\u662f \\(O(nm)\\) \u7684\uff0c\u975e\u5e38\u4e0d\u4f18\u79c0\u3002</p> <p>\u53d1\u73b0\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u5728\u503c\u57df\u4e0a\u53ea\u4f1a\u4fee\u6539\u4e00\u4e2a\u70b9\uff0c\u5bf9\u5e94\u5230\u7ebf\u6bb5\u6811\u4e0a\u5c31\u662f\u53ea\u4fee\u6539\u4e00\u6761\u4ece\u6839\u8282\u70b9\u5230\u5bf9\u5e94\u53f6\u5b50\u8282\u70b9\u7684\u94fe\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u8fd9\u4e2a\u88ab\u4fee\u6539\u7684\u94fe\u5355\u72ec\u590d\u5236\u4e00\u6b21\u62c9\u51fa\u6765\uff0c\u8bb0\u5f55\u4e00\u4e0b\u63d2\u5165\u4e4b\u540e\uff0c\u5f53\u524d\u7248\u672c\u6811\u6839\u7684\u7f16\u53f7\u3002</p> <p>\u4e8e\u662f\u7a7a\u95f4\u5f00\u9500\u5c31\u5927\u5927\u51cf\u5c0f\u4e86\uff0c\u4ece \\(O(nm)\\) \u53d8\u6210\u4e86 \\(O(n + m\\log n)\\)\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u84dd\u8272\u8282\u70b9\u662f\u539f\u6765\u7248\u672c\u4e0a\u7684\u94fe\uff0c\u7ea2\u8272\u8282\u70b9\u662f\u73b0\u5728\u7248\u672c\u4e0a\u7684\u94fe\u3002</p> <p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff0c\u5bf9\u4e8e\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u8282\u70b9 \\(p\\)\uff0c\u590d\u5236\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 \\(q\\) \u51fa\u6765\u3002</p> <p>\u5982\u679c\u4e0b\u4e00\u6b65\u662f\u9012\u5f52 \\(p.ls\\)\uff0c\u90a3\u4e48 \\(q.ls\\) \u5c31\u9700\u8981\u65b0\u5efa\uff0c\u7136\u540e \\(q.rs\\) \u5c31\u662f\u539f\u6765\u7684 \\(p.ls\\)\uff0c\u53cd\u8fc7\u6765\u540c\u7406\u3002</p> <p>\u67e5\u8be2 \\([l, r]\\) \u7684\u7b2c k \u5927\u4e5f\u6bd4\u8f83\u597d\u505a\uff0c\u5c31\u76f4\u63a5\u7ebf\u6bb5\u6811\u4e8c\u5206\uff0c\u7136\u540e\u7528\u4e24\u4e2a\u6307\u9488 \\(p, q\\)\uff0c\u540c\u6b65\u904d\u5386 \\(l - 1\\)\uff0c\\(r\\) \u4e24\u4e2a\u7248\u672c\u3002</p> <p>\u6bd4\u8f83\u4e00\u4e0b\u5f53\u524d\u7684 k \u548c <code>lcnt = dat[ls[q]] - dat[ls[p]]</code> \u7684\u5927\u5c0f\uff0c\u5982\u679c \\(k \\le lcnt\\)\uff0c\u5c31\u8ba9 \\(p,q\\) \u90fd\u5f80\u5de6\u5b50\u6811\u8d70\uff0c\u5426\u5219 \\(k - lcnt\\)\uff0c\u7136\u540e\u8d70\u53f3\u5b50\u6811\u5c31\u884c\u4e86\u3002</p> <p>\u53ef\u4ee5\u7406\u89e3\u6210\u5728\u4e24\u9897\u6743\u503c\u7ebf\u6bb5\u6811\u5408\u5e76\u4e4b\u540e\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u5408\u5e76\u540e\u7684\u4fe1\u606f\u5c31\u662f \\(r\\) \u7248\u672c\u7684\u4fe1\u606f\u51cf\u53bb \\(l - 1\\) \u7684\u4fe1\u606f\u3002</p> <p>\uff08\u6240\u4ee5\u4e3b\u5e2d\u6811\u7ef4\u62a4\u7684\u4fe1\u606f\u4e0d\u4ec5\u8981\u6ee1\u8db3\u5e7a\u534a\u7fa4\u6027\u8d28\uff0c\u8fd8\u9700\u8981\u6ee1\u8db3\u533a\u95f4\u53ef\u52a0\u51cf\u6027\uff01\uff09</p> <p>\u5efa\u6811\u7684\u65f6\u5019\u5148\u5bf9\u4e8e\u503c\u57df\u5efa\u4e00\u4e2a\u6bcf\u4e2a\u8282\u70b9\u6743\u503c\u90fd\u4e3a\u7a7a\u7684\u7ebf\u6bb5\u6811\uff0c\u6839\u8282\u70b9\u6807\u8bb0\u4e3a\u7b2c\u96f6\u4e2a\u7248\u672c\u7684\u6839\u8282\u70b9\uff0c\u65b9\u4fbf\u4e4b\u540e\u66f4\u65b0\u3002</p> <p>\u7a7a\u95f4\u5f00\u4e2a <code>&lt;&lt; 5</code> \u5c31\u884c\u4e86\uff0c\u53cd\u6b63\u4e00\u822c\u80fd\u7528\u4e3b\u5e2d\u6811\u7684\u9898\u7a7a\u95f4\u90fd\u5f88\u5bbd\u677e\u3002</p> \u4ee3\u7801\uff1aPOJ2104 - K-th Number <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\n#ifndef ONLINE_JUDGE\n#include&lt;cstdarg&gt;\n#define meow(format, ...) \\\n    fprintf(stderr, format, ## __VA_ARGS__)\n// remember to open stream sync!\n#else\n#define meow(format, ...) 1231\n#endif\n\nusing namespace std;\n// using i64 = long long;\n\ntemplate &lt;typename __Tp&gt; void read(__Tp &amp;x) {\nint f = x = 0; char ch = getchar();\nfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = 1;\nfor (; isdigit(ch); ch = getchar()) x = (x &lt;&lt; 1) + (x &lt;&lt; 3) + (ch ^ 48);\nif (f) x = -x;\n}\n// void read(modint &amp;x) { int __value; read(__value); x = __value; return; } \nvoid read(char &amp;ch) { for (ch = getchar(); isspace(ch); ch = getchar()); }\n// template &lt;typename __Tp1, typename ...__Tp2&gt; void read(__Tp1 &amp;x, __Tp2 &amp;... y) { read(x), read(y...); }\ntemplate &lt;typename __Tp&gt; void write(__Tp x) {\nif (x &lt; 0) putchar('-'), x = -x;\nif (x &gt; 9) write(x / 10);\nputchar(x % 10 + 48);\n}\nvoid write(char ch) { putchar(ch); }\n// void write(modint x) { write(x.val()); }\nvoid write(const char *s) { for (; *s; ++s) putchar(*s); }\n// template &lt;typename __Tp1, typename ...__Tp2&gt; void write(__Tp1 x, __Tp2 ... y) { write(x), write(y...); }\n\nconst int si = 1e5 + 10;\n\nint n, m, len;\nint a[si], id[si];\n\nint tot = 0;\nint ls[si &lt;&lt; 5], rs[si &lt;&lt; 5];\nint root[si &lt;&lt; 5], dat[si &lt;&lt; 5];\n\nint build(int l, int r) {\nint p = ++tot;\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nls[p] = build(l, mid), rs[p] = build(mid + 1, r);\nreturn p;\n}\nint insert(int last, int l, int r, int val) { // last \u662f\u4e0a\u4e00\u4e2a\u7248\u672c\u7684 [l, r] \u8282\u70b9\u3002\nint p = ++tot;\ndat[p] = dat[last] + 1;\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nif(val &lt;= mid) ls[p] = insert(ls[last], l, mid, val), rs[p] = rs[last];\nelse rs[p] = insert(rs[last], mid + 1, r, val), ls[p] = ls[last];\nreturn p;\n}\nint ask(int p, int q, int l, int r, int kth) {\nif(l == r) return l;\nint mid = (l + r) &gt;&gt; 1;\nint lcnt = dat[ls[q]] - dat[ls[p]];\nif(kth &lt;= lcnt) return ask(ls[p], ls[q], l, mid, kth);\nelse return ask(rs[p], rs[q], mid + 1, r, kth - lcnt);\n}\n\nint index(int val) {\nreturn lower_bound(id + 1, id + 1 + len, val) - id;\n}\n\nint main() {\n\nread(n), read(m);\nfor(int i = 1; i &lt;= n; ++i)\nread(a[i]), id[i] = a[i];\nsort(id + 1, id + 1 + n);\nlen = unique(id + 1, id + 1 + n) - id - 1;\nroot[0] = build(1, len);\n\nfor(int i = 1; i &lt;= n; ++i)\nroot[i] = insert(root[i - 1], 1, len, index(a[i]));\n\nwhile(m --) {\nint l, r, k; read(l), read(r), read(k);\nwrite(id[ask(root[l - 1], root[r], 1, len, k)]);\nwrite(endl);\n}\n\nreturn 0;\n}\n</code></pre> <p>\u590d\u6742\u5ea6\u663e\u7136 1log\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff0c\u4e3b\u5e2d\u6811\u9898\u53ea\u9700\u8981\u8003\u8651\uff0c\u600e\u4e48\u7ef4\u62a4\u5386\u53f2\u7248\u672c\u4ee5\u8fbe\u5230\u533a\u95f4\u67e5\u8be2\uff0c</p> <p>\u600e\u4e48\u51d1\u51fa\u4e00\u4e2a\u65b0\u7684\u4fe1\u606f\uff0c\u653e\u5230\u4e00\u4e2a\u65b0\u7684\u7ebf\u6bb5\u6811\u4e0a\uff0c\u5728\u8fd9\u4e2a\u65b0\u7684\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\uff08\u65b0\u7684\u7ebf\u6bb5\u6811\u5e76\u4e0d\u9700\u8981\u5b9e\u9645\u5408\u5e76\u51fa\u6765\uff0c\u53ea\u9700\u8981\u591a\u4e2a\u6307\u9488\u540c\u6b65\u904d\u5386\u9700\u8981\u7684\u7248\u672c\u5373\u53ef\uff09</p>"}, {"location": "algor/ds/persistent-segtree/#k_1", "title": "\u52a8\u6001\u533a\u95f4\u7b2c k \u5927", "text": "<p>Luogu2617 Dynamic Rankings</p> <p>\u5355\u70b9\u4fee\u6539\u533a\u95f4\u8be2\u95ee\u7b2c \\(k\\) \u5927\uff0c1e5\u3002</p> <p>\u76f4\u63a5\u66b4\u529b\u505a\u7684\u8bdd\uff0c\u6bcf\u6b21\u5355\u70b9\u4fee\u6539 \\(i\\) \u9700\u8981\u4fee\u6539 \\([i,n]\\) \u7684\u6240\u6709\u7248\u672c\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u662f \\(O(n \\log n)\\) \u7684\uff0c\u4e0d\u80fd\u63a5\u53d7\u3002</p> <p>\u53ef\u4ee5\u60f3\u5230\u4e3b\u5e2d\u6811\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u201c\u5e7f\u4e49\u201d\u7684\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e3b\u5e2d\u6811\uff0c\u6765\u8ba9\u9700\u8981\u4fee\u6539\u7684\u7248\u672c\u6570\u51cf\u5c11\u5230 \\(O(\\log n)\\) \u4e2a\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u6bcf\u6b21\u4fee\u6539 \\(x\\) \u8fd9\u4e2a\u7248\u672c\u7684\u67d0\u4e2a\u503c\uff0c\u5c31\u4fee\u6539 \\(x + \\text{lowbit}(x), x + \\text{lowbit}(x) + \\text{lowbit}(x + \\text{lowbit}(x)), \\dots\\) \u8fd9\u51e0\u4e2a\u7248\u672c\u7684\u8fd9\u4e2a\u503c\u5c31\u884c\u4e86\u3002</p> <p>\u7136\u540e\u4fee\u6539\u7684\u65f6\u5019\u9700\u8981\u81ea\u5df1\u5728\u81ea\u5df1\u7248\u672c\u4e0a\u65b0\u5efa\uff0c\u56e0\u4e3a\u5982\u679c\u76f4\u63a5\u4fee\u6539\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u540e\u9762\u7684\u7248\u672c\uff08\u540e\u9762\u7684\u7248\u672c\u5bf9\u524d\u9762\u7684\u7248\u672c\u6709\u4f9d\u8d56\uff09\u3002</p> <p>\uff08\u6709\u70b9\u7c7b\u4f3c\u4e4b\u524d\u770b\u9519\u7684\u90a3\u4e2a ABC \u7684 F\uff0c\u628a\u539f\u6765\u7684\u4fdd\u7559\u5728\u90a3\u91cc\uff0c\u81ea\u5df1\u5b9e\u9645\u8f6c\u79fb\u5230\u65b0\u7684\u526f\u672c\u4e0a\u53bb\uff09</p> <p>\u67e5\u8be2\u5c31\u9884\u5904\u7406\u51fa\u5bf9\u5e94\u7684\u4e24\u6279 \\(O(\\log n)\\) \u4e2a\u4e3b\u5e2d\u6811\u7684\u4fe1\u606f\uff0c\u5408\u5e76\u4e4b\u540e\u5728\u4e0a\u9762\u7ebf\u6bb5\u6811\u4e8c\u5206\u5373\u53ef\u3002</p> <p>\u8fd9\u91cc\u7684\u4ee3\u7801\u4f7f\u7528\u4e86\u53e6\u5916\u4e00\u79cd\u52a8\u6001\u5f00\u70b9\u7684\u5199\u6cd5\uff0c\u66f4\u8282\u7701\u7a7a\u95f4\u3002</p> <p>\u6ce8\u610f\u4e00\u5b9a\u4e0d\u8981\u5fd8\u8bb0\u5728\u521d\u59cb\u7684\u65f6\u5019\u628a\u4e3b\u5e2d\u6811\u6254\u5230\u6811\u72b6\u6570\u7ec4\u4e0a\uff01</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\n#ifndef ONLINE_JUDGE\n#include&lt;cstdarg&gt;\n#define meow(format, ...) \\\n    fprintf(stderr, format, ## __VA_ARGS__)\n// remember to open stream sync!\n#else\n#define meow(format, ...) 1231\n#endif\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m, len;\nint a[si], id[si &lt;&lt; 1];\n\nint tot = 0;\nint ls[si &lt;&lt; 8], rs[si &lt;&lt; 8];\nint root[si &lt;&lt; 8], dat[si &lt;&lt; 8];\n\nint cnt1, cnt2;\nint tr1[si], tr2[si];\n\nstruct Query { char opt; int l, r, x; } q[si];\n\ninline int lowbit(int x) { return x &amp; -x; }\ninline int getid(int val) { return lower_bound(id + 1, id + 1 + len, val) - id; }\n\nint build(int l, int r) {\nint p = ++tot;\nif(l == r) return l;\nint mid = (l + r) &gt;&gt; 1;\nls[p] = build(l, mid), rs[p] = build(mid + 1, r);\nreturn p;\n}\nvoid insert(int &amp;p, int last, int l, int r, int val, int delta) {\np = ++tot;\ndat[p] = dat[last] + delta, ls[p] = ls[last], rs[p] = rs[last];\nif(l == r) return;\nint mid = (l + r) &gt;&gt; 1;\nif(val &lt;= mid) insert(ls[p], ls[last], l, mid, val, delta);\nelse insert(rs[p], rs[last], mid + 1, r, val, delta);\n}\nint ask(int l, int r, int kth) {\nif(l == r) return l;\nint mid = (l + r) &gt;&gt; 1;\nint lcnt = 0;\nfor(int i = 1; i &lt;= cnt2; ++i) lcnt += dat[ls[tr2[i]]];\nfor(int i = 1; i &lt;= cnt1; ++i) lcnt -= dat[ls[tr1[i]]];\n\nif(kth &lt;= lcnt) {\nfor(int i = 1; i &lt;= cnt1; ++i) tr1[i] = ls[tr1[i]];\nfor(int i = 1; i &lt;= cnt2; ++i) tr2[i] = ls[tr2[i]];\nreturn ask(l, mid, kth);\n}   else {\nfor(int i = 1; i &lt;= cnt1; ++i) tr1[i] = rs[tr1[i]];\nfor(int i = 1; i &lt;= cnt2; ++i) tr2[i] = rs[tr2[i]];\nreturn ask(mid + 1, r, kth - lcnt);\n}\n}\n\nvoid change(int x, int v) {\nint y = getid(a[x]);\nwhile(x &lt;= n) {\ninsert(root[x], root[x], 1, len, y, v);\nx += lowbit(x);\n}\n}\nint query(int l, int r, int kth) {\nl --, cnt1 = cnt2 = 0;\nwhile(l) tr1[++cnt1] = root[l], l -= lowbit(l);\nwhile(r) tr2[++cnt2] = root[r], r -= lowbit(r);\nreturn ask(1, len, kth);\n}\n\nint main() {    // cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nint cnt = 0;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], id[++cnt] = a[i];\nfor(int i = 1; i &lt;= m; ++i) {\nQuery &amp;p = q[i];\ncin &gt;&gt; p.opt;\nif(p.opt == 'C')\ncin &gt;&gt; p.l &gt;&gt; p.x, id[++cnt] = p.x;\nif(p.opt == 'Q')\ncin &gt;&gt; p.l &gt;&gt; p.r &gt;&gt; p.x;\n}\n\nsort(id + 1, id + 1 + cnt);\nlen = unique(id + 1, id + 1 + cnt) - id - 1;\n\nfor(int i = 1; i &lt;= n; ++i) change(i, 1);\n\nfor(int i = 1; i &lt;= m; ++i) {\nQuery &amp;p = q[i];\nif(p.opt == 'C') change(p.l, -1), a[p.l] = p.x, change(p.l, 1);\nif(p.opt == 'Q') cout &lt;&lt; id[query(p.l, p.r, p.x)] &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// \u4e0b\u9762\u8fd9\u4e2a\u867d\u7136\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u7a7a\u95f4\u53ef\u80fd\u5c31\u5bc4\u6389\u4e86\uff0c\u6240\u4ee5\u7528\u4e0a\u9762\u7684\u5199\u6cd5\u4f1a\u597d\u5f97\u591a\u3002\n/*\n// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\n#ifndef ONLINE_JUDGE\n  #include&lt;cstdarg&gt;\n  #define meow(format, ...) \\\n    fprintf(stderr, format, ## __VA_ARGS__)\n  // remember to open stream sync!\n#else\n  #define meow(format, ...) 1231\n#endif\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m, len;\nint a[si], id[si &lt;&lt; 1];\n\nint tot = 0;\nint ls[si &lt;&lt; 9], rs[si &lt;&lt; 9];\nint root[si &lt;&lt; 9], dat[si &lt;&lt; 9];\n\nint cnt1, cnt2;\nint tr1[si], tr2[si];\n\nstruct Query { char opt; int l, r, x; } q[si];\n\ninline int lowbit(int x) { return x &amp; -x; }\ninline int getid(int val) { return lower_bound(id + 1, id + 1 + len, val) - id; }\n\nint build(int l, int r) {\n    int p = ++tot;\n    if(l == r) return l;\n    int mid = (l + r) &gt;&gt; 1;\n    ls[p] = build(l, mid), rs[p] = build(mid + 1, r);\n    return p;\n}\nvoid insert(int &amp;p, int last, int l, int r, int val, int delta) {\n    p = ++tot;\n    dat[p] = dat[last] + delta, ls[p] = ls[last], rs[p] = rs[last];\n    if(l == r) return;\n    int mid = (l + r) &gt;&gt; 1;\n    if(val &lt;= mid) insert(ls[p], ls[last], l, mid, val, delta);\n    else insert(rs[p], rs[last], mid + 1, r, val, delta);\n}\nint ask(int l, int r, int kth) {\n    if(l == r) return l;\n    int mid = (l + r) &gt;&gt; 1;\n    int lcnt = 0;\n    for(int i = 1; i &lt;= cnt2; ++i) lcnt += dat[ls[tr2[i]]];\n    for(int i = 1; i &lt;= cnt1; ++i) lcnt -= dat[ls[tr1[i]]];\n\n    if(kth &lt;= lcnt) {\n        for(int i = 1; i &lt;= cnt1; ++i) tr1[i] = ls[tr1[i]];\n        for(int i = 1; i &lt;= cnt2; ++i) tr2[i] = ls[tr2[i]];\n        return ask(l, mid, kth);\n    }   \n    else {\n        for(int i = 1; i &lt;= cnt1; ++i) tr1[i] = rs[tr1[i]];\n        for(int i = 1; i &lt;= cnt2; ++i) tr2[i] = rs[tr2[i]];\n        return ask(mid + 1, r, kth - lcnt);\n    }\n}\n\nvoid change(int x, int v) {\n    int y = getid(a[x]);\n    while(x &lt;= n) {\n        insert(root[x], root[x], 1, len, y, v);\n        x += lowbit(x);\n    }\n}\nint query(int l, int r, int kth) {\n    l --, cnt1 = cnt2 = 0;\n    while(l) tr1[++cnt1] = root[l], l -= lowbit(l);\n    while(r) tr2[++cnt2] = root[r], r -= lowbit(r);\n    return ask(1, len, kth);\n}\n\nint main() {    \n\n    // cin.tie(0) -&gt; sync_with_stdio(false);\n    // cin.exceptions(cin.failbit | cin.badbit);\n\n    cin &gt;&gt; n &gt;&gt; m;\n    int cnt = 0;\n    for(int i = 1; i &lt;= n; ++i)\n        cin &gt;&gt; a[i], id[++cnt] = a[i];\n    for(int i = 1; i &lt;= m; ++i) {\n        Query &amp;p = q[i];\n        cin &gt;&gt; p.opt;\n        if(p.opt == 'C')\n            cin &gt;&gt; p.l &gt;&gt; p.x, id[++cnt] = p.x;\n        if(p.opt == 'Q')\n            cin &gt;&gt; p.l &gt;&gt; p.r &gt;&gt; p.x;\n    }\n\n    sort(id + 1, id + 1 + cnt);\n    len = unique(id + 1, id + 1 + cnt) - id - 1;\n\n    for(int i = 1; i &lt;= n; ++i) \n        root[i] = build(1, len);\n    for(int i = 1; i &lt;= n; ++i) change(i, 1);\n\n    for(int i = 1; i &lt;= m; ++i) {\n        Query &amp;p = q[i];\n        if(p.opt == 'C') change(p.l, -1), a[p.l] = p.x, change(p.l, 1);\n        if(p.opt == 'Q') cout &lt;&lt; id[query(p.l, p.r, p.x)] &lt;&lt; endl;\n    }\n\n    return 0;\n}\n*/\n</code></pre>"}, {"location": "algor/ds/persistent-segtree/#_7", "title": "\u5c0f\u7ec3\u4e60", "text": "<p>Luogu2633 Count on a tree</p> <p>\u7ed9\u5b9a\u4e00\u68f5 \\(n\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c\u3002\u6709 \\(m\\) \u4e2a\u8be2\u95ee\uff0c</p> <p>\u6bcf\u6b21\u7ed9\u4f60 \\(u,v,k\\)\uff0c\u4f60\u9700\u8981\u56de\u7b54 \\(u \\text{ xor last}\\) \u548c \\(v\\) \u8fd9\u4e24\u4e2a\u8282\u70b9\u95f4\u7b2c \\(k\\) \u5c0f\u7684\u70b9\u6743\u3002</p> <p>\u5176\u4e2d \\(\\text{last}\\) \u662f\u4e0a\u4e00\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u5b9a\u4e49\u5176\u521d\u59cb\u4e3a \\(0\\)\uff0c\u5373\u7b2c\u4e00\u4e2a\u8be2\u95ee\u7684 \\(u\\) \u662f\u660e\u6587\u3002</p> <p>1e5</p> <p>\u53d1\u73b0\u7b2c \\(i\\) \u4e2a\u7248\u672c\u7684\u4e3b\u5e2d\u6811\u53ef\u4ee5\u611f\u6027\u7684\u7406\u89e3\u4e3a\u4e00\u79cd\u524d\u7f00\u548c\u3002</p> <p>\u4e8e\u662f\u5728\u8be2\u95ee \\([l, r]\\) \u7684\u65f6\u5019\u53ef\u4ee5\u628a <code>dat[r] - dat[l - 1]</code> \u5f53\u4f5c\u4fe1\u606f\u62cd\u5230\u4e00\u4e2a\u65b0\u7684\u7ebf\u6bb5\u6811\u4e0a\u64cd\u4f5c\uff08\u5b9e\u9645\u64cd\u4f5c\u5c31\u662f\u62ff\u4e24\u4e2a\u6307\u9488\u540c\u6b65\u8d70\u4e24\u4e2a\u7248\u672c\u7684\u7ebf\u6bb5\u6811\uff09\u3002</p> <p>\u8fd9\u91cc\u662f\u5728\u6811\u4e0a\u8be2\u95ee\uff0c\u53ef\u4ee5\u8003\u8651\u6811\u5256\uff0c\u4f46\u662f\u4f3c\u4e4e\u5f88\u9ebb\u70e6\u3002</p> <p>\u4e3b\u5e2d\u6811\u7ef4\u62a4\u7684\u4fe1\u606f\u5177\u6709\u533a\u95f4\u53ef\u52a0\u53ef\u51cf\u6027\uff0c\u6362\u53e5\u8bdd\u8bf4\u53ef\u4ee5\u505a\u524d\u7f00\u548c\u4e5f\u53ef\u4ee5\u5dee\u5206\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u600e\u4e48\u51d1\u4e00\u4e2a\u65b0\u7684\u7ebf\u6bb5\u6811\uff0c\u4f7f\u4ed6\u80fd\u5305\u542b\u8def\u5f84 \\((u,v)\\) \u7684\u4fe1\u606f\uff0c\u7136\u540e\u5728\u4e0a\u9762\u7ebf\u6bb5\u6811\u4e8c\u5206\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u6211\u4eec\u8bbe\u7248\u672c \\(i\\) \u8868\u793a\u6839\u8282\u70b9\u5230\u8282\u70b9 \\(i\\) \u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u6784\u6210\u7684\u4e3b\u5e2d\u6811\uff0c</p> <p>\u7136\u540e\u53d1\u73b0\u6b64\u65f6\u53ef\u4ee5\u6811\u4e0a\u5dee\u5206\u6765\u51d1\u51fa\u8def\u5f84 \\((u, v)\\)\uff0c\u4e8e\u662f\u65b0\u7684\u7ebf\u6bb5\u6811\u7684\u4fe1\u606f\u5c31\u662f <code>dat[u] + dat[v] - dat[lca(u, v)] - dat[fa(lca(u, v))]</code>\u3002</p> <p>\u5b9e\u73b0\u76f4\u63a5\u62ff\u56db\u4e2a\u6307\u9488\u540c\u6b65\u904d\u5386\u8fd9\u56db\u4e2a\u7248\u672c\u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint n, m, len, cnt;\nint a[si], id[si];\n\nint head[si &lt;&lt; 1];\nstruct Edge {\nint ver, Next;\n}e[si &lt;&lt; 1];\nvoid add(int u, int v) {\ne[cnt].ver = v, e[cnt].Next = head[u], head[u] = cnt++;\n}\n\nint get_id(int val) {\nreturn lower_bound(id + 1, id + 1 + len, val) - id;\n}\n\nint tot = 0;\nint ls[si &lt;&lt; 5], rs[si &lt;&lt; 5];\nint root[si &lt;&lt; 5], dat[si &lt;&lt; 5];\nint build(int l, int r) {\nint p = ++tot;\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nls[p] = build(l, mid), rs[p] = build(mid + 1, r);\nreturn p;\n}\nint insert(int last, int l, int r, int v) {\nint p = ++tot;\ndat[p] = dat[last] + 1;\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nif(v &lt;= mid) ls[p] = insert(ls[last], l, mid, v), rs[p] = rs[last];\nelse rs[p] = insert(rs[last], mid + 1, r, v), ls[p] = ls[last];\nreturn p;\n}\nint ask(int p, int q, int u, int v, int l, int r, int kth) {\nif(l == r) return l;\nint mid = (l + r) &gt;&gt; 1;\nint lcnt = dat[ls[p]] + dat[ls[q]] - dat[ls[u]] - dat[ls[v]];\nif(kth &lt;= lcnt) return ask(ls[p], ls[q], ls[u], ls[v], l, mid, kth);\nelse return ask(rs[p], rs[q], rs[u], rs[v], mid + 1, r, kth - lcnt); }\n\nint dep[si];\nint f[si][21];\nvoid dfs(int u, int fa) {\nf[u][0] = fa, dep[u] = dep[fa] + 1;\nfor(int i = 1; i &lt;= 20; ++i) f[u][i] = f[f[u][i - 1]][i - 1];\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\nroot[v] = insert(root[u], 1, len, get_id(a[v]));\ndfs(v, u);\n}\n}\nint lca(int u, int v) {\nif(dep[u] &lt; dep[v]) swap(u, v);\nfor(int i = 20; i &gt;= 0; --i) if(dep[f[u][i]] &gt;= dep[v]) u = f[u][i];\nif(u == v) return u;\nfor(int i = 20; i &gt;= 0; --i) if(f[u][i] != f[v][i])\nu = f[u][i], v = f[v][i];\nreturn f[u][0];\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], id[i] = a[i];\nsort(id + 1, id + 1 + n);\nlen = unique(id + 1, id + 1 + n) - id - 1;\n\nfor(int i = 1; i &lt; n; ++i) {\nint u, v; cin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n}\n\nroot[0] = build(1, len);\nroot[1] = insert(root[0], 1, len, get_id(a[1]));\n\ndfs(1, 0);\n\nint lastans = 0;\nwhile(m --) {\nint u, v, k;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; k;\nu ^= lastans;\nint Lca = lca(u, v), Fa = f[Lca][0];\ncout &lt;&lt; (lastans = id[ask(root[u], root[v], root[Lca], root[Fa], 1, len, k)]) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/ds/persistent-trie/", "title": "\u53ef\u6301\u4e45\u5316 Trie", "text": ""}, {"location": "algor/ds/persistent-trie/#_1", "title": "\u6982\u8ff0", "text": "<p>\u53ef\u6301\u4e45\u5316\u7684\u7684\u4e2d\u5fc3\u601d\u60f3\u5c31\u662f\u201c\u51fd\u6570\u5f0f\u7f16\u7a0b\u201d\u3002</p> <p>\u4e5f\u5c31\u662f\uff0c\u5728\u5bf9\u6570\u636e\u7ed3\u6784\u7684\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u4f1a\u6539\u53d8\u6570\u636e\u7ed3\u6784\u672c\u8eab\u6240\u5177\u6709\u7684\u7ed3\u6784\u3002</p> <p>\u5728\u9700\u8981\u4fee\u6539\u67d0\u4e9b\u4fe1\u606f\u65f6\uff0c\u4e0d\u662f\u76f4\u63a5\u4fee\u6539\uff0c\u800c\u662f\u4fdd\u7559\u524d\u4e00\u4e2a\u7248\u672c\u7684\u4fe1\u606f\uff0c\u5e76\u5c06\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u526f\u672c\uff0c\u5728\u526f\u672c\u4e0a\u6267\u884c\u4fee\u6539\u3002</p> <p>\u66b4\u529b\u7684\u505a\u6cd5\u662f\u6bcf\u6b21\u4fee\u6539\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u90fd\u76f4\u63a5\u628a\u6574\u4e2a\u6570\u636e\u7ed3\u6784\u590d\u5236\u4e00\u904d\uff0c\u5728\u8fd9\u4e2a\u526f\u672c\u4e0a\u4fee\u6539\u3002</p> <p>\u4f46\u662f\u7a7a\u95f4\u7684\u82b1\u8d39\u5f88\u660e\u663e\u662f\u4e0d\u80fd\u63a5\u53d7\u7684\u3002</p> <p>\u53d1\u73b0\u6bcf\u6b21\u4fee\u6539\u53ea\u4f1a\u4fee\u6539\u4e00\u90e8\u5206\u4fe1\u606f\uff0c\u90a3\u4e48\u5355\u72ec\u5c06\u8fd9\u90e8\u5206\u4fe1\u606f\u521b\u5efa\u4e00\u4e2a\u526f\u672c\uff0c\u5728\u8fd9\u4e2a\u526f\u672c\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u5c31\u5927\u5927\u63d0\u9ad8\u4e86\u7a7a\u95f4\u5229\u7528\u7387\u3002</p> <p>\u8fd9\u6837\uff0c\u6570\u636e\u7ed3\u6784\u5c31\u80fd\u5f88\u65b9\u4fbf\u7684\u4fdd\u5b58\u6240\u6709\u5386\u53f2\u7248\u672c\u7684\u4fe1\u606f\u3002</p> <p>\u8fd9\u79cd\u601d\u60f3\u5728\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u4e0a\u4f53\u73b0\u66f4\u4e3a\u660e\u663e\uff0c\u53ef\u6301\u4e45\u5316 Trie \u5176\u5b9e\u4e5f\u5dee\u4e0d\u591a\u3002</p>"}, {"location": "algor/ds/persistent-trie/#_2", "title": "\u5e94\u7528", "text": "<p>\u53ef\u6301\u4e45\u5316 Trie \u4e00\u822c\u90fd\u662f\u4ee5 01 Trie \u7684\u65b9\u5f0f\u51fa\u73b0\u3002</p> <p>01 Trie \u53ef\u4ee5\u652f\u6301\u4e00\u4e9b\u5168\u5c40\u67e5\u8be2\uff0c\u4fee\u6539\u7684\u64cd\u4f5c\u3002</p> <p>\u4f46\u662f\u65e0\u6cd5\u5f88\u597d\u7684\u652f\u6301\u533a\u95f4\u7684\u64cd\u4f5c\u3002</p> <p>\u6bd4\u5982\uff0c\u8981\u591a\u6b21\u8be2\u95ee\u67d0\u4e2a\u5e8f\u5217 \\(a\\) \u7684 \\([l,r]\\) \u4e2d\u548c \\(x\\) \u5f02\u6216\u8d77\u6765\u6700\u5927\u7684\u4e00\u4e2a\u6570\u3002</p> <p>\u4e00\u822c\u7684 01 Trie \u6ca1\u6cd5\u5f88\u65b9\u4fbf\u7684\u7ef4\u62a4\uff0c\u53ea\u80fd\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u5355\u72ec\u5efa\u6811\u3002</p> <p>\u6216\u8005\u662f\u5229\u7528\u5220\u9664\u64cd\u4f5c+\u7c7b\u4f3c\u83ab\u961f\u7684\u79bb\u7ebf\u601d\u60f3\u4f18\u5316\uff0c\u4f46\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u4ecd\u7136\u5f88\u9ad8\u3002</p> <p>\u53ef\u6301\u4e45\u5316 Trie \u7684\u601d\u60f3\u5c31\u662f\uff0c\u4f9d\u6b21\u63d2\u5165 \\(a_1,a_2,a_3,\\dots\\)\uff0c\u7136\u540e\u4fdd\u7559\u6bcf\u4e00\u6b21\u63d2\u5165\u4e4b\u540e\u7684\u7248\u672c \\(i\\)\u3002</p> <p>\u5e76\u4e14\u7b2c \\(i\\) \u4e2a\u7248\u672c\u5bf9\u5e94\u7684\u6839\u8282\u70b9\u4e3a \\(rt[i]\\)\u3002</p> <p>\u5b83\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff1a</p> <p>\u4ece \\(rt[i]\\) \u51fa\u53d1\u6240\u80fd\u8bbf\u95ee\u5230\u7684\u6240\u6709\u8282\u70b9\u6784\u6210\u7684\u4e00\u68f5 Trie \u6811\uff0c\u5c31\u662f \\(a[1 \\sim i]\\) \u5168\u90e8\u63d2\u5165\u4e4b\u540e\u5f62\u6210\u7684\u4e00\u68f5 Trie \u6811\u3002</p> <p>\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\uff0c\u628a\u7b2c \\(r\\) \u4e2a\u7248\u672c\u6784\u6210\u7684 Trie \u548c\u7b2c \\(l - 1\\) \u4e2a\u7248\u672c\u6784\u6210\u7684 Trie \u201c\u76f8\u51cf\u201d\uff0c\u5c31\u5f97\u5230\u4e86 \\(a[l \\sim r]\\) \u8fd9\u90e8\u5206\u63d2\u5165\u4e4b\u540e\u5f97\u5230\u7684 Trie \u6811\u3002</p> <p>\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u201c\u76f8\u51cf\u201d\u5e76\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u76f8\u51cf\uff0c\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f\u770b\u4e0b\u65b9\u7684 <code>Query</code> \u64cd\u4f5c\uff09</p>"}, {"location": "algor/ds/persistent-trie/#_3", "title": "\u5b9e\u73b0", "text": ""}, {"location": "algor/ds/persistent-trie/#_4", "title": "\u63d2\u5165", "text": "<p>\u53ef\u6301\u4e45\u5316 Trie \u7684\u6570\u636e\u4fdd\u5b58\u65b9\u5f0f\u548c\u666e\u901a\u7684 Trie \u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u5229\u7528\u5b57\u7b26\u6307\u9488\u6307\u5411\u542b\u6709\u4fe1\u606f\u7684\u8282\u70b9\u6765\u4fdd\u5b58\u6570\u636e\u3002</p> <p>\u4ecb\u7ecd\u539f\u7406\u65f6\u4ecd\u7136\u4f7f\u7528\u666e\u901a Trie\uff0c\u4ee3\u7801\u5b9e\u73b0\u4f7f\u7528 01 Trie\u3002</p> <p>\u4ecd\u7136\u8bbe \\(tr[p,ch]\\) \u8868\u793a \\(p\\) \u8282\u70b9\u7684 \\(ch\\) \u5b57\u7b26\u6307\u9488\uff0c\u5047\u8bbe\u5f53\u524d\u9700\u8981\u63d2\u5165\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u90a3\u4e48\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5373\u53ef\uff1a</p> <ol> <li> <p>\u8bbe\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u53ef\u6301\u4e45\u5316 Trie \u5bf9\u5e94\u7684\u6839\u8282\u70b9\u4e3a \\(rt\\)\uff0c\u4ee4\u4e00\u4e2a\u6307\u9488 \\(p = root\\)\uff0c\u7528\u4e00\u4e2a\u6307\u9488 \\(i\\) \u626b\u63cf \\(s\\)\u3002</p> </li> <li> <p>\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9 \\(q\\)\uff0c\u4ee4\u65b0\u7248\u672c\u5bf9\u5e94\u7684\u6839\u8282\u70b9 \\(rt\\prime = q\\)\u3002</p> </li> <li> <p>\u5982\u679c \\(p\\not= \\text{NULL}\\)\uff0c\u5c06 \\(p\\) \u7684\u5b57\u7b26\u6307\u9488\u4fe1\u606f\u590d\u5236\u7ed9 \\(q\\)\u3002</p> </li> </ol> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e \\(\\forall tr[p,ch] \\not = \\text{NULL}\\)\uff0c\u4ee4 \\(tr[q,ch] = tr[p,ch]\\)\u3002</p> <ol> <li>\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9 \\(q\\prime\\)\uff0c\u4ee4 \\(tr[q,s_i]\\) \u6307\u5411 \\(q\\prime\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\\(p,q\\) \u4e24\u4e2a\u8282\u70b9\u9664\u4e86\u7f16\u53f7\u4ee5\u5916\u7684\u552f\u4e00\u533a\u522b\uff0c\u5c31\u662f \\(s_i\\) \u8fd9\u4e2a\u5b57\u7b26\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u3002</li> </ol> <p>\u5373\u662f\uff1a\\(tr[p,s_i]\\not=tr[q,s_i]\\)\u3002</p> <ol> <li> <p>\u7136\u540e\u8ba9 \\(p,q\\) \u5f80\u4e0b\u8df3\uff0c\\(p = tr[p,s_i],q = tr[q,s_i]\\)\uff0c\u4ee4 \\(i + 1\\)\u3002</p> </li> <li> <p>\u91cd\u590d \\(3 \\sim 5\\)\uff0c \u76f4\u5230\u626b\u63cf\u5b8c \\(s\\)\u3002</p> </li> </ol> <p>\u4e0b\u56fe\u5c55\u793a\u4e86\u5728\u5df2\u7ecf\u6709\u5386\u53f2\u7248\u672c \"bte\" \u7684\u53ef\u6301\u4e45\u5316 Trie \u4e2d\u63d2\u5165\u65b0\u7684\u5b57\u7b26\u4e32 \u201ckth\u201d \u7684\u8fc7\u7a0b\u3002</p> <p>\u5176\u4e2d\u7eff\u8272\u8282\u70b9\u4e3a\u5404\u4e2a\u7248\u672c\u5bf9\u5e94\u7684\u6839\u8282\u70b9\uff0c\u7ea2\u8272\u8282\u70b9\u4e3a\u5c3e\u6807\u8bb0\u6240\u5904\u8282\u70b9\u3002</p> <p></p>"}, {"location": "algor/ds/persistent-trie/#_5", "title": "\u8be2\u95ee", "text": "<p>\u5f53\u6211\u4eec\u9700\u8981\u67e5\u8be2\u67d0\u4e00\u6bb5\u533a\u95f4 \\([l,r]\\) \u5185\u548c \\(x\\) \u5f02\u6216\u8d77\u6765\u6700\u5927\u7684\u6570\u65f6\uff0c\u5e94\u5f53\u600e\u4e48\u5904\u7406\uff1f</p> <p>\u4e0a\u9762\u5df2\u7ecf\u8bf4\u4e86\uff0c\u5229\u7528\u524d\u7f00\u76f8\u51cf\u7684\u601d\u60f3\uff0c\u7528\u4e24\u4e2a\u7ef4\u62a4\u524d\u7f00 \\(1\\sim r,1\\sim l-1\\) \u7684\u4e24\u4e2a\u7248\u672c\u7684 Trie \u76f8\u51cf\u5f97\u5230 \\([l,r]\\) \u5bf9\u5e94\u7684 Trie\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u5e76\u4e0d\u80fd\u76f4\u63a5\u76f8\u51cf\uff0c\u56e0\u4e3a\u5e76\u4e0d\u5b58\u5728\u4e00\u79cd\u8ba9 Trie \u548c Trie \u4e4b\u95f4\u505a\u51cf\u6cd5\u7684\u64cd\u4f5c\u3002</p> <p>\u9996\u5148\u6839\u636e\u53ef\u6301\u4e45\u5316 Trie \u7684\u6027\u8d28\uff0c\u4ece \\(rt[i]\\) \u51fa\u53d1\u80fd\u8bbf\u95ee\u5230\u7684\u8282\u70b9\u6784\u6210\u4e86\u7b2c \\(i\\) \u4e2a\u7248\u672c\u7684 Trie\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5148\u4ece \\(r\\) \u51fa\u53d1\uff0c\u8fd9\u6837\u5c31\u6ee1\u8db3\u4e86 \\(r\\) \u7684\u4e0a\u754c\u9650\u5236\u3002</p> <p>\u600e\u4e48\u6ee1\u8db3 \\(l - 1\\) \u7684\u4e0b\u754c\u9650\u5236\u5462\uff1f</p> <p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5728\u8282\u70b9\u4e0a\u4fdd\u5b58\u7684\u9644\u52a0\u4fe1\u606f\u3002</p> <p>\u8bbe \\(end[p]\\) \u8868\u793a\u4ee5 \\(p\\) \u4e3a\u5c3e\u8282\u70b9\u7684\u6570\u662f\u5e8f\u5217\u91cc\u7684\u7b2c\u51e0\u4e2a\u6570\uff08\u53ef\u4ee5\u5f53\u4f5c\u201c\u7248\u672c\u201d\u770b\u5f85\uff09\u3002</p> <p>\u8bbe \\(las[p]\\) \u8868\u793a\u4ee5 \\(p\\) \u4e3a\u6839\u7684\u5b50\u6811\u4e2d \\(end\\) \u7684\u6700\u5927\u503c\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u9012\u5f52\u8bbf\u95ee\u8282\u70b9\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u8003\u8651 \\(las \\ge l - 1\\) \u7684\u8282\u70b9\u5373\u53ef\u3002</p> <p>\u56e0\u4e3a \\(las\\) \u4e5f\u53ef\u4ee5\u770b\u4f5c\uff1a\u8fd9\u9897\u5b50\u6811\u6700\u540e\u88ab\u54ea\u4e00\u4e2a\u7248\u672c\u6240\u66f4\u65b0\u8fc7\u3002</p> <p>\u9012\u5f52\u4e0b\u53bb\u5c31\u53ef\u4ee5\u4e86\u3002</p>"}, {"location": "algor/ds/persistent-trie/#_6", "title": "\u4ee3\u7801", "text": "President-01Trie <pre><code>const int si = 1e4 + 10;\nconst int MaxDepth = 21;\n// \u53ef\u4ee5\u4e0d\u7528\u5f3a\u5236\u4f4d\u6570\u90fd\u4e00\u6837\n// \u5199\u4e86\u4e5f\u53ef\u4ee5\u3002\n\nint s[si];\nint tr[si * (MaxDepth + 1)][2];\nint las[si * (MaxDepth + 1)];\nint tot = 0, root[si];\n\n// \u5f53\u524d\u7248\u672c\uff0c\u5f53\u524d\u4f4d\u6570\uff0cp, q \nvoid insert(int i, int k, int p, int q) {\nif(k &lt; 0) {\nlas[q] = i;\nreturn;\n}\nint ch = s[i] &gt;&gt; k &amp; 1;\nif(p) tr[q][ch ^ 1] = tr[p][ch ^ 1];\n// p \u975e\u7a7a\uff0c\u590d\u5236\u8282\u70b9\u4fe1\u606f\u3002\ntr[q][ch] = ++tot;\n// p \u548c q \u7684 ch \u6307\u9488\u5e94\u5f53\u4e0d\u4e00\u6837\u3002\ninsert(i, k - 1, tr[p][ch], tr[q][ch]);\nlas[q] = max(las[tr[q][0]], las[tr[q][1]]);\n}\n\n// \u67e5\u8be2 [l, r] \u4e2d\u548c val \u5f02\u6216\u8d77\u6765\u6700\u5927\u7684\u6570\u3002\n// \u8c03\u7528\u65f6\u9700\u8981 ask(root[r], MaxDepth, val, l - 1)\n// \u56e0\u4e3a\u53ef\u6301\u4e45\u5316 Trie \u7684root[i] \u80fd\u8bbf\u95ee\u5230\u7684\u5143\u7d20\u53ea\u6709 s[1 ~ i]\u3002\n// \u800c\u53ea\u8003\u8651 las &gt;= l - 1 \u7684\u8282\u70b9\u5219\u80fd\u6ee1\u8db3\u4e0b\u754c\u3002\nint ask(int p, int k, int val, int limit) {\nif(k &lt; 0)\nreturn s[las[p]];\nint ch = val &gt;&gt; k &amp; 1;\nif(las[tr[p][ch ^ 1]] &gt;= limit)\nreturn ask(tr[p][ch ^ 1], k - 1, val, limit);\nelse return ask(tr[p][ch], k - 1, val, limit);\n// \u8d70\u4e0d\u4e86 1 \u6307\u9488\uff0c\u6240\u4ee5\u53ea\u80fd\u5f80 0 \u6307\u9488\u8d70\u3002\n}\n\nint main() {\ns[0] = 0, las[0] = -1, root[0] = ++tot;\ninsert(0, MaxDepth, 0, root[0]);\n// \u8fd9\u51e0\u53e5\u8bdd\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u4f60\u8981\u4fdd\u8bc1\u5bf9\u4e8e\u4efb\u610f l \\in [1, n], \u90fd\u6709\u4e00\u4e2a l - 1 \u5b58\u5728\u3002\n}\n</code></pre> <p>\u5f53\u7136\uff0c\u53ef\u6301\u4e45\u5316 Trie \u7684\u5e94\u7528\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u53ef\u4ee5\u8003\u8651\u914d\u5408\u7ef4\u62a4\u5f02\u6216\u548c\u7684 01Trie\uff0c\u5b9e\u73b0\u52a8\u6001\u63d2\u5165\uff0c\u5220\u9664\u6307\u5b9a\u5143\u7d20\uff0c\u67e5\u8be2\u533a\u95f4\u5f02\u6216\u548c\u7684\u64cd\u4f5c\u3002</p> <p>TODO\uff1a\u4e4b\u540e\u5199\u4e00\u4e2a\u8fd9\u6837\u7684 \u53ef\u6301\u4e45\u5316 Trie\uff0c\u7136\u540e\u7528\u66b4\u529b\u5bf9\u62cd\u9a8c\u8bc1\u6b63\u786e\u6027\u3002</p> <p>\u53c2\u8003\u8d44\u6599\uff1a\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\uff0cOI - Wiki</p>"}, {"location": "algor/ds/queue/", "title": "\u961f\u5217", "text": ""}, {"location": "algor/ds/queue/#_1", "title": "\u6982\u8ff0", "text": "<p>\u961f\u5217\u662f\u4e00\u79cd FIFO(First In First Out)\u8868\uff0c\u610f\u601d\u662f\u5148\u8fdb\u5165\u7684\u5143\u7d20\u5148\u51fa\u6765\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u7406\u89e3\u4e3a\u4e00\u4e2a\u7ba1\u5b50\uff0c\u4ece\u540e\u585e\u8fdb\u53bb\uff0c\u4ece\u524d\u9762\u51fa\u6765\u3002</p> <p>\u4e00\u5f20\u56fe\uff08\u56fe\u6e90 OI-wiki\uff09\uff1a</p> <p></p> <p>BFS \u548c \u62d3\u6251\u6392\u5e8f\uff0cSPFA \u8fd9\u79cd\u57fa\u4e8e\u201d\u5e7f\u5ea6\u4f18\u5148\u201c\u7684\u7b97\u6cd5\uff0c\u5168\u90e8\u90fd\u8981\u7528\u5230\u961f\u5217\u6765\u201d\u6309\u5c42\u6269\u5c55\u201c\u3002</p> <p>\u961f\u5217\u4e00\u822c\u652f\u6301\u8fd9\u51e0\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li><code>push(x)</code>\uff1a\u5728\u961f\u5c3e\u52a0\u5165\u5143\u7d20 \\(x\\)\u3002</li> <li><code>pop()</code>\uff1a\u5f39\u51fa\u961f\u5934\u3002</li> <li><code>getfront()</code>\uff1a\u6c42\u961f\u5934\u5143\u7d20\u7684\u503c\u3002</li> <li><code>getback()</code>\uff1a\u6c42\u961f\u5c3e\u5143\u7d20\u7684\u503c\u3002</li> </ul> <p>\u5982\u679c\u62ff\u6570\u7ec4\u6a21\u62df\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u62ff\u4e24\u4e2a\u6307\u9488\u8bb0\u5f55\u5934\u5c3e\u5373\u53ef\uff1a</p> <pre><code>int q[si], ql = 1, qr = 0;\uff08\u8fd9\u79cd\u5199\u6cd5\uff0c\u5728\u5355\u8c03\u961f\u5217\u91cc\u9762\u4f1a\u63d0\u5230\u4e3a\u5565\uff09\n\nvoid push(int x) { q[++qr] = x;}\nvoid pop(int x) { ql++; }\nint getfront() { return q[ql]; }\nint getback() { return q[qr]; } int clear() { ql = 1, qr = 0; }\n</code></pre> <p>\u4f60\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e00\u76f4\u5728\u540e\u79fb\u7684\uff0c\u4e45\u4e86\u4e4b\u540e\u961f\u5217\u7684\u5b9e\u9645\u5927\u5c0f\u4f1a\u7f29\u6c34\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a \\(0\\) \u548c \\(\\text{SIZE} - 1\\) \u8fde\u8d77\u6765\uff08\u5982\u679c\u4ece \\(1\\) \u8fde\u5230 \\(\\text{SIZE}\\)\uff0c\u8fd0\u7b97\u4f1a\u53d8\u9ebb\u70e6\uff09\uff0c\u4e32\u6210\u4e00\u4e2a\u73af\uff0c\u6b64\u65f6 \\(ql,qr\\) \u7684\u521d\u503c\u4e5f\u8981\u76f8\u5e94\u6539\u53d8\u3002</p> <p>\u8fd9\u73a9\u610f\u513f\u5c31\u662f\u5faa\u73af\u961f\u5217\uff0c\u6b64\u65f6\u7684 <code>++x</code> \u8fd0\u7b97\u88ab\u91cd\u65b0\u5b9a\u4e49\u4e3a\u4e86 \\(x = (x + 1) \\mod \\text{SIZE}\\)</p> <p>\u6216\u8005\u4f7f\u7528 STLqueue:</p> <pre><code>std::queue&lt;int&gt;q;\n\nq.push(1), q.push(3); // \u63d2\u5165\ncout &lt;&lt; q.front() &lt;&lt; \" \" &lt;&lt; q.back() &lt;&lt; endl;\nq.pop(), q.pop(); // \u5f39\u51fa\n\nint sz = int(q.size()) // \u6c42\u5176\u5927\u5c0f\nbool ept = q.empty() // \u662f\u5426\u4e3a\u7a7a\n</code></pre>"}, {"location": "algor/ds/queue/#_2", "title": "\u5e94\u7528", "text": ""}, {"location": "algor/ds/queue/#_3", "title": "\u53cc\u7aef\u961f\u5217", "text": "<p>\u5c31\u662f\u4e24\u8fb9\u90fd\u80fd\u51fa\u80fd\u8fdb\u7684\u961f\u5217\u3002</p> <p>\u7528 STLdeque \u5c31\u884c\u4e86\uff0c\u4e5f\u53ef\u624b\u5199\uff08\u56e0\u4e3a deque \u6709\u65f6\u5e38\u6570\u592a\u5927\u3002\uff09</p> <ul> <li>\u5143\u7d20\u8bbf\u95ee</li> <li><code>q.front()</code> \u8fd4\u56de\u961f\u9996\u5143\u7d20</li> <li><code>q.back()</code> \u8fd4\u56de\u961f\u5c3e\u5143\u7d20</li> <li>\u4fee\u6539</li> <li><code>q.push_back()</code> \u5728\u961f\u5c3e\u63d2\u5165\u5143\u7d20</li> <li><code>q.pop_back()</code> \u5f39\u51fa\u961f\u5c3e\u5143\u7d20</li> <li><code>q.push_front()</code> \u5728\u961f\u9996\u63d2\u5165\u5143\u7d20</li> <li><code>q.pop_front()</code> \u5f39\u51fa\u961f\u9996\u5143\u7d20</li> <li><code>q.insert()</code> \u5728\u6307\u5b9a\u4f4d\u7f6e\u524d\u63d2\u5165\u5143\u7d20\uff08\u4f20\u5165\u8fed\u4ee3\u5668\u548c\u5143\u7d20\uff09</li> <li><code>q.erase()</code> \u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\uff08\u4f20\u5165\u8fed\u4ee3\u5668\uff09</li> <li>\u5bb9\u91cf</li> <li><code>q.empty()</code> \u961f\u5217\u662f\u5426\u4e3a\u7a7a</li> <li><code>q.size()</code> \u8fd4\u56de\u961f\u5217\u4e2d\u5143\u7d20\u7684\u6570\u91cf</li> </ul>"}, {"location": "algor/ds/queue/#_4", "title": "\u5355\u8c03\u961f\u5217", "text": "<p>\u89c1 \u5355\u8c03\u961f\u5217</p>"}, {"location": "algor/ds/segtree/", "title": "\u7ebf\u6bb5\u6811", "text": ""}, {"location": "algor/ds/segtree/#_2", "title": "\u6cdb\u5316", "text": "<p>\u7ebf\u6bb5\u6811\u662f\u4e00\u79cd\u5e38\u7528\u7684\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u5b83\u8981\u6c42\u6240\u7ef4\u62a4\u7684\u4fe1\u606f\u5177\u6709\u533a\u95f4\u53ef\u52a0\u6027\uff08\u5bb9\u6613\u6309\u7167\u533a\u95f4\u5212\u5206\uff0c\u5408\u5e76\uff09</p> <p>\u6bd4\u5982 \\(\\sum, \\prod, \\min, \\max\\) \u8fd9\u4e9b\u4fe1\u606f\u3002</p> \u66f4\u4e25\u8c28\u7684\u5b9a\u4e49 <p>\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u4fe1\u606f\u5e94\u5f53\u662f\u4e00\u4e2a\u6ee1\u8db3\u5e7a\u534a\u7fa4\u6027\u8d28\u7684\u4fe1\u606f\u3002</p> <p>\u4e00\u4e2a\u5e7a\u534a\u7fa4 \\(M = (S, \\oplus, e)\\) \u6ee1\u8db3\u8fd9\u4e9b\u6027\u8d28\uff1a</p> <p>\uff08\\(\\oplus\\) \u662f\u5b9a\u4e49\u5728\u96c6\u5408 \\(S\\) \u4e0a\u7684\u4e8c\u5143\u8fd0\u7b97\uff09</p> <ol> <li>\\(\\oplus\\) \u5173\u4e8e \\(S\\) \u5c01\u95ed\u3002</li> <li>\\(\\oplus\\) \u5b58\u5728\u7ed3\u5408\u5f8b\u5373 \\(\\forall a, b, c \\in S, (a \\oplus b) \\oplus c = a\\oplus (b \\oplus c)\\)\u3002</li> <li>\\(\\oplus\\) \u5b58\u5728\u5e7a\u5143\uff0c\u5373 \\(\\exists e \\in S, \\forall x \\in S, (e \\oplus x = x) \\lor (x \\oplus e = x)\\)\u3002</li> </ol> <p>\u4e00\u822c\u652f\u6301\u5355\u70b9\u548c\u533a\u95f4\u7684\u4fe1\u606f\u4fee\u6539\uff0c\u533a\u95f4\u7684\u4fe1\u606f\u67e5\u8be2\u3002</p>"}, {"location": "algor/ds/segtree/#_3", "title": "\u666e\u901a\u7ebf\u6bb5\u6811", "text": "<p>\u7ebf\u6bb5\u6811\u57fa\u4e8e\u5206\u6cbb\u601d\u60f3\uff0c\u5b83\u5148\u5c06\u5e8f\u5217\u4ece\u4e2d\u95f4\u4e00\u5206\u4e3a\u4e8c\uff0c</p> <p>\u7136\u540e\u5bf9\u4e8e\u4ea7\u751f\u7684\u8fd9\u4e24\u6bb5\u533a\u95f4\uff0c\u7ee7\u7eed\u8fdb\u884c\u4ece\u4e2d\u95f4\u4e00\u5206\u4e3a\u4e8c\u7684\u8fc7\u7a0b\u3002</p> <p>\u76f4\u5230\u6700\u540e\u5206\u51fa\u6765\u7684\u8fd9\u4e00\u6bb5\u533a\u95f4\u957f\u5ea6\u7b49\u4e8e \\(1\\)\u3002</p> <p>\u76f4\u89c2\u7684\u6765\u770b\uff0c\u7ed3\u6784\u5927\u6982\u957f\u8fd9\u6837\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u7ef4\u62a4\u4e86\u5e8f\u5217\u4e0a\u7684\u4e00\u6bb5\u533a\u95f4 \\([l, r]\\)\u3002</p> <p>\u5e76\u4e14\u5bf9\u4e8e\u4e00\u4e2a\u7ef4\u62a4 \\([L, R]\\) \u7684\u8282\u70b9\uff0c\u5b83\u7684\u5de6\u513f\u5b50\u7ef4\u62a4 \\([L,mid]\\)\uff0c\u53f3\u513f\u5b50\u7ef4\u62a4 \\((mid, R]\\)\u3002</p> <p>\u5176\u4e2d \\(mid = \\lfloor \\dfrac{L + R}{2}\\rfloor\\)\u3002</p> <p>\u53bb\u6389\u6700\u540e\u4e00\u5c42\u8282\u70b9\u4e4b\u540e\u7684\u7ebf\u6bb5\u6811\u662f\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u53ef\u4ee5\u5229\u7528\u4e8c\u500d\u6807\u8bb0\u6cd5\u6765\u786e\u5b9a\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u7f16\u53f7\u3002</p> <p>\u5f62\u5f0f\u4e0a\u6765\u8bf4\uff0c\u5bf9\u4e8e\u975e\u53f6\u5b50\u8282\u70b9 \\(p\\)\uff0c\u5176\u5de6\u53f3\u513f\u5b50\u8282\u70b9\u5206\u522b\u662f \\(p \\times 2, p\\times 2 + 1\\)\u3002</p> <p>\u4f46\u662f\u50cf\u4e0a\u56fe\u90a3\u6837\u5b8c\u7f8e\u7684\u7ed3\u6784\u53ea\u4f1a\u5728\u5e8f\u5217\u957f\u5ea6\u7b49\u4e8e \\(2^k\\) \u65f6\u51fa\u73b0\uff0c\u5f88\u591a\u65f6\u5019\u6700\u540e\u4e00\u5c42\u662f\u586b\u4e0d\u6ee1\u7684\uff0c\u7ef4\u62a4\u533a\u95f4\u957f\u5ea6\u4e3a \\(1\\) \u7684\u8282\u70b9\u53ef\u80fd\u4f1a\u8dd1\u5230\u5012\u6570\u7b2c\u4e8c\u5c42\u53bb\u3002</p> <p>\u6bd4\u5982\u8fd9\u6837\uff08\u56fe\u4e2d\u6709\u4e9b\u6807\u6ce8\u7684\u533a\u95f4\u662f\u95ed\u533a\u95f4\uff0c\u6709\u4e9b\u662f\u5f00\u533a\u95f4\uff0c\u4f46\u65e0\u4f24\u5927\u96c5\uff09\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u540e\u4e00\u5c42\u7684\u90a3\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\u5e94\u5f53\u4e3a \\(31\\)\uff0c\u5f53 \\(n\\) \u589e\u5927\u65f6\uff0c\u8fd9\u4e2a\u6570\u5b57\u4f1a\u8d8a\u6765\u8d8a\u63a5\u8fd1 \\(4 \\times n\\)\u3002</p> <p>\u6240\u4ee5\u5f00 \\(4\\) \u500d\u7a7a\u95f4\u662f\u5fc5\u8981\u64cd\u4f5c\uff0c\u4e25\u8c28\u8bc1\u660e\u53ef\u4ee5\u81ea\u67e5\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u8ba9\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4\u4ee5\u4e0b\u7684\u4fe1\u606f\u5373\u53ef\uff1a</p> <ul> <li>\u5b83\u7ef4\u62a4\u7684\u533a\u95f4 \\(l, r\\)\u3002</li> <li>\u5b83\u7ef4\u62a4\u7684\u4fe1\u606f\u7684\u503c \\(dat\\)\u3002</li> </ul> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\u4f7f\u7528\u7ed3\u6784\u4f53\u7ef4\u62a4\uff0c\u65b9\u4fbf\u6a21\u5757\u5316\u7684\u7f16\u5199\u548c\u8c03\u8bd5\u3002</p>"}, {"location": "algor/ds/segtree/#_4", "title": "\u57fa\u672c\u64cd\u4f5c", "text": ""}, {"location": "algor/ds/segtree/#_5", "title": "\u4e0a\u4f20\u4fe1\u606f", "text": "<p>\u8fd9\u4e2a\u64cd\u4f5c\u7528\u4e8e\u628a\u513f\u5b50\u8282\u70b9\u7684\u4fe1\u606f\u4e0a\u4f20\u5230\u7236\u4eb2\u8282\u70b9\u3002</p> <p>\u56e0\u4e3a\u4e00\u822c\u7684\u7ebf\u6bb5\u6811\u90fd\u662f\u81ea\u5e95\u5411\u4e0a\u66f4\u65b0\uff0c\u6240\u4ee5\u9700\u8981\u8fd9\u6837\u7684\u4e00\u4e2a\u6b65\u9aa4\u3002</p> <p>\u5c31\u662f\u76f4\u63a5\u628a\u5de6\u53f3\u513f\u5b50\u7684\u4fe1\u606f\u62c9\u4e0a\u6765\u5230\u7236\u4eb2\u8282\u70b9\u3002</p> <p>\u6839\u636e\u7ef4\u62a4\u4fe1\u606f\u7684\u4e0d\u540c\u505a\u4e00\u70b9\u4fee\u6539\u5c31\u884c\u3002</p> <p>\u8fd9\u4e2a\u4e00\u822c\u53d6\u51b3\u4e8e\u8be2\u95ee\u95ee\u7684\u662f\u4ec0\u4e48\uff0c\u5982\u679c\u95ee\u548c\u5c31\u662f\u52a0\u8d77\u6765\uff0c\u5982\u679c\u95ee\u6700\u503c\u5c31\u662f\u53d6\u6700\u503c\u3002</p> Code <pre><code>inline void pushup(int p) {\nt[p].dat_sum = t[p &lt;&lt; 1].dat_sum + t[p &lt;&lt; 1 | 1].dat_sum; // sum\nt[p].dat_min = min(t[p &lt;&lt; 1].dat_min, t[p &lt;&lt; 1 | 1].dat_min); // min \n}\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u662f\u628a lson \u7684\u4fe1\u606f\u548c rson \u7684\u4fe1\u606f\u5408\u5e76\u8d77\u6765\uff0c\u5370\u8bc1\u4e86\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u4fe1\u606f\u5e94\u5f53\u6ee1\u8db3\u7ed3\u5408\u5f8b\u3002</p>"}, {"location": "algor/ds/segtree/#_6", "title": "\u5efa\u6811", "text": "<p>\u8fd9\u4e2a\u64cd\u4f5c\u7528\u4e8e\u786e\u5b9a\u7ebf\u6bb5\u6811\u7684\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u533a\u95f4\uff0c\u5e76\u5c06\u7ebf\u6bb5\u6811\u521d\u59cb\u5316\u4e3a\u6700\u521d\u72b6\u6001\u3002</p> <p>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5de6\u53f3\u513f\u5b50\u5206\u522b\u9012\u5f52\u4e0b\u53bb\uff0c\u540c\u6b65\u8bb0\u5f55\u4e24\u4e2a\u503c \\(l, r\\)\uff0c\u8868\u793a\u5f53\u524d\u8282\u70b9\u5e94\u8be5\u7ef4\u62a4\u7684\u533a\u95f4\u3002</p> <p>\u5f53\u9012\u5f52\u5230\u4e00\u4e2a\u8282\u70b9 \\(p\\) \u7684\u65f6\u5019\uff0c\u4ee4 \\(\\text{t[p].l} \\gets l, \\text{t[p].r} \\gets r\\) \u5373\u53ef\u3002</p> <p>\u5f53\u9012\u5f52\u5230\u53f6\u5b50\u8282\u70b9\u7684\u65f6\u5019\uff0c\u4ee4\u8fd9\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u4fe1\u606f\u4e3a \\(a_l\\)\uff0c\u7136\u540e\u8fd4\u56de\uff0c\u4e0d\u65ad\u4e0a\u4f20\u4fe1\u606f\u5373\u53ef\u3002</p> <pre><code>void build(int p, int l, int r) {\nt[p].l = l, t[p].r = r;\nif(l == r) {\nt[p].dat_sum = a[l];\nt[p].dat_min = a[l];\nreturn;\n}\nint mid = (l + r) &gt;&gt; 1;\nbuild(p &lt;&lt; 1, l, mid), build(p &lt;&lt; 1 | 1, mid + 1, r);\npushup(p); return;\n}\n</code></pre>"}, {"location": "algor/ds/segtree/#_7", "title": "\u5355\u70b9\u4fee\u6539", "text": "<p>\u8fd9\u4e2a\u64cd\u4f5c\u7528\u4e8e\u4fee\u6539\u67d0\u4e00\u4e2a\u4f4d\u7f6e \\(x\\) \u7684\u503c\u4e3a \\(v\\)\u3002</p> <p>\u53ef\u4ee5\u7c7b\u6bd4\u5efa\u6811\u7684\u8fc7\u7a0b\u3002</p> <p>\u6211\u4eec\u4e00\u76f4\u9012\u5f52\u4e0b\u53bb\uff0c\u627e\u5230\u7ef4\u62a4\u8fd9\u4e2a\u4f4d\u7f6e \\(x\\) \u7684\u8282\u70b9 \\(p\\)\uff0c\u4ee4 \\(\\text{t[p].dat} \\gets v\\)\uff0c\u7136\u540e\u4e0d\u65ad\u4e0a\u4f20\u5373\u53ef\u3002</p> <p>\u627e \\(x\\) \u53ea\u9700\u8981\u6bd4\u8f83 \\(x\\) \u548c \\(mid\\) \u7684\u5927\u5c0f\u3002</p> <p>\u5982\u679c \\(x \\le mid\\)\uff0c\u8bf4\u660e\u4ed6\u5728\u5de6\u5b50\u6811\uff0c\u53cd\u4e4b\u5728\u53f3\u5b50\u6811\uff0c\u9012\u5f52\u4e0b\u53bb\u5373\u53ef\u3002 </p> Code <pre><code>void modify(int p, int x, int v) {\nif(l == r) {\nt[p].dat_sum = v;\nt[p].dat_min = v;\nreturn;  }\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(x &lt;= mid)\nmodify(p &lt;&lt; 1, x, v);\nelse modify(p &lt;&lt; 1 | 1, x, v);\npushup(p); return;\n}\n</code></pre>"}, {"location": "algor/ds/segtree/#_8", "title": "\u533a\u95f4\u67e5\u8be2", "text": "<p>\u8fd9\u4e2a\u64cd\u4f5c\u7528\u4e8e\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4 \\([ql, qr]\\) \u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u533a\u95f4\u548c\u6216\u8005\u533a\u95f4\u6700\u503c\u3002</p> <p>\u8fd8\u662f\u4ece\u6839\u8282\u70b9\u9012\u5f52\u4e0b\u53bb\uff0c\u8bbe \\(nl = \\text{t[p].l}, nr = \\text{t[p].r}\\)\u3002</p> <p>\u7136\u540e\u5982\u679c\u5f53\u524d\u8282\u70b9 \\(p\\) \u6ee1\u8db3 \\([nl, nr] \\subset [ql, qr]\\)\u3002</p> <p>\u90a3\u4e48\u5c31\u4e0d\u7528\u9012\u5f52\u4e0b\u53bb\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u7684\u4fe1\u606f\u5373\u53ef\uff08\u8fd9\u662f\u4e00\u4e2a\u6709\u7528\u7684\u5c0f\u526a\u679d\uff09\u3002</p> <p>\u5426\u5219\u5206\u5272\u9012\u5f52\u4e0b\u53bb\uff0c\u9012\u5f52\u56de\u6765\u4e4b\u540e\u628a\u5de6\u53f3\u5b50\u6811\u7684\u7b54\u6848\u5206\u522b\u5408\u5e76\uff0c\u7136\u540e\u8fd4\u56de\u8fd9\u4e2a\u503c\u5373\u53ef\u3002</p> \u4e00\u5f20\u56fe\u7406\u89e3\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b <p></p> <p>\u8282\u70b9\u6807\u9519\u4e86\uff0c\u51d1\u5408\u7740\u770b\uff0c\u4ee5\u540e\u6709\u65f6\u95f4\u518d\u6539\u3002</p> <p>\u89e3\u91ca\uff1a</p> <ul> <li> <p>\u5148\u67e5\u8be2 \\([2,6]\\)\uff0c\u8bbf\u95ee\u5230\u8282\u70b9 \\(1\\)\uff0c\u53d1\u73b0\u4e0d\u6ee1\u8db3 \\([nl, nr] \\subset [ql, qr]\\)\uff0c\u4e8e\u662f\u5411\u4e0b\u9012\u5f52\uff0c\u56e0\u4e3a \\(2(ql) \\le 4(mid)\\)\uff0c\u6240\u4ee5\u5de6\u513f\u5b50    \\(2\\) \u9012\u5f52\u4e0b\u53bb\uff0c\u56e0\u4e3a \\(6(qr) &gt; 4(mid)\\)\uff0c\u6240\u4ee5\u53f3\u513f\u5b50 \\(4\\) \u53f7\u8282\u70b9\u4e5f\u8981\u9012\u5f52\u4e0b\u53bb\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(2\\) \u53f7\u8282\u70b9\uff0c\u53d1\u73b0\u4ecd\u65e7\u4e0d\u6ee1\u8db3 \\([nl, nr] \\subset [ql, qr]\\)\uff0c\u6240\u4ee5\u7ee7\u7eed\u5411\u4e0b\u9012\u5f52 \\(5,6\\) \u53f7\u8282\u70b9\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(5\\) \u53f7\u8282\u70b9\uff0c\u53d1\u73b0 \\(2(ql) \\le 1(mid)\\) \u4e0d\u6210\u7acb\uff0c\u4e0d\u9012\u5f52\uff0c\u53d1\u73b0 \\(6(qr) &gt; 1(mid)\\) \u6210\u7acb\uff0c\u6240\u4ee5\u9012\u5f52 \\(10\\)\uff0c\u53d1\u73b0 \\(10\\) \u53f7\u8282\u70b9\u6ee1\u8db3\u4e86 \\([nl, nr] \\subset [ql, qr]\\)\uff0c\u76f4\u63a5\u8fd4\u56de\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(6\\) \u53f7\u8282\u70b9\uff0c\u53d1\u73b0 \\([nl, nr] \\subset [ql, qr]\\)\uff0c\u76f4\u63a5\u8fd4\u56de\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(4\\) \u53f7\u8282\u70b9\uff0c\u53d1\u73b0\u53ea\u6ee1\u8db3 \\(2(ql) \\le 6(mid)\\)\uff0c\u6240\u4ee5\u53ea\u9012\u5f52 \\(7\\) \u53f7\u8282\u70b9\uff0c\u7136\u540e\u53d1\u73b0 \\(7\\) \u6ee1\u8db3 \\([nl, nr] \\subset [ql, qr]\\)\uff0c\u76f4\u63a5\u8fd4\u56de\u3002</p> </li> <li> <p>\u7136\u540e\u67e5\u8be2\u5c31\u505a\u5b8c\u4e86\u3002</p> </li> </ul> \u8fd9\u4e2a\u5c0f\u526a\u679d\u7684\u590d\u6742\u5ea6\u8bc1\u660e <p>\u6ce8\u610f\u5230\u4e00\u4e2a\u4e8b\u5b9e\u662f\uff0c\u6bcf\u4e00\u5c42\u4e0d\u6ee1\u8db3 \\([nl, nr] \\subset [ql, qr]\\) \u7684\u8282\u70b9\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u3002</p> <p>\u4e3a\u4ec0\u4e48\u5462\uff1f\u8003\u8651\u53cd\u8bc1\u6cd5\uff0c\u5047\u8bbe\u67d0\u4e00\u5c42\u51fa\u73b0\u4e86\u4e09\u4e2a\u8282\u70b9\u90fd\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u7531\u4e8e\u533a\u95f4\u662f\u8fde\u7eed\u7684\uff0c\u8fd9\u4e09\u4e2a\u8282\u70b9\u5fc5\u7136\u662f\u8fde\u7eed\u7684\u3002</p> <p>\u7136\u540e\u65e2\u7136\u662f\u8fde\u7eed\u7684\uff0c\u90a3\u4e48\u81f3\u5c11\u6709\u4e24\u4e2a\u533a\u95f4\u7684\u5e76\u96c6\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u7684\u5927\u533a\u95f4\uff0c\u90a3\u4e48\u5b9e\u9645\u8bbf\u95ee\u5230\u8fd9\u4e2a\u5927\u533a\u95f4\u7684\u65f6\u5019\u5c31\u5e94\u8be5\u8fd4\u56de\u4e86\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u8bc1\u4f2a\u4e86\u3002</p> <p>\u90a3\u4e48\u56e0\u4e3a\u7ebf\u6bb5\u6811\u7684\u6df1\u5ea6\u662f \\(O(\\log n)\\) \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7684\u590d\u6742\u5ea6\u662f \\(O(\\log n)\\) \u7684\uff0c\u5e26\u4e00\u4e2a\u56db\u500d\u5e38\u6570\u3002</p> Code <pre><code>i64 query_sum(int p, int l, int r) {\ni64 res = 0;\nif(l &lt;= t[p].l &amp;&amp; t[p].r &lt;= r) return t[p].dat_sum;\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(l &lt;= mid) res += query_sum(p &lt;&lt; 1, l, r);\nif(r &gt; mid)\nres += query_sum(p &lt;&lt; 1 | 1, l, r);\nreturn res; }\n\ni64 query_min(int p, int l, int r) {\ni64 res = inf;\nif(l &lt;= t[p].l &amp;&amp; t[p].r &lt;= r) return t[p].dat_min;\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(l &lt;= mid) res = min(res, query_sum(p &lt;&lt; 1, l, r));\nif(r &gt; mid)\nres = min(res, query_sum(p &lt;&lt; 1 | 1, l, r));\nreturn res; }\n</code></pre> <p>\u7b54\u6848\u6709\u53ef\u80fd\u8981\u4ece\u4e24\u8fb9\u4e00\u8d77\u53d6\u8fc7\u6765\uff0c\u6240\u4ee5\u4e5f\u80fd\u8bc1\u660e\u8fd0\u7b97\u9700\u8981\u6ee1\u8db3\u7ed3\u5408\u5f8b\u3002</p>"}, {"location": "algor/ds/segtree/#_9", "title": "\u5ef6\u8fdf\u6807\u8bb0", "text": "<p>\u8003\u8651\u5982\u679c\u533a\u95f4\u52a0\u533a\u95f4\u548c\u600e\u4e48\u529e\u3002</p> <p>\u663e\u7136\u5982\u679c\u76f4\u63a5\u66b4\u529b\u9012\u5f52\u5230\u533a\u95f4\u91cc\u7684\u6bcf\u4e2a\u6570\u5bf9\u5e94\u7684\u53f6\u5b50\u8282\u70b9\u7136\u540e\u5411\u4e0a\u66f4\u65b0\uff0c\u590d\u6742\u5ea6\u663e\u7136\u4e0d\u80fd\u63a5\u53d7\uff0c\u5355\u6b21\u64cd\u4f5c\u5c31\u662f \\(O(n \\log n)\\) \u7684\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u6709\u7684\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u9012\u5f52\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u7c7b\u4f3c\u533a\u95f4\u67e5\u8be2\u7684\u90a3\u4e2a\u5c0f\u526a\u679d\uff0c\u6211\u4eec\u5982\u679c\u9012\u5f52\u5230\u4e00\u4e2a\u88ab\u8be2\u95ee\u533a\u95f4\u5b8c\u6574\u5305\u542b\u7684\u8282\u70b9\uff0c\u76f4\u63a5\u5728\u4e0a\u9762\u6253\u4e00\u4e2a\u201c\u6807\u8bb0\u201d\uff0c\u8868\u793a\u6211\u6446\u70c2\u4e86\uff0c\u4e0d\u5f80\u4e0b\u66f4\u65b0\u4e86\uff0c\u5148\u7ed9\u513f\u5b50\u8282\u70b9\u6b20\u7740\u8fd9\u4e2a\u66f4\u65b0\uff0c\u7b49\u4ee5\u540e\u9700\u8981\u7528\u5230\u7684\u65f6\u5019\u518d\u628a\u6807\u8bb0 \\(O(1)\\) \u4e0b\u653e\u7ed9\u513f\u5b50\u3002</p> <p>\u5176\u672c\u8d28\u662f\uff0c\u6211\u5982\u679c\u8981\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u66f4\u65b0\uff0c\u6211\u9996\u5148\u8981\u7528\u5b83\u7236\u4eb2\u7684 tag \u66f4\u65b0\u5b83\u7684\u6743\u503c\u518d\u8003\u8651\u5bf9\u4ed6\u8fdb\u884c\u66f4\u65b0\u3002</p> <p>\u5148\u628a\u5b83\u7236\u4eb2\u8282\u70b9\u7684 tag \u5168\u90e8 pushdown \u4e0b\u6765\uff08\u5229\u7528\u7ed3\u5408\u5f8b\uff09\uff0c\u518d\u628a\u65b0\u7684 tag \uff08\u5b83\u5bf9\u4e8e\u5b83\u7684\u513f\u5b50\u7684\uff09\u7528\u7ed3\u5408\u5f8b\u4e5f\u6253\u5230\u5b83\u8eab\u4e0a\uff0c\u3002</p> <p>\u8fd9\u4f53\u73b0\u7684\u5c31\u662f\u4e00\u4e2a \u201c\u65f6\u95f4\u4e0a\u7684\u7ed3\u5408\u5f8b\u201d\uff0c\u6211\u662f\u5148\u6709\u4e86\u7236\u4eb2\u8282\u70b9\u6b20\u7684\u66f4\u65b0\uff0c\u518d\u6709\u4e86\u73b0\u5728\u65b0\u6765\u7684\u66f4\u65b0\uff0c\u6211\u7684 tag \u4e5f\u662f\uff0c\u5148\u6709\u4e86\u7236\u4eb2\u6b20\u5b50\u6811\u4e0b\u653e\u5230\u6211\u8fd9\u91cc\u7684 tag\uff0c\u518d\u6709\u6211\u73b0\u5728\u6b20\u6211\u7684\u513f\u5b50\uff08\u5b50\u6811\uff09\u7684 tag\u3002</p> <p>\u7c7b\u4f3c\u4e0a\u9762\u533a\u95f4\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u8bc1\u660e\uff0c\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u64cd\u4f5c\u662f\u5355\u6b21 \\(O(n \\log n)\\) \u7684\u3002</p> Code <pre><code>int len(int p) { return t[p].r - t[p].l + 1; }\nvoid pushdown(int p) {\nif(t[p].add) {\nt[p &lt;&lt; 1].dat += (t[p].add * len(p &lt;&lt; 1));\nt[p &lt;&lt; 1 | 1].dat += (t[p].add * len(p &lt;&lt; 1 | 1));\nt[p &lt;&lt; 1].minv += t[p].add, t[p &lt;&lt; 1 | 1].minv += t[p].add; // \u6c34\u4f4d\u7ebf\u539f\u7406\nt[p &lt;&lt; 1].add += t[p].add, t[p &lt;&lt; 1 | 1].add += t[p].add;\nt[p].add = 0; // \u8bbe\u7f6e\u4e3a Z \u5173\u4e8e\u52a0\u6cd5\u7684\u5e7a\u5143 0.\n}\n}\n</code></pre> Luogu3372 \u7ebf\u6bb5\u68111 <p>\u533a\u95f4\u52a0\u533a\u95f4\u6c42\u548c\uff0c</p> <p>\\(1\\le n \\le 10^5, 1\\le a_i \\le 2^{63} - 1\\)\u3002</p> <p>\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u677f\u5b50\u9898\uff0c\u5199\u4e00\u4e2a\u6709 lazytag \u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u5f00 <code>long long</code>\u3002</p> Code <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint n, m;\ni64 a[si];\n\nclass Segment_Tree {\nprivate : struct Node {\nint l, r;\ni64 dat, tag;\n}t[si &lt;&lt; 2];\ninline void pushup(int p) {\nt[p].dat = t[p &lt;&lt; 1].dat + t[p &lt;&lt; 1 | 1].dat; }\ninline void pushdown(int p) {\nif(!t[p].tag) return;\nt[p &lt;&lt; 1].dat += 1ll * t[p].tag * (t[p &lt;&lt; 1].r - t[p &lt;&lt; 1].l + 1);\nt[p &lt;&lt; 1 | 1].dat += 1ll * t[p].tag * (t[p &lt;&lt; 1 | 1].r - t[p &lt;&lt; 1 | 1].l + 1);\nt[p &lt;&lt; 1].tag += t[p].tag, t[p &lt;&lt; 1 | 1].tag += t[p].tag, t[p].tag = 0;\n}\npublic :\nvoid build(int p, int l, int r) {\nt[p].l = l, t[p].r = r, t[p].tag = 0;\nif(l == r) {\nt[p].dat = a[l];\nreturn;\n}\nint mid = (l + r) &gt;&gt; 1;\nbuild(p &lt;&lt; 1, l, mid), build(p &lt;&lt; 1 | 1, mid + 1, r);\npushup(p); return;\n}\nvoid update(int p, int l, int r, int v) {\nif(l &lt;= t[p].l &amp;&amp; t[p].r &lt;= r) {\nt[p].dat += v * (t[p].r - t[p].l + 1);\nt[p].tag += v; return;\n}\npushdown(p); // \u6ca1\u5230\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u9a6c\u4e0a\u8981\u9012\u5f52\u5b50\u6811\u4e86\uff0c\u4e5f\u8981 pushdown\u3002\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(l &lt;= mid) update(p &lt;&lt; 1, l, r, v);\nif(r &gt; mid) update(p &lt;&lt; 1 | 1, l, r, v);\npushup(p); return;\n} i64 query(int p, int l, int r) {\ni64 res = 0;\nif(l &lt;= t[p].l &amp;&amp; t[p].r &lt;= r)\nreturn t[p].dat;\npushdown(p); // \u67e5\u8be2\u8981\u67e5\u503c\uff0c\u9700\u8981\u5b50\u6811\u4fe1\u606f\uff0c\u5fc5\u7136\u8981 pushdown\u3002\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(l &lt;= mid) res += query(p &lt;&lt; 1, l, r);\nif(r &gt; mid)\nres += query(p &lt;&lt; 1 | 1, l, r);\nreturn res;\n}\n};\n\nSegment_Tree tr;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\ntr.build(1, 1, n);\nfor(int i = 1; i &lt;= m; ++i) {\nint opt, l, r;\ni64 v;\ncin &gt;&gt; opt;\nif(opt == 1) {\ncin &gt;&gt; l &gt;&gt; r &gt;&gt; v;\ntr.update(1, l, r, v);\n}\nelse {\ncin &gt;&gt; l &gt;&gt; r;\ncout &lt;&lt; tr.query(1, l, r) &lt;&lt; endl;\n}\n}\n\nreturn 0;\n}\n</code></pre> <p>\u8fd9\u53ea\u662f\u4e00\u4e2a tag \u7684\u60c5\u51b5\uff0c\u8fd8\u53ef\u80fd\u6709\u591a\u4e2a tag\uff0c\u601d\u8003\u4e00\u4e0b\u600e\u4e48\u5f04\u3002</p> <p>\u4e00\u5b9a\u8981\u6ce8\u610f\u5230\u4e00\u4e2a\u4e8b\u60c5\uff0c\u7ebf\u6bb5\u6811\u672c\u8d28\u4e0a\u662f\u5728\u7ef4\u62a4\u4e00\u4e2a\u6ee1\u8db3\u5e7a\u534a\u7fa4\u6027\u8d28\u7684\u4fe1\u606f\uff0c</p> <p>\u5982\u679c\u6211\u4eec\u60f3\u8981\u6253\u591a\u4e2a tag\uff0c\u8fd9\u4e9b tag \u9996\u5148\u5c31\u5fc5\u987b\u5728\u65f6\u95f4\u8f74\u4e0a\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff08\u53ef\u4ee5\u5408\u5e76\uff09\uff0c\u539f\u56e0\u4e0b\u6587\u4f1a\u63d0\u5230\u3002</p> <p>\u6bd4\u5982\u6211\u4eec\u5148\u6253\u4e86\u4e00\u4e2a\u8fd0\u7b97 \\(\\oplus\\) \u7684\u6807\u8bb0 \\(x_0\\) \u7136\u540e \u6253\u4e86\u4e00\u4e2a \\(\\otimes\\) \u7684\u6807\u8bb0 \\(y_0\\)\uff0c\u5f53\u524d\u8282\u70b9\u5df2\u6709\u7684 tag \u72b6\u6001\u8bb0\u5f55\u4e3a \\((x_0, y_0)\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u53c8\u8fdb\u884c\u4e86\u4e00\u6b21 \\(\\oplus\\) \u7684\u6807\u8bb0 \\(x_1\\)\uff0c\u518d \u8fdb\u884c\u4e86\u4e00\u6b21 \\(\\otimes\\) \u7684\u64cd\u4f5c \\(y_1\\)\uff0c\u8bb0\u5f55\u4e3a \\((x_1,y_1)\\)1\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u77e5\u9053\uff0c\u600e\u4e48\u6837\u5408\u5e76 \\((x_0, y_0), (x_1, y_1)\\)\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u77e5\u9053 \\((x_0, y_0) \\circ (x_1, y_1) = (x_2, y_2)\\) \u4e2d\u7684 \\(x_2, y_2\\) \u5206\u522b\u662f\u4ec0\u4e48\uff0c\u4e14\u6ee1\u8db3\uff1a\u76f4\u63a5\u8003\u8651 \\((x_2, y_2)\\) \u5bf9\u4fe1\u606f\u7684\u4f5c\u7528\u7b49\u4ef7\u4e8e\u8003\u8651\u5148 \\((x_0, y_0)\\) \u5bf9\u4fe1\u606f\u7684\u4f5c\u7528\uff0c\u7136\u540e\u518d\u8003\u8651 \\((x_1, y_1)\\) \u5bf9\u4fe1\u606f\u7684\u4f5c\u7528\uff08\u6807\u8bb0\u4e0d\u9700\u8981\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff09\u3002</p> <p>\\(\\circ\\) \u8868\u793a\u590d\u5408\uff08\u5408\u5e76\uff09\u8fd9\u4e24\u4e2a Tag\uff0c\u8fd9\u91cc\u7684\u4e0b\u6807\u8868\u793a\u7684\u662f\u65f6\u95f4\u8f74\u4e0a\u7684\u4f4d\u7f6e\u3002</p> <p>\u6240\u4ee5\u5176\u5b9e tag \u8981\u5728\u65f6\u95f4\u8f74\u4e0a\u6ee1\u8db3\u7ed3\u5408\u5f8b\u7684\u539f\u56e0\u5c31\u662f\uff0c\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u4e0b\u653e\u4e86\u4e00\u4e2a\u6807\u8bb0 \\(t_3\\)\uff0c\u4e4b\u524d\u6709\u4e00\u4e2a\u6807\u8bb0 \\(t_2\\) \u5728\u5f53\u524d\u8282\u70b9\u4e0a\u3002</p> <p>\u6b64\u65f6 \\(t_3 \\circ t_2\\) \u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f \\(t_2\\) \u53ef\u80fd\u5728\u4e4b\u524d\u7684\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u548c\u524d\u9762\u7684\u6807\u8bb0 \\(t_1\\) \u5408\u5e76\u4e86\uff0c\u800c \\(t_1\\) \u53c8\u6709\u53ef\u80fd\u548c \\(t_0\\) \u5408\u5e76\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u4e0d\u6ee1\u8db3\u65f6\u95f4\u8f74\u4e0a\u7684\u7ed3\u5408\u5f8b\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709 \\((t_2 \\circ t_1) \\circ t_0 \\not= t_2 \\circ (t_1 \\circ t_0)\\)\uff0c\u8868\u73b0\u51fa\u6765\u7684\u7ed3\u679c\u5c31\u662f\uff0c\u5bf9\u4fe1\u606f\u7684\u4f5c\u7528\u6548\u679c\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u4e0d\u80fd\u8fbe\u5230\u8981\u6c42\u3002</p> <p>\u663e\u7136\u4e24\u4e2a tag \u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u53ea\u8003\u8651 \\((x_0, y_0)\\)\uff0c\u8fd9\u4e2a\u6bd4\u8f83 ez\uff0c\u4e0d\u8fc7\u5982\u679c\u4e24\u4e2a tag \u4e4b\u95f4\u76f8\u4e92\u6709\u5f71\u54cd\uff0c\u5c31\u9700\u8981\u8003\u8651 \\((x_0, y_0)\\) \u548c \\((y_0, x_0)\\) \u5230\u5e95\u5e94\u8be5\u9009\u54ea\u4e00\u4e2a\uff08\u8981\u5224\u5b9a\u5148\u505a\u4ec0\u4e48\u8fd0\u7b97\uff09\uff0c\u9009\u62e9\u4f9d\u636e\u662f\u5408\u5e76\u524d\u540e\u7684\u6807\u8bb0\u7684\u987a\u5e8f\u80fd\u5426\u7edf\u4e00\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u533a\u95f4\u52a0\u533a\u95f4\u4e58\u533a\u95f4\u6c42\u548c\u3002</p> <p>\u548c\u7ebf\u6bb5\u6811\u4e00\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u591a\u4e86\u4e00\u4e2a\u9700\u8981\u7ef4\u62a4\u7684\u8fd0\u7b97\uff1a\u4e58\u6cd5\u3002</p> <p>\u6240\u4ee5\u8fd9\u91cc\u5e94\u5f53\u8003\u8651\u7684\u662f\u600e\u4e48\u628a\u4e24\u4e2a\u5404\u81ea\u5c01\u95ed\u53c8\u76f8\u4e92\u6709\u5f71\u54cd\u7684\u4fe1\u606f\u590d\u5408\u8d77\u6765\u7ef4\u62a4\u3002</p> <p>\u8003\u8651\u5982\u679c\u53ea\u6709\u533a\u95f4\u52a0\u533a\u95f4\u6c42\u548c\uff0ctag \u8bb0\u5f55\u7684\u5c31\u662f\u513f\u5b50\u91cc\u9762\u6240\u6709\u6570\u8981\u52a0\u591a\u5c11\u3002</p> <p>\u5982\u679c\u5728\u6765\u4e00\u4e2a\u533a\u95f4\u4e58\u600e\u4e48\u529e\uff0c\u5c31\u8003\u8651\u5bf9\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u590d\u5408\u3002</p> <p>\u6bd4\u5982\u6211\u5148\u4e58 \\(x\\) \u7136\u540e\u52a0\u4e0a\u4e00\u4e2a \\(y\\)\uff0c\u513f\u5b50\u8282\u70b9\u91cc\u7684\u6bcf\u4e2a\u6570 \\(value\\) \u5c31\u5e94\u5f53\u53d8\u6210 \\(value \\times x + y\\)\u3002</p> <p>\u7136\u540e\u5982\u679c\u7ee7\u7eed\u590d\u5408\u5c31\u662f \\((((value \\times x) + y) \\times z) + a\\dots\\) \u8fd9\u6837\uff08\u5148\u52a0\u540e\u4e58\u4e5f\u5df2\u7ecf\u88ab\u5305\u542b\u5728\u60c5\u51b5\u91cc\u9762\u4e86\uff09\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u6ca1\u6cd5\u77e5\u9053\u5177\u4f53\u987a\u5e8f\uff0c\u6709\u53ef\u80fd\u662f \\(++\\times+\\times\\times+++\\)\u8fd9\u79cd\u7684\uff0c\u4f60\u6bcf\u6b21\u8f6c\u6362\u90fd\u9700\u8981\u65b0\u5f00\u4e00\u4e2a tag \u8bb0\u5f55\u3002</p> <p>\u6211\u4eec\u80af\u5b9a\u4e0d\u60f3\u8ba9\u6bcf\u4e2a\u8282\u70b9\u7684 tag \u90fd\u6709\u5de8\u5927\u591a\u4e2a\uff0c\u6211\u4eec\u5e0c\u671b\u5c31\u53ea\u6709\u4e24\u4e2a\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u53ea\u5e0c\u671b\u4e58\u9664\u6cd5\u53d8\u6362\u4e00\u6b21\uff0c\u5373\u628a\u4e58\u90fd\u4e22\u5230\u4e00\u8d77\uff0c\u52a0\u90fd\u4e22\u5230\u4e00\u8d77\u3002</p> <p>\u6240\u4ee5\u89c2\u5bdf\u4e00\u4e0b\u8fd9\u4e2a\u5f0f\u5b50\u5f62\u5f0f\uff0c\u53d1\u73b0\u53ef\u4ee5\u4e58\u6cd5\u5206\u914d\u5f8b\uff0c\u6211\u4eec\u5728\u533a\u95f4\u4e58\u6cd5\u6253\u6807\u8bb0\u7684\u65f6\u5019\u7ed9\u5148\u52a0\u4e0a\u7684 add \u4e58\u4e0a\u540e\u9762\u7684 mul\uff0c\u7136\u540e pushdown \u7684\u65f6\u5019 add \u5c31\u80fd\u5355\u72ec\u62c9\u51fa\u6765\u52a0\u4e86\u3002</p> <p>\u4e0b\u653e\u6807\u8bb0\u7684\u65f6\u5019 add \u9700\u8981\u5148\u4e58\u4e0a\u7236\u4eb2\u8282\u70b9\u7684 mul\uff0c\u7136\u540e\u518d\u52a0\u4e0a\u7236\u4eb2\u8282\u70b9\u7684 add\uff0c\u56e0\u4e3a\u7236\u4eb2\u8282\u70b9\u7684 add \u5728\u533a\u95f4\u4e58\u6253\u6807\u8bb0\u7684\u65f6\u5019\u5df2\u7ecf\u4e58\u8fc7 mul \u4e86\uff0c\u76f4\u63a5\u63d0\u51fa\u6765\u52a0\u5c31\u884c\u4e86\u3002</p> <p>\u66f4\u5f62\u5f0f\u5316\u7684\u8bf4\uff0c\u6211\u4eec\u73b0\u5728\u8bb0\u5f55\u4e86\u4e24\u4e2a tag\uff0c\u4e00\u4e2a\u52a0\u6cd5\uff0c\u4e00\u4e2a\u4e58\u6cd5\uff0c\u6211\u4eec\u8bb0\u4e3a \\((add_i, mul_i)\\)\u3002</p> <p>\u5047\u8bbe\u5f53\u524d\u5df2\u7ecf\u5b58\u5728\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\u4f5c\u7528\u7684\u4e00\u4e2a\u6807\u8bb0 \\((add_0, mul_0)\\)\uff0c\u73b0\u5728\u65b0\u6765\u4e86\u4e00\u4e2a\u6807\u8bb0 \\((add_1, mul_1)\\)\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u6c42\u51fa \\((add_0, mul_0)\\circ (add_1, mul_1)\\)\uff0c\u5e76\u4e14\u8981\u89c4\u5b9a\u597d\u662f\u5148 add \u8fd8\u662f\u5148 mul\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\u8fd9\u91cc\u662f\u5728\u5bf9\u7740\u6574\u4f53\u6253\u6807\u8bb0\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u8003\u8651\u5f53\u524d\u533a\u95f4\u7ef4\u62a4\u7684\u503c\u5728\u52a0\u5165\u65b0\u7684\u6807\u8bb0\u4e4b\u540e\u201c\u600e\u4e48\u53d8\u5316\u201d\u4e86\uff0c\u5e76\u8003\u8651\u600e\u4e48\u5408\u5e76\u539f\u6709\u6807\u8bb0\u548c\u65b0\u52a0\u5165\u7684\u6807\u8bb0\u3002    </p> <p>\u5148\u5047\u8bbe\u5148\u52a0\u540e\u4e58\uff0c\u663e\u7136\u6709\uff1a</p> \\[ \\begin{aligned} dat &amp;= ((dat + add_0) \\times mul_0 + add_1) \\times mul_1\\\\ &amp;= (dat \\times mul_0 + add_0 \\times mul_0 + add_1) \\times mul_1\\\\ &amp;= (dat \\times mul_0 \\times mul_1) + (add_0 \\times mul_0 \\times mul_1) + (add_1 \\times mul_1) \\end{aligned} \\] <p>\u597d\u50cf\u6ca1\u6cd5\u628a\u5408\u5e76\u540e\u7684\u6807\u8bb0\u4e5f\u7edf\u4e00\u987a\u5e8f\uff08\u4e0d\u80fd\u5199\u6210 \\((dat + a)\\times b\\) \u7684\u5f62\u5f0f\uff09\u3002</p> <p>\u770b\u770b \\((mul_0, add_0)\\) \u7684\u987a\u5e8f\u5982\u4f55\u3002</p> \\[ \\begin{aligned} dat &amp;= (dat \\times mul_0 + add_0) \\times mul_1 + add_1\\\\ &amp;= (dat \\times mul_0 \\times mul_1) + (add_0 \\times mul_1 + add_1)\\\\ &amp;= dat \\times (mul_0 \\times mul_1) + (add_0 \\times mul_1 + add_1) \\end{aligned} \\] <p>\u7136\u540e\u53ef\u4ee5\u5f88\u6109\u5feb\u7684\u53d1\u73b0\u80fd\u628a\u5408\u5e76\u540e\u7684\u6807\u8bb0\u7684\u987a\u5e8f\u548c\u5df2\u6709\u7684\u6807\u8bb0\u7684\u987a\u5e8f\u7edf\u4e00\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\uff1a\\((mul_0, add_0) \\circ (mul_1, add_1) = (mul_0 \\times mul_1, add_0 \\times mul_1 + add_1)\\)\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\u5c31\u53ea\u9700\u8981\uff1a\u5bf9\u4e8e\u4e58\u6cd5\u6807\u8bb0\u6211\u76f4\u63a5\u4e58\u4e86\u4e0b\u653e\uff0c\u6253\u4e58\u6cd5\u6807\u8bb0\u7684\u65f6\u5019\u987a\u4fbf\u7ed9\u52a0\u6cd5\u4e58\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u52a0\u6cd5\u6807\u8bb0\u6211\u76f4\u63a5\u5148\u4e58\u4e0a\u7236\u4eb2\u8282\u70b9\u7ed9\u7684 mul\uff0c\u7136\u540e\u518d\u52a0\u4e0a\u7236\u4eb2\u8282\u70b9\u7ed9\u7684 add\uff08\u8fd9\u4e2a\u5728\u4e4b\u524d\u5df2\u7ecf\u4e58\u8fc7\u4e86\uff0c\u4e58\u6cd5\u5206\u914d\u5f8b\uff09\u3002</p> <p>\u5f88\u663e\u7136\u8fd9\u4e2a\u5bf9\u4e8e\u56db\u79cd\u52a0\u6cd5\u4e58\u6cd5\u7684\u7ec4\u5408\u987a\u5e8f\u90fd\u6ee1\u8db3\uff08\u68c0\u67e5\u8fd9\u4e2a tag \u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4fe1\u606f\u7684\u4f5c\u7528\u80fd\u5426\u5904\u7406\uff09\u3002</p> <p>\u52a0\u6cd5\u4e4b\u540e\u52a0\u6cd5\u5c31\u4e0d\u8003\u8651 mul \u7684\u5904\u7406\uff0c\u663e\u7136\u6210\u7acb\u3002\u4e58\u6cd5\u4e4b\u540e\u4e58\u6cd5\u540c\u7406\u3002</p> <p>\u5148\u4e58\u540e\u52a0\u5c31\u662f\u6211\u4eec\u89c4\u5b9a\u7684\u5f62\u5f0f\uff0c\u4e8e\u662f\u770b\u770b\u5148\u52a0\u540e\u4e58\u7684\u60c5\u51b5\u80fd\u4e0d\u80fd\u6ee1\u8db3\uff1a\u53ef\u4ee5\u8003\u8651\u6700\u65e9\u5b58\u5728\u7684\u6807\u8bb0\u662f \\((1, 0)\\)\uff08\u5e7a\u5143\uff09\uff0c\u7136\u540e\u518d\u6253\u4e86\u4e00\u4e2a\u6807\u8bb0 \\((1, add)\\)\uff0c\u518d\u6253\u4e86\u4e00\u4e2a\u6807\u8bb0 \\((mul, 0)\\)\uff0c\u5c55\u5f00\u5f0f\u5b50\u4e4b\u540e\u663e\u7136\u6210\u7acb\u3002</p> <p>\u6240\u4ee5\u8fd9\u79cd tag \u65b9\u5f0f\u662f\u53ef\u884c\u7684\u3002</p> Luogu3373 \u7ebf\u6bb5\u68112 <p>\u533a\u95f4\u52a0\u533a\u95f4\u4e58\uff0c\u8be2\u95ee\u533a\u95f4\u548c\u5bf9 \\(p\\) \u53d6\u6a21\u3002</p> <p>\\(1\\le n, q\\le 10^5\\)\u3002</p> <p>\u5c31\u662f\u521a\u521a\u5df2\u7ecf\u8bf4\u4e86\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u76f4\u63a5\u7ed9\u51fa\u5b9e\u73b0\u3002</p> Code <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n// const i64 mod = 998244353ll;\n\nint mod;\nint n, m;\ni64 a[si];\n\nclass Segment_Tree {\nprivate : struct Node {\nint l, r;\ni64 dat, add, mul;\n}t[si &lt;&lt; 2];\ninline void pushup(int p) {\nt[p].dat = (t[p &lt;&lt; 1].dat + t[p &lt;&lt; 1 | 1].dat) % mod;\n}\ninline void pushdown(int p) {\nif(!t[p].add &amp;&amp; t[p].mul == 1) return;\nt[p &lt;&lt; 1].dat = (t[p &lt;&lt; 1].dat * t[p].mul + t[p].add * (t[p &lt;&lt; 1].r - t[p &lt;&lt; 1].l + 1)) % mod   ;\nt[p &lt;&lt; 1 | 1].dat = (t[p &lt;&lt; 1 | 1].dat * t[p].mul + t[p].add * (t[p &lt;&lt; 1 | 1].r - t[p &lt;&lt; 1 | 1].l + 1)) % mod;\n\nt[p &lt;&lt; 1].mul = (t[p &lt;&lt; 1].mul * t[p].mul) % mod;\nt[p &lt;&lt; 1 | 1].mul = (t[p &lt;&lt; 1 | 1].mul * t[p].mul) % mod;\n\nt[p &lt;&lt; 1].add = (t[p &lt;&lt; 1].add * t[p].mul + t[p].add) % mod;\nt[p &lt;&lt; 1 | 1].add = (t[p &lt;&lt; 1 | 1].add * t[p].mul + t[p].add) % mod;\n\nt[p].add = 0, t[p].mul = 1;\n}\npublic : void build(int p, int l, int r) {\nt[p].l = l, t[p].r = r, t[p].mul = 1ll, t[p].add = 0ll;\nif(l == r) {\nt[p].dat = a[l] % mod;\nreturn;\n}\nint mid = (l + r) &gt;&gt; 1;\nbuild(p &lt;&lt; 1, l, mid), build(p &lt;&lt; 1 | 1, mid + 1, r);\npushup(p); return;\n}\nvoid update_add(int p, int l, int r, i64 v) {\nif(l &lt;= t[p].l &amp;&amp; t[p].r &lt;= r) {\nt[p].add = (t[p].add + v) % mod;\nt[p].dat = (t[p].dat + v * (t[p].r - t[p].l + 1)) % mod;\nreturn;\n}\npushdown(p);\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(l &lt;= mid)\nupdate_add(p &lt;&lt; 1, l, r, v);\nif(r &gt; mid)\nupdate_add(p &lt;&lt; 1 | 1, l, r, v); pushup(p); return;\n}\nvoid update_mul(int p, int l, int r, i64 v) {\nif(l &lt;= t[p].l &amp;&amp; t[p].r &lt;= r) {\nt[p].add = (t[p].add * v) % mod;\nt[p].mul = (t[p].mul * v) % mod;\nt[p].dat = (t[p].dat * v) % mod;\nreturn;\n}\npushdown(p);\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(l &lt;= mid) update_mul(p &lt;&lt; 1, l, r, v);\nif(r &gt; mid)\nupdate_mul(p &lt;&lt; 1 | 1, l, r, v);\npushup(p); return;\n}\ni64 query(int p, int l, int r) {\ni64 res = 0ll;\nif(l &lt;= t[p].l &amp;&amp; t[p].r &lt;= r)\nreturn t[p].dat % mod;\npushdown(p);\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(l &lt;= mid) res = (res + query(p &lt;&lt; 1, l, r)) % mod;\nif(r &gt; mid)\nres = (res + query(p &lt;&lt; 1 | 1, l, r)) % mod;\nreturn res;\n}\n};\n\nSegment_Tree tr;\n// \u4e0d\u8981\u5230\u4e3b\u51fd\u6570\u91cc\u5b9a\u4e49\uff0c\u5bb9\u6613\u7206\u6808\u3002\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; mod;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\n\ntr.build(1, 1, n);\nfor(int i = 1; i &lt;= m; ++i) {\nint opt, l, r;\ncin &gt;&gt; opt;\nif(opt == 2) {\ni64 v;\ncin &gt;&gt; l &gt;&gt; r &gt;&gt; v;\ntr.update_add(1, l, r, v);\n}\nif(opt == 1) {\ni64 v;\ncin &gt;&gt; l &gt;&gt; r &gt;&gt; v;\ntr.update_mul(1, l, r, v);\n}\nif(opt == 3) {\ncin &gt;&gt; l &gt;&gt; r;\ncout &lt;&lt; tr.query(1, l, r) &lt;&lt; endl;\n}\n}\n\nreturn 0;\n}\n</code></pre> <p>\u603b\u7ed3\u4e00\u4e0b\uff0c\u5e26 lazy \u7684\u7ebf\u6bb5\u6811\u9898\u4e00\u822c\u5c31\u8fd9\u51e0\u6b65\uff1a</p> <ol> <li>\u5982\u679c\u7ed9\u4e00\u4e2a\u533a\u95f4\u6574\u4f53\u6253\u4e0a\u6807\u8bb0\uff0c\u80fd\u5426\u786e\u5b9a\u533a\u95f4\u7ef4\u62a4\u7684\u503c\u600e\u4e48\u53d8\u5316</li> <li>\u5982\u679c\u7ed9\u4e00\u4e2a\u533a\u95f4\u6574\u4f53\u6253\u4e0a\u6807\u8bb0\uff0c\u80fd\u5426\u786e\u5b9a tag \u600e\u4e48\u5408\u5e76\u3002</li> <li>\u5f62\u5f0f\u5316\u7684\u8bf4\uff0c\u61d2\u6807\u8bb0\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u4fe1\u606f\u5e7a\u534a\u7fa4 \\((I, +)\\) \u548c\u5bf9\u4fe1\u606f\u7684\u4fee\u6539\u5e7a\u534a\u7fa4 \\((D, *)\\)\uff0c\u8981\u6c42 \\(D\\) \u5bf9 \\(I\\) \u7684\u4f5c\u7528\u6ee1\u8db3\u5206\u914d\u7387\u3002</li> </ol> <p>ref\uff1a</p> <ul> <li>zhqwq \u7684\u535a\u5ba2 - \u6211 \u6839 \u672c \u4e0d \u4f1a \u7ebf \u6bb5 \u6811|\u7ebf\u6bb5\u6811\u518d\u5b66\u4e60\u7b14\u8bb0</li> <li>Github - ATcoder Library Documents</li> <li>dwt \u54e5\u54e5\u7684\u535a\u5ba2\uff1alinks</li> <li>\u7c89\u5154\u7684\u53cb\u60c5\u8bb2\u89e3\uff0c\u4ee5\u53ca\u90a3\u53e5 \u300c\uff1f\u4f60\u6839\u672c\u4e0d\u662f\u840c\u65b0\u300d</li> </ul>"}, {"location": "algor/ds/segtree/#_10", "title": "\u52a8\u6001\u5f00\u70b9", "text": "<p>\u6b63\u5e38\u7684\u7ebf\u6bb5\u6811\u4e00\u822c\u90fd\u662f\u7528\u4e8c\u500d\u6807\u8bb0\u6cd5\u53bb\u6807\u8bb0\u513f\u5b50\u7684\u5e8f\u53f7\u3002</p> <p>\u8fd9\u6837\u81f3\u5c11\u9700\u8981\u56db\u500d\u7a7a\u95f4\u624d\u4e0d\u4f1a\u51fa\u73b0 RE\u3002</p> <p>\u4f46\u5728\u67d0\u4e9b\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982\u540e\u9762\u7684\u6743\u503c\u7ebf\u6bb5\u6811\uff09\uff0c\u4f60\u9700\u8981\u7ef4\u62a4\u4e0b\u6807\u7684\u8303\u56f4\u53ef\u80fd\u975e\u5e38\u5927\uff0c\u5982\u679c\u771f\u7684\u8981\u5168\u90e8\u5efa\u6811\u5efa\u51fa\u6765\uff0c\u7a7a\u95f4\u5c31\u7206\u4e86\u3002</p> <p>\u6b64\u65f6\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u61d2\u6807\u8bb0\u7684\u601d\u60f3\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u9700\u8981\u4f7f\u7528\uff0c\u90a3\u4e48\u6211\u4eec\u624d\u5efa\u7acb\u8fd9\u4e2a\u8282\u70b9\uff0c\u53cd\u4e4b\u5c31\u4e0d\u7528\u3002</p> <p>\u4ece\u5b9e\u73b0\u4e0a\u6765\u8bb2\uff0c\u5c31\u662f\u521d\u59cb\u7684\u65f6\u5019\u53ea\u5efa\u7acb\u4e00\u4e2a\u6839\u8282\u70b9\u4ee3\u8868\u6574\u4e2a\u533a\u95f4\u3002</p> <p>\u5f53\u9012\u5f52\u8bbf\u95ee\u5230\u7684\u8282\u70b9\u4e3a\u7a7a\u65f6\uff0c\u624d\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u7ed9\u4ed6\u4e00\u4e2a\u7f16\u53f7\u3002</p> <p>\u6b64\u5904\u7f16\u53f7\u7684\u65b9\u5f0f\u4e0d\u540c\u4e8e\u539f\u6765\u7684\u4e8c\u500d\u6807\u8bb0\u6cd5\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u7684\u7f16\u53f7\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u6b63\u5e38\u5199\u6cd5\u662f\u628a\u4e00\u4e2a\u8282\u70b9\u7684\u533a\u95f4\u4fe1\u606f\u76f4\u63a5\u9644\u52a0\u5230\u8282\u70b9\u4e0a\u3002</p> <p>\u5728\u8fd9\u91cc\u5c31\u76f4\u63a5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\u4e86\u3002</p> <p>\u4e00\u822c\u7a7a\u95f4\u8981\u5f00\u5927\u4e00\u70b9\uff0c\u6bd4\u5982 \\(\\times 60\\) \u8fd9\u79cd\u3002</p> <p>\u6700\u597d\u662f\u5148\u4f30\u7b97\u4e00\u4e0b\u7a7a\u95f4\u7136\u540e\u518d\u5f00\u3002</p> <p></p> <p>\u4e00\u4efd\u533a\u95f4\u52a0\u533a\u95f4\u4e58\u533a\u95f4\u6c42\u548c\u7ebf\u6bb5\u6811\u7684\u52a8\u6001\u5f00\u70b9\u5199\u6cd5\uff1a</p> Code <pre><code>#define ls t[p].lson\n#define rs t[p].rson\nclass Segment_Tree {\nprivate : struct Node {\nint lson, rson;\ni64 dat, add, mul;\n// \u5fc5\u987b\u8981\u65b0\u5efa\u8282\u70b9\u65f6\u518d\u521d\u59cb\u5316\u3002\n// \u5426\u5219\u7f16\u8bd1\u5668\u4f1a\u63d0\u524d\u5904\u7406\u8fd9\u4e9b\u8d4b\u503c\n// \u7136\u540e\u4f60\u7684 binary \u5c31\u4f1a\u5de8\u5927\u65e0\u6bd4\n// \u662f\u4f1a\u51fa\u4e8b\u7684\u3002\n}t[si * 60];\n// \u7a7a\u95f4\u4e00\u5b9a\u8981\u5f00\u591f\u3002\nint cnt_node = 0;\ninline int Newnode() {\ncnt_node ++;\nt[cnt_node].lson = t[cnt_node].rson = 0;\nt[cnt_node].dat = 0ll, t[cnt_node].add = 0ll, t[cnt_node].mul = 1ll;\nreturn cnt_node;\n}\ninline void pushup(int p) {\nt[p].dat = t[ls].dat + t[rs].dat;\n}\n// pushdown \u4e5f\u662f\u9700\u8981\u4f20\u53c2\u7684\u4e86\u3002\ninline void pushdown(int p, int l, int r) {\nif(!t[p].add &amp;&amp; t[p].mul == 1) return;\n\nif(!ls) ls = Newnode();\nif(!rs) rs = Newnode();\n// \u8bb0\u5f97\u5728\u8fd9\u91cc\u4e5f\u8981\u52a8\u6001\u5f00\u70b9\u3002\n\nint mid = (l + r) &gt;&gt; 1;\n\nt[ls].dat = (t[ls].dat * t[p].mul + t[p].add * (mid - l + 1)) % mod;\nt[rs].dat = (t[rs].dat * t[p].mul + t[p].add * (r - mid)) % mod;\nt[ls].add = (t[ls].add * t[p].mul + t[p].add) % mod;\nt[rs].add = (t[rs].add * t[p].mul + t[p].add) % mod;\nt[ls].mul = (t[ls].mul * t[p].mul) % mod;\nt[rs].mul = (t[rs].mul * t[p].mul) % mod;\n\nt[p].add = 0ll, t[p].mul = 1ll;\n}\npublic : void update_add(int &amp;p, int l, int r, int ql, int qr, i64 v) {\nif(l &gt; r) return; // \u9012\u5f52\u8fb9\u754c\u3002\nif(!p) p = Newnode();\nif(ql &lt;= l &amp;&amp; r &lt;= qr) {\nt[p].add = (t[p].add + v) % mod;\nt[p].dat = (t[p].dat + v * (r - l + 1)) % mod;\nreturn;\n}\npushdown(p, l, r);\nint mid = (l + r) &gt;&gt; 1;\nif(ql &lt;= mid) update_add(ls, l, mid, ql, qr, v);\nif(qr &gt; mid)\nupdate_add(rs, mid + 1, r, ql, qr, v);\npushup(p); return;\n}   void update_mul(int &amp;p, int l, int r, int ql, int qr, i64 v) {\nif(l &gt; r) return;\nif(!p) p = Newnode();\nif(ql &lt;= l &amp;&amp; r &lt;= qr) {\nt[p].dat = (t[p].dat * v) % mod;\nt[p].add = (t[p].add * v) % mod;\nt[p].mul = (t[p].mul * v) % mod;\nreturn; }\npushdown(p, l, r);\nint mid = (l + r) &gt;&gt; 1;\nif(ql &lt;= mid)\nupdate_mul(ls, l, mid, ql, qr, v);\nif(qr &gt; mid)\nupdate_mul(rs, mid + 1, r, ql, qr, v);\npushup(p); return;\n}\ni64 query(int p, int l, int r, int ql, int qr) {\nif(l &gt; r) return 0ll;\nif(!p) return 0ll;\n// \u4e0d\u5b58\u5728\u76f4\u63a5\u8fd4\u56de 0 \u5373\u53ef\u3002\nif(ql &lt;= l &amp;&amp; r &lt;= qr) return t[p].dat % mod;\npushdown(p, l, r);\nint mid = (l + r) &gt;&gt; 1;\ni64 res = 0ll;\nif(ql &lt;= mid) res = (res + query(ls, l, mid, ql, qr)) % mod;\nif(qr &gt; mid)\nres = (res + query(rs, mid + 1, r, ql, qr)) % mod;\nreturn res % mod;\n}\n}tr;\n</code></pre>"}, {"location": "algor/ds/segtree/#_11", "title": "\u6743\u503c\u7ebf\u6bb5\u6811", "text": "<p>\u5c5e\u4e8e\u4e00\u79cd\u53d8\u79cd\u7684\u7ebf\u6bb5\u6811\u3002</p> <p>\u7ef4\u62a4\u7684\u4e0d\u662f\u5e8f\u5217\u800c\u662f\u5e8f\u5217\u7684\u503c\u57df\uff0c\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u4e00\u4e2a\u52a8\u6001\u7684\u6876\uff08\u53f6\u5b50\u8282\u70b9\u5c31\u662f\u6876\uff09\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u7ef4\u62a4\u7684\u4e00\u6bb5 \\([l,r]\\) \u533a\u95f4\u7684\u4fe1\u606f\uff0c\u662f\u5e8f\u5217\u4e2d\u6743\u503c\u5728 \\([l,r]\\) \u4e2d\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u7528\u5b83\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e9b\u5e73\u8861\u6811\u7684\u529f\u80fd\u3002</p> <p>\u56e0\u4e3a\u4e00\u822c\u7ef4\u62a4\u7684\u503c\u57df\u5f88\u5927\uff08\\(10^9\\) \u8fd9\u79cd\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u79bb\u6563\u5316\u6216\u8005\u52a8\u6001\u5f00\u70b9\uff0c\u4e2a\u4eba\u63a8\u8350\u540e\u4e00\u79cd\u3002</p>"}, {"location": "algor/ds/segtree/#_12", "title": "\u6b63\u5e38\u64cd\u4f5c", "text": "<p>\u548c\u6b63\u5e38\u7684\u52a8\u6001\u5f00\u70b9\u6ca1\u533a\u522b\u3002</p> Code <pre><code>using i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint n, m;\n// m \u662f\u503c\u57df\u3002\n#define ls t[p].lson\n#define rs t[p].rson\nstruct Node {\ni64 dat;\nint lson, rson;\n// \u8fd9\u91cc\u4e0d\u8981\u63d0\u524d\u8d4b\u503c\uff0cnewnode \u65f6\u518d\u8d4b\u503c\u3002\n}t[si * 60];\nint tot = 0, root = 0;\ninline int Newnode() {\ntot++;\nt[tot].dat = 0ll;\nt[tot].lson = 0, t[tot].rson = 0;   return tot;\n}\ninline void pushup(int p) {\nt[p].dat = t[ls].dat + t[rs].dat;\n}\nvoid modify(int &amp;p, int l, int r, int x, int v) {\nif(l &gt; r) return;\nif(!p) p = Newnode();\nif(l == r) {\nt[p].dat += v;\nreturn;\n}\nint mid = (l + r) &gt;&gt; 1;\nif(x &lt;= mid) modify(ls, l, mid, x, v);\nelse modify(rs, mid + 1, r, x, v);\npushup(p); return;\n}\ni64 query(int p, int l, int r, int ql, int qr) {\nif(l &gt; r) return 0ll;\nif(!p) return 0ll;\nif(ql &lt;= l &amp;&amp; r &lt;= qr) return t[p].dat;\nint mid = (l + r) &gt;&gt; 1;\nif(ql &lt;= mid) modify(ls, l, mid, ql, qr);\nif(qr &gt; mid)\nmodify(rs, mid + 1, r, ql, qr);\npushup(p); return;\n}\n</code></pre>"}, {"location": "algor/ds/segtree/#_13", "title": "\u63d2\u5165/\u5220\u9664", "text": "<p>\u8fd9\u4e2a\u76f4\u63a5\u5728\u5bf9\u5e94\u4f4d\u7f6e\u5355\u70b9\u52a0\u51cf\u4e00\u5c31\u884c\u3002</p> Code <pre><code>void insert(int v) {\nmodify(root, 1, m, v, 1);\n}\nvoid remove(int v) {\nmodify(root, 1, m, v, -1);\n}\n</code></pre>"}, {"location": "algor/ds/segtree/#k", "title": "\u52a8\u6001\u5168\u5c40\u7b2c k \u5927\uff08\u7ebf\u6bb5\u6811\u4e8c\u5206\uff09", "text": "<p>\u8fd9\u91cc\u8981\u7528\u5230\u7ebf\u6bb5\u6811\u4e8c\u5206\u7684\u601d\u60f3\u3002</p> <p>\u5047\u8bbe\u8981\u67e5\u8be2\u5168\u5c40\u7b2c \\(k\\) \u5927\u3002</p> <p>\u5f53\u524d\u9012\u5f52\u5230\u7684\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u6743\u503c\u548c\u5206\u522b\u4e3a \\(ls, rs\\)\u3002</p> <p>\u5982\u679c \\(k \\le ls\\)\uff0c\u90a3\u4e48\u9012\u5f52\u67e5\u5de6\u5b50\u6811\u3002</p> <p>\u53cd\u4e4b\u4ee4 \\(k \\gets k - ls\\)\uff0c\u7136\u540e\u5728\u53f3\u5b50\u6811\u91cc\u67e5\u7b2c \\(k\\) \u5927\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u4e8c\u5206\u7b2c \\(k\\) \u5927\u5e94\u5f53\u662f\u591a\u5c11\u3002</p> <p>\u53ef\u4ee5\u628a\u6574\u9897\u7ebf\u6bb5\u6811\u201c\u538b\u5e73\u201d\u4e86\u6765\u770b\u3002</p> Code <pre><code>i64 kth(int p, int l, int r, int k) {\nif(l == r) return t[p].dat;\nint mid = (l + r) &gt;&gt; 1;\nif(t[ls].dat &gt;= k) kth(ls, l, mid, k);\nelse kth(rs, mid + 1, r, k - t[ls].dat);\n}\n</code></pre>"}, {"location": "algor/ds/segtree/#_14", "title": "\u67e5\u8be2\u6392\u540d", "text": "<p>\u67e5\u8be2\u67d0\u4e00\u4e2a\u6570 \\(x\\) \u7684\u6392\u540d\u3002</p> <p>\u76f4\u63a5\u67e5\u7ebf\u6bb5\u6811\u4e0a \\([1,x)\\) \u7684\u548c\u7136\u540e\u52a0\u4e00\u5373\u53ef\u3002</p> Code <pre><code>i64 rnk(int v) {\nreturn query(root, 1, m, 1, v - 1) + 1;\n}\n</code></pre>"}, {"location": "algor/ds/segtree/#_15", "title": "\u67e5\u8be2\u524d\u9a71\u540e\u7ee7", "text": "<p>\u524d\u9a71\u76f4\u63a5\u5148\u67e5\u8be2 \\(x\\) \u7684\u6392\u540d \\(rk\\)\uff0c\u7136\u540e\u67e5\u7b2c \\(rk - 1\\) \u5927\u5373\u53ef\u3002  </p> <p>\u540e\u7ee7\u7c7b\u4f3c\u3002</p> Code <pre><code>i64 pre(int v) {\nreturn kth(rnk(v) - 1);\n}\ni64 nex(int v) {\nreturn kth(t[root].dat - query(root, 1, m, v + 1, m) + 1);\n}\n</code></pre>"}, {"location": "algor/ds/segtree/#_16", "title": "\u7ebf\u6bb5\u6811\u5408\u5e76", "text": "<p>\u6709\u7684\u65f6\u5019\u9700\u8981\u5bf9\u540c\u4e00\u4e2a\u503c\u57df\u5728\u591a\u9897\u4e0d\u540c\u7684\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u4fee\u6539\u3002</p> <p>\u7136\u540e\u8ba1\u7b97\u7b54\u6848\u65f6\u9700\u8981\u7efc\u5408\u5b83\u4eec\u7684\u7b54\u6848\u3002</p> <p>\u4e5f\u5c31\u662f\u6211\u4eec\u9700\u8981\u4e24\u4e24\u5408\u5e76\u8fd9\u4e9b\u7ebf\u6bb5\u6811\u3002</p> <p>\u56e0\u4e3a\u7ef4\u62a4\u7684\u503c\u57df\u76f8\u540c\uff0c\u90a3\u4e48\u663e\u7136\u5b83\u4eec\u5bf9\u4e8e\u503c\u57df\u7684\u5b50\u533a\u95f4\u7684\u5212\u5206\u4e5f\u662f\u4e00\u6837\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4ece\u4e24\u9897\u7ebf\u6bb5\u6811\u7684\u6811\u6839\u5f00\u59cb\uff0c\u7528 \\(p,q\\) \u4e24\u4e2a\u6307\u9488\u540c\u6b65\u5411\u4e0b\u9012\u5f52\u3002</p> <p>\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u56db\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\\(p\\) \u6ca1\u6709\u5efa\u7acb\u8282\u70b9\uff0c\u800c \\(q\\) \u5efa\u7acb\u6709\u8282\u70b9\u3002</li> <li>\\(q\\) \u6ca1\u6709\u5efa\u7acb\u8282\u70b9\uff0c\u800c \\(p\\) \u5efa\u7acb\u6709\u8282\u70b9\u3002</li> <li>\\(p,q\\) \u90fd\u6ca1\u6709\u5efa\u7acb\u8fd9\u4e2a\u8282\u70b9\u3002</li> <li>\\(p,q\\) \u90fd\u6709\u5efa\u7acb\u8fd9\u4e2a\u8282\u70b9\u3002</li> </ol> <p>\u5bf9\u4e8e \\(1,2\\) \uff0c\u76f4\u63a5\u628a\u975e\u7a7a\u8282\u70b9\u4f5c\u4e3a\u5408\u5e76\u540e\u7684\u8282\u70b9\u3002</p> <p>\u5bf9\u4e8e \\(3\\) \uff0c\u65e2\u7136\u4f60\u4fe9\u90fd\u6ca1\u6709\uff0c\u90a3\u5408\u5e76\u540e\u4e5f\u6ca1\u5fc5\u8981\u8981\u8fd9\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u5408\u5e76\u540e\u4ecd\u65e7\u6ca1\u6709\u8fd9\u4e2a\u8282\u70b9\u3002</p> <p>\u5bf9\u4e8e \\(4\\) \uff0c\u65e2\u7136\u4f60\u4eec\u90fd\u6709\uff0c\u90a3\u5c31\u5408\u5e76\u4f60\u4eec\u7684\u4fe1\u606f\uff08\u7c7b\u4f3c\u4e8e\u666e\u901a\u7ebf\u6bb5\u6811\u7684 Pushup\uff09\uff0c\u7136\u540e\u968f\u4fbf\u627e\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u5408\u5e76\u4e4b\u540e\u7684\u8282\u70b9\uff08\u4e00\u822c\u662f \\(p\\)\uff09</p> <p></p> Code <pre><code>int merge(int p, int q, int l, int r) {\nif(!p) return q; if(!q) return p;\nif(l == r){\nt[p].mx += t[q].mx;\nreturn p;\n}\nint mid = (l + r) &gt;&gt; 1;\nt[p].ls = merge(t[p].ls, t[q].ls, l, mid);\nt[p].rs = merge(t[p].rs, t[q].rs, mid + 1, r);\npushup(p); return p;\n}\n</code></pre> <p>\u8fd8\u6709\u4e00\u79cd\u8282\u7701\u7a7a\u95f4\u7684\u5199\u6cd5\uff0c\u53eb\u8282\u70b9\u56de\u6536\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u628a\u5408\u5e76\u540e\u65e0\u7528\u7684\u8282\u70b9\u7684\u7f16\u53f7\u6254\u8fdb\u4e00\u4e2a\u6808\u91cc\u9762\u3002</p> <p>\u5408\u5e76\u9700\u8981\u65b0\u8282\u70b9\u7684\u65f6\u5019\u518d\u4ece\u6808\u91cc\u62ff\u51fa\u6765\u7528\u3002</p>"}, {"location": "algor/ds/segtree/#_17", "title": "\u626b\u63cf\u7ebf", "text": "<p>\u626b\u63cf\u7ebf\u672c\u8d28\u4e0a\u662f\u8ba1\u7b97\u51e0\u4f55\uff1f</p> <p>\u7528\u5904\u5c31\u662f\u7ef4\u62a4\u5e73\u9762\u4e0a\u7684\u4e00\u4e9b\u77e9\u5f62\uff0c\u53ef\u80fd\u662f\u7ef4\u62a4\u603b\u9762\u79ef\uff0c\u8f6e\u5ed3\uff0c\u6216\u8005\u662f\u8986\u76d6\u5230\u4ec0\u4e48\u4e1c\u897f\u7684\u6700\u5927\u503c\u4e4b\u7c7b\u7684\u3002</p> POJ1151 - Atlantis <p>\u7ed9\u5b9a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u5f53\u4e2d\u7684 \\(N\\) \u4e2a\u77e9\u5f62\uff0c\u6c42\u5b83\u4eec\u7684\u9762\u79ef\u4e4b\u5e76\u3002</p> <p>\u4e00\u4e2a\u7ecf\u5178\u7684\u601d\u8def\u662f\uff0c\u8003\u8651\u4ece\u5de6\u5f80\u53f3\u7528\u4e00\u6761\u76f4\u7ebf\u626b\u8fc7\u53bb\uff0c\u628a\u8fd9\u4e9b\u77e9\u5f62\u8f6c\u5316\u4e3a \\(2N\\) \u4e2a\u4e8c\u5143\u7ec4\u3002</p> <p>\u4e00\u4e2a\u77e9\u5f62 \\((x1, y1), (x2, y2)\\) \u4f1a\u88ab\u8f6c\u5316\u6210 \\((x1, y1, y2, 1), (x2, y1, y2, -1)\\)\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <p>img</p> <p>\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u626b\u63cf\u8fd9\u4e9b\u4e8c\u5143\u7ec4\uff0c\u5728\u5f53\u524d\u7684\u626b\u63cf\u7ebf\u4e0a\u505a\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5148\u79bb\u6563\u5316\uff0c\u8bb0 \\(raw(i)\\) \u8868\u793a \\(i\\) \u79bb\u6563\u524d\u7684\u503c\uff0c\\(val(i)\\) \u53cd\u8fc7\u6765\u3002</p> <p>\u8bb0 \\(c(i)\\) \u8868\u793a \\([raw(i), raw(i + 1)]\\) \u8fd9\u4e00\u6bb5\u533a\u95f4\u5f53\u524d\u88ab\u8986\u76d6\u7684\u6b21\u6570\uff0c\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u662f\uff0c\u5bf9\u4e8e\u70b9\u7684\u8986\u76d6\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u88ab\u8986\u76d6\u7684\u603b\u957f\u5ea6\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u56db\u5143\u7ec4 \\((x,y,z,k)\\)\uff0c\u6211\u4eec\u4ee4\u626b\u63cf\u7ebf\u4e0a \\([y,z]\\) \u8fd9\u4e00\u5927\u6bb5\u7684\u88ab\u8986\u76d6\u6b21\u6570\u52a0\u4e0a \\(k\\)\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002</p> <p>\u5f53\u7136\uff0c\u8fd9\u662f\u6734\u7d20\u505a\u6cd5\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u3002</p> <p>\u8bb0 \\(cnt\\) \u8868\u793a\u7ebf\u6bb5\u6811\u4e0a\u8282\u70b9\u88ab\u76f4\u63a5\u8986\u76d6\u7684\u6b21\u6570\uff0c\\(len\\) \u8868\u793a\u5f53\u524d\u8282\u70b9\u7ef4\u62a4\u7684\u6bb5\u5f53\u4e2d\u88ab\u8986\u76d6\u7684\u6bb5\u7684\u603b\u957f\u3002</p> <p>\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u7279\u6b8a\u7684 pushup \u6280\u5de7\uff0c\u6211\u4eec\u533a\u95f4\u8986\u76d6\u7684\u65f6\u5019\u76f4\u63a5\u4e0d pushdown \u4e86\uff0c\u6211\u4eec\u9012\u5f52\u5230\u88ab\u4fee\u6539\u7684\u90a3 \\(\\log n\\) \u4e2a\u533a\u95f4\uff0c\u7136\u540e\u76f4\u63a5\u4fee\u6539\u4ed6\u4eec\u7684 \\(cnt\\) \u548c \\(len\\)\uff0cpushup \u7684\u65f6\u5019\u76f4\u63a5\u6839\u636e\u5b50\u8282\u70b9\u7684\u4fe1\u606f\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u5373\u53ef\uff0c\u5177\u4f53\u5b9e\u73b0\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>void change(int p, int l, int r, int v) {\nint nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) {\nt[p].cnt += v;\nif(t[p].cnt == 0) t[p].len = (nl == nr) ? 0 : t[p &lt;&lt; 1].len + t[p &lt;&lt; 1 | 1].len;\n// \u867d\u7136\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u88ab\u8986\u76d6\u7684\u6b21\u6570\u7b49\u4e8e 0 \u4e86\uff0c\u4f46\u8fd8\u662f\u8981\u8003\u8651\u4e0b\u9762\u7684\u5b50\u6811\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u53ef\u80fd\u6ca1\u88ab\u4fee\u6539\u5b8c\u3002\nelse t[p].len = raw[nr + 1] - raw[nl];\nreturn;\n}\nint mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) change(p &lt;&lt; 1, l, r, v);\nif(r &gt; mid) change(p &lt;&lt; 1 | 1, l, r, v);\nif(t[p].cnt &gt; 0) t[p].len = raw[nr + 1] - raw[nl];\nelse t[p].len = t[p &lt;&lt; 1].len + t[p &lt;&lt; 1 | 1].len;\n} </code></pre> <p>\u66f4\u591a\u4f8b\u9898\u53ef\u4ee5\u770b\uff1alink</p>"}, {"location": "algor/ds/segtree/#_18", "title": "\u6807\u8bb0\u6c38\u4e45\u5316", "text": "<p>\u8fd9\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5c0f\u6280\u5de7\uff0c\u4e00\u822c\u5728\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u91cc\u6bd4\u8f83\u5e38\u89c1\u3002</p> <p>\u6ce8\u610f\u5230\u4e00\u4e2a\u4e8b\u60c5\u662f\uff0c\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u56e0\u4e3a\u7ef4\u62a4\u4e86\u5386\u53f2\u7248\u672c\uff0cpushdown \u548c pushup \u5f88\u56f0\u96be\uff08\u9700\u8981\u82b1\u5f88\u591a\u989d\u5916\u7684\u7a7a\u95f4\u53bb\u5904\u7406\u4fe1\u606f\u7684\u66f4\u6539\uff09\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u5c31\u5728\u60f3\uff0c\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u5f0f\uff0c\u65e2\u53ef\u4ee5\u5b9e\u73b0\u533a\u95f4\u4fee\u6539\uff0c\u53c8\u4e0d\u7528\u4e0b\u653e tag\uff0c\u5904\u7406\u66f4\u6539\u5462\uff1f</p> <p>\u6807\u8bb0\u6c38\u4e45\u5316\u5c31\u662f\u4e3a\u4e86\u6ee1\u8db3\u8fd9\u79cd\u9700\u6c42\u800c\u8bde\u751f\u7684\u3002</p> <p>\u6211\u4eec\u8003\u8651\uff0c\u6bcf\u6b21\u533a\u95f4\u4fee\u6539\u4e5f\u4e00\u6837\u7684\u5230\u8fbe\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u8282\u70b9\u5c31\u8fd4\u56de\uff0c\u8bb0\u5f55\u4e00\u4e2a tag\uff0c\u4f46\u662f\u5728\u9012\u5f52\u4e0b\u53bb\u7684\u65f6\u5019\u6211\u4eec\u9700\u8981\u628a\u4e00\u8def\u4e0a\u7684\u6240\u6709\u8282\u70b9\u7684\u66f4\u6539\u90fd\u5904\u7406\u4e86\u3002</p> <p>\u7136\u540e\u533a\u95f4\u8be2\u95ee\u5c31\u4e00\u76f4\u5f80\u4e0b\uff0c\u5e76\u5b9e\u65f6\u7d2f\u8ba1\u5f53\u524d\u7684 tag\uff0c\u6bcf\u6b21\u626b\u5230\u4e00\u4e2a\u8282\u70b9\u76f4\u63a5\u8ba9\u7b54\u6848\u7b97\u4e0a\u539f\u6765\u7684\u503c\u548c tag \u5bf9\u4fe1\u606f\u7684\u5f71\u54cd\u5373\u53ef\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u770b\u8d77\u6765\u5c31\u5f88\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u56e0\u4e3a\u4f60\u4e0d\u4f1a\u4fee\u6539 \\(val\\)\uff0c\u4f60\u628a\u6240\u6709\u7684\u4fee\u6539\u90fd\u653e\u5230\u4e86 tag \u4e0a\u9762\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u4fee\u6539 tag \u5c31\u884c\u4e86\uff01</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u81ea\u9876\u5411\u4e0b\u7ebf\u6bb5\u6811\uff08\uff0c\u6709\u4e86\u8fd9\u4e2a\u4e1c\u897f\u5c31\u53ef\u4ee5\u52c9\u5f3a\u7ef4\u62a4\u4e00\u4e0b\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4fee\u6539\u4e86\uff08\u5f53\u7136\u666e\u901a\u7ebf\u6bb5\u6811\u4e5f\u53ef\u4ee5\u7528\uff0c\u5e38\u6570\u8fd8\u633a\u5c0f\uff09</p> <p>\u4e3a\u4ec0\u4e48\u8bf4\u52c9\u5f3a\u5462\uff1f</p> <p>\u56e0\u4e3a\u6807\u8bb0\u6c38\u4e45\u5316\u53ea\u80fd\u5904\u7406\u4e00\u4e9b\u6bd4\u8f83\u7279\u6b8a\u7684\u4fe1\u606f\uff0c\u4f60\u53d1\u73b0\u6211\u4eec\u8fd9\u91cc\u5fc5\u987b\u8981\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u6211\u4eec\u505a\u7684\u4e8b\u60c5\u662f\u76f4\u63a5\u4ece\u4e0a\u5230\u4e0b\u66b4\u529b\u5408\u5e76 tag\uff0c\u6839\u672c\u4e0d\u7ba1\u65f6\u95f4\u987a\u5e8f\uff0c\u6bd4\u5982\u6211\u4eec\u8003\u8651\u590d\u5408\u4e24\u4e2a\u6807\u8bb0 \\(t_1, t_2\\)\uff0c\u5982\u679c\u662f pushup pushdown \u76f4\u63a5\u5408\u5e76\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u65f6\u5019\uff0c\\(t_2\\) \u867d\u7136\u5728\u65f6\u95f4\u8f74\u4e0a\u9760\u540e\uff0c\u4f46\u662f\u5b83\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u4f4d\u7f6e\u53ef\u80fd\u4f1a\u6bd4 \\(t_1\\) \u66f4\u9760\u540e\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u8981\u6c42\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u4e0d\u7136\u4fe1\u606f\u4e0d\u80fd\u5408\u5e76\u3002</p> <p>\u4f46\u662f\u5176\u5b9e\u4e5f\u4e0d\u4e00\u5b9a\uff0c\u6211\u4eec\u7684\u8981\u6c42\u662f \\(t_2 \\circ t_1 = t_1 \\circ t_2\\)\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a \\(t_0\\)\uff0c\u4f7f\u5f97 \\(t_2 \\circ t_1 = t_1 \\circ t_0\\) \u5373\u53ef\uff0c\u8fd9\u4e2a\u4e1c\u897f\u6211\u8fd8\u6ca1\u89c1\u5230\u8fc7\u7c7b\u4f3c\u7684\u9898\uff0c\u6709\u4e86\u6211\u4f1a\u653e\u4e0a\u6765\u3002</p> <p>\u6807\u8bb0\u6c38\u4e45\u5316\u6ca1\u4ec0\u4e48\u4e60\u9898\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199\u533a\u95f4\u52a0\u533a\u95f4\u548c\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5199 To the moon \u90a3\u9898\u3002</p>"}, {"location": "algor/ds/segtree/#_19", "title": "\u77e9\u9635\u8868\u8fbe\u4fee\u6539", "text": "<p>\u8fd9\u4e2a\u4e1c\u897f\u4e5f\u6bd4\u8f83\u5de7\u5999\uff0c\u6211\u4e4b\u524d\u5728 OI-wiki \u4e0a\u770b\u5230\u8fc7\uff0c\u6478\u9c7c\u9171\u548c cftm \u5728\u7fa4\u91cc\u53c8\u6559\u4e86\u6211 /oh\uff0c\u611f\u89c9\u5f88\u6709\u610f\u601d\uff0c\u6240\u4ee5\u5199\u4e0b\u6765\u3002</p> <p>\u5c31\u662f\u8bf4\uff0c\u5176\u5b9e\u4f60\u6ce8\u610f\u5230\u6211\u4eec\u4e0a\u9762\u8ba8\u8bba\u7684 tag \u65b9\u5f0f\u6709\u70b9\u590d\u6742\uff0c\u800c\u77e9\u9635\u4e58\u6cd5\u5929\u7136\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7c7b\u4f3c\u77e9\u9635\u52a0\u901f\uff0c\u76f4\u63a5\u628a\u4f60\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\u5199\u6210\u4e00\u4e2a\u5411\u91cf\uff0c\u7136\u540e\u63a8\u51fa\u4e00\u4e2a\u8f6c\u79fb\u77e9\u9635\uff0c\u76f4\u63a5\u66b4\u529b\u7ef4\u62a4\u533a\u95f4\u77e9\u9635\u4e58\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002</p>"}, {"location": "algor/ds/segtree/#thusch-2017", "title": "\u300cTHUSCH 2017\u300d\u5927\u9b54\u6cd5\u5e08", "text": "<p>\u5927\u9b54\u6cd5\u5e08\u5c0f L \u5236\u4f5c\u4e86 \\(n\\) \u4e2a\u9b54\u529b\u6c34\u6676\u7403\uff0c\u6bcf\u4e2a\u6c34\u6676\u7403\u6709\u6c34\u3001\u706b\u3001\u571f\u4e09\u4e2a\u5c5e\u6027\u7684\u80fd\u91cf\u503c\u3002</p> <p>\u5c0f L \u628a\u8fd9 \\(n\\) \u4e2a\u6c34\u6676\u7403\u5728\u5730\u4e0a\u4ece\u524d\u5411\u540e\u6392\u6210\u4e00\u884c\uff0c\u7136\u540e\u5f00\u59cb\u4eca\u5929\u7684\u9b54\u6cd5\u8868\u6f14\u3002</p> <p>\u6211\u4eec\u7528 \\(A_i,\\ B_i,\\ C_i\\) \u5206\u522b\u8868\u793a\u4ece\u524d\u5411\u540e\u7b2c \\(i\\) \u4e2a\u6c34\u6676\u7403\uff08\u4e0b\u6807\u4ece \\(1\\) \u5f00\u59cb\uff09\u7684\u6c34\u3001\u706b\u3001\u571f\u7684\u80fd\u91cf\u503c\u3002</p> <p>\u5c0f L \u8ba1\u5212\u65bd\u5c55 \\(m\\) \u6b21\u9b54\u6cd5\u3002\u6bcf\u6b21\uff0c\u4ed6\u4f1a\u9009\u62e9\u4e00\u4e2a\u533a\u95f4 \\([l, r]\\)\uff0c\u7136\u540e\u65bd\u5c55\u4ee5\u4e0b \\(3\\) \u5927\u7c7b\u3001\\(7\\) \u79cd\u9b54\u6cd5\u4e4b\u4e00\uff1a</p> <ol> <li> <p>\u9b54\u529b\u6fc0\u53d1\uff1a\u4ee4\u533a\u95f4\u91cc\u6bcf\u4e2a\u6c34\u6676\u7403\u4e2d \u7279\u5b9a\u5c5e\u6027 \u7684\u80fd\u91cf\u7206\u53d1\uff0c\u4ece\u800c\u4f7f\u53e6\u4e00\u4e2a \u7279\u5b9a\u5c5e\u6027     \u7684\u80fd\u91cf\u589e\u5f3a\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6709\u4ee5\u4e0b\u4e09\u79cd\u53ef\u80fd\u7684\u8868\u73b0\u5f62\u5f0f\uff1a</p> <ul> <li> <p>\u706b\u5143\u7d20\u6fc0\u53d1\u6c34\u5143\u7d20\u80fd\u91cf\uff1a\u4ee4 \\(A_i = A_i + B_i\\)\u3002</p> </li> <li> <p>\u571f\u5143\u7d20\u6fc0\u53d1\u706b\u5143\u7d20\u80fd\u91cf\uff1a\u4ee4 \\(B_i = B_i + C_i\\)\u3002</p> </li> <li> <p>\u6c34\u5143\u7d20\u6fc0\u53d1\u571f\u5143\u7d20\u80fd\u91cf\uff1a\u4ee4 \\(C_i = C_i + A_i\\)\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u589e\u5f3a\u4e00\u79cd\u5c5e\u6027\u7684\u80fd\u91cf\u5e76\u4e0d\u4f1a\u6539\u53d8\u53e6\u4e00\u79cd\u5c5e\u6027\u7684\u80fd\u91cf\uff0c\u4f8b\u5982 \\(A_i = A_i + B_i\\) \u5e76\u4e0d\u4f1a\u4f7f \\(B_i\\) \u589e\u52a0\u6216\u51cf\u5c11\u3002 </p> </li> </ul> </li> <li> <p>\u9b54\u529b\u589e\u5f3a\uff1a\u5c0f L \u6325\u821e\u6cd5\u6756\uff0c\u6d88\u8017\u81ea\u8eab \\(v\\) \u70b9\u6cd5\u529b\u503c\uff0c\u6765\u6539\u53d8\u533a\u95f4\u91cc\u6bcf\u4e2a\u6c34\u6676\u7403\u7684 \u7279\u5b9a\u5c5e\u6027  \u7684\u80fd\u91cf\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6709\u4ee5\u4e0b\u4e09\u79cd\u53ef\u80fd\u7684\u8868\u73b0\u5f62\u5f0f\uff1a</p> <ul> <li>\u706b\u5143\u7d20\u80fd\u91cf\u5b9a\u503c\u589e\u5f3a\uff1a\u4ee4 \\(A_i = A_i + v\\)\u3002</li> <li>\u6c34\u5143\u7d20\u80fd\u91cf\u7ffb\u500d\u589e\u5f3a\uff1a\u4ee4 \\(B_i=B_i \\cdot v\\)\u3002</li> <li>\u571f\u5143\u7d20\u80fd\u91cf\u5438\u6536\u878d\u5408\uff1a\u4ee4 \\(C_i = v\\)\u3002</li> </ul> </li> <li> <p>\u9b54\u529b\u91ca\u653e\uff1a\u5c0f L \u5c06\u533a\u95f4\u91cc\u6240\u6709\u6c34\u6676\u7403\u7684\u80fd\u91cf\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u878d\u5408\u6210\u4e00\u4e2a\u65b0\u7684\u6c34\u6676\u7403\uff0c\u7136\u540e\u9001\u7ed9\u573a\u5916\u89c2\u4f17\u3002</p> <p>\u751f\u6210\u7684\u6c34\u6676\u7403\u6bcf\u79cd\u5c5e\u6027\u7684\u80fd\u91cf\u503c\u7b49\u4e8e\u533a\u95f4\u5185\u6240\u6709\u6c34\u6676\u7403\u5bf9\u5e94\u80fd\u91cf\u503c\u7684\u4ee3\u6570\u548c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9b54\u529b\u91ca\u653e\u7684\u8fc7\u7a0b\u4e0d\u4f1a\u771f\u6b63\u6539\u53d8\u533a\u95f4\u5185\u6c34\u6676\u7403\u7684\u80fd\u91cf\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5c0f L \u5236\u9020\u548c\u878d\u5408\u7684\u6c34\u6676\u7403\u7684\u539f\u6750\u6599\u90fd\u662f\u5b9a\u5236\u7248\u7684 OI \u5de5\u5382\u6c34\u6676\uff0c\u6240\u4ee5\u8fd9\u4e9b\u6c34\u6676\u7403\u6709\u4e00\u4e2a\u80fd\u91cf\u9608\u503c \\(998244353\\)    \u3002\u5f53\u6c34\u6676\u7403\u4e2d\u67d0\u79cd\u5c5e\u6027\u7684\u80fd\u91cf\u503c\u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u9608\u503c\u65f6\uff0c\u80fd\u91cf\u503c\u4f1a\u81ea\u52a8\u5bf9\u9608\u503c\u53d6\u6a21\uff0c\u4ece\u800c\u907f\u514d\u6c34\u6676\u7403\u7206\u70b8\u3002</p> <p>\u5c0f W \u4e3a\u5c0f L\uff08\u552f\u4e00\u7684\uff09\u89c2\u4f17\uff0c\u56f4\u89c2\u4e86\u6574\u4e2a\u8868\u6f14\uff0c\u5e76\u4e14\u6536\u5230\u4e86\u5c0f L \u5728\u8868\u6f14\u4e2d\u878d\u5408\u7684\u6bcf\u4e2a\u6c34\u6676\u7403\u3002\u5c0f W \u60f3\u77e5\u9053\uff0c\u8fd9\u4e9b\u6c34\u6676\u7403\u8574\u6db5\u7684\u4e09\u79cd\u5c5e\u6027\u7684\u80fd\u91cf\u503c\u5206\u522b\u662f\u591a\u5c11\u3002</p> </li> </ol> <p>\u7531\u4e8e\u77e9\u9635\u7684\u7ed3\u5408\u5f8b\u548c\u5206\u914d\u5f8b\u6210\u7acb\uff0c\u5355\u70b9\u4fee\u6539\u53ef\u4ee5\u81ea\u7136\u5730\u63a8\u5e7f\u5230\u533a\u95f4\uff0c\u5373\u63a8\u51fa\u77e9\u9635\u540e\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u77e9\u9635\u4e58\u79ef\u5373\u53ef\u3002</p> <p>\u4e0b\u9762\u5c06\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u3002</p> <p>\\(A_i = A_i + v\\) \u7684\u8f6c\u79fb</p> \\[ \\begin{bmatrix} A &amp; B &amp; C &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; 0\\\\ 0 &amp; 1 &amp; 0 &amp; 0\\\\ 0 &amp; 0 &amp; 1 &amp; 0\\\\ v &amp; 0 &amp; 0 &amp; 1\\\\ \\end{bmatrix}= \\begin{bmatrix} A+v &amp; B &amp; C &amp; 1\\\\ \\end{bmatrix} \\] <p>\\(B_i=B_i \\cdot v\\) \u7684\u8f6c\u79fb</p> \\[ \\begin{bmatrix} A &amp; B &amp; C &amp; 1\\end{bmatrix}\\begin{bmatrix}1 &amp; 0 &amp; 0 &amp; 0\\\\0 &amp; v &amp; 0 &amp; 0\\\\0 &amp; 0 &amp;1&amp; 0\\\\0 &amp; 0 &amp; 0 &amp; 1\\\\\\end{bmatrix}=\\begin{bmatrix}A &amp; B \\cdot v &amp; C &amp; 1\\\\\\end{bmatrix}\\] Code <pre><code>#include&lt;cstdio&gt;\n#include&lt;iostream&gt;\n#include&lt;cstring&gt;\nusing namespace std;\n\nconstexpr int mod=998244353;\nconstexpr int maxn=260000;\nint n,m;\n\ntemplate&lt;class T&gt;inline void read(T &amp;a){\nregister char ch;\nwhile (ch=getchar(),(ch&lt;'0' || ch&gt;'9') &amp;&amp; ch!='-');\nregister bool f=(ch=='-');\nregister T x=f?0:ch-'0';\nwhile(ch=getchar(),ch&gt;='0' &amp;&amp; ch&lt;='9') x=(x&lt;&lt;3)+(x&lt;&lt;1)+(ch^48);\na=f?-x:x;\n}\nstruct Matrix{\nint a[5][5];\nMatrix(){ memset(a,0,sizeof(a)); }\ninline void unit_init(){\nmemset(a,0,sizeof(a));\nfor(register int i=1;i&lt;=4;i++) a[i][i]=1;\n}\ninline Matrix operator * (const Matrix&amp; M){\nMatrix res;\nfor(register int i=1;i&lt;=4;i++){\nfor(register int j=1;j&lt;=4;j++){\nres.a[i][j]=(res.a[i][j]+1ll*a[i][1]*M.a[1][j])%mod;\nres.a[i][j]=(res.a[i][j]+1ll*a[i][2]*M.a[2][j])%mod;\nres.a[i][j]=(res.a[i][j]+1ll*a[i][3]*M.a[3][j])%mod;\nres.a[i][j]=(res.a[i][j]+1ll*a[i][4]*M.a[4][j])%mod;\n}\n} return res;\n}\ninline Matrix operator + (const Matrix &amp;M){\nMatrix res;\nfor(register int i=1;i&lt;=4;i++){\nfor(register int j=1;j&lt;=4;j++){\nres.a[i][j]=(M.a[i][j]+a[i][j])%mod;\n}\n} return res;\n}\n}ans,unit,ex_unit;\nstruct Segment_Tree{ Matrix Mat,tag; }t[maxn&lt;&lt;2];\ninline void init_1(){ unit.a[2][1]=1; }\ninline void init_2(){ unit.a[3][2]=1; }\ninline void init_3(){ unit.a[1][3]=1; }\ninline void init_4(int v){ unit.a[4][1]=v; }\ninline void init_5(int v){ unit.a[2][2]=v; } inline void init_6(int v){ unit.a[3][3]=0,unit.a[4][3]=v; }\ninline void pushdown(int p){\nt[p&lt;&lt;1].tag=t[p&lt;&lt;1].tag*t[p].tag;\nt[p&lt;&lt;1|1].tag=t[p&lt;&lt;1|1].tag*t[p].tag;\nt[p&lt;&lt;1].Mat=t[p&lt;&lt;1].Mat*t[p].tag;\nt[p&lt;&lt;1|1].Mat=t[p&lt;&lt;1|1].Mat*t[p].tag;\nt[p].tag.unit_init();\n}\ninline void pushup(int p){\nfor(register int i=1;i&lt;=4;i++){\nt[p].Mat.a[1][i]=1ll*(t[p&lt;&lt;1].Mat.a[1][i]+t[p&lt;&lt;1|1].Mat.a[1][i]); t[p].Mat.a[1][i]-=(t[p].Mat.a[1][i]&gt;=mod)?mod:0;\n}\n}\ninline void built(int l,int r,int p){\nt[p].tag=ex_unit;\nif(l==r){\nread(t[p].Mat.a[1][1]);read(t[p].Mat.a[1][2]);read(t[p].Mat.a[1][3]);\nt[p].Mat.a[1][4]=1;\nreturn;\n} int mid=(l+r)/2;\nbuilt(l,mid,p&lt;&lt;1),built(mid+1,r,p&lt;&lt;1|1),pushup(p);\n}\ninline void update(int l,int r,int ql,int qr,int p,Matrix M){\nif(ql&lt;=l &amp;&amp; r&lt;=qr){\nt[p].Mat=t[p].Mat*M;\nt[p].tag=t[p].tag*M;\nreturn;\n} pushdown(p); int mid=(r+l)&gt;&gt;1;\nif(mid&gt;=ql) update(l,mid,ql,qr,p&lt;&lt;1,M);\nif(qr&gt;mid) update(mid+1,r,ql,qr,p&lt;&lt;1|1,M);\npushup(p);\n}\ninline void query(int l,int r,int ql,int qr,int p){\nif(ql&lt;=l &amp;&amp; r&lt;=qr){\nfor(register int i=1;i&lt;=3;i++){\nans.a[1][i]=ans.a[1][i]+t[p].Mat.a[1][i];\nans.a[1][i]-=(ans.a[1][i]&gt;=mod)?mod:0;\n} return ;\n} int mid=(l+r)&gt;&gt;1; pushdown(p);\nif(mid&gt;=ql) query(l,mid,ql,qr,p&lt;&lt;1);\nif(qr&gt;mid) query(mid+1,r,ql,qr,p&lt;&lt;1|1);\n}\n\nint main(){\nex_unit.unit_init(),read(n),built(1,n,1),read(m);\nfor(register int i=1;i&lt;=m;i++){\nunit=ex_unit; int opt,l,r,v;\nread(opt);read(l);read(r);\nif(opt==1) init_1(),update(1,n,l,r,1,unit);\nif(opt==2) init_2(),update(1,n,l,r,1,unit);\nif(opt==3) init_3(),update(1,n,l,r,1,unit);\nif(opt==4) read(v),init_4(v),update(1,n,l,r,1,unit);\nif(opt==5) read(v),init_5(v),update(1,n,l,r,1,unit);  if(opt==6) read(v),init_6(v),update(1,n,l,r,1,unit);  if(opt==7) memset(ans.a,0,sizeof(ans.a)),query(1,n,l,r,1),printf(\"%d %d %d\\n\",ans.a[1][1],ans.a[1][2],ans   .a[1][3]);\n} return 0;\n}\n</code></pre>"}, {"location": "algor/ds/segtree/#libreoj-6208", "title": "\u300cLibreOJ 6208\u300d\u6811\u4e0a\u8be2\u95ee", "text": "<p>\u6709\u4e00\u68f5 \\(n\\) \u8282\u70b9\u7684\u6811\uff0c\u6839\u4e3a \\(1\\) \u53f7\u8282\u70b9\u3002\u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u6743\u503c \\(k_i, t_i\\)\uff0c\u521d\u59cb\u503c\u5747\u4e3a \\(0\\)\u3002     \u7ed9\u51fa\u4e09\u79cd\u64cd\u4f5c\uff1a  </p> <ol> <li> <p>\\(\\operatorname{Add}( x , d )\\) \u64cd\u4f5c\uff1a\u5c06 \\(x\\) \u5230\u6839\u7684\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7684 \\(k_i\\leftarrow k_i + d\\)</p> </li> <li> <p>\\(\\operatorname{Mul}( x , d )\\) \u64cd\u4f5c\uff1a\u5c06 \\(x\\) \u5230\u6839\u7684\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7684 \\(t_i\\leftarrow t_i + d \\times k_i\\)</p> </li> <li> <p>\\(\\operatorname{Query}( x )\\) \u64cd\u4f5c\uff1a\u8be2\u95ee\u70b9 \\(x\\) \u7684\u6743\u503c \\(t_x\\) </p> <p>\\(n,~m \\leq 100000, ~-10 \\leq d \\leq 10\\)</p> </li> </ol> <p>\u82e5\u76f4\u63a5\u601d\u8003\uff0c\u4e0b\u653e\u64cd\u4f5c\u548c\u7ef4\u62a4\u4fe1\u606f\u5e76\u4e0d\u662f\u5f88\u597d\u60f3\u3002\u4f46\u662f\u77e9\u9635\u53ef\u4ee5\u8f7b\u677e\u5730\u8868\u8fbe\u3002</p> \\[ \\begin{aligned} \\begin{bmatrix}k &amp; t &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ d &amp; 0 &amp; 1 \\end{bmatrix} &amp;= \\begin{bmatrix}k+d &amp; t &amp; 1 \\end{bmatrix}\\\\ \\begin{bmatrix}k &amp; t &amp; 1 \\end{bmatrix} \\begin{bmatrix} 1 &amp; d &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix} &amp;= \\begin{bmatrix}k &amp; t+d \\times k &amp; 1 \\end{bmatrix} \\end{aligned} \\] <p>\u8fd9\u91cc\u5077\u61d2\u76f4\u63a5\u627e\u4e86 OI-wiki \u7684\u4f8b\u5b50\u3002</p> <p>\u4f46\u662f\u6211\u8865\u5145\u4e00\u70b9\uff0c\u5c31\u662f\u4f60\u53d1\u73b0\u8fd9\u4e24\u4e2a\u9898\u7684\u5171\u540c\u70b9\u5c31\u662f\uff0c\u4f60\u4e00\u6b21\u64cd\u4f5c\u5bf9\u4e00\u4e2a\u4fe1\u606f\u7684\u4fee\u6539\u53ef\u80fd\u4f1a\u548c\u53e6\u5916\u4e00\u4e2a\u4fe1\u606f\u6709\u5173\u7cfb\uff0c\u4f60\u76f4\u63a5\u8003\u8651 tag \u4f1a\u6bd4\u8f83\u9ebb\u70e6\u3002</p> <p>\u5982\u679c\u7528\u77e9\u9635\u5c31\u80fd\u5f88\u597d\u7684\u628a\u4ed6\u4eec\u5199\u5230\u4e00\u8d77\uff0c\u5b9e\u73b0\u548c\u601d\u8003\u65b9\u5f0f\u5c31\u4f1a\u6bd4\u8f83\u65e0\u8111\uff0c\u4e5f\u6bd4\u8f83\u65b9\u4fbf\u4e86\uff0c\u5f53\u7136\u5b83\u53ea\u662f\u4e00\u79cd\u523b\u753b\u7b56\u7565\u7f62\u4e86\uff0c\u6b63\u5e38\u7684 tag \u4e5f\u53ef\u4ee5\u7528\u5b83\u6765\u601d\u8003\u3002</p> <ol> <li> <p>\u8fd9\u91cc\u4e3a\u4e86\u8ba8\u8bba\u65b9\u4fbf\u8003\u8651\u7684\u662f\u4e24\u4e2a tag \u7ef4\u62a4\u7684\u4fe1\u606f\u90fd\u6709\u4fee\u6539\u7684\u60c5\u51b5\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u6ca1\u6709\u66f4\u6539\u7684 tag \u53ef\u4ee5\u89c6\u4e3a\u88ab\u6253\u4e0a\u4e86\u5e7a\u5143\u6807\u8bb0\u3002\u00a0\u21a9</p> </li> </ol>"}, {"location": "algor/ds/stack/", "title": "\u6808", "text": ""}, {"location": "algor/ds/stack/#_1", "title": "\u6982\u8ff0", "text": "<p>\u6808\u662f\u4e00\u79cd LIFO(Last In First Out)\u8868\uff0c\u610f\u601d\u662f\u540e\u8fdb\u5165\u7684\u5143\u7d20\u5148\u51fa\u6765\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u7406\u89e3\u4e3a\u4e00\u4e2a\u6728\u6876\u3002</p> <p>\u4e00\u5f20\u56fe\uff08\u56fe\u6e90 OI-wiki\uff09\uff1a</p> <p></p> <p>\u6808\u662f\u4e00\u79cd\u6bd4\u8f83\u901a\u7528\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u5728\u9012\u5f52\uff0c\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u62ec\u53f7\u914d\u5bf9\u7b49\u5730\u65b9\u6709\u5f88\u591a\u5e94\u7528\u3002</p> <p>\u6bd4\u5982\u4f60\u7684 dfs\uff0c\u672c\u8d28\u4e0a\u662f\u7528\u4e86\u4e00\u4e2a\u7cfb\u7edf\u6808\u5728\u6a21\u62df\uff0c\uff08\u6240\u4ee5\u4f1a\u6709\u624b\u5de5\u6808\u8fd9\u79cd\u4f18\u5316\u65b9\u5f0f\uff09\u3002</p> <p>\u6808\u4e00\u822c\u652f\u6301\u51e0\u4e2a\u64cd\u4f5c\uff1a</p> <ul> <li><code>push(x)</code>\uff1a\u5c06\u5143\u7d20 \\(x\\) \u5165\u6808\uff0c\u590d\u6742\u5ea6 \\(O(1)\\)\u3002</li> <li><code>pop()</code>\uff1a\u5c06\u6808\u9876\u5143\u7d20 \\(top\\) \u51fa\u6808\uff0c\u590d\u6742\u5ea6 \\(O(1)\\)\u3002</li> <li><code>gettop()</code>\uff1a\u8be2\u95ee\u6808\u9876\u5143\u7d20 \\(top\\) \u7684\u503c\uff0c\u590d\u6742\u5ea6 \\(O(1)\\)\u3002</li> </ul> <p>\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u6a21\u62df\uff1a</p> <pre><code>int st[si], tp = 0; // tp \u6a21\u62df\u6808\u9876\u6307\u9488\uff0c\u521d\u59cb\u4e3a\u7a7a\u3002\n\nvoid push(int x) { st[++tp] = x; }\nvoid pop(){ if(tp) --tp; }\nint gettop(){ return st[tp]; }\nvoid clear(){ tp = 0; } // \u6e05\u7a7a\u6808\uff0c\u8fd9\u662f\u6570\u7ec4\u6a21\u62df\u7684\u597d\u5904\uff0c\u76f4\u63a5\u6307\u5411 0 \u5c31\u884c\u4e86\u3002\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 STLstack\uff0c\u5305\u542b\u5728 <code>#include &lt;stack&gt;</code> \u4e2d\u3002</p> <pre><code>std::stack&lt;int&gt;s;\n\nint x;\n\ns.push(x); // \u538b\u5165\u3002\ncout &lt;&lt; s.top() &lt;&lt; endl;\ns.pop(); // \u5f39\u6808\n\nint sz = int(s.size()) // \u6c42\u5176\u5927\u5c0f\nbool ept = s.empty() // \u662f\u5426\u4e3a\u7a7a\n</code></pre>"}, {"location": "algor/ds/stack/#_2", "title": "\u5e94\u7528", "text": ""}, {"location": "algor/ds/stack/#_3", "title": "\u5355\u8c03\u6808", "text": "<p>\u89c1\uff1a\u5355\u8c03\u6808\u3002</p>"}, {"location": "algor/ds/stack/#_4", "title": "\u8868\u8fbe\u5f0f\u6c42\u503c", "text": "<p>\u89c1\uff1a\u8868\u8fbe\u5f0f\u6c42\u503c\u3002</p>"}, {"location": "algor/ds/trie-bst/", "title": "Trie bst", "text": "<p>\u5495\u5495</p>"}, {"location": "algor/graph/bipartite-graph/", "title": "\u4e8c\u5206\u56fe", "text": ""}, {"location": "algor/graph/bipartite-graph/#_1", "title": "\u5b9a\u4e49", "text": "<p>\u5982\u679c\u4e00\u5f20\u65e0\u5411\u56fe \\(G\\) \u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u70b9\u96c6 \\(A,B\\) \uff0c\u4e14\u70b9\u96c6\u5f53\u4e2d\u7684\u70b9\u76f8\u4e92\u4e4b\u95f4\u6ca1\u6709\u8fde\u8fb9\uff0c\u5219\u79f0 \\(G\\) \u4e3a\u4e00\u5f20\u4e8c\u5206\u56fe\u3002</p> <p>\\(A,B\\) \u5206\u522b\u79f0\u4e3a \\(G\\) \u7684\u5de6\u90e8\u548c\u53f3\u90e8\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#_2", "title": "\u5224\u5b9a", "text": "<p>\u5b9a\u7406\uff1a\u65e0\u5411\u56fe \\(G\\) \u662f\u4e8c\u5206\u56fe\uff0c\u5f53\u4e14\u4ec5\u5f53\u56fe\u4e2d\u4e0d\u5b58\u5728\u5947\u73af\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u7528\u67d3\u8272\u6cd5\u5224\u5b9a\u65e0\u5411\u56fe \\(G\\) \u662f\u4e0d\u662f\u4e8c\u5206\u56fe\u3002</p> <p>\u8fdb\u884c\u9ed1\u767d\u7684\u95f4\u9694\u67d3\u8272\uff0c\u5982\u679c\u51fa\u73b0\u51b2\u7a81\uff0c\u90a3\u4e48\u56fe\u4e2d\u5fc5\u7136\u5b58\u5728\u5947\u73af\uff0c\\(G\\) \u4e0d\u662f\u4e8c\u5206\u56fe\u3002</p> <pre><code>int color[si_n];\nbool ok=true;\ninline void dfs(int u,int col){\ncolor[u]=col;\nfor(register int i=head[u];~i;i=e[i].Next){\nint v=e[i].ver;\nif(!color[v]) dfs(v,3-col);\nelse if(color[v]==col) ok=false;\n}\n}\n// in main()\nmemset(color,0,sizeof color);\nfor(register int i=1;i&lt;=n;++i) if(!color[i]) dfs(i,1);\n</code></pre> <p>\u590d\u6742\u5ea6 \\(\\text{O}(n+m)\\)\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#_3", "title": "\u6700\u5927\u5339\u914d", "text": "<p>\u5339\u914d\uff1a\u4efb\u610f\u4e24\u6761\u8fb9\u90fd\u6ca1\u6709\u516c\u5171\u7aef\u70b9\u7684\u8fb9\u96c6\u79f0\u4e3a\u56fe\u7684\u4e00\u7ec4\u5339\u914d \\(S\\)\u3002</p> <p>\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff1a\u4e8c\u5206\u56fe\u5f53\u4e2d\uff0c\u8fb9\u6570\u6700\u591a\u7684\u4e00\u7ec4\u5339\u914d\u4e3a\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u3002</p> <p>\u5728 \\(S\\) \u5f53\u4e2d\u7684\u8fb9\u88ab\u79f0\u4e3a\u5339\u914d\u8fb9\uff0c\u5176\u5b83\u7684\u8fb9\u79f0\u4e3a\u975e\u5339\u914d\u8fb9\uff0c\u5339\u914d\u8fb9\u7684\u7aef\u70b9\u662f\u5339\u914d\u70b9\uff0c\u5176\u5b83\u8282\u70b9\u88ab\u79f0\u4e3a\u975e\u5339\u914d\u70b9\u3002</p> <p>\u5982\u679c\u4e8c\u5206\u56fe\u4e0a\u5b58\u5728\u4e00\u6761\u8def\u5f84 \\(\\delta(u,v)\\) \uff0c\u8fde\u63a5 \\(u,v\\) \u8fd9\u4e24\u4e2a\u975e\u5339\u914d\u70b9\uff0c\u4f7f\u5f97 \\(S\\) \u7684\u5339\u914d\u8fb9\u548c\u975e\u5339\u914d\u8fb9\u5728\u8def\u5f84\u4e0a\u4ea4\u66ff\u51fa\u73b0\uff0c\u79f0 \\(\\delta(u,v)\\) \u4e3a\u5339\u914d \\(S\\) \u7684\u589e\u5e7f\u8def\u3002</p> <p>\u5982\u56fe\uff0c\\(\\delta(u,v)\\) \u5373\u4e3a\u4e00\u6761\u589e\u5e7f\u8def\uff1a</p> <p></p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5148\u5b9a\u4e49\u7684\u662f\u5339\u914d\u70b9\u548c\u5339\u914d\u8fb9\uff0c\u5269\u4e0b\u7684\u624d\u662f\u975e\u5339\u914d\u8fb9\u548c\u5339\u914d\u70b9\u3002</p> <p>\u6240\u4ee5\u8fde\u63a5\u4e24\u4e2a\u5339\u914d\u70b9\u7684\u4e0d\u4e00\u5b9a\u662f\u5339\u914d\u8fb9\uff0c\u4f46\u7aef\u70b9\u5e26\u6709\u975e\u5339\u914d\u70b9\u7684\u8fb9\u4e00\u5b9a\u662f\u975e\u5339\u914d\u8fb9\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u589e\u5e7f\u8def\u5177\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a</p> <ol> <li>\u8fb9\u6570\u4e3a\u5947\u6570</li> <li>\u7b2c \\(1,3,5,...\\) \u6761\u8fb9\u662f\u975e\u5339\u914d\u8fb9\uff0c\u7b2c \\(2,4,6,...\\) \u6761\u8fb9\u662f\u5339\u914d\u8fb9\u3002</li> </ol> <p>\u6240\u4ee5\uff0c\u53ef\u4ee5\u5bf9\u589e\u5e7f\u8def\u4e0a\u7684\u8fb9\u7684\u72b6\u6001\u53d6\u53cd\uff0c\u5f97\u5230\u7684\u5339\u914d\u6570\u5fc5\u7136\u4f1a\u589e\u52a0 \\(1\\)\u3002</p> <p>\u4ece\u800c\u53ef\u4ee5\u5f97\u5230\u5b9a\u7406\uff1a</p> <p>\u4e8c\u5206\u56fe\u7684\u4e00\u7ec4\u5339\u914d \\(S\\) \u662f\u6700\u5927\u5339\u914d\uff0c\u5f53\u4e14\u4ec5\u5f53\u56fe\u4e2d\u4e0d\u5b58\u5728 \\(S\\) \u7684\u589e\u5e7f\u8def\u3002</p> <p>\u5bf9\u5e94\u7684\u6709\u4e00\u4e2a\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5229\u7528\u589e\u5e7f\u8def\u6c42\u51fa\u4e8c\u5206\u56fe \\(G\\) \u7684\u6700\u5927\u5339\u914d\u3002</p> <p>\u601d\u8def\u662f\uff1a</p> <ol> <li>\u6700\u5f00\u59cb\u5148\u4ee4 \\(S=\\emptyset\\) \uff0c\u7136\u540e\u5bfb\u627e\u4e00\u4e2a\u589e\u5e7f\u8def\uff0c\u53d6\u53cd\uff0c\u5f97\u5230\u65b0\u5339\u914d \\(S\\prime\\)\u3002</li> <li>\u91cd\u590d\u76f4\u5230\u4e0d\u5b58\u5728\u589e\u5e7f\u8def\u3002</li> </ol> <p>\u5bfb\u627e\u589e\u5e7f\u8def\u7684\u65f6\u5019\u5206\u4e24\u79cd\u60c5\u51b5\u7ed9\u4e00\u4e2a\u5de6\u90e8\u8282\u70b9 \\(x\\) \u5bfb\u627e\u4e00\u4e2a\u5339\u914d\u7684\u53f3\u90e8\u8282\u70b9 \\(y\\)\uff1a</p> <ol> <li> <p>\\(y\\) \u5c31\u662f\u975e\u5339\u914d\u70b9\uff0c\\((x,y)\\) \u672c\u8eab\u5c31\u662f\u589e\u5e7f\u8def\u3002</p> </li> <li> <p>\\(y\\) \u5df2\u7ecf\u548c\u53e6\u5916\u4e00\u4e2a\u5de6\u90e8\u8282\u70b9\u5339\u914d\uff0c\u4f46\u662f\u8fd9\u4e2a\u5de6\u90e8\u8282\u70b9 \\(u\\) \u8fd8\u80fd\u627e\u5230\u53e6\u5916\u7684\u53f3\u90e8\u8282\u70b9 \\(v\\) \u5339\u914d\u3002</p> </li> </ol> <p>\u5219 \\(x\\to y \\to u \\to v\\) \u662f\u4e00\u6761\u589e\u5e7f\u8def .</p> <pre><code>bool vis[si_n];\nint match[si_n];\ninline bool dfs(int u){\nfor(register int i=head[u];~i;i=e[i].Next){\nint v=e[i].ver;\nif(!vis[v]){\nvis[v]=true;\nif(!match[v] || dfs(match[v])){\nmatch[v]=u; return true;\n} // \u5bfb\u627e\u589e\u5e7f\u8def\u7684\u4e24\u79cd\u60c5\u51b5\n}\n} return false;\n}\n\n// in main()\nint res=0;\nfor(register int i=1;i&lt;=n;++i){\nmemset(vis,false,sizeof vis);\nif(dfs(i)) res++;\n} // \u53ea\u7528\u4ece\u5de6\u90e8\u5f00\u59cb\n// \u8fde\u8fb9\u7684\u65f6\u5019\u4f3c\u4e4e\u53ef\u4ee5\u53ea\u8fde\u4ece\u5de6\u90e8\u5230\u53f3\u90e8\u7684\u6709\u5411\u8fb9\n</code></pre> <p>\u590d\u6742\u5ea6 \\(\\text{O}(nm)\\) \uff0c\u4f46\u4e00\u822c\u5361\u4e0d\u6ee1\u3002</p> <p>\u5efa\u56fe\u8fde\u8fb9\u7684\u65f6\u5019\u4f3c\u4e4e\u53ef\u4ee5\u53ea\u8fde\u4ece\u5de6\u90e8\u5230\u53f3\u90e8\u7684\u6709\u5411\u8fb9\uff1f</p> <p>\u5982\u679c\u8fde\u65e0\u5411\u8fb9\u4f3c\u4e4e\u4e5f\u4e00\u6837\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#ch6801", "title": "[CH6801] \u68cb\u76d8\u8986\u76d6", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a \\(n\\times m\\) \u7684\u68cb\u76d8\uff0c\u6709\u4e9b\u5730\u65b9\u4e0d\u80fd\u653e\uff0c\u6c42\u6700\u591a\u80fd\u653e\u591a\u5c11\u4e2a \\(1\\times 2\\) \u6216\u8005 \\(2\\times 1\\) \u7684\u9aa8\u724c\u3002</p> <p>\u4e14\u9aa8\u724c\u4e0d\u80fd\u91cd\u53e0\u3002</p> <p>\\(n,m\\le 100\\)\u3002</p> <p>\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u6a21\u578b\u9700\u8981\u627e\u5230\u4e24\u4e2a\u8981\u7d20\uff1a</p> <ul> <li>\\(0\\) \u8981\u7d20\uff1a\u8282\u70b9\u80fd\u5206\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u96c6\u5408\uff0c\u4e14\u96c6\u5408\u5185\u90e8\u6ca1\u6709\u8fb9</li> <li>\\(1\\) \u8981\u7d20\uff1a\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u548c\u4e00\u6761\u5339\u914d\u8fb9\u76f8\u8fde\u3002</li> </ul> <p>\u9aa8\u724c\u4e0d\u80fd\u91cd\u590d\uff0c\u5bf9\u5e94\u7684\u5c31\u662f \\(1\\) \u8981\u7d20\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u9aa8\u724c\u770b\u4f5c\u8fb9\uff0c\u9aa8\u724c\u53ef\u4ee5\u5360\u7528\u7684\u4e24\u4e2a\u683c\u5b50\u5206\u522b\u5f53\u4f5c\u5de6\u90e8\u548c\u53f3\u90e8\u8282\u70b9\u3002</p> <p>\u6240\u4ee5\u5bf9\u68cb\u76d8\u9ed1\u767d\u67d3\u8272\uff0c\u90a3\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u9aa8\u724c\u5fc5\u7136\u8fde\u63a5\u7684\u662f\u5de6\u53f3\u90e8\u5404\u4e00\u4e2a\u8282\u70b9\u3002</p> <p>\u628a ban \u6389\u7684\u683c\u5b50\u9664\u5916\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\uff08\u7528\u6a2a\u7eb5\u5750\u6807\u7684\u548c\u7684\u5947\u5076\u6027\u53d6\u5206\u5de6\u53f3\u90e8\u8282\u70b9\u5373\u53ef\uff09</p> <p>\u8fde\u8fb9\u7684\u65f6\u5019\u53ea\u9700\u8981\u4ece\u5de6\u90e8\u8fde\u5230\u53f3\u90e8\u5c31\u884c\u3002</p> <p>\u6c42\u51fa\u7684\u6700\u5927\u5339\u914d\u5c31\u662f\u7b54\u6848\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#ch6802", "title": "[CH6802] \u8eca\u7684\u653e\u7f6e", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a \\(n \\times m\\) \u7684\u68cb\u76d8\uff0c\u6709\u4e00\u4e9b\u683c\u5b50\u4e0d\u80fd\u653e\u3002</p> <p>\u95ee\u6700\u591a\u53ef\u4ee5\u653e\u591a\u5c11\u4e2a\u4e92\u4e0d\u653b\u51fb\u7684\u8eca\uff0c\\(n,m \\le 200\\)\u3002</p> <p>\u53d1\u73b0\u4e00\u4e2a\u8eca\u7684\u653b\u51fb\u8303\u56f4\u662f\u4e00\u884c\u548c\u4e00\u5217\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a \\(1\\) \u8981\u7d20\uff1a\u6bcf\u884c\u6bcf\u5217\u6700\u591a\u4e00\u4e2a\u8eca\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u8003\u8651\u628a\u884c\u548c\u5217\u770b\u4f5c\u70b9\uff0c\u68cb\u5b50\u770b\u4f5c\u8fb9\uff0c\u56e0\u4e3a\u4e00\u4e2a\u68cb\u5b50\u4e0d\u53ef\u80fd\u540c\u65f6\u51fa\u73b0\u5728\u4e24\u884c\u6216\u8005\u4e24\u5217\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f \\(0\\) \u8981\u7d20\u3002</p> <p>\u90a3\u4e48\u6574\u5f20\u56fe\u5c31\u662f\u4e8c\u5206\u56fe\uff0c\u8dd1\u6700\u5927\u5339\u914d\u5373\u53ef\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#_4", "title": "\u6700\u5c0f\u70b9\u8986\u76d6", "text": "<p>\u7ed9\u5b9a\u4e00\u5f20\u4e8c\u5206\u56fe \\(G\\)\uff0c\u6c42\u51fa\u4e00\u4e2a\u6700\u5c0f\u7684\u70b9\u96c6 \\(S\\) \uff0c\u4f7f\u5f97\u56fe\u4e2d\u4efb\u610f\u7684\u4e00\u6761\u8fb9\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u5c5e\u4e8e \\(S\\)\u3002</p> <p>\u5219\u79f0 \\(S\\) \u4e3a\u4e8c\u5206\u56fe \\(G\\) \u7684\u6700\u5c0f\u70b9\u8986\u76d6\u3002</p> <p>\u6709 \\(K\\ddot{o}nig\\) \u5b9a\u7406\uff1a\u4e8c\u5206\u56fe \\(G\\) \u7684\u6700\u5c0f\u70b9\u8986\u76d6\u5305\u542b\u7684\u70b9\u6570\u7b49\u4e8e \\(G\\) \u7684\u6700\u5927\u5339\u914d\u5305\u542b\u7684\u8fb9\u6570\u3002</p> <p>\u8bc1\u660e\u7565\uff0c\u4f46\u662f\u63d0\u4e00\u4e2a\u6784\u9020\u65b9\u5f0f\uff1a</p> <p>\u5148\u6c42\u6700\u5927\u5339\u914d \\(S\\)\u3002</p> <p>\u4ece\u5de6\u90e8\u7684\u6bcf\u4e00\u4e2a\u975e\u5339\u914d\u70b9\u51fa\u53d1\uff0c\u518d\u505a\u4e00\u6b21 dfs \u627e\u589e\u5e7f\u8def\u5e76\u6807\u8bb0\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u3002</p> <p>\u6700\u540e\u5de6\u90e8\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u70b9\uff0c\u53f3\u90e8\u88ab\u6807\u8bb0\u7684\u70b9\u5c31\u662f\u6700\u5c0f\u70b9\u8986\u76d6\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#poj1325-machine-schedule", "title": "[POJ1325] Machine Schedule", "text": "<p>\u7ed9\u4e24\u53f0\u521d\u59cb\u4e3a\u6a21\u5f0f \\(0\\) \u7684\u673a\u5668 \\(A,B\\)\uff0c\u5206\u522b\u6709 \\(0\\sim N-1,0 \\sim M-1\\) \u8fd9\u51e0\u79cd\u6a21\u5f0f\u3002</p> <p>\u7ed9\u5b9a \\(K\\) \u4e2a \\(a[i],b[i]\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u4efb\u52a1\u5728 \\(A/B\\) \u4e0a\u8fd0\u884c\u6240\u9700\u8981\u7684\u6a21\u5f0f\u3002</p> <p>\u4efb\u52a1\u6267\u884c\u987a\u5e8f\u4efb\u610f\uff0c\u4f46\u662f\u673a\u5668\u53ea\u8981\u8f6c\u6362\u6a21\u5f0f\u5c31\u8981\u91cd\u542f\u3002</p> <p>\u6c42\u6700\u5c11\u91cd\u542f\u6b21\u6570\u3002</p> <p>\\(N,M,K \\le 100\\)\u3002</p> <p>\u4e8c\u5206\u56fe\u6700\u5c0f\u70b9\u8986\u76d6\u7684\u8981\u7d20\u53ea\u6709\u4e00\u4e2a</p> <ul> <li>\\(2\\) \u8981\u7d20\uff1a\u6bcf\u6761\u8fb9\u6709\u4e24\u4e2a\u7aef\u70b9\uff0c\u4e8c\u8005\u81f3\u5c11\u9009\u4e00\u4e2a\u3002</li> </ul> <p>\u672c\u9898\u7684\u9009\u62e9\u54ea\u4e00\u4e2a\u673a\u5668\u5c31\u662f\u7aef\u70b9\uff0c\u4efb\u52a1\u5c31\u662f\u8fb9\u3002</p> <p>\u6240\u4ee5\u628a\u4efb\u52a1\u4f5c\u4e3a\u8fb9\uff0c\\(A\\) \u7684\u6a21\u5f0f \\(0 \\sim N-1\\) \u4f5c\u4e3a\u5de6\u90e8\uff0c\\(B\\) \u7684\u6a21\u5f0f \\(0 \\sim M-1\\) \u4f5c\u4e3a\u53f3\u90e8\u8282\u70b9\u3002</p> <p>\u7136\u540e\u6c42\u6700\u5c0f\u70b9\u8986\u76d6\u5373\u53ef\u3002</p> <p>\u56e0\u4e3a\u521d\u59cb\u662f \\(0\\) \uff0c\u6240\u4ee5 \\(a[i],b[i]\\) \u53ea\u8981\u6709\u4e00\u4e2a\u662f \\(0\\) \u5c31\u53ef\u4ee5\u4e0d\u7528\u7ba1\u8fd9\u4e2a\u4efb\u52a1\u4e86\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#poj2226-muddy-fields", "title": "[POJ2226] Muddy Fields", "text": "<p>\u7ed9\u4e00\u4e2a \\(n\\times m\\) \u7684\u683c\u5b50\u56fe\uff0c\u6709\u4e9b\u5730\u65b9\u662f\u810f\u7684\u3002</p> <p>\u7528\u82e5\u5e72\u4e2a\u53ef\u4ee5\u91cd\u590d\u8986\u76d6\u7684\uff0c\u53ef\u4ee5 90 \u5ea6\u65cb\u8f6c\u7684\uff0c\u5bbd\u4e3a \\(1\\) \uff0c\u957f\u5ea6\u4efb\u610f\u7684\u677f\u5b50\u8986\u76d6\u6240\u6709\u810f\u7684\u683c\u5b50\u3002</p> <p>\u4e14\u4e0d\u80fd\u8986\u76d6\u5e72\u51c0\u7684\u683c\u5b50\uff0c\u6c42\u6700\u5c0f\u9700\u8981\u591a\u5c11\u4e2a\u677f\u5b50\u3002</p> <p>\\(n,m \\le 50\\)\u3002</p> <p>\u8fd9\u9898\u5982\u679c\u76f4\u63a5\u4ece\u683c\u5b50\u4f5c\u4e3a\u70b9\u6765\u5339\u914d\u662f\u627e\u4e0d\u5230\u4ec0\u4e48\u601d\u8def\u7684\u3002</p> <p>\u53d1\u73b0\u9898\u76ee\u4e2d\u8bf4\u53ef\u4ee5\u65cb\u8f6c 90 \u5ea6\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u683c\u5b50\uff0c\u8986\u76d6\u5b83\u7684\u4e0d\u662f\u4e0a\u4e0b\u65b9\u5411\u7684\u5c31\u662f\u5de6\u53f3\u65b9\u5411\u7684\u677f\u5b50\u3002</p> <p>\u5e76\u4e14\u9898\u76ee\u4e2d\u8bf4\u53ef\u4ee5\u91cd\u590d\u8986\u76d6\uff0c\u53ea\u8981\u88ab\u8986\u76d6\u8fc7\u90fd\u884c\u3002</p> <p>\u8fd9\u53e5\u8bdd\u6697\u793a\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u4f4d\u8fd0\u7b97\u7684 \u201c\u6216\u201d \u7684\u6761\u4ef6\uff0c\u53ef\u4ee5\u628a\u4ed6\u8f6c\u5316\u6210 \u201c\u81f3\u5c11\u201d\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u628a\u884c\u548c\u5217\u770b\u4f5c\u8282\u70b9\uff0c\u683c\u5b50\u4f5c\u4e3a\u8fb9\uff0c\u7c7b\u4f3c\u4e0a\u9762\u7684 \u201c\u8eca\u7684\u653e\u7f6e\u201d\u3002</p> <p>\u4f46\u662f\u53d1\u73b0\u76f4\u63a5\u8fd9\u6837\u505a\u7684\u8bdd\uff0c\u5982\u679c\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\u5c31\u4f1a\u51fa\u4e8b \uff1a <code>.*.*.*.</code>\u3002</p> <p>\u4e0a\u8ff0\u505a\u6cd5\u4f1a\u76f4\u63a5\u5728\u8fd9\u4e00\u884c\u653e\u4e00\u4e2a\uff0c\u800c\u5ffd\u7565\u4e86\u4e0d\u80fd\u8986\u76d6\u5e72\u51c0\u7684\u683c\u5b50\u7684\u6761\u4ef6\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u810f\u683c\u5b50\u7684\u8fde\u901a\u5757\u5355\u72ec\u8dd1\u6700\u5c0f\u70b9\u8986\u76d6\u3002</p> <p>\u4f46\u662f\u590d\u6742\u5ea6\u4f1a\u7206\u70b8\uff0c\u6240\u4ee5\u8003\u8651\u80fd\u8fbe\u5230\u540c\u6837\u6548\u679c\u7684\u53e6\u4e00\u4e2a\u505a\u6cd5\uff1a</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u810f\u8fde\u901a\u5757\uff0c\u628a\u5b83\u5206\u6210\u5bbd\u5ea6\u4e3a \\(1\\) \u7684 \u201c\u884c\u810f\u8fde\u901a\u5757\u201d\u548c\u201c\u5217\u810f\u8fde\u901a\u5757\u201d\uff0c\u53ef\u4ee5\u770b\u4f5c\u76f4\u63a5\u653e\u4e86\u5757\u540c\u7b49\u5927\u5c0f\u7684\u677f\u5b50\u4e0a\u53bb\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u8fde\u63a5\u5b83\u6240\u5728\u7684\u201c\u884c\u810f\u8fde\u901a\u5757\u201d\u548c\u201c\u5217\u810f\u8fde\u901a\u5757\u201d\uff0c\u8dd1\u6700\u5c0f\u70b9\u8986\u76d6\u5373\u53ef\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#_5", "title": "\u6700\u5927\u72ec\u7acb\u96c6", "text": "<p>\u7ed9\u4e00\u5f20\u4e8c\u5206\u56fe \\(G\\)\uff0c\u6c42\u51fa\u4e00\u4e2a\u70b9\u96c6 \\(S\\) \u4f7f\u5f97 \\(S\\) \u5f53\u4e2d\u7684\u70b9\u90fd\u6ca1\u6709\u8fb9\u76f8\u8fde\u3002</p> <p>\u6700\u5927\u7684 \\(S\\) \u5219\u79f0\u4e3a \\(G\\) \u7684\u6700\u5927\u72ec\u7acb\u96c6\u3002</p> <p>\u6700\u5927\u56e2\u5b9a\u4e49\u76f8\u53cd\uff0c\u662f\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u8fde\u8fb9\u7684\u4e00\u4e2a\u5b50\u56fe\u3002</p> <p>\u5b9a\u7406\uff1a\u65e0\u5411\u56fe \\(G\\) \u7684\u6700\u5927\u56e2\u7b49\u4e8e\u5176\u8865\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u3002</p> <p>\u4e00\u822c\u65e0\u5411\u56fe\u7684\u6700\u5927\u56e2\u548c\u6700\u5927\u72ec\u7acb\u96c6\u662f NPC\u3002</p> <p>\u5b9a\u7406\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56fe \\(G\\)\uff0c\\(G\\) \u7684\u6700\u5927\u72ec\u7acb\u96c6\u7684\u5927\u5c0f\u7b49\u4e8e\u8282\u70b9\u4e2a\u6570\u51cf\u53bb\u6700\u5c0f\u70b9\u8986\u76d6\u6570\u3002</p> <p>\u5229\u7528\u5b9a\u4e49\u5373\u53ef\u8bc1\u660e\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#ch6901", "title": "[CH6901] \u9a91\u58eb\u653e\u7f6e", "text": "<p>\u7ed9\u4e00\u4e2a \\(n\\times m\\) \u7684\u68cb\u76d8\u3002\u6709\u4e00\u4e9b\u70b9\u4e0d\u80fd\u653e\uff0c\u95ee\u6700\u591a\u53ef\u4ee5\u653e\u591a\u5c11\u4e2a\u56fd\u9645\u8c61\u68cb\u7684\u9a91\u58eb\u3002</p> <p>\u9a91\u58eb\u5728\u683c\u5b50\u4e0a\u6309\u7167\u65e5\u5b57\u653b\u51fb\uff0c\u548c\u4e2d\u56fd\u8c61\u68cb\u7684\u9a6c\u6709\u4e00\u5b9a\u533a\u522b\uff08\u6ca1\u6709\u522b\u9a6c\u817f\uff09\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\u76f8\u4e92\u4e0d\u80fd\u653b\u51fb\u5c31\u662f\u6c42\u6700\u5927\u72ec\u7acb\u96c6\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u9632\u6b62\u7684\u8282\u70b9\u5f53\u4f5c\u4e00\u4e2a\u8282\u70b9\u548c\u5b83\u80fd\u5230\u8fbe\u7684\u8282\u70b9\u8fde\u8fb9\u3002</p> <p>\u9ed1\u767d\u67d3\u8272\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\u6784\u9020\u7684\u56fe\u5fc5\u7136\u662f\u4e8c\u5206\u56fe\u3002</p> <p>\u6240\u4ee5\u627e\u5230\u6240\u6709\u5de6\u90e8\u8282\u70b9\uff0c\u8fde\u8fb9\uff0c\u6c42\u6700\u5927\u72ec\u7acb\u96c6\u5373\u53ef\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#_6", "title": "\u6700\u5c0f\u8def\u5f84\u70b9\u8986\u76d6", "text": "<p>\u7ed9\u5b9a\u4e00\u5f20 DAG\uff0c\u8981\u6c42\u7528\u5c3d\u91cf\u5c11\u7684 \u4e0d\u76f8\u4ea4 \u8def\u5f84\u8986\u76d6\u6574\u5f20\u56fe\u7684\u6240\u6709\u9876\u70b9\u3002</p> <p>\u8fd9\u5c31\u662f\u6700\u5c0f\u8def\u5f84\u70b9\u8986\u76d6\u3002</p> <p>\u62c6\u70b9\u4e8c\u5206\u56fe\uff1a\u5bf9\u4e8e\u4e00\u5f20 DAG\uff0c\u8bbe\u5b83\u6709 \\(N\\) \u4e2a\u8282\u70b9\uff0c\u628a\u539f\u56fe\u7684\u6bcf\u4e2a\u8282\u70b9\u62c6\u6210\u4e24\u4e2a\u8282\u70b9\uff0c\u5de6\u90e8\u7684\u7f16\u53f7\u4e3a\u539f\u7f16\u53f7\uff0c\u53f3\u90e8\u7684\u7f16\u53f7\u4e3a\u539f\u7f16\u53f7 \\(+N\\)\u3002</p> <p>\u5bf9\u4e8e\u539f\u56fe\u7684\u4e00\u6761\u6709\u5411\u8fb9 \\((x,y)\\)\uff0c\u8fde\u63a5\u65b0\u56fe\u4e0a\u7684 \\((x,y+n)\\)\u3002</p> <p>\u5f97\u5230\u7684\u4e8c\u5206\u56fe\u79f0\u4e3a\u8fd9\u4e2a DAG \u7684\u62c6\u70b9\u4e8c\u5206\u56fe\uff0c\u4e00\u822c\u8bb0\u4f5c \\(G_2\\)\u3002</p> <p>\u5b9a\u7406\uff1a\u4e00\u5f20 DAG \u7684\u6700\u5c0f\u8def\u5f84\u70b9\u8986\u76d6\u5305\u542b\u7684\u8def\u5f84\u6761\u6570\u7b49\u4e8e\u5b83\u7684\u70b9\u6570\u51cf\u53bb\u5b83\u7684\u62c6\u70b9\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u6570\u3002</p> <p>\u8bc1\u660e\u7528\u5b9a\u4e49+ \u4e00\u4e9b\u8ba8\u8bba\u5373\u53ef\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#_7", "title": "\u6700\u5c0f\u8def\u5f84\u53ef\u91cd\u590d\u70b9\u8986\u76d6", "text": "<p>\u8def\u5f84\u53ef\u4ee5\u76f8\u4ea4\u3002</p> <p>\u90a3\u4e48\u5148\u5bf9\u8fd9\u4e2a DAG \u505a\u4f20\u9012\u95ed\u5305\u5f97\u5230\u4e00\u5f20\u65b0\u7684 DAG\uff0c\u8fd9\u4e2a\u65b0 DAG \u7684\u6700\u5c0f\u8def\u5f84\u70b9\u8986\u76d6\u5c31\u662f\u539f DAG \u7684\u6700\u5c0f\u8def\u5f84\u53ef\u91cd\u590d\u70b9\u8986\u76d6\u3002</p>"}, {"location": "algor/graph/bipartite-graph/#bzoj27181143-vani-cl2", "title": "[Bzoj2718/1143] Vani \u548c Cl2 \u6349\u8ff7\u85cf", "text": "<p>Vani \u548c cl2 \u5728\u4e00\u7247\u6811\u6797\u91cc\u6349\u8ff7\u85cf\u3002</p> <p>\u8fd9\u7247\u6811\u6797\u91cc\u6709 \\(N\\) \u5ea7\u623f\u5b50\uff0c\\(M\\) \u6761\u6709\u5411\u9053\u8def\uff0c\u7ec4\u6210\u4e86\u4e00\u5f20\u6709\u5411\u65e0\u73af\u56fe\u3002</p> <p>\u6811\u6797\u91cc\u7684\u6811\u975e\u5e38\u8302\u5bc6\uff0c\u8db3\u4ee5\u906e\u6321\u89c6\u7ebf\uff0c\u4f46\u662f\u6cbf\u7740\u9053\u8def\u671b\u53bb\uff0c\u5374\u662f\u89c6\u91ce\u5f00\u9614\u3002</p> <p>\u5982\u679c\u4ece\u623f\u5b50 \\(A\\) \u6cbf\u7740\u8def\u8d70\u4e0b\u53bb\u80fd\u591f\u5230\u8fbe \\(B\\)\uff0c\u90a3\u4e48\u5728 \\(A\\) \u548c \\(B\\) \u91cc\u7684\u4eba\u662f\u80fd\u591f\u76f8\u4e92\u671b\u89c1\u7684\u3002</p> <p>\u73b0\u5728 cl2 \u8981\u5728\u8fd9 \\(N\\) \u5ea7\u623f\u5b50\u91cc\u9009\u62e9 \\(K\\) \u5ea7\u4f5c\u4e3a\u85cf\u8eab\u70b9\uff0c\u540c\u65f6 Vani \u4e5f\u4e13\u6311 cl2 \u4f5c\u4e3a\u85cf\u8eab\u70b9\u7684\u623f\u8fdb\u53bb\u5bfb\u627e\uff0c\u4e3a\u4e86\u907f\u514d\u88ab Vani \u770b\u89c1\uff0ccl2 \u8981\u6c42\u8fd9 \\(K\\) \u4e2a\u85cf\u8eab\u70b9\u7684\u4efb\u610f\u4e24\u4e2a\u4e4b\u95f4\u90fd\u6ca1\u6709\u8def\u5f84\u76f8\u8fde\u3002</p> <p>\u4e3a\u4e86\u8ba9 Vani \u66f4\u96be\u627e\u5230\u81ea\u5df1\uff0ccl2 \u60f3\u77e5\u9053\u6700\u591a\u80fd\u9009\u51fa\u591a\u5c11\u4e2a\u85cf\u8eab\u70b9\u3002</p> <p>\u660e\u663e\u5c31\u662f\u8981\u6c42\u6700\u5c0f\u8def\u5f84\u53ef\u91cd\u590d\u70b9\u8986\u76d6\u3002</p> <p>\u6240\u4ee5\u5148\u505a\u4e00\u4e2a\u4f20\u9012\u95ed\u5305\uff0c\u7136\u540e\u62c6\u70b9\uff0c\u6c42\u6700\u5c0f\u8def\u5f84\u70b9\u8986\u76d6\u5373\u53ef\u3002</p>"}, {"location": "algor/graph/dsu-on-tree/", "title": "\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76", "text": ""}, {"location": "algor/graph/dsu-on-tree/#_1", "title": "\u6982\u8ff0", "text": "<p>\u5168\u79f0\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u4e5f\u53eb\u4f18\u96c5\u7684\u6811\u4e0a\u66b4\u529b\u3002</p> <p>\u8fd9\u4e1c\u897f\u542c\u8bf4\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u9759\u6001\u94fe\u5206\u6cbb\u3002</p> <p>\u4f46\u662f\u65e0\u6240\u8c13\uff0c\u80fd\u62ff\u6765\u505a\u9898\u5c31\u884c\u3002</p> <p>\u542f\u53d1\u5f0f\u7b97\u6cd5\u7684\u601d\u60f3\u5c31\u662f\uff0c\u7528\u4f60\u7684\u8111\u5b50\u548c\u76f4\u89c9\u53bb\u4f18\u5316\u4e00\u4e9b\u7b97\u6cd5\u8fc7\u7a0b\u3002</p> <p>\u4e00\u4e2a\u6bd4\u8f83\u5e38\u89c1\u7684\u4f8b\u5b50\u5c31\u662f\u5e76\u67e5\u96c6\u7684\u6309\u79e9\u5408\u5e76\uff0c\u4e5f\u7b97\u662f\u4e00\u79cd\u542f\u53d1\u5f0f\u5408\u5e76\uff1a</p> <pre><code>void Union(int x, int y) {\nint rx = root(x), ry = root(y);\nif(rx == rx) return;\nif(siz[rx] &lt; siz[ry]) pa[rx] = ry, siz[ry] += siz[rx];\nelse pa[ry] = rx, siz[rx] += siz[ry];\n}\n</code></pre> <p>\u8fd9\u91cc\u628a\u5c0f\u7684\u96c6\u5408\u7684\u63a5\u5230\u5927\u7684\u96c6\u5408\u4e0b\u9762\uff0c\u539f\u56e0\u662f\u96c6\u5408\u7684\u5927\u5c0f\u53ef\u4ee5\u8fd1\u4f3c\u7684\u770b\u4f5c\u96c6\u5408\u7684\u9ad8\u5ea6\u3002</p> <p>\u628a\u9ad8\u5ea6\u77ee\u7684\u5408\u5e76\u5230\u9ad8\u5ea6\u9ad8\u7684\u663e\u7136\u80fd\u66f4\u5feb\u7684\u8fdb\u884c\u627e\u96c6\u5408\u7236\u4eb2\u7684\u64cd\u4f5c <code>root()</code>\u3002</p> <p>\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\u5176\u5b9e\u548c\u8fd9\u4e2a\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5229\u7528\u542f\u53d1\u5f0f\u7b97\u6cd5\u7684\u601d\u60f3\uff0c\u6765\u4f18\u5316\u6811\u4e0a\u5b50\u8282\u70b9\u4fe1\u606f\u7684\u5408\u5e76\u8fc7\u7a0b\u3002</p> <p>\u8fd9\u53ef\u80fd\u4e5f\u662f\u8fd9\u4e2a\u7b97\u6cd5\u53eb dsu on tree \u7684\u539f\u56e0\u3002</p>"}, {"location": "algor/graph/dsu-on-tree/#_2", "title": "\u5e94\u7528", "text": ""}, {"location": "algor/graph/dsu-on-tree/#_3", "title": "\u6cdb\u5316", "text": "<p>dsu on tree \u4e3b\u8981\u8fd0\u7528\u4e8e\u4e00\u7c7b\u6811\u4e0a\u95ee\u9898\uff0c\u8fd9\u7c7b\u95ee\u9898\u4e00\u822c\u9700\u8981\u901a\u8fc7\u513f\u5b50\u5b50\u6811\u7684\u4fe1\u606f\u201c\u5408\u5e76\u201d\u6765\u5f97\u5230\u7236\u4eb2\u5b50\u6811\u7684\u4fe1\u606f\u3002</p> <p>\u8fd9\u91cc\u7684\u5408\u5e76\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\uff1a\u201c\u628a\u6240\u6709\u513f\u5b50\u5bf9\u5e94\u7684\u7b54\u6848\u76f4\u63a5\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u63c9\u5230\u4e00\u8d77\u201d</p> <p>\u5982\u679c\u662f\u5728\u7ebf\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u4fe1\u606f\u662f\u4e00\u4e2a\u503c\u57df\u6216\u8005\u5e8f\u5217\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u3002</p> <p>\u5982\u679c\u662f\u79bb\u7ebf\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 dsu on tree \u6765\u5bf9\u66b4\u529b\u5408\u5e76\u8fdb\u884c\u4f18\u5316</p> <p>\u5728\u591a\u6570\u65f6\u5019\u901f\u5ea6\u80fd\u540a\u6253\u6811\u4e0a\u83ab\u961f\uff0c\u6811\u5957\u6811\u7b49\u96be\u5199\u7684\u7b97\u6cd5\u3002</p>"}, {"location": "algor/graph/dsu-on-tree/#_4", "title": "\u4f8b\u9898", "text": "Last mile of the way <p>\u7ed9\u5b9a\u4f60\u4e00\u68f5\u6811\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u6743\u503c \\(w\\) \u548c\u4e00\u4e2a\u4f53\u79ef \\(a\\)\u3002</p> <p>\u6709 \\(q\\) \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u5f62\u5982 \\(x, s\\)\uff0c</p> <p>\u8868\u793a\u8be2\u95ee\u5728\u4ee5 \\(x\\) \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u4e0d\u8d85\u8fc7 \\(s\\) \u7684\u8282\u70b9\uff0c\u6743\u503c\u548c\u7684\u6700\u5927\u503c\u3002</p> <p>\u8fd9\u91cc\u6ca1\u6709\u4efb\u4f55\u4f9d\u8d56\u5173\u7cfb\uff0c\u76f8\u5f53\u4e8e\u628a\u8fd9\u4e2a\u5b50\u6811\u91cc\u7684\u6240\u6709\u8282\u70b9\u63d0\u51fa\u6765\u5f53\u6210\u4e00\u4e2a\u5e8f\u5217\u6765\u53d6\u3002</p> <p>\\(1\\le n \\le 5\\times 10^3, q\\le 10^5, w_i \\le 10^6, a,x,s \\le 5\\times 10^3\\)\u3002 </p> <p>\u9996\u5148\u8fd9\u9898\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u7528 dfs \u5e8f\u7684\u6027\u8d28\uff0c\u628a\u6bcf\u4e00\u4e2a\u5b50\u6811\u76f4\u63a5\u5316\u6210\u4e00\u4e2a\u5e8f\u5217\u4e0a\u7684\u533a\u95f4\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u83ab\u961f\uff0c\u4f46\u611f\u89c9\u590d\u6742\u5ea6\u4e0d\u592a\u884c\uff08\u672c\u8d28\u4e0a\u662f\u6811\u4e0a\u83ab\u961f\uff09\u3002</p> <p>\u6709\u6ca1\u6709\u66f4\u597d\u7684\u7b97\u6cd5\uff1f</p> <p>\u5148\u8003\u8651\u4e00\u4e2a\u6734\u7d20\u7684 \\(30pts\\) \u7b97\u6cd5\uff1a\u672c\u9898\u76f8\u5f53\u4e8e\u4e00\u4e2a\u53bb\u6389\u4f9d\u8d56\u9650\u5236\u7684\u6811\u4e0a\u80cc\u5305\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4eff\u7167\u6811\u4e0a\u80cc\u5305\u7684\u65b9\u7a0b\uff1a\u8bbe \\(dp_{u, i}\\) \u8868\u793a\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u4e0d\u8d85\u8fc7 \\(i\\) \u7684\u7a7a\u95f4\u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u6743\u503c\u548c\u6700\u5927\u503c\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u5bf9\u96c6\u5408\u8fdb\u884c\u4e00\u4e2a\u5212\u5206\uff1a\u4e00\u534a\u662f\u9009 \\(u\\)\uff0c\u4e00\u534a\u662f\u4e0d\u9009 \\(u\\)\u3002</p> <p>\u8003\u8651\u5bf9\u8fd9\u4e24\u4e2a\u90e8\u5206\u5404\u81ea\u8f6c\u79fb\uff0c\u4f46\u5b9e\u9645\u4e0a\u9664\u4e86\u9009/\u4e0d\u9009 \\(u\\) \u7684\u51b3\u7b56\u4ee5\u5916\uff0c\u4ed6\u4eec\u7684\u51b3\u7b56\u8f6c\u79fb\u65b9\u5f0f\u662f\u76f8\u540c\u7684\u3002</p> <p>\u53d1\u73b0\u8f6c\u79fb\u53ea\u9700\u8981\u679a\u4e3e\u5206\u914d\u7ed9 \\(u\\) \u6240\u6709\u7684\u513f\u5b50\u4ee5\u53ca\u4ee5\u5b83\u4eec\u4e3a\u6839\u7684\u5b50\u6811\u7684\u7a7a\u95f4 \\(j\\)\uff0c</p> <p>\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u513f\u5b50\u679a\u4e3e\u4e00\u4e2a \\(k_v\\)\uff0c\u8868\u793a\u8fd9\u4e2a\u513f\u5b50 \\(v\\) \u4ee5\u53ca\u5b83\u7684\u5b50\u6811\u5206\u5230\u7684\u7a7a\u95f4\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a \\(j\\)\uff0c\u5408\u6cd5\u7684\u8f6c\u79fb\u72b6\u6001\u662f\u4e00\u7ec4\u6ee1\u8db3 \\(\\sum_v k_v = j\\) \u7684 \\(k\\)\u3002</p> <p>\u8fd9\u4e2a \\(\\sum_v k_v = j\\) \u600e\u4e48\u6ee1\u8db3\u5462\uff1f \u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u5f53\u524d\u626b\u63cf\u5230\u7684\u513f\u5b50\u5206\u914d\u4e86\u591a\u5c11\u7a7a\u95f4\u5373\u53ef\uff0c\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u5f53\u524d\u7b54\u6848\u662f\u600e\u4e48\u6765\u7684\u3002</p> <p>\u6240\u4ee5\u4e24\u91cd\u5faa\u73af\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u8fd8\u9700\u8981\u8bb0\u5f97\u8003\u8651 \\(u\\) \u9009\u6216\u8005\u4e0d\u9009\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6ca1\u6709\u5f3a\u5236\u9009 \\(u\\) \u4e86\uff0c\u6240\u4ee5\u548c\u6709\u4f9d\u8d56\u7684\u80cc\u5305\u4e0d\u592a\u4e00\u6837\u3002</p> <p>\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u66b4\u529b\u4ee3\u7801\uff1a</p> <pre><code>void dfs(int u, int fa) {\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\ndfs(v, u);\n}\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\nfor(int j = m; j &gt;= a[u]; --j) {\n// \u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5206\u7ec4\u80cc\u5305\u7684\u8fc7\u7a0b\uff0c\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u7269\u54c1\u53ea\u9009\u4e00\u6b21\uff0c\u5c31\u8981\u5012\u5e8f\u5faa\u73af\u3002\nfor(int k = j; k &gt;= 0; --k) {\ndp[u][j] = max(dp[u][j], dp[u][j - k] + dp[v][k]);\n}\n}\n}\n// \u5230\u8fd9\u91cc\uff0cdp \u6570\u7ec4\u8fd8\u662f\u6ca1\u6709\u8003\u8651 u \u7684\u51b3\u7b56\u7684\uff0c\u6240\u4ee5\u8fd8\u8981\u5faa\u73af\u641e\u4e00\u6b21\u3002\nfor(int i = m; i &gt;= a[u]; --i) dp[u][i] = max(dp[u][i], dp[u][i - a[u]] + w[u]);\n// \u56e0\u4e3a\u4e0d\u662f\u5f3a\u5236\u9009\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u53d6 max \u5373\u53ef\u3002\n}\n</code></pre> <p>\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8f6c\u79fb\u4e00\u7ec4\u5408\u6cd5\u7684 \\(j\\) \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u628a\u6ee1\u8db3 \\(\\sum_v k_v = j\\) \u7684\u4e00\u7ec4 \\(k\\) \u5408\u5e76\u8d77\u6765\u5f97\u5230 \\(dp_{u,j}\\) \u8fd9\u4e2a\u72b6\u6001\u3002</p> <p>\u4e5f\u5c31\u662f\u628a\u6240\u6709\u513f\u5b50\u7684\u72b6\u6001\u5168\u90e8\u66b4\u529b\u5408\u5e76\u8d77\u6765\uff0c\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u4f18\u5316\u3002</p> <p>\u7c7b\u4f3c\u6811\u94fe\u5256\u5206\uff0c\u8bbe\u8282\u70b9 \\(u\\) \u7684\u91cd\u513f\u5b50 \\(hson_u\\) \u4e3a \\(siz_v\\) \u6700\u5927\u7684\u4e00\u4e2a\u513f\u5b50 \\(v\\)\u3002</p> <p>\u8f6c\u79fb\u7684\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u628a\u91cd\u513f\u5b50\u7684 \\(dp\\) \u503c\u5e8f\u5217 \\(dp_{hson_u}\\) \u62ff\u8fc7\u6765\u7528\u3002</p> <p>\u4e5f\u5c31\u662f\u8ba9 \\(u\\) \u76f4\u63a5\u7ee7\u627f\u91cd\u513f\u5b50\u7684\u7b54\u6848\u3002</p> <p>\u7136\u540e\u6211\u4eec\u66b4\u529b\u628a\u6240\u6709\u8f7b\u513f\u5b50\u7684\u5b50\u6811\u7684\u7b54\u6848\u76f4\u63a5\u5408\u5e76\u5230 \\(u\\) \u4e0a\uff0c\u6700\u540e\u518d\u628a\u8003\u8651 \\(u\\) \u7684\u7b54\u6848\u7b97\u4e0a\u3002</p> <p>\u5b9e\u9645\u4e0a\u8fd9\u5c31\u662f\u628a \\(u\\) \u81ea\u5df1\u5f53\u4f5c\u4e00\u4e2a\u5355\u72ec\u7684\u8f7b\u513f\u5b50\u8282\u70b9\u7136\u540e\u8fdb\u884c\u66b4\u529b\u5408\u5e76\u3002</p> <p>\u6240\u4ee5\u5408\u5e76 \\(u\\) \u7684\u7b54\u6848\u548c\u5408\u5e76\u8f7b\u513f\u5b50\u7b54\u6848\u7684\u65b9\u5f0f\u5e94\u5f53\u662f\u4e00\u6837\u7684\u3002</p> <p>\u6211\u4eec\u90fd\u76f4\u63a5\u66b4\u529b\u51b3\u7b56\u5bf9\u5e94\u7684\u8282\u70b9\u9009\u6216\u8005\u4e0d\u9009\uff0c\u53ea\u662f\u8f7b\u513f\u5b50\u9700\u8981\u9012\u5f52\u4e0b\u53bb\u7ee7\u7eed\u66b4\u529b\u53d6\u3002</p> <p>\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u505a\u4e4b\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u590d\u6742\u5ea6\u662f \\(\\text{O}(n \\log n)\\) \u7684\u3002</p> <p>\u4e5f\u5c31\u662f\u901a\u8fc7\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u601d\u60f3\u628a \\(\\text{O}(n^2)\\) \u66b4\u529b\u5408\u5e76\u4f18\u5316\u5230\u4e86 \\(\\text{O}(n \\log n)\\)\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\uff1a</p> Code <pre><code>int siz[si];\nint hson[si]; // u \u7684\u91cd\u513f\u5b50\ni64 dp[si][si], ans[si][si];\n\n// \u9884\u5904\u7406\u91cd\u513f\u5b50\nvoid dfs1(int u, int fa) {\nint kot = 0;\nsiz[u] = 1, hson[u] = 0;\n\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\ndfs1(v, u), siz[u] += siz[v];\nif(siz[v] &gt; kot) kot = siz[v], hson[u] = v;\n} }\n// \u66b4\u529b\u52a0\u4ee5 u \u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\u7684\u6240\u6709\u7269\u54c1\nvoid dfs2(int u, int fa, i64 *f) {\nfor(int i = m; i &gt;= a[u]; --i) f[i] = max(f[i], f[i - a[u]] + w[u]);\n\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\n// \u8fd9\u91cc\u662f\u66b4\u529b\u52a0\u5c31\u4e0d\u8981\u5224\u91cd\u513f\u5b50\u4e86\uff08\u5b9e\u6d4b\u4f1aWA\uff09\ndfs2(v, u, f);\n}\n}\n// dp \u7684\u8fc7\u7a0b\nvoid dfs3(int u, int fa) {\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\ndfs3(v, u);\n}\n\nmemcpy(dp[u], dp[hson[u]], sizeof dp[u]);\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa || v == hson[u]) continue;\ndfs2(v, u, dp[u]);\n}\nfor(int i = m; i &gt;= a[u]; --i) {\ndp[u][i] = max(dp[u][i], dp[u][i - a[u]] + w[u]);\n}\n\n// i64 *kot = dp[hson[u]]; // \u76f4\u63a5\u7ee7\u627f\u91cd\u513f\u5b50\n// for(int i = head[u]; ~i; i = e[i].Next) {\n//  int v = e[i].ver;\n//  if(v == fa || v == hson[u]) continue;\n//  dfs2(v, u, kot);\n// }\n\n// for(int i = m; i &gt;= a[u]; --i) \n//  kot[i] = max(kot[i], kot[i - a[u]] + w[u]);\n// for(int i = 0; i &lt;= m; ++i) \n//  ans[u][i] = kot[i];\n// \u56e0\u4e3a\u662f\u79bb\u7ebf\u4e14\u81ea\u5e95\u5411\u4e0a\u66f4\u65b0\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u76f4\u63a5\u7528\u91cd\u513f\u5b50\u7684\u6570\u7ec4\u4fee\u6539\u540e\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\n// memcpy \u867d\u7136\u5f88\u5feb\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u4e0d\u5bf9\uff0c\u4f46\u662f\u8fd9\u4e2a\u6307\u9488\u5199\u6cd5\u4f3c\u4e4e\u6709\u95ee\u9898\uff1f \n\n// TODO : fix it.\n}\n</code></pre> <p>\u590d\u6742\u5ea6\u8bc1\u660e\u53ef\u4ee5\u770b\u770b OI-wiki\uff0c\u4e4b\u540e\u518d\u8865\u3002</p>"}, {"location": "algor/graph/dsu-on-tree/#_5", "title": "\u603b\u7ed3", "text": "<p>\u603b\u7ed3\u4e00\u4e0b\uff0cdsu on tree \u5176\u5b9e\u5c31\u662f\u5bf9\u4e8e\u9700\u8981\u5408\u5e76\u4fe1\u606f\u7684\u4e00\u7c7b\u79bb\u7ebf\u6811\u4e0a\u95ee\u9898\uff0c\u5229\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u601d\u60f3\u4f18\u5316\u3002</p> <p>\u8fc7\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a</p> <ol> <li>\u76f4\u63a5\u8ba9 \\(u\\) \u7684\u4fe1\u606f\u6570\u7ec4\u7ee7\u627f \\(hson_u\\) \u7684\u4fe1\u606f\u6570\u7ec4\u3002</li> <li>\u66b4\u529b\u628a\u5176\u5b83\u8f7b\u513f\u5b50\u7684\u4fe1\u606f\u5408\u5e76\u5230 \\(u\\) \u7684\u4fe1\u606f\u6570\u7ec4\u4e0a\u3002    \u8fd9\u91cc\u5408\u5e76\u7684\u65b9\u5f0f\u56e0\u9898\u800c\u5f02\u3002</li> <li>\u6700\u540e\u628a\u8003\u8651 \\(u\\) \u7684\u60c5\u51b5\u5408\u5e76\u4e0a\u53bb\u5373\u53ef\u3002 </li> </ol>"}, {"location": "algor/graph/lca/", "title": "\u6700\u8fd1\u516c\u5171\u7956\u5148", "text": ""}, {"location": "algor/graph/lca/#_1", "title": "\u6982\u8ff0", "text": "<p>\u5927\u6982\u5c31\u662f\u7ed9\u4f60\u6811\u4e0a\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u95ee\u4ed6\u4eec\u5171\u540c\u7684\u7956\u5148\u91cc\u6df1\u5ea6\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u3002</p>"}, {"location": "algor/graph/lca/#lca", "title": "\u500d\u589e LCA", "text": "<p>\u8003\u8651\u8bbe \\(f_{i,j}\\) \u8868\u793a \\(i\\) \u7684 \\(2^j\\) \u7ea7\u7956\u5148\u3002</p> <p>\u8fd9\u4e2a\u53ef\u4ee5\u500d\u589e\u9012\u63a8 \u3002 \\(f_{i,j}=f_{f_{i,j-1},j-1}\\)\u3002</p> <p>\u7136\u540e\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u8be2\u95ee \\(lca(u,v)\\)\uff0c\u8003\u8651\u628a\u6df1\u5ea6\u8f83\u5927\u7684\u90a3\u4e00\u4e2a\u5f80\u4e0a\u8df3\u5230\u5b83\u7684 \\(2\\) \u7684 \\(\\log_2n,\\log_2n-1,\\dots 0\\) \u7ea7\u7956\u5148\uff08\u6b64\u5904\u662f\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\uff09</p> <p>\u5176\u672c\u8d28\u5c31\u662f\u500d\u589e\u5730\u5f80\u4e0a\u8df3\u3002</p> <p>\uff08\u6bcf\u4e2a\u90fd\u8bd5\u4e00\u8bd5\uff0c\u5982\u679c\u8fd9\u4e2a\u7956\u5148 \\(f_{u,i}\\) \u7684\u6df1\u5ea6 \\(dep_{f_{u,i}}\\) \u5927\u4e8e\u7b49\u4e8e\u539f\u6765\u6df1\u5ea6\u66f4\u5c0f\u7684\u70b9\u7684\u6df1\u5ea6 \\(dep_v\\)\uff0c\u5c31\u8df3\u5230\u8fd9\u4e2a\u7956\u5148 \\(f_{u,i}\\)\uff09\u3002</p> <p>\u5982\u679c\u6b64\u65f6\u4e24\u4e2a\u8282\u70b9\u91cd\u5408\u4e86\uff0cLCA \u5c31\u662f\u539f\u6765\u6df1\u5ea6\u5c0f\u7684\u8282\u70b9\u3002</p> <p>\u5426\u5219\u4fdd\u6301\u4e24\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u4e00\u81f4\uff0c\u7136\u540e\u5404\u81ea\u5f80\u4e0a\u8df3 \\(2\\) \u7684 \\(\\log_2n,\\log_2n-1,\\dots 0\\) \u6b21\u5e42\u6b65\uff0c\u5e76\u4e14\u4fdd\u6301\u4e0a\u8df3\u4e4b\u540e\u4ecd\u7136\u4e0d\u76f8\u9047\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u7ed3\u675f\u4e4b\u540e\uff0c \\(u,v\\) \u5f53\u524d\u7684\u7236\u4eb2\u5fc5\u7136\u76f8\u540c\uff0c\u8fd9\u5c31\u662f\u8981\u6c42\u7684 LCA\u3002</p> Code <pre><code>int dep[si_n],f[si_n][20];\ninline void dfs(int u,int fa){\ndep[u]=dep[fa]+1,f[u][0]=fa;\nfor(register int i=1;i&lt;=19;++i) f[u][i]=f[f[u][i-1]][i-1];\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver; if(v==fa) continue;\ndfs(v,u);\n}\n}\ninline void lca(int x,int y){\nif(dep[x]&lt;dep[y]) swap(x,y);\nfor(register int i=19;i&gt;=0;--i) if(dep[f[x][i]]&gt;=dep[y]) x=f[x][i];\nif(x==y) return x;\nfor(register int i=19;i&gt;=0;--i) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\nreturn f[x][0];\n}\n</code></pre> <p>\u5355\u6b21\u8be2\u95ee \\(\\text{O}(\\log n)\\)\u3002</p> <p>\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u662f\u66b4\u529b\u8df3\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u201c\u8bd5\u201d\u3002</p> <p>\u7528\u7c7b\u4f3c\u5feb\u901f\u5e42\u7684\u601d\u60f3\uff0c\u76f4\u63a5\u628a\u6570\u5b57\u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u53ea\u6709\u5f53\u524d\u4f4d \\(i\\) \u4e3a \\(1\\) \u7684\u65f6\u5019 \uff0c\u624d\u8df3 \\(2^i\\) \u7ea7\u7956\u5148\u3002</p> <pre><code>// \u5495\u5495\u5495\n</code></pre>"}, {"location": "algor/graph/lca/#tarjan-lca", "title": "Tarjan LCA", "text": "<p>\u9996\u5148\u79bb\u7ebf\u6240\u6709\u7684 Query\uff0c</p> <p>\u5728\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7684\u65f6\u5019\uff0c\u7ed9\u6bcf\u4e2a\u8282\u70b9\u6253\u4e0a\u4e00\u4e2a\u6807\u8bb0</p> <ol> <li>\u6ca1\u6709\u8bbf\u95ee\u7684\u8282\u70b9</li> <li>\u5f53\u524d\u6b63\u5728\u8bbf\u95ee\u7684\u5206\u652f\u4e0a\u7684\u8282\u70b9</li> <li>\u5df2\u7ecf\u8bbf\u95ee\u5b8c\u5e76\u4e14\u56de\u6eaf\u5b8c\u7684\u8282\u70b9</li> </ol> <p>\u5982\u56fe\uff1a</p> <p></p> <p>\u6211\u4eec\u8003\u8651\u5904\u7406\u6240\u6709\u548c \\(now\\) \u76f8\u5173\u7684\u8be2\u95ee\u3002</p> <p>\u53d1\u73b0\u6240\u6709 2 \u7c7b\u578b\u7684\u8282\u70b9\u548c \\(now\\) \u7684 LCA \u90fd\u662f 1 \u7c7b\u578b\u7684\u8282\u70b9\u5e76\u4e14\u548c \\(now\\) \u5728\u540c\u4e00\u5206\u652f\uff0c\u6bd4 \\(now\\) \u5148\u8bbf\u95ee\uff1a</p> <p></p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u628a\u8fd9\u4e9b 2 \u7c7b\u578b\u7684\u8282\u70b9\u548c\u5f53\u524d\u5206\u652f\u7684\u8282\u70b9\u5408\u5e76\uff0c\u7136\u540e\u6bcf\u6b21\u8be2\u95ee\u5c31\u80fd\u76f4\u63a5\u5904\u7406\u4e86\u3002</p> <p>\u8fd9\u4e2a\u5408\u5e76\u548c\u8be2\u95ee\u64cd\u4f5c\u53ef\u4ee5\u5229\u7528 dsu\u3002</p> <p>\u590d\u6742\u5ea6 \\(\\text{O}(n+m)\\)\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define pb push_back\nconst int si_n=5e5+10;\nconst int si_m=5e5+10;\n\nstruct Tree{\nint ver,Next,head;\n}e[si_m&lt;&lt;1];\nint cnt=0;\nvoid add(int u,int v){\ne[++cnt].ver=v,e[cnt].Next=e[u].head;\ne[u].head=cnt;\n}\n\nint pa[si_n];\nint root(int x){\nif(pa[x]!=x){\nreturn pa[x]=root(pa[x]);\n}\nreturn pa[x];\n}\nvector&lt;int&gt;que[si_n],pos[si_n];\nint lca[si_n];\nbool vis[si_n];\nint n,q,s;\n\nvoid tarjan(int u){\nvis[u]=true;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver;\nif(vis[v]==true) continue;\ntarjan(v),pa[v]=root(u);\n}\nfor(register int i=0;i&lt;(int)que[u].size();++i){\nint v=que[u][i],po=pos[u][i];\nif(vis[v]==true) lca[po]=root(v);\n}\n}\n\nint main(){\nscanf(\"%d%d%d\",&amp;n,&amp;q,&amp;s);\nfor(register int i=1;i&lt;=n;++i){\npa[i]=i,vis[i]=false;\nque[i].clear(),pos[i].clear();\n}\nfor(register int i=1;i&lt;n;++i){\nint u,v;\nscanf(\"%d%d\",&amp;u,&amp;v);\nadd(u,v),add(v,u);\n}\nfor(register int i=1;i&lt;=q;++i){\nint u,v;\nscanf(\"%d%d\",&amp;u,&amp;v);\nif(u==v) lca[i]=u;\nelse{\nque[u].pb(v),que[v].pb(u);\npos[u].pb(i),pos[v].pb(i);\n}\n}\ntarjan(s);\nfor(register int i=1;i&lt;=q;++i){\nprintf(\"%d\\n\",lca[i]);\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/graph/lca/#lca_1", "title": "\u6811\u5256 LCA", "text": "<p>\u5e38\u6570\u975e\u5e38\u5c0f\u7684 LCA \u6c42\u6cd5\uff0c\u53ea\u4e0d\u8fc7\u8981\u5199\u4e24\u4e2a dfs....</p> <p>\u7b80\u5355\u6765\u8bf4\u8fd8\u662f\u5229\u7528\u4e86\u7c7b\u4f3c\u500d\u589e\u7684\u601d\u60f3\uff0c\u4e0d\u8fc7\u5229\u7528\u4e86\u8f7b\u91cd\u94fe\u5256\u5206\u7684\u6027\u8d28\u53bb\u4f18\u5316\u4e86\u4e00\u4e0b\u800c\u5df2\u3002</p> <p>Link</p>"}, {"location": "algor/graph/lca/#_2", "title": "\u6811\u4e0a\u5dee\u5206", "text": ""}, {"location": "algor/graph/lca/#_3", "title": "\u70b9\u5dee\u5206", "text": "<p>\u7ed9\u4f60\u4e00\u68f5\u6811 \\(T\\)\uff0c\u4e14 \\(\\forall u \\in T\\) \u90fd\u6709\u4e00\u4e2a\u6743\u503c \\(val[u]\\)</p> <p>\u73b0\u5728\u6709 \\(q\\) \u6b21\u64cd\u4f5c\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c \\(\\operatorname{change}(u,v,d)\\) \u9700\u8981\u4f60\u4fee\u6539 \\(u \\to v\\) \u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u7684\u6743\u503c\uff0c\u5373\u4ee4 \\(\\forall val[u]+d,(u\\in \\delta(u,v))\\) \u3002</p> <p>\u5c06\u4e00\u6761\u6811\u94fe\u62c6\u6210 \\(A:(u,lca(u,v)),B:(v,lca(u,v))\\) \u8fd9\u4e24\u90e8\u5206\u3002</p> <p>\u8bbe \\(c[u]\\) \u8868\u793a \\([u]\\) \u8fd9\u4e2a\u8282\u70b9\u7684\u589e\u91cf\uff08\u5dee\u5206\u6570\u7ec4\uff09\u3002</p> <p>\u5bf9\u4e8e \\(A,B\\) \u7684\u7aef\u70b9\u5206\u522b\u5dee\u5206\u4e00\u4e0b\uff1a \\(c[u]=d,c[v]=d,c[lca]=-2\\times d\\)\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a \\(\\texttt{LCA}\\) \u672c\u8eab\u5c31\u5728\u6811\u94fe \\(\\delta(u,v)\\) \u4e0a\u3002</p> <p>\u6240\u4ee5\u5b83\u81ea\u5df1\u4e5f\u8981\u52a0 \\(d\\)\uff0c\u90a3\u4e48 \\(c[u]=d,c[v]=d,c[lca]=-d\\)\u3002</p> <p>\u56e0\u4e3a\u7236\u8282\u70b9\u7684\u503c\u662f\u4f1a\u88ab\u5b50\u6811\u5f71\u54cd\u7684\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u7ed9 \\(father(lca(u,v))-d\\)\u3002</p> <p></p>"}, {"location": "algor/graph/lca/#_4", "title": "\u8fb9\u5dee\u5206", "text": "<p>P3627 [APIO2009]\u62a2\u63a0\u8ba1\u5212 \u7528\u4e86\u4e00\u4e2a\u601d\u60f3\u53eb\u201c\u70b9\u6743\u5316\u8fb9\u6743\u201d\uff0c\u5728\u8fd9\u91cc\u53cd\u8fc7\u6765\uff0c\u201c\u8fb9\u6743\u5316\u70b9\u6743\u201d\u3002</p> <p>\u8003\u8651\u4efb\u610f\u7684\u4e00\u6761\u6811\u8fb9 \\((u,v)\\) \uff0c\u4e00\u5b9a\u6ee1\u8db3\u5b83\u8fde\u63a5\u7684\u662f\u7236\u4eb2\u548c\u513f\u5b50\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u8fb9\u7684\u201c\u6307\u5411\u201d\u5c31\u6709\u552f\u4e00\u6027\uff0c\u6240\u4ee5\u628a\u6bcf\u4e00\u6761\u6811\u8fb9\u7684\u6743\u503c\u538b\u5230\u5b83\u6307\u5411\u7684\u201c\u513f\u5b50\u8282\u70b9\u201d\u3002</p> <p>\u7279\u522b\u7684\uff0c\u56e0\u4e3a\u6811\u6839\u6ca1\u6709\u7236\u4eb2\uff0c\u6240\u4ee5\u5b83\u7684\u6743\u503c\u4e3a \\(0\\)</p> <p>\u65e2\u7136\u8fb9\u6743\u5316\u70b9\u6743\u4e86\uff0c\u90a3\u80fd\u4e0d\u80fd\u76f4\u63a5\u8dd1\u70b9\u5dee\u5206\uff1f</p> <p>\u4e0d\u884c\u3002</p> <p></p> <p>(\\(u\\) \u6253\u9519\u6210 \\(x\\)\u4e86\uff09</p> <p>\u6ce8\u610f\u5230 \\(\\texttt{LCA}\\) \u7684\u6743\u503c\u662f \\(\\delta(lca,root)\\) \u7684\u6743\u503c\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u662f\u5728\u8dd1\u4e00\u4e2a\u53bb\u6389 \\(\\texttt{LCA}\\) \u7684\u70b9\u5dee\u5206\u3002</p> <p>\u4e8e\u662f\u5c31\u4e0d\u9700\u8981\u8003\u8651 \\(\\texttt{LCA}\\) \u7684\u6743\u503c\u548c\u5b83\u5bf9 \\(father({\\texttt{LCA}})\\) \u7684\u5f71\u54cd\u3002</p> <p>\u76f4\u63a5 \\(c[u]+d,c[v]+d,c[lca]-2\\times d\\) \u5373\u53ef\u3002</p>"}, {"location": "algor/graph/mst/", "title": "\u6700\u5c0f\u751f\u6210\u6811", "text": ""}, {"location": "algor/graph/mst/#_1", "title": "\u5b9a\u4e49", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u5e26\u6743\u65e0\u5411\u56fe\uff0c\u6c42\u5b83\u7684\u6240\u6709\u751f\u6210\u6811\u5f53\u4e2d\u6743\u503c\u548c\u6700\u5c0f\u7684\u4e00\u4e2a\u3002</p> <p>\u5e26\u6743\u65e0\u5411\u56fe \\(G\\) \u7684\u751f\u6210\u6811 \\(T\\) \u5b9a\u4e49\u4e3a\u5305\u542b \\(G\\) \u7684\u6240\u6709\u8282\u70b9\uff0c\u7531 \\(G\\) \u5f53\u4e2d\u8fde\u63a5\u5b83\u4eec\u7684 \\(n-1\\) \u6761\u8fb9\u6784\u6210\u7684\u65e0\u5411\u8054\u901a\u5b50\u56fe\u3002</p>"}, {"location": "algor/graph/mst/#_2", "title": "\u4e24\u4e2a\u5b9a\u7406", "text": "<ol> <li> <p>\u4efb\u610f\u4e00\u9897\u6700\u5c0f\u751f\u6210\u6811\u4e00\u5b9a\u5305\u542b \\(G\\) \u4e2d\u6700\u5c0f\u7684\u8fb9\uff08\u53cd\u8bc1\u6cd5\u5373\u53ef\uff09\u3002 </p> </li> <li> <p>\u8bbe\u4e00\u5f20\u65e0\u5411\u56fe \\(G=(V,E)\\) \uff0c\u4ece \\(E\\) \u4e2d\u9009\u51fa \\(k&lt;|V|-1\\)\u6761\u8fb9\u6784\u6210 \\(G\\) \u7684\u4e00\u4e2a\u751f\u6210\u68ee\u6797\uff0c\u7136\u540e\u518d\u4ece\u5269\u4f59\u7684 \\(|E|-k\\) \u6761\u8fb9\u4e2d\u9009\u51fa \\(|V|-1-k\\) \u6761\u8fb9\u52a0\u5165\u68ee\u6797\u4e2d\uff0c\u8ba9\u5b83\u6210\u4e3a \\(G\\) \u7684\u751f\u6210\u6811\uff0c\u5e76\u4e14\u9009\u51fa\u7684\\(\\sum w\\)\u6700\u5c0f\u3002</p> </li> </ol> <p>\u90a3\u4e48\uff0c\u8fd9\u4e2a\u751f\u6210\u6811\u4e00\u5b9a\u5305\u542b \\(|E|-k\\) \u6761\u8fb9\u91cc\u9762\u8fde\u63a5\u751f\u6210\u68ee\u6797\u7684\u4e24\u4e2a\u4e0d\u8fde\u901a\u8282\u70b9\u7684\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u3002</p> <p>\u8bc1\u660e\u53ef\u4ee5\u5728 zhihu \u770b\u770b @ciwei \u795e\u4ed9\u7684\u4e13\u680f\u3002</p>"}, {"location": "algor/graph/mst/#kruskal", "title": "Kruskal \u7b97\u6cd5", "text": "<p>\u57fa\u672c\u601d\u60f3\u662f\u7ef4\u62a4\u56fe\u7684\u6700\u5c0f\u751f\u6210\u68ee\u6797\u3002</p> <p>\u5f00\u59cb\u7684\u65f6\u5019\u751f\u6210\u68ee\u6797\u662f\u7a7a\u7684\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u4e00\u9897\u72ec\u7acb\u7684\u6811\u3002</p> <p>\u7136\u540e\u7528\u7ed3\u8bba \\(2\\) \u7ef4\u62a4\u68ee\u6797\uff0c\u5229\u7528 dsu \u7ef4\u62a4\u8054\u901a\u6027\u3002</p> <p>\u6309\u7167\u8fb9\u6743\u5347\u5e8f\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u626b\u4e00\u904d\u6bcf\u4e2a\u8fb9\u3002</p> <p>\u5982\u679c\u5f53\u524d\u626b\u5230\u7684\u8fd9\u6761\u8fb9\u6240\u8fde\u7684\u4e24\u4e2a\u70b9 \\((u,v)\\) \u5df2\u7ecf\u8054\u901a\u4e86\u3002\u90a3\u4e48\u8df3\u8fc7\u3002</p> <p>\u5982\u679c\u4e0d\u662f\u8054\u901a\u7684\uff0c\u6839\u636e\u8fd9\u4e00\u6761\uff1a</p> <p>\u8fd9\u4e2a\u751f\u6210\u6811\u4e00\u5b9a\u5305\u542b \\(|E|-k\\) \u6761\u8fb9\u91cc\u9762\u8fde\u63a5\u751f\u6210\u68ee\u6797\u7684\u4e24\u4e2a\u4e0d\u8fde\u901a\u8282\u70b9\u7684\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u3002</p> <p>\u628a\u8fd9\u4e00\u6761\u8fb9\u52a0\u5165\u5230\u6700\u5c0f\u751f\u6210\u6811\u91cc\uff0c\u987a\u4fbf\u5408\u5e76\u4e00\u4e0b \\((u,v)\\) </p> Code <pre><code>struct Edge{ int x,y,z;\ninline bool operator &lt; (const Edge &amp;b)const{ return z&lt;b.z; }\n}a[si_m];\nstruct Dsu{\nint pa[si_n];\nDsu(){ for(register int i=1;i&lt;=1e2+10;++i) pa[i]=i; }\ninline int root(int x){ if(pa[x]!=x) return pa[x]=root(pa[x]); return pa[x]; }\ninline bool same(int x,int y){ return root(x)==root(y); }\ninline void Union(int x,int y){ int rx=root(x),ry=root(y); if(rx==ry) return; pa[rx]=ry; }\n}dsu;\n\nint main(){\ncin&gt;&gt;n&gt;&gt;m;\nfor(register int i=1;i&lt;=m;++i){\ncin&gt;&gt;a[i].x&gt;&gt;a[i].y&gt;&gt;a[i].z;\n} sort(a+1,a+1+m); int ans=0;\nfor(register int i=1;i&lt;=m;++i){\nif(dsu.same(a[i].x,a[i].y)) continue;   dsu.Union(a[i].x,a[i].y),ans+=a[i].z;\n} cout&lt;&lt;ans&lt;&lt;endl;\nreturn 0;\n}\n</code></pre> <p>\u590d\u6742\u5ea6 \\(\\text{O}(m \\log m)\\)\u3002</p>"}, {"location": "algor/graph/mst/#prim", "title": "Prim \u7b97\u6cd5", "text": "<p>\u4e00\u822c\u7528\u4e8e\u7a20\u5bc6\u56fe\u3002</p> <p>\u6700\u5f00\u59cb\u786e\u5b9a \\(1\\) \u53f7\u8282\u70b9\u5c5e\u4e8e\u6700\u5c0f\u751f\u6210\u6811\u3002</p> <p>\u6bcf\u4e00\u6b21\u627e\u5230\u4e00\u6761\u6743\u503c\u6700\u5c0f\u7684\uff0c\u4e14\u6ee1\u8db3\u5b83\u8fde\u63a5\u7684\u5176\u4e2d\u4e00\u4e2a\u70b9 \\(u\\) \u5df2\u7ecf\u88ab\u9009\u5165\u6700\u5c0f\u751f\u6210\u6811\u91cc\uff0c\u53e6\u4e00\u4e2a\u70b9 \\(v\\) \u5219\u672a\u88ab\u9009\u4e2d\u7684\u8fb9\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\uff1a</p> <p>\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 \\(dis\\) ,\u5982\u679c \\(u\\) \u6ca1\u6709\u88ab\u9009\u5165\uff0c\u90a3\u4e48 \\(dis_u\\) \u5c31\u7b49\u4e8e \\(u\\) \u548c\u5df2\u7ecf\u88ab\u9009\u4e2d\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u4e2d\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u7684\u6743\u503c\u3002</p> <p>\u53cd\u4e4b \\(dis_u\\) \u5c31\u7b49\u4e8e \\(u\\) \u88ab\u9009\u4e2d\u7684\u65f6\u5019\u9009\u51fa\u6765\u90a3\u6761\u6743\u503c\u6700\u5c0f\u8fb9\u7684\u6743\u503c\u3002</p> <p>\u5982\u4f55\u5224\u662f\u5426\u9009\u4e2d\u5462\uff1f</p> <p>\u7ef4\u62a4\u4e00\u4e2a \\(vis\\) \u5373\u53ef\u3002\u4ece\u6ca1\u6709\u88ab\u9009\u4e2d\u7684\u8282\u70b9\u5f53\u4e2d\u9009\u51fa\u4e00\u4e2a \\(dis\\) \u6700\u5c0f\u7684\uff0c\u6807\u8bb0\u5b83\u3002</p> <p>\u626b\u63cf\u548c\u8fd9\u4e2a\u88ab\u9009\u70b9\u7684\u6240\u6709\u51fa\u8fb9\uff0c\u66f4\u65b0\u53e6\u5916\u4e00\u4e2a\u7aef\u70b9\u7684 \\(dis\\) \u3002</p> <p>\u6700\u540e\u751f\u6210\u6811\u7684\u6743\u503c\u548c\u5c31\u662f \\(\\sum\\limits^{n}_{i=2} dis_i\\)\u3002</p> Code <pre><code>inline void Prim(){\nmemset(vis,false,sizeof vis),memset(dis,0x3f,sizeof dis);\ndis[1]=0;\nfor(register int i=1;i&lt;n;++i){\nint x=0;\nfor(register int j=1;j&lt;=n;++j){\nif(!vis[j] &amp;&amp; (x==0 || dis[j]&lt;dis[x])) x=j;\n} vis[x]=true;\nfor(register int y=1;y&lt;=n;++y) if(!vis[y]) dis[y]=min(dis[y],a[x][y]);\n}\n}\nint main(){\ncin&gt;&gt;n; memset(a,0x3f,sizeof a);\nfor(register int i=1;i&lt;n;++i){\na[i][i]=0;\nfor(register int j=1;j&lt;=n;++j){\nint value; cin&gt;&gt;value;\na[i][j]=a[j][i]=min(a[i][j],value);\n}\n} Prim(); int ans=0;\nfor(register int i=2;i&lt;=n;++i) ans+=dis[i];\nreturn printf(\"%d\\n\",ans),0;\n}\n</code></pre> <p>\u590d\u6742\u5ea6 \\(\\text{O}(n^2)\\)\uff0c\u53ef\u4ee5\u7528\u4e8c\u53c9\u5806\u4f18\u5316\u5230 \\(\\text{O}(m \\log n)\\)\uff0c\u4f46\u4e0d\u5982\u76f4\u63a5 Kruskal\u3002</p>"}, {"location": "algor/graph/mst/#kruskal_1", "title": "Kruskal \u91cd\u6784\u6811", "text": "<p>\u4e00\u4e2a\u795e\u5947\u7684\u79d1\u6280\uff0c\u56e0\u4e3a \\(\\texttt{8102ION}\\text{\u5f52\u7a0b}\\) \u8fd9\u9053\u51fa\u4e86\u540d\u7684\u9898\uff0c\u800c\u88ab\u4e16\u4eba\u6240\u77e5\uff08</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u57fa\u4e8e \\(\\texttt{Kruskal}\\) \u5b9e\u73b0\u3002</p> <p>\u5b83\u5177\u6709\u975e\u5e38\u591a\u4f18\u96c5\u7684\u6027\u8d28\u3002</p> <p>\u505a\u6cd5\u662f\u5728\u8dd1 \\(\\texttt{Kruskal}\\) \u5bf9\u4e8e\u4e0d\u5728\u540c\u4e00\u96c6\u5408\u7684\u4e24\u4e2a\u70b9 \\((u,v)\\) \u8fde\u8fb9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9 \\(k\\) \uff0c\u4ee4 \\((u,v)\\) \u5206\u522b\u6240\u5728\u7684\u96c6\u5408\u7684\u6839 \\(r_u,r_v\\) \u5206\u522b\u4f5c\u4e3a \\(k\\) \u7684\u5de6\u53f3\u513f\u5b50\u3002</p> <p>\u5e76\u4e14\u6211\u4eec\u628a \\(k\\) \u4f5c\u4e3a \\(S_u,S_v\\) \u4e24\u4e2a\u96c6\u5408\u5408\u5e76\u4e4b\u540e\u7684\u6839\u3002</p> <p>\u7136\u540e\u628a \\(k\\) \u7684\u70b9\u6743\u7f6e\u4e3a \\(\\delta(u,v)\\) \u7684\u6743\u503c\u3002</p> <p>\u8dd1\u5b8c \\(\\texttt{Kruskal}\\) \u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u9897\u4f18\u7f8e\u7684\u91cd\u6784\u6811\u3002</p> <p>\u4ed6\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\uff1a</p> <ol> <li>(\u53ea\u8003\u8651\u65b0\u8282\u70b9)\u6839\u636e\u6784\u9020\u8fc7\u7a0b\uff0c\\(\\texttt{Kruskal}\\) \u91cd\u6784\u6811\u662f\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u5e76\u7b26\u5408\u4e8c\u53c9\u5806\u7684\u6027\u8d28\u3002</li> <li>\u539f\u6765\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e24\u70b9\u95f4\u7684\u7684\u6700\u5927\u8fb9\u6743\u5c31\u662f \\(\\texttt{Kruskal}\\) \u91cd\u6784\u6811\u4e0a\u4e24\u70b9\u7684 \\(\\text{Lca}\\)\u7684\u6743\u503c\u3002</li> <li>\u91cd\u6784\u6811\u4e2d\u4ee3\u8868\u539f\u6811\u4e2d\u7684\u70b9\u7684\u8282\u70b9\u5168\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5176\u4f59\u8282\u70b9\u90fd\u4ee3\u8868\u4e86\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u3002</li> </ol> <p>\u7136\u540e\u5b9e\u9645\u4e0a\u6240\u6709\u65b0\u5efa\u7684\u70b9 \\(k\\) \u7684\u542b\u4e49\u5c31\u662f\uff1a</p> <p>\u5982\u679c \\(k\\) \u7684\u5de6\u53f3\u5b50\u6811\u4e2d\u7684\u70b9\u60f3\u8981\u4e92\u901a\uff0c\u5fc5\u987b\u8981\u8d70\u81f3\u5c11\u4e00\u6761\u8fb9\u6743\u7b49\u4e8e\u8fd9\u4e2a\u70b9\u6743 \\(w_k\\) \u7684\u8fb9\u3002</p> <p>\u6709\u4ec0\u4e48\u7528\u5462\uff1f</p> <p>\u5047\u8bbe\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e5f\u5c31\u662f\u6c42\u6700\u5c0f\u751f\u6210\u6811\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u641e\u51fa\u6765\u7684\u91cd\u6784\u6811\u4e0a\u7684 \\(\\text{Lca}(u,v)\\) \u5c31\u4ee3\u8868\u539f\u56fe\u5f53\u4e2d \\(u\\to v\\) \u7684\u6240\u6709\u7b80\u5355\u8def\u5f84\u7684\u8fb9\u5f53\u4e2d\u7684 \u6700\u5927\u8fb9\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u6bd4\u5982\u8bf4\u4f60\u539f\u56fe\u4e0a \\(1\\to 4\\) \u6709\u4e24\u6761\u8def\u5f84\uff0c\u4ed6\u4eec\u5206\u522b\u662f \\(1 \\to 2 \\to 4,1\\to 3 \\to 4\\)</p> <p>\u7136\u540e\u8fb9\u6743\u662f \\(w(1,2)=1,w(1,3)=2,w(3,4)=3,w(2,4)=4\\)\u3002</p> <p>\u90a3\u4e48\u7b2c\u4e00\u6761\u8def\u5f84\u7684\u6700\u5927\u8fb9\u662f \\(4\\) \uff0c\u7b2c\u4e8c\u6761\u7684\u6700\u5927\u8fb9\u662f \\(3\\)\u3002</p> <p>\u90a3\u4e48 <code>\u7b80\u5355\u8def\u5f84\u7684\u8fb9\u5f53\u4e2d\u7684\u6700\u5927\u8fb9\u7684\u6700\u5c0f\u503c\u3002</code>\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u5c31\u662f \\(\\min(3,4)=3\\)\u3002</p> <p>\u63a8\u5e7f\u4e00\u4e0b\u5c31\u662f \\(\\min\\limits_{i=1}^{cnt}(\\max \\{w(uu,vv)\\}), (uu,vv \\in \\forall \\delta(u,v))\\)</p> <p>\\(cnt\\) \u662f\u7b80\u5355\u8def\u5f84\u6570\u3002</p> <p>\u624b\u5143\u4e00\u4e0b\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u5730\u65b9\u662f\u7f51\u4e0a\u5f88\u591a\u535a\u5ba2\u90fd\u5199\u9519\u4e86\u7684\uff0c\u5f88\u660e\u663e\u5c31\u662f\u76f4\u63a5\u6284\u522b\u4eba\u7684\u7136\u540e\u4e00\u76f4\u6284\u4e0b\u53bb\u641e\u5f97\u5f88\u591a\u90fd\u662f\u9519\u7684\uff08</p> <p>\u597d\u50cf OI wiki \u8fd9\u4e2a\u65f6\u5019\uff0821/8/22\uff09 \u4e5f\u662f\u9519\u7684\u3002</p> <p>\u7136\u540e\u6700\u5927\u751f\u6210\u6811\u5012\u8fc7\u6765\u5c31\u884c\u4e86\u3002</p> <p>\u6bd4\u5982\u91cd\u6784\u6811\u7684 \\(\\text{Lca}(u,v)\\) \u4ee3\u8868\u7684\u5c31\u662f\u6700\u5927\u751f\u6210\u6811\u4e0a \\((u,v)\\) \u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u7684\u5c0f\u8fb9\u3002</p> <p>\u7136\u540e\u539f\u56fe\u4e0a\u5c31\u662f\u6700\u5c0f\u8fb9\u6700\u5927\u3002</p> <p>\u6765\u4e00\u9053\u9898\u7406\u89e3\uff1a</p>"}, {"location": "algor/graph/mst/#noip2013", "title": "[NOIP2013]\u8d27\u8f66\u8fd0\u8f93", "text": "<p>A\u56fd\u6709 \\(n\\) \u5ea7\u57ce\u5e02\uff0c\u7f16\u53f7\u4ece \\(1\\) \u5230 \\(n\\)\uff0c\u57ce\u5e02\u4e4b\u95f4\u6709 \\(m\\) \u6761\u53cc\u5411\u9053\u8def\u3002\u6bcf\u4e00\u6761\u9053\u8def\u5bf9\u8f66\u8f86\u90fd\u6709\u91cd\u91cf\u9650\u5236\uff0c\u7b80\u79f0\u9650\u91cd\u3002</p> <p>\u73b0\u5728\u6709 \\(q\\) \u8f86\u8d27\u8f66\u5728\u8fd0\u8f93\u8d27\u7269\uff0c \u53f8\u673a\u4eec\u60f3\u77e5\u9053\u6bcf\u8f86\u8f66\u5728\u4e0d\u8d85\u8fc7\u8f66\u8f86\u9650\u91cd\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u591a\u80fd\u8fd0\u591a\u91cd\u7684\u8d27\u7269\u3002</p> <p>\u5c31\u662f \u6700\u5927\u751f\u6210\u6811 \u4e2d\u7684 \\((u,v)\\) \u4e4b\u95f4\u7684\u8def\u5f84\u7684\u6700\u5c0f\u8fb9\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int si_n=1e4+10;\nconst int si_m=5e4+10;\nint n,m,q;\n\nstruct Kruskal{\nint u,v,w;\nbool operator &lt; (const Kruskal &amp;b)const{\nreturn w&gt;b.w;\n}//\u6700\u5927\u751f\u6210\u6811\n}e[si_m&lt;&lt;1];\nint pa[si_n&lt;&lt;1];\nint root(int x){\nif(pa[x]!=x) return pa[x]=root(pa[x]);\nreturn pa[x];\n}\n\nstruct Tree{\nint ver,head,Next;\n}t[si_m&lt;&lt;1];\nint cnt=0,tot=n;//\u4e00\u5b9a\u6ce8\u610f\u8fd9\u91cc\u8d4b\u503c\u662f\u6ca1\u7528\u7684\uff0c\u8981\u5728\u4e3b\u51fd\u6570\u91cc\u8bfb\u5165n\u4e4b\u540e\u518d\u8d4b\u503c\uff01\nvoid add(int u,int v){\nt[++cnt].ver=v,t[cnt].Next=t[u].head;\nt[u].head=cnt;\n}\nint val[si_n&lt;&lt;1];\nbool vis[si_n&lt;&lt;1];\nint f[si_n&lt;&lt;1][20],dep[si_n&lt;&lt;1];\nvoid dfs(int i,int fa){\ndep[i]=dep[fa]+1;\nf[i][0]=fa,vis[i]=true;\nfor(register int j=1;j&lt;18;++j){\nf[i][j]=f[f[i][j-1]][j-1];\n}\nfor(register int j=t[i].head;j;j=t[j].Next){\nint v=t[j].ver;\nif(v==fa) continue;\ndfs(v,i);\n}\n}\n\nint lca(int u,int v){\nif(dep[u]&lt;dep[v]) swap(u,v);\nfor(register int i=19;i&gt;=0;--i){\nif(dep[f[u][i]]&gt;=dep[v]) u=f[u][i];\n}\nif(u==v) return u;\nfor(register int i=19;i&gt;=0;--i){\nif(f[u][i]!=f[v][i]){\nu=f[u][i],v=f[v][i];\n}\n}\nreturn f[u][0];\n}\nvoid insert(int u,int v,int w){\nint k=++tot;val[k]=w;\nint ru=root(u),rv=root(v);\nadd(k,ru),add(ru,k);\nadd(k,rv),add(rv,k);\npa[k]=pa[ru]=pa[rv]=k;//\u5148\u52a0\u8fb9\u540e\u5408\u5e76\n}\n\nint main(){\nmemset(vis,false,sizeof vis);\nscanf(\"%d%d\",&amp;n,&amp;m);\ntot=n;// qwq\nfor(register int i=1;i&lt;=n;++i){\npa[i]=i;\n}\nfor(register int i=1;i&lt;=m;++i){\nint u,v,w;\nscanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w);\ne[i]=(Kruskal){u,v,w};\n}\nsort(e+1,e+1+m);\nfor(register int i=1;i&lt;=m;++i){\nint ru=root(e[i].u),rv=root(e[i].v);\nif(ru!=rv) insert(e[i].u,e[i].v,e[i].w);\n}\nfor(register int i=1;i&lt;=tot;++i){\nif(!vis[i]) dfs(root(i),0);\n}// \u9632\u6b62\u4e0d\u8fde\u901a\n// for(register int i=1;i&lt;=tot;++i){\n// cout&lt;&lt;val[i]&lt;&lt;\" \";\n// }\n// puts(\"\");\nscanf(\"%d\",&amp;q);\nwhile(q--){\nint l,r;\nscanf(\"%d%d\",&amp;l,&amp;r);\nif(root(l)!=root(r)) puts(\"-1\");\nelse printf(\"%d\\n\",val[lca(l,r)]);\n}\nreturn 0;\n}\n</code></pre> <p>\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u8fd9\u7c7b\u95ee\u9898\u7684\u6838\u5fc3\uff1a</p> <p>\u82e5\u4e00\u4e2a\u70b9\u80fd\u901a\u8fc7\u4e00\u6761\u8def\u5f84\u5230\u8fbe\uff0c\u90a3\u4e48\u6211\u4eec\u8d70\u6700\u5c0f\uff08\u5927\uff09\u751f\u6210\u6811\u4e0a\u7684\u8fb9\u4e5f\u4e00\u5b9a\u80fd\u5230\u8fbe\u8be5\u8282\u70b9\u3002</p>"}, {"location": "algor/graph/negative-ring-and-difference-constraint/", "title": "\u8d1f\u73af & \u5dee\u5206\u7ea6\u675f", "text": ""}, {"location": "algor/graph/negative-ring-and-difference-constraint/#_1", "title": "\u8d1f\u73af", "text": "<p>\u5927\u6982\u5c31\u662f\u56fe\u4e0a\u7684\u4e00\u4e2a\u73af\uff0c\u73af\u4e0a\u6240\u6709\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u662f\u8d1f\u6570\u3002</p> <p>\u6b63\u5e38\u8dd1\u6700\u77ed\u8def\u7684\u8bdd\u5c31\u4f1a\u5728\u4e0a\u9762\u65e0\u9650\u8f6c\u4e0b\u53bb\u3002</p> <p>\u5904\u7406\u7684\u65f6\u5019\u53ef\u4ee5\u5229\u7528 Bellmanford \u548c SPFA \u7684\u6027\u8d28\u6765\u5224\u65ad\u3002</p> <p>\u73b0\u5728\u5728\u6b63\u5e38\u7684\u6700\u77ed\u8def\u4e0a\u7528\u4e0b\u9762\u7684\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u8fdb\u884c\u5224\u5b9a\uff1a</p> <ol> <li>\u5982\u679c\u6709\u4e00\u4e2a\u70b9\u88ab\u8fed\u4ee3\u4e86\u4e0d\u5c11\u4e8e \\(n\\) \u6b21\uff08\u5165\u961f\u4e0d\u5c11\u4e8e \\(n\\) \u6b21\uff09\uff0c\u90a3\u4e48\u56fe\u4e2d\u5fc5\u7136\u5b58\u5728\u8d1f\u73af\u3002</li> <li>\u5982\u679c\u6e90\u70b9\u5230\u67d0\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u6709\u4e0d\u5c11\u4e8e \\(n\\) \u6761\u8fb9\uff0c\u90a3\u4e48\u56fe\u4e2d\u5fc5\u7136\u5b58\u5728\u8d1f\u73af\u3002</li> </ol> <p>1 \u5f88\u597d\u7406\u89e3\uff0c\u88ab\u5165\u961f\u4e86\u4e0d\u5c11\u4e8e \\(n\\) \u6b21\uff0c\u5c31\u8bf4\u660e\u65e0\u8bba\u5982\u4f55\u8fed\u4ee3\uff0c\u59cb\u7ec8\u5b58\u5728\u81f3\u5c11\u4e00\u6761\u8fb9\u6ee1\u8db3\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\uff0c\u5728\u6700\u77ed\u8def\u5f53\u4e2d\u5bf9\u5e94\u7684\u5c31\u662f\u8d1f\u73af\u3002</p> <p>2 \u4e5f\u5dee\u4e0d\u591a\uff0c\u4e00\u4e2a \\(n\\) \u4e2a\u70b9\uff0c\\(n\\) \u6761\u8fb9\u7684\u8054\u901a\u56fe\u5fc5\u7136\u662f\u5b58\u5728\u73af\u7684\uff08\u597d\u50cf\u63cf\u8ff0\u6709\u70b9\u95ee\u9898\uff09\uff0c\u6700\u77ed\u8def\u662f\u4e2a\u73af\uff0c\u90a3\u4e48\u5fc5\u7136\u662f\u51fa\u73b0\u4e86\u8d1f\u73af\u3002</p> <p>\u901a\u5e38\u6765\u8bf4\u7b2c\u4e8c\u79cd\u505a\u6cd5\u6548\u7387\u66f4\u9ad8\uff0c\u6bd4\u5982</p> <pre><code>1-&gt;2, 2-&gt;3, 3-&gt;4, 4-&gt;5, ..., n-1-&gt;n, n-&gt;1\n</code></pre> <p>\u8fd9\u79cd\u56fe\uff0c1 \u7684\u505a\u6cd5\u5c31\u8981\u8fed\u4ee3 \\(\\text{O}(n^2)\\)  \u7ea7\u522b\u6b21\uff0c2 \u53ea\u9700\u8981 \\(n\\) \u6b21\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u4f18\u5316\u662f\u628a <code>std::queue</code> \u6362\u6210 <code>std::stack</code>\u3002</p> <p>\u53e6\u5916\u4e00\u79cd\u4e0d\u4e00\u5b9a\u6b63\u786e\u7684\u5361\u65f6 trick \u662f\uff0c\u5f53\u6240\u6709\u8282\u70b9\u7684\u603b\u5165\u961f\u6b21\u6570\u8d85\u8fc7\u67d0\u4e2a\u8bbe\u5b9a\u503c\u7684\u65f6\u5019\uff0c\u5c31\u76f4\u63a5\u8ba4\u4e3a\u56fe\u4e2d\u5b58\u5728\u8d1f\u73af\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int si_n=5e2+10;\nconstexpr int si_m=5e3+2e2+10;\nint n,m,q;\nint T,tot=0;\nstruct Edge{ int head,Next,ver,w; }e[si_m];\ninline void add(int u,int v,int w){ e[++tot].ver=v,e[tot].Next=e[u].head,e[u].head=tot,e[tot].w=w; }\nint dis[si_n],cnt[si_n];\nbool vis[si_n];\nstd::queue&lt;int&gt;Q;\ninline bool spfa(int s){\nmemset(dis,0,sizeof dis),memset(cnt,0,sizeof cnt),memset(vis,false,sizeof vis);\nfor(register int i=1;i&lt;=n;++i){\nQ.push(i),vis[i]=true;\n} cnt[s]=0; // \u5168\u90e8\u5165\u961f\uff0c\u76f8\u5f53\u4e8e\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u3002\nwhile(!Q.empty()){\nint u=Q.front(); Q.pop();\nvis[u]=false;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver,w=e[i].w;\nif(dis[v]&gt;dis[u]+w){\ndis[v]=dis[u]+w;\ncnt[v]=cnt[u]+1;\nif(cnt[v]&gt;=n) return true;\nif(!vis[v]) Q.push(v),vis[v]=true;\n}\n}\n} return false;\n}\n</code></pre> <p>\u8fd8\u6709\uff0c\u5982\u679c\u53ea\u662f\u5224\u5b9a\u8d1f\u73af\u7684\u8bdd\uff0c\\(dis\\) \u521d\u59cb\u5316\u6210\u591a\u5c11\u90fd\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002</p> <p>\u6362\u6210\u5224\u65ad\u6b63\u73af\u7684\u8bdd\uff0c\u6c42\u6700\u957f\u8def\u5373\u53ef\u3002</p>"}, {"location": "algor/graph/negative-ring-and-difference-constraint/#_2", "title": "\u5dee\u5206\u7ea6\u675f", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e0d\u7b49\u5f0f\u7ec4\uff0c\u6bcf\u4e2a\u4e0d\u7b49\u5f0f\u5f62\u5982 \\(x_i \\le x_j +C_k\\) \uff0c\u5176\u4e2d \\(C_k\\) \u662f\u5e38\u6570\uff08\u6b63\u8d1f\u5747\u53ef\uff09\uff0c \\(i,j\\) \u662f\u81ea\u53d8\u91cf\u3002</p> <p>\u95ee\u4e00\u7ec4\u53ef\u884c\u89e3 \\(x_1,x_2 \\dots x_n\\)\u3002</p> <p>\u4e0d\u7b49\u5f0f\u957f\u7684\u5f88\u50cf\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\uff0c\u6240\u4ee5\u8003\u8651\u5229\u7528\u56fe\u8bba\u5206\u6790\u3002</p> <p>\u6bd4\u5982 \\(x_i\\le x_j +C_k\\)\uff0c\u53ef\u4ee5\u770b\u4f5c \\(j\\to i\\) \u7684\u8def\u5f84\u4e0a\u6709\u4e00\u6761\u6743\u503c\u662f \\(C_k\\) \u7684\u8fb9\u3002</p> <p>\u6700\u7ec8\u6ee1\u8db3\u6761\u4ef6\u65f6\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6240\u6709\u7c7b\u4f3c \\(x_i &gt; x_j+C_k\\) \u7684\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\u90fd\u4e0d\u6210\u7acb\uff0c\u4e5f\u5c31\u662f\u6c42\u5b8c\u6700\u77ed\u8def\u4e4b\u540e\u7684\u60c5\u51b5\u3002</p> <p>\u6b64\u65f6\uff0c\u4ece\u6e90\u70b9\u51fa\u53d1\u5230\u6bcf\u4e2a\u70b9\u7684 \\(dis_i\\) \u5c31\u662f\u5bf9\u5e94\u7684 \\(x_i\\)\uff0c\\(dis\\) \u5c31\u662f\u4e00\u7ec4\u53ef\u884c\u89e3\u3002</p> <p>\u5982\u679c\u56fe\u4e2d\u5b58\u5728\u8d1f\u73af\uff0c\u90a3\u4e48\u5728\u73af\u4e0a\u8f6c\u4e00\u5708\u4e4b\u540e\u5fc5\u7136\u4f1a\u51fa\u73b0 \\(x_i \\le x_i +\\sum C_k , \\sum C_k &lt;0\\) \u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u77db\u76fe\uff08\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u76f8\u5f53\u4e8e \\(x_i &lt; x_i\\)\uff09\uff0c\u65e0\u89e3\u3002</p> <p>\u5982\u679c\u73b0\u5728\u8981\u6c42\u7684\u4e0d\u7b49\u5f0f\u53d8\u6210\u4e86 \\(x_i \\ge x_j + C_k\\) \uff0c\u8dd1\u6700\u957f\u8def\u5373\u53ef\uff0c\u65e0\u89e3\u53d8\u6210\u5224\u65ad\u6b63\u73af\u3002</p> <p>\u5f53\u7136\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6240\u6709\u7684\u4e0d\u7b49\u5f0f\u90fd\u7684\u5f97\u5230\u6ee1\u8db3\uff0c\u9700\u8981\u627e\u5230\u4e00\u4e2a\u80fd\u591f\u4ece\u5b83\u51fa\u53d1\uff0c\u7ecf\u8fc7\u6240\u6709\u8fb9\u7684\u6e90\u70b9\u8fdb\u884c SPFA\uff0c\u8fd9\u4e2a\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u5c31\u884c\u4e86\u3002</p> <p>\u4e0d\u8fc7\uff0c\u5982\u679c\u9898\u76ee\u8981\u6c42\u4e86\u7c7b\u4f3c \\(\\forall i,x_i&gt;0\\) \u7684\u8981\u6c42\uff0c\u4e14\u8fd8\u8981\u6c42\u6700\u5c0f\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u8fde\u8fb9\u800c\u4e0d\u662f\u5168\u90e8\u653e\u5230\u961f\u5217\u91cc\u9762\u4e86\uff0c\u8fb9\u6743\u6839\u636e\u9898\u76ee\u5224\u65ad\uff0c\u6bd4\u5982\u524d\u9762\u7684\u4f8b\u5b50\u5c31\u9700\u8981\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u8fde \\(0 \\to i,w=1\\)\uff0c\u7136\u540e\u8ba9 \\(dis_0=0\\) \u3002</p> <p>\u5982\u679c\u51fa\u73b0 \\(x_i \\le C_k\\) \u8fd9\u79cd\u6761\u4ef6\uff0c\u8ba9 \\(x_i\\) \u548c\u8d85\u7ea7\u6e90\u70b9\u8fde \\(C_k\\) \u7684\u8fb9\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\\(&lt; &gt;\\) \u53ef\u4ee5\u7528 \\(+-1\\) \u6765\u53d8\u5316\u6210 \\(\\le \\ge\\)\u3002</p> <p>\\(=\\) \u7b49\u4ef7\u4e8e \\(\\le \\land\\ge\\) \u3002</p> <p>\u5982\u679c\u5728\u9898\u76ee\u91cc\u9047\u5230 \\(\\ge \\le\\) \u540c\u65f6\u51fa\u73b0\uff0c\u53d8\u6362\u65b9\u5411\uff0c\u79fb\u52a8 \\(C_k\\) \u5373\u53ef\u3002</p>"}, {"location": "algor/graph/sssp/", "title": "\u6700\u77ed\u8def", "text": ""}, {"location": "algor/graph/sssp/#_1", "title": "\u6982\u8ff0", "text": "<p>\u7ed9\u4e00\u5f20\u5e26\u6743\u56fe\uff0c\u95ee\u4ece\u67d0\u4e2a\u70b9\u5230\u5176\u5b83\u6240\u6709\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002</p> <p>\u5982\u679c\u662f\u65e0\u6743\u56fe\u53ef\u4ee5\u7528 BFS\u3002</p> <p>\u5982\u679c\u662f\u53ea\u6709 0/1 \u8fb9\u6743\u7684\u53ef\u4ee5\u4f7f\u7528\u53cc\u7aef\u961f\u5217 BFS\u3002</p> <p>\u5982\u679c\u662f\u5e26\u6743\u7684\u5355\u6e90\u6700\u77ed\u8def\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6839\u636e\u56fe\u7684\u6027\u8d28\u9009\u62e9 Dijkstra, Spfa, BellmanFord\u3002</p> <p>\u5982\u679c\u662f\u7a20\u5bc6\u56fe\uff0c\u5e76\u4e14\u8981\u6c42\u5168\u6e90\u6700\u77ed\u8def\uff0c\u5728 \\(n\\) \u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528 Floyd.</p> <p>Johnson \u4e0d\u5e38\u7528\uff0c\u4e0d\u63d0\u4e86\u3002</p> <p>\u5355\u6e90\u6700\u77ed\u8def\u7684\u65f6\u5019\u4e00\u822c\u4f7f\u7528 \\(dis_i\\) \u8868\u793a\u4ece\u8d77\u70b9 \\(s\\) \u5230 \\(i\\) \u7684\u6700\u77ed\u8def\u3002</p> <p>\u5168\u6e90\u7684\u65f6\u5019\u4e00\u822c\u7528 \\(dis_{i,j}\\) \u8868\u793a\u4ece \\(i\\to j\\) \u7684\u6700\u77ed\u8def\u3002</p> <p>\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\u662f \\(dis_v&gt;dis_u+w(u,v)\\)\u3002</p> <p>\u4e00\u822c\u4f1a\u5728\u6ee1\u8db3\u4e0d\u7b49\u5f0f\u7684\u65f6\u5019\u4ee4 \\(dis_v=dis_u+w(u,v)\\)\u3002</p>"}, {"location": "algor/graph/sssp/#dijkstra", "title": "Dijkstra \u7b97\u6cd5", "text": "<p>\u601d\u8def\u5f88\u7b80\u5355\uff0c\u9996\u5148\u7528\u4e00\u4e2a\u6570\u7ec4 \\(vis\\) \u6807\u8bb0\u67d0\u4e2a\u8282\u70b9\u662f\u5426\u88ab\u66f4\u65b0\u8fc7\u3002</p> <p>\u521d\u59cb\u5316\u4ee4 \\(dis_s=0\\)\uff0c\u5176\u5b83\u7684\u8bbe\u6210 \\(+ \\infty\\)\u3002</p> <p>\u6bcf\u6b21\u627e\u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\uff0c \\(dis\\) \u6700\u5c0f\u7684\u8282\u70b9 \\(x\\) \uff0c\u6807\u8bb0\u8fd9\u4e2a\u8282\u70b9\u3002</p> <p>\u7136\u540e\u626b\u63cf \\(x\\) \u7684\u6240\u6709\u51fa\u8fb9\uff0c\u5229\u7528\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\u66f4\u65b0\u5b83\u80fd\u5230\u8fbe\u7684\u6240\u6709\u8282\u70b9\u7684 \\(dis\\) \u3002</p> <p>\u76f4\u5230\u6240\u6709\u8282\u70b9\u88ab\u6807\u8bb0\u5b8c\u4e3a\u6b62\u3002</p> <p>\u590d\u6742\u5ea6 \\(\\text{O}(n^2)\\)\u3002</p> <p>\u4f18\u5316\uff1a\u8003\u8651\u5229\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u6bcf\u6b21\u53d6\u51fa\u6839\u8fdb\u884c\u66f4\u65b0\u5373\u53ef\uff0c\u5f53\u67d0\u4e2a\u8282\u70b9\u88ab\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\u66f4\u65b0\u7684\u65f6\u5019\u5c06\u5176\u653e\u5165\u5806\u3002</p> Code <pre><code>std::priority_queue&lt;pair&lt;int,int&gt;&gt;q;\ninline void dijkstra(int s){\nmemset(vis,false,sizeof vis),memset(dis,0x3f,sizeof dis);\ndis[s]=0,q.push({dis[s],s});\nwhile(!q.empty()){\nint u=q.top().second; q.pop();\nif(vis[u]) continue; vis[u]=true;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver,w=e[i].w;\nif(dis[v]&gt;dis[u]+w) dis[v]=dis[u]+w,q.push({-dis[v],v}); //\u5229\u7528\u76f8\u53cd\u6570\u628a\u5927\u6839\u5806-&gt;\u5c0f\u6839\u5806\n// \u4e00\u5b9a\u8981\u5148\u66f4\u65b0 dis[v] \u518d q.push\n}\n}\n}\n</code></pre> <p>\u5728\u975e DAG \u4e0a\u51fa\u73b0\u8d1f\u8fb9\u6743\u5c31\u4e0d\u80fd\u7528\u3002</p>"}, {"location": "algor/graph/sssp/#bellman-ford", "title": "Bellman Ford \u7b97\u6cd5", "text": "<p>\u601d\u60f3\u4e5f\u5f88\u7b80\u5355\u3002</p> <p>\u626b\u63cf\u6240\u6709\u8fb9\uff0c\u5982\u679c\u626b\u63cf\u5230\u7684\u8fd9\u6761\u8fb9\u6ee1\u8db3\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\uff0c\u66f4\u65b0\u5bf9\u5e94\u8282\u70b9\u7684 \\(dis\\)\u3002</p> <p>\u91cd\u590d\u8fed\u4ee3\uff0c\u76f4\u5230\u6ca1\u6709\u66f4\u65b0\u64cd\u4f5c\u53d1\u751f\uff0c\u590d\u6742\u5ea6 \\(\\text{O}(nm)\\)\u3002</p>"}, {"location": "algor/graph/sssp/#spfa", "title": "Spfa", "text": "<p>\u961f\u5217\u4f18\u5316\u7684 BellmanFord\uff0c\u6709\u8d1f\u8fb9\u6743\u4e5f\u6ca1\u6709\u5f71\u54cd\u3002</p> <p>\u8003\u8651\u4f7f\u7528\u4e00\u4e2a\u961f\u5217\uff0c\u6700\u5f00\u59cb\u7684\u65f6\u5019\u961f\u5217\u53ea\u5305\u542b\u8d77\u70b9\u3002</p> <p>\u6bcf\u6b21\u53d6\u51fa\u961f\u5934\uff0c\u626b\u63cf\u961f\u5934\u7684\u6240\u6709\u51fa\u8fb9\uff0c\u5982\u679c\u6ee1\u8db3\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\u5219\u66f4\u65b0\u3002</p> <p>\u5982\u679c\u88ab\u66f4\u65b0\u7684\u8282\u70b9\u4e0d\u5728\u961f\u5217\u91cc\u9762\uff0c\u628a\u88ab\u66f4\u65b0\u7684\u8282\u70b9\u63d2\u5165\u961f\u5c3e\u3002</p> <p>\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\uff0c\u590d\u6742\u5ea6 \\(\\text{O}(km)\\)\u3002 \\(k\\) \u662f\u4e2a\u6bd4\u8f83\u5c0f\u7684\u5e38\u6570\u3002</p> Code <pre><code>std::queue&lt;int&gt;q;\ninline void spfa(int s){\nmemset(vis,false,sizeof vis),memset(dis,0x3f,sizeof dis);\ndis[s]=0,q.push(s),vis[s]=true;\nwhile(!q.empty()){\nint u=q.front(); q.pop();\nvis[u]=false;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver,w=e[i].w;\nif(dis[v]&gt;dis[u]+w){\ndis[v]=dis[u]+w;\nif(!vis[v]) q.push(v),vis[v]=true;\n}\n}\n}\n}\n</code></pre> <p>\u8fd9\u4e2a\u7b97\u6cd5\u5bb9\u6613\u88ab\u5361\uff0c\u6bd4\u5982\u83ca\u82b1\u56fe\u548c\u84b2\u516c\u82f1\u5c31\u968f\u4fbf\u5361SPFA\u3002</p> <p>\u6240\u4ee5\u7ed9\u4e00\u4e2a\u4f18\u5316\u3002</p>"}, {"location": "algor/graph/sssp/#spfa-slf-swap", "title": "Spfa + SLF + Swap", "text": "<p>\u81f3\u5c11\u662f\u6211\u89c9\u5f97\u6700\u6709\u6548\u7684\u4f18\u5316\u3002</p> <p>\u867d\u7136\u8fd8\u662f\u88ab @fstqwq \u5b66\u957f\u5728 zhihu \u4e0a\u548c\u4e00\u5806\u795e\u4ed9\u53c9\u7206\u4e86\u3002</p> <p>\u8003\u8651\u7528\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\u4f18\u5316\uff0c\u6bcf\u6b21\u5c06\u5165\u961f\u7ed3\u70b9\u7684 \\(dis\\) \u548c\u961f\u9996\u6bd4\u8f83\uff0c\u5982\u679c\u66f4\u5927\u5219\u63d2\u5165\u81f3\u961f\u5c3e\uff0c\u5426\u5219\u63d2\u5165\u961f\u9996\u3002</p> <p>\u8fd9\u662f\u666e\u901a\u7684 SLF\uff0c\u66f4\u52a0\u4f18\u79c0\u7684\u65b9\u5f0f\u662f\u52a0\u4e0a swap\uff0c\u6bcf\u6b21\u68c0\u67e5\u961f\u5934\u662f\u5426\u5c0f\u4e8e\u961f\u5c3e\uff0c\u5982\u679c\u4e0d\u662f\u7684\u8bdd\u4ea4\u6362\u961f\u5934\u548c\u961f\u5c3e\u3002</p> <p>\u76f4\u63a5\u6539\u4e00\u4e0b\u961f\u5217\u7684\u5b9e\u73b0\u5373\u53ef\u3002</p> Code <pre><code>struct SLF_Swap{\nstd::deque&lt;int&gt;dq;\nSLF_Swap(){ dq.clear(); }\ninline void push(int x){\nif(!dq.empty()){\nif(dis[x]&lt;dis[dq.front()]) dq.push_front(x);\nelse dq.push_back(x);\nif(dis[dq.front()]&gt;dis[dq.back()]) swap(dq.front(),dq.back());\n// \u8fd9\u91cc\u7684\u4e24\u91cd if \u53ef\u4ee5\u4fdd\u8bc1\u53ea\u4f1a\u5728\u81f3\u5c11\u6709\u4e24\u4e2a\u5143\u7d20\u7684\u65f6\u5019\u624d\u4ea4\u6362\u3002\n} else dq.push_back(x);\n}\ninline void pop(){\ndq.pop_front();\nif(!dq.empty() &amp;&amp; dis[dq.front()]&gt;dis[dq.back()]) swap(dq.front(),dq.back());\n}\ninline int size(){ return dq.size(); }\ninline int front(){ return dq.front(); }\ninline bool empty(){ return !dq.size(); }\n}q;\n</code></pre>"}, {"location": "algor/graph/sssp/#floyd", "title": "Floyd \u7b97\u6cd5", "text": "<p>\u4e0d\u80fd\u6709\u8d1f\u73af\uff0c\u56e0\u4e3a Floyd \u8981\u6c42\u6700\u77ed\u8def\u5fc5\u987b\u5b58\u5728\u3002</p> <p>\u4f46\u662f Floyd \u53ef\u4ee5\u5224\u65ad\u8d1f\u73af\uff0c</p> <p>\u5148\u521d\u59cb\u5316\u6240\u6709 \\(dis = +\\infty,dis[i][i] = 0\\)\u3002</p> <p>\u53ea\u8981\u8dd1\u5b8c\u4e4b\u540e\u5b58\u5728 \\(dis[i][i] &lt; 0\\)\uff0c\u5373\u5b58\u5728\u8d1f\u73af\u3002</p> <p>\u8003\u8651\u52a8\u6001\u89c4\u5212\u3002</p> <p>\u8bbe \\(dis_{i,j,k}\\) \u8868\u793a\u4ece \\(i \\to j\\) \uff0c\u7ecf\u8fc7\u82e5\u5e72\u4e2a\u6807\u53f7\u4e0d\u8d85\u8fc7 \\(k\\) \u7684\u8282\u70b9\u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002</p> <p>\u53ef\u4ee5\u5206\u4e24\u4e2a\u90e8\u5206\u8f6c\u79fb\uff0c\u7b2c\u4e00\u4e2a\u90e8\u5206\u662f \\(dis_{i,j,k-1}\\)\uff0c\u7b2c\u4e8c\u4e2a\u90e8\u5206\u662f \\(i\\to k \\to j\\)</p> <p>\u524d\u8005\u662f\u76f4\u63a5\u4ece \\(i \\to j\\) \uff0c\u7ecf\u8fc7\u8282\u70b9\u7f16\u53f7\u4e0d\u8d85\u8fc7 \\(k-1\\)\uff0c\u540e\u8005\u662f\u5148\u4ece \\(i\\) \u5230 \\(k\\) \u4e4b\u540e\u518d\u5230 \\(j\\) \u3002</p> <p>\u6240\u4ee5 \\(dis_{i,j,k}=\\min(dis_{i,j,k-1},dis_{i,k,k-1}+dis_{k,j,k-1})\\)</p> <p>\u8fd9\u91cc \\(k\\) \u662f\u9636\u6bb5\uff0c\u6240\u4ee5\u653e\u5728\u6700\u5916\u5c42\u3002</p> <p>\u53d1\u73b0\u8fd9\u73a9\u610f\u513f\u53ea\u548c\u4e0a\u4e00\u5c42\u6709\u5173\uff0c\u7ecf\u8fc7\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\uff0c\u80fd\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\uff0c\u53ef\u4ee5\u76f4\u63a5\u53bb\u6389\u7b2c\u4e09\u7ef4\u3002</p> <p>\u4f46\u662f\u65b9\u7a0b\u8981\u7a0d\u5fae\u6539\u53d8\u4e00\u4e0b</p> <pre><code>for(register int k=1;k&lt;=n;++k){\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1;j&lt;=n;++j){\ndis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n}\n}\n} // \u4e0d\u8981\u5fd8\u8bb0\u521d\u59cb\u5316.\n</code></pre> <p>\u4e00\u822c\u9700\u8981\u7528\u5230\u975e\u677f\u5b50\u7684Floyd \u7684\u65f6\u5019\uff0c\u90fd\u9700\u8981\u8003\u8651\u4f7f\u7528 \\(k\\) \u8fd9\u4e2a\u4e1c\u897f\u7684\u6027\u8d28\u3002</p> <p>\u6bd4\u5982\u8981\u6c42\u6700\u5c0f\u73af\uff0c\u6070\u597d \\(X\\) \u6761\u8fb9\u7684\u6700\u77ed\u8def\u7684\u65f6\u5019\u5c31\u9700\u8981\u7528\u8fd9\u4e2a\u8003\u8651\u3002</p> <p>\u66f4\u591a\u7684\u65f6\u5019\u662f\u628a \\(k\\) \u5f53\u4f5c\u4e2d\u95f4\u70b9\u3002</p>"}, {"location": "algor/graph/sssp/#_2", "title": "\u6700\u77ed\u8def\u7684\u4e00\u4e9b\u6269\u5c55\u5e94\u7528", "text": "<p>\u6216\u8005\u8bf4\u662f\u4e00\u4e9b\u6bd4\u8f83\u6709\u610f\u601d\u7684\u6280\u5de7\u3002</p> <p>\u53e6\u5916\u4e00\u90e8\u5206\u4f1a\u5728\u9898\u76ee\u603b\u7ed3\u91cc\u9762\u63d0\u5230\u3002</p>"}, {"location": "algor/graph/sssp/#floyd_1", "title": "Floyd \u5904\u7406\u4f20\u9012\u95ed\u5305", "text": "<p>\u7ed9\u4f60\u4e00\u4e9b\u5143\u7d20\u548c\u4e00\u4e9b\u5177\u6709\u4f20\u9012\u6027\u7684\u4e8c\u5143\u5173\u7cfb\uff0c\u901a\u8fc7\u4f20\u9012\u6027\u63a8\u5bfc\u51fa\u66f4\u591a\u7684\u5173\u7cfb\u3002</p> <p>\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u5c31\u662f \\(A&lt;B\\) \u8fd9\u79cd\u5173\u7cfb\u3002</p> <p>\u8bbe \\(f_{i,j}\\) \u8868\u793a \\(i,j\\) \u4e4b\u95f4\u662f\u5426\u6709\u8fd9\u79cd\u4e8c\u5143\u7684\u4f20\u9012\u5173\u7cfb\u3002</p> <p>\u5982\u679c\u6ee1\u8db3 \\(i &lt; j\\) \uff08\u6b64\u5904\u7684\u5c0f\u4e8e\u4ee3\u6307\u4e8c\u5143\u5173\u7cfb\uff09\u3002</p> <p>\u90a3\u4e48 \\(f_{i,j}=true\\)\uff0c\u53cd\u4e4b \\(f_{i,j}=false\\)\u3002</p> <p>\u8dd1\u4e00\u904d Floyd \u5c31\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u80fd\u63a8\u51fa\u7684\u5173\u7cfb\u3002</p> <pre><code>for(register int k=1;k&lt;=n;++k){\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1;j&lt;=n;++j){\nf[i][j]|=(f[i][k]&amp;&amp;f[k][j]);\n}\n}\n}\n</code></pre>"}, {"location": "algor/graph/sssp/#floyd_2", "title": "Floyd \u5904\u7406\u65e0\u5411\u56fe\u6700\u5c0f\u73af", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6c42\u56fe\u4e0a\u7684\u6700\u5c0f\u73af\uff0c\u8981\u6c42\u73af\u81f3\u5c11\u662f\u4e09\u5143\u73af\u3002</p> <p>\u8003\u8651 Floyd \u5916\u5c42\u5faa\u73af\u521a\u521a\u5f00\u59cb\u7684\u65f6\u5019 \\(dis_{i,j}\\) \u662f\u4ec0\u4e48\u3002</p> <p>\u660e\u663e\uff0c\u662f\uff1a\u201c\u7ecf\u8fc7\u82e5\u5e72\u4e2a\u7f16\u53f7\u4e0d\u8d85\u8fc7 \\(k-1\\) \u7684\u8282\u70b9\uff0c\u7531 \\(i \\to j\\) \u7684\u6700\u77ed\u8def\u201d\u3002</p> <p>\u628a \\(k\\) \u5f53\u4f5c\u4e2d\u95f4\u70b9\uff0c\u4ece \\(i\\to j \\to k \\to i\\) \u5c31\u662f\u4e00\u4e2a\u73af\u3002</p> <p>\u7528\u5f0f\u5b50\u8868\u8fbe\u8fd9\u4e2a\u5c31\u662f \\(dis_{i,j}+a_{j,k}+a_{k,i}\\) \uff08\u6b64\u65f6\u8fd8\u6ca1\u6709\u5bf9 \\(k\\) \u8fd9\u4e00\u5c42\u7684 \\(dis\\) \u8fdb\u884c\u66f4\u65b0\uff09</p> <p>\u5bf9\u6240\u6709\u7684\u8fd9\u4e2a\u5f0f\u5b50\u53d6\u6700\u5c0f\u503c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002</p> <p>\u867d\u7136\u5bf9\u4e8e\u6bcf\u4e2a \\(k\\) \uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53ea\u6c42\u7684\u6807\u53f7\u4e0d\u8d85\u8fc7 \\(k\\) \u7684\u8282\u70b9\u6784\u6210\u7684\u6700\u5c0f\u73af\uff0c\u4f46\u662f\u4e4b\u540e\u7684 \\(k\\) \u662f\u4f1a\u8003\u8651\u5230\u7684\uff0c\u6240\u4ee5\u7b97\u6cd5\u662f\u6b63\u786e\u7684\u3002</p> <p>\u5982\u679c\u8981\u8f93\u51fa\u65b9\u6848\u7684\u8bdd\uff0c\u8bb0\u5f55 \\(pos_{i,j}\\) \u8868\u793a\u4f7f \\(dis_{i,j}\\) \u6700\u540e\u53d1\u751f\u66f4\u65b0\u7684 \\(k\\)\uff0c dp \u5b8c\u4e4b\u540e\u641e\u4e00\u4e0b\u9012\u5f52\u8f93\u51fa\u5373\u53ef\u3002</p> Code <pre><code>std::vector&lt;int&gt;ans_path;\ninline void gopath(int u,int v){\nif(pos[u][v]==0) return;\ngopath(u,pos[u][v]),ans_path.push_back(pos[u][v]),gopath(pos[u][v],v);\n} // go through the path from u to v;\n\nsigned main(){\ncin&gt;&gt;n&gt;&gt;m; memset(a,0x3f,sizeof a);\nfor(register int i=1;i&lt;=n;++i) a[i][i]=0;\nfor(register int i=1;i&lt;=m;++i){\nint u,v,w; cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\na[u][v]=min(a[u][v],w),a[v][u]=a[u][v];\n} memcpy(dis,a,sizeof a); int ans=0x3f3f3f3f3f3f3f3f,tmp=ans;\nfor(register int k=1;k&lt;=n;++k){\nfor(register int i=1;i&lt;k;++i){ // \u6ce8\u610f\u662fdp\u4e4b\u524d\uff0c\u6b64\u65f6 dis \u8fd8\u662f k-1 \u7684\u65f6\u5019\u7684\u72b6\u6001\u3002\nfor(register int j=i+1;j&lt;k;++j){\nif(a[j][k]&lt;tmp/2 &amp;&amp; a[k][i]&lt;tmp/2 &amp;&amp; ans&gt;dis[i][j]+a[j][k]+a[k][i]){\nans=dis[i][j]+a[j][k]+a[k][i];\nans_path.clear(),ans_path.push_back(i),gopath(i,j);\nans_path.push_back(j),ans_path.push_back(k);\n} // \u4e0d\u5224\u7684\u8bdd a[j][k]+a[k][i] \u6709\u53ef\u80fd\u7206\uff0c\u5bfc\u81f4\u7b54\u6848\u51fa\u9519\u3002\n}\n}  // \u66f4\u65b0\u6700\u5c0f\u73af\u53d6min\u7684\u8fc7\u7a0b\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1;j&lt;=n;++j){\nif(dis[i][j]&gt;dis[i][k]+dis[k][j]) pos[i][j]=k,dis[i][j]=dis[i][k]+dis[k][j];\n}\n} // \u6b63\u5e38\u7684 Floyd\n} if(ans==0x3f3f3f3f3f3f3f3f) return puts(\"No solution.\"),0;\nfor(auto x:ans_path) cout&lt;&lt;x&lt;&lt;\" \";\nreturn puts(\"\"),0;\n}\n</code></pre>"}, {"location": "algor/graph/sssp/#_3", "title": "\u6700\u77ed\u8def\u8ba1\u6570", "text": "<p>\u8fd9\u4e2a\u73a9\u610f\u513f Floyd\uff0cSPFA\uff0cDijkstra \u90fd\u662f\u53ef\u4ee5\u505a\u7684\u3002</p> <p>\u5728\u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a\u6570\u7ec4 \\(cnt[v]\\) \u8868\u793a\u4ece \\(s \\to v\\) \u7684\u6700\u77ed\u8def\u5f84\u6761\u6570\u3002</p> <p>\u7136\u540e\u6bcf\u6b21\u6700\u77ed\u8def\u88ab\u66f4\u65b0\u7684\u65f6\u5019\u5c31\u66f4\u65b0 \\(cnt\\)\u3002</p> <p>\u989d\u5916\u7684\uff0c\u5982\u679c\u6700\u77ed\u8def\u957f\u5ea6\u6ca1\u6709\u88ab\u66f4\u65b0\uff0c\u4f46\u662f\u4e09\u89d2\u4e0d\u7b49\u5f0f\u4e2d\u7684 \\(&gt;\\) \u53d8\u6210\u4e86 \\(=\\)\uff0c</p> <p>\u90a3\u4e48\u7ed9 \\(cnt\\) \u52a0\u4e0a\u5f53\u524d\u8f6c\u79fb\u8fc7\u6765\u7684\u70b9\u7684 \\(cnt\\)\u3002</p> <p>\u8fd9\u4e1c\u897f\u548cDAG\u4e0a\u7684\u8def\u5f84\u8ba1\u6570\u6bd4\u8f83\u50cf\uff0c\u53ea\u4e0d\u8fc7\u6709\u6700\u77ed\u8def\u7684\u9650\u5236\u3002</p> <p>\u5f53\u7136\uff0c\u8def\u5f84\u6761\u6570\u8fd9\u4e2a\u73a9\u610f\u513f\u662f\u6307\u6570\u7ea7\u522b\u7684\uff0c\u4e00\u822c\u90fd\u4f1a\u8981\u6c42\u53d6\u6a21\u3002</p> <p>\\(Floyd\\) \u7684\u5b9e\u73b0\u7565\u5fae\u6709\u70b9\u4e0d\u540c\uff0c\u56e0\u4e3a\u662f\u679a\u4e3e\u4e2d\u95f4\u70b9\uff0c\u6240\u4ee5\u9700\u8981\u518d\u7528\u4e00\u6b21\u4e58\u6cd5\u539f\u7406\u3002</p> Code <pre><code>Floyd:\n==============================================\nmemset(dis, 0x3f, sizeof dis);\nmemset(cnt, 0, sizeof cnt);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\ndis[u][v] = dis[v][u] = min(dis[u][v], w);\ncnt[u][v] = cnt[v][u] = 1;\n}\n\nfor(int i = 1; i &lt;= n; ++i) dis[i][i] = 0;\n\nfor(int k = 1; k &lt;= n; ++k) {\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= n; ++j) {\nif(dis[i][j] &gt; dis[i][k] + dis[k][j]) {\ndis[i][j] = dis[i][k] + dis[k][j];\ncnt[i][j] = 1ll * cnt[i][k] * cnt[k][j];\n}\nelse if(dis[i][j] == dis[i][k] + dis[k][j]) {\ncnt[i][j] += 1ll * cnt[i][k] * cnt[k][j];\n}\n// \u4e58\u6cd5\u539f\u7406\u8ba1\u6570\u3002\n}\n}\n}\n\nDijkstra:\n==============================================\nvoid dijkstra(int s) {\nmemset(vis, false, sizeof vis); memset(dis, 0x3f, sizeof dis);\nq.push({dis[s] = 0, s}), cnt[1] = 1;\n\nwhile(!q.empty()) {\nint u = q.top().second;\nq.pop();\nif(vis[u]) continue;\nvis[u] = true;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver, w = e[i].w;\nif(dis[v] &gt; dis[u] + w) {\ndis[v] = dis[u] + w;\ncnt[v] = cnt[u] % mod;\nq.push({-dis[v], v});\n}\nelse if(dis[v] == dis[u] + w) {\ncnt[v] = (cnt[v] + cnt[u]) % mod;\n} }\n}\n}\n\nint main() {\nmemset(head, -1, sizeof head);\nmemset(cnt, 0, sizeof cnt);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v;\ncin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n}\n\ndijkstra(1);\n\nfor(int i = 1; i &lt;= n; ++i) {\ncout &lt;&lt; cnt[i] &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/graph/tree-divide/", "title": "\u6811\u5206\u6cbb", "text": ""}, {"location": "algor/graph/tree-divide/#_1", "title": "\u70b9\u5206\u6cbb", "text": ""}, {"location": "algor/graph/tree-divide/#_2", "title": "\u6cdb\u5316", "text": "<p>\u70b9\u5206\u6cbb\u4e5f\u53eb\u91cd\u5fc3\u5256\u5206\uff08\u56fd\u5916\u8fd9\u4e48\u53eb\uff09\uff0c\u4e00\u822c\u7528\u6765\u5904\u7406\u4e00\u4e9b\u9759\u6001\u7684\u8def\u5f84\u76f8\u5173\u8be2\u95ee\uff0c\u4e14\u901a\u5e38\u6240\u9700\u7684\u8def\u5f84\uff08\u72b6\u6001\uff09\u6bd4\u8f83\u591a\u3002</p> <p>\u5176\u601d\u60f3\u662f\uff0c\u6211\u4eec\u5047\u8bbe\u5f53\u524d\u5904\u7406\u5230\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u628a\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8def\u5f84\u5206\u4e3a\u4e24\u7c7b\uff0c\u4e00\u7c7b\u662f\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\u7684\uff0c\u4e00\u7c7b\u662f\u4e0d\u7ecf\u8fc7\u7684\u3002</p> <p>\u6b64\u65f6\u5229\u7528\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5904\u7406\u524d\u8005\uff0c\u9012\u5f52\u540e\u8005\u5206\u5272\u5b50\u95ee\u9898\u6700\u7ec8\u8f6c\u5316\u4e3a\u524d\u8005\uff0c\u4f46\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u6bcf\u6b21\u5904\u7406\u524d\u8005\uff0c\u9700\u8981\u9009\u62e9\u5f53\u524d\u5b50\u6811\u7684\u91cd\u5fc3\uff0c\u4ee5\u4fdd\u8bc1\u5b50\u95ee\u9898\u89c4\u6a21\u6bcf\u6b21\u7f29\u5c0f \\(\\dfrac{1}{2}\\)\uff0c\u4ece\u800c\u4f7f\u5f97\u603b\u590d\u6742\u5ea6\u4e3a \\(O(n \\log n)\\)\u3002</p> <p>\u5bf9\u4e8e\u524d\u8005\uff0c\u4e5f\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u7aef\u70b9\uff0c\u53e6\u4e00\u79cd\u662f\u8fd9\u4e2a\u70b9\u4e3a\u8def\u5f84\u4e0a\u4e00\u70b9\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u6211\u4eec\u5c06\u7b2c\u4e8c\u79cd\u60c5\u51b5\u8f6c\u5316\u4e3a\u7b2c\u4e00\u79cd\u5904\u7406\uff0c\u8fd9\u4e2a\u662f\u5bb9\u6613\u7684\u3002</p> <p>\u8fd9\u662f\u6700\u57fa\u7840\u7684\u601d\u60f3\uff0c\u6838\u5fc3\u90e8\u5206\u5c31\u5728\u4e8e\uff0c\u600e\u4e48\u5904\u7406\u7b2c\u4e00\u79cd\u60c5\u51b5\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u3002</p> <p>\u4e0b\u9762\u770b\u51e0\u9053\u9898\u6765\u719f\u6089\u4e00\u4e0b\uff1a</p>"}, {"location": "algor/graph/tree-divide/#luogu3806-1", "title": "Luogu3806 \u3010\u6a21\u677f\u3011\u70b9\u5206\u6cbb1", "text": "<p>\u7ed9\u5b9a\u4e00\u68f5\u6709 \\(n\\) \u4e2a\u70b9\u7684\u5e26\u8fb9\u6743\u6811\uff0c\\(m\\) \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa \\(k\\)\uff0c\u8be2\u95ee\u6811\u4e0a\u8ddd\u79bb\u4e3a \\(k\\) \u7684\u70b9\u5bf9\u662f\u5426\u5b58\u5728\u3002</p> <p>\\(n\\le 10000,m\\le 100,k\\le 10000000\\)</p> <p>\u505a\u6cd5\u662f\u663e\u7136\u7684\uff0c\u6211\u4eec\u8003\u8651\u600e\u4e48\u5904\u7406\u524d\u9762\u63d0\u5230\u7684\u201c\u7b2c\u4e00\u79cd\u60c5\u51b5\u201d\u7684\u8d21\u732e\u3002</p> <p>\u6211\u4eec\u8bb0 \\(tf(len) = \\texttt{true/false}\\) \u8868\u793a\uff0c\u5728\u4ee5\u5f53\u524d\u8282\u70b9 \\(u\\) \u4e3a\u5b50\u6811\u6839\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u5426\u5b58\u5728\u4e00\u6761\u7ecf\u8fc7 \\(u\\) \u4e14\u957f\u5ea6\u4e3a \\(len\\) \u7684\u8def\u5f84\u3002</p> <p>\u66f4\u65b0\u65f6\u679a\u4e3e\u5b50\u6811\uff0c\u4ee5 \\(u\\) \u4e3a\u6839\u8ba1\u7b97\u4e00\u4e0b\u5b50\u6811\u8282\u70b9\u5230 \\(u\\) \u7684\u8ddd\u79bb \\(dis\\)\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684 \\(dis\\)\uff0c\u5bf9\u4e8e\u4e00\u4e2a \\(d\\)\uff0c\u6211\u4eec\u5224\u65ad\u662f\u5426\u5b58\u5728 \\(tr(k - d) = \\texttt{true}\\) \u5373\u53ef\u3002</p> <p>\u4e4b\u540e\u6e05\u7a7a \\(tf\\)\uff0c\u5148\u8ba1\u7b97\u4e00\u4e0b\u5f53\u524d\u8981\u9012\u5f52\u7684\u5b50\u6811\u7684\u91cd\u5fc3 \\(G_v\\)\uff0c\u7136\u540e\u4ee5 \\(G_v\\) \u4e3a\u6839\u7ee7\u7eed\u8ba1\u7b97\u7b54\u6848\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u6e05\u7a7a \\(tf\\) \u7684\u65f6\u5019\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u8981\u6807\u8bb0\u4e00\u4e0b\u54ea\u4e9b\u4f4d\u7f6e\u88ab\u66f4\u6539\u4e86\uff0c\u5b9e\u73b0\u53ef\u4ee5\u7528\u961f\u5217\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;bitset&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 3e5 + 10;\nconst int inf = 1e9 + 7;\n\nint n, m, q[si];\nint tot = 0, head[si];\nstruct Edge { int ver, Next, w; } e[si &lt;&lt; 1];\ninline void add(int u, int v, int w) { e[tot] = (Edge){v, head[u], w}, head[u] = tot++; } std::queue&lt;int&gt; rec;\nbool tf[10000010], can[si], vis[si];\n// tf: \u5f53\u524d\u5b50\u6811\u7684\u53ef\u884c\u6027\u3002\n\nint cnt = 0, sum = 0;\nint maxv[si], rt = 0;\nint d[si], dis[si], siz[si];\n// d: \u5f53\u524d\u5b50\u6811\u7684 \u8282\u70b9-\u6839 \u8ddd\u79bb\u3002\nvoid calcsiz(int u, int fa) {\nsiz[u] = 1, maxv[u] = 0;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa || vis[v]) continue;\ncalcsiz(v, u);\nmaxv[u] = max(maxv[u], siz[v]), siz[u] += siz[v];\n}\nmaxv[u] = max(maxv[u], sum - siz[u]); // \u6ce8\u610f\u8fd9\u91cc\u662f\u5f53\u524d\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002\nif(maxv[rt] &gt; maxv[u]) rt = u;\n}\nvoid calcdis(int u, int fa) {\nd[++cnt] = dis[u]; // \u8fd9\u91cc\u590d\u5236\u662f\u4e3a\u4e86\u679a\u4e3e\u7684\u65f6\u5019\u4e0d\u5168\u90e8\u679a\u4e3e\uff0c\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver, w = e[i].w;\nif(v == fa || vis[v]) continue;\ndis[v] = dis[u] + w, calcdis(v, u);\n}\n}\nvoid dfs(int u, int fa) {\ntf[0] = true, rec.push(0), vis[u] = true; // \u6253 vis \u662f\u4e3a\u4e86\u786e\u4fdd\u5728\u5b50\u6811\u4e2d\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e0d\u4f1a\u9012\u5f52\u51fa\u53bb\u3002\n// \u6216\u8005\u4e0d\u59a8\u8bf4\uff0c\u6211\u4eec\u662f\u5229\u7528 vis\uff0c\u5c06\u6811\u5212\u5206\u6210\u4e86\u4e00\u4e2a\u4e2a\u8054\u901a\u5757\u6765\u5904\u7406\uff0c\u56e0\u4e3a\u5b83\u6bcf\u6b21\u90fd\u53ea\u4f1a\u6807\u8bb0\u5230\u91cd\u5fc3\u561b\u3002\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver, w = e[i].w;\nif(v == fa || vis[v]) continue;\ndis[v] = w, calcdis(v, u);\nfor(int j = 1; j &lt;= cnt; ++j) {\nfor(int k = 1; k &lt;= m; ++k) {\nif(q[k] &gt;= d[j]) can[q[k]] |= tf[q[k] - d[j]];\n}\n} // \u5148\u5224\u65ad\u518d\u6dfb\u52a0\uff0c\u4e0d\u7136\u7b97\u7684\u4e0d\u662f\u9664\u4e86\u81ea\u5df1\u5b50\u6811\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u4f1a\u591a\u7b97\u3002\nfor(int j = 1; j &lt;= cnt; ++j) {\nif(d[j] &lt; 10000010) rec.push(d[j]), tf[d[j]] = true;\n}\ncnt = 0;\n}\n\nwhile(!rec.empty()) tf[rec.front()] = false, rec.pop();\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa || vis[v]) continue;\nrt = 0, maxv[rt] = inf, sum = siz[v];\ncalcsiz(v, u), calcsiz(rt, -1), dfs(rt, u); // \u5148\u627e\u91cd\u5fc3\u518d\u9012\u5f52\u3002\n}\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(tf, false, sizeof tf);\nmemset(head, -1, sizeof head);\nmemset(vis, false, sizeof vis);\nmemset(can, false, sizeof can);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt; n; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nadd(u, v, w), add(v, u, w);\n}\nfor(int nw = 1; nw &lt;= m; ++nw) {\ncin &gt;&gt; q[nw];\n}\n\nrt = 0, maxv[rt] = inf, sum = n;\ncalcsiz(1, -1), calcsiz(rt, -1), dfs(rt, -1); // \u56e0\u4e3a\u672c\u9898\u9700\u8981\u7528\u5230 tf(0) \u6240\u4ee5 fa \u5c31\u7528 -1 \u4e86\u3002\n\nfor(int nw = 1; nw &lt;= m; ++nw) {\nif(can[q[nw]]) cout &lt;&lt; \"AYE\" &lt;&lt; endl;\nelse cout &lt;&lt; \"NAY\" &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/graph/tree-divide/#luogu4178-tree", "title": "Luogu4178 Tree", "text": "<p>\u7ed9\u5b9a\u4e00\u68f5\u6709 \\(n\\) \u4e2a\u70b9\u7684\u5e26\u6743\u6811\uff0c\u7ed9\u51fa \\(k\\)\uff0c\u8be2\u95ee\u6811\u4e0a\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e \\(k\\) \u7684\u70b9\u5bf9\u6570\u91cf\u3002</p> <p>\\(n\\le 40000,k\\le 20000,w_i\\le 1000\\)</p> <p>\u7c7b\u4f3c\u4e0a\u4e00\u9898\u5373\u53ef\uff0c\u8fd9\u6b21\u6211\u4eec\u4e0d\u7ef4\u62a4 \\(tf\\) \u4e86\uff0c\u76f4\u63a5\u7ef4\u62a4\u4e00\u9897\u7ebf\u6bb5\u6811\u6765\u8bb0\u5f55\u6bcf\u4e2a\u957f\u5ea6\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u5c31\u53ef\u4ee5\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\n// using i64 = long long;\n\nconst int si = 2e5 + 10;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, m, V;\nint tot = 0, head[si];\nstruct Edge { int ver, Next, w; } e[si &lt;&lt; 1];\ninline void add(int u, int v, int w) { e[tot] = (Edge){v, head[u], w}, head[u] = tot++; }\n\nclass Segment_Tree {\nprivate:\nint ls[si &lt;&lt; 2], rs[si &lt;&lt; 2], val[si &lt;&lt; 2];\nint node() { cot++, ls[cot] = rs[cot] = val[cot] = 0; return cot; }\nvoid pushup(int p) { val[p] = val[ls[p]] + val[rs[p]]; }\npublic:\nint rt, cot;\nvoid modify(int &amp;p, int l, int r, int x, int v) {\nif(!p) p = node();\nif(l == r) return val[p] += v, void();\nint mid = (l + r) &gt;&gt; 1;\nif(x &lt;= mid) modify(ls[p], l, mid, x, v);\nelse modify(rs[p], mid + 1, r, x, v);\npushup(p);\n}\nint query(int p, int l, int r, int ql, int qr) {\nif(!p) return 0;\nif(ql &lt;= l &amp;&amp; r &lt;= qr) return val[p];\nint mid = (l + r) &gt;&gt; 1, ret = 0;\nif(ql &lt;= mid) ret += query(ls[p], l, mid, ql, qr);\nif(qr &gt; mid) ret += query(rs[p], mid + 1, r, ql, qr);\nreturn ret;\n}\n} tr;\n\nint rt = 0, maxv[si], sum;\nint siz[si], dis[si], d[si], cnt = 0;\nbool vis[si];\nstd::queue&lt;int&gt; rec;\nvoid calcsiz(int u, int fa) {\nsiz[u] = 1, maxv[u] = 0;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa || vis[v]) continue;\ncalcsiz(v, u), maxv[u] = max(maxv[u], siz[v]), siz[u] += siz[v];\n}\nmaxv[u] = max(maxv[u], sum - siz[u]);\nif(maxv[rt] &gt; maxv[u]) rt = u;\n}\nvoid calcdis(int u, int fa) {\nd[++cnt] = dis[u];\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v= e[i].ver, w = e[i].w;\nif(v == fa || vis[v]) continue;\ndis[v] = dis[u] + w, calcdis(v, u);\n}\n}\nint ans = 0;\nvoid dfs(int u, int fa) {\nvis[u] = true;\ntr.modify(tr.rt, 1, V, 1, 1), rec.push(1);\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver, w = e[i].w;\nif(v == fa || vis[v]) continue;\ndis[v] = w, cnt = 0, calcdis(v, u);\nfor(int j = 1; j &lt;= cnt; ++j) {\nif(m &gt;= d[j]) ans += tr.query(tr.rt, 1, V, max(0ll, 1 - d[j]) + 1, max(0ll, m - d[j]) + 1);\n// \u56e0\u4e3a w &gt;= 0 \u6240\u4ee5\u5148\u6574\u4f53\u53f3\u79fb\u4e00\u4e0b\u3002\n}\nfor(int j = 1; j &lt;= cnt; ++j) {\ntr.modify(tr.rt, 1, V, d[j] + 1, 1), rec.push(d[j] + 1);\n}\n}\nwhile(!rec.empty()) tr.modify(tr.rt, 1, V, rec.front(), -1), rec.pop();\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa || vis[v]) continue;\nrt = 0, sum = siz[v], maxv[rt] = inf;\ncalcsiz(v, u), calcsiz(rt, -1);\ndfs(rt, u);\n}\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ntr.cot = tr.rt = 0;\nmemset(head, -1, sizeof head);\n\ncin &gt;&gt; n, V = (int)2e7;\nfor(int i = 1; i &lt; n; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nadd(u, v, w), add(v, u, w);\n}\ncin &gt;&gt; m;\nrt = 0, sum = n, maxv[rt] = inf;\ncalcsiz(1, -1), calcsiz(rt, -1), dfs(rt, -1);\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/graph/tree-divide/#xx-open-cup-gp-of-korea-k-wind-of-change", "title": "XX Open cup GP of Korea, K. Wind of Change", "text": "<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u70b9\uff0c\u4e24\u68f5\u5e26\u6743\u6811 \\(T1, T2\\)\u3002</p> <p>\u5b9a\u4e49 \\(dist(T, i, j)\\) \u8868\u793a \\(T\\) \u4e0a\u7684 \\(i, j\\) \u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</p> <p>\u4f60\u9700\u8981\u5bf9\u6bcf\u4e2a \\(i\\)\uff0c\u6c42\u51fa \\(\\min\\limits_{j \\not= i} \\{dist(T1, i, j) + dist(T2, i, j)\\}\\)\u3002</p> <p>\\(1 \\le n \\le 2.5 \\times 10^5, 1 \\le w_i \\le 10^9\\)\u3002</p> <p>\u4e00\u4e2a\u6bd4\u8f83\u5957\u8def\u7684\u60f3\u6cd5\u662f\uff0c\u6211\u4eec\u5c1d\u8bd5\u5206\u5f00\u5904\u7406\u4e24\u4e2a dist\uff0c\u6216\u8005\u628a\u67d0\u4e2a dist \u5c1d\u8bd5\u5408\u5e76\u5230\u53e6\u4e00\u4e2a dist \u91cc\u9762\u3002</p> <p>\u56e0\u4e3a \\(i, j\\) \u5728\u4e24\u68f5\u6811\u4e0a\u662f\u5bf9\u5e94\u7684\uff0c\u52a0\u4e0a \\(\\min\\) \u672c\u8eab\u6ca1\u6709\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u5206\u5f00\u5904\u7406\u5e76\u5408\u5e76\u7684\u65b9\u6cd5\u662f\u4e0d\u53ef\u884c\u7684\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u8003\u8651\u628a\u4e00\u4e2a dist \u5408\u5e76\u5230\u53e6\u4e00\u4e2a dist \u91cc\u9762\u5904\u7406\u3002</p> <p>\u7136\u540e\uff0c\u8fd9\u79cd\u6811\u4e0a\u8def\u5f84\u95ee\u9898\uff0c\u4f60\u4e5f\u53ea\u80fd\u62ff\u6811\u5206\u6cbb\u6765\u7ef4\u62a4\u4e86\uff0c\u6ca1\u5176\u4ed6\u7684\u529e\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u5bf9 \\(T1\\) \u70b9\u5206\u3002</p> <p>\u8bbe\u5f53\u524d\u91cd\u5fc3\u4e3a \\(g\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5904\u7406\u7684\u95ee\u9898\u5c31\u662f \\(g\\) \u7684\u5b50\u6811\u5f53\u4e2d\u7684\u5b50\u95ee\u9898\u4e86\u3002</p> <p>\u73b0\u5728\u8981\u505a\u7684\uff0c\u76f8\u5f53\u4e8e\u662f\u628a \\(dist(T1, i, j)\\) \u62c6\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u90e8\u5206\u662f \\(i \\to g\\)\uff0c\u4e00\u4e2a\u90e8\u5206\u662f \\(j \\to g\\)\u3002</p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a \\(dist(T1, i, j)\\) \u62c6\u5f00\uff0c\u5206\u522b\u6302\u8f7d\u5230 \\(T2\\) \u5bf9\u5e94\u7684 \\(i, j\\) \u4e24\u4e2a\u8282\u70b9\u4e0a\u4e86\u3002</p> <p>\u7136\u540e\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u7ed9\u5b9a \\(T2\\) \u4e0a\u7684\u4e00\u4e2a\u70b9\u96c6 \\(S(g)\\)\uff0c\u6c42\u8fd9\u4e2a\u70b9\u96c6\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u5230\u70b9\u96c6\u4e2d\u53e6\u5916\u7684\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\u3002</p> <p>\u8fd9\u90e8\u5206\u53ef\u4ee5\u4ee5 \\(S(g)\\) \u4e3a\u5173\u952e\u70b9\u96c6\u62d6\u51fa\u6765\u5efa\u865a\u6811\uff0c\u7136\u540e\u8dd1\u4e00\u4e2a\u6362\u6839 dp\u3002</p> <p>\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u679c\u5efa\u51fa\u6765\u7684\u865a\u6811\u4e0a\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u5728 \\(T1\\) \u4e0a\u5e76\u4e0d\u5728 \\(g\\) \u7684\u5b50\u6811\u5f53\u4e2d\uff0c\u5b83\u7684\u6743\u503c\u5e94\u8be5\u662f\u591a\u5c11\uff1f</p> <p>\u8fd9\u4e2a\u4e5f\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u8fd9\u6837\uff0c\u5b83\u5c31\u4e0d\u662f \\(i, j\\) \u5728 \\(T1\\) \u4e0a\u7684 LCA\uff0c\u76f8\u5f53\u4e8e\uff0c\u6700\u6781\u7aef\u7684\u60c5\u51b5\uff0c\\(i, j\\) \u8d70\u5230 \\(g\\) \u4e4b\u540e\u8fd8\u8981\u518d\u5404\u8d70\u4e00\u6bb5\uff0c\u8fd9\u6837\u663e\u7136\u4e0d\u4f18\u79c0\uff0c\u6240\u4ee5\u6743\u503c\u8bbe\u7f6e\u6210 \\(+\\infty\\) \u5c31\u597d\u4e86\u3002</p> <p>\u505a\u6cd5\u53d7\u4e86 jiangly \u548c Yunqian \u7684\u6307\u70b9\uff0c\u5728\u8fd9\u91cc\u611f\u8c22\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2.5e5 + 10;\nconst int inf = 0x3f3f3f3f;\nconst i64 infll = 0x3f3f3f3f3f3f3f3fll;\n\nint n;\ni64 Ans[si];\n\nnamespace TreeII {\nstd::vector&lt;int&gt; ev[si];\nstd::vector&lt;std::pair&lt;int, int&gt; &gt; ew[si];\ni64 dep[si], val[si], dp[si][2];\nint pa[si], top[si], siz[si], dfn[si], tim = 0;\nvoid dfs1(int u) {\nif(~pa[u])\nfor(auto it = ew[u].begin(); ; ++it)\nif(it -&gt; first == pa[u]) { ew[u].erase(it); break; }\nsiz[u] = 1;\nfor(auto &amp;tmp : ew[u]) {\nauto [v, w] = tmp;\npa[v] = u, dep[v] = dep[u] + w;\ndfs1(v), siz[u] += siz[v];\nif(siz[v] &gt; siz[ew[u][0].first]) swap(ew[u][0], tmp);\n}\n}\nvoid dfs2(int u) {\ndfn[u] = tim++;\nfor(auto tmp : ew[u]) {\nauto [v, w] = tmp;\nif(tmp == ew[u][0]) top[v] = top[u];\nelse top[v] = v;\ndfs2(v);\n}\n}\nint lca(int u, int v) {\nwhile(top[u] != top[v]) {\nif(dep[top[u]] &lt; dep[top[v]])\nswap(u, v);\nu = pa[top[u]];\n}\nif(dep[u] &gt; dep[v]) swap(u, v);\nreturn u;\n}\nvoid dfs3(int u) {\ndp[u][0] = dp[u][1] = infll;\nfor(auto v : ev[u]) {\ndfs3(v);\ni64 x = min(val[v], dp[v][0]) + dep[v] - dep[u];\nif(x &lt; dp[u][0]) swap(x, dp[u][0]);\ndp[u][1] = min(dp[u][1], x);\n}\n}\nvoid dfs4(int u) {\nAns[u] = min(Ans[u], val[u] + dp[u][0]);\nfor(auto v : ev[u]) {\ni64 x = val[u];\nif(dp[u][0] == min(val[v], dp[v][0]) + dep[v] - dep[u])\nx = min(x, dp[u][1]);\nelse x = min(x, dp[u][0]);\nx += dep[v] - dep[u];\nif(x &lt; dp[v][0]) swap(x, dp[v][0]);\ndp[v][1] = min(dp[v][1], x), dfs4(v);\n}\nev[u].clear(), val[u] = infll;\n}\nbool cmp(int x, int y) { return dfn[x] &lt; dfn[y]; } void build(int m, int node[], i64 dis[]) {\nfor(int i = 0; i &lt; m; ++i)\nval[node[i]] = dis[i];\nstd::vector&lt;int&gt; st{0};\nst.reserve(m);\nsort(node, node + m, cmp);\nfor(int i = 0; i &lt; m; ++i) {\nint u = node[i];\nif(u == st.back()) continue;\nint Lca = lca(u, st.back());\nwhile(st.size() &gt;= 2 &amp;&amp; dep[Lca] &lt;= dep[st[(int)st.size() - 2]]) {\nint v = st.back();\nst.pop_back(), ev[st.back()].emplace_back(v);\n}\nif(Lca != st.back()) ev[Lca].emplace_back(st.back()), st.back() = Lca;\nst.emplace_back(u);\n}\nwhile((int)st.size() &gt;= 2) {\nint v = st.back();\nst.pop_back(), ev[st.back()].emplace_back(v);\n}\ndfs3(0), dfs4(0);\n}\nvoid init() {\npa[0] = -1, dfs1(0), top[0] = 0, dfs2(0);\nfor(int i = 0; i &lt; n; ++i) val[i] = infll;\n}\n}\nnamespace TreeI {\ni64 dis[si];\nbool vis[si];\nint siz[si], node[si], nw;\nstd::vector&lt;std::pair&lt;int, int&gt; &gt; e[si];\nvoid dfs1(int u, int fa) {\nsiz[u] = 1;\nfor(auto [v, w] : e[u]) {\nif(v == fa || vis[v]) continue;\ndfs1(v, u), siz[u] += siz[v];\n}\n}\nint find(int u, int fa, int s) {\nfor(auto [v, w] : e[u])\nif(v != fa &amp;&amp; !vis[v] &amp;&amp; 2 * siz[v] &gt;= s)\nreturn find(v, u, s);\nreturn u;\n}\nvoid dfs2(int u, int fa, int64_t d) {\nnode[nw] = u, dis[nw++] = d;\nfor(auto [v, w] : e[u])\nif(v != fa &amp;&amp; !vis[v]) dfs2(v, u, d + w);\n}\nvoid solve(int p) {\ndfs1(p, -1), p = find(p, -1, siz[p]);\nnw = 0, dfs2(p, -1, 0), TreeII::build(nw, node, dis), vis[p] = true;\nfor(auto [v, w] : e[p]) if(!vis[v]) solve(v);\n}\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt; n; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nTreeI::e[u - 1].emplace_back(v - 1, w);\nTreeI::e[v - 1].emplace_back(u - 1, w);\n}\nfor(int i = 1; i &lt; n; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nTreeII::ew[u - 1].emplace_back(v - 1, w);\nTreeII::ew[v - 1].emplace_back(u - 1, w);\n}\nTreeII::init();\nfor(int i = 0; i &lt; n; ++i) Ans[i] = infll;\nTreeI::solve(0);\nfor(int i = 0; i &lt; n; ++i)\ncout &lt;&lt; Ans[i] &lt;&lt; endl;\n\n\nreturn 0;\n}\n</code></pre> <p>\u8fd9\u4e2a\u95ee\u9898\u542f\u53d1\u6211\u4eec\uff0c\u70b9\u5206\u6cbb\u4e0d\u4ec5\u53ef\u4ee5\u76f4\u63a5\u5bf9\u8def\u5f84\u4fe1\u606f\u8fdb\u884c\u7edf\u8ba1\uff0c\u5b83\u8fd8\u53ef\u4ee5\u8d77\u5230\u62c6\u5206\u7684\u4f5c\u7528\uff0c\u964d\u4f4e\u7b54\u6848\u7684\u4fe1\u606f\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\u3002</p>"}, {"location": "algor/graph/tree-divide/#luogu5351-ruri-loves-maschera", "title": "Luogu5351 Ruri Loves Maschera", "text": "<p>\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u5b9a\u4e49 \\(val(\\delta(u, v))\\) \u8868\u793a \\(\\delta(u, v)\\) \u4e0a\u7684 \\(\\max\\{w_i\\}\\)\u3002</p> <p>\u4f60\u9700\u8981\u5bf9\u4e8e \\(\\forall (u, v), len(\\delta(u, v)) \\in [L, R]\\)\uff0c\u6c42 \\(\\sum val(\\delta(u, v))\\)\uff0c\\(len\\) \u662f\u8def\u5f84\u4e0a\u7684\u8fb9\u6570\u3002</p> <p>\\(1\\le L \\le R &lt; n \\le 10^5, 1\\le w_i \\le 10^5\\)\u3002</p> <p>\u672c\u9898\u94a6\u5b9a\uff0c\\(\\delta(u, v) \\not= \\delta(v, u)\\)\u3002</p> <p>\u53ef\u4ee5\u5f88\u5feb\u901f\u7684\u60f3\u5230\u70b9\u5206\u6cbb\u5904\u7406\u8fd9\u4e2a\u8def\u5f84\u3002</p> <p>\u6211\u4eec\u628a \\(T\\) \u70b9\u5206\uff0c\u7136\u540e \\(val\\) \u5c31\u8f6c\u5316\u4e3a\u4e86 \\(u \\to g\\) \u548c \\(v \\to g\\) \u4e24\u90e8\u5206\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u8bb0 \\(mx(u)\\) \u8868\u793a \\(\\delta(u, g)\\) \u4e0a\u7684 \\(\\max\\{w_i\\}\\)\u3002</p> <p>\u90a3\u4e48\u4e00\u6761\u8def\u5f84 \\(\\delta(u, v)\\) \u7684\u8d21\u732e\u5c31\u662f \\(\\max(mx(u), mx(v))\\)\u3002</p> <p>\u7136\u540e\u8def\u5f84\u6709\u5e8f\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u5f88\u5957\u8def\u7684\u8f6c\u5316\u4e00\u4e0b\uff0c\u6211\u4eec\u628a\u8d21\u732e\u4e22\u5230\u5927\u7684\u90a3\u4e00\u8fb9\u7b97\uff0c\u6700\u540e\u7b54\u6848\u7ffb\u4e2a\u500d\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u5047\u8bbe\u505a\u8d21\u732e\u7684\u662f \\(mx(u)\\)\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\u5b83\u7684\u8d21\u732e\u662f \\(2\\times mx(u) \\times cnt\\)\uff0c\u5176\u4e2d \\(cnt\\) \u662f\u6ee1\u8db3 \\(mx(v) \\le mx(u), len(\\delta(u, v)) \\in [L, R]\\) \u7684 \\(v\\) \u7684\u6570\u91cf\uff0c\u4e14 \\(u, v\\) \u4e0d\u5728 \\(g\\) \u7684\u540c\u4e00\u4e2a\u5b50\u6811\u5f53\u4e2d\uff0c\u540e\u9762\u8fd9\u53e5\u662f\u70b9\u5206\u7684\u9650\u5236\uff0c\u4e0d\u52a0\u8981\u7b97\u91cd\u3002</p> <p>\u6211\u4eec\u5148\u4e0d\u7ba1 \\([L, R]\\) \u7684\u9650\u5236\uff0c\u8003\u8651\u66f4\u7b80\u5355\u7684\u60c5\u51b5\u3002</p> <p>\u90a3\u4e48\u6b64\u65f6\u5c31\u662f\uff0c\u5bf9 \\(u\\) \u8981\u7b97\u4e0d\u540c\u5b50\u6811\u7684 \\(v\\)\uff0c\u8fd9\u4e2a\u662f\u4e00\u7ef4\u6570\u70b9\uff0c\u679a\u4e3e\u4e00\u4e0b\u662f\u5f88\u597d\u505a\u7684\u3002</p> <p>\u7136\u540e\u8003\u8651\u52a0\u4e0a\u53e6\u4e00\u4e2a\u6761\u4ef6\uff0c\u8fd9\u4e2a\u533a\u95f4\u672c\u8d28\u5c31\u662f\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u6570\u70b9\u3002</p> <p>\u5b9a\u4e49 \\(dis(u)\\) \u8868\u793a\uff0c\\(u\\) \u5230 \\(g\\) \u7684\u8def\u5f84\u6761\u6570</p> <p>\u6211\u4eec\u53ef\u4ee5\u5bf9 \\(mx\\) \u6392\u5e8f\uff0c\u8981\u6c42\u7684\u5c31\u662f\u6ee1\u8db3 \\(L - dis(u) \\le dis(v) \\le R - dis(u)\\) \u7684 \\(v\\)\u3002</p> <p>\u4e8e\u662f\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b \\(dis\\) \u5373\u53ef\u3002</p> <p>\u4f46\u662f\u6ce8\u610f\u5230\u8fd9\u6837\u590d\u6742\u5ea6\u662f \\(O(n^2\\log n)\\) \u7684\uff0c\u56e0\u4e3a\u8003\u8651\u6bcf\u4e2a\u5b50\u6811\u7684\u65f6\u5019\u6211\u4eec\u90fd\u8981\u91cd\u65b0\u6392\u5e8f\u4e00\u6b21\uff0c\u4e0d\u7136\u4f60\u4f1a\u8003\u8651\u5230\u81ea\u5df1\u5b50\u6811\u7684\u90e8\u5206\uff0c\u4f1a\u7b97\u9519\u3002</p> <p>\u8fd9\u5f88\u4e0d\u597d\u7ef4\u62a4\uff0c\u6216\u8005\u8bf4\uff0c\u4e8c\u7ef4\u6570\u70b9\u672c\u8eab\u662f\u9759\u6001\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u56e0\u4e3a\u8981\u5206\u522b\u8003\u8651\u5b50\u6811\uff0c\u6240\u4ee5\u672c\u8d28\u4e0a\u662f\u4e2a\u52a8\u6001\u95ee\u9898\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u8d21\u732e\u662f\u5177\u6709\u53ef\u51cf\u6027\u7684\uff08\u56e0\u4e3a\u8d21\u732e\u662f\uff0c\u6570\u91cf\u4e58\u4e0a\u6743\u503c\u7684\u5f62\u5f0f\uff0c\u4e58\u6cd5\u6709\u5206\u914d\u5f8b\u7684\u561b\uff09\uff0c\u6240\u4ee5\u4e00\u4e2a\u5957\u8def\u7684\u60f3\u6cd5\u662f\uff0c\u7b97\u4e00\u4e0b \\(g\\) \u6574\u4f53\u7684\u8d21\u732e\uff0c\u5206\u522b\u51cf\u53bb\u5b50\u6811\u7684\u8d21\u732e\u5373\u53ef.</p> <p>\u7136\u540e\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u70b9\uff0c\u7b97\u5b50\u6811\u7684\u65f6\u5019\u4e0d\u8981\u5fd8\u8bb0\uff0c\\(dis\\) \u662f\u5230 \\(g\\) \u7684\u8ddd\u79bb\uff0c\u4e0d\u662f\u5230\u9009\u5b9a\u5b50\u6811\u6811\u6839\u7684\u8ddd\u79bb\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long \n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, L, R;\nint tot = 0, head[si];\nstruct Edge { int ver, Next, w; } e[si &lt;&lt; 1];\ninline void add(int u, int v, int w) { e[tot] = (Edge){v, head[u], w}, head[u] = tot++; }\n\nclass Fenwick {\nprivate:\nint t[si * 2], V;\nint lowbit(int x) { return x &amp; -x; }\npublic:\nvoid init(int x) { for(int i = 0; i &lt;= x; ++i) t[i] = 0; V = x; }\nvoid add(int x, int v) { while(x &lt;= V) t[x] += v, x += lowbit(x); }\nvoid sub(int x, int v) { while(x &lt;= V) t[x] -= v, x += lowbit(x); } int que(int x) { int ret = 0; while(x &gt; 0) ret += t[x], x -= lowbit(x); return ret; }\n} tr;\n\nbool vis[si];\nint sum, rt, siz[si], maxv[si];\nvoid calcsiz(int u, int fa) {\nsiz[u] = 1, maxv[u] = 0;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa || vis[v]) continue;\ncalcsiz(v, u), siz[u] += siz[v];\nmaxv[u] = max(maxv[u], siz[v]);\n}\nmaxv[u] = max(maxv[u], sum - siz[u]);\nif(maxv[u] &lt; maxv[rt]) rt = u;\n}\nstruct Node {\nint val, dep;\nbool operator &lt; (const Node &amp;rhs) const {\nreturn val &lt; rhs.val;\n}\n} q[si];\nint cnt;\nvoid calcpath(int u, int fa, int dep, int value) {\nq[++cnt] = (Node){value, dep};\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver, w = e[i].w;\nif(v == fa || vis[v]) continue;\ncalcpath(v, u, dep + 1, max(value, w));\n}\n} // do not change the original infomation if copies can works, or you have to know what you are doing!\nint solve(int u, int fa, int edge) {\nint ret = 0;\ncnt = 0;\nif(edge == 0) calcpath(u, fa, 0, edge);\nelse calcpath(u, fa, 1, edge); // notice here!!\nsort(q + 1, q + 1 + cnt);\nfor(int i = 1; i &lt;= cnt; ++i) {\nauto [val, dep] = q[i];\nret += val * (tr.que(R - dep + 1) - tr.que(L - dep));    tr.add(dep + 1, 1);\n}\nfor(int i = 1; i &lt;= cnt; ++i) tr.sub(q[i].dep + 1, 1);\nreturn ret;\n}\nint ans = 0;\nvoid dfs(int u, int fa) {\nvis[u] = true;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver, w = e[i].w;\nif(v == fa || vis[v]) continue;\nans -= solve(v, u, w);\n}\nans += solve(u, fa, 0);\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa || vis[v]) continue;\nrt = 0, maxv[rt] = inf, sum = siz[v];\ncalcsiz(v, u), calcsiz(rt, 0), dfs(rt, u);\n}\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head);\n\ncin &gt;&gt; n &gt;&gt; L &gt;&gt; R, tr.init(n + 10);\nfor(int i = 1; i &lt; n; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nadd(u, v, w), add(v, u, w);\n}\nrt = 0, maxv[rt] = inf, sum = n;\ncalcsiz(1, 0), calcsiz(rt, 0), dfs(rt, 0);\n\ncout &lt;&lt; ans * 2 &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u672c\u9898\u63d0\u4f9b\u4e86\u4e00\u79cd\uff0c\u5f53\u8d21\u732e\u8981\u533a\u5206\u5b50\u6811\u8ba1\u7b97\u65f6\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8003\u8651\u51cf\u53bb\u91cd\u590d\u8d21\u732e\uff0c\u8fd9\u79cd\u5e38\u89c1\u4e8e\u4e00\u7c7b\u7b97\u8d21\u732e\u7684\u95ee\u9898\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u5728\u4e0b\u9762\u7684\u66b4\u529b\u5199\u6302\u90a3\u9898\u4f1a\u63d0\u5230\uff0c\u662f\u5bf9\u5b50\u6811\u201c\u67d3\u8272\u201d\uff0c\u5f53\u7136\u8fd9\u79cd\u5e38\u89c1\u4e8e dp\u3002</p>"}, {"location": "algor/graph/tree-divide/#luogu2305-noi2014", "title": "Luogu2305 [NOI2014]\u8d2d\u7968", "text": "<p>\u7ed9\u4f60\u4e00\u9897\u4ee5 \\(1\\) \u4e3a\u6839\u7684\u6709\u6839\u6811\u3002</p> <p>\u73b0\u5728\u4f60\u8981\u4ece\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u5411\u4e0a\u8d70\uff0c\u8d70\u5230 \\(1\\)\u3002</p> <p>\u8282\u70b9\u6709\u4e00\u4e9b\u5c5e\u6027\uff1a\\((p_u, q_u, lim_u)\\)\uff0c\u8868\u793a\uff0c\\(u\\) \u6bcf\u6b21\u53ea\u80fd\u5411\u4e0a\u8d70\u5230\uff0c\u8ddd\u79bb \\(d\\) \u4e0d\u8d85\u8fc7 \\(lim_u\\) \u7684\u8282\u70b9 \\(v\\)\u3002</p> <p>\u5e76\u4e14\u8fd9\u4e00\u6b21\u79fb\u52a8\u7684\u82b1\u8d39\u662f \\(d\\times p_u + q_u\\)\uff0c\u4f60\u9700\u8981\u5bf9\u6240\u6709\u8282\u70b9\u6c42\u51fa\u79fb\u52a8\u5230 \\(1\\) \u7684\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\\(1\\le n \\le 2\\times 10^5, p_u \\in [0, 10^6], q_u \\in [0, 10^{12}], lim_u \\in (0, 10^{12}]\\)\u3002</p> <p>\u66b4\u529b\u7684 \\(dp\\) \u662f\u5f88\u597d\u8bbe\u8ba1\u7684\uff1a</p> <p>\u8bbe \\(dp(u)\\) \u8868\u793a\u4ece \\(u \\to 1\\) \u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5219\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <p>\\(dp(u) = \\min\\limits_{v \\in anc(u), dep(u) - dep(v) \\le lim(u)}\\{dp(v) + (dep(u) - dep(v)) \\times p(u) + q(u)\\}\\)</p> <p>\u5176\u4e2d \\(anc(u)\\) \u8868\u793a \\(u\\) \u7684\u7956\u5148\u96c6\u5408\uff0c\\(dep(u)\\) \u662f \\(u\\) \u7684\u5e26\u6743\u6df1\u5ea6\u3002</p> <p>\u663e\u7136\u53ef\u4ee5\u60f3\u5230\u659c\u7387\u4f18\u5316\u6216\u8005\u674e\u8d85\u6811\u7684\u505a\u6cd5\uff0c\u5728\u8fd9\u91cc\u53ea\u63d0\u659c\u7387\u4f18\u5316\u505a\u6cd5\uff08\u56e0\u4e3a\u7528\u5f97\u5230\u6811\u5206\u6cbb\uff09</p> <p>\u5957\u7528\u659c\u7387\u4f18\u5316\u7684\u529e\u6cd5\uff0c\u6211\u4eec\u62c6\u5f00\u4e00\u4e0b\uff1a</p> <p>\\(dp(u) - dep(u)\\times p(u) - q(u) = dp(v) - dep(v)\\times p(u)\\)</p> <p>\u53ef\u4ee5\u53d1\u73b0 \\(y = dp(v), x = dep(v), k = -p(u)\\)\uff0c\u6b64\u65f6\u56e0\u4e3a\u53d6 \\(\\min\\) \u6240\u4ee5\u8981\u7ef4\u62a4\u4e00\u4e2a\u4e0b\u51f8\u5305\uff08\u867d\u7136\u8fd9\u4e2a\u753b\u51fa\u6765\u548c\u659c\u7387\u4f18\u5316\u535a\u5ba2\u91cc\u7684\u4e0d\u592a\u4e00\u6837\uff0c\u4f46\u56e0\u4e3a\u659c\u7387\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u753b\u51fa\u6765\u8fd8\u662f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u5f62\u5f0f\uff0c\u4e8c\u5206\u53ef\u4ee5\u76f4\u63a5\u540c\u7406\uff09\u3002</p> <p>\u7136\u540e\u6ce8\u610f\u5230\uff0c\\(k\\) \u662f\u4e0d\u5355\u8c03\u7684\uff0c\u9700\u8981\u4e8c\u5206\uff0c\\(x\\) \u5173\u4e8e \\(v\\) \u4e0d\u4e00\u5b9a\u5355\u589e\uff0c\u54ea\u6015\u628a \\(v\\) \u66ff\u6362\u6210 \\(dfn(v)\\) \u4e5f\u4e0d\u662f\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u652f\u6301\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\uff0c\u5220\u9664\u51b3\u7b56\u3002</p> <p>\u8f6c\u79fb\u65b9\u7a0b\u91cc\u8fd8\u6709\u4e00\u4e2a \\(lim\\) \u7684\u9650\u5236\uff0c\u8fd9\u4e2a\u4e5f\u8981\u6c42\u5728\u4efb\u610f\u4f4d\u7f6e\u5220\u9664\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5e94\u5f53\u4f7f\u7528 CDQ \u5206\u6cbb\u6765\u652f\u6301\u4ee5\u4e0a\u64cd\u4f5c\u3002</p> <p>\u4f46\u662f\u95ee\u9898\u5728\u4e8e\uff0c\u6211\u4eec\u73b0\u5728\u662f\u5728\u6811\u4e0a\uff0c\u4e0d\u662f\u5728\u5e8f\u5217\u4e0a\uff0c\u76f8\u5f53\u4e8e\u662f\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 \\(u\\)\uff0c\u90fd\u8981\u5bf9 \\(anc(u)\\) \u4f7f\u7528 CDQ \u7ef4\u62a4\u4e00\u6b21\u51f8\u5305\uff0c\u8fd9\u5341\u5206\u6d6a\u8d39\u3002</p> <p>\u56e0\u4e3a\u672c\u8d28\u4e0a\uff0cCDQ \u7684\u8fc7\u7a0b\u662f\u9759\u6001\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u201c\u52a0\u5165\u201d\u5b50\u6811\uff0c\u8fd9\u90e8\u5206\u662f\u52a8\u6001\u7684\u3002</p> <p>\u539f\u7406\u7c7b\u4f3c\u4e0a\u4e00\u9898\uff0c\u6211\u4eec\u9700\u8981\u60f3\u529e\u6cd5\u6765\u505a\u4e00\u4e9b\u8f6c\u5316\u6216\u8005\u4f18\u5316\u3002</p> <p>\u6240\u4ee5\u6709\u4ec0\u4e48\u529e\u6cd5\u4e0d\u7528\u652f\u6301\u64a4\u9500\u548c\u52a0\u5165\u7684\u674e\u8d85\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u8fc7\u7a0b\u5462\uff1f</p> <p>\u5f53\u7136\u6709\uff01\u6211\u4f1a\u6811\u4e0a CDQ \u5206\u6cbb\uff01</p> <p>\u6b63\u5e38\u7684 CDQ \u5206\u6cbb\u7684\u601d\u60f3\u5176\u5b9e\u662f\uff0c\u901a\u8fc7\u5206\u6cbb\u6765\u6279\u91cf\u5904\u7406\u4e00\u7cfb\u5217\u51b3\u7b56\uff0c\u800c\u4e0d\u662f\u5904\u7406\u4e00\u7cfb\u5217\u72b6\u6001\u6765\u8fbe\u5230\u4f18\u5316\u7684\u76ee\u7684\u3002</p> <p>\u5bf9\u4e8e\u51b3\u7b56\u4e0b\u6807\u8303\u56f4\u7684\u9650\u5236\u662f\u901a\u8fc7\u5206\u6cbb\u5904\u7406\u6389\u7684\uff0c\u7136\u540e\u51b3\u7b56\u70b9\u4e0d\u5355\u8c03\u5219\u662f\u5229\u7528\uff0c\u5bf9\u524d\u4e00\u6bb5\u8ba1\u7b97\u597d\u7684\u51b3\u7b56\u6392\u5e8f\u6765\u5904\u7406\u7684\uff0c\u659c\u7387\u4e0d\u5355\u8c03\u5219\u53ef\u4ee5\u4e8c\u5206\u3002</p> <p>\u6211\u4eec\u73b0\u5728\u7684\u95ee\u9898\u5c31\u5728\u4e8e\u600e\u4e48\u5206\u6cbb\uff0c\u600e\u4e48\u786e\u5b9a\u6279\u91cf\u5904\u7406\u54ea\u4e9b\u51b3\u7b56\uff0c\u8981\u5bf9\u4ec0\u4e48\u6392\u5e8f\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4\u6b63\u5e38\u7684 CDQ\uff0c\u73b0\u5728\u5148\u8003\u8651\u600e\u4e48\u5904\u7406\u201c\u8ddd\u79bb\u9650\u5236\u201d\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u6210\u662f\u51b3\u7b56\u4e0b\u6807\u7684\u9650\u5236\u3002</p> <p>\u8fd9\u90e8\u5206\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u53eb\u201c\u6709\u6839\u6811\u70b9\u5206\u6cbb\u201d\u7684\u505a\u6cd5\u6765\u5904\u7406\u3002</p> <p>\u4e0e\u6b63\u5e38\u7684\u70b9\u5206\u6cbb\u4e0d\u540c\uff0c\u6709\u6839\u6811\u70b9\u5206\u6cbb\u7684\u8def\u5f84\u4e0d\u518d\u662f\u4e24\u5934\u201c\u6302\u5728\u201d\u91cd\u5fc3\u4e0a\u4e86\uff0c\u800c\u662f\u6709\u4e00\u6761\u5ef6\u4f38\u51fa\u53bb\uff0c\u5411\u8054\u901a\u5757\u7684\u6811\u6839\u65b9\u5411\u5ef6\u4f38\u3002</p> <p>\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u662f\uff0c\u672c\u9898\u7684\u51b3\u7b56\u4e2d\u6709 \\(anc(u)\\) \u7684\u9650\u5236\uff0c\u6240\u4ee5\uff0c\u6811\u6839\u65b9\u5411\uff0c\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u51b3\u7b56\u4e5f\u662f\u6709\u5f71\u54cd\u7684\u3002</p> <p>\u6211\u4eec\u4e0d\u59a8\u628a \\(g\\) \u4e0a\u65b9\u7684\u8054\u901a\u5757\u5f53\u4f5c \u201c\u5df2\u7ecf\u8ba1\u7b97\u597d\u4e86\u201d \u7684\u90e8\u5206\uff08\u7b49\u4ef7\u4e8e \\([l, mid]\\)\uff09\uff0c\u5148\u9012\u5f52\u5206\u6cbb\u5904\u7406\uff0c\u8ba1\u7b97\u51fa\u5b83\u4eec\u201c\u6700\u7ec8\u201d \u7684 dp \u503c\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8003\u8651\u600e\u4e48\u8ba1\u7b97 \\(g\\) \u4e0b\u9762\u7684 dp \u503c\uff08\u5bf9\u5e94\u666e\u901a CDQ \u4e2d\u7684 \\([mid + 1, r]\\)\uff09\uff0c\u663e\u7136\uff0c\u4e0a\u9762\u5b50\u6811\u80fd\u5bf9\u5b83\u4eec\u9020\u6210\u8d21\u732e\u7684\uff0c\u5b9e\u8d28\u4e0a\u662f\u8fc7 \\(g\\) \u5411\u8054\u901a\u5757\u7684\u6839 \\(rt\\) \u5ef6\u4f38\u7684\u4e00\u6761\u8def\u5f84\u3002</p> <p>\u6211\u4eec\u76f8\u5f53\u4e8e\u662f\uff0c\u5206\u6cbb\u5904\u7406\uff0c\u6bcf\u6b21\u7684\u51b3\u7b56\u662f\uff0c\u8fc7 \\(g\\) \u5f80 \\(rt\\) \u65b9\u5411\u8d70\u7684\u4e00\u7cfb\u5217\u51b3\u7b56\uff08\u6240\u4ee5\u624d\u53eb\u505a\u6709\u6839\u6811\u70b9\u5206\u6cbb\uff09\u3002</p> <p>\u4e8e\u662f \\(anc(u)\\) \u7684\u9650\u5236\u5f97\u5230\u4e86\u89e3\u51b3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece \\(g\\to rt\\) \u4e0a\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\u5373\u53ef\u3002</p> <p>\u7136\u540e\u8003\u8651\u600e\u4e48\u5904\u7406\u8ddd\u79bb\u9650\u5236\uff0c\u8fd9\u90e8\u5206\u548c\u666e\u901a CDQ \u4e0d\u592a\u76f8\u540c\uff0c\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u8ddd\u79bb\u9650\u5236\u5b9e\u9645\u4e0a\u548c\u51b3\u7b56\u70b9\u4e0d\u5355\u8c03\u7684\u9650\u5236\u662f\u6346\u7ed1\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u80fd\u5411\u4e0a\u8d70\u7684\u8ddd\u79bb\u4e0d\u4e00\u6837\uff0c\u4ece\u800c\u5bfc\u81f4\u5728 \\(g \\to rt\\) \u7684\u8def\u5f84\u4e0a\u7684\u51b3\u7b56\u96c6\u5408\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u5b83\u662f\u4e0d\u5355\u8c03\u53d8\u5316\u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u5bf9\u8fd9\u4e9b\u8282\u70b9\u6309\u7167 \\(lim - dep\\) \u5347\u5e8f\u6392\u5e8f\uff0c\u8fd9\u6837\u51b3\u7b56\u96c6\u5408\u5c31\u662f\u5355\u8c03\u589e\u52a0\u7684\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u652f\u6301\u5f39\u51fa\u64cd\u4f5c\uff0c\u4e8e\u662f\u6211\u4eec\u7528\u4e00\u4e2a\u6808\u7ef4\u62a4\uff0c\u6bcf\u6b21\u4ece\u4e0b\u5f80\u4e0a\u52a0\u5165\u51b3\u7b56\uff0c\u5e76\u5728\u6808\u4e0a\u4e8c\u5206\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u672c\u9898\u4e86\u3002</p> <p>\u53ef\u4ee5\u770b\u4e00\u5f20\u56fe\u6765\u52a0\u6df1\u7406\u89e3\uff1a</p> <p></p> <p>\u5176\u4e2d\u7d2b\u8272\u8def\u5f84\u5c31\u662f\u51b3\u7b56\u96c6\u5408\u7684\u4f4d\u7f6e\uff0c\u7eff\u8272\u662f\u4f18\u5148\u5904\u7406\u7684\u90e8\u5206\uff0c\u9ec4\u8272\u662f\u540e\u5904\u7406\u7684\u90e8\u5206\u3002</p> <p>\u8fd9\u91cc\u7eff\u8272\u90e8\u5206\u5e76\u6ca1\u6709\u5305\u62ec \\(g\\)\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u66b4\u529b\u5904\u7406\u4e00\u6b21 \\(dp(g)\\)\uff0c\u56e0\u4e3a\u70b9\u5206\u4e86\u6240\u4ee5\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002</p> <p>\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u628a \\(g\\) \u6254\u5230\u7eff\u8272\u90e8\u5206\u7b97\u6389\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97\u8fd9\u53ef\u80fd\u8981\u5224\u4e00\u4e9b\u8fb9\u754c\uff0c\u6bd4\u8f83\u9ebb\u70e6\u3002</p> <p>\u672c\u9898\u7684\u5b9e\u8d28\u662f\uff0c\u901a\u8fc7\u70b9\u5206\u6cbb\uff0c\u7ed9 CDQ \u5206\u6cbb\u627e\u5230\u4e86\u4e00\u4e2a\u5206\u6cbb\u7684\u6307\u5bfc\u601d\u60f3\uff0c\u4ece\u800c\u8fbe\u5230\u6279\u91cf\u8ba1\u7b97\u51b3\u7b56\u800c\u4e0d\u662f\u72b6\u6001\u7684\u76ee\u7684\uff0c\u907f\u514d\u4e86\u52a8\u6001\u5730\u52a0\u5165\u5b50\u6811\u3002</p> <p>\u672c\u9898\u53ef\u4ee5\u770b\u4f5c\u662f Cash \u4e00\u9898\u7684\u6811\u4e0a\u6269\u5c55\u7248\u672c\u3002</p> Code <p>\u8fd9\u4efd\u4ee3\u7801\u8fd8\u4e0d\u80fd\u901a\u8fc7\u672c\u9898\uff0c\u53ea\u662f\u5927\u4f53\u601d\u8def\u662f\u6b63\u786e\u7684\u3002</p> <p>\u6211\u4e2a\u4eba\u731c\u6d4b\u53ef\u80fd\u662f\u4e8c\u5206\u7684\u8fb9\u754c\u80fd\u5426\u53d6\u5230\uff0c\u7ef4\u62a4\u7684\u7d2b\u8272\u8def\u5f84\u662f\u5426\u7ef4\u62a4\u5b8c\u4e86\uff0c\u6216\u8005\u662f\u8054\u901a\u5757\u8fb9\u754c\u7684\u4e00\u4e9b\u5904\u7406\u6302\u4e86\u3002</p> <p>\u4e5f\u6709\u53ef\u80fd\u662f\u70b9\u5206\u7684\u65f6\u5019\u91cd\u590d\u8ba1\u7b97\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u9898\u4ece 5-21 \u8c03\u5230 5-23\uff0c\u786e\u5b9e\u4e0d\u60f3\u52a8\u4e86\uff0c\u4e4b\u540e\u6709\u7f18\u518d\u8c03\u597d\u4e86\u3002</p> <p>\u8fd9\u91cc\u8fd8\u6709\u4e00\u4efd cmd \u5927\u7237\u7684\u4ee3\u7801\uff0c\u4ec5\u4f5c\u53c2\u8003\u3002</p> My CodeCmd \u5927\u7237\u7684 Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\n\nconst ldb eps = 1e-6;\nconst int si = 2e5 + 10;\nconst ldb infdb = 1e18 + 1;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, _t;\nint tot = 0, head[si];\nstruct Edge { int ver, Next, w; } e[si &lt;&lt; 1];\ninline void add(int u, int v, int w) { e[tot] = (Edge){v, head[u], w}, head[u] = tot++; }\n\nbool vis[si];\nint pa[si], s[si], p[si], q[si], lim[si];\nint dep[si], siz[si], rt = 0, sum = 0, maxv[si];\n\nvoid calcsiz(int u, int fa) {\nsiz[u] = 1, maxv[u] = 0;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa || vis[v]) continue;\ncalcsiz(v, u), siz[u] += siz[v];\nmaxv[u] = max(maxv[u], siz[v]);\n}\nmaxv[u] = max(maxv[u], sum - siz[u]);\nif(maxv[u] &lt; maxv[rt]) rt = u;\n}\nstruct Node {\nint id, val;\nbool operator &lt; (const Node &amp;rhs) const {\nreturn val &lt; rhs.val;\n}\n} t[si];\nint cnt = 0, udep;\nvoid build(int u, int fa) {\nif(lim[u] &gt;= dep[u] - udep)\nt[++cnt] = (Node){u, lim[u] - dep[u] + udep}; for(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa || vis[v]) continue;\nbuild(v, u);\n}\n}\nint Q[si], cur = 0;\nint dp[si];\nldb calc(int i, int j) { return (ldb)(dp[j] - dp[i]) / (ldb)(dep[j] - dep[i]); }\nint find(ldb slope) {\nint l = 1, r = cur;\nwhile(l &lt; r) {\nint mid = (l + r) &gt;&gt; 1;\nif(calc(Q[mid - 1], Q[mid]) &lt; slope - eps) r = mid;\nelse l = mid + 1;\n}\nreturn Q[l];\n}\nvoid solve(int u, int top) {\nint nw = pa[u], dis = s[u];\nwhile(dis &lt;= lim[u] &amp;&amp; nw != pa[top]) { // top \u4f3c\u4e4e\u4e5f\u9700\u8981\u88ab\u5305\u542b\u8fdb\u53bb\u3002\ndp[u] = min(dp[u], dp[nw] + dis * p[u] + q[u]);\ndis += s[nw], nw = pa[nw];\n}\ncnt = 0, udep = dep[u]; for(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(vis[v]) continue; // pa[u] \u5df2\u7ecf vis \u8fc7\u4e86\u3002\nbuild(v, u);\n}\nsort(t + 1, t + 1 + cnt);\nnw = u, dis = 0, cur = 0;\nfor(int i = 1; i &lt;= cnt; ++i) {\nauto [v, val] = t[i];\nwhile(dis &lt;= val &amp;&amp; nw != pa[top]) {\nwhile(cur &gt; 1 &amp;&amp; calc(Q[cur - 1], Q[cur]) &lt; calc(Q[cur - 1], nw) + eps)\n--cur;\nQ[++cur] = nw;\ndis += s[nw], nw = pa[nw];\n}\nif(cur &gt; 0) {\nint opt = find(-p[v]);\ndp[v] = min(dp[v], dep[v] * p[v] + q[v] + dp[opt] - dep[opt] * p[v]);\n}\n}\n}\nvoid dfs(int u) { // \u56e0\u4e3a vis \u7684\u7f18\u6545\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981\u5728\u70b9\u5206\u7684\u65f6\u5019\u5b58 Father \u4e86\uff0c\u9664\u975e\u7edf\u8ba1\u4fe1\u606f\u8981\u7528\nint top = u;\nwhile(!vis[top]) top = pa[top];\nvis[u] = true;\nif(!vis[pa[u]]) {\ncalcsiz(pa[u], 0);\nrt = 0, sum = siz[pa[u]], maxv[rt] = 0;\ncalcsiz(pa[u], 0), dfs(pa[u]); // \u7b97\u4e0a\u9762\u4ee5 rt \u4e3a\u6839\u7684 siz \u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\n}\nsolve(u, top);\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(vis[v]) continue;\ncalcsiz(v, 0);\nrt = 0, sum = siz[v], maxv[rt] = 0;\ncalcsiz(v, 0), dfs(v);\n}\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head);\n\ncin &gt;&gt; n &gt;&gt; _t;\npa[1] = 0, s[1] = dep[1] = 0, p[1] = q[1] = 0, lim[1] = inf;\nfor(int i = 2; i &lt;= n; ++i) {\ndp[i] = inf;\ncin &gt;&gt; pa[i] &gt;&gt; s[i];\ndep[i] = dep[pa[i]] + s[i]; cin &gt;&gt; p[i] &gt;&gt; q[i] &gt;&gt; lim[i];\nadd(i, pa[i], s[i]), add(pa[i], i, s[i]);\n}\nrt = 0, sum = n, maxv[rt] = inf;\ndp[1] = 0, vis[0] = true, calcsiz(1, 0), dfs(rt);\n\nfor(int i = 2; i &lt;= n; ++i)\ncout &lt;&lt; dp[i] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <pre><code>#include&lt;algorithm&gt;\n#include&lt;cstdio&gt;\n#include&lt;vector&gt;\n#define ll long long\n#define eps 1e-12\n#define MaxN 200500\nusing namespace std;\ninline ll read()\n{\nregister ll X=0;\nregister char ch=0;\nwhile(ch&lt;48||ch&gt;57)ch=getchar();\nwhile(ch&gt;=48&amp;&amp;ch&lt;=57)X=X*10+(ch^48),ch=getchar();\nreturn X;\n}\nbool vis[MaxN];\nvector&lt;int&gt; g[MaxN];\nint rt,sum,siz[MaxN],maxp[MaxN];\nvoid cnt(int u,int fa)\n{\nsum++;\nfor (int i=0,v;i&lt;g[u].size();i++)\nif ((v=g[u][i])!=fa&amp;&amp;!vis[v])\ncnt(v,u);\n}\nvoid getrt(int u,int fa)\n{\nsiz[u]=1;maxp[u]=0;\nfor (int i=0,v;i&lt;g[u].size();i++)\nif ((v=g[u][i])!=fa&amp;&amp;!vis[v]){\ngetrt(v,u);\nsiz[u]+=siz[v];\nmaxp[u]=max(maxp[u],siz[v]);\n}\nmaxp[u]=max(maxp[u],sum-siz[u]);\nif (maxp[rt]&gt;maxp[u])rt=u;\n}\nll dep[MaxN],pf[MaxN];\nint fa[MaxN],top;\nstruct Line\n{\nll k,b; double t;\nll get(ll x){return k*x+b;}\n}q[MaxN];\ndouble inter(const Line &amp;A,const Line &amp;B)\n{return 1.00*(B.b-A.b)/(A.k-B.k);}\nstruct Data\n{int p;long long lim;}t[MaxN];\nint tot; ll lim[MaxN],udep;\nvoid dfs(int u,int fa)\n{\nif (lim[u]+udep&gt;=dep[u])\nt[++tot]=(Data){u,lim[u]-dep[u]+udep};\nfor (int i=0,v;i&lt;g[u].size();i++)\nif ((v=g[u][i])!=fa&amp;&amp;!vis[v])\ndfs(v,u);\n}\nbool cmp(const Data &amp;A,const Data &amp;B)\n{return A.lim&lt;B.lim;}\nll p[MaxN],c[MaxN],F[MaxN];\nvoid calc(int u,int bar)\n{\ntot=0;udep=dep[u];\nfor (int i=0,v;i&lt;g[u].size();i++)\nif (!vis[v=g[u][i]])\ndfs(v,u);\nsort(t+1,t+tot+1,cmp);\n\nint tp=fa[u];long long dis=pf[u];\nwhile (dis&lt;=lim[u]&amp;&amp;tp!=bar){\nF[u]=min(F[u],F[tp]+p[u]*dis+c[u]);\ndis+=pf[tp];tp=fa[tp];\n}\ntp=u;dis=0;top=0;\nfor (int i=1;i&lt;=tot;i++){\nwhile (dis&lt;=t[i].lim&amp;&amp;tp!=bar){\nLine sav=(Line){-dep[tp],F[tp]};\nwhile(top&gt;1&amp;&amp;q[top].t&lt;eps+inter(q[top-1],sav))\ntop--;\nq[++top]=sav;\nif (top&gt;1)\nq[top].t=inter(q[top-1],q[top]);\nelse q[top].t=1e18;\ndis+=pf[tp];tp=fa[tp];\n}\nif (top){\nint v=t[i].p,l=1,r=top,mid;\nwhile(l&lt;r){\nmid=(l+r+1)&gt;&gt;1;\nif (q[mid].t+eps&gt;p[v])l=mid;\nelse r=mid-1;\n}\nF[v]=min(F[v],\nq[l].get(p[v])+c[v]+p[v]*dep[v]\n);\n}\n}\n}\nvoid solve(int u)\n{\nint bar=u;\nwhile(!vis[bar])bar=fa[bar];\nvis[u]=1;\nif (!vis[fa[u]]){\nrt=0;sum=0;cnt(fa[u],0);\ngetrt(fa[u],0);\nsolve(rt);\n}calc(u,bar);\nfor (int i=0,v;i&lt;g[u].size();i++)\nif (!vis[v=g[u][i]]){\nrt=0;sum=0;cnt(v,0);\ngetrt(v,0);\nsolve(rt);\n}\n}\nint n,_t;\nint main()\n{\nscanf(\"%d%d\",&amp;n,&amp;_t);\nfor (int i=2;i&lt;=n;i++){\nfa[i]=read();\ng[fa[i]].push_back(i);\ng[i].push_back(fa[i]);\ndep[i]=dep[fa[i]]+(pf[i]=read());\np[i]=read();c[i]=read();\nlim[i]=read();\nF[i]=1ll&lt;&lt;60;\n}\nmaxp[0]=sum=n;getrt(1,0);\nF[1]=0;vis[0]=1;solve(rt);\nfor (int i=2;i&lt;=n;i++)\nprintf(\"%lld\\n\",F[i]);\nreturn 0;\n}\n</code></pre> <p>Cmd \u5927\u7237\u7684\u5b9e\u73b0\u4e5f\u7ed9\u4e86\u6211\u4e00\u4e9b\u542f\u793a\u3002</p> <p>\u5176\u5b9e\u70b9\u5206\u6cbb\u7684\u90a3\u5c42 dfs \u5927\u90e8\u5206\u65f6\u5019\u4e0d\u9700\u8981\u8bb0\u5f55 fa\uff0c\u56e0\u4e3a vis \u672c\u8eab\u5c31\u8d77\u4e86\u5206\u5272\u8054\u901a\u5757\u7684\u4f5c\u7528\u3002</p> <p>\u7136\u540e\u6709\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684 Calcsiz \u5176\u5b9e\u53ef\u4ee5\u4e0d\u5199\uff08\uff09</p>"}, {"location": "algor/graph/tree-divide/#luogu4886", "title": "Luogu4886 \u5feb\u9012\u5458", "text": "<p>[TODO]</p>"}, {"location": "algor/graph/tree-divide/#_3", "title": "\u8fb9\u5206\u6cbb", "text": ""}, {"location": "algor/graph/tree-divide/#_4", "title": "\u6cdb\u5316", "text": "<p>[TODO]</p>"}, {"location": "algor/graph/tree-divide/#luogu4565-ctsc2018", "title": "Luogu4565 [CTSC2018]\u66b4\u529b\u5199\u6302", "text": "<p>[TODO]</p> <p>[\u672c\u9898\u5b58\u5728\u8fb9\u5206\u6811\u5408\u5e76/\u70b9\uff08\u8fb9\uff09\u5206+\u865a\u6811\u4e24\u79cd\u505a\u6cd5]</p>"}, {"location": "algor/graph/tree-divide/#luogu4220-wc2018", "title": "Luogu4220 [WC2018]\u901a\u9053", "text": "<p>[TODO]</p> <p>[\u672c\u9898\u5b58\u5728\u8fb9\u5206\u6811\u5408\u5e76/\u70b9\uff08\u8fb9\uff09\u5206+\u865a\u6811\u4e24\u79cd\u505a\u6cd5]</p>"}, {"location": "algor/graph/tree-divide/#_5", "title": "\u70b9\u5206\u6811 &amp; \u8fb9\u5206\u6811", "text": ""}, {"location": "algor/graph/tree-divide/#_6", "title": "\u6cdb\u5316", "text": "<p>[TODO]</p>"}, {"location": "algor/graph/tree-divide/#luogu4565-ctsc2018_1", "title": "Luogu4565 [CTSC2018]\u66b4\u529b\u5199\u6302", "text": "<p>[TODO]</p> <p>[\u672c\u9898\u5b58\u5728\u8fb9\u5206\u6811\u5408\u5e76/\u70b9\uff08\u8fb9\uff09\u5206+\u865a\u6811\u4e24\u79cd\u505a\u6cd5]</p>"}, {"location": "algor/graph/tree-divide/#luogu4220-wc2018_1", "title": "Luogu4220 [WC2018]\u901a\u9053", "text": "<p>[TODO]</p> <p>[\u672c\u9898\u5b58\u5728\u8fb9\u5206\u6811\u5408\u5e76/\u70b9\uff08\u8fb9\uff09\u5206+\u865a\u6811\u4e24\u79cd\u505a\u6cd5]</p>"}, {"location": "algor/graph/tree-divide/#reference", "title": "Reference", "text": "<ul> <li>\u6811\u5206\u6cbb - OI wiki</li> <li>\u6811\u5206\u6cbb\u5c0f\u8bb0 - command_block \u7684\u535a\u5ba2</li> </ul>"}, {"location": "algor/graph/virtual-tree/", "title": "\u865a\u6811", "text": ""}, {"location": "algor/graph/virtual-tree/#_1", "title": "\u6982\u8ff0", "text": "<p>\u6709\u4e00\u7c7b\u95ee\u9898\uff0c\u6bcf\u6b21\u8be2\u95ee\u4f1a\u5bf9\u6811\u4e0a\u7684\u4e00\u4e2a\u70b9\u96c6\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\u5728\u5355\u6b21\u64cd\u4f5c\u64cd\u4f5c\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u4f46\u662f\u70b9\u96c6\u5927\u5c0f\u603b\u548c\u7ea7\u522b\u4e0d\u5927\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u865a\u6811\u4f18\u5316\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u68f5\u6811 \\(T = \\{V, E\\}\\)\uff0c\u4e00\u4e2a\u70b9\u96c6 \\(S \\subset V\\)\uff0c\u70b9\u96c6 \\(S\\) \u7684\u865a\u6811\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u4e1c\u897f\uff1a</p> <p>\u5305\u542b\u4e86 \\(S\\) \u4e2d\u6240\u6709\u70b9\uff0c\u5e76\u4e14\u5305\u542b \\(S\\) \u4e2d\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u7684 LCA \u7684\u4e00\u68f5\u6811\u3002</p> <p>\u5927\u6982\u957f\u8fd9\u6837\uff1a</p> <p></p> <p>\u5176\u4e2d\u7ea2\u8272\u8282\u70b9\u4e3a \\(S\\) \u4e2d\u7684\u8282\u70b9\uff0c\u6211\u4eec\u79f0\u4e3a\u5173\u952e\u70b9\uff0c\u84dd\u8272\u8282\u70b9\u5219\u662f LCA\uff08\u865a\u6811\u4e2d\u7684\u975e\u5173\u952e\u70b9\uff09\u3002</p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u865a\u6811\u4e0d\u4f1a\u6539\u53d8\u539f\u6811\u4e0a\u7684\u7956\u5148\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b9e\u9645\u4e0a\u865a\u6811\u662f\uff0c\u5c06\u539f\u6811\u4e2d\u5bf9\u4e8e\u5f53\u524d\u8be2\u95ee\u6ca1\u6709\u7528\u7684\u4e00\u4e9b\u8282\u70b9\u7ed9\u53bb\u6389\uff0c\u5f97\u5230\u7684\u4e00\u9897\u65b0\u6811\u3002</p> <p>\u4fdd\u7559 LCA \u5c31\u662f\u56e0\u4e3a\uff0cLCA \u4e5f\u4f1a\u4fdd\u7559\u4e00\u4e9b\u539f\u95ee\u9898\u7684\u4fe1\u606f\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u628a\u865a\u6811\u770b\u4f5c\u201c\u5c06\u539f\u6811\u538b\u7f29\u4e86\u201d\uff0c\u6bd4\u5982\u6211\u4eec\u53ea\u5173\u5fc3 \\(\\delta(u,v)\\) \u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u4e0d\u5173\u5fc3\u4e0a\u9762\u7684\u8282\u70b9\u3002</p> <p>\u6211\u4eec\u5c31\u76f4\u63a5\u628a \\(\\delta(u, v)\\) \u538b\u6210\u4e00\u6761\u8fb9 \\((u \\to v)\\) \u5c31\u884c\u4e86\uff0c\uff08\u7528\u4e8e\u8282\u7701\u7a7a\u95f4\u7684\u538b\u7f29 01trie \u5c31\u7528\u4e86\u540c\u6837\u7684\u601d\u60f3\uff09\u3002</p> <p>\u7136\u540e\u53ea\u9700\u8981\u5728\u65b0\u6811\u4e0a\u5904\u7406\u95ee\u9898\u5c31\u53ef\u4ee5\u4e86\u3002</p>"}, {"location": "algor/graph/virtual-tree/#_2", "title": "\u6784\u5efa", "text": "<p>\u4e00\u79cd\u505a\u6cd5\u662f\u76f4\u63a5\u6309\u7167 dfn \u6392\u5e8f\uff0c\u7136\u540e\u76f8\u90bb\u7684\u4e24\u4e2a\u8282\u70b9\u6c42 LCA\uff0c\u53bb\u91cd\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e0d\u5982\u4f7f\u7528\u5355\u8c03\u6808\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u8bb2\u5355\u8c03\u6808\u505a\u6cd5\u3002</p> <p>\u8fd9\u4e2a\u505a\u6cd5\u7684\u601d\u60f3\u662f\uff0c\u6bcf\u6b21\u53ea\u7ef4\u62a4\u865a\u6811\u7684\u4e00\u6761\u94fe\u3002</p> <p>\u9996\u5148\u628a\u6811\u6839 (\\(1\\) \u53f7\u8282\u70b9) \u5165\u6808\uff0c\u5e76\u4e14\uff0c\u6211\u4eec\u4fdd\u8bc1\u5355\u8c03\u6808\u4ece\u9876\u5230\u5e95\uff0c\u8282\u70b9\u7684 dfn \u5355\u8c03\u9012\u51cf\u3002</p> <p>\u7136\u540e\u8003\u8651\uff0c\u5f53\u524d\u7684\u6808\u9876\u662f \\(top\\)\uff0c\u52a0\u5165\u8282\u70b9\u662f \\(nw\\)\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a</p> <ul> <li>\\(\\text{LCA}(top, nw) = top\\)\uff0c\u8bc1\u660e \\(nw\\) \u662f\u5f53\u524d\u94fe\u4e0a\u7684\u8282\u70b9\uff0c\u76f4\u63a5\u52a0\u5165\u5373\u53ef\u3002</li> <li>\u5426\u5219\uff0c\u8003\u8651\u6808\u4e2d\u6b21\u5927\u8282\u70b9 \\(stop\\) \u4e0e \\(\\text{LCA}(top, nw)\\) \u7684\u5173\u7cfb\uff0c\u663e\u7136\u6b64\u65f6\u5df2\u7ecf\u7ef4\u62a4\u5b8c\u4e86\u4e0a\u4e00\u6761\u94fe\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\uff1a<ul> <li>\u5982\u679c \\(dfn(stop) &gt; dfn(\\text{LCA}(top, nw))\\)\uff0c\u90a3\u4e48\u8bf4\u660e\uff0c\\(\\text{LCA}(top, nw)\\) \u5df2\u7ecf\u5728\u6808\u4e2d\u4e86\uff0c\u6b64\u65f6\u6211\u4eec\u4e0d\u65ad\u5f39\u6808\uff0c\u76f4\u5230 \\(top = \\text{LCA}\\)\uff0c\u5f39\u6808\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u8ba9\u88ab\u5f39\u51fa\u7684\u8282\u70b9\u548c\u5f39\u51fa\u540e\u7684\u6808\u9876\u8fde\u8fb9\uff08\u56e0\u4e3a\u5b83\u4eec\u662f\u7236\u5b50\u5173\u7cfb\uff09\u3002</li> <li>\u5426\u5219\u8bc1\u660e \\(\\text{LCA}(top, nw)\\) \u8fd8\u6ca1\u6709\u5165\u6808\uff0c\u5148\u8fde \\(top\\) \u548c \\(\\text{LCA}\\)\uff0c\u7136\u540e\u7ee7\u7eed\u5f39\u6808\uff0c\u6700\u540e\u52a0\u5165 \\(\\text{LCA}\\) \u548c \\(nw\\) \u5373\u53ef\u3002</li> </ul> </li> </ul> <p></p> Code <pre><code>int k, a[si];\nint stk[si], top = 0;\nbool cmp(int x, int y) { return dfn[x] &lt; dfn[y]; }\ninline void ADD(int u, int v, int w) { E[Tot] = (Edge){v, Head[u], w}, Head[u] = Tot++; }\ninline void Add(int u, int v) { int w = dist(u, v); ADD(u, v, w), ADD(v, u, w); }\nvoid build() {\nsort(a + 1, a + 1 + k, cmp);\nstk[top = 1] = 1, Tot = 0, Head[1] = -1; // \u8fd9\u6837\u6e05\u7a7a\u590d\u6742\u5ea6\u624d\u662f\u5bf9\u7684\u3002\nfor(int i = 1, Lca; i &lt;= k; ++i) {\nif(a[i] == 1) continue;\nLca = lca(a[i], stk[top]);\nif(Lca != stk[top]) {\nwhile(dfn[Lca] &lt; dfn[stk[top - 1]])\nAdd(stk[top - 1], stk[top]), --top;\nif(dfn[Lca] &gt; dfn[stk[top - 1]])\nHead[Lca] = -1, Add(Lca, stk[top]), stk[top] = Lca;\nelse Add(Lca, stk[top--]); // Lca = stk[top - 1].\n}\nHead[a[i]] = -1, stk[++top] = a[i];\n}\nfor(int i = 1; i &lt; top; ++i)\nAdd(stk[i], stk[i + 1]);\nreturn;\n}\n</code></pre>"}, {"location": "algor/graph/virtual-tree/#_3", "title": "\u4e60\u9898", "text": "\u300cSDOI2011\u300d\u6d88\u8017\u6218 <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5728\u4e00\u573a\u6218\u4e89\u4e2d\uff0c\u6218\u573a\u7531 \\(n\\) \u4e2a\u5c9b\u5c7f\u548c \\(n-1\\) \u4e2a\u6865\u6881\u7ec4\u6210\uff0c\u4fdd\u8bc1\u6bcf\u4e24\u4e2a\u5c9b\u5c7f\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8def\u5f84\u53ef\u8fbe\u3002\u73b0\u5728\uff0c\u6211\u519b\u5df2\u7ecf\u4fa6\u67e5\u5230\u654c\u519b\u7684\u603b\u90e8\u5728\u7f16\u53f7\u4e3a \\(1\\) \u7684\u5c9b\u5c7f\uff0c\u800c\u4e14\u4ed6\u4eec\u5df2\u7ecf\u6ca1\u6709\u8db3\u591f\u591a\u7684\u80fd\u6e90\u7ef4\u7cfb\u6218\u6597\uff0c\u6211\u519b\u80dc\u5229\u5728\u671b\u3002\u5df2\u77e5\u5728\u5176\u4ed6 \\(k\\) \u4e2a\u5c9b\u5c7f\u4e0a\u6709\u4e30\u5bcc\u80fd\u6e90\uff0c\u4e3a\u4e86\u9632\u6b62\u654c\u519b\u83b7\u53d6\u80fd\u6e90\uff0c\u6211\u519b\u7684\u4efb\u52a1\u662f\u70b8\u6bc1\u4e00\u4e9b\u6865\u6881\uff0c\u4f7f\u5f97\u654c\u519b\u4e0d\u80fd\u5230\u8fbe\u4efb\u4f55\u80fd\u6e90\u4e30\u5bcc\u7684\u5c9b\u5c7f\u3002\u7531\u4e8e\u4e0d\u540c\u6865\u6881\u7684\u6750\u8d28\u548c\u7ed3\u6784\u4e0d\u540c\uff0c\u6240\u4ee5\u70b8\u6bc1\u4e0d\u540c\u7684\u6865\u6881\u6709\u4e0d\u540c\u7684\u4ee3\u4ef7\uff0c\u6211\u519b\u5e0c\u671b\u5728\u6ee1\u8db3\u76ee\u6807\u7684\u540c\u65f6\u4f7f\u5f97\u603b\u4ee3\u4ef7\u6700\u5c0f\u3002</p> <p>\u4fa6\u67e5\u90e8\u95e8\u8fd8\u53d1\u73b0\uff0c\u654c\u519b\u6709\u4e00\u53f0\u795e\u79d8\u673a\u5668\u3002\u5373\u4f7f\u6211\u519b\u5207\u65ad\u6240\u6709\u80fd\u6e90\u4e4b\u540e\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u7528\u90a3\u53f0\u673a\u5668\u3002\u673a\u5668\u4ea7\u751f\u7684\u6548\u679c\u4e0d\u4ec5\u4ec5\u4f1a\u4fee\u590d\u6240\u6709\u6211\u519b\u70b8\u6bc1\u7684\u6865\u6881\uff0c\u800c\u4e14\u4f1a\u91cd\u65b0\u968f\u673a\u8d44\u6e90\u5206\u5e03\uff08\u4f46\u53ef\u4ee5\u4fdd\u8bc1\u7684\u662f\uff0c\u8d44\u6e90\u4e0d\u4f1a\u5206\u5e03\u5230 \\(1\\) \u53f7\u5c9b\u5c7f\u4e0a\uff09\u3002\u4e0d\u8fc7\u4fa6\u67e5\u90e8\u95e8\u8fd8\u53d1\u73b0\u4e86\u8fd9\u53f0\u673a\u5668\u53ea\u80fd\u591f\u4f7f\u7528 \\(m\\) \u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u628a\u6bcf\u6b21\u4efb\u52a1\u5b8c\u6210\u5373\u53ef\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 \\(n\\)\uff0c\u4ee3\u8868\u5c9b\u5c7f\u6570\u91cf\u3002</p> <p>\u63a5\u4e0b\u6765 n-1 \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 \\(u,v,w\\)\uff0c\u4ee3\u8868 \\(u\\) \u53f7\u5c9b\u5c7f\u548c \\(v\\) \u53f7\u5c9b\u5c7f\u7531\u4e00\u6761\u4ee3\u4ef7\u4e3a \\(c\\) \u7684\u6865\u6881\u76f4\u63a5\u76f8\u8fde\uff0c\u4fdd\u8bc1 \\(1\\le u,v\\le n\\) \u4e14 \\(1\\le c\\le 10^5\\)\u3002</p> <p>\u7b2c \\(n+1\\) \u884c\uff0c\u4e00\u4e2a\u6574\u6570 \\(m\\)\uff0c\u4ee3\u8868\u654c\u65b9\u673a\u5668\u80fd\u4f7f\u7528\u7684\u6b21\u6570\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570 \\(k_i\\)\uff0c\u4ee3\u8868\u7b2c \\(i\\) \u6b21\u540e\uff0c\u6709 \\(k_i\\) \u4e2a\u5c9b\u5c7f\u8d44\u6e90\u4e30\u5bcc\uff0c\u63a5\u4e0b\u6765 \\(k\\) \u4e2a\u6574\u6570 \\(h_1,h_2,\\cdots ,h_k\\)\uff0c\u8868\u793a\u8d44\u6e90\u4e30\u5bcc\u5c9b\u5c7f\u7684\u7f16\u53f7\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u6709 \\(m\\) \u884c\uff0c\u5206\u522b\u4ee3\u8868\u6bcf\u6b21\u4efb\u52a1\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p> <p>\u6570\u636e\u8303\u56f4</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(2\\le n\\le 2.5\\times 10^5,m\\ge 1,\\sum k_i\\le 5\\times 10^5,1\\le k_i\\le n-1\\)\u3002</p> <p>\u8003\u8651\u8bbe \\(dp(u)\\) \u8868\u793a\uff0c\u4f7f\u5f97 \\(u\\) \u548c\u5b83\u7684\u5b50\u6811\u4e2d\u4efb\u610f\u4e00\u4e2a\u5173\u952e\u70b9\u4e0d\u76f8\u8fde\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p> <p>\u590d\u6742\u5ea6\u662f \\(O(nq)\\) \u7684\uff0c\u6ce8\u610f\u5230 \\(\\sum k_i \\le 5 \\times 10^5\\)\uff0c\u4e8e\u662f\u6211\u4eec\u76f4\u63a5\u628a\u5173\u952e\u70b9\u62d6\u51fa\u6765\u5efa\u865a\u6811\uff0c\u5728\u865a\u6811\u4e0a dp \u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long \n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e5 + 10;\n\nint n, m;\nint tot = 0, Tot = 0;\nint head[si], Head[si];\nstruct Edge { int ver, Next, w; } e[si &lt;&lt; 1], E[si &lt;&lt; 1];\ninline void add(int u, int v, int w) { e[tot] = (Edge){v, head[u], w}, head[u] = tot++; }\n\nint tim = 0, dfn[si];\nint f[si][20], dep[si], dis[si][20];\nvoid dfs1(int u, int fa) {\ndfn[u] = ++tim, dep[u] = dep[fa] + 1, f[u][0] = fa;\nfor(int i = 1; i &lt;= 19; ++i) f[u][i] = f[f[u][i - 1]][i - 1],\ndis[u][i] = min(dis[u][i - 1], dis[f[u][i - 1]][i - 1]);\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver, w = e[i].w;\nif(v == fa) continue;\ndis[v][0] = w, dfs1(v, u);\n}\n}\nint lca(int u, int v) {\nif(dep[u] &lt; dep[v]) swap(u, v);\nfor(int i = 19; i &gt;= 0; --i)\nif(dep[f[u][i]] &gt;= dep[v]) u = f[u][i];\nif(u == v) return u;\nfor(int i = 19; i &gt;= 0; --i)\nif(f[u][i] != f[v][i]) u = f[u][i], v = f[v][i];\nreturn f[u][0];\n}\nint dist(int u, int v) {\nint ans = 1e9 + 8;\nif(dep[u] &lt; dep[v]) swap(u, v);\nfor(int i = 19; i &gt;= 0; --i) {\nif(dep[f[u][i]] &gt;= dep[v]) ans = min(ans, dis[u][i]), u = f[u][i];\nif(u == v) return ans;\n}\nreturn ans;\n}\n\nbool vis[si]; // is key point or not.\nint k, a[si];\nint stk[si], top = 0;\nbool cmp(int x, int y) { return dfn[x] &lt; dfn[y]; }\ninline void ADD(int u, int v, int w) { E[Tot] = (Edge){v, Head[u], w}, Head[u] = Tot++; }\ninline void Add(int u, int v) { int w = dist(u, v); ADD(u, v, w), ADD(v, u, w); }\nvoid build() {\nsort(a + 1, a + 1 + k, cmp);\nstk[top = 1] = 1, Tot = 0, Head[1] = -1;\nfor(int i = 1, Lca; i &lt;= k; ++i) {\nif(a[i] == 1) continue;\nLca = lca(a[i], stk[top]);\nif(Lca != stk[top]) {\nwhile(dfn[Lca] &lt; dfn[stk[top - 1]])\nAdd(stk[top - 1], stk[top]), --top;\nif(dfn[Lca] &gt; dfn[stk[top - 1]])\nHead[Lca] = -1, Add(Lca, stk[top]), stk[top] = Lca;\nelse Add(Lca, stk[top--]);\n}\nHead[a[i]] = -1, stk[++top] = a[i];\n}\nfor(int i = 1; i &lt; top; ++i)\nAdd(stk[i], stk[i + 1]);\nreturn;\n}\n\nint dp[si];\nvoid dfs2(int u, int fa) {\ndp[u] = 0;\nfor(int i = Head[u]; ~i; i = E[i].Next) {\nint v = E[i].ver, w = E[i].w;\nif(v == fa) continue;\ndfs2(v, u);\nif(vis[v]) dp[u] = dp[u] + w;\nelse dp[u] = dp[u] + min(dp[v], w);\n}\n}\n\nsigned main() {\n\n// freopen(\"test.txt\", \"r\", stdin);\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head);  cin &gt;&gt; n;\nfor(int i = 1; i &lt; n; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nadd(u, v, w), add(v, u, w);\n}\ndfs1(1, 0);\n\ncin &gt;&gt; m;\nfor(int nw = 1; nw &lt;= m; ++nw) {\ncin &gt;&gt; k;\nfor(int i = 1; i &lt;= k; ++i)\ncin &gt;&gt; a[i], vis[a[i]] = true;\nbuild(), dfs2(1, 0);\ncout &lt;&lt; dp[1] &lt;&lt; endl;\nfor(int i = 1; i &lt;= k; ++i)\nvis[a[i]] = false;\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/graph/basic/dfs-order/", "title": "DFS \u5e8f\u76f8\u5173", "text": ""}, {"location": "algor/graph/basic/dfs-order/#dfs", "title": "dfs \u5e8f", "text": "<p>\u6b64\u5904\u8bf4\u7684 dfs \u5e8f\u662f\u8bbf\u95ee\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u95f4\u6233 dfn\u3002</p> <p>\u6700\u91cd\u8981\u7684\u6027\u8d28\u5c31\u662f\uff0c\u5b50\u6811\u5185\u7684 dfn \u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u7528\u4e8e\u5b50\u6811\u7684\u64cd\u4f5c\u548c\u8be2\u95ee\u3002</p>"}, {"location": "algor/graph/basic/dfs-order/#_1", "title": "\u62ec\u53f7\u5e8f", "text": "<p>dfs\uff0c\u8fdb\u5165\u67d0\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a\u5de6\u62ec\u53f7 <code>(</code>\uff0c\u9000\u51fa\u67d0\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a\u53f3\u62ec\u53f7 <code>)</code>\u3002</p> <p>\u6bcf\u4e2a\u8282\u70b9\u4f1a\u51fa\u73b0\u4e24\u6b21\u3002\u76f8\u90bb\u4e24\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u76f8\u5dee 1\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u5fc5\u7136\u662f\u4e00\u4e2a\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\uff0c\u5e76\u4e14\u4e00\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u914d\u5bf9\u7684\u4e00\u5bf9\u62ec\u53f7\u4e4b\u5185\u53ef\u4ee5\u4ee3\u8868\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u3002</p> <p>\u6811\u4e0a\u83ab\u961f\u4f1a\u7528\u5230\u3002</p>"}, {"location": "algor/graph/basic/dfs-order/#_2", "title": "\u6b27\u62c9\u5e8f", "text": "<p>\u4e4b\u540e\u8865\u3002</p>"}, {"location": "algor/graph/basic/dfs-order/#dfs_1", "title": "dfs \u6811", "text": "<p>\u8fd9\u91cc\u662f\u65e0\u5411\u56fe\u7684 dfs \u6811\u3002</p> <p>\u6a2a\u53c9\u8fb9\u7684\u5b9a\u4e49\u548c\u5173\u4e8e\u8fde\u901a\u6027\u7684 tarjan \u7b97\u6cd5\u91cc\u9762\u4e00\u6837\u3002</p> <p>\u56de\u8fb9\u5c31\u662f\u8fde\u901a dfs \u6811\u4e0a\u8282\u70b9\u548c\u7956\u5148\u8282\u70b9\u7684\u4e00\u6761\u975e dfs \u6811\u8fb9\u3002</p> <p>\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff1a</p> <p>\u65e0\u5411\u7b80\u5355\u8fde\u901a\u56fe \\(G\\) \u7684\u975e dfs \u6811\u8fb9\uff0c\u90fd\u4e0d\u662f\u6a2a\u53c9\u8fb9\uff08\u5168\u90e8\u90fd\u662f\u56de\u8fb9\uff09\u3002</p> <p>Proof:</p> <p>\u8bc1\u660e\uff1a\u5047\u8bbe\u6709\u4e00\u6761\u8fb9 \\(u \\to v\\)\uff0cdfs \u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86 \\(u\\) \u4f46\u8fd8\u6ca1\u8bbf\u95ee\u5230 \\(v\\)\u3002</p> <p>\u7136\u540e\u4f1a\u6709\u4e24\u79cd\u60c5\u51b5\uff0c</p> <p>\u5982\u679c\u6cbf\u7740 \\(u\\to v\\) \u8fd9\u6761\u8fb9\uff0cdfs \u7531 \\(u\\) \u53bb\u5411 \\(v\\)\uff0c\u90a3\u4e48 \\(u\\to v\\) \u5c31\u662f\u4e00\u6761\u6811\u8fb9\u3002</p> <p>\u5982\u679c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u6ca1\u6709\u6cbf\u7740 \\(u\\to v\\) \u8fd9\u6761\u8fb9\u4ece \\(u\\) \u8d70\u5230 \\(v\\)\uff0c</p> <p>\u90a3\u4e48\u8bc1\u660e\u6700\u540e\u8bbf\u95ee\u5230 \\(v\\) \u7684\u65f6\u5019\uff0c\u662f\u4ece \\(u\\) \u51fa\u53d1\u8d70\u4e86\u53e6\u5916\u4e00\u6761\u8def\u5f84\uff0c\u7136\u540e\u518d\u5230 \\(v\\) \u7684\u3002</p> <p>\u6240\u4ee5 \\(v\\) \u5c31\u4e00\u5b9a\u662f \\(u\\) \u7684\u4e00\u4e2a\u5b50\u5b59\u8282\u70b9\uff0c\\(u\\to v\\) \u5c31\u662f\u4e00\u6761\u56de\u8fb9\u3002</p> <p>\u53ef\u4ee5\u770b\u4e00\u770b\u6765\u81ea https://codeforces.com/blog/entry/68138 \u7684\u4e00\u5f20\u56fe\u7406\u89e3\u4e00\u4e0b\uff1a</p> <p></p>"}, {"location": "algor/graph/basic/dfs-order/#bfs", "title": "bfs \u6811", "text": "<p>\u8fd9\u91cc\u662f\u65e0\u5411\u56fe\u7684 bfs \u6811\u3002</p> <p>\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff1a</p> <p>\u65e0\u5411\u7b80\u5355\u8fde\u901a\u56fe \\(G\\) \u7684\u975e bfs \u6811\u8fb9\uff0c\u90fd\u662f\u6a2a\u53c9\u8fb9\uff08\u5168\u90e8\u90fd\u4e0d\u662f\u56de\u8fb9\uff09\u3002</p> <p>\u4e14\u8fd9\u4e9b\u8fb9\u8fde\u63a5\u7684\u8282\u70b9\u7684\u5c42\u6570\u5dee\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e\u7b49\u4e8e \\(1\\)\u3002</p> <p>Proof:</p> <p>\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4 dfs \u6811\u90a3\u91cc\u7684\u8fc7\u7a0b\u3002</p> <p>\u8003\u8651\u5b58\u5728\u4e00\u6761\u8fb9 \\(u \\to v\\)\uff0c\u5e76\u4e14\u6b64\u65f6\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86 \\(u\\)\uff0c\u6ca1\u6709\u8bbf\u95ee \\(v\\).</p> <p>\u90a3\u4e48\u4f1a\u6709\u4ee5\u4e0b\u7684\u91cf\u79cd\u60c5\u51b5\uff1a</p> <p>1\uff1a\u5982\u679c\u6cbf\u7740 \\(u \\to v\\) \u8fd9\u6761\u8fb9\u8bbf\u95ee\u4e86 \\(v\\)\uff0c\u90a3\u4e48 \\(u \\to v\\) \u5c31\u662f\u6811\u8fb9\u3002</p> <p>2\uff1a\u5982\u679c\u6ca1\u6709\u6cbf\u7740 \\(u \\to v\\) \u8fd9\u6761\u8fb9\u8bbf\u95ee \\(v\\)\uff0c\u56e0\u4e3a bfs \u662f\u6309\u5c42\u6269\u5c55\u7684\uff0c\u6240\u4ee5 \\(u\\) \u7684\u4e0b\u4e00\u6b21\u5fc5\u7136\u4f1a\u6269\u5c55\u5230 \\(v\\)\u3002</p> <p>\u4f46\u662f \\(v\\) \u6ca1\u6709\u901a\u8fc7 \\(u\\) \u6269\u5c55\u5230\uff0c\u6240\u4ee5\u7b2c\u4e00\u79cd\u53ef\u80fd\u5c31\u662f\u5b83\u662f\u548c \\(u\\) \u540c\u5c42\u7684\u8282\u70b9\uff0c\u88ab\u540c\u65f6\u6269\u5c55\u8fc7\u3002</p> <p>\u4e5f\u6709\u4e00\u79cd\u53ef\u80fd\u662f \\(u\\) \u786e\u5b9e\u80fd\u6269\u5c55\u5230 \\(v\\)\uff0c\u4f46\u662f\u548c \\(u\\) \u540c\u5c42\u7684\u67d0\u4e2a\u8282\u70b9\u4e5f\u80fd\u6269\u5c55\u5230 \\(v\\)\uff0c\u90a3\u4e48 \\(u\\) \u5c31\u6ca1\u6cd5\u6269\u5c55\u5230 \\(v\\)\u3002</p> <p>\u6700\u540e\u7684\u4e00\u79cd\u53ef\u80fd\u662f \\(v\\) \u662f \\(u\\) \u7684\u4e0a\u5c42\u8282\u70b9\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u80af\u5b9a\u662f \\(v\\) \u5148\u88ab\u6269\u5c55\u5230\u3002</p> <p>\u6240\u4ee5\u7edd\u5bf9\u503c\u7684\u7ed3\u8bba\u53ef\u4ee5\u7528\u60c5\u51b5 2 \u7684\u7b2c\u4e00\u4e8c\u79cd\u53ef\u80fd\u8bc1\u660e\uff0c\u5176\u4ed6\u7684\u53ef\u4ee5\u7528\u6765\u8bc1\u660e\u6a2a\u53c9\u8fb9\u7684\u7ed3\u8bba\u3002</p>"}, {"location": "algor/graph/basic/list-forward-star/", "title": "\u94fe\u5f0f\u524d\u5411\u661f", "text": ""}, {"location": "algor/graph/basic/list-forward-star/#_1", "title": "\u6982\u8ff0", "text": "<p>\u94fe\u5f0f\u524d\u5411\u661f\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u90bb\u63a5\u8868\u7684\u7ed3\u6784\uff0c\u5927\u6982\u957f\u6210\u8fd9\u6837\u5b50\uff1a</p> <p></p> <p>head \u5c31\u662f\u8868\u5934\uff0cNext \u8868\u793a\u5f53\u524d\u8282\u70b9\u6307\u5411\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0cver \u5219\u50a8\u5b58\u8fd9\u4e2a\u8282\u70b9\u5bf9\u5e94\u539f\u56fe\u7684\u54ea\u4e00\u4e2a\u9876\u70b9\u3002</p> <p>\u5176\u672c\u8d28\u548c Vector \u662f\u7c7b\u4f3c\u7684\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u6210\u628a\u51e0\u4e2a Vector \u201c\u5806\u53e0\u201d \u5728\u4e00\u8d77\u3002</p> <p>\u6bcf\u6b21\u63d2\u5165\u7684\u65f6\u5019\u662f\u5728\u94fe\u8868\u5f00\u5934\u63d2\u5165\uff0c\u6ce8\u610f\u8868\u5934\u4e5f\u662f\u8981\u50a8\u5b58\u5143\u7d20\u7684\u3002</p> <p>\u7136\u540e\u56e0\u4e3a\u65e0\u5411\u56fe\u8981\u52a0\u53cd\u5411\u8fb9\uff0c\u4e00\u822c\u5728\u52a0\u7684\u65f6\u5019\u90fd\u662f\u8fde\u7eed\u52a0\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5229\u7528\u6210\u5bf9\u53d8\u6362\u8bbf\u95ee\u53cd\u5411\u8fb9\u3002</p>"}, {"location": "algor/graph/basic/list-forward-star/#_2", "title": "\u5173\u4e8e\u5199\u6cd5\u95ee\u9898", "text": "<p>\u6211\u7684\u5199\u6cd5\u5f88\u5947\u602a\uff0c\u5de8 TM \u5947\u602a\uff1a</p> <pre><code>int tot=0;\nstruct Edge{ int head,ver,Next,w; }e[si_m&lt;&lt;1];\ninline void add(int u,int v,int w){ e[++tot].ver=v,e[tot].Next=e[u].head,e[u].head=tot,e[tot].w=w; }\n// \u8fb9\u7684\u7f16\u53f7\u4ece 1 \u5f00\u59cb\n\n// in main or other function:\nfor(register int i=e[u].head;i;i=e[i].Next){\n//...\n}\n// clear\nfor(register int i=0;i&lt;=tot;++i) e[i].head=0; tot=0;\n</code></pre> <p>\u6b63\u5e38\u4eba\u4e00\u822c\u4f1a\u628a head \u63d0\u51fa\u6765\u65b9\u4fbf\u591a\u6d4b\u7684\u6e05\u7a7a\u3002</p> <p>\u4f46\u662f\u6211\u4f1a\u5199 <code>for(register int i=0;i&lt;=tot;++i) e[i].head=0;</code></p> <p>\u8fd9\u6837\u5b50\u662f\u6ca1\u95ee\u9898\u7684\uff0c\u4f46\u6211\u4e4b\u524d\u72af\u8fc7\u4e00\u4e2a\u9519\u8bef\uff0c\u6211 <code>for</code> \u6e05\u7a7a\u7684\u65f6\u5019\u5199\u7684\u662f <code>e[i].head=-1</code>\u3002</p> <p>\u4f46\u662f\u904d\u5386\u7684\u65f6\u5019\u662f <code>i=...;i;i=...</code> \u8fd9\u79cd\u3002</p> <p>\u7136\u540e\u5c31\u6302\u4e86\uff0c\u8c03\u4e86\u4e00\u4e2a\u4e0b\u5348\uff0c\u7528 GDB \u53d1\u73b0\u524d\u5411\u661f\u7684\u5199\u6cd5\u81ed\u4e86\uff08\u4e24\u4e09\u5e74\u4e86\u90fd\u6ca1\u51fa\u4e8b\uff0c\u4e5f\u6ca1\u53d1\u73b0\u2026\u2026 /ch</p> <p>\u7528 <code>e[i].head=-1</code> \u6e05\u7a7a\u7684\u8bdd\u8fd9\u4e48\u5199\uff1a</p> <pre><code>int tot=0;\nint head[si_n];\nstruct Edge{ int ver,Next,w; }e[si_m&lt;&lt;1];\ninline void add(int u,int v,int w){  e[tot]=(Edge){v,head[u],w},head[u]=tot++; }\n// \u8fb9\u7684\u7f16\u53f7\u4ece 0 \u5f00\u59cb\n\n// \nfor(register int i=head[u];~i;i=e[i].Next){\n//...\n}\n// clear\nmemset(head,-1,sizeof head); tot=0; // \u4e0d\u7ba1\u6709\u6ca1\u6709\u591a\u6d4b\u90fd\u8981memset -1.\n</code></pre> <p>\u7f51\u7edc\u6d41\u7684\u65f6\u5019\u8981\u6210\u5bf9\u53d8\u6362\uff0c\u6b63\u5e38\u4eba\u5e94\u8be5\u4f1a\u50cf\u4e0a\u9762\u8fd9\u6837\u5b50\u5199\u3002</p> <p>\u5982\u679c\u975e\u8981\u7528\u7b2c\u4e00\u79cd\uff0c\u5c31\u521d\u59cb\u5316 <code>tot=1</code>\uff0c\u4ece 2 \u5f00\u59cb\u7ed9\u8fb9\u7f16\u53f7\u3002</p>"}, {"location": "algor/graph/basic/simple-graph-theory-problem/", "title": "\u7b80\u5355\u56fe\u8bba\u95ee\u9898", "text": ""}, {"location": "algor/graph/basic/simple-graph-theory-problem/#_1", "title": "\u62d3\u6251\u6392\u5e8f", "text": "<p>\u7528\u6765\u7ed9\u4e00\u4e2a DAG \u6392\u5e8f\u3002</p> <p>\u6392\u5e8f\u8fc7\u540e\uff0c\u5bf9\u4e8e\u6240\u6709\u6709\u5411\u8fb9 \\((u\\to v)\\) \u6ee1\u8db3\uff0c\\(v\\) \u4e00\u5b9a\u5728 \\(u\\) \u7684\u540e\u9762\u3002</p> <p>\u505a\u6cd5\u5f88\u7b80\u5355\uff0c\u5148\u628a\u6240\u6709 \\(0\\) \u5165\u5ea6\u7684\u70b9\u5165\u961f\u3002</p> <p>\u7136\u540e\u505a\u4e00\u4e2a\u7c7b\u4f3c BFS \u7684\u8fc7\u7a0b\uff0c\u8fc7\u7a0b\u5f53\u4e2d\u8981\u8bb0\u5f97\u5220\u8fb9\u548c\u70b9\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u65b0\u7684 \\(0\\) \u5165\u5ea6\u70b9\uff0c\u5c31\u5165\u961f\u3002</p> <p>\u5728\u5224\u5b9a\u4e25\u683c\u504f\u5e8f\u8fd9\u79cd\u5bf9\u5e94 DAG \u7684\u5173\u7cfb\u6210\u4e0d\u6210\u7acb\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u5224\u5b9a\u548c\u6784\u9020\u89e3\u3002</p> <p>\uff08\u5982\u679c\u6709\u73af\u5c31\u662f\u65e0\u89e3\uff0c\u5bf9\u5e94\u5230\u62d3\u6251\u6392\u5e8f\u5c31\u662f\u6700\u540e\u59cb\u7ec8\u5b58\u5728\u975e \\(0\\) \u5165\u5ea6\u70b9\u3002\uff09</p> Code <pre><code>int cnt = 0;\nstd::queue&lt;int&gt; q;\nfor(int i = 1; i &lt;= n; ++i) if(!ind[i]) q.push(i);\nwhile(!q.empty()) {\nint u = q.front(); q.pop();\nord[u] = ++cnt; // topo \u5e8f\nfor(auto v : G[u]) if(!(--ind[v])) q.push(v);\n// \u5220\u6389\u8fb9\uff0c\u987a\u4fbf\u5224\u4e00\u4e0b\u8981\u4e0d\u8981\u5165\u961f\u3002\n}\n</code></pre> <p>\u62d3\u6251\u5e8f\u8fd8\u53ef\u4ee5\u7528\u6765\u8f6c\u79fb DP\u3002</p> <p>\u4e00\u822c\u8f6c\u79fb\u7684\u65f6\u5019\u4e0d\u662f\u627e\u4e0a\u4e00\u4e2a\uff08\u524d\u9a71\uff09\uff0c\u800c\u662f\u4ece\u5f53\u524d\u7684\u63a8\u5230\u540e\u4e00\u4e2a\uff08\u540e\u7ee7\uff09\u3002</p> <p>\u6309\u62d3\u6251\u5e8f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u518d\u679a\u4e3e\u5b83\u7684\u6bcf\u4e00\u4e2a\u51fa\u8fb9\uff0c\u8fdb\u884c\u9012\u63a8\u5373\u53ef\u3002</p>"}, {"location": "algor/graph/basic/simple-graph-theory-problem/#_2", "title": "\u6b27\u62c9\u56fe", "text": "<p>\u5177\u6709\u6b27\u62c9\u56de\u8def\u7684\u65e0\u5411\u56fe\u6216\u6709\u5411\u56fe\u79f0\u4e3a\u6b27\u62c9\u56fe\u3002</p> <p>\u5177\u6709\u6b27\u62c9\u8def\u4f46\u4e0d\u5177\u6709\u6b27\u62c9\u56de\u8def\u7684\u65e0\u5411\u56fe\u6216\u6709\u5411\u56fe\u79f0\u4e3a\u534a\u6b27\u62c9\u56fe\u3002</p> <p>\u6b27\u62c9\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u7684\u5ea6\u6570\u90fd\u662f\u5076\u6570\u3002</p> <p>\u82e5 \\(G\\) \u662f\u6b27\u62c9\u56fe\uff0c\u5219\u5b83\u4e3a\u82e5\u5e72\u4e2a\u73af\u7684\u5e76\uff0c\u4e14\u6bcf\u6761\u8fb9\u88ab\u5305\u542b\u5728\u5947\u6570\u4e2a\u73af\u5185\u3002</p>"}, {"location": "algor/graph/basic/simple-graph-theory-problem/#_3", "title": "\u6b27\u62c9\u8def", "text": "<p>\u901a\u8fc7\u56fe\u4e2d\u6240\u6709\u8fb9\u6070\u597d\u4e00\u6b21\u7684\u901a\u8def\u79f0\u4e3a\u6b27\u62c9\u8def\u3002</p> <p>\u5c31\u662f\u4ece\u67d0\u70b9\u5f00\u59cb\u7684\u4e00\u7b14\u753b\u95ee\u9898\uff08\u53ef\u4ee5\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u591a\u6b21\uff09\u3002</p> <ul> <li> <p>\u6709\u5411\u8054\u901a\u56fe\u5b58\u5728\u6b27\u62c9\u8def\u7684\u5145\u8981\u6761\u4ef6</p> <p>\u8981\u4e48\u6240\u6709\u70b9\u7684\u51fa\u5ea6\u5747\u7b49\u4e8e\u5165\u5ea6</p> <p>\u8981\u4e48\u9664\u4e86\u4e24\u4e2a\u70b9\u4e4b\u5916\uff0c\u5176\u4f59\u6240\u6709\u70b9\u7684\u51fa\u5ea6\u5747\u7b49\u4e8e\u5165\u5ea6 \u3002</p> <p>\u5269\u4f59\u7684\u4e24\u4e2a\u70b9:\u4e00\u4e2a\u6ee1\u8db3\u51fa\u5ea6\u51cf\u53bb\u5165\u5ea6\u7b49\u4e8e \\(1\\) (\u8d77\u70b9) \uff0c\u4e00\u4e2a\u6ee1\u8db3\u5165\u5ea6\u51cf\u53bb\u51fa\u5ea6\u7b49\u4e8e \\(1\\) (\u7ec8\u70b9)\u3002</p> </li> <li> <p>\u65e0\u5411\u8054\u901a\u56fe\u5b58\u5728\u6b27\u62c9\u8def\u7684\u5145\u8981\u6761\u4ef6\uff1a\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u53ea\u80fd\u6709 \\(0\\) \u6216 \\(2\\) \u4e2a\u3002</p> </li> </ul>"}, {"location": "algor/graph/basic/simple-graph-theory-problem/#_4", "title": "\u6b27\u62c9\u56de\u8def", "text": "<p>\u901a\u8fc7\u56fe\u4e2d\u6240\u6709\u8fb9\u6070\u597d\u4e00\u6b21\u7684\u56de\u8def\u79f0\u4e3a\u6b27\u62c9\u56de\u8def\u3002</p> <p>\u5c31\u662f\u4e00\u7b14\u753b\u4e14\u8981\u6c42\u56de\u5230\u8d77\u70b9\u3002</p> <ul> <li> <p>\u6709\u5411\u8054\u901a\u56fe\u5b58\u5728\u6b27\u62c9\u56de\u8def\u7684\u5145\u8981\u6761\u4ef6\uff1a\u6240\u6709\u70b9\u7684\u51fa\u5ea6\u5747\u7b49\u4e8e\u5165\u5ea6\u3002</p> </li> <li> <p>\u65e0\u5411\u8054\u901a\u56fe\u5b58\u5728\u6b27\u62c9\u56de\u8def\u7684\u5145\u8981\u6761\u4ef6\uff1a\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u53ea\u80fd\u6709 \\(0\\) \u4e2a\u3002</p> </li> </ul> \u6c42\u5177\u4f53\u65b9\u6848 <p>\u7528 dfs \u5c31\u884c\u3002</p> <pre><code>std::stack&lt;int&gt;s;\ninline void dfs(int u){\nfor(register int i=head[u];~i;i=e[i].Next){\nint v=e[i].ver;\nif(!vis[i]){ // \u5f53\u524d\u8fb9\u6ca1\u6709\u8bbf\u95ee\u8fc7\nvis[i]=true; // \u6ce8\u610f\u4e00\u5b9a\u8981\u8bbf\u95ee\u5230\u5c31\u76f4\u63a5\u6807\u8bb0\uff0c\u4e0d\u7136\u590d\u6742\u5ea6\u4f1a\u5047\u3002\ndfs(v),s.push(v);\n}\n}\n}\n// in main()\ndfs(1); // \u56e0\u4e3a\u6709\u6b27\u62c9\u56de\u8def\uff0c\u6240\u4ee5\u5176\u5b9e\u4ece\u54ea\u4e2a\u70b9\u5f00\u59cb\u90fd\u4e00\u6837\u3002\nvector&lt;int&gt;ans; while(!s.empty()) ans.push_back(s.top()),s.pop();\nreverse(ans.begin(),ans.end()); for(auto x:ans) cout&lt;&lt;x&lt;&lt;\" \"; // \u5012\u5e8f\u8f93\u51fa\u3002\n</code></pre> <p>\u6b27\u62c9\u8def\u7684\u8bdd\u4e5f\u5dee\u4e0d\u591a\uff0c\u5982\u679c\u56fe\u672c\u8eab\u662f\u6b27\u62c9\u56fe\u76f4\u63a5\u5f53\u56de\u8def\u8dd1\uff0c\u5982\u679c\u662f\u534a\u6b27\u62c9\u56fe\u5c31\u76f4\u63a5\u628a\u591a\u51fa\u6765\u7684\u90a3\u4e24\u4e2a\u70b9\u8fde\u8fb9\u8dd1\u6b27\u62c9\u56de\u8def\u6700\u540e\u5220\u6389\u52a0\u7684\u8fb9\u5373\u53ef\u3002</p> <p>\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u56de\u8def/\u8def\u5f84\u53ef\u4ee5\u770b 221025C \u6a21\u62df\u8d5b\u7684 D \u9898</p>"}, {"location": "algor/graph/basic/simple-graph-theory-problem/#_5", "title": "\u54c8\u5bc6\u987f\u56fe", "text": "<p>\u6458\u81ea OI-Wiki</p>"}, {"location": "algor/graph/basic/simple-graph-theory-problem/#_6", "title": "\u5b9a\u4e49", "text": "<p>\u901a\u8fc7\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u4e00\u6b21\u4e14\u4ec5\u4e00\u6b21\u7684\u901a\u8def\u79f0\u4e3a\u54c8\u5bc6\u987f\u901a\u8def\u3002</p> <p>\u901a\u8fc7\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u4e00\u6b21\u4e14\u4ec5\u4e00\u6b21\u7684\u56de\u8def\u79f0\u4e3a\u54c8\u5bc6\u987f\u56de\u8def\u3002</p> <p>\u5177\u6709\u54c8\u5bc6\u987f\u56de\u8def\u7684\u56fe\u79f0\u4e3a\u54c8\u5bc6\u987f\u56fe\u3002</p> <p>\u5177\u6709\u54c8\u5bc6\u987f\u901a\u8def\u800c\u4e0d\u5177\u6709\u54c8\u5bc6\u987f\u56de\u8def\u7684\u56fe\u79f0\u4e3a\u534a\u54c8\u5bc6\u987f\u56fe\u3002</p>"}, {"location": "algor/graph/basic/simple-graph-theory-problem/#_7", "title": "\u6027\u8d28", "text": "<p>\u8bbe \\(G=&lt;V, E&gt;\\) \u662f\u54c8\u5bc6\u987f\u56fe\uff0c\u5219\u5bf9\u4e8e \\(V\\) \u7684\u4efb\u610f\u975e\u7a7a\u771f\u5b50\u96c6 \\(V_1\\)\uff0c\u5747\u6709 \\(p(G-V_1) \\leq |V_1|\\)\u3002\u5176\u4e2d \\(p(x)\\) \u4e3a \\(x\\) \u7684\u8fde\u901a\u5206\u652f\u6570\u3002</p> <p>\u63a8\u8bba\uff1a\u8bbe \\(G=&lt;V, E&gt;\\) \u662f\u534a\u54c8\u5bc6\u987f\u56fe\uff0c\u5219\u5bf9\u4e8e \\(V\\) \u7684\u4efb\u610f\u975e\u7a7a\u771f\u5b50\u96c6 \\(V_1\\)\uff0c\u5747\u6709 \\(p(G-V_1) \\leq |V_1|+1\\)\u3002\u5176\u4e2d \\(p(x)\\) \u4e3a \\(x\\) \u7684\u8fde\u901a\u5206\u652f\u6570\u3002</p> <p>\u5b8c\u5168\u56fe \\(K_{2k+1} (k \\geq 1)\\) \u4e2d\u542b \\(k\\) \u6761\u8fb9\u4e0d\u91cd\u7684\u54c8\u5bc6\u987f\u56de\u8def\uff0c\u4e14\u8fd9 \\(k\\) \u6761\u8fb9\u4e0d\u91cd\u7684\u54c8\u5bc6\u987f\u56de\u8def\u542b \\(K_{2k+1}\\) \u4e2d\u7684\u6240\u6709\u8fb9\u3002</p> <p>\u5b8c\u5168\u56fe \\(K_{2k} (k \\geq 2)\\) \u4e2d\u542b \\(k-1\\) \u6761\u8fb9\u4e0d\u91cd\u7684\u54c8\u5bc6\u987f\u56de\u8def\uff0c\u4ece \\(K_{2k}\\) \u4e2d\u5220\u9664\u8fd9 \\(k-1\\) \u6761\u8fb9\u4e0d\u91cd\u7684\u54c8\u5bc6\u987f\u56de\u8def\u540e\u6240\u5f97\u56fe\u542b \\(k\\) \u6761\u4e92\u4e0d\u76f8\u90bb\u7684\u8fb9\u3002</p>"}, {"location": "algor/graph/basic/simple-graph-theory-problem/#_8", "title": "\u5145\u5206\u6761\u4ef6", "text": "<p>\u8bbe \\(G\\) \u662f \\(n(n \\geq 2)\\) \u7684\u65e0\u5411\u7b80\u5355\u56fe\uff0c\u82e5\u5bf9\u4e8e \\(G\\) \u4e2d\u4efb\u610f\u4e0d\u76f8\u90bb\u7684\u9876\u70b9 \\(v_i, v_j\\)\uff0c\u5747\u6709 \\(d(v_i)+ d(v_j) \\geq n - 1\\)\uff0c\u5219 \\(G\\) \u4e2d\u5b58\u5728\u54c8\u5bc6\u987f\u901a\u8def\u3002</p> <p>\u63a8\u8bba 1\uff1a\u8bbe \\(G\\) \u662f \\(n(n \\geq 3)\\) \u7684\u65e0\u5411\u7b80\u5355\u56fe\uff0c\u82e5\u5bf9\u4e8e \\(G\\) \u4e2d\u4efb\u610f\u4e0d\u76f8\u90bb\u7684\u9876\u70b9 \\(v_i, v_j\\)\uff0c\u5747\u6709 \\(d(v_i)+ d(v_j) \\geq n\\)\uff0c\u5219 \\(G\\) \u4e2d\u5b58\u5728\u54c8\u5bc6\u987f\u56de\u8def\uff0c\u4ece\u800c \\(G\\) \u4e3a\u54c8\u5bc6\u987f\u56fe\u3002</p> <p>\u63a8\u8bba 2\uff1a\u8bbe \\(G\\) \u662f \\(n(n \\geq 3)\\) \u7684\u65e0\u5411\u7b80\u5355\u56fe\uff0c\u82e5\u5bf9\u4e8e \\(G\\) \u4e2d\u4efb\u610f\u9876\u70b9 \\(v_i\\)\uff0c\u5747\u6709 \\(d(v_i) \\geq \\frac{n}{2}\\)\uff0c\u5219 \\(G\\) \u4e2d\u5b58\u5728\u54c8\u5bc6\u987f\u56de\u8def\uff0c\u4ece\u800c \\(G\\) \u4e3a\u54c8\u5bc6\u987f\u56fe\u3002</p> <p>\u8bbe \\(D\\) \u4e3a \\(n(n \\geq 2)\\) \u9636\u7ade\u8d5b\u56fe\uff0c\u5219 \\(D\\) \u5177\u6709\u54c8\u5bc6\u987f\u901a\u8def\u3002</p> <p>\u82e5 \\(D\\) \u542b \\(n(n \\geq 2)\\) \u9636\u7ade\u8d5b\u56fe\u4f5c\u4e3a\u5b50\u56fe\uff0c\u5219 \\(D\\) \u5177\u6709\u54c8\u5bc6\u987f\u901a\u8def\u3002</p> <p>\u5f3a\u8fde\u901a\u7684\u7ade\u8d5b\u56fe\u4e3a\u54c8\u5bc6\u987f\u56fe\u3002</p> <p>\u82e5 \\(D\\) \u542b \\(n(n \\geq 2)\\) \u9636\u5f3a\u8fde\u901a\u7684\u7ade\u8d5b\u56fe\u4f5c\u4e3a\u5b50\u56fe\uff0c\u5219 \\(D\\) \u5177\u6709\u54c8\u5bc6\u987f\u56de\u8def\u3002</p>"}, {"location": "algor/graph/basic/tree-traversal/", "title": "\u6811\u7684\u904d\u5386", "text": ""}, {"location": "algor/graph/basic/tree-traversal/#_1", "title": "\u6df1\u5ea6\u4f18\u5148\u904d\u5386", "text": ""}, {"location": "algor/graph/basic/tree-traversal/#_2", "title": "\u5bf9\u4e8e\u4e8c\u53c9\u6811", "text": ""}, {"location": "algor/graph/basic/tree-traversal/#_3", "title": "\u524d\u5e8f\u904d\u5386", "text": "<p>\u5148\u6839\u540e\u5de6\u53f3\u3002</p> <pre><code>void dfs(int u) {\nif(u == -1) return;\norder[++cnt] = u;\ndfs(u.lson), dfs(u.rson);\n}\n</code></pre>"}, {"location": "algor/graph/basic/tree-traversal/#_4", "title": "\u4e2d\u5e8f\u904d\u5386", "text": "<p>\u5148\u5de6\uff0c\u540e\u6839\uff0c\u518d\u53f3\u3002</p> <pre><code>void dfs(int u) {\nif(u == -1) return;\ndfs(u.lson);\norder[++cnt] = u;\ndfs(u.rson);\n}\n</code></pre>"}, {"location": "algor/graph/basic/tree-traversal/#_5", "title": "\u540e\u5e8f\u904d\u5386", "text": "<p>\u5148\u5de6\u53f3\uff0c\u540e\u6839\u3002</p> <pre><code>void dfs(int u) {\nif(u == -1);\ndfs(u.lson), dfs(u.rson);\norder[++cnt] = u;\n}\n</code></pre>"}, {"location": "algor/graph/basic/tree-traversal/#_6", "title": "\u6027\u8d28", "text": "<ol> <li>\u524d\u5e8f\u7684\u7b2c\u4e00\u4e2a\u662f root\uff0c\u540e\u5e8f\u7684\u6700\u540e\u4e00\u4e2a\u662f root\u3002</li> <li>\u5148\u786e\u5b9a\u6839\u8282\u70b9\uff0c\u7136\u540e\u6839\u636e\u4e2d\u5e8f\u904d\u5386\uff0c\u5728\u6839\u5de6\u8fb9\u7684\u4e3a\u5de6\u5b50\u6811\uff0c\u6839\u53f3\u8fb9\u7684\u4e3a\u53f3\u5b50\u6811\u3002</li> <li>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b50\u6811\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u5168\u65b0\u7684\u6811\uff0c\u4ecd\u7136\u9075\u5faa\u4e0a\u9762\u7684\u89c4\u5f8b\u3002</li> </ol>"}, {"location": "algor/graph/basic/tree-traversal/#_7", "title": "\u5bf9\u4e8e\u591a\u53c9\u6811", "text": "<p>\u5c31\u662f\u5206\u522b\u9012\u5f52\u6bcf\u4e2a\u513f\u5b50\uff0c\u4e0d\u649e\u5357\u5899\u4e0d\u56de\u5934\uff0c\u7c7b\u4f3c\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\u3002</p> <p>\u5b9e\u9645\u987a\u5e8f\u7531\u52a0\u8fb9\u987a\u5e8f\u51b3\u5b9a\u3002</p> <pre><code>void dfs(int u, int fa) {\norder[++cnt] = u;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\ndfs(v, u);\n}\n}\n</code></pre>"}, {"location": "algor/graph/basic/tree-traversal/#_8", "title": "\u5e7f\u5ea6\u4f18\u5148\u904d\u5386", "text": "<p>\u4e00\u5c42\u4e00\u5c42\u904d\u5386\uff0c\u7528\u961f\u5217\u3002</p> <pre><code>void bfs() {\nq.push(root);\nwhile(!q.empty()) {\nint u = q.front();\nq.pop();\norder[++cnt] = u, vis[u] = true;\nfor(int i = head[u]; ~i; i = e[u].Next) {\nint v = e[i].ver;\nif(!vis[v]) q.push(v);\n}\n}\n}\n</code></pre>"}, {"location": "algor/graph/basic/tree-traversal/#_9", "title": "\u5173\u4e8e\u6811\u7684\u4e00\u70b9\u70b9\u57fa\u7840\u77e5\u8bc6", "text": "<p>\u6811\u662f\u4e00\u4e2a\u65e0\u5411\u8fde\u901a\u56fe\uff0c\\(n\\) \u4e2a\u8282\u70b9 \\(n - 1\\) \u6761\u8fb9\uff0c\u4e0d\u5b58\u5728\u56de\u8def\u3002</p> <p>\u6ee1\u4e8c\u53c9\u6811\uff1a\u6bcf\u4e00\u5c42\u8282\u70b9\u4e2a\u6570\u90fd\u6ee1\u7684\u4e8c\u53c9\u6811\uff08\u7b2c \\(i\\) \u5c42\u6709 \\(2^{i - 1}\\) \u4e2a\u8282\u70b9\uff09</p> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u6ee1\u4e8c\u53c9\u6811\u7684\u5b50\u96c6\uff0c\\(n\\) \u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u6df1\u5ea6\u4e3a \\(\\lfloor\\log_2n\\rfloor + 1\\)\u3002</p> <p>\u5bf9\u4efb\u610f\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u5ea6\u4e3a0\u7684\u7ed3\u70b9\uff08\u5373\u53f6\u5b50\u7ed3\u70b9\uff09\u603b\u662f\u6bd4\u5ea6\u4e3a2\u7684\u7ed3\u70b9\u591a\u4e00\u4e2a</p>"}, {"location": "algor/graph/connectivity/2sat/", "title": "2-SAT \u95ee\u9898", "text": ""}, {"location": "algor/graph/connectivity/2sat/#_1", "title": "\u7b2c\u4e00\u79cd\u5b9a\u4e49", "text": "<p>\u7ed9\u4f60 \\(n\\) \u4e2a\u4e8c\u5143\u7ec4 \\((x_0,x_1)\\)\uff0c\u6709 \\(m\\) \u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u5f62\u5982 \\(&lt;a,b&gt;\\) \uff0c\u8868\u793a \\(a,b\\) \u76f8\u4e92\u77db\u76fe\uff0c\u4e0d\u80fd\u540c\u65f6\u9009\u4e2d \\(a,b\\) \u8fd9\u4e24\u8005\u3002</p> <p>\u4e14 \\(a,b\\) \u5c5e\u4e8e\u4e0d\u540c\u7684\u4e8c\u5143\u7ec4\u3002</p> <p>\u95ee\u662f\u5426\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u4e8c\u5143\u7ec4\u91cc\u90fd\u6070\u597d\u6709\u4e00\u4e2a\u5143\u7d20\u88ab\u9009\u62e9\uff0c\u4e14\u6240\u6709\u6761\u4ef6\u4e0d\u4f1a\u88ab\u8fdd\u80cc\u3002</p> <p>\u5982\u679c\u6709\uff0c\u9700\u8981\u6784\u9020\u65b9\u6848\u3002</p>"}, {"location": "algor/graph/connectivity/2sat/#_2", "title": "\u7b2c\u4e8c\u79cd\u5b9a\u4e49", "text": "<p>\u7ed9\u4f60 \\(n\\) \u4e2a\u5143\u7d20\uff0c\u6709 \\(m\\) \u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u5f62\u5982 \\(&lt;a,b&gt;,&lt;f_a,f_b&gt;\\) \uff0c\u5373\uff0c\u5982\u679c \\(a\\) \u7684\u72b6\u6001\u662f \\(f_a\\) \uff0c\u90a3\u4e48 \\(b\\) \u7684\u72b6\u6001\u5fc5\u987b\u662f \\(f_b\\)\u3002</p> <p>\\(f_i\\) \u7684\u503c\u53ea\u53ef\u80fd\u662f \\(0,1\\) \uff0c\u8868\u793a\u9009\u6216\u8005\u4e0d\u9009 \\(i\\) \u8fd9\u4e2a\u5143\u7d20\u3002</p> <p>\u95ee\u662f\u5426\u5b58\u5728\u4e00\u79cd\u4f7f\u5f97\u6240\u6709\u9650\u5236\u88ab\u6ee1\u8db3\u3002</p> <p>\u5982\u679c\u6709\uff0c\u9700\u8981\u6784\u9020\u65b9\u6848\u3002</p> <p>\u4ee5\u4e0a\u4e24\u79cd\u5b9a\u4e49\u672c\u8d28\u4e0a\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u8bf4\u6cd5\u4e0d\u592a\u76f8\u540c\u3002</p>"}, {"location": "algor/graph/connectivity/2sat/#_3", "title": "\u505a\u6cd5", "text": "<p>\u53d1\u73b0\u6240\u6709\u7684\u7ea6\u675f\u6761\u4ef6\u90fd\u53ef\u4ee5\u5f52\u5316\u6210\u8fd9\u6837\u7684\u4e00\u4e2a\u547d\u9898\uff1a</p> <p>\u82e5 \\(p\\)\uff0c\u5219 \\(q\\)\u3002</p> <p>\u4e5f\u5c31\u662f \\(p \\Rightarrow q\\)\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u628a\u8fd9\u4e2a\u547d\u9898\u770b\u4f5c\u6709\u5411\u8fb9\uff0c\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210\u56fe\u8bba\u7684\u6a21\u578b\u3002</p> <p>\u4ece\u7b2c\u4e8c\u79cd\u5b9a\u4e49\u8003\u8651\uff0c \\(p,q\\) \u5c31\u8868\u793a\u4e24\u4e2a\u5143\u7d20\u7684\u9009\u6216\u8005\u4e0d\u9009\u7684\u72b6\u6001\u3002</p> <p>\u8003\u8651\u62c6\u70b9\uff0c\u628a\u4e00\u4e2a\u5143\u7d20 \\(x\\) \u62c6\u6210 \\((x_0,x_1)\\) \u4e24\u4e2a\u5143\u7d20\uff0c\u5206\u522b\u8868\u793a\u5143\u7d20 \\(x\\) \u4e0d\u9009\u8fd8\u662f\u9009\u3002</p> <p>\u5b9e\u73b0\u7684\u65f6\u5019\u53ef\u4ee5\u628a\u56fe\u5206\u6210\u8282\u70b9\u5bf9\u79f0\u7684\u4e24\u90e8\u5206 \\(1\\to n\\) \u548c \\(n+1 \\to 2n\\)\u3002</p> <p>\u5b9e\u9645\u4e0a\u8fb9\u4e5f\u5e94\u5f53\u662f\u5bf9\u79f0\u7684\uff0c\u4e4b\u540e\u4f1a\u8bf4\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u7684\u8fde\u8fb9\u4e86\u3002</p> <p>\u6bd4\u5982\uff0c\u5982\u679c\u9009\u4e86 \\(a\\) \u5c31\u4e0d\u80fd\u9009 \\(b\\) \u8fd9\u4e2a\u7ea6\u675f\u6761\u4ef6\u3002</p> <p>\u5c31\u53ef\u4ee5\u8fde\u4e00\u6761\u6709\u5411\u8fb9 \\(a_1 \\to b_0\\)\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e00\u4e2a\u547d\u9898 \\(p \\Rightarrow q\\) \u554a\uff0c\u6240\u4ee5\u5b83\u7684\u9006\u5426\u547d\u9898 \\(\\lnot q \\Rightarrow \\lnot p\\) \u4e5f\u662f\u6210\u7acb\u7684\u3002</p> <p>\u90a3\u4e48\u5728\u8fde \\(a_1 \\to b_0\\) \u7684\u540c\u65f6\u4e5f\u9700\u8981\u8fde\u4e0a \\(b_1 \\to a_0\\)\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u628a\u6709\u5411\u8fb9\u770b\u6210\u65e0\u5411\u8fb9\uff0c\u56fe\u4e5f\u662f\u5bf9\u79f0\u7684\u3002</p> <p>\u4e0d\u8fc7\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5f3a\u5236\u9009 \\(a\\)\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u8fde\u4e00\u6761\u8fb9 \\(a_0 \\to a_1\\) \u3002</p> <p>\u8fd9\u6837\u7684\u8bdd\uff0c\u5982\u679c\u9009 \\(a_0\\) \u5c31\u4f1a\u77db\u76fe\uff08\u5177\u4f53\u770b\u4e0b\u9762\uff09\uff0c\u5c31\u8fbe\u5230\u53ef\u5f3a\u5236\u9009 \\(a_1\\) \u7684\u76ee\u7684\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u6240\u6709\u53d8\u91cf\u7684\u53d6\u503c\u662f\u76f8\u540c\u7684\u3002</p> <p>\u6bd4\u5982\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u957f\u8fd9\u6837\uff08\u53ef\u80fd\u4e0d\u4e00\u5b9a\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u4e0d\u8fc7\u611f\u6027\u7406\u89e3\u5c31\u884c\uff09\uff1a</p> <p>\\(a_0 \\to b_1 \\to c_0 \\to a_0\\)\u3002</p> <p>\u90a3\u4e48 \\(a_0\\) \u7684\u53d6\u503c\u5982\u679c\u4e3a \\(\\text{true}\\) \uff08\u4e0d\u9009\u62e9 \\(a\\)\uff09\uff0c\u90a3\u4e48 \\(b_1\\) \u7684\u53d6\u503c\u4e5f\u5e94\u5f53\u4e3a \\(\\text{true}\\)\uff0c\u540c\u7406 \\(c_0\\) \u7684\u53d6\u503c\u4e5f\u662f \\(\\text{true}\\)\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u7f29\u70b9\uff0c \u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u7684\u4e24\u79cd\u72b6\u6001\u5904\u4e8e\u540c\u4e00\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u5fc5\u7136\u662f\u65e0\u89e3\u7684\uff0c\u56e0\u4e3a\u4f60\u4e0d\u53ef\u80fd\u9009\u4e00\u4e2a\u7269\u54c1\u53c8\u4e0d\u9009\u4e00\u4e2a\u7269\u54c1\u3002</p> <p>\u7f29\u70b9\u5b8c\u4e4b\u540e\uff0c\u8fd9\u4e2a\u56fe\u4f1a\u6210\u4e00\u4e2a DAG\u3002</p> <p>\u4f46\u662f\u5b83\u4ecd\u7136\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u65b0\u56fe\u4e0a \\(c[x_0]\\) \u548c \\(c[x_1]\\) \u7684\u5173\u7cfb\u5c31\u53ef\u4ee5\u770b\u6210 \\(x_0\\) \u548c \\(x_1\\) \u7684\u5173\u7cfb\u3002</p> <p>\u5bf9\u4e8e\u539f\u6765\u6709\u7684\u4e00\u6761\u8fb9 \\((x,y)\\)\uff0c\u5728\u65b0\u56fe\u4e0a\u8fde\u63a5 \\((c[x],c[y])\\) \u5373\u53ef\u3002</p> <p>\u53d1\u73b0\u5728\u65b0\u56fe\u4e0a\u9009\u62e9\u4e00\u4e2a\u96f6\u51fa\u5ea6\u70b9\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u7684\u70b9\u9020\u6210\u4ec0\u4e48\u5f71\u54cd\uff0c\u90a3\u4e48\u5c31\u4e0d\u65ad\u7684\u627e\u96f6\u51fa\u5ea6\u70b9\u5373\u53ef\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u53cd\u7740\u7684\u62d3\u6251\u6392\u5e8f\u3002</p> <p>\u90a3\u4e48\u5728\u8fd9\u4e2a\u65b0\u56fe\u7684\u53cd\u56fe\u4e0a\u8dd1\u62d3\u6251\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6253\u4e00\u4e2a\u6807\u8bb0 \\(color\\)\uff0c\u8868\u793a\u8fd9\u4e2a SCC \u5f53\u4e2d\u7684\u6240\u6709\u53d8\u91cf\u7684\u53d6\u503c\u3002</p> <p>\u5982\u679c\u5f53\u524d\u70b9 \\(u\\) \u7684 \\(color\\) \u6ca1\u6709\u88ab\u6807\u8bb0\u8fc7\uff0c\u90a3\u4e48\u7ed9\u4ed6\u6807\u8bb0\u4e3a \\(0\\)\uff0c\u5e76\u628a\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u70b9 \\(v\\) \u6807\u8bb0\u4e3a \\(1\\)\u3002</p> <p>\u5bf9\u5e94\u7684\u70b9\u5c31\u662f\u6ee1\u8db3\u7c7b\u4f3c\u539f\u56fe \\(x_0\\) \u548c \\(x_1\\) \u7684\u5173\u7cfb\u7684\u70b9\u3002</p> <p>\u7136\u540e\u5c31\u5f97\u5230\u4e86\u4e00\u7ec4\u53ef\u884c\u89e3\u3002</p> <p>\u4f46\u662f\u56e0\u4e3a Tarjan \u5b8c\u4e4b\u540e\u7684 SCC \u7f16\u53f7\u5c31\u662f\u9006\u62d3\u6251\u5e8f\uff0c\u6240\u4ee5\u76f4\u63a5\u6b63\u5e8f\u626b\u63cf\u6240\u6709 SCC \u5c31\u884c\u4e86\u3002</p> <p>\u7ed9\u4e00\u7ec4\u5bf9\u5e94\u70b9\u5f53\u4e2d\u62d3\u6251\u5e8f\u66f4\u5927\uff0c\u4e5f\u5c31\u662f\u7f16\u53f7\u66f4\u5c0f\u7684\u7684\u4e00\u4e2a\u70b9\u67d3\u8272\u6210 \\(0\\) \uff0c\u53e6\u5916\u4e00\u4e2a\u67d3\u8272\u6210 \\(1\\) \u5373\u53ef\u3002</p> <p>\u5b9e\u73b0\u53ef\u4ee5\u4e0d\u7528\u5224\u6bcf\u4e2a\u5143\u7d20\u7684\u72b6\u6001\u53d8\u91cf\u6240\u5728\u7684 SCC \u7684\u989c\u8272\uff0c\u53ea\u9700\u8981\u6bd4\u8f83\u7f16\u53f7\u5927\u5c0f\u5c31\u884c\u3002</p> <pre><code>for(int i = 1; i &lt;= 2 * n; ++i) if(!dfn[i]) tarjan(i);\n\nfor(int i = 1; i &lt;= n; ++i) if(c[i] == c[i + n]) return puts(\"NO\"),0;\n\nfor(int i = 1; i &lt;= n; ++i) opp[i] = i + n, opp[i + n] = i;\n\nfor(int i = 1; i &lt;= 2 * n; ++i) val[i] = c[i] &gt; c[opp[i]];\n</code></pre> <p>\u8fd8\u6709\u4e00\u79cd\u7206\u641c\u505a\u6cd5\uff0c\u4f46\u662f\u89c9\u5f97\u4e0d\u559c\u6b22\uff08</p> <p>\u6bd5\u7adf Tarjan \u5199\u8d77\u6765\u65b9\u4fbf\uff0c\u5e38\u6570\u4e5f\u5c0f\u3002</p> <p>\u6ce8\u610f\uff0c\u70b9\u76f8\u5173\u7684\u6570\u7ec4\u4e00\u5b9a\u8981\u5f00\u4e24\u500d\uff0c\u8fb9\u76f8\u5173\u7684\u9700\u8981\u8ba1\u7b97\u7136\u540e\u5f00\u5bf9\u5e94\u500d\u6570\u3002</p> <p>\u5982\u679c\u4e24\u4e2a\u53d8\u91cf\u7684\u56db\u79cd\u53d6\u503c\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u7684\u7ea6\u675f\u5173\u7cfb\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210\u4e0d\u77db\u76fe\uff09\uff0c\u662f\u4e0d\u7528\u8fde\u8fb9\u7684\u3002</p>"}, {"location": "algor/graph/connectivity/dcc/", "title": "\u53cc\u8fde\u901a\u5206\u91cf", "text": ""}, {"location": "algor/graph/connectivity/dcc/#e-dcc", "title": "\u8fb9\u53cc\u8054\u901a\u5206\u91cf e-DCC", "text": "<p>\u5272\u8fb9/\u6865\uff1a\u5982\u679c\u5728\u65e0\u5411\u56fe \\(G=(V,E)\\) \u5f53\u4e2d\u53bb\u6389\u4e00\u6761\u8fb9 \\((u,v)\\) \u540e\uff0c\\(G\\) \u5206\u88c2\u4e3a\u4e24\u4e2a\u4e0d\u8054\u901a\u7684\u5b50\u56fe\uff0c\u5219\u79f0\u8fb9 \\((u,v)\\) \u662f\u65e0\u5411\u56fe \\(G\\) \u7684\u4e00\u4e2a\u6865\u3002</p> <p>\u8fb9\u53cc\u8054\u901a\u5206\u91cf\uff1a\u4e0d\u542b\u6865\u8fb9\u7684\u6781\u5927\u8054\u901a\u5b50\u56fe\u3002</p> <p>\u7c7b\u4f3c SCC\uff0c\u5f15\u5165 \\(G\\) \u7684\u4e00\u9897\u641c\u7d22\u6811 \\(T\\) \u548c \\(dfn,low\\)\u3002</p> <p>\\(low\\) \u7684\u5b9a\u4e49\u4e5f\u662f\u4ece\u67d0\u4e2a\u8282\u70b9\u5411\u4e0a\u6700\u9ad8\uff08\u5728 \\(T\\) \u5f53\u4e2d\uff09\u80fd\u5230\u8fbe\u7684\u8282\u70b9\u7684 \\(dfn\\)\u3002</p> <p>\u90a3\u4e48\u8981\u627e\u5230\u6865\u8fb9\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u627e\u5230\u641c\u7d22\u6811\u4e0a\u76f8\u90bb\u7684\u4e24\u4e2a\u8282\u70b9 \\((u,v)\\) \uff0c\u4f7f\u5f97 \\(u\\) \u662f \\(v\\) \u7684\u7236\u4eb2\u4e14 \\(dfn_u&lt;low_v\\)\uff0c\u4e5f\u5c31\u662f \\(v\\) \u65e0\u8bba\u5982\u4f55\u90fd\u6ca1\u6709\u529e\u6cd5\u8d70\u5230 \\(u\\) \u6216\u8005 \\(u\\) \u66f4\u4e0a\u9762\u7684\u8282\u70b9\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6240\u4ee5 \\(v\\) \u548c \\(v\\) \u7684\u5b50\u6811\u90fd\u662f\u6ca1\u6709\u8fb9\u80fd\u5230\u8fbe \\(u\\) \u4ee5\u53ca\u66f4\u4e0a\u9762\u7684\u5b50\u56fe\u7684\u3002</p> <p>\u56e0\u4e3a\u65e0\u5411\u56fe\u7684 dfs \u6811\u4ee5\u5916\u7684\u8fb9\u90fd\u4e0d\u662f\u6a2a\u53c9\u8fb9\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8003\u8651\u201c\u56de\u8fb9\u201d\u7684\u5f71\u54cd\u3002</p> <p>\u90a3\u4e48\u5fc5\u7136\u53ef\u4ee5\u8bc1\u660e\uff0c\\((u,v)\\) \u4e00\u5b9a\u662f\u6865\u8fb9\u3002</p> <p>\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u540c\u65f6\u5f97\u5230\u4e00\u4e2a\u6027\u8d28\uff0c\u6865\u8fb9\u4e00\u5b9a\u662f\u6811\u8fb9\u3002</p> <p>\u800c\u4e14\uff0c\u4efb\u610f\u4e00\u4e2a\u7b80\u5355\u73af\u4e2d\u7684\u8fb9\u90fd\u4e0d\u662f\u6865\u8fb9\u3002</p> <p>\u53bb\u6389\u6865\u8fb9\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u8fde\u901a\u5757\u5c31\u662f\u4e00\u4e2a\u4e2a e-DCC\u3002</p> <p>\u7f29\u70b9\u4e5f\u6bd4\u8f83\u5bb9\u6613\uff0c\u76f4\u63a5\u628a\u6240\u6709\u53bb\u6389\u6865\u8fb9\u4e4b\u540e\u7684\u8fde\u901a\u5757\u5206\u522b\u5408\u5e76\u6210\u4e00\u4e2a\u8282\u70b9\u5373\u53ef\u3002</p> Code <pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int si = 2e5 + 10;\n\nint n, m, q;\n\n// \u539f\u56fe\nint head[si], tot1 = 0;\nstruct Edge {\nint ver, Next;\n}e[si &lt;&lt; 2]; inline void add1(int u, int v) {\ne[tot1] = (Edge){v, head[u]}, head[u] = tot1++;\n}\n\n// \u7f29\u5b8c\u70b9\u4e4b\u540e\u7684\u56fe\n// \u5982\u679c\u539f\u6765\u7684\u56fe\u662f\u8fde\u901a\u56fe\u7684\u8bdd\n// \u53ef\u4ee5\u8bc1\u660e\u7f29\u5b8c\u70b9\u4e4b\u540e\u5fc5\u7136\u662f\u4e00\u68f5\u6811\u3002\nint Head[si], tot2 = 0;\nstruct Tree {\nint ver, Next;\n}t[si &lt;&lt; 2];\ninline void add2(int u, int v) {\nt[tot2] = (Tree){v, Head[u]}, Head[u] = tot2++;\n}\n\n// E-dcc \u7684\u4e2a\u6570.\nint cnt = 0; int dfn[si], low[si], tim = 0;\n// \u662f\u5426\u662f\u6865\nbool bridge[si &lt;&lt; 2];\nint c[si];\n\n// in_edge \u662f\u7528\u6765\u6d88\u9664\u91cd\u8fb9\u7684\u5f71\u54cd\u7684\u3002\n// \u8868\u793a\u5f53\u524d\u72b6\u6001\u662f\u4ece\u54ea\u4e00\u6761\u8fb9\u8fc7\u6765\u7684\u3002\nvoid tarjan(int u, int in_edge) {\ndfn[u] = low[u] = ++tim;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(!dfn[v]) {\ntarjan(v, i);\nlow[u] = min(low[u], low[v]);\nif(dfn[u] &lt; low[v]) bridge[i] = bridge[i ^ 1] = true; }\nelse if((i ^ 1) != in_edge) low[u] = min(low[u], dfn[v]);\n}\n}\n\n// \u53bb\u6389\u6865\u8fb9\u7684\u8fde\u901a\u5757\u67d3\u8272\nvoid dfs(int u, int col) {\nc[u] = col;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(c[v] || bridge[i]) continue;\ndfs(v, col);\n}\n} void Construct() {\nfor(int i = 1; i &lt;= n; ++i){\nfor(int j = head[i]; ~j; j = e[j].Next) {\nint v = e[j].ver;\nif(c[i] == c[v]) continue;\n// \u53ea\u9700\u8981\u52a0\u4e00\u6b21\uff0c\u904d\u5386\u5230\u53cd\u5411\u8fb9\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8865\u5168\u6210\u65e0\u5411\u8fb9\nadd2(c[i], c[v]);\n}\n}\n}\n\nint main() {\nmemset(head, -1, sizeof head);\nmemset(Head, -1, sizeof Head);\nmemset(bridge, false, sizeof bridge);\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v;\ncin &gt;&gt; u &gt;&gt; v;\nadd1(u, v), add1(v, u);\n}\nfor(int i = 1; i &lt;= n; ++i) if(!dfn[i]) tarjan(i, -1);\nfor(int i = 1; i &lt;= n; ++i) if(!c[i]) ++cnt, dfs(i, cnt);\nConstruct();\n}\n</code></pre> <p>\\(in\\_edge\\) \u8868\u793a\u9012\u5f52\u5230\u5f53\u524d\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u90a3\u4e00\u6761\u8fb9\u7684\u7f16\u53f7\u3002</p> <p>\\(in\\_edge\\) \u5b58\u5728\u7684\u539f\u56e0\u662f\uff0c\u5982\u679c\u6309\u7167\u6b63\u5e38\u641c\u7d22\u6811\u7684\u66f4\u65b0\u65b9\u5f0f\uff0c\\(fa_u\\) \u7684 \\(dfn\\) \u5fc5\u7136\u4e0d\u4f1a\u7528\u6765\u66f4\u65b0 \\(u\\) \u7684 \\(low\\)\u3002</p> <p>\u4f46\u662f\u5982\u679c\u51fa\u73b0\u91cd\u8fb9\u7684\u8bdd\uff0c\u90a3 \\((fa_u,u)\\) \u5fc5\u7136\u4e0d\u662f\u6865\u8fb9\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u7528 \\(fa_u\\) \u7684 \\(dfn\\) \u66f4\u65b0 \\(low_u\\)\u3002</p> <p>\u53ef\u4ee5\u8bc1\u660e\u7684\u4e00\u4e2a\u63a8\u8bba\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u65e0\u5411\u8fde\u901a\u56fe\uff0cEdcc \u7f29\u5b8c\u70b9\u4e4b\u540e\u5fc5\u7136\u4f1a\u5f62\u6210\u4e00\u68f5\u6811\uff08\u8fd9\u4e1c\u897f\u88ab\u53eb\u505a\u8fb9\u53cc\u6811\u6765\u7740\uff09\u3002</p> <p>\u56e0\u4e3a\u53ea\u8981\u56fe\u4e0a\u5e26\u73af\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u7f29\u70b9\uff0c\u800c\u6811\u662f\u65e0\u5411\u8fde\u901a\u65e0\u73af\u56fe\uff0c\u6240\u4ee5\u5f97\u8bc1\u3002</p>"}, {"location": "algor/graph/connectivity/dcc/#v-dcc", "title": "\u70b9\u53cc\u8054\u901a\u5206\u91cf v-DCC", "text": "<p>\u5272\u70b9\uff1a\u5982\u679c\u5bf9\u4e8e\u65e0\u5411\u56fe \\(G=(V,E)\\)\uff0c\\(\\exist x \\in V\\)\uff0c\u4f7f\u5f97\u5220\u9664 \\(x\\) \u4e4b\u540e\uff0c\\(G\\) \u5206\u88c2\u6210\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u4e0d\u8054\u901a\u7684\u5b50\u56fe\uff0c\u5219\u79f0\u8282\u70b9 \\(x\\) \u662f\u65e0\u5411\u56fe \\(G\\) \u7684\u4e00\u4e2a\u5272\u70b9\u3002</p> <p>\u70b9\u53cc\u8fde\u901a\u5206\u91cf\uff1a\u4e0d\u542b\u5272\u70b9\u7684\u6781\u5927\u8054\u901a\u5b50\u56fe\uff0c\u4f46\u662f\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u80fd\u76f4\u63a5\u6c42\u51fa\u5272\u70b9\u4e4b\u540e\u53bb\u6389\u5272\u70b9\u628a\u8fde\u901a\u5757\u5408\u5e76\u3002</p> <p>\u56e0\u4e3a\u5272\u70b9\u672c\u8eab\u5c31\u5c5e\u4e8e\u5b83\u8fde\u63a5\u7684\u70b9\u53cc\u8054\u901a\u5206\u91cf\uff08\u540c\u65f6\u5c5e\u4e8e\uff09\u3002</p> <p>\u6240\u4ee5\u8981\u7279\u522b\u6ce8\u610f\u3002</p> <p>\u4ecd\u7136\u5f15\u5165 \\(T\\) \uff0c\\(dfn\\) \u548c \\(low\\) \u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u8282\u70b9 \\(u\\) \u600e\u4e48\u624d\u53ef\u80fd\u6210\u4e3a\u5272\u70b9\u3002</p> <p>\u5982\u679c\u5b58\u5728\u4e00\u6761\u6811\u8fb9 \\((u,v)\\) \u4e14 \\(u\\) \u662f \\(v\\) \u7684\u7236\u4eb2\u8282\u70b9\uff0c\u4e14\u6ee1\u8db3 \\(dfn_u \\le low_v\\)\uff0c\\(u\\) \u4e0d\u662f\u6839\u8282\u70b9\u3002</p> <p>\u5982\u679c \\(u\\) \u662f\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u6ee1\u8db3\u4e24\u6b21\u4ee5\u4e0a \\(dfn_u \\le low_v\\)\u3002</p> <p>\u4e5f\u5c31\u662f \\(v\\) \u548c \\(v\\) \u7684\u5b50\u6811\u91cc\u7684\u8282\u70b9\u6700\u9ad8\u53ea\u80fd\u5230 \\(u\\) \uff0c\u5230\u4e0d\u4e86 \\(u\\) \u66f4\u4e0a\u5c42\u7684\u8282\u70b9\uff0c\u90a3\u4e48 \\(u\\) \u5fc5\u7136\u4f1a\u628a \\(v\\) \u548c \\(v\\) \u7684\u5b50\u6811\u4ee5\u53ca \\(u\\) \u4e0a\u9762\u7684\u5b50\u56fe\u5206\u5f00\u3002</p> <p>\u6240\u4ee5\u6b64\u65f6 \\(u\\) \u5c31\u662f\u4e00\u4e2a\u5272\u70b9\u3002</p> <p>\u9012\u5f52\u7684\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u539f\u7406\u7c7b\u4f3c SCC\u3002</p> <p>\u7136\u540e\u6bcf\u6b21\u6ee1\u8db3 \\(dfn_u \\le low_v\\) \u7684\u65f6\u5019\u5c31\u5f39\u51fa\uff0c\u76f4\u5230 \\(v\\) \u51fa\u6808\uff0c\u88ab\u5f39\u51fa\u7684\u8282\u70b9\u5c31\u7ec4\u6210\u4e00\u4e2a v-DCC\u3002</p> <p>\uff08\u8fd9\u91cc\u4e0d\u9700\u8981\u5224\u6839\uff0c\u53ef\u4ee5\u81ea\u5df1\u753b\u56fe\uff09</p> <p>\u4e0d\u8981\u628a \\(u\\) \u5f39\u51fa\u53bb\u4e86\uff0c\u5982\u679c \\(u\\) \u662f\u5272\u70b9\uff0c\u90a3\u4e48\u4e4b\u540e\u8bbf\u95ee\u5230\u7684 v-DCC \u91cc\u9762\u5c31\u4f1a\u5c11 \\(u\\) \u8fd9\u4e2a\u70b9\u3002</p> <p>\u56e0\u4e3a\u5224\u5b9a\u6761\u4ef6\u91cc\u9762\u6709 \\(=\\)\uff0c\u6240\u4ee5\u5c31\u4e0d\u9700\u8981\u518d\u5224 \\(in\\_edge\\) \u4e86\uff0c\u4e0d\u8fc7\u5728\u6ca1\u6709\u7279\u6b8a\u8bf4\u660e\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u5b9a\u8981\u8bb0\u4f4f\u628a\u91cd\u8fb9\u76f4\u63a5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5224\u6389\u3002</p> <p>\u7f29\u70b9\u7684\u8bdd\u552f\u4e00\u8981\u6ce8\u610f\u7684\u5c31\u662f\u8981\u628a\u5272\u70b9\u5355\u72ec\u5206\u88c2\u51fa\u6765\uff0c\u4f46\u662f\u5272\u70b9\u53c8\u8981\u5b58\u5728\u4e8e\u5b83\u8fde\u63a5\u7684\u6240\u6709v-DCC \u5f53\u4e2d\u3002</p> <p>\u6240\u4ee5\u8981\u7ed9\u5272\u70b9\u4e00\u4e2a\u65b0\u7f16\u53f7\u3002</p> Code <pre><code>#include &lt;stack&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int si = 1e5 + 10;\n\nint n, m, root;\n\n// \u539f\u56fe\nint head[si], tot1 = 0;\n// \u65b0\u56fe\nint Head[si], tot2 = 0;\nstruct Edge {\nint ver, Next;\n}e[si &lt;&lt; 2], g[si &lt;&lt; 2];\ninline void add1(int u, int v) {\ne[tot1] = (Edge){v, head[u]}, head[u] = tot1++;\n}\ninline void add2(int u, int v) {\ng[tot2] = (Edge){v, Head[u]}, Head[u] = tot2++;\n}\n\n\n// Vdcc \u7684\u4e2a\u6570\nint cnt = 0;\nint dfn[si], low[si];\nint c[si], tim;\n// \u5272\u70b9\u7684\u65b0\u7f16\u53f7\nint new_id[si];\n// \u662f\u5426\u662f\u5272\u70b9\nbool cut[si];\nstack&lt;int&gt; s;\nvector&lt;int&gt; vdcc[si];\n\nvoid tarjan(int u) {\ndfn[u] = low[u] = ++tim;\ns.push(u);\n\n// \u5b64\u7acb\u70b9\nif(u == root &amp;&amp; head[u] == -1) {\nvdcc[++cnt].emplace_back(u);\nreturn;\n}\n\nint flag = 0;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(!dfn[v]) {\ntarjan(v), low[u] = min(low[u], low[v]);\n\nif(dfn[u] &lt;= low[v]) {\n++flag;\n// \u6839\u8282\u70b9\u7279\u5224\nif(u != root || flag &gt; 1) { // \u6ce8\u610f\u8fd9\u91cc\u662f\u77ed\u8def\u8fd0\u7b97\u7b26\uff0c\u4e0d\u8981\u6253\u53cd\u4e86\u3002\ncut[u] = true;\n}\nint x; ++cnt;\ndo {\nx = s.top(), s.pop();\nvdcc[cnt].emplace_back(x);\n} while(v != x);\n// \u6ce8\u610f\u8fd9\u91cc\u8981\u662f v \u4e0d\u662f u\n// \u5982\u679c u \u88ab\u5f39\u51fa\u4e86\uff0c\u4e4b\u540e\u7684\u8fde\u901a\u5757\u5c31\u4f1a\u5c11 u\u3002\nvdcc[cnt].emplace_back(u);\n}\n}\nelse low[u] = min(low[u], dfn[v]);\n}\n}\n\nint num;\nvoid Construct() {\nnum = cnt;\nfor(int u = 1; u &lt;= n; ++u) {\nif(cut[u]) new_id[u] = ++num;\n}\n\nfor(int i = 1; i &lt;= cnt; ++i) {\nfor(int j : vdcc[i]) {\nif(cut[j]) add2(i, new_id[j]), add2(new_id[j], i);\nelse c[j] = i;\n}\n// \u5982\u679c\u662f\u5272\u70b9\uff0c\u5c31\u548c\u8fd9\u4e2a\u5272\u70b9\u6240\u5728\u7684 v-Dcc \u8fde\u8fb9\n// \u53cd\u4e4b\u67d3\u8272\u3002\n}\n\n// \u7f16\u53f7 1~cnt \u7684\u662f v-Dcc, \u7f16\u53f7 &gt; cnt \u7684\u662f\u539f\u56fe\u5272\u70b9\n}\n\nint main() {\nmemset(head, -1, sizeof head);\nmemset(Head, -1, sizeof Head);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v;\ncin &gt;&gt; u &gt;&gt; v;\n// \u5224\u91cd\u8fb9\nif(u == v) continue;\nadd1(u, v), add1(v, u);\n}\n\nfor(int i = 1; i &lt;= n; ++i) {\nif(!dfn[i]) root = i, tarjan(i);\n}\nConstruct();\nreturn 0;\n} </code></pre> <p>\u5176\u5b9e\uff0c\u5982\u679c\u539f\u56fe\u662f\u65e0\u5411\u8fde\u901a\u56fe\u7684\u8bdd\uff0cvdcc \u7f29\u5b8c\u70b9\u4e4b\u540e\u5f97\u5230\u7684\u4e5f\u5fc5\u7136\u662f\u4e00\u68f5\u6811\u3002</p> <p>\u5e76\u4e14\uff0c\u5982\u679c\u628a\u5272\u70b9\u770b\u4f5c\u767d\u70b9\uff0c vdcc \u770b\u4f5c\u9ed1\u70b9\uff0c\u90a3\u4e48\u8fd9\u9897\u6811\u5fc5\u7136\u662f\u9ed1\u767d\u76f8\u95f4\u7684\u3002</p> <p>\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002</p> <p>\u8bc1\u660e\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u8bc1\u660e\u662f\u6811\u7684\u8bdd\u7c7b\u4f3c edcc\u3002</p> <p>\u7136\u540e\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff0c\u6811\u4e2d\u7684\u6240\u6709\u8fb9\u90fd\u662f\u4e00\u8fb9\u662f\u5272\u70b9\uff0c\u4e00\u8fb9\u662f\u4e00\u4e2a vdcc\u3002</p> <p>\u8bc1\u660e\u5176\u5b83\u60c5\u51b5\u4e0d\u5b58\u5728\u5373\u53ef\u3002</p> <p>\uff08\u5176\u5b9e\u770b <code>Construct</code> \u91cc\u7684\u52a0\u8fb9\u4e5f\u80fd\u770b\u51fa\u6765\uff09</p>"}, {"location": "algor/graph/connectivity/scc/", "title": "\u5f3a\u8fde\u901a\u5206\u91cf", "text": ""}, {"location": "algor/graph/connectivity/scc/#_1", "title": "\u4e00\u4e9b\u5b9a\u4e49", "text": "<p>\u8054\u901a\u5206\u91cf\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\u7684\u5206\u91cf\u5f53\u4e2d\u7684\u4efb\u610f\u4e24\u70b9 \\((u,v)\\) \uff0c\\(\\exists \\delta (u,v) \\land \\delta (v,u)\\)\uff0c\u5219\u79f0\u8fd9\u4e2a\u5206\u91cf\u4e3a\u8054\u901a\u5206\u91cf</p> <p>\u5f3a\u8054\u901a\u5206\u91cf SCC\uff1a\u6709\u5411\u56fe\u7684\u4e00\u4e2a\u6781\u5927\u8fde\u901a\u5206\u91cf\u88ab\u79f0\u4f5c\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u6781\u5927\u7684\u7406\u89e3\u5c31\u662f\uff0c\u4e0d\u7ba1\u518d\u52a0\u4e0a\u54ea\u4e00\u4e2a\u8fb9\u548c\u54ea\u4e00\u4e2a\u8282\u70b9\uff0c\u4ed6\u90fd\u4e0d\u518d\u662f\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u4e5f\u5c31\u662f\u201c\u5927\u7684\u4e0d\u80fd\u518d\u5927\u201d\u3002</p> <p>\u6d41\u56fe\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe \\(G=(V,E)\\)\uff0c\\(\\exists r \\in V\\)\uff0c\u6ee1\u8db3 \\(r\\) \u53ef\u4ee5\u5230\u8fbe \\(V\\) \u4e2d\u7684\u4efb\u610f\u8282\u70b9\uff0c\u5219\u79f0 \\(G\\) \u4e3a\u4e00\u4e2a\u6d41\u56fe\u3002</p> <p>\\(r\\) \u79f0\u4f5c\u6d41\u56fe\u7684\u6e90\u70b9\u3002</p> <p>\u641c\u7d22\u6811\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6d41\u56fe \\(G\\) \u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u5f97\u5230\u7684\u4e00\u68f5\u751f\u6210\u6811 \\(T\\) \u3002</p> <p>\u65f6\u95f4\u6233 \\(dfn\\) \uff1a\u5bf9\u4e8e \\(G\\) \u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u5728 \\(T\\) \u4e2d\u88ab\u641c\u7d22\u5230\u7684\u987a\u5e8f\uff08\u65f6\u95f4\uff09\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u53d9\u8ff0\uff0c\u8fd9\u91cc\u518d\u5b9a\u4e49\u56db\u79cd\u8fb9\uff0c\u6d41\u56fe \\(G\\) \u7684\u6240\u6709\u8fb9\u5fc5\u7136\u662f\u8fd9\u56db\u79cd\u8fb9\u4e4b\u4e00</p> <ol> <li>\u6811\u8fb9\uff1a\u5728\u641c\u7d22\u6811\u91cc\u7684\u8fb9\uff0c\u4ece \\(u \\to v\\) \uff0c\u4e14 \\(u\\) \u662f \\(v\\) \u7684\u7236\u4eb2\u3002</li> <li>\u524d\u5411\u8fb9\uff1a\u4ece \\(u \\to v\\) \uff0c\u4e14 \\(u\\) \u662f \\(v\\) \u5728 \\(T\\) \u4e0a\u7684\u7956\u5148\u3002</li> <li>\u540e\u5411\u8fb9\uff1a\u4ece \\(u \\to v\\) \uff0c\u4e14 \\(v\\) \u662f \\(u\\) \u5728 \\(T\\) \u4e0a\u7684\u7956\u5148</li> <li>\u6a2a\u53c9\u8fb9\uff1a\u9664\u4e86 123 \u7684\u6240\u6709\u8fb9\uff0c\u5fc5\u7136\u6ee1\u8db3 \\(u \\to v,dfn_v&lt;dfn_u\\)\u3002</li> </ol>"}, {"location": "algor/graph/connectivity/scc/#tarjan", "title": "Tarjan \u7b97\u6cd5", "text": "<p>\u8003\u8651\u641c\u7d22\u6811\u4e0a\u7684\u8282\u70b9\u5982\u4f55\u624d\u80fd\u6210\u4e3a SCC \u5f53\u4e2d\u7684\u8282\u70b9\u3002</p> <p>\u9996\u5148\uff0c\u4e00\u4e2a\u5b64\u7acb\u7684\u70b9\uff08\u8fd9\u91cc\u6307\u8d70\u51fa\u53bb\u4e86\u5c31\u6ca1\u6cd5\u56de\u6765\uff09\u5fc5\u7136\u662f\u4e00\u4e2a SCC\u3002</p> <p>\u5982\u679c\u60f3\u8981\u66f4\u591a\u70b9\u52a0\u5165\u8fd9\u4e2a SCC\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u627e\u5230\u4e00\u4e2a\u73af\u3002</p> <p>\u90a3\u4e48\u540e\u5411\u8fb9\u5fc5\u7136\u662f\u6709\u7528\u7684\uff0c\u5047\u8bbe \\(v\\) \u662f \\(u\\) \u7684\u7956\u5148\uff0c\u90a3\u4e48\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u8def\u5f84\u4ece \\(v \\to u\\)\u3002</p> <p>\u800c\u8fd9\u91cc\u53c8\u5b58\u5728\u4e00\u6761\u540e\u5411\u8fb9 \\(u \\to v\\) \uff0c\u90a3\u4e48\u5fc5\u7136\u4f1a\u51fa\u73b0\u4e00\u4e2a\u73af\uff0c\u4e5f\u5c31\u51fa\u73b0\u4e86\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u3002</p> <p>\u800c\u6a2a\u53c9\u8fb9\u4e5f\u8bb8\u4f1a\u6709\u7528\uff0c\u53ea\u8981\u4ece \\(u\\) \u7ecf\u8fc7\u4e00\u4e2a\u6a2a\u53c9\u8fb9\u8d70\u5230 \\(v\\) \uff0c\u4e14 \\(v\\) \u53ef\u4ee5\u5230\u8fbe \\(u\\) \u7684\u7956\u5148\u8282\u70b9\uff0c\u90a3\u4e48\u4e5f\u4f1a\u51fa\u73b0\u4e00\u4e2a\u73af\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5728\u6d41\u56fe\u4e0a\u627e\u5230\u5c3d\u53ef\u80fd\u5927\u7684\uff0c\u7531 \\(T\\) \u7ecf\u8fc7\u6dfb\u52a0\u51e0\u6761\u540e\u5411\u8fb9\u548c\u6a2a\u53c9\u8fb9\u6784\u6210\u7684\u73af\u3002</p> <p>\u6240\u4ee5\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u503c \\(low_u\\) \uff0c\u8868\u793a \\(u\\) \u548c\u5b83\u5b50\u6811\u5f53\u4e2d\u7684\u8282\u70b9\u80fd\u5f80\u4e0a\uff08\u5728 \\(T\\) \u5f53\u4e2d\u7684\u4e0a\uff09\u8d70\u5230\u7684\u6700\u9ad8\uff08\u5728 \\(T\\) \u5f53\u4e2d\u6df1\u5ea6\u66f4\u4f4e\uff09\u7684\u8282\u70b9\u7684\u65f6\u95f4\u6233 \\(dfn\\) \u3002</p> <p>\u5982\u679c\u51fa\u73b0 \\(low_u=dfn_u\\)\uff0c\u4e5f\u5c31\u662f \\(u\\) \u4e0d\u53ef\u80fd\u518d\u5f80\u4e0a\u8d70\uff0c\u5b83\u7684 \\(low\\) \u5c31\u662f\u81ea\u5df1\u7684 \\(dfn\\) \u7684\u65f6\u5019\uff0c\u90a3\u4e48 \\(u\\) \u5fc5\u7136\u662f\u5b83\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5728 \\(T\\) \u4e0a\u6700\u9ad8\u7684\u70b9\u3002</p> <p>\u7136\u540e\u5728\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7684\u65f6\u5019\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u4fdd\u5b58\u5f53\u524d\u80fd\u4e0e\u4ece\u8fd9\u4e2a\u8282\u70b9\u51fa\u53d1\u7684\u540e\u5411\u8fb9\u548c\u6a2a\u53c9\u8fb9\u6784\u6210\u73af\u7684\u6240\u6709\u8282\u70b9\u3002</p> <p>\u8bb0 \\(anc(u)\\) \u8868\u793a \\(u\\) \u5728 \\(T\\) \u4e0a\u7684\u6240\u6709\u7956\u5148\u8282\u70b9\uff0c\u90a3\u4e48\u6808\u4e2d\u4fdd\u5b58\u7684\u5b9e\u9645\u4e0a\u5c31\u662f\u8fd9\u4e24\u7c7b\u8282\u70b9\uff1a</p> <ol> <li>\\(v \\in anc(u)\\)\uff0c\u4e14\u6709\u53ef\u80fd\u5b58\u5728\u540e\u5411\u8fb9 \\(u \\to v\\)\u3002</li> <li>\\(v \\in V\\) \uff0c\u4e14\u5b58\u5728\u8def\u5f84 \\(\\delta(v\\to w),w\\in anc_u\\)\u3002</li> </ol> <p>\u5728\u6ee1\u8db3 \\(low_u=dfn_u\\) \u7684\u65f6\u5019\uff0c\u628a\u6808\u7684\u8282\u70b9\u4e0d\u65ad\u5f39\u51fa\uff0c\u76f4\u5230 \\(u\\) \u51fa\u6808\uff0c\u6b64\u65f6\u5f53\u524d\u88ab\u5f39\u51fa\u7684\u6240\u6709\u8282\u70b9\u5c31\u6784\u6210\u4e00\u4e2a SCC\u3002</p> <p>\u5f88\u660e\u663e \\(anc(u)\\) \u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u5148\u4e8e \\(u\\) \u5165\u6808\u3002</p> <p>\u6240\u4ee5\u5728 \\(u\\) \u5f39\u51fa\u524d\u5f39\u51fa\u7684\u4e00\u5b9a\u662f\u7b2c\u4e8c\u7c7b\u8282\u70b9\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\uff1a</p> <p>\u6bcf\u6b21\u65b0\u8bbf\u95ee\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u521d\u59cb\u5316 \\(dfn=time + 1,low=dfn\\)\u3002</p> <p>\u7136\u540e\u8bbf\u95ee\u5b83\u7684\u6240\u6709\u51fa\u8fb9 \\((u,v)\\)\uff0c\u5982\u679c\u51fa\u8fb9\u5bf9\u5e94\u7684\u8282\u70b9 \\(v\\) \u6ca1\u6709\u8bbf\u95ee\u8fc7\uff08\u5f53\u524d\u8bbf\u95ee\u7684\u662f\u6811\u8fb9\uff09\uff0c\u90a3\u4e48\u5c31\u9012\u5f52\u7136\u540e\u7528 \\(low_v\\) \u66f4\u65b0 \\(low_u\\)\u3002</p> <p>\u53cd\u4e4b\uff0c\u5982\u679c \\(v\\) \u5df2\u7ecf\u5728\u6808\u4e2d\u4e86\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b58\u5728\u4e00\u6761\u540e\u5411\u8fb9\u6216\u8005\u6a2a\u53c9\u8fb9\u4ece \\(u\\) \u51fa\u53d1\u80fd\u5230\u66f4\u4e0a\u9762\u3002</p> <p>\u6839\u636e\u6808\u4e2d\u8282\u70b9\u7684\u6027\u8d28\uff0c\u7528 \\(dfn_v\\) \u66f4\u65b0 \\(low_u\\) \u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u8981\u662f \\(dfn_v\\) \u800c\u4e0d\u662f \\(low_v\\)\uff0cTarjan \u8001\u7237\u5b50\u4eb2\u81ea\u8bf4\u8fc7\u3002 </p> <p>\uff08TODO\uff1a\u81ea\u5df1\u5c1d\u8bd5\u8bc1\u660e\u4e00\u4e0b\u8fd9\u513f\u662f\u4e3a\u5565\uff09</p> <p>\u5982\u679c\u628a\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u770b\u4f5c\u4e00\u4e2a\u70b9\u3002</p> <p>\u90a3\u4e48\u7f29\u5b8c\u70b9\u4e4b\u540e\u7684\u56fe\u5c31\u662f\u4e00\u4e2a DAG\u3002</p> <p>\u5e76\u4e14 SCC \u7f16\u53f7\u7684\u987a\u5e8f\u5c31\u662f \u9006\u62d3\u6251\u5e8f\u3002</p> <p>\u7f29\u70b9\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u975e\u5e38\u65b9\u4fbf\u5730\u8fdb\u884c DP\uff0c\u56e0\u4e3a\u6b63\u5e38 DP \u7684\u987a\u5e8f\u672c\u6765\u5c31\u662f\u62d3\u6251\u5e8f\u3002</p> <p>\u4e00\u822c\u90fd\u662f\u76f4\u63a5\u9012\u63a8\u6c42\u89e3\u3002</p> Code <pre><code>std::stack&lt;int&gt;s;\nbool ins[si_n]; // in the stack or not\nint c[si_n]; //c[x] = the num of SCC which is x iside\nstd::vector&lt;int&gt;scc[si_n]; // scc[i] -&gt; all node in i-th scc (information of i-th scc)\n// \u5982\u679c\u6ca1\u6709\u5fc5\u8981\u7684\u8bdd\u53ef\u4ee5\u4e0d\u8981 vector\nint dfn[si_n],low[si_n];\nint n,m,cnt_t=0,tot=0; // tot = how many scc in the graph. \n\nvoid tarjan(int u){\ndfn[u]=low[u]=++cnt_t;\ns.push(u),ins[u]=true;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver;\nif(!dfn[v]){\ntarjan(v);\nlow[u]=min(low[u],low[v]);\n}\n// \u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u9012\u5f52\u641c\u7d22\u7136\u540e\u66f4\u65b0 low\u3002\nelse if(ins[v]) low[u]=min(low[u],dfn[v]);\n// \u5df2\u7ecf\u5728\u6808\u4e2d\u4e86\uff0c\u7528 dfn[v] \u6765\u66f4\u65b0 low[u]\u3002\n}\nif(dfn[u]==low[u]){\n++tot;\nint x;\ndo{\nx=s.top(),s.pop(),ins[x]=false;\nc[x]=tot,scc[tot].pb(x);\n}while(u!=x);\n} // \u51fa\u73b0\u4e86\u4e00\u4e2a SCC\u3002\n}\n\nEdge edag[si_m];\nint cnt_d=0;\nvoid add_n(int u,int v){\nedag[++cnt_d].ver=v,edag[cnt_d].Next=edag[u].head;\nedag[u].head=cnt_d;\n}\nvoid contract(){\nfor(register int u=1;u&lt;=n;++u){\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver;\nif(c[u]==c[v]) continue;\nadd_n(c[u],c[v]);\n}\n} // \u7f29\u70b9\u3002\n}\n</code></pre> <p>Tarjan \u7f29\u5b8c\u70b9\u4e4b\u540e\u7ed9 SCC \u6807\u8bb0\u7684\u987a\u5e8f\u662f\u9006\u62d3\u6251\u5e8f\u7684\u539f\u56e0\u975e\u5e38\u7b80\u5355\uff1b</p> <p>\u56e0\u4e3a Tarjan \u7684\u8bbf\u95ee\u987a\u5e8f\u662f\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7684\u987a\u5e8f\uff08\u56e0\u4e3a\u4f7f\u7528\u4e86\u6808\uff09\u3002</p> <p>\u90a3\u4e48\u4ece\u5c42\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u66f4\u9760\u4e0a\u7684 SCC \u88ab\u6807\u8bb0\u5230\u7684\u65f6\u95f4\u5fc5\u7136\u66f4\u665a\uff0c\u800c Tarjan \u7f29\u5b8c\u70b9\u4e4b\u540e SCC \u6784\u6210\u7684\u56fe\u5fc5\u7136\u662f\u4e00\u4e2a DAG\uff0c\u90a3\u4e48 SCC \u7684\u6807\u8bb0\u987a\u5e8f\u5c31\u4e00\u5b9a\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u9006\u62d3\u6251\u5e8f\u3002\uff08\u53ef\u4ee5\u770b\u8fd9\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\uff09\uff1a</p> <p></p>"}, {"location": "algor/math/group-theory/", "title": "\u7fa4\u8bba\u5c0f\u8bb0", "text": "<p>zyw \u5b66\u59d0\u63a8\u8350\u4e86\u4e00\u672c\u7761\u524d\u8bfb\u7269\uff1aContemporary Abstract Algebra - by Gallian </p> <p>\u521a\u597d OI \u91cc\u6709\u4e0d\u5c11\u5730\u65b9\u4f1a\u7528\u5230\u7fa4\u8bba\uff0c\u52a0\u4e0a\u4e4b\u524d\u90fd\u6ca1\u600e\u4e48\u7cfb\u7edf\u5b66\u8fc7\u7fa4\u8bba\uff0c\u9042\u5f00\u4e86\u8fd9\u7bc7\u535a\u5ba2\u3002</p> <p>\u53eb\u5c0f\u8bb0\u7684\u539f\u56e0\u662f\u53ea\u662f\u7b80\u5355\u7684\u8bb0\u5f55\uff0c\u5982\u679c\u4ee5\u540e\u6709\u673a\u4f1a\u6df1\u5165\u5b66\u4e60\u80af\u5b9a\u4f1a\u6269\u5145\u7684\u3002</p> <p>\u5495\u5495\u5495</p>"}, {"location": "algor/math/lagrange-interpolation/", "title": "\u62c9\u683c\u6717\u65e5\u63d2\u503c", "text": "<p>\u7b97\u662f\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u524d\u6bb5\u65f6\u95f4\u770b\u5230\u4e00\u4e2a\u6076\u81ed\u51fd\u6570\u8ba1\u7b97\u7528\u4e86\u8fd9\u4e2a\uff0c\u611f\u5174\u8da3\u5c31\u5b66\u4e86\u4e0b\u3002</p> <p>OI \u91cc\u7684\u7528\u6cd5\uff0c\u6211\u770b OI-wiki \u6ca1\u770b\u61c2\uff0c\u4e4b\u540e\u8865\u3002</p> <p>\u95ee\u9898\uff1a\u6211\u4eec\u73b0\u5728\u6709 \\(n\\) \u4e2a\u70b9 \\((x_i, y_i)\\)\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u4e00\u4e2a\u51fd\u6570\uff08\u591a\u9879\u5f0f\uff09\\(f(x)\\) \u6ee1\u8db3 \\(\\forall i, f(x_i) = y_i\\)\u3002</p> <p>\u62c9\u683c\u6717\u65e5\u4f2f\u7235\u63d0\u51fa\u4e86\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u505a\u6cd5\uff0c\u6211\u4e4b\u524d\u4e5f\u8003\u8651\u8fc7\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u6ca1\u6709\u5b9e\u73b0\u51fa\u6765\uff0c\u53ef\u80fd\u8fd9\u5c31\u662f\u6211\u548c\u795e\u4e4b\u95f4\u7684\u5dee\u8ddd\u5427\u3002</p> <p>\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u505a\u6cd5\uff0c\u89e3\u65b9\u7a0b\u4e0d\u597d\u641e\u7684\u8bdd\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8003\u8651\u6784\u9020\u4e00\u4e9b\u7c7b\u4f3c\"\u5f00\u5173\"1\u7684\u4e1c\u897f\u3002</p> <p>\u76f8\u5f53\u4e8e\u662f\uff0c\u6709\u4e00\u4e2a\u51fd\u6570 \\(g_i(x)\\)\uff0c\u53ea\u6709\u5728 \\(x = x_i\\) \u7684\u65f6\u5019\u4f1a\u53d6\u5230 \\(y_i\\)\uff0c\u5176\u4ed6\u65f6\u5019\u90fd\u53ea\u4f1a\u53d6\u5230 \\(0\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u8fd9\u6837\u7684 \\(n\\) \u4e2a\u51fd\u6570\u5206\u522b\u6c42\u548c\u5c31\u884c\u4e86\u3002</p> <p>\u66f4\u4e00\u822c\u7684\u5f62\u5f0f\u957f\u6210\u8fd9\u6837\uff1a\\(f(x) = \\sum\\limits_{i = 1}^n y_if_i(x)\\)\uff0c\\(f_i(x)\\) \u5c31\u662f\u6211\u4eec\u6784\u9020\u7684\u201c\u5f00\u5173\u201d\uff0c\u8fd9\u4e1c\u897f\u4e5f\u53eb\u505a\u57fa\u51fd\u6570\u3002</p> <p>\u4e0d\u96be\u60f3\u5230 \\(f_i(x)\\) \u7684\u4e00\u79cd\u6784\u9020\uff1a\\(\\prod\\limits_{j = 1\\land j\\not=i}^n\\dfrac{x - x_j}{x_i - x_j}\\)\u3002</p> <p>\u5c55\u5f00\u53ef\u80fd\u66f4\u76f4\u89c2\uff1a\\(f_1(x) = \\dfrac{(x - x_2)(x - x_3)\\dots(x - x_n)}{(x_1 - x_2)(x_1 - x_3)\\dots(x_1 - x_n)}\\)</p> <p>\u7136\u540e\u5e26\u56de\u539f\u51fd\u6570\u89e3\u51fa\u5373\u53ef\u3002</p> <p>\u5c0f\u7ec3\u4e60\uff1a</p> <p>\u82e5 \\(f(x)\\) \u6ee1\u8db3\uff1a\\(f(1) = 1, f(2) = 3, f(3) = 5, f(4) = a_1, f(5) = a_2\\)\u3002</p> <p>\u90a3\u4e48 \\(a_1, a_2 = ?\\) </p> <p>\u7b54\u6848\uff1a\\(a_1 = 114514, a_2 = 1919810\\)\u3002</p> <p>\u6784\u9020\u57fa\u51fd\u6570\uff1a</p> \\[ \\begin{aligned} f_1(x) &amp;= 439686176034x^4-894467657863599288x^3+96670016881119792168198x^2-773316306253317660861720x+1449942917421022589993400 \\\\ f_2(x) &amp;= -219839019377\\,x^4+447225112289212410\\,x^3-48333219453900921255953 \\,x^2+289985452779219448973820\\,x-241652680550210977910900 \\\\  f_3(x) &amp;= \\dfrac{219834950745\\,x^4-447216395679174360\\,x^3+48331430503867261481055 \\,x^2-193319908211118614687340\\,x+144988924923427197429900}{2} \\\\ f_4(x) &amp;= -\\dfrac{23672016190564304\\,x^4-45445986450952971540976\\,x^3+ 409012505081637691139152\\,x^2-1045253143344809757096080\\,x+ 681686601042108846933600}{114513} \\\\ f_5(x) &amp;= {{6653698369034154960\\,x^4-762001498316898528484080\\,x^3+ 6857627570346682775369040\\,x^2-17524756951201811597381520\\,x+ 11429124225473658316341600}\\over{1919809}} \\end{aligned} \\] <p>\u6240\u4ee5\u5f53 \\(f(x)\\) \u6ee1\u8db3\uff1a</p> \\[ f(x) = \\dfrac{855711694412849661824705}{219843088017}x^4 -\\dfrac{49153001818340526730091159410}{219843088017}x^3 + \\dfrac{31881493579541826570550093377433241}{439686176034} x^2 -\\dfrac{85010938062374872741332328977740390}{219843088017}x + \\dfrac{93858093625853837594397793694159950}{73281029339} \\] <p>\u65f6\uff0c\\(f(4) = 114514, f(5) = 1919810\\)\u3002</p> <p>\u54c7\uff0c\u771f\u6709\u903b\u8f91\uff0c\u6570\u5b66\u771f\u662f\u6709\u8da3\uff01\u8fd9\u4e2a\u53ef\u4ee5\u6709\uff01</p> <ol> <li> <p>\u5982\u4f55\u76f4\u89c2\u5730\u7406\u89e3\u62c9\u683c\u6717\u65e5\u63d2\u503c\u6cd5\uff1f - JoJo\u738b\u9880\u7684\u56de\u7b54 - \u77e5\u4e4e \u21a9</p> </li> </ol>"}, {"location": "algor/math/probability/", "title": "\u6982\u7387\u548c\u671f\u671b", "text": "<p>\u8fd9\u90e8\u5206\u5c31\u76f4\u63a5\u770b\u6211\u7ed9\u5b66\u5f1f\u7684\u8bb2\u7a3f\u5427\u3002</p> <p>\u7b49\u6211\u5f04\u660e\u767d\u4e86\u548b\u5185\u5d4c pdf \u663e\u793a\u5668\u518d\u79fb\u8fc7\u6765\u3002</p> <p>link</p>"}, {"location": "algor/math/combinatorics/catalan/", "title": "\u5361\u7279\u5170\u6570", "text": "<p>\u8f6c\u8f7d\u81eaOI-Wiki</p>"}, {"location": "algor/math/combinatorics/catalan/#catalan", "title": "Catalan \u6570\u5217", "text": "<p>\u4ee5\u4e0b\u95ee\u9898\u5c5e\u4e8e Catalan \u6570\u5217\uff1a</p> <ol> <li>\u6709 \\(2n\\) \u4e2a\u4eba\u6392\u6210\u4e00\u884c\u8fdb\u5165\u5267\u573a\u3002\u5165\u573a\u8d39 5 \u5143\u3002\u5176\u4e2d\u53ea\u6709 \\(n\\) \u4e2a\u4eba\u6709\u4e00\u5f20 5 \u5143\u949e\u7968\uff0c\u53e6\u5916 \\(n\\) \u4eba\u53ea\u6709 10 \u5143\u949e\u7968\uff0c\u5267\u9662\u65e0\u5176\u5b83\u949e\u7968\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\u4f7f\u5f97\u53ea\u8981\u6709 10 \u5143\u7684\u4eba\u4e70\u7968\uff0c\u552e\u7968\u5904\u5c31\u6709 5 \u5143\u7684\u949e\u7968\u627e\u96f6\uff1f</li> <li>\u4e00\u4f4d\u5927\u57ce\u5e02\u7684\u5f8b\u5e08\u5728\u5979\u4f4f\u6240\u4ee5\u5317 \\(n\\) \u4e2a\u8857\u533a\u548c\u4ee5\u4e1c \\(n\\) \u4e2a\u8857\u533a\u5904\u5de5\u4f5c\u3002\u6bcf\u5929\u5979\u8d70 \\(2n\\) \u4e2a\u8857\u533a\u53bb\u4e0a\u73ed\u3002\u5982\u679c\u4ed6\u4ece\u4e0d\u7a7f\u8d8a\uff08\u4f46\u53ef\u4ee5\u78b0\u5230\uff09\u4ece\u5bb6\u5230\u529e\u516c\u5ba4\u7684\u5bf9\u89d2\u7ebf\uff0c\u90a3\u4e48\u6709\u591a\u5c11\u6761\u53ef\u80fd\u7684\u9053\u8def\uff1f</li> <li>\u5728\u5706\u4e0a\u9009\u62e9 \\(2n\\) \u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e9b\u70b9\u6210\u5bf9\u8fde\u63a5\u8d77\u6765\u4f7f\u5f97\u6240\u5f97\u5230\u7684 \\(n\\) \u6761\u7ebf\u6bb5\u4e0d\u76f8\u4ea4\u7684\u65b9\u6cd5\u6570\uff1f</li> <li>\u5bf9\u89d2\u7ebf\u4e0d\u76f8\u4ea4\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u4e00\u4e2a\u51f8\u591a\u8fb9\u5f62\u533a\u57df\u5206\u6210\u4e09\u89d2\u5f62\u533a\u57df\u7684\u65b9\u6cd5\u6570\uff1f</li> <li>\u4e00\u4e2a\u6808\uff08\u65e0\u7a77\u5927\uff09\u7684\u8fdb\u6808\u5e8f\u5217\u4e3a \\(1,2,3, \\cdots ,n\\) \u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u51fa\u6808\u5e8f\u5217\uff1f</li> <li>\\(n\\) \u4e2a\u7ed3\u70b9\u53ef\u6784\u9020\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u4e8c\u53c9\u6811\uff1f</li> <li>\\(n\\) \u4e2a \\(+1\\) \u548c \\(n\\) \u4e2a \\(-1\\) \u6784\u6210 \\(2n\\) \u9879 \\(a_1,a_2, \\cdots ,a_{2n}\\)\uff0c\u5176\u90e8\u5206\u548c\u6ee1\u8db3 \\(a_1+a_2+ \\cdots +a_k \\geq 0(k=1,2,3, \\cdots ,2n)\\) \u5bf9\u4e0e \\(n\\) \u8be5\u6570\u5217\u4e3a\uff1f</li> </ol> <p>\u5176\u5bf9\u5e94\u7684\u5e8f\u5217\u4e3a\uff1a</p> \\(H_0\\) \\(H_1\\) \\(H_2\\) \\(H_3\\) \\(H_4\\) \\(H_5\\) \\(H_6\\) ... 1 1 2 5 14 42 132 ... <p>(Catalan \u6570\u5217\uff09</p>"}, {"location": "algor/math/combinatorics/catalan/#_1", "title": "\u9012\u63a8\u5f0f", "text": "<p>\u8be5\u9012\u63a8\u5173\u7cfb\u7684\u89e3\u4e3a\uff1a</p> \\[ H_n = \\frac{\\binom{2n}{n}}{n+1}(n \\geq 2, n \\in \\mathbf{N_{+}}) \\] <p>\u5173\u4e8e Catalan \u6570\u7684\u5e38\u89c1\u516c\u5f0f\uff1a</p> \\[ H_n = \\begin{cases}     \\sum_{i=1}^{n} H_{i-1} H_{n-i} &amp; n \\geq 2, n \\in \\mathbf{N_{+}}\\\\     1 &amp; n = 0, 1 \\end{cases} \\] \\[ H_n = \\frac{H_{n-1} (4n-2)}{n+1} \\] \\[ H_n = \\binom{2n}{n} - \\binom{2n}{n-1} \\]  \u4f8b\u9898\u6d1b\u8c37 P1044 \u6808 <p>\u9898\u76ee\u5927\u610f\uff1a\u5165\u6808\u987a\u5e8f\u4e3a \\(1,2,\\ldots ,n\\)\uff0c\u6c42\u6240\u6709\u53ef\u80fd\u7684\u51fa\u6808\u987a\u5e8f\u7684\u603b\u6570\u3002</p> <pre><code>// C++ Version\n#include &lt;iostream&gt;\nusing namespace std;\nint n;\nlong long f[25];\n\nint main() {\nf[0] = 1;\ncin &gt;&gt; n;\nfor (int i = 1; i &lt;= n; i++) f[i] = f[i - 1] * (4 * i - 2) / (i + 1);\n// \u8fd9\u91cc\u7528\u7684\u662f\u5e38\u89c1\u516c\u5f0f2\ncout &lt;&lt; f[n] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code># Python Version\nf = [0] * 25\nf[0] = 1\nn = int(input())\nfor i in range(1, n + 1):\n    f[i] = int(f[i - 1] * (4 * i - 2) // (i + 1))\n    # \u8fd9\u91cc\u7528\u7684\u662f\u5e38\u89c1\u516c\u5f0f2\nprint(f[n])\n</code></pre>"}, {"location": "algor/math/combinatorics/catalan/#_2", "title": "\u8def\u5f84\u8ba1\u6570\u95ee\u9898", "text": "<p>\u975e\u964d\u8def\u5f84\u662f\u6307\u53ea\u80fd\u5411\u4e0a\u6216\u5411\u53f3\u8d70\u7684\u8def\u5f84\u3002</p> <ol> <li> <p>\u4ece \\((0,0)\\) \u5230 \\((m,n)\\) \u7684\u975e\u964d\u8def\u5f84\u6570\u7b49\u4e8e \\(m\\) \u4e2a \\(x\\) \u548c \\(n\\) \u4e2a \\(y\\) \u7684\u6392\u5217\u6570\uff0c\u5373 \\(\\dbinom{n + m}{m}\\)\u3002</p> </li> <li> <p>\u4ece \\((0,0)\\) \u5230 \\((n,n)\\) \u7684\u9664\u7aef\u70b9\u5916\u4e0d\u63a5\u89e6\u76f4\u7ebf \\(y=x\\) \u7684\u975e\u964d\u8def\u5f84\u6570\uff1a</p> <p>\u5148\u8003\u8651 \\(y=x\\) \u4e0b\u65b9\u7684\u8def\u5f84\uff0c\u90fd\u662f\u4ece \\((0, 0)\\) \u51fa\u53d1\uff0c\u7ecf\u8fc7 \\((1, 0)\\) \u53ca \\((n, n-1)\\) \u5230 \\((n,n)\\)\uff0c\u53ef\u4ee5\u770b\u505a\u662f \\((1,0)\\) \u5230 \\((n,n-1)\\) \u4e0d\u63a5\u89e6 \\(y=x\\) \u7684\u975e\u964d\u8def\u5f84\u6570\u3002</p> <p>\u6240\u6709\u7684\u7684\u975e\u964d\u8def\u5f84\u6709 \\(\\dbinom{2n-2}{n-1}\\) \u6761\u3002\u5bf9\u4e8e\u8fd9\u91cc\u9762\u4efb\u610f\u4e00\u6761\u63a5\u89e6\u4e86 \\(y=x\\) \u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u628a\u5b83\u6700\u540e\u79bb\u5f00\u8fd9\u6761\u7ebf\u7684\u70b9\u5230 \\((1,0)\\) \u4e4b\u95f4\u7684\u90e8\u5206\u5173\u4e8e \\(y=x\\) \u5bf9\u79f0\u53d8\u6362\uff0c\u5c31\u5f97\u5230\u4ece \\((0,1)\\) \u5230 \\((n,n-1)\\) \u7684\u4e00\u6761\u975e\u964d\u8def\u5f84\u3002\u53cd\u4e4b\u4e5f\u6210\u7acb\u3002\u4ece\u800c \\(y=x\\) \u4e0b\u65b9\u7684\u975e\u964d\u8def\u5f84\u6570\u662f \\(\\dbinom{2n-2}{n-1} - \\dbinom{2n-2}{n}\\)\u3002\u6839\u636e\u5bf9\u79f0\u6027\u53ef\u77e5\u6240\u6c42\u7b54\u6848\u4e3a \\(2\\dbinom{2n-2}{n-1} - 2\\dbinom{2n-2}{n}\\)\u3002</p> </li> <li> <p>\u4ece \\((0,0)\\) \u5230 \\((n,n)\\) \u7684\u9664\u7aef\u70b9\u5916\u4e0d\u7a7f\u8fc7\u76f4\u7ebf \\(y=x\\) \u7684\u975e\u964d\u8def\u5f84\u6570\uff1a</p> <p>\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\uff1a\\(\\dfrac{2}{n+1}\\dbinom{2n}{n}\\)</p> </li> </ol>"}, {"location": "algor/math/combinatorics/combination/", "title": "\u6392\u5217\u7ec4\u5408", "text": ""}, {"location": "algor/math/combinatorics/combination/#_1", "title": "\u6392\u5217\u7ec4\u5408\u57fa\u7840", "text": ""}, {"location": "algor/math/combinatorics/combination/#_2", "title": "\u8ba1\u6570\u539f\u7406", "text": "<ul> <li>\u52a0\u6cd5\u539f\u7406: \u5982\u679c\u5b8c\u6210\u4e00\u4e2a\u4e8b\u60c5\u6709 \\(n\\) \u7c7b\u65b9\u6cd5\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u7c7b\u65b9\u6cd5\u6709 \\(a_i\\) \u79cd\u7b56\u7565\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u603b\u5171\u7684\u65b9\u6848\u6570\u4e3a \\(\\sum a_i\\) \u79cd\u3002</li> <li>\u52a0\u6cd5\u539f\u7406\uff1a\u5982\u679c\u5b8c\u6210\u4e00\u4e2a\u4e8b\u60c5\u6709 \\(n\\) \u4e2a\u6b65\u9aa4\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u4e2a\u6b65\u9aa4\u6709 \\(a_i\\) \u79cd\u7b56\u7565\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u662f\u524d\u540e\u5173\u8054\u7684\uff0c\u6240\u4ee5\u603b\u5171\u7684\u65b9\u6848\u6570\u4e3a \\(\\prod a_i\\) \u79cd\u3002</li> </ul>"}, {"location": "algor/math/combinatorics/combination/#_3", "title": "\u6392\u5217\u6570\u548c\u7ec4\u5408\u6570", "text": ""}, {"location": "algor/math/combinatorics/combination/#_4", "title": "\u6392\u5217\u6570", "text": "<p>\u5b9a\u4e49\u4ece \\(n\\) \u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u9009 \\(m\\) \u4e2a\u5143\u7d20\u51fa\u6765\uff08\\(m \\le n\\)\uff09\uff0c\u8fdb\u884c\u6392\u5217\uff08\u6709\u5e8f\uff09\uff0c\u6240\u80fd\u5f97\u5230\u7684\u603b\u6392\u5217\u6570\u4e3a \\(\\text A_n^m\\)\u3002</p> <p>\u6bd4\u5982 \\(1, 2, 3\\)\uff0c\u4efb\u610f\u62ff\u4e24\u4e2a\u51fa\u6765\u6392\u5217\u5c31\u6709 \\([1, 2]; [1,3]; [2, 1]; [2, 3]; [3,1]; [3,2]\\) \u8fd9\u516d\u79cd\uff0c\u5373 \\(\\text A_3^2 = 6\\)</p> <p>\u8ba1\u7b97\u53ef\u4ee5\u8003\u8651\u628a\u95ee\u9898\u8f6c\u5316\u6210\u6709 \\(n\\) \u4e2a\u4eba\uff0c\u6392\u957f\u5ea6\u4e3a \\(m\\) \u7684\u4e00\u4e2a\u961f\uff0c\u7b2c \\(1\\) \u4e2a\u4f4d\u7f6e\u6709 \\(n\\) \u79cd\u9009\u6cd5\uff0c\u7b2c \\(2\\) \u4e2a\u4f4d\u7f6e\u6709 \\(n - 1\\) \u79cd\u9009\u6cd5\uff0c\u7b2c \\(m\\) \u4e2a\u4f4d\u7f6e\u6709 \\(n - m + 1\\) \u79cd\u9009\u6cd5\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\u53ef\u4ee5\u5f97\u5230\u6392\u5217\u6570\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a</p> \\[ \\text{A}_n^m = \\prod\\limits_{i = 1}^{m}(n - i + 1) = \\dfrac{n!}{(n - m)!} \\] <p>\u5176\u4e2d\u5168\u6392\u5217\u4e3a \\(\\text A_n^n = n!\\)\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_5", "title": "\u7ec4\u5408\u6570", "text": "<p>\u5b9a\u4e49\u4ece \\(n\\) \u4e2a\u4e0d\u540c\u5143\u7d20\u79cd\u62ff \\(m\\) \u4e2a\u5143\u7d20\u51fa\u6765 \\((m \\le n)\\)\uff0c\u8fdb\u884c\u7ec4\u5408\uff08\u65e0\u5e8f\uff09\uff0c\u6240\u80fd\u5f97\u5230\u7684\u603b\u6392\u5217\u6570\u4e3a \\(\\text C_n^m\\)\uff0c\u4e5f\u8bb0\u4f5c \\(\\dbinom{n}{m}\\)\u3002</p> <p>\u6bd4\u5982 \\(1,2,3\\)\uff0c\u4efb\u610f\u62ff\u4e24\u4e2a\u51fa\u6765\u7ec4\u5408\u5c31\u6709 \\(\\{1,2\\}; \\{2, 3\\}; \\{1, 3\\}\\) \u8fd9\u4e09\u79cd\uff0c\u5373 \\(\\dbinom{3}{2} = 3\\)\u3002</p> <p>\u8ba1\u7b97\u53ef\u4ee5\u4ece\u6392\u5217\u6570\u90a3\u91cc\u8f6c\u5316\uff0c\u5047\u8bbe\u6211\u4eec\u62ff\u4e86 \\(m\\) \u4e2a\u4eba\u51fa\u6765\u6392\u5217\uff0c\u663e\u7136\u8fd9 \\(m\\) \u4e2a\u4eba\u7684 \\(m!\\) \u79cd\u6392\u5217\u90fd\u4f1a\u88ab\u8ba1\u7b97\uff0c\u5728\u7ec4\u5408\u91cc\u9762\u4f1a\u88ab\u7b97\u4f5c\u4e00\u4e2a\uff0c\u6240\u4ee5\u5728\u6392\u5217\u6570\u7684\u57fa\u7840\u4e0a\u9664\u6389 \\(m!\\)  \u5373\u53ef\u3002</p> \\[ \\dbinom{n}{m} = \\dfrac{n!}{m!(n-m)!} \\] <p>\u5176\u4e2d\u8fb9\u754c\u4e3a\uff1a \\(\\dbinom{n}{0} = 1\\)\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_6", "title": "\u4e8c\u9879\u5f0f\u5b9a\u7406", "text": "\\[ (a + b)^n = \\sum\\limits_{i = 0}^{n}\\dbinom{n}{i}a^{n - i}b^{i} \\] <p>\u5176\u4e2d \\(\\displaystyle \\dbinom{n}{i} a^{n - i}b^i\\) \u53eb\u505a \\((a + b)^n\\) \u5c55\u5f00\u5f0f\u7684\u7b2c \\(i + 1\\) \u9879 \\(T_{i + 1}\\)\uff0c\u6ce8\u610f \\((a + b)^n, (b + a)^n\\) \u7684\u5c55\u5f00\u5f0f\u7684\u7b2c \\(i\\) \u9879\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> <p>\\((a - b)^n\\) \u7684\u5c55\u5f00\u5f0f\u901a\u9879\u591a\u4e86\u4e00\u4e2a\u5bb9\u65a5\u7cfb\u6570\u4e00\u6837\u7684\u4e1c\u897f \uff1a\\(\\displaystyle T_{i + 1} = (-1)^i \\dbinom{n}{i} a^{n - i}b^i\\)\u3002</p> <p>\u4e8c\u9879\u5f0f\u5b9a\u7406\u4e5f\u53ef\u4ee5\u6269\u5c55\u4e3a\u591a\u9879\u5f0f\u7684\u5f62\u5f0f\uff0c\u5728\u6b64\u4e0d\u5c55\u5f00\u3002</p> <p>\u6240\u4ee5\uff0c\\(\\dbinom{n}{m}\\) \u4e5f\u88ab\u53eb\u505a\u4e8c\u9879\u5f0f\u7cfb\u6570\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_7", "title": "\u7ec4\u5408\u6570\u6027\u8d28", "text": "<p>I. </p> \\[ \\dbinom{n}{m}=\\dbinom{n}{n-m} \\] <p>\u8fd9\u4e2a\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u4f60\u9009 \\(m\\) \u4e2a\u548c\u9009 \\(n - m\\) \u4e2a\u7684\u60c5\u51b5\u662f\u6346\u7ed1\u8d77\u6765\u7684\u3002</p> <p>II.</p> \\[ \\dbinom{n}{k} = \\dfrac{n}{k} \\dbinom{n-1}{k-1} \\] <p>\u8fd9\u4e2a\u4e5f\u662f\u663e\u7136\u7684\uff0c\u6839\u636e\u5b9a\u4e49\u5c55\u5f00\u5c31\u53ef\u4ee5\u5f97\u5230\u3002</p> <p>\u4e5f\u53ef\u4ee5\u5199\u4f5c</p> \\[ k\\dbinom{n}{k} = n\\dbinom{n - 1}{k - 1} \\] <p>III.</p> \\[ \\dbinom{n}{m}=\\dbinom{n-1}{m}+\\dbinom{n-1}{m-1} \\] <p>\u8fd9\u4e2a\u5c31\u662f\u7ec4\u5408\u6570\u7684\u9012\u63a8\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u6768\u8f89\u4e09\u89d2\u3002</p> <p>IV. </p> \\[ \\dbinom{n}{0}+\\dbinom{n}{1}+\\cdots+\\dbinom{n}{n}=\\sum_{i=0}^n\\dbinom{n}{i}=2^n \\] <p>\u8fd9\u662f\u4e8c\u9879\u5f0f\u5b9a\u7406\u7684\u7279\u6b8a\u60c5\u51b5\u3002\u53d6 \\(a=b=1\\) \u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>V.</p> \\[ \\sum_{i=0}^n(-1)^i\\dbinom{n}{i}=[n=0] \\] <p>\u4e8c\u9879\u5f0f\u5b9a\u7406\u7684\u53e6\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u53ef\u53d6 \\(a=1, b=-1\\)\u3002\u5f0f\u5b50\u7684\u7279\u6b8a\u60c5\u51b5\u662f\u53d6 \\(n=0\\) \u65f6\u7b54\u6848\u4e3a \\(1\\)\u3002</p> <p>\u540e\u9762\u90a3\u4e2a\u662f Iverson Bracket.</p> <p>VI.</p> \\[ \\sum_{i=0}^m \\dbinom{n}{i}\\dbinom{m}{m-i} = \\dbinom{m+n}{m}\\ \\ \\ (n \\geq m) \\] <p>\u8fd9\u4e2a\u5c31\u662f\u8303\u5fb7\u8499\u5fb7\u5377\u79ef\u7684\u63a8\u8bba\u3002</p> <p>VII.</p> \\[ \\sum_{i=0}^n\\dbinom{n}{i}^2=\\dbinom{2n}{n} \\] <p>\u4ecd\u65e7\u662f\u8303\u5fb7\u8499\u5fb7\u5377\u79ef\u7684\u63a8\u8bba.</p> <p>VIII.</p> \\[ \\sum_{l=0}^n\\dbinom{l}{k} = \\dbinom{n+1}{k+1} \\] <p>\u901a\u8fc7\u7ec4\u5408\u5206\u6790\u4e00\u4e00\u8003\u8651 \\(S={a_1, a_2, \\cdots, a_{n+1}}\\) \u7684 \\(k+1\\) \u5b50\u96c6\u6570\u53ef\u4ee5\u5f97\u8bc1\uff0c\u5728\u6052\u7b49\u5f0f\u8bc1\u660e\u4e2d\u6bd4\u8f83\u5e38\u7528\u3002</p> <p>IX.</p> \\[ \\dbinom{n}{r}\\dbinom{r}{k} = \\dbinom{n}{k}\\dbinom{n-k}{r-k} \\] <p>\u7528\u5b9a\u4e49\u5c55\u5f00\u4e00\u4e0b\u5c31\u53ef\u4ee5\u8bc1\u660e\u4e86\uff0c\u5f0f\u5b50\u5f62\u5f0f\u5f88\u597d\u8bb0\u3002</p> <p>X.</p> \\[ \\sum_{i=0}^n\\dbinom{n-i}{i}=F_{n+1} \\] <p>\u5176\u4e2d \\(F\\) \u662f\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002</p> <p>\u8fd9\u4e2a\u6211\u4e0d\u4f1a\u8bc1\u660e\uff0c\u6682\u65f6\u5495\u4e86\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_8", "title": "\u51e0\u4e2a\u57fa\u672c\u65b9\u6cd5", "text": ""}, {"location": "algor/math/combinatorics/combination/#_9", "title": "\u6346\u7ed1\u6cd5", "text": "<p>\u8981\u6c42\u67d0\u51e0\u4e2a\u5143\u7d20\u6392\u5217\u7ec4\u5408\u7684\u65f6\u5019\u5fc5\u987b\u76f8\u90bb\u3002</p> <p>\u505a\u6cd5\u5927\u6982\u5c31\u662f\u628a\u4ed6\u4eec\u6346\u7ed1\u8d77\u6765\uff0c\u7136\u540e\u7b97\u6210\u4e00\u4e2a\u5143\u7d20\u505a\u6392\u5217\uff0c\u518d\u5728\u5185\u90e8\u505a\u6392\u5217\u3002</p> \u4f8b\u9898 <p>\u67d0\u56fd\u5bb6\u96c6\u8bad\u961f\u5171 \\(7\\) \u4eba\u5408\u5f71\u7559\u5ff5\uff0c\u8981\u6c42\u7532\u9009\u624b\u548c\u4e59\u9009\u624b\u5fc5\u987b\u7ad9\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u4e00\u5171\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u6392\u6cd5\uff1f</p> <p>\u7b80\u5355\u7684\u95ee\u9898\uff0c\u628a\u7532\u548c\u4e59\u6346\u7ed1\uff0c\u7136\u540e\u6392\u5217\uff0c\u7b54\u6848\u662f \\(\\text A^{6}_{6} = 6!\\) \u79cd\u3002</p> <p>\u7136\u540e\u7532\u4e59\u5185\u90e8\u6709 \\(\\text A^2_2 = 2!\\) \u79cd\u7b54\u6848\uff0c\u4e58\u6cd5\u539f\u7406\uff0c\u7b54\u6848\u7b49\u4e8e \\(6!2! = 1140\\)\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_10", "title": "\u63d2\u7a7a\u6cd5", "text": "<p>\u8981\u6c42\u67d0\u51e0\u4e2a\u5143\u7d20\u6392\u5217\u7ec4\u5408\u7684\u65f6\u5019\u5fc5\u987b\u4e0d\u76f8\u90bb\u3002</p> <p>\u505a\u6cd5\u5927\u6982\u5c31\u662f\u628a\u8fd9\u51e0\u4e2a\u5143\u7d20\u63d0\u51fa\u6765\uff0c\u5269\u4e0b\u7684\u6392\u5217\u4e00\u6b21\u3002</p> <p>\u7136\u540e\u628a\u8fd9\u51e0\u4e2a\u63d0\u51fa\u6765\u7684\u5143\u7d20\u63d2\u5230\u7a7a\u91cc\u9762\u53bb\u3002</p> \u4f8b\u9898 <p>\u67d0\u56fd\u5bb6\u96c6\u8bad\u961f\u5171 \\(7\\) \u4eba\u5408\u5f71\u7559\u5ff5\uff0c\u8981\u6c42\u7532\u9009\u624b\u548c\u4e59\u9009\u624b\u5fc5\u987b\u4e0d\u7ad9\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u4e00\u5171\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u6392\u6cd5\uff1f</p> <p>\u7b80\u5355\u7684\u95ee\u9898\uff0c\u5148\u628a\u5269\u4e0b \\(5\\) \u4e2a\u4eba\u62ff\u51fa\u6765\u6392\u5217 \\(\\text A_5^5\\) \u79cd\u60c5\u51b5\u3002</p> <p>\u7136\u540e\u7532\u4e59\u53ef\u4ee5\u7ad9\u5728\u4e24\u4e24\u4e4b\u95f4\u7684\u7a7a\u6216\u8005\u5934\u5c3e\uff0c\u4e00\u5171\u6709 \\(6\\) \u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u9009\uff0c\u73b0\u5728\u8981\u653e\u4e24\u4e2a\u4eba\u8fdb\u53bb\uff0c\u672c\u8d28\u53ef\u4ee5\u8f6c\u5316\u4e3a \\(6\\) \u4e2a\u5143\u7d20\u62bd\u4e24\u4e2a\u51fa\u6765\u505a\u6392\u5217\uff0c\u6240\u4ee5\u6709 \\(\\text A_6^2\\) \u79cd\u60c5\u51b5\u3002</p> <p>\u4e58\u6cd5\u539f\u7406\uff0c\u7b54\u6848\u662f \\(\\text A_5^5 \\text A_6^2\\)\u3002</p> \u548c\u6346\u7ed1\u6cd5\u7ed3\u5408\u7684\u4f8b\u9898 <p>\u67d0\u56fd\u5bb6\u96c6\u8bad\u961f\u5171 \\(7\\) \u4eba\u5408\u5f71\u7559\u5ff5\uff0c\u8981\u6c42\u7532\u9009\u624b\u548c\u4e59\u9009\u624b\u5fc5\u987b\u7ad9\u5728\u4e00\u8d77\u4e14\u4ed6\u4eec\u4efb\u610f\u4e00\u4f4d\u4e0d\u80fd\u548c\u4e19\u9009\u624b\u7ad9\u5728\u4e00\u8d77\uff0c\u90a3\u4e48\u4e00\u5171\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u6392\u6cd5\uff1f</p> <p>\u7b80\u5355\u7684\u95ee\u9898\uff0c\u5148\u628a\u7532\u4e59\u6346\u7ed1\uff0c\u7136\u540e\u7532\u4e59\u4e19\u62c9\u51fa\u6765\u5269\u4e0b\u7684\u505a\u6392\u5217\uff0c\u63d2\u7a7a\u4e4b\u540e\u7532\u4e59\u5185\u90e8\u518d\u6392\u5217\u3002</p> <p>\u7b54\u6848\u662f \\(\\text A_4^4 \\text A_5^3 \\text A_2^2\\)\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_11", "title": "\u63d2\u677f\u6cd5", "text": "\u4e3a\u4ec0\u4e48\u8fd9\u91cc\u548c OI-wiki \u4e00\u6837 <p>\uff08OI-Wiki \u4e0a\u8fd9\u90e8\u5206\u662f\u6211\u5199\u7684\uff0c\u53ef\u4ee5\u770b\u6211\u5f53\u65f6\u7684 Pull Request OI-wiki#4278\uff09</p> <p>\u63d2\u677f\u6cd5\uff08Stars and bars\uff09\u662f\u7528\u4e8e\u6c42\u4e00\u7c7b\u7ed9\u76f8\u540c\u5143\u7d20\u5206\u7ec4\u7684\u65b9\u6848\u6570\u7684\u4e00\u79cd\u6280\u5de7\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u6c42\u4e00\u7c7b\u7ebf\u6027\u4e0d\u5b9a\u65b9\u7a0b\u7684\u89e3\u7684\u7ec4\u6570\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_12", "title": "\u6b63\u6574\u6570\u548c\u7684\u6570\u76ee", "text": "<p>\u95ee\u9898\u4e00\uff1a\u73b0\u6709 \\(n\\) \u4e2a \u5b8c\u5168\u76f8\u540c \u7684\u5143\u7d20\uff0c\u8981\u6c42\u5c06\u5176\u5206\u4e3a \\(k\\) \u7ec4\uff0c\u4fdd\u8bc1\u6bcf\u7ec4\u81f3\u5c11\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u4e00\u5171\u6709\u591a\u5c11\u79cd\u5206\u6cd5\uff1f</p> <p>\u8003\u8651\u62ff \\(k - 1\\) \u5757\u677f\u5b50\u63d2\u5165\u5230 \\(n\\) \u4e2a\u5143\u7d20\u4e24\u4e24\u5f62\u6210\u7684 \\(n - 1\\) \u4e2a\u7a7a\u91cc\u9762\u3002</p> <p>\u56e0\u4e3a\u5143\u7d20\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f \\(\\dbinom{n - 1}{k - 1}\\)\u3002</p> <p>\u672c\u8d28\u662f\u6c42 \\(x_1+x_2+\\cdots+x_k=n\\) \u7684\u6b63\u6574\u6570\u89e3\u7684\u7ec4\u6570\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_13", "title": "\u975e\u8d1f\u6574\u6570\u548c\u7684\u6570\u76ee", "text": "<p>\u95ee\u9898\u4e8c\uff1a\u5982\u679c\u95ee\u9898\u53d8\u5316\u4e00\u4e0b\uff0c\u6bcf\u7ec4\u5141\u8bb8\u4e3a\u7a7a\u5462\uff1f</p> <p>\u663e\u7136\u6b64\u65f6\u6ca1\u6cd5\u76f4\u63a5\u63d2\u677f\u4e86\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u51fa\u73b0\u5f88\u591a\u5757\u677f\u5b50\u63d2\u5230\u4e00\u4e2a\u7a7a\u91cc\u9762\u7684\u60c5\u51b5\uff0c\u975e\u5e38\u4e0d\u597d\u8ba1\u7b97\u3002</p> <p>\u6211\u4eec\u8003\u8651\u521b\u9020\u6761\u4ef6\u8f6c\u5316\u6210\u6709\u9650\u5236\u7684\u95ee\u9898\u4e00\uff0c\u5148\u501f \\(k\\) \u4e2a\u5143\u7d20\u8fc7\u6765\uff0c\u5728\u8fd9 \\(n + k\\) \u4e2a\u5143\u7d20\u5f62\u6210\u7684 \\(n + k - 1\\) \u4e2a\u7a7a\u91cc\u9762\u63d2\u677f\uff0c\u7b54\u6848\u4e3a</p> \\[ \\dbinom{n + k - 1}{k - 1} = \\dbinom{n + k - 1}{n} \\] <p>\u867d\u7136\u4e0d\u662f\u76f4\u63a5\u6c42\u7684\u539f\u95ee\u9898\uff0c\u4f46\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u662f\u539f\u95ee\u9898\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a</p> <p>\u5f00\u5934\u6211\u4eec\u501f\u6765\u4e86 \\(k\\) \u4e2a\u5143\u7d20\uff0c\u7528\u4e8e\u4fdd\u8bc1\u6bcf\u7ec4\u81f3\u5c11\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u63d2\u5b8c\u677f\u4e4b\u540e\u518d\u628a\u8fd9 \\(k\\) \u4e2a\u501f\u6765\u7684\u5143\u7d20\u4ece \\(k\\) \u7ec4\u91cc\u9762\u62ff\u8d70\u3002\u56e0\u4e3a\u5143\u7d20\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u8f6c\u5316\u8fc7\u7684\u60c5\u51b5\u548c\u8f6c\u5316\u524d\u7684\u60c5\u51b5\u53ef\u4ee5\u4e00\u4e00\u5bf9\u5e94\uff0c\u7b54\u6848\u4e5f\u5c31\u662f\u76f8\u7b49\u7684\u3002</p> <p>\u7531\u6b64\u53ef\u4ee5\u63a8\u5bfc\u51fa\u63d2\u677f\u6cd5\u7684\u516c\u5f0f\uff1a\\(\\dbinom{n + k - 1}{n}\\)\u3002</p> <p>\u672c\u8d28\u662f\u6c42 \\(x_1+x_2+\\cdots+x_k=n\\) \u7684\u975e\u8d1f\u6574\u6570\u89e3\u7684\u7ec4\u6570\uff08\u5373\u8981\u6c42 \\(x_i \\ge 0\\)\uff09\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_14", "title": "\u4e0d\u540c\u4e0b\u754c\u6574\u6570\u548c\u7684\u6570\u76ee", "text": "<p>\u95ee\u9898\u4e09\uff1a\u5982\u679c\u518d\u6269\u5c55\u4e00\u6b65\uff0c\u8981\u6c42\u5bf9\u4e8e\u7b2c \\(i\\) \u7ec4\uff0c\u81f3\u5c11\u8981\u5206\u5230 \\(a_i,\\sum a_i \\le n\\) \u4e2a\u5143\u7d20\u5462\uff1f</p> <p>\u672c\u8d28\u662f\u6c42 \\(x_1+x_2+\\cdots+x_k=n\\) \u7684\u89e3\u7684\u6570\u76ee\uff0c\u5176\u4e2d \\(x_i \\ge a_i\\)\u3002</p> <p>\u7c7b\u6bd4\u65e0\u9650\u5236\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u501f \\(\\sum a_i\\) \u4e2a\u5143\u7d20\u8fc7\u6765\uff0c\u4fdd\u8bc1\u7b2c \\(i\\) \u7ec4\u81f3\u5c11\u80fd\u5206\u5230 \\(a_i\\) \u4e2a\u3002\u4e5f\u5c31\u662f\u4ee4</p> \\[ x_i^{\\prime}=x_i-a_i \\] <p>\u5f97\u5230\u65b0\u65b9\u7a0b\uff1a</p> \\[ \\begin{aligned} (x_1^{\\prime}+a_1)+(x_2^{\\prime}+a_2)+\\cdots+(x_k^{\\prime}+a_k)&amp;=n\\\\ x_1^{\\prime}+x_2^{\\prime}+\\cdots+x_k^{\\prime}&amp;=n-a_1-a_2-\\cdots-a_k\\\\ x_1^{\\prime}+x_2^{\\prime}+\\cdots+x_k^{\\prime}&amp;=n-\\sum a_i \\end{aligned} \\] <p>\u5176\u4e2d</p> \\[ x_i^{\\prime}\\ge 0 \\] <p>\u7136\u540e\u95ee\u9898\u4e09\u5c31\u8f6c\u5316\u6210\u4e86\u95ee\u9898\u4e8c\uff0c\u76f4\u63a5\u7528\u63d2\u677f\u6cd5\u516c\u5f0f\u5f97\u5230\u7b54\u6848\u4e3a</p> \\[ \\dbinom{n + \\sum a_i - 1}{n} \\] <p>\u4ee5\u4e0b\u6458\u5f55\u81ea OI-wiki\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_15", "title": "\u5706\u6392\u5217", "text": "<p>\\(n\\) \u4e2a\u4eba\u5168\u90e8\u6765\u56f4\u6210\u4e00\u5708\uff0c\u6240\u6709\u7684\u6392\u5217\u6570\u8bb0\u4e3a \\(\\mathrm Q_n^n\\)\u3002\u8003\u8651\u5176\u4e2d\u5df2\u7ecf\u6392\u597d\u7684\u4e00\u5708\uff0c\u4ece\u4e0d\u540c\u4f4d\u7f6e\u65ad\u5f00\uff0c\u53c8\u53d8\u6210\u4e0d\u540c\u7684\u961f\u5217\u3002 \u6240\u4ee5\u6709</p> \\[ \\mathrm Q_n^n \\times n = \\mathrm A_n^n \\Longrightarrow \\mathrm Q_n = \\frac{\\mathrm A_n^n}{n} = (n-1)! \\] <p>\u7531\u6b64\u53ef\u77e5\u90e8\u5206\u5706\u6392\u5217\u7684\u516c\u5f0f\uff1a</p> \\[ \\mathrm Q_n^r = \\frac{\\mathrm A_n^r}{r} = \\frac{n!}{r \\times (n-r)!} \\]"}, {"location": "algor/math/combinatorics/combination/#_16", "title": "\u4e0d\u76f8\u90bb\u6392\u5217", "text": "<p>\\(1 \\sim n\\) \u8fd9 \\(n\\) \u4e2a\u81ea\u7136\u6570\u4e2d\u9009 \\(k\\) \u4e2a\uff0c\u8fd9 \\(k\\) \u4e2a\u6570\u4e2d\u4efb\u4f55\u4e24\u4e2a\u6570\u90fd\u4e0d\u76f8\u90bb\u7684\u7ec4\u5408\u6709 \\(\\dbinom {n-k+1}{k}\\) \u79cd\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#_17", "title": "\u591a\u91cd\u96c6\u7684\u6392\u5217\u6570 | \u591a\u91cd\u7ec4\u5408\u6570", "text": "<p>\u8bf7\u5927\u5bb6\u4e00\u5b9a\u8981\u533a\u5206 \u591a\u91cd\u7ec4\u5408\u6570 \u4e0e \u591a\u91cd\u96c6\u7684\u7ec4\u5408\u6570\uff01\u4e24\u8005\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u6982\u5ff5\uff01</p> <p>\u591a\u91cd\u96c6\u662f\u6307\u5305\u542b\u91cd\u590d\u5143\u7d20\u7684\u5e7f\u4e49\u96c6\u5408\u3002\u8bbe \\(S=\\{n_1\\cdot a_1,n_2\\cdot a_2,\\cdots,n_k\\cdot a_k\\}\\) \u8868\u793a\u7531 \\(n_1\\) \u4e2a \\(a_1\\)\uff0c\\(n_2\\) \u4e2a \\(a_2\\)\uff0c\u2026\uff0c\\(n_k\\) \u4e2a \\(a_k\\) \u7ec4\u6210\u7684\u591a\u91cd\u96c6\uff0c\\(S\\) \u7684\u5168\u6392\u5217\u4e2a\u6570\u4e3a</p> \\[ \\frac{n!}{\\prod_{i=1}^kn_i!}=\\frac{n!}{n_1!n_2!\\cdots n_k!} \\] <p>\u76f8\u5f53\u4e8e\u628a\u76f8\u540c\u5143\u7d20\u7684\u6392\u5217\u6570\u9664\u6389\u4e86\u3002\u5177\u4f53\u5730\uff0c\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u4f60\u6709 \\(k\\) \u79cd\u4e0d\u4e00\u6837\u7684\u7403\uff0c\u6bcf\u79cd\u7403\u7684\u4e2a\u6570\u5206\u522b\u662f \\(n_1,n_2,\\cdots,n_k\\)\uff0c\u4e14 \\(n=n_1+n_2+\\ldots+n_k\\)\u3002\u8fd9 \\(n\\) \u4e2a\u7403\u7684\u5168\u6392\u5217\u6570\u5c31\u662f \u591a\u91cd\u96c6\u7684\u6392\u5217\u6570\u3002\u591a\u91cd\u96c6\u7684\u6392\u5217\u6570\u5e38\u88ab\u79f0\u4f5c \u591a\u91cd\u7ec4\u5408\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u591a\u91cd\u7ec4\u5408\u6570\u7684\u7b26\u53f7\u8868\u793a\u4e0a\u5f0f\uff1a</p> \\[ \\dbinom{n}{n_1,n_2,\\cdots,n_k}=\\frac{n!}{\\prod_{i=1}^kn_i!} \\] <p>\u53ef\u4ee5\u770b\u51fa\uff0c\\(\\dbinom{n}{m}\\) \u7b49\u4ef7\u4e8e \\(\\dbinom{n}{m,n-m}\\)\uff0c\u53ea\u4e0d\u8fc7\u540e\u8005\u8f83\u4e3a\u7e41\u7410\uff0c\u56e0\u800c\u4e0d\u91c7\u7528\u3002</p>"}, {"location": "algor/math/combinatorics/combination/#1", "title": "\u591a\u91cd\u96c6\u7684\u7ec4\u5408\u6570 1", "text": "<p>\u8bbe \\(S=\\{n_1\\cdot a_1,n_2\\cdot a_2,\\cdots,n_k\\cdot a_k\\}\\) \u8868\u793a\u7531 \\(n_1\\) \u4e2a \\(a_1\\)\uff0c\\(n_2\\) \u4e2a \\(a_2\\)\uff0c\u2026\uff0c\\(n_k\\) \u4e2a \\(a_k\\) \u7ec4\u6210\u7684\u591a\u91cd\u96c6\u3002\u90a3\u4e48\u5bf9\u4e8e\u6574\u6570 \\(r(r&lt;n_i,\\forall i\\in[1,k])\\)\uff0c\u4ece \\(S\\) \u4e2d\u9009\u62e9 \\(r\\) \u4e2a\u5143\u7d20\u7ec4\u6210\u4e00\u4e2a\u591a\u91cd\u96c6\u7684\u65b9\u6848\u6570\u5c31\u662f \u591a\u91cd\u96c6\u7684\u7ec4\u5408\u6570\u3002\u8fd9\u4e2a\u95ee\u9898\u7b49\u4ef7\u4e8e \\(x_1+x_2+\\cdots+x_k=r\\) \u7684\u975e\u8d1f\u6574\u6570\u89e3\u7684\u6570\u76ee\uff0c\u53ef\u4ee5\u7528\u63d2\u677f\u6cd5\u89e3\u51b3\uff0c\u7b54\u6848\u4e3a</p> \\[ \\dbinom{r+k-1}{k-1} \\]"}, {"location": "algor/math/combinatorics/combination/#2", "title": "\u591a\u91cd\u96c6\u7684\u7ec4\u5408\u6570 2", "text": "<p>\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff1a\u8bbe \\(S=\\{n_1\\cdot a_1,n_2\\cdot a_2,\\cdots,n_k\\cdot a_k,\\}\\) \u8868\u793a\u7531 \\(n_1\\) \u4e2a \\(a_1\\)\uff0c\\(n_2\\) \u4e2a \\(a_2\\)\uff0c\u2026\uff0c\\(n_k\\) \u4e2a \\(a_k\\) \u7ec4\u6210\u7684\u591a\u91cd\u96c6\u3002\u90a3\u4e48\u5bf9\u4e8e\u6b63\u6574\u6570 \\(r\\)\uff0c\u4ece \\(S\\) \u4e2d\u9009\u62e9 \\(r\\) \u4e2a\u5143\u7d20\u7ec4\u6210\u4e00\u4e2a\u591a\u91cd\u96c6\u7684\u65b9\u6848\u6570\u3002</p> <p>\u8fd9\u6837\u5c31\u9650\u5236\u4e86\u6bcf\u79cd\u5143\u7d20\u7684\u53d6\u7684\u4e2a\u6570\u3002\u540c\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u4e3a\u5e26\u9650\u5236\u7684\u7ebf\u6027\u65b9\u7a0b\u6c42\u89e3\uff1a</p> \\[ \\forall i\\in [1,k],\\ x_i\\le n_i,\\ \\sum_{i=1}^kx_i=r \\] <p>\u4e8e\u662f\u5f88\u81ea\u7136\u5730\u60f3\u5230\u4e86\u5bb9\u65a5\u539f\u7406\u3002\u5bb9\u65a5\u7684\u6a21\u578b\u5982\u4e0b\uff1a</p> <ol> <li>\u5168\u96c6\uff1a\\(\\displaystyle \\sum_{i=1}^kx_i=r\\) \u7684\u975e\u8d1f\u6574\u6570\u89e3\u3002</li> <li>\u5c5e\u6027\uff1a\\(x_i\\le n_i\\)\u3002</li> </ol> <p>\u4e8e\u662f\u8bbe\u6ee1\u8db3\u5c5e\u6027 \\(i\\) \u7684\u96c6\u5408\u662f \\(S_i\\)\uff0c\\(\\overline{S_i}\\) \u8868\u793a\u4e0d\u6ee1\u8db3\u5c5e\u6027 \\(i\\) \u7684\u96c6\u5408\uff0c\u5373\u6ee1\u8db3 \\(x_i\\ge n_i+1\\) \u7684\u96c6\u5408\uff08\u8f6c\u5316\u4e3a\u4e0a\u9762\u63d2\u677f\u6cd5\u7684\u95ee\u9898\u4e09\uff09\u3002\u90a3\u4e48\u7b54\u6848\u5373\u4e3a</p> \\[ \\left|\\bigcap_{i=1}^kS_i\\right|=|U|-\\left|\\bigcup_{i=1}^k\\overline{S_i}\\right| \\] <p>\u6839\u636e\u5bb9\u65a5\u539f\u7406\uff0c\u6709\uff1a</p> \\[ \\begin{aligned} \\left|\\bigcup_{i=1}^k\\overline{S_i}\\right| =&amp;\\sum_i\\left|\\overline{S_i}\\right| -\\sum_{i,j}\\left|\\overline{S_i}\\cap\\overline{S_j}\\right| +\\sum_{i,j,k}\\left|\\overline{S_i}\\cap\\overline{S_j}\\cap\\overline{S_k}\\right| -\\cdots\\\\ &amp;+(-1)^{k-1}\\left|\\bigcap_{i=1}^k\\overline{S_i}\\right|\\\\ =&amp;\\sum_i\\dbinom{k+r-n_i-2}{k-1} -\\sum_{i,j}\\dbinom{k+r-n_i-n_j-3}{k-1}+\\sum_{i,j,k}\\dbinom{k+r-n_i-n_j-n_k-4}{k-1} -\\cdots\\\\ &amp;+(-1)^{k-1}\\dbinom{k+r-\\sum_{i=1}^kn_i-k-1}{k-1} \\end{aligned} \\] <p>\u62ff\u5168\u96c6 \\(\\displaystyle |U|=\\dbinom{k+r-1}{k-1}\\) \u51cf\u53bb\u4e0a\u5f0f\uff0c\u5f97\u5230\u591a\u91cd\u96c6\u7684\u7ec4\u5408\u6570</p> \\[ Ans=\\sum_{p=0}^k(-1)^p\\sum_{A}\\dbinom{k+r-1-\\sum_{A} n_{A_i}-p}{k-1} \\] <p>\u5176\u4e2d A \u662f\u5145\u5f53\u679a\u4e3e\u5b50\u96c6\u7684\u4f5c\u7528\uff0c\u6ee1\u8db3 \\(|A|=p,\\ A_i&lt;A_{i+1}\\)\u3002</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle-old/", "title": "Inclusion exclusion principle old", "text": "<p>\u90e8\u5206\u5185\u5bb9\u6458\u5f55\u81ea OI-Wiki</p> <p>\u6211\u8fd9\u91cc Mathjax \u4e0d\u4f1a\u663e\u793a <code>\\overline</code>\uff0c\u6240\u4ee5\u7528\u4e86 <code>\\overrightarrow</code> \u4ee3\u66ff\u3002</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle-old/#_1", "title": "\u5bb9\u65a5\u539f\u7406", "text": "<p>\u8bbe U \u4e2d\u5143\u7d20\u6709 n \u79cd\u4e0d\u540c\u7684\u5c5e\u6027\uff0c\u800c\u7b2c i \u79cd\u5c5e\u6027\u79f0\u4e3a \\(P_i\\)\uff0c\u62e5\u6709\u5c5e\u6027 \\(P_i\\) \u7684\u5143\u7d20\u6784\u6210\u96c6\u5408 \\(S_i\\)\uff0c\u90a3\u4e48</p> \\[ \\begin{split} \\left|\\bigcup_{i=1}^{n}S_i\\right|=&amp;\\sum_{i}|S_i|-\\sum_{i&lt;j}|S_i\\cap S_j|+\\sum_{i&lt;j&lt;k}|S_i\\cap S_j\\cap S_k|-\\cdots\\\\ &amp;+(-1)^{m-1}\\sum_{a_i&lt;a_{i+1} }\\left|\\bigcap_{i=1}^{m}S_{a_i}\\right|+\\cdots+(-1)^{n-1}|S_1\\cap\\cdots\\cap S_n| \\end{split} \\] <p>\u5373</p> \\[ \\left|\\bigcup_{i=1}^{n}S_i\\right|=\\sum_{m=1}^n(-1)^{m-1}\\sum_{a_i&lt;a_{i+1} }\\left|\\bigcap_{i=1}^mS_{a_i}\\right| \\] <p>\\(a_i\\) \u662f\u7528\u6765\u679a\u4e3e\u96c6\u5408\u7684\u3002</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle-old/#_2", "title": "\u8bc1\u660e", "text": "<p>\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\u4f7f\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u8ba1\u7b97\u5176\u51fa\u73b0\u7684\u6b21\u6570\u3002\u5bf9\u4e8e\u5143\u7d20 x\uff0c\u5047\u8bbe\u5b83\u51fa\u73b0\u5728 \\(T_1,T_2,\\cdots,T_m\\) \u7684\u96c6\u5408\u4e2d\uff0c\u90a3\u4e48\u5b83\u7684\u51fa\u73b0\u6b21\u6570\u4e3a</p> \\[ \\begin{split} Cnt=&amp;|\\{T_i\\}|-|\\{T_i\\cap T_j|i&lt;j\\}|+\\cdots+(-1)^{k-1}\\left|\\left\\{\\bigcap_{i=1}^{k}T_{a_i}|a_i&lt;a_{i+1}\\right\\}\\right|\\\\ &amp;+\\cdots+(-1)^{m-1}|\\{T_1\\cap\\cdots\\cap T_m\\}|\\\\ =&amp;C_m^1-C_m^2+\\cdots+(-1)^{m-1}C_m^m\\\\ =&amp;C_m^0-\\sum_{i=0}^m(-1)^iC_m^i\\\\ =&amp;1-(1-1)^m=1 \\end{split} \\] <p>\u4e8e\u662f\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u4e3a 1\uff0c\u90a3\u4e48\u5408\u5e76\u8d77\u6765\u5c31\u662f\u5e76\u96c6\u3002\u8bc1\u6bd5\u3002</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle-old/#_3", "title": "\u8865\u96c6", "text": "<p>\u5bf9\u4e8e\u5168\u96c6 U \u4e0b\u7684 \u96c6\u5408\u7684\u5e76 \u53ef\u4ee5\u4f7f\u7528\u5bb9\u65a5\u539f\u7406\u8ba1\u7b97\uff0c\u800c\u96c6\u5408\u7684\u4ea4\u5219\u7528\u5168\u96c6\u51cf\u53bb \u8865\u96c6\u7684\u5e76\u96c6 \u6c42\u5f97\uff1a</p> \\[ \\left|\\bigcap_{i=1}^{n}S_i\\right|=|U|-\\left|\\bigcup_{i=1}^n\\overrightarrow{S_i}\\right| \\] <p>\u53f3\u8fb9\u4f7f\u7528\u5bb9\u65a5\u5373\u53ef\u3002</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle-old/#_4", "title": "\u5e94\u7528", "text": ""}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle-old/#_5", "title": "\u4e0d\u5b9a\u65b9\u7a0b\u975e\u8d1f\u6574\u6570\u89e3\u8ba1\u6570", "text": "<p>\u7ed9\u51fa\u4e0d\u5b9a\u65b9\u7a0b \\(\\sum_{i=1}^nx_i=m\\) \u548c \\(n\\) \u4e2a\u9650\u5236\u6761\u4ef6 \\(x_i\\leq b_i\\)\uff0c\u5176\u4e2d \\(m,b_i \\in \\mathbb{N}\\). \u6c42\u65b9\u7a0b\u7684\u975e\u8d1f\u6574\u6570\u89e3\u7684\u4e2a\u6570\u3002</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle-old/#_6", "title": "\u6ca1\u6709\u9650\u5236\u65f6", "text": "<p>\u5982\u679c\u6ca1\u6709 \\(x_i&lt;b_i\\) \u7684\u9650\u5236\uff0c\u90a3\u4e48\u4e0d\u5b9a\u65b9\u7a0b \\(\\sum_{i=1}^nx_i=m\\) \u7684\u975e\u8d1f\u6574\u6570\u89e3\u7684\u6570\u76ee\u4e3a \\(C_{m+n-1}^{n-1}\\).</p> <p>\u7565\u8bc1\uff1a\u63d2\u677f\u6cd5\u3002</p> <p>\u76f8\u5f53\u4e8e\u4f60\u6709 \\(m\\) \u4e2a\u7403\u8981\u5206\u7ed9 \\(n\\) \u4e2a\u76d2\u5b50\uff0c\u5141\u8bb8\u67d0\u4e2a\u76d2\u5b50\u662f\u7a7a\u7684\u3002\u8fd9\u4e2a\u95ee\u9898\u4e0d\u80fd\u76f4\u63a5\u7528\u7ec4\u5408\u6570\u89e3\u51b3\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u518d\u52a0\u5165 \\(n-1\\) \u4e2a\u7403\uff0c\u4e8e\u662f\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(m+n-1\\) \u7684\u7403\u5e8f\u5217\u4e2d\u9009\u62e9 \\(n-1\\) \u4e2a\u7403\uff0c\u7136\u540e\u8fd9\u4e2a \\(n-1\\) \u4e2a\u7403\u628a\u8fd9\u4e2a\u5e8f\u5217\u9694\u6210\u4e86 \\(n\\) \u4efd\uff0c\u6070\u597d\u53ef\u4ee5\u4e00\u4e00\u5bf9\u5e94\u653e\u5230 \\(n\\) \u4e2a\u76d2\u5b50\u4e2d\u3002\u90a3\u4e48\u5728 \\(m+n-1\\) \u4e2a\u7403\u4e2d\u9009\u62e9 \\(n-1\\) \u4e2a\u7403\u7684\u65b9\u6848\u6570\u5c31\u662f \\(C_{m+n-1}^{n-1}\\)\u3002</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle-old/#_7", "title": "\u5bb9\u65a5\u6a21\u578b", "text": "<p>\u63a5\u7740\u6211\u4eec\u5c1d\u8bd5\u62bd\u8c61\u51fa\u5bb9\u65a5\u539f\u7406\u7684\u6a21\u578b\uff1a</p> <ol> <li>\u5168\u96c6 U\uff1a\u4e0d\u5b9a\u65b9\u7a0b \\(\\sum_{i=1}^nx_i=m\\) \u7684\u975e\u8d1f\u6574\u6570\u89e3</li> <li>\u5143\u7d20\uff1a\u53d8\u91cf \\(x_i\\).</li> <li>\u5c5e\u6027\uff1a\\(x_i\\) \u7684\u5c5e\u6027\u5373 \\(x_i\\) \u6ee1\u8db3\u7684\u6761\u4ef6\uff0c\u5373 \\(x_i\\leq b_i\\) \u7684\u6761\u4ef6</li> </ol> <p>\u76ee\u6807\uff1a\u6240\u6709\u53d8\u91cf\u6ee1\u8db3\u5bf9\u5e94\u5c5e\u6027\u65f6\u96c6\u5408\u7684\u5927\u5c0f\uff0c\u5373 \\(|\\bigcap_{i=1}^nS_i|\\).</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528 \\(\\left|\\bigcap_{i=1}^{n}S_i\\right|=|U|-\\left|\\bigcup_{i=1}^n\\overrightarrow{S_i}\\right|\\) \u6c42\u89e3\u3002\\(|U|\\) \u53ef\u4ee5\u7528\u7ec4\u5408\u6570\u8ba1\u7b97\uff0c\u540e\u534a\u90e8\u5206\u81ea\u7136\u4f7f\u7528\u5bb9\u65a5\u539f\u7406\u5c55\u5f00\u3002</p> <p>\u90a3\u4e48\u95ee\u9898\u53d8\u6210\uff0c\u5bf9\u4e8e\u4e00\u4e9b \\(\\overrightarrow{S_{a_i}}\\) \u7684\u4ea4\u96c6\u6c42\u5927\u5c0f\u3002\u8003\u8651 \\(\\overrightarrow{S_{a_i} }\\) \u7684\u542b\u4e49\uff0c\u8868\u793a \\(x_{a_i}\\geq b_{a_i}+1\\) \u7684\u89e3\u7684\u6570\u76ee\u3002\u800c\u4ea4\u96c6\u8868\u793a\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u3002\u56e0\u6b64\u8fd9\u4e2a\u4ea4\u96c6\u5bf9\u5e94\u7684\u4e0d\u5b9a\u65b9\u7a0b\u4e2d\uff0c\u6709\u4e9b\u53d8\u91cf\u6709 \u4e0b\u754c\u9650\u5236\uff0c\u800c\u6709\u4e9b\u5219\u6ca1\u6709\u9650\u5236\u3002</p> <p>\u80fd\u5426\u6d88\u9664\u8fd9\u4e9b\u4e0b\u754c\u9650\u5236\u5462\uff1f\u65e2\u7136\u8981\u6c42\u7684\u662f\u975e\u8d1f\u6574\u6570\u89e3\uff0c\u800c\u6709\u4e9b\u53d8\u91cf\u7684\u4e0b\u754c\u53c8\u5927\u4e8e \\(0\\)\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5 \u628a\u8fd9\u4e2a\u4e0b\u754c\u51cf\u6389\uff0c\u5c31\u53ef\u4ee5\u4f7f\u5f97\u8fd9\u4e9b\u53d8\u91cf\u7684\u4e0b\u754c\u53d8\u6210 \\(0\\)\uff0c\u5373\u6ca1\u6709\u4e0b\u754c\u5566\u3002\u56e0\u6b64\u5bf9\u4e8e</p> \\[ \\left|\\bigcap_{a_i&lt;a_{i+1} }^{1\\leq i\\leq k}S_{a_i}\\right| \\] <p>\u7684\u4e0d\u5b9a\u65b9\u7a0b\u5f62\u5f0f\u4e3a</p> \\[ \\sum_{i=1}^nx_i=m-\\sum_{i=1}^k(b_{a_i}+1) \\] <p>\u4e8e\u662f\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u7ec4\u5408\u6570\u8ba1\u7b97\u5566\u3002\u8fd9\u4e2a\u957f\u5ea6\u4e3a \\(k\\) \u7684 \\(a\\) \u6570\u7ec4\u76f8\u5f53\u4e8e\u5728\u679a\u4e3e\u5b50\u96c6\u3002</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle-old/#cf997c-sky-full-of-stars", "title": "CF997C Sky Full of Stars", "text": "<p>\u6709\u4e00\u4e2a \\(n\\times n\\) \u7684\u6b63\u65b9\u5f62\u7f51\u683c\uff0c\u6bcf\u4e2a\u7f51\u683c\u7528 RGB \u4e09\u79cd\u989c\u8272\u67d3\u8272</p> <p>\u6c42\u6709\u591a\u5c11\u79cd\u65b9\u6848\u4f7f\u5f97\u81f3\u5c11\u6709\u4e00\u884c\u6216\u8005\u4e00\u5217\u7684\u989c\u8272\u5b8c\u5168\u4e00\u81f4\uff0c\u6a21 \\(998244353\\)\u3002</p> <p>\\(n \\le 1e6\\)\u3002</p> <p>\u6211\u4eec\u8003\u8651\u62bd\u8c61\u51fa\u5bb9\u65a5\u7684\u6a21\u578b\uff1a</p> <ol> <li>\u5168\u96c6 U \uff1a\u6240\u6709\u53ef\u80fd\u7684\u67d3\u8272\u65b9\u5f0f\uff0c\u65b9\u6848\u6570\u662f \\(3^{n\\times n}\\)\u3002</li> <li>\u5143\u7d20 \uff1a\u67d3\u8272\u65b9\u5f0f\u3002</li> <li>\u5c5e\u6027\uff1a\uff08\u66f4\u597d\u7684\u7406\u89e3\u662f\u201c\u4e00\u79cd\u9650\u5236/\u6761\u4ef6\u201d\uff09\u4e00\u884c\u6216\u8005\u4e00\u5217\u6d82\u7684\u989c\u8272\u5b8c\u5168\u76f8\u540c\u3002</li> </ol> <p>\u53d1\u73b0\u5c5e\u6027\u672c\u8d28\u4e0a\u5c31\u662f \\(2n\\) \u4e2a\u9650\u5236\uff0c\u4e5f\u5c31\u662f\u7b2c \\(i\\) \u884c\u5168\u76f8\u540c\uff0c\u7b2c \\(i\\) \u5217\u5168\u76f8\u540c\u8fd9\u6837\u7684 \\(2n\\) \u4e2a\u6761\u4ef6\u3002</p> <p>\u8981\u6c42\u7684\u4e1c\u897f\u662f\u81f3\u5c11\u6709\u4e00\u884c\u6216\u8005\u4e00\u5217\u7684\u9650\u5236/\u6761\u4ef6\u88ab\u6ee1\u8db3\u7684\u65b9\u6848\u6570\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5982\u679c\u8bbe \\(S_i\\) \u8868\u793a\u6240\u6709\u6ee1\u8db3\u7b2c \\(i\\) \u4e2a\u5c5e\u6027/\u9650\u5236\u7684\u67d3\u8272\u65b9\u6848\u6784\u6210\u7684\u96c6\u5408\uff0c</p> <p>\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u628a\u6240\u6709 \\(|S_i|\\) \u76f8\u52a0\uff0c\u80af\u5b9a\u4f1a\u7b97\u91cd\uff0c\u90a3\u4e48\u8003\u8651\u5bb9\u65a5\uff0c\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f \\(|\\bigcup S_i|\\)\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7c7b\u6bd4\u6700\u7b80\u5355\u7684\u5bb9\u65a5\uff0c\u7c7b\u4f3c\u6c42 \\(100\\) \u4ee5\u5185\u6709\u591a\u5c11\u6570\u81f3\u5c11\u542b\u6709 \\(2,3,5\\) \u5176\u4e2d\u4e00\u4e2a\u56e0\u6570\u3002</p> <p>\u5199\u51fa\u6765\u5c31\u662f\uff1a</p> \\[ ans = \\sum\\limits_{S \\not= \\emptyset}(-1)^{|S| - 1} f(S) \\] <p>\u5176\u4e2d \\(S\\) \u8868\u793a\u82e5\u5e72\u4e2a \\(S_i\\) \u7684\u4ea4\uff0c\\(f(S)\\) \u8868\u793a\u8fd9\u79cd\u60c5\u51b5\u7684\u8d21\u732e\u3002</p> <p>\u8003\u8651 \\(S\\) \u8868\u793a\u6709\u67d0 \\(i\\) \u884c\uff0c\u67d0 \\(j\\) \u5217\u662f\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c\u9009\u51fa\u6765\u7684\u8fd9 \\(i\\) \u884c \\(j\\) \u5217\u7684\u989c\u8272\u90fd\u662f\u4e00\u6837\u7684\u3002</p> <p>\u6211\u4eec\u73b0\u5728\u5c31\u76f8\u5f53\u4e8e \u5f3a\u5236 \u8fd9 \\(i\\) \u884c \\(j\\) \u5217\u662f\u540c\u4e00\u79cd\u989c\u8272\uff0c\u5269\u4e0b\u7684 \\((n - i)(n - j)\\) \u4e2a\u683c\u5b50\u5c31\u968f\u4fbf\u9009\uff08\u5c31\u7b97\u53c8\u6709\u65b0\u7684\u76f8\u7b49\u7684\u4e5f\u4e0d\u7ba1\uff0c\u56e0\u4e3a\u8fd9\u91cc\u662f\u5f3a\u5236\uff0c\u4e5f\u5c31\u662f\u53ea\u8003\u8651\u88ab\u9650\u5236\u7684\u90e8\u5206\uff0c\u5176\u4ed6\u7684\u90e8\u5206\u90fd\u76f4\u63a5\u5bb9\u65a5\u6389\u4e86\uff09\u3002</p> <p>\u56e0\u4e3a \\(i\\) \u884c \\(j\\) \u5217\u662f\u53ef\u4ee5\u4efb\u610f\u9009\u7684\uff08\u8fd9\u91cc\u53ea\u662f\u8003\u8651\u67d0\u4e2a\u56fa\u5b9a\u72b6\u6001\uff09\uff0c\u90a3\u4e48 \\(f(S)\\) \u5c31\u662f \\(\\dbinom{n}{i}\\dbinom{n}{j}3^{1 + (n - i)(i - j)}\\)</p> <p>\u53ef\u4ee5\u5f97\u77e5\uff1a</p> \\[ \\begin{aligned} ans &amp;= \\sum\\limits_{i \\not = 0 \\lor j \\not=0} \\dbinom{n}{i}\\dbinom{n}{j}(-1)^{i + j - 1} f(i,j) \\\\ &amp;= 3\\sum\\limits_{i \\not = 0 \\lor j \\not = 0} \\dbinom{n}{i} \\dbinom{n}{j} (-1)^{i + j - 1} 3^{i + j} \\end{aligned} \\] <p>\u8003\u8651\u679a\u4e3e \\(i\\)\uff0c\u628a\u5f0f\u5b50\u62c6\u5f00\uff1a</p> \\[ \\begin{aligned} ans= 3\\sum\\limits_{i &gt; 0} \\ [\\ \\dbinom{n}{i}(-1)^i \\sum\\limits_{j &gt; 0} \\ [\\dbinom{n}{j} (-1)^j 3^{(n - i)(n - j)}\\ ]\\ ] \\end{aligned} \\] <p>\u540e\u9762\u90a3\u5768\u770b\u8d77\u6765\u50cf\u4e8c\u9879\u5f0f\u5b9a\u7406\uff0c\u628a \\(j=0\\) \u8865\u4e0a\u4e4b\u540e\u51cf\u53bb\u518d\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\uff1a</p> \\[ ans = 3\\sum\\limits_{i &gt; 0}\\ [\\ \\dbinom{n}{i}(-1)^i([3^{n - i} - 1]^n - 3^{(n - i)n})\\ ] \\] <p>\u7136\u540e\u5c31\u53ef\u4ee5 \\(O(n \\log n)\\) \u505a\u4e86\u3002    </p> <p>\u4ee3\u7801\u5b9e\u73b0\u6709\u51e0\u4e2a\u7ec6\u8282\uff0c\u6ce8\u610f\u51cf\u6cd5\u4e4b\u540e\u8981\u52a0mod\uff0c\u7136\u540e\u5c3d\u91cf\u7528 i64 \u505a\u8fd0\u7b97\u907f\u514d\u5fd8\u8bb0\u4e58 1ll\u3002</p> <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\n\nconst i64 si = 1e6 + 10;\nconst i64 mod = 998244353;\n\ni64 n;\ni64 inv[si], fact[si], invf[si];\nvoid init(i64 n) {\ninv[1] = 1, fact[0] = invf[0] = 1;\nfor(i64 i = 2; i &lt;= n; ++i)\ninv[i] = 1ll * (mod - mod / i) * inv[mod % i] % mod;\nfor(i64 i = 1; i &lt;= n; ++i)\nfact[i] = 1ll * fact[i - 1] * i % mod,\ninvf[i] = 1ll * invf[i - 1] * inv[i] % mod;\n}\ni64 C(i64 n, i64 m) {\nif(m &lt; 0 || n &lt; m) return 0;\nreturn 1ll * fact[n] * invf[n - m] % mod * invf[m] % mod;\n}\ni64 Qpow(i64 a, i64 b) {\ni64 ret = 1 % mod;\nfor(; b; b &gt;&gt;= 1) {\nif(b &amp; 1) ret = ret * a % mod;\na = a * a % mod;\n} return ret % mod;\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ni64 ans = 0, sum = 0;\ncin &gt;&gt; n, init(n);\nfor(i64 i = 1; i &lt;= n; i++) ans = (ans + Qpow(3ll, (1ll * n * (n - i) + i)) * Qpow(-1ll, i + 1ll) * C(n, i) % mod + mod) % mod;\nans = ans * 2ll % mod;\ni64 tmp = 0;\nfor(i64 i = 0; i &lt; n; i++) {\ni64 t = -Qpow(3ll, i);\ntmp = (tmp + C(n, i) * Qpow(-1, i + 1ll) * (Qpow(1 + t, n) - Qpow(t, n) + mod) % mod + mod) % mod;\n}\nans = (ans + tmp * 3) % mod;\ncout &lt;&lt; ans % mod &lt;&lt; endl;\nreturn 0; }\n</code></pre>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle/", "title": "\u5bb9\u65a5\u539f\u7406", "text": ""}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle/#_1", "title": "\u5bb9\u65a5\u539f\u7406", "text": ""}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle/#_2", "title": "\u6982\u8ff0", "text": "<p>\u82e5\u6709 \\(n\\) \u4e2a\u96c6\u5408 \\(S_1 \\dots S_n\\)\uff0c\u5e76\u4e14\u96c6\u5408\u4e4b\u95f4\u53ef\u80fd\u6709\u4ea4\u96c6\u3002</p> <p>\u90a3\u4e48 \\(|\\bigcup S_i|\\) \u5c31\u7b49\u4e8e \\(\\sum_i |S_i| - \\sum_{i, j} |S_i \\cap S_j| + \\sum_{i, j, k} |S_i \\cap S_j \\cap S_k| \\dots + (-1)^{n + 1} \\sum_{a_1, \\dots a_n} |\\bigcap_j S_{a_j}|\\)\u3002</p> <p>\\(a_1, \\dots a_n\\) \u662f\u7528\u6765\u679a\u4e3e\u96c6\u5408\u7684\u3002</p> <p>\u8fd9\u4e2a\u67ff\u5b50\u4e5f\u53ef\u4ee5\u7b80\u8ff0\u4e3a\uff0c\u591a\u4e2a\u96c6\u5408\u7684\u5e76\u96c6\u5927\u5c0f\u7b49\u4e8e\u5947\u6570\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6\u7684\u5927\u5c0f\u4e4b\u548c\u51cf\u53bb\u5076\u6570\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6\u5927\u5c0f\u4e4b\u548c\u3002</p> <p>\u6216\u8005\u63cf\u8ff0\u4e3a:</p> <p>\\(\\sum\\) \u5728\u4efb\u610f\u4e00\u4e2a\u96c6\u5408\u5185\u7684\u5143\u7d20\u4e2a\u6570\u603b\u548c \\(\u2212\\sum\\) \u5728\u4efb\u610f\u4e24\u4e2a\u96c6\u5408\u4ea4\u5185\u7684\u5143\u7d20\u4e2a\u6570\u603b\u548c \\(+\\sum\\) \u5728\u4efb\u610f\u4e09\u4e2a\u96c6\u5408\u4ea4\u5185\u7684\u5143\u7d20\u4e2a\u6570\u603b\u548c...</p> <p>\u6ce8\u610f\u8fd9\u91cc\u201c\u5728\u4efb\u610f\u4e24\u4e2a\u96c6\u5408\u4ea4\u96c6\u5185\u7684\u5143\u7d20\u4e2a\u6570\u603b\u548c\u201d\u662f\u8981\u7b97\u91cd\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c \\(x\\) \u5728 \\(A\\cap B \\cap C\\) \u5f53\u4e2d\uff0c\u90a3\u4e48\u5728\u7b97\u4efb\u610f\u4e24\u4e2a\u96c6\u5408\u4ea4\u5185\u7684\u5143\u7d20\u4e2a\u6570\u603b\u548c\u65f6\uff0c\\(x\\) \u7684\u8d21\u732e\u5c31\u662f \\(3\\)\u3002</p> <p>\u8fd9\u4e48\u505a\u5176\u5b9e\u5c31\u662f\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u6570\uff0c\u56e0\u4e3a\u6709\u591a\u4e2a\u6761\u4ef6\u4f46\u662f\u53ea\u662f\u201c\u81f3\u5c11\u201d\u6ee1\u8db3\u4e00\u4e2a\u6216\u8005\u51e0\u4e2a\u7684\u65f6\u5019\uff0c\u65e0\u6cd5\u6bd4\u8f83\u65b9\u4fbf\u7684\u77e5\u9053\u54ea\u4e9b\u6761\u4ef6\u6ee1\u8db3\uff0c\u54ea\u4e9b\u6761\u4ef6\u4e0d\u6ee1\u8db3\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u53ea\u8003\u8651\u67d0\u4e9b\u7279\u5b9a\u7684\u6761\u4ef6\u4e00\u5b9a\u88ab\u6ee1\u8db3\u7684\u65f6\u5019\u65b9\u6848\u6570\uff0c\u5176\u5b83\u7684\u76f4\u63a5\u4e0d\u7ba1\u600e\u4e48\u641e\uff0c\u53cd\u6b63\u4e0d\u5408\u6cd5\u6216\u8005\u91cd\u590d\u7684\u80af\u5b9a\u4f1a\u88ab\u5bb9\u65a5\u6389\u3002</p> <p>\u8fd9\u5c31\u662f\u4e00\u79cd\u201c\u81f3\u5c11\u8f6c\u5f3a\u5236\u201d\u7684\u601d\u60f3\u3002</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle/#_3", "title": "\u4e00\u4e9b\u5e94\u7528", "text": "<p>\u5047\u8bbe\u6709 \\(n\\) \u4e2a\u6761\u4ef6\u7ec4\u6210\u4e86\u4e00\u4e2a\u6761\u4ef6\u96c6\u5408 \\(S\\)\uff0c\u4e14\u8fd9\u4e9b\u9650\u5236\u5efa\u7acb\u5728\u4e00\u4e2a\u5143\u7d20\u96c6\u5408 \\(U\\) \u4e0a\uff0c\u6211\u4eec\u60f3\u8981\u77e5\u9053\u81f3\u5c11\u6ee1\u8db3\u4e00\u4e2a\u6761\u4ef6\u7684\u5143\u7d20\u6709\u591a\u5c11\u4e2a\uff0c\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528\u5bb9\u65a5\u539f\u7406\u3002</p> <p>\u6211\u4eec\u5c06 \\(U\\) \u4f5c\u4e3a\u5168\u96c6\uff0c\u8bbe \\(s_i\\) \u8868\u793a\u6ee1\u8db3\u7b2c \\(i\\) \u4e2a\u6761\u4ef6\u7684\u6240\u6709\u5143\u7d20\u6784\u6210\u7684\u96c6\u5408\u3002</p> <p>\u7b54\u6848\u663e\u7136\u662f\u6c42 \\(|\\bigcup s_i|\\) \u90a3\u4e48\u6839\u636e\u5bb9\u65a5\u539f\u7406\u53ef\u4ee5\u6709\uff1a</p> <p>\\(ans = \\sum_i |s_i| - \\sum_{i, j} |s_i \\cap s_j| + \\sum_{i, j, k} |s_i \\cap s_j \\cap s_k| \\dots + (-1)^{n + 1} \\sum_{a_1, \\dots a_n} |\\bigcap_j s_{a_j}|\\)</p> <p>\u8fd9\u4e2a\u67ff\u5b50\u4e5f\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u66f4\u65b9\u4fbf\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u4ee4 \\(p\\) \u8868\u793a \\(S\\) \u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u5373\u7531\u82e5\u5e72\u4e2a\u6761\u4ef6\u7ec4\u6210\u7684\u6761\u4ef6\u96c6\u5408\uff0c\u8bbe \\(f(p)\\) \u8868\u793a\u6ee1\u8db3 \\(p\\) \u4e2d\u6240\u6709\u6761\u4ef6\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5373 \\(|\\bigcap\\limits_{s\\subseteq p} s|\\)\u3002</p> <p>\u90a3\u4e48 \\(ans = \\sum\\limits_{p\\subseteq S, p \\not= \\emptyset} (-1)^{|p|+1} f(p)\\)\u3002</p> <p>\uff08\u8fd9\u91cc\u7a7a\u96c6\u4e00\u822c\u6765\u8bf4\u679a\u4e3e\u4e0d\u679a\u4e3e\u90fd\u6ca1\u6709\u5565\u95ee\u9898\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u65f6\u5019 \\(f(\\emptyset) = 0\\)\uff0c\u5982\u679c\u9047\u5230\u7279\u6b8a\u5b9a\u4e49\u7684\u518d\u770b\u60c5\u51b5\u5c31\u597d\uff0c\u4e3a\u4e86\u901a\u7528\u6240\u4ee5\u6392\u9664\u4e86\u7a7a\u96c6\u3002\uff09</p> <p>\u7136\u540e\u6c42\u4e0d\u6ee1\u8db3\u4efb\u610f\u6761\u4ef6\u7684\u5143\u7d20\u5c31\u76f4\u63a5 \\(|U| - ans\\) \u5373\u53ef\u3002</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle/#_4", "title": "\u4f8b\u9898", "text": ""}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle/#_5", "title": "\u4e0d\u5b9a\u65b9\u7a0b\u975e\u8d1f\u6574\u6570\u89e3\u8ba1\u6570", "text": "<p>\u7ed9\u5b9a\u82e5\u5e72\u4e2a\u975e\u8d1f\u6574\u6570 \\(x_i\\)\uff0c\u4fdd\u8bc1 \\(\\sum\\limits_{i = 1}^n x_i = m\\)\uff0c\u6c42\u51fa\u5408\u6cd5\u7684\u89e3\u7684\u6570\u91cf\uff0c\\(m \\in \\mathbb{N}\\)\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u653e \\(m\\) \u4e2a\u65e0\u5dee\u522b\u7684\u5c0f\u7403\uff0c\u7136\u540e\u8003\u8651\u5c06\u5176\u5206\u6210 \\(n\\) \u7ec4\uff08\\(1\\ 1\\ 2\\) \u548c \\(1\\ 2\\ 1\\) \u4e0d\u662f\u76f8\u540c\u7684\u5206\u6cd5\uff09\uff0c\u5bf9\u5408\u6cd5\u7684\u5206\u7ec4\u8ba1\u6570\u5373\u53ef\u3002</p> <p>\u8fd9\u4e2a\u5c31\u662f\u63d2\u677f\u6cd5\uff0c\u76f4\u63a5\u7528\u516c\u5f0f\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(x_i\\) \u6709\u4e00\u4e2a\u9650\u5236\uff1a\\(x_i \\le b_i\\)\uff0c\u6c42\u51fa\u5408\u6cd5\u89e3\u7684\u6570\u91cf\uff0c\\(b_i \\in \\mathbb{N}\\)\u3002</p> <p>\u8fd9\u4e2a\u9650\u5236\u4e00\u770b\u957f\u7684\u5c31\u50cf\u5bb9\u65a5\u539f\u7406\u91cc\u9762\u201c\u6ee1\u8db3\u67d0\u4e00\u4e2a\u6761\u4ef6\u7684\u5143\u7d20\u201d\uff0c\u8fd9\u91cc\u5728\u5bf9\u6ee1\u8db3\u6240\u6709\u9650\u5236\u7684\u5408\u6cd5\u89e3\u505a\u8ba1\u6570\uff0c\u6240\u4ee5\u8003\u8651\u5bb9\u65a5\u3002</p> <p>\u62bd\u8c61\u4e00\u4e0b model\uff1a</p> <ul> <li>\u96c6\u5408 \\(s\\)\uff1a\u8bbe \\(s_i\\) \u8868\u793a\u6ee1\u8db3\u7b2c \\(i\\) \u4e2a\u6761\u4ef6\u7684\u6240\u6709\u5408\u6cd5\u89e3\u7ec4\u6210\u7684\u96c6\u5408\u3002</li> <li>\u5168\u96c6 \\(U\\)\uff1a\u6240\u6709\u5408\u6cd5\u89e3\u3002</li> <li>\u7b54\u6848 \\(ans\\)\uff1a\\(|\\bigcup s_i|\\)\u3002</li> </ul> <p>\u5199\u51fa\u67ff\u5b50\uff1a\\(ans = |\\bigcup s_i| = \\sum\\limits_{p \\subseteq S,p\\not= \\emptyset} (-1)^{|p| + 1} f(p)\\)</p> <p>\u4e8e\u662f\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u8003\u8651\u7684\u5c31\u53ea\u6709\u600e\u4e48\u8ba1\u7b97 \\(f(p)\\)\uff0c\u8003\u8651\u4efb\u610f\u4e00\u4e2a \\(S\\) \u7684\u975e\u7a7a\u5b50\u96c6 \\(p\\)\uff0c\u5047\u8bbe\u5b83\u7531 \\(q\\) \u4e2a\u6761\u4ef6 \\(x(a_i) \\le b(a_i)\\) \u7ec4\u6210\uff08\\(a_i\\) \u7528\u4e8e\u679a\u4e3e\u4e0b\u6807\uff09\u3002</p> <p>\u55ef\uff0c\u7136\u540e\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5f88\u4e0d\u597d\u7b97\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u4ec0\u4e48\u5934\u7eea\uff0c\u6700\u6839\u672c\u7684\u539f\u56e0\u5728\u4e8e\u8fd9\u4e2a \\(x_i \\le b_i\\) \u7684\u6761\u4ef6\u662f\u96be\u4ee5\u8ba1\u7b97\u7684\u3002</p> <p>\u6211\u4eec\u60f3\u5230\uff0c\u5728\u63d2\u677f\u6cd5\u7684\u51e0\u4e2a\u57fa\u672c\u95ee\u9898\u91cc\uff0c\u6709\u4e00\u4e2a\u95ee\u9898\u662f\uff1a\u201c\u7b2c \\(i\\) \u7ec4\u7684\u5143\u7d20\u81f3\u5c11\u8981\u6709 \\(v_i\\) \u4e2a\u201d\uff0c\u8f6c\u5316\u6210\u4e0d\u5b9a\u65b9\u7a0b\u7684\u5f62\u5f0f\u5c31\u662f \\(x_i \\ge v_i\\)\uff0c\u8fd9\u4e2a\u4e1c\u897f\u662f\u5bb9\u6613\u8ba1\u6570\u7684\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u8003\u8651 \u201c\u6b63\u96be\u5219\u53cd\u201d \u7684\u601d\u60f3\uff0c\u8ba1\u7b97\u4e0d\u6ee1\u8db3 \\(x_i \\le b_i\\) \u7684\u5408\u6cd5\u89e3\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u8003\u8651\u8ba1\u7b97 \\(x_i \\ge (b_i + 1)\\) \u7684\u5408\u6cd5\u89e3\u4e2a\u6570\uff0c\u7136\u540e\u7528\u5168\u96c6 \\(U\\) \u7684\u5927\u5c0f\u51cf\u53bb\u8fd9\u4e2a\u5373\u53ef\uff08\u6c42\u8865\u96c6\uff09\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a \\(p\\) \u7684\u7b54\u6848\u5c31\u662f \\(\\dbinom{n + \\sum\\limits_{i = 1}^q (b(a_i) + 1) - 1}{n}\\)</p> <p>\u6240\u4ee5\u6700\u7ec8\u7684\u7b54\u6848\u662f \\(\\dbinom{n + m - 1}{n} - \\sum\\limits_{p \\subseteq S,p\\not= \\emptyset} (-1)^{|p| + 1} \\dbinom{n + \\sum\\limits_{i = 1}^q (b(a_i) + 1) - 1}{n}\\)</p>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle/#cf997c-sky-full-of-stars", "title": "CF997C Sky Full of Stars", "text": "<p>\u73b0\u5728\u6709\u4e00\u4e2a \\(n \\times n\\) \u7684\u7f51\u683c\uff0c\u4f60\u6709 <code>RGB</code> \u4e09\u79cd\u989c\u8272\uff0c\u4f60\u9700\u8981\u7ed9\u6bcf\u4e00\u4e2a\u683c\u5b50\u67d3\u8272\u3002</p> <p>\u8bf7\u95ee\u81f3\u5c11\u6709\u4e00\u884c\u6216\u8005\u4e00\u5217\u989c\u8272\u76f8\u540c\u7684\u65b9\u6848\u6570\u6709\u591a\u5c11\uff1f\u6c42\u51fa\u8fd9\u4e2a\u6570\u5bf9 \\(998244353\\) \u53d6\u6a21\u7684\u503c\u3002</p> <p>\\(n \\le 1e6\\)\u3002</p> <p>\u8fd9\u4e2a\u95ee\u9898\u662f\u6bd4\u8f83\u7ecf\u5178\u7684\u201c\u7528\u94a6\u5b9a\u6765\u5bb9\u6389\u81f3\u5c11\u65b9\u4fbf\u8ba1\u6570\u201d\u7684\u95ee\u9898\u3002</p> <p>\u6a21\u578b\u5e94\u8be5\u6bd4\u8f83\u597d\u770b\u51fa\u6765\uff0c\u6211\u4eec\u628a\u6709\u4e00\u884c\u6216\u8005\u4e00\u5217\u989c\u8272\u76f8\u540c\u770b\u4f5c \\(2n\\) \u4e2a\u6761\u4ef6\u5c31\u884c\u3002</p> <p>\u4e8e\u662f\u6a21\u578b\u62bd\u8c61\u51fa\u6765\uff1a</p> <ol> <li>\u5168\u96c6 U \uff1a\u6240\u6709\u53ef\u80fd\u7684\u67d3\u8272\u65b9\u5f0f\uff0c\u65b9\u6848\u6570\u662f \\(3^{n\\times n}\\)\u3002</li> <li>\u5143\u7d20 \uff1a\u67d3\u8272\u65b9\u5f0f\u3002</li> <li>\u5c5e\u6027\uff1a\uff08\u66f4\u597d\u7684\u7406\u89e3\u662f\u201c\u4e00\u79cd\u9650\u5236/\u6761\u4ef6\u201d\uff09\u4e00\u884c\u6216\u8005\u4e00\u5217\u6d82\u7684\u989c\u8272\u5b8c\u5168\u76f8\u540c\u3002</li> </ol> <p>\u53d1\u73b0\u5c5e\u6027\u672c\u8d28\u4e0a\u5c31\u662f \\(2n\\) \u4e2a\u9650\u5236\uff0c\u4e5f\u5c31\u662f\u7b2c \\(i\\) \u884c\u5168\u76f8\u540c\uff0c\u7b2c \\(j\\) \u5217\u5168\u76f8\u540c\u8fd9\u6837\u7684 \\(2n\\) \u4e2a\u6761\u4ef6\u3002</p> <p>\u8981\u6c42\u7684\u4e1c\u897f\u662f\u81f3\u5c11\u6709\u4e00\u884c\u6216\u8005\u4e00\u5217\u7684\u9650\u5236/\u6761\u4ef6\u88ab\u6ee1\u8db3\u7684\u65b9\u6848\u6570\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5982\u679c\u8bbe \\(S_i\\) \u8868\u793a\u6240\u6709\u6ee1\u8db3\u7b2c \\(i\\) \u4e2a\u5c5e\u6027/\u9650\u5236\u7684\u67d3\u8272\u65b9\u6848\u6784\u6210\u7684\u96c6\u5408\uff0c</p> <p>\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u628a\u6240\u6709 \\(|S_i|\\) \u76f8\u52a0\uff0c\u80af\u5b9a\u4f1a\u7b97\u91cd\uff0c\u90a3\u4e48\u8003\u8651\u5bb9\u65a5\uff0c\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f \\(|\\bigcup S_i|\\)\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7c7b\u6bd4\u6700\u7b80\u5355\u7684\u5bb9\u65a5\uff0c\u7c7b\u4f3c\u6c42 \\(100\\) \u4ee5\u5185\u6709\u591a\u5c11\u6570\u81f3\u5c11\u542b\u6709 \\(2,3,5\\) \u5176\u4e2d\u4e00\u4e2a\u56e0\u6570\u3002</p> <p>\u5199\u51fa\u6765\u5c31\u662f\uff1a</p> \\[ ans = \\sum\\limits_{S \\not= \\emptyset}(-1)^{|S| - 1} f(S) \\] <p>\u5176\u4e2d \\(S\\) \u8868\u793a\u82e5\u5e72\u4e2a \\(S_i\\) \u7684\u4ea4\uff0c\\(f(S)\\) \u8868\u793a\u8fd9\u79cd\u60c5\u51b5\u7684\u8d21\u732e\u3002</p> <p>\u8003\u8651 \\(S\\) \u8868\u793a\u6709\u67d0 \\(i\\) \u884c\uff0c\u67d0 \\(j\\) \u5217\u662f\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c\u9009\u51fa\u6765\u7684\u8fd9 \\(i\\) \u884c \\(j\\) \u5217\u7684\u989c\u8272\u90fd\u662f\u4e00\u6837\u7684\u3002</p> <p>\u6211\u4eec\u73b0\u5728\u5c31\u76f8\u5f53\u4e8e \u94a6\u5b9a \u8fd9 \\(i\\) \u884c \\(j\\) \u5217\u662f\u540c\u4e00\u79cd\u989c\u8272\uff0c\u5269\u4e0b\u7684 \\((n - i)(n - j)\\) \u4e2a\u683c\u5b50\u5c31\u968f\u4fbf\u9009\uff08\u5c31\u7b97\u53c8\u6709\u65b0\u7684\u76f8\u7b49\u7684\u4e5f\u4e0d\u7ba1\uff0c\u56e0\u4e3a\u8fd9\u91cc\u662f\u94a6\u5b9a\uff0c\u4e5f\u5c31\u662f\u53ea\u8003\u8651\u88ab\u9650\u5236\u7684\u90e8\u5206\uff0c\u5176\u4ed6\u7684\u90e8\u5206\u90fd\u76f4\u63a5\u5bb9\u65a5\u6389\u4e86\uff09\u3002</p> <p>\u56e0\u4e3a \\(i\\) \u884c \\(j\\) \u5217\u662f\u53ef\u4ee5\u4efb\u610f\u9009\u7684\uff08\u8fd9\u91cc\u53ea\u662f\u8003\u8651\u67d0\u4e2a\u56fa\u5b9a\u72b6\u6001\uff09\uff0c\u90a3\u4e48 \\(f(S)\\) \u5c31\u662f \\(\\dbinom{n}{i}\\dbinom{n}{j}3^{1 + (n - i)(i - j)}\\)</p> <p>\u53ef\u4ee5\u5f97\u77e5\uff1a</p> \\[ \\begin{aligned} ans &amp;= 3\\sum\\limits_{i \\not = 0 \\lor j \\not = 0} \\dbinom{n}{i} \\dbinom{n}{j} (-1)^{i + j - 1} 3^{i + j} \\end{aligned} \\] <p>\u8003\u8651\u679a\u4e3e \\(i\\)\uff0c\u628a\u5f0f\u5b50\u62c6\u5f00\uff1a</p> \\[ \\begin{aligned} ans= 3\\sum\\limits_{i &gt; 0} \\ [\\ \\dbinom{n}{i}(-1)^i \\sum\\limits_{j &gt; 0} \\ [\\dbinom{n}{j} (-1)^j 3^{(n - i)(n - j)}\\ ]\\ ] \\end{aligned} \\] <p>\u540e\u9762\u90a3\u5768\u770b\u8d77\u6765\u50cf\u4e8c\u9879\u5f0f\u5b9a\u7406\uff0c\u628a \\(j=0\\) \u8865\u4e0a\u4e4b\u540e\u51cf\u53bb\u518d\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\uff1a</p> <p>\u4e5f\u53ef\u4ee5\u62c9\u51fa\u6765\u53d8\u6210\u4e24\u4e2a \\(\\sum\\) \u7684\u4e58\u79ef\uff0c\u5c31\u53ef\u4ee5\u5408\u5e76\u4e86\u3002</p> \\[ ans = 3\\sum\\limits_{i &gt; 0}\\ [\\ \\dbinom{n}{i}(-1)^i([3^{n - i} - 1]^n - 3^{(n - i)n})\\ ] \\] <p>\u7136\u540e\u5c31\u53ef\u4ee5 \\(O(n \\log n)\\) \u505a\u4e86\u3002    </p> <p>\u4ee3\u7801\u5b9e\u73b0\u6709\u51e0\u4e2a\u7ec6\u8282\uff0c\u6ce8\u610f\u51cf\u6cd5\u4e4b\u540e\u8981\u52a0mod\uff0c\u7136\u540e\u5c3d\u91cf\u7528 i64 \u505a\u8fd0\u7b97\u907f\u514d\u5fd8\u8bb0\u4e58 1ll\u3002</p> <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\n\nconst i64 si = 1e6 + 10;\nconst i64 mod = 998244353;\n\ni64 n;\ni64 inv[si], fact[si], invf[si];\nvoid init(i64 n) {\ninv[1] = 1, fact[0] = invf[0] = 1;\nfor(i64 i = 2; i &lt;= n; ++i)\ninv[i] = 1ll * (mod - mod / i) * inv[mod % i] % mod;\nfor(i64 i = 1; i &lt;= n; ++i)\nfact[i] = 1ll * fact[i - 1] * i % mod,\ninvf[i] = 1ll * invf[i - 1] * inv[i] % mod;\n}\ni64 C(i64 n, i64 m) {\nif(m &lt; 0 || n &lt; m) return 0;\nreturn 1ll * fact[n] * invf[n - m] % mod * invf[m] % mod;\n}\ni64 Qpow(i64 a, i64 b) {\ni64 ret = 1 % mod;\nfor(; b; b &gt;&gt;= 1) {\nif(b &amp; 1) ret = ret * a % mod;\na = a * a % mod;\n} return ret % mod;\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ni64 ans = 0, sum = 0;\ncin &gt;&gt; n, init(n);\nfor(i64 i = 1; i &lt;= n; i++) ans = (ans + Qpow(3ll, (1ll * n * (n - i) + i)) * Qpow(-1ll, i + 1ll) * C(n, i) % mod + mod) % mod;\nans = ans * 2ll % mod;\ni64 tmp = 0;\nfor(i64 i = 0; i &lt; n; i++) {\ni64 t = -Qpow(3ll, i);\ntmp = (tmp + C(n, i) * Qpow(-1, i + 1ll) * (Qpow(1 + t, n) - Qpow(t, n) + mod) % mod + mod) % mod;\n}\nans = (ans + tmp * 3) % mod;\ncout &lt;&lt; ans % mod &lt;&lt; endl;\nreturn 0; }\n</code></pre>"}, {"location": "algor/math/combinatorics/inclusion-exclusion-principle/#arc101ec-ribbons-on-tree", "title": "ARC101(E/C) Ribbons on Tree", "text": "<p>To be continued.</p>"}, {"location": "algor/math/combinatorics/lucas/", "title": "Lucas \u5b9a\u7406", "text": ""}, {"location": "algor/math/combinatorics/lucas/#lucas", "title": "Lucas \u5b9a\u7406", "text": ""}, {"location": "algor/math/combinatorics/lucas/#_1", "title": "\u5185\u5bb9", "text": "<p>\u5bf9\u4e8e\u4efb\u610f\u8d28\u6570 \\(p\\)\uff0c\u5b58\u5728\u5982\u4e0b\u5b9a\u7406\uff1a</p> \\[ \\dbinom{n}{m} \\equiv \\dbinom{\\lfloor\\frac{n}{p}\\rfloor}{\\lfloor\\frac{m}{p}\\rfloor} \\cdot \\dbinom{n \\bmod p}{m \\bmod p} \\pmod p \\]"}, {"location": "algor/math/combinatorics/lucas/#_2", "title": "\u8bc1\u660e", "text": "<p>\u6574\u4e2a\u8fc7\u7a0b\u6781\u5ea6\u871c\u8702\uff0c\u4e0d\u77e5\u9053\u548b\u60f3\u51fa\u6765\u7684\u3002</p> <p>\u9996\u5148\u8003\u8651\u8bc1\u660e\u4e00\u4e2a\u5f15\u7406\uff1a</p> <p>I. \u5bf9\u4e8e\u4e00\u4e2a\u5173\u4e8e \\(x\\) \u7684 \\(p\\) \u6b21\u4e8c\u9879\u5f0f \\(f^p(x) = (ax^n + bx^m)^p\\)\uff0c\u6709\uff1a\\(f^p(x) \\equiv f(x^p) \\pmod p\\) \u5373\u662f \\((ax^n + bx^m)^p \\equiv (a^px^{pn} + b^px^{pm}) \\pmod p\\)\u3002</p> <p>\u6211\u4eec\u8003\u8651\u5148\u8bc1\u660e\u5f31\u5316\u7248\u672c\uff0c\u7136\u540e\u518d\u63a8\u5e7f\uff1a</p> <p>II. \u5bf9\u4e8e\u4e8c\u9879\u5f0f \\((a + b)^p\\)\uff0c\u5b83\u5728\u6a21 \\(p\\) \u610f\u4e49\u4e0b\u548c \\(a^p + b^p\\) \u540c\u4f59\u3002</p> <p>\u8003\u8651\u4e8c\u9879\u5f0f\u7cfb\u6570 \\(\\dbinom{p}{i}\\) \u7684\u53d6\u503c\uff0c\u62c6\u5f00\u8003\u8651\uff1a\\(\\dfrac{p!}{i!(p - i)!}\\)\uff0c\u6ce8\u610f\u5230\u5206\u5b50\u53ea\u6709\u4e00\u4e2a \\(p\\)\uff0c\u6240\u4ee5\u5728\u6a21 \\(p\\) \u610f\u4e49\u4e0b\uff0c\u53ea\u6709\u5f53 \\(i = 0\\) \u6216\u8005 \\(i = p\\) \u7684\u65f6\u5019\uff0c\\(\\dbinom{p}{i} = 1\\)\uff0c\u5426\u5219\u7b49\u4e8e \\(0\\)\u3002</p> <p>\u6240\u4ee5\u4ee3\u5165\u4e8c\u9879\u5f0f\u5b9a\u7406\uff1a\\((a + b)^p \\equiv \\sum\\limits_{i = 0}^p \\dbinom{p}{i} a^{p - i}b^i \\equiv \\sum\\limits_{i = 0}^p [i = 0\\ \\lor\\ i = p] a^{p - i}b^i \\equiv a^p + b^p \\pmod p\\)\u3002</p> <p>\u8fd9\u91cc\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u5176\u4ed6\u6709\u9650\u5236\u7684\u5b9a\u7406\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u6bd4\u8f83\u81ea\u7136\u7684\u63a8\u5e7f\u5230\u591a\u9879\u5f0f\u5f62\u5f0f\u3002</p> <p>\u7136\u540e\u6211\u4eec\u56de\u5230\u539f\u95ee\u9898\uff0c\u6c42 \\(\\dbinom{n}{m} \\bmod p\\) \u672c\u8d28\u4e0a\u662f\u6c42 \\([x^m](1 + x)^n \\mod p\\)\uff0c\u6b64\u65f6\u6709\u4e00\u4e2a\u6bd4\u8f83\u871c\u8702\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u8003\u8651\u628a\u4f59\u6570\u5206\u79bb\u4e00\u4e0b\uff1a</p> \\[ \\begin{aligned} (1 + x)^n &amp;\\equiv (1 + x)^{p \\lfloor\\frac{n}{p}\\rfloor} (1 + x)^{n \\bmod p} \\pmod p\\\\ &amp;\\equiv (1^p + x^p)^{\\lfloor\\frac{n}{p}\\rfloor}(1 + x)^{n \\bmod p}\\pmod p\\ (\\text{use theorem I.})\\\\ &amp;\\equiv (1 + x)^{\\lfloor\\frac{n}{p}\\rfloor}(1 + x) ^{n \\bmod p} \\pmod p\\ (\\text{use theorem II.}) \\end{aligned} \\] <p>\u7136\u540e\u6211\u4eec\u5bf9\u4e24\u8fb9\u5206\u522b\u770b\u4e00\u4e0b\u8d21\u732e\uff1a\\([x^m](1+x)^{\\lfloor\\frac{n}{p}\\rfloor} = \\dbinom{\\frac{n}{p}}{\\frac{m}{p}},[x^m](1 + x)^{n \\bmod p} = \\dbinom{n\\bmod p}{m\\bmod p}\\)\u3002</p> <p>\u7531\u6b64\uff0c\u53ef\u4ee5\u5f97\u5230 Lucas \u5b9a\u7406\u7684\u8868\u8fbe\u5f0f\uff0cQ.E.D.</p>"}, {"location": "algor/math/combinatorics/lucas/#_3", "title": "\u5b9e\u73b0", "text": "<p>\u56e0\u4e3a \\(n / p\\) \u7684\u6570\u91cf\u7ea7\u671f\u671b\u663e\u7136\u5927\u4e8e \\(n \\bmod p\\)\uff0c\u6240\u4ee5\u6211\u4eec\u9884\u5904\u7406\u6a21 \\(p\\) \u610f\u4e49\u4e0b\u7684\u7ec4\u5408\u6570\uff0c\u524d\u8005\u76f4\u63a5\u8c03\u7528\uff0c\u540e\u8005\u9012\u5f52 \\(\\log p\\) \u6b21\u5373\u53ef\uff0c\u6240\u4ee5\u4e00\u822c\u6765\u8bf4 Lucas \u8981\u6c42 \\(p &lt; 10^5\\)\u3002 </p> <pre><code>i64 lucas(i64 n, i64 m, i64 p) {\nif(m == 0) return 1ll;\nreturn (C(n % p, m % p, p) * lucas(n / p, m / p, p)) % p;\n}\n</code></pre>"}, {"location": "algor/math/combinatorics/lucas/#exlucas", "title": "exLucas", "text": "<p>\u53ef\u4ee5\u5bf9\u4e8e\u4efb\u610f\u6b63\u6574\u6570 \\(p\\) \u4f7f\u7528\u7684 Lucas\u3002</p> <p>\u8003\u8651\u7c7b\u4f3c exCRT \u7684\u7ecf\u5178\u5957\u8def\uff0c\u6211\u4eec\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u7528 CRT \u6784\u9020\u4e00\u4e2a\u65b9\u7a0b\u7136\u540e\u5408\u5e76\uff0c\u8fd9\u6837\u6bcf\u4e2a\u65b9\u7a0b\u91cc\u9762\u90fd\u662f\u4e00\u4e2a Lucas\u3002</p> <p>\u4e5f\u5c31\u662f\uff0c\u4ee4 \\(p = \\prod\\limits_{i = 1}^ra_{r}^{c_r}\\)\u3002</p> <p>\u7136\u540e\u56e0\u4e3a\u4efb\u610f \\(a_{i}^{c_i}, a_{j}^{c_j}\\) \u4e92\u8d28\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u4ed6\u4eec\u5f53\u4f5c\u6a21\u6570\u3002</p> <p>\u7531 CRT\uff0c\u4ee4 \\(\\dbinom{n}{m}\\) \u4e3a\u672a\u77e5\u6570\uff0c\u6709\uff1a</p> \\[ \\begin{cases} c_1 &amp;\\equiv \\dbinom{n}{m} \\pmod {a_{1}^{c_1}} \\\\ c_2 &amp;\\equiv \\dbinom{n}{m} \\pmod {a_{2}^{c_2}} \\\\ &amp;\\cdots\\\\ c_r &amp;\\equiv \\dbinom{n}{m} \\pmod {a_{r}^{c_r}} \\end{cases} \\] <p>\u53ef\u4ee5\u7531\u6b64\u89e3\u51fa\u672a\u77e5\u6570\u5728\u6a21 \\(p\\) \u610f\u4e49\u4e0b\u7684\u552f\u4e00\u89e3 \\(\\dbinom{n}{m} \\bmod p\\)</p>"}, {"location": "algor/math/combinatorics/pigeonhole-principle/", "title": "\u9e3d\u5de2\u539f\u7406", "text": "<p>\u6458\u5f55\u81ea OI-Wiki</p> <p>\u62bd\u5c49\u539f\u7406\uff0c\u4ea6\u79f0\u9e3d\u5de2\u539f\u7406\uff08the pigeonhole principle)\u3002 \u5b83\u5e38\u88ab\u7528\u4e8e\u8bc1\u660e\u5b58\u5728\u6027\u8bc1\u660e\u548c\u6c42\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u89e3\u3002</p>"}, {"location": "algor/math/combinatorics/pigeonhole-principle/#_1", "title": "\u7b80\u5355\u60c5\u51b5", "text": "<p>\u5c06 \\(n+1\\) \u4e2a\u7269\u4f53\uff0c\u5212\u5206\u4e3a \\(n\\) \u7ec4\uff0c\u90a3\u4e48\u6709\u81f3\u5c11\u4e00\u7ec4\u6709\u4e24\u4e2a\uff08\u6216\u4ee5\u4e0a\uff09\u7684\u7269\u4f53\u3002</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u770b\u8d77\u6765\u6bd4\u8f83\u663e\u7136\uff0c\u8bc1\u660e\u65b9\u6cd5\u8003\u8651\u53cd\u8bc1\u6cd5\uff1a\u5047\u5982\u6bcf\u4e2a\u5206\u7ec4\u6709\u81f3\u591a \\(1\\) \u4e2a\u7269\u4f53\uff0c\u90a3\u4e48\u6700\u591a\u6709 \\(1\\times n\\) \u4e2a\u7269\u4f53\uff0c\u800c\u5b9e\u9645\u4e0a\u6709 \\(n+1\\) \u4e2a\u7269\u4f53\uff0c\u77db\u76fe\u3002</p>"}, {"location": "algor/math/combinatorics/pigeonhole-principle/#_2", "title": "\u63a8\u5e7f", "text": "<p>\u5c06 \\(n\\) \u4e2a\u7269\u4f53\uff0c\u5212\u5206\u4e3a \\(k\\) \u7ec4\uff0c\u90a3\u4e48\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5206\u7ec4\uff0c\u542b\u6709\u5927\u4e8e\u6216\u7b49\u4e8e \\(\\left \\lceil \\dfrac{n}{k} \\right \\rceil\\) \u4e2a\u7269\u54c1\u3002</p> <p>\u63a8\u5e7f\u7684\u5f62\u5f0f\u4e5f\u53ef\u4ee5\u4f7f\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff1a\u82e5\u6bcf\u4e2a\u5206\u7ec4\u542b\u6709\u5c0f\u4e8e \\(\\left \\lceil \\dfrac{n}{k} \\right \\rceil\\) \u4e2a\u7269\u4f53\uff0c\u5219\u5176\u603b\u548c \\(S\\leq (\\left \\lceil \\dfrac{n}{k} \\right \\rceil -1 ) \\times k=k\\left\\lceil \\dfrac{n}{k} \\right\\rceil-k &lt; k(\\dfrac{n}{k}+1)-k=n\\) \u77db\u76fe\u3002</p> <p>\u6b64\u5916\uff0c\u5212\u5206\u8fd8\u53ef\u4ee5\u5f31\u5316\u4e3a\u8986\u76d6\u7ed3\u8bba\u4e0d\u53d8\u3002 \u7ed9\u5b9a\u96c6\u5408 \\(S\\), \u4e00\u4e2a \\(S\\) \u7684\u975e\u7a7a\u5b50\u96c6\u6784\u6210\u7684\u7c07 \\(\\{A_1,A_2\\ldots A_k\\}\\)</p> <ul> <li>\u82e5\u6ee1\u8db3 \\(\\bigcup_{i=1}^k A_i\\) \u5219\u79f0\u4e3a \\(S\\) \u7684\u4e00\u4e2a\u8986\u76d6\uff08cover)</li> <li>\u82e5\u4e00\u4e2a\u8986\u76d6\u8fd8\u6ee1\u8db3 \\(i\\neq j\\to A_i\\cap A_j=\\varnothing\\) \u5219\u79f0\u4e3a \\(S\\) \u7684\u4e00\u4e2a\u5212\u5206\u3002</li> </ul> <p>\u9e3d\u5de2\u539f\u7406\u53ef\u4ee5\u6709\u5982\u4e0b\u53d9\u8ff0\uff1a\u5bf9\u4e8e \\(S\\) \u7684\u4e00\u4e2a\u8986\u76d6 \\(\\{A_1,A_2\\ldots A_k\\}\\) \u6709\u81f3\u5c11\u4e00\u4e2a\u96c6\u5408 \\(A_i\\) \u6ee1\u8db3 \\(\\left\\vert A_i \\right\\vert \\geq \\left\\lceil \\dfrac{\\left\\vert S \\right\\vert}{k} \\right\\rceil\\)\u3002</p>"}, {"location": "algor/math/combinatorics/stirling/", "title": "\u65af\u7279\u6797\u6570", "text": ""}, {"location": "algor/math/combinatorics/stirling/#_1", "title": "\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570", "text": "<p>\u5b9a\u4e49\uff1a\u5c06 \\(n\\) \u4e2a\u4e0d\u540c\u5143\u7d20\u5206\u5230 \\(k\\) \u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u975e\u7a7a\u76d2\u5b50\u91cc\u9762\u7684\u65b9\u6848\u6570\u4e3a \\(\\begin{Bmatrix}n \\\\ k\\end{Bmatrix}\\)\u3002</p> <p>\u9012\u63a8\u5f0f\uff1a \\(\\begin{Bmatrix}n \\\\ k\\end{Bmatrix} = \\begin{Bmatrix}n - 1 \\\\ k - 1\\end{Bmatrix} + k \\begin{Bmatrix}n - 1 \\\\ k\\end{Bmatrix}\\)\u3002</p> <p>\u8bc1\u660e\uff1a\u5c31\u662f\u8003\u8651\u65b0\u52a0\u5165\u7684\u8fd9\u4e2a\u7403\u662f\u653e\u5230\u539f\u6709\u7684\u8fd8\u662f\u65b0\u5efa\u4e00\u4e2a\u3002</p> <p>\u8fb9\u754c\uff1a\\(\\begin{Bmatrix}n \\\\ 0\\end{Bmatrix} = [n = 0]\\)\u3002</p>"}, {"location": "algor/math/combinatorics/vandermonde-convolution/", "title": "\u8303\u5fb7\u8499\u5fb7\u5377\u79ef", "text": ""}, {"location": "algor/math/combinatorics/vandermonde-convolution/#_1", "title": "\u516c\u5f0f", "text": "<p>\u53c8\u79f0\u6731\u4e16\u6770-\u8303\u5fb7\u8499\u5fb7\u6052\u7b49\u5f0f(Chu-Vandermonde Identity)\u3002</p> \\[ \\sum\\limits_{i = 0}^k \\dbinom{n}{i}\\dbinom{m}{k - i} = \\dbinom{n + m}{k} \\] <p>\u4e5f\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[ \\sum\\limits_{i = -r}^s \\dbinom{n}{r + i} \\dbinom{m}{s - i} = \\dbinom{n + m}{r + s} \\]"}, {"location": "algor/math/combinatorics/vandermonde-convolution/#_2", "title": "\u8bc1\u660e", "text": "<p>\u53ea\u8bc1\u660e\u7b2c\u4e00\u4e2a\u5f0f\u5b50\uff0c\u7b2c\u4e8c\u4e2a\u7c7b\u4f3c\u3002</p> <p>\u8003\u8651\u7ec4\u5408\u610f\u4e49\u3002</p> <p>\u672c\u8d28\u4e0a\u5c31\u662f\u5728\u4e24\u4e2a\u96c6\u5408 \\(S, T\\) \u5f53\u4e2d\u9009 \\(k\\) \u4e2a\u6570\uff0c\u5176\u4e2d \\(|S| = n, |T| = m\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u5206\u522b\u8003\u8651\u5728\u4e24\u8fb9\u5404\u9009\u51e0\u4e2a\uff0c\u7136\u540e\u4e58\u8d77\u6765\uff0c\u4e0d\u96be\u53d1\u73b0\u5b83\u7b49\u4ef7\u4e8e\u5728 \\(S\\cup T\\) \u5f53\u4e2d\u9009 \\(k\\) \u4e2a\uff0c\u516c\u5f0f\u5f97\u8bc1\u3002</p>"}, {"location": "algor/math/combinatorics/vandermonde-convolution/#_3", "title": "\u63a8\u8bba", "text": ""}, {"location": "algor/math/combinatorics/vandermonde-convolution/#i", "title": "I", "text": "\\[ \\sum\\limits_{i = 0}^n \\dbinom{n}{i}^2 = \\dbinom{2n}{n} \\] <p>\u7531 \\(\\dbinom{n}{i} = \\dbinom{n}{n - i}\\)\uff0c\u7ed3\u5408\u516c\u5f0f\u53ef\u4ee5\u5f97\u5230\u3002</p>"}, {"location": "algor/math/combinatorics/vandermonde-convolution/#ii", "title": "II", "text": "\\[ \\sum\\limits_{i = 0}^n \\dbinom{n}{i}\\dbinom{m}{i} = \\dbinom{n + m}{n} \\] <p>\u7531 \\(\\dbinom{n}{i} = \\dbinom{n}{n - i}\\) \u7ed3\u5408\u516c\u5f0f\u53ef\u4ee5\u5f97\u5230\uff0c\u63a8\u8bba I \u662f\u8fd9\u4e2a\u7684\u7279\u6b8a\u60c5\u51b5\u3002</p> <p>\u4e5f\u53ef\u4ee5\u8003\u8651\u7f51\u683c\u56fe\u8def\u5f84\u8ba1\u6570\uff0c\u7528\u7ec4\u5408\u610f\u4e49\u8bc1\u660e\uff0c\u8fd9\u91cc\u7701\u7565\u4e0d\u63d0\u3002</p>"}, {"location": "algor/math/combinatorics/vandermonde-convolution/#iii", "title": "III", "text": "\\[ \\sum\\limits_{i = 1}^n\\dbinom{n}{i}\\dbinom{n}{i - 1} = \\dbinom{2n}{n - 1} \\] <p>\u8fd9\u4e2a\u5f0f\u5b50\u8981\u5c0f\u5fc3\u4e0b\u6807\uff0c\u6ca1\u6709 \\(0\\)\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u641e\u51fa \\(0\\)\u3002</p> <p>\u62c6\u4e00\u9879\u51fa\u53bb\uff1a</p> \\[ \\sum\\limits_{i = 1}^{n - 1}\\dbinom{n}{i}\\dbinom{n}{i - 1} + \\dbinom{n}{n - 1} \\] <p>\u6ce8\u610f\u5230 \\(\\dbinom{n}{0} = 1 = \\dbinom{n}{n}\\)\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6574\u4f53\u5e73\u79fb\u4e00\u4f4d\uff1a</p> \\[ \\sum\\limits_{i = 0}^{n - 1}\\dbinom{n}{i}\\dbinom{n}{i + 1} \\iff \\\\ \\sum\\limits_{i = 0}^{n - 1}\\dbinom{n}{i}\\dbinom{n}{n - i - 1} \\iff \\\\ \\dbinom{2n}{n - 1} \\]"}, {"location": "algor/math/combinatorics/vandermonde-convolution/#_4", "title": "\u4f8b\u9898", "text": ""}, {"location": "algor/math/linear-algebra/gauss/", "title": "\u9ad8\u65af\u6d88\u5143", "text": ""}, {"location": "algor/math/linear-algebra/gauss/#_1", "title": "\u6982\u8ff0", "text": "<p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7528\u6765\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u4e00\u4e2a\u7b97\u6cd5\u3002</p> <p>\u7ebf\u6027\u65b9\u7a0b\u7ec4\u5c31\u662f\u6bcf\u4e2a\u53d8\u91cf\u7684\u6700\u9ad8\u6b21\u6570\u90fd\u662f\u4e00\u6b21\u7684 \\(n\\) \u5143\u65b9\u7a0b\u7ec4\u3002</p> <p>\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> \\[ \\begin{cases}     2x_1+4x_2+5x_3 = 23\\\\     3x_1+5x_2+2x_3 = 14\\\\     4x_1+6x_2+3x_3 = 24 \\end{cases} \\] <p>\uff08\u968f\u624b\u5199\u7684\u4e0d\u4e00\u5b9a\u6709\u89e3\uff09</p> <p>\u5c0f\u5b66\u6570\u5b66\u5b66\u8fc7\uff0c\u89e3\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\u9700\u8981\u7528\u5230\u6d88\u5143\u6cd5\uff0c\u6ce8\u610f\u5230\u6d88\u5143\u6cd5\u7684\u672c\u8d28\u662f\u5bf9\u53d8\u91cf\u7684\u7cfb\u6570\u8fdb\u884c\u8fd0\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa\u65b9\u7a0b\u7ec4\u7684\u7cfb\u6570\u77e9\u9635\uff1a</p> \\[ \\begin{bmatrix}        2 &amp; 4 &amp; 5 \\\\     3 &amp; 5 &amp; 2 \\\\     4 &amp; 6 &amp; 3 \\end{bmatrix}  \\] <p>\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u7b49\u53f7\u53f3\u8fb9\u90fd\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u4e8e\u662f\u6211\u4eec\u628a\u8fd9\u4e2a\u5e38\u6570\u4e5f\u5199\u8fdb\u53bb\uff1a</p> \\[ \\begin{bmatrix}        2 &amp; 4 &amp; 5 \\ |\\ 23\\\\     3 &amp; 5 &amp; 2 \\ |\\ 14 \\\\     4 &amp; 6 &amp; 3 \\ |\\ 24 \\end{bmatrix}  \\] <p>\u8fd9\u5c31\u662f\u4e00\u4e2a \\(n\\times (n + 1)\\) \u7684\u589e\u5e7f\u77e9\u9635\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u628a\u8fd9\u4e2a\u589e\u5e7f\u77e9\u9635\u901a\u8fc7\u4e00\u4e9b\u53d8\u6362\u53d8\u6210\u8fd9\u6837\u7684\u5f62\u5f0f\uff1a</p> \\[ \\begin{bmatrix}     1 &amp; c_{1,2} &amp;c_{1,3} \\ &amp;|\\ x\\\\     0 &amp; 1 &amp; c_{2,3}\\ &amp;|\\ y\\\\     0 &amp; 0 &amp; 1\\ &amp;|\\ z\\\\ \\end{bmatrix} \\] <p>\u5176\u4e2d \\(c\\) \u662f\u4e00\u4e2a\u5e38\u6570\uff0c\\(x,y,z\\) \u90fd\u662f\u5e38\u6570\u3002</p> <p>\u8fd9\u6837\u7684\u77e9\u9635\u88ab\u53eb\u505a\u65b9\u7a0b\u7ec4\u7684\u4e0a\u4e09\u89d2\u5f62\u77e9\u9635\u3002</p> <p>\u8fd9\u4e2a\u4e0a\u4e09\u89d2\u5f62\u77e9\u9635\u53ef\u4ee5\u518d\u5316\u7b80\u6210\u4e00\u4e2a\u7b80\u5316\u9636\u68af\u5f62\u77e9\u9635\uff08\u65b9\u5f0f\u662f\u4ece\u4e0b\u5f80\u4e0a\u4ee3\u5165\uff09\uff1a</p> \\[ \\begin{bmatrix}     1 &amp; 0 &amp; 0\\ |\\ a\\\\     0 &amp; 1 &amp; 0\\ |\\ b\\\\     0 &amp; 0 &amp; 1\\ |\\ c\\\\ \\end{bmatrix} \\] <p>\u8fd9\u4e2a\u7b80\u5316\u9636\u68af\u5f62\u77e9\u9635\u5c31\u76f4\u63a5\u8868\u793a\u4e86\u65b9\u7a0b\u7ec4\u7684\u552f\u4e00\u89e3 \\(x_1 = a, x_2 = b, x_3 = c\\)\u3002</p> <p>\u628a\u589e\u5e7f\u77e9\u9635\u53d8\u6210\u4e0a\u4e09\u89d2\u77e9\u9635\uff0c\u518d\u53d8\u6210\u7b80\u5316\u9636\u68af\u5f62\u77e9\u9635\u7684\u8fc7\u7a0b\u5c31\u662f\u9ad8\u65af\u6d88\u5143\u3002</p> <p>\u5177\u4f53\u5206\u4e09\u6b65\uff1a</p> <ol> <li>\u626b\u63cf \\(i \\in [1, n]\\)\uff0c\u5bf9\u4e8e \\(i\\)\uff0c\u4ece \\([i,n]\\) \u884c\u5f53\u4e2d   \u627e\u5230\u4e00\u4e2a \\(x_{1} \\sim x_{i-1}\\) \u7684\u7cfb\u6570\u90fd\u4e3a\u96f6\uff0c\\(x_i\\) \u7684\u7cfb\u6570\u4e0d\u4e3a\u96f6\u7684\u884c\uff0c\u628a\u5b83\u4ea4\u6362\u5230\u7b2c \\(i\\) \u884c\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u4ece \\([1,i)\\) \u91cc\u9762\u627e\uff0c\u56e0\u4e3a\u6ca1\u7528\u554a\uff09\u3002</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a \\(i\\)\uff0c\u626b\u63cf \\(j \\in [1, n]\\)\uff0c\u5bf9\u4e8e \\(\\forall j \\not ={i}\\)\uff0c\u5229\u7528\u5f53\u524d\u7b2c \\(i\\) \u884c\u7684\u7cfb\u6570\u6d88\u6389\u7b2c \\(j\\) \u884c\u7684 \\(x_i\\) \u7684\u7cfb\u6570\uff0c\u5c06\u5176\u53d8\u4e3a\u96f6\uff08\u5177\u4f53\u65b9\u5f0f\u662f\u5229\u7528\u521d\u7b49\u884c\u53d8\u6362\uff0c\u4ee4\u7b2c \\(i\\) \u884c\u4e58\u4e0a\u4e00\u4e2a\u7cfb\u6570\u4f7f\u5f97 \\(c_{i,i}\\) \u53d8\u6210 \\(c_{j, i}\\) \u4e4b\u540e\uff0c\u8ba9\u7b2c \\(j\\) \u884c\u6574\u4f53\u51cf\u53bb\u7b2c \\(i\\) \u884c\uff09\u3002</li> <li>\u56de\u4ee3\u5199\u51fa\u7b80\u5316\u9636\u68af\u5f62\u77e9\u9635\u3002</li> </ol> <p>\u5f53\u7136\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u4e8b\u60c5\u662f\u65b9\u7a0b\u7ec4\u662f\u4e0d\u4e00\u5b9a\u6709\u552f\u4e00\u89e3\u7684\u3002</p> <p>\u9996\u5148\u5982\u679c\u6d88\u5143\u7684\u65f6\u5019\u51fa\u73b0\u4e86 \\(0 = d\\) \u7684\u8fd9\u79cd\u65b9\u7a0b\uff0c\u65b9\u7a0b\u663e\u7136\u65e0\u89e3\u3002</p> <p>\u7136\u540e\u6ce8\u610f\u5230\u8fd9\u662f\u4e00\u4e2a\u8fed\u4ee3\u7684\u8fc7\u7a0b\uff0c\u5728\u6267\u884c \\(i\\) \u7684\u65f6\u5019\uff0c\\([i, n]\\) \u884c\u4e2d\u6240\u6709\u7684 \\(x_1 \\sim x_{i - 1}\\) \u90fd\u5df2\u7ecf\u88ab\u6d88\u9664\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u6bcf\u6b21\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a \\(x_i\\) \u7684\u7cfb\u6570\u4e0d\u4e3a\u96f6\u7684\u884c\u4ea4\u6362\u5230\u7b2c \\(i\\) \u884c\u5c31\u884c.</p> <p>\u56e0\u4e3a\u65b9\u7a0b\u7ec4\u7684\u89e3\u4e0d\u4e00\u5b9a\u662f\u6574\u6570\uff0c\u6240\u4ee5\u8981\u8003\u8651\u7cbe\u5ea6\u95ee\u9898\uff0c\u5047\u8bbe\u6211\u4eec\u5f53\u524d\u8981\u7528\u7b2c \\(i\\) \u884c\u6d88\u6389\u5176\u5b83\u884c \\(x_i\\) \u7684\u7cfb\u6570\uff0c\u8bbe\u7b2c \\(i\\) \u884c\u7684 \\(x_i\\) \u7684\u7cfb\u6570\u4e3a \\(c_{i, i} = r\\)\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e \\(\\forall j \\in [1,n], (j \\not ={i})\\)\uff0c\\(c_{j, i}\\) \u5c31\u4f1a\u53d8\u6210 \\(0\\)\uff0c\\(c_{j, k}, (k \\not ={i})\\) \u5c31\u4f1a\u53d8\u6210 \\(c_{j,k} -\\dfrac{c_{j, i}}{r} \\times c_{i, k}\\)\u3002</p> <p>\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u5f0f\u5b50\u8ba1\u7b97\u7684\u65f6\u5019\u7cbe\u5ea6\u635f\u5931\u5c3d\u91cf\u5c0f\uff0c\u4e5f\u5c31\u662f\u8981\u8ba9\u9664\u6cd5\u90a3\u91cc\u7684\u7cbe\u5ea6\u635f\u5931\u66f4\u5c0f\uff0c\u56e0\u4e3a\u6d6e\u70b9\u6570\u7684\u7edd\u5bf9\u503c\u8d8a\u5c0f\u7cbe\u5ea6\u8d8a\u9ad8\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8ba9 \\(r\\) \u5c3d\u91cf\u5927\u5373\u53ef\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5bf9\u7cbe\u5ea6\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a \\(x_i\\) \u7cfb\u6570\u7edd\u5bf9\u503c\u6700\u5927\u7684\u884c\u7528\u6765\u6d88\u53bb\u522b\u7684\u884c\u7684\u7cfb\u6570\u3002</p> <p>\u5982\u679c\u6d88\u5143\u5b8c\u4e86\u4e4b\u540e\uff0c\u5982\u679c \\(\\exists i, \\exists c_{i, j} \\not ={0}, j \\not ={i}\\) \u7684 \\(i\\)\uff0c\u90a3\u4e48\u8bc1\u660e\u6211\u4eec\u627e\u4e0d\u5230\u65b9\u7a0b\u7684\u552f\u4e00\u89e3\uff0c\u4f46\u662f\u77e9\u9635\u7684\u5f62\u5f0f\u4f1a\u53d8\u6210\u8fd9\u79cd\u6837\u5b50\uff1a</p> \\[ \\begin{bmatrix}     1 &amp; 3 &amp; 0\\ |\\ 7 \\\\     0 &amp; 0 &amp; 0\\ |\\ 0 \\\\     0 &amp; 0 &amp; 6\\ |\\ 1 \\end{bmatrix} \\] <p>\u4f8b\u5b50\u4e2d \\(i = 1\\) \u5c31\u662f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\uff0c\u65b9\u7a0b\u7684\u5f62\u5f0f\u662f\u8fd9\u6837\u7684\uff1a</p> \\[ \\begin{cases}     x_1 = 7 - 3x_2\\\\     x_3 = \\dfrac{1}{6} \\end{cases} \\] <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0d\u7ba1 \\(x_2\\) \u662f\u4ec0\u4e48\u5b9e\u6570\uff0c\u90fd\u6709\u4e00\u4e2a \\(x_1\\) \u53ef\u4ee5\u4f7f\u5f97\u65b9\u7a0b\u6709\u89e3\u3002</p> <p>\u6211\u4eec\u5c06 \\(x_2\\) \u8fd9\u79cd\u53d8\u91cf\u79f0\u4e3a\u81ea\u7531\u5143\uff08\u81ea\u5df1\u90a3\u4e00\u884c\u7cfb\u6570\u5168\u4e3a \\(0\\)\uff09\uff0c\\(x_1,x_3\\) \u79f0\u4e3a\u4e3b\u5143\u3002</p> <p>\u5982\u679c\u539f\u65b9\u7a0b\u7ec4\u6709 \\(k\\) \u884c\u7684\u7cfb\u6570\u5168\u662f \\(0\\)\uff0c\u5c31\u8bc1\u660e\u539f\u65b9\u7a0b\u6709 \\(k\\) \u4e2a\u81ea\u7531\u5143\uff0c\\(n - k\\) \u4e2a\u4e3b\u5143\uff0c\u539f\u65b9\u7a0b\u7ec4\u6709\u65e0\u6570\u4e2a\u89e3\u3002</p> \u6a21\u677f\uff1a[SDOI2006]\u7ebf\u6027\u65b9\u7a0b\u7ec4 <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\n\nconst int si = 50 + 10;\nconst ldb eps = 1e-5;\n\nint n;\nldb c[si][si], d[si], x[si];\n\nint Gauss() {\nfor(int i = 1; i &lt;= n; ++i) {\nint l = i;\nfor(int j = i + 1; j &lt;= n; ++j) if(fabs(c[j][i]) &gt; fabs(c[l][i]))\nl = j; // \u627e\u5230\u6700\u5927\u7684\nif(l != i) {\nfor(int j = 1; j &lt;= n; ++j) swap(c[i][j], c[l][j]);\nswap(d[i], d[l]);\n} // \u4ea4\u6362\nif(fabs(c[i][i]) &gt;= eps) {\nfor(int j = 1; j &lt;= n; ++j) {\nif(j == i) continue;\nldb rte = c[j][i] / c[i][i];\nfor(int k = 1; k &lt;= n; ++k)\nc[j][k] -= rte * c[i][k];\nd[j] -= rte * d[i];\n}\n} // \u6d88\u5143\n}\nbool nosol = false, infsol = false;\nfor(int i = 1; i &lt;= n; ++i) {\nint j = 1;\nwhile(fabs(c[i][j]) &lt; eps &amp;&amp; j &lt;= n)\nj ++;\nj += (fabs(d[i]) &lt; eps);\nif(j &gt; n + 1) infsol = true;\nif(j == n + 1) nosol = true;    } // \u68c0\u67e5\u81ea\u7531\u5143\nif(nosol)  return 0;\nif(infsol) return 1;\nfor(int i = n; i &gt;= 1; --i) {\nfor(int j = i + 1; j &lt;= n; ++j)\nd[i] -= x[j] * c[i][j];\nx[i] = d[i] / c[i][i];\n} // \u56de\u4ee3\nfor(int i = 1; i &lt;= n; ++i)\ncout &lt;&lt; \"x\" &lt;&lt; i &lt;&lt; \"=\" &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; x[i] &lt;&lt; endl;\nreturn 2;\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= n; ++j)\ncin &gt;&gt; c[i][j];\ncin &gt;&gt; d[i];\n}\nint ret = Gauss(); if(ret == 2) return 0;\nif(ret == 0) cout &lt;&lt; \"-1\" &lt;&lt; endl; // \u5148\u5224\u65e0\u89e3\nif(ret == 1) cout &lt;&lt; \"0\" &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/math/linear-algebra/gauss/#_2", "title": "\u5e94\u7528", "text": ""}, {"location": "algor/math/linear-algebra/gauss/#_3", "title": "\u5f02\u6216\u65b9\u7a0b\u7ec4", "text": "<p>Pigeon.</p>"}, {"location": "algor/math/linear-algebra/gauss/#dp", "title": "\u6d88\u9664 dp \u540e\u6548\u6027", "text": "<p>\u89c1\uff1a\u671f\u671b dp</p> <p>\u91cc\u9762\u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\u4e0b \\(O(n^2)\\) \u7684\u9ad8\u65af\u6d88\u5143\u65b9\u6cd5\uff0c\u6bd4\u8f83\u8da3\u5473\u3002</p>"}, {"location": "algor/math/linear-algebra/matrix/", "title": "\u77e9\u9635", "text": ""}, {"location": "algor/math/linear-algebra/matrix/#_1", "title": "\u5b9a\u4e49", "text": "<p>\u77e9\u9635\u662f\u5565\u5e94\u8be5\u4e0d\u7528\u8bf4\u4e86\u5427\u3002</p> <p>\u4e00\u822c\u8868\u793a\u7684\u65f6\u5019\u7528\u5927\u5199\u5b57\u6bcd\u8868\u793a\u77e9\u9635\u3002\u7528\u5c0f\u5199\u5b57\u6bcd\u52a0\u4e00\u4e2a\u4e8c\u5143\u7ec4\u4e0b\u6807\u8868\u793a\u77e9\u9635\u91cc\u7684\u5143\u7d20\u3002</p> <p>\u6bd4\u5982 \\(A\\) \u4e3a\u4e00\u4e2a \\(n \\times m\\) \u7684\u77e9\u9635\uff1a</p> <p>\u8fd9\u91cc \\(n\\times m\\) \u6307 \\(n\\) \u884c \\(m\\) \u5217\u3002</p> \\[A=\\begin{bmatrix} a_{1,1} &amp; \\cdots &amp; a_{1,m} \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n,1} &amp; \\cdots &amp; a_{n,m}\\end{bmatrix}\\] <p>\\(a_{i,j}\\) \u5c31\u8868\u793a\u77e9\u9635 \\(A\\) \u5f53\u4e2d\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u5143\u7d20\u3002</p> <p>\uff08\u7ebf\u6027\u4ee3\u6570\u91cc\u4e0d\u662f\u7ecf\u5e38\u8bf4\u884c\u5217\u5f0f\u5417\uff0c\u6240\u4ee5\u662f \u884c \\(\\times\\) \u5217 \u554a\uff08\u5212\u6389\uff09\uff09</p> <p>\u4e5f\u53ef\u4ee5\u7b80\u8bb0\u4e3a \\(A=(a_{i,j})\\)\u3002</p> <p>\u5411\u91cf\uff1a\u6ce8\u610f\u8fd9\u91cc\u7684\u5411\u91cf\u548c\u51e0\u4f55\u91cc\u7684\u5411\u91cf\u7684\u4e0d\u540c\u3002</p> <p>\u4e00\u822c\u628a \\(n\\) \u4e2a\u5b9e\u6570\u7ec4\u6210\u7684 \\(n\\) \u5143\u7ec4\u79f0\u4e3a\u5411\u91cf\u3002</p> <p>\u5982\u679c\u5b83\u8868\u793a\u4e3a\u4e00\u4e2a \\(1\\times n\\) \u7684\u77e9\u9635\uff0c\u5219\u79f0\u4e3a\u884c\u5411\u91cf\uff0c\u5982\u679c\u662f \\(n \\times 1\\) \uff0c\u5219\u79f0\u4e3a\u5217\u5411\u91cf\uff1a</p> <p>\u884c\u5411\u91cf\uff1a\\((a_1,a_2,a_3,...,a_n)\\)</p> <p>\u5217\u5411\u91cf\uff1a\\(\\begin{bmatrix}a_1 \\\\ a_2 \\\\ \\vdots \\\\ a_n \\end{bmatrix}\\)</p> <p>\u4e00\u822c\u90fd\u662f\u7528\u5217\u5411\u91cf\uff08\u65b9\u4fbf\u4e00\u70b9\uff09\uff0c\u4e00\u822c\u4f1a\u7528\u9ed1\u4f53\u659c\u4f53\u8868\u793a\u5217\u5411\u91cf\u3002</p> <p>\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0b \\(n\\) \u7ef4\u6b27\u51e0\u91cc\u5fb7\u7a7a\u95f4\uff08\u53ef\u4ee5\u8003\u8651\u770b\u770b\u300a\u7ebf\u6027\u4ee3\u6570\u300b\uff09\u3002</p> <p>\u5355\u4f4d\u77e9\u9635\uff08\\(I\\)\uff09\uff1a</p> <p>\u5bf9\u4e8e\u4e00\u4e2a \\(n \\times n\\) \u7684\u77e9\u9635 \\(A\\) \uff0c\u5982\u679c\u6ee1\u8db3 \\(\\forall i ,a_{i,i}=1,\\text{Others}=0\\)\uff0c\u90a3\u4e48\u79f0 \\(A\\) \u662f\u4e00\u4e2a\u5355\u4f4d\u77e9\u9635\uff0c\u4e00\u822c\u8bb0\u4f5c \\(I\\)</p> <p>\u6bd4\u5982\uff1a</p> \\[I=\\begin{bmatrix}1 &amp;0 &amp; 0 \\\\ 0&amp; 1 &amp; 0 \\\\ 0 &amp; 0&amp; 1\\end{bmatrix}\\]"}, {"location": "algor/math/linear-algebra/matrix/#_2", "title": "\u6807\u91cf\u4e58\u6cd5", "text": "<p>\\(\\alpha\\) \u662f\u4e00\u4e2a\u6807\u91cf\uff0c\\(A\\) \u662f\u4e00\u4e2a \\(n \\times m\\) \u7684\u77e9\u9635\uff0c</p> <p>\u5219 \\(\\alpha A=B\\) \u662f\u4e00\u4e2a \\(n \\times m\\) \u7684\u77e9\u9635\uff0c\u4e14 \\(B_{i,j}=\\alpha\\times A_{i,j}\\)\u3002</p> <p>\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u5206\u914d\u5f8b\u3002</p>"}, {"location": "algor/math/linear-algebra/matrix/#_3", "title": "\u77e9\u9635\u52a0\u6cd5", "text": "<p>\\(A\\) \u662f\u4e00\u4e2a \\(n \\times m\\) \u7684\u77e9\u9635\uff0c\\(B\\) \u662f\u4e00\u4e2a \\(n\\times m\\) \u7684\u77e9\u9635\uff0c</p> <p>\u5219\u4ed6\u4eec\u8fdb\u884c\u77e9\u9635\u52a0\u6cd5 \\(A+B\\) \u5f97\u5230\u7684\u7ed3\u679c\u77e9\u9635 \\(C\\) \u662f\u4e00\u4e2a \\(n \\times m\\) \u7684\u77e9\u9635\u3002</p> <p>\u4e14 \\(C_{i,j}=A_{i,j}+B_{i,j}\\)\u3002</p> <p>\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u4ea4\u6362\u5f8b\u3002</p>"}, {"location": "algor/math/linear-algebra/matrix/#_4", "title": "\u77e9\u9635\u4e58\u6cd5", "text": "<p>\u91cd\u5934\u620f\u3002</p> <p>\\(A\\) \u662f\u4e00\u4e2a \\(n \\times m\\) \u7684\u77e9\u9635\uff0c\\(B\\) \u662f\u4e00\u4e2a \\(m \\times k\\) \u7684\u77e9\u9635\u3002</p> <p>\u6ce8\u610f\uff0c\\(A\\) \u7684\u5217\u6570\u548c \\(B\\) \u7684\u884c\u6570\u5fc5\u987b\u76f8\u7b49\uff01</p> <p>\u90a3\u4e48\u4ed6\u4eec\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5 \\(A \\times B\\) \u7684\u5230\u7684\u7ed3\u679c\u77e9\u9635 \\(C\\) \u662f\u4e00\u4e2a \\(n \\times k\\) \u7684\u77e9\u9635\u3002</p> <p>\u4e14\u6ee1\u8db3\uff1a</p> \\[C_{i,j}=\\sum\\limits_{k=1}^m A_{i,k}\\times B_{k,j}\\] <p>\u5f62\u8c61\u7684\u89e3\u91ca\u5c31\u662f\uff0c\\(C_{i,j}\\) \u7b49\u4e8e \\(A\\) \u7684\u7b2c \\(i\\) \u884c\u548c \\(B\\) \u7684\u7b2c \\(j\\) \u5217\u4e00\u4e00\u5bf9\u5e94\u5730\u4e58\u8d77\u6765\u3002</p> <p>\u6ce8\u610f\uff1a\u77e9\u9635\u4e58\u6cd5\u4e0d\u4e00\u5b9a\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff01\uff01</p> <p>\u4f46\u662f\u5b83\u6ee1\u8db3\u7ed3\u5408\u5f8b\u3002</p> <pre><code>struct Matrix{\nint a[si][si];\nMatrix(){ memset(a,0,sizeof a); }\ninline Matrix operator * (const Matrix &amp;B)const{\nMatrix C,A=*this;\nfor(register int i=1;i&lt;=cnt;++i){\nfor(register int j=1;j&lt;=cnt;++j){\nfor(register int k=1;k&lt;=cnt;++k){\nC.a[i][j]+=A.a[i][k]*B.a[k][j];\n}\n}\n} return C;\n// \u6700\u597d\u5faa\u73af\u7684\u65f6\u5019\u4e0d\u8981\u7528 si\u3002\n// \u7528\u4e00\u4e2a\u8bbe\u5b9a\u597d\u7684\u5e38\u6570\u6216\u8005\u9898\u76ee\u7ed9\u7684\u53d8\u91cf\u4f1a\u6bd4\u8f83\u597d\u3002\n// \u4f46\u662f\u5982\u679c\u4e58\u6cd5\u4e0d\u6b62\u9700\u8981\u9002\u7528\u4e8e\u4e00\u5bf9 n,m,k\uff0c\u90a3\u4e48\u5c31\u6700\u597d\u7528 si - 1\u3002\n// \u4e3a\u5565\u4e0d\u4f1a\u6709\u5f71\u54cd\u5462\uff1f\u56e0\u4e3a\u6784\u9020\u51fd\u6570\u91cc\u628a\u6ca1\u6709\u7528\u5230\u7684\u8bbe\u7f6e\u6210 0 \u4e86\u3002\n}\n};\n</code></pre> <p>\u5982\u679c\u88ab\u5361\u5e38\u4e86\uff0c\u53ef\u4ee5\u8003\u8651\u624b\u52a8\u5c55\u5f00\u5185\u5c42\u5faa\u73af\u3002</p> <p>\u8981\u6c42\u53d6\u6a21\u7684\u8bdd\u624b\u52a8\u52a0\u4e0a\u5c31\u884c\u3002</p>"}, {"location": "algor/math/linear-algebra/matrix/#_5", "title": "\u77e9\u9635\u5feb\u901f\u5e42", "text": "<p>\u56e0\u4e3a\u77e9\u9635\u4e58\u6cd5\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u4e00\u4e2a\u77e9\u9635\u7684 \\(k\\) \u6b21\u5e42\u5b9a\u4e49\u4e3a\uff1a</p> \\[A^k=\\begin{matrix}\\underbrace{A \\times A\\times A \\dots \\times A}\\\\k \\text{ times}\\end{matrix}\\] <p>\u56e0\u4e3a\u6240\u6709\u6ee1\u8db3\u7ed3\u5408\u5f8b\u7684\u5143\u7b97\u90fd\u53ef\u4ee5\u4f7f\u7528\u5feb\u901f\u5e42\u6c42\u89e3\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5229\u7528\u77e9\u9635\u4e58\u6cd5\u7684\u7ed3\u5408\u5f8b\u5199\u51fa\u4e00\u4e2a\u77e9\u9635\u5feb\u901f\u5e42\u7b97\u6cd5\uff1a</p> <pre><code>Matrix Ans,A;\ninline Matrix Qpow(int b){\nfor(;b;b&gt;&gt;=1){\nif(b&amp;1) Ans=Ans*A;\nA=A*A;\n} return Ans;\n} // \u6709\u7684\u65f6\u5019\u6839\u636e\u60c5\u51b5\u9700\u8981\u521d\u59cb\u5316\u4e00\u4e0b Ans.\n</code></pre>"}, {"location": "algor/math/linear-algebra/matrix/#_6", "title": "\u77e9\u9635\u4e58\u6cd5\u4f18\u5316\u9012\u63a8", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u6570\u5b57 \\(n\\)\uff0c\u6c42\u51fa \\(Fib_n \\text{ mod }998244353 ,n \\le 1e18\\)\u3002</p> <p>\\(Fib\\) \u662f\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002</p> <p>\u770b\u5230 \\(n\\) \u7684\u8303\u56f4\u53d1\u73b0\u76f4\u63a5\u9012\u63a8\u660e\u663e\u7206\u70b8\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u628a \\(Fib_i,Fib_{i-1}\\) \u8868\u793a\u6210\u4e00\u4e2a\u884c\u5411\u91cf \\(\\begin{bmatrix} Fib_i &amp; Fib_{i-1} \\end{bmatrix}\\)</p> <p>\u7136\u540e\u6211\u4eec\u60f3\u628a\u9012\u63a8\u5f0f\u5b50\u8868\u793a\u6210\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\u518d\u5229\u7528\u77e9\u9635\u5feb\u901f\u5e42\u8fdb\u884c\u9ad8\u901f\u9012\u63a8\uff1a</p> <p>\\(\\begin{bmatrix} Fib_{i-1} &amp; Fib_{i-2} \\end{bmatrix} \\times ? = \\begin{bmatrix} Fib_i &amp; Fib_{i-1} \\end{bmatrix}\\) </p> <p>\u4e0d\u59a8\u8bbe\u8fd9\u4e2a \\(?\\) \u4e3a\u4e00\u4e2a\u77e9\u9635 \\(base\\)\u3002</p> <p>\u6839\u636e\u77e9\u9635\u4e58\u6cd5\u7684\u5b9a\u4e49\uff0c\\(base\\) \u5e94\u8be5\u662f\u4e00\u4e2a \\(2\\times 2\\) \u7684\u77e9\u9635\u3002</p> <p>\u8003\u8651\u5217\u51fa\u539f\u6765\u7684\u9012\u63a8\u5f0f\uff1a\\(Fib_{n}=Fib_{n-1}+Fib_{n-2}\\)\u3002</p> <p>\u53d1\u73b0\u7ed3\u679c\u77e9\u9635\u7684 \\((1,1)\\) \u8fd9\u4e2a\u4f4d\u7f6e\u662f \\(Fib_i\\)\uff0c\u800c\u8fd9\u4e2a\u4f4d\u7f6e \\(C_{1,1}\\) \u5e94\u8be5\u662f\u7b49\u4e8e \\(A_{1,1}\\times B_{1,1}+A_{1,2}\\times B_{2,1}\\)</p> <p>\u4e5f\u5c31\u662f \\(Fib_{i-1} \\times B_{1,1}+Fib_{i-2}\\times B_{2,1}\\) </p> <p>\u6240\u4ee5 \\(B_{1,1}\\) \u548c \\(B_{2,1}\\) \u90fd\u662f \\(1\\) \uff1a\\(\\begin{bmatrix}1\\\\1\\end{bmatrix}\\)</p> <p>\u540c\u7406\u53ef\u4ee5\u5f97\u5230 \\(B_{2,1}\\) \u548c \\(B_{2,2}\\) \uff1a\\(\\begin{bmatrix}1\\\\0\\end{bmatrix}\\)</p> <p>\u6240\u4ee5 \\(base=\\begin{bmatrix}1 &amp; 1\\\\ 1 &amp; 0\\end{bmatrix}\\)</p> <p>\u539f\u5f0f\u53ef\u4ee5\u5316\u4e3a \\(\\begin{bmatrix} Fib_{i-1} &amp; Fib_{i-2} \\end{bmatrix} \\times \\begin{bmatrix}1 &amp; 1\\\\ 1 &amp; 0\\end{bmatrix} = \\begin{bmatrix} Fib_i &amp; Fib_{i-1} \\end{bmatrix}\\)\u3002</p> <p>\u90a3\u4e48\u8bbe \\(Ans=\\begin{bmatrix} 1 &amp; 1 \\end{bmatrix}=\\begin{bmatrix} Fib_2 &amp; Fib_1\\end{bmatrix}\\)</p> <p>\u6240\u4ee5 \\(Fib_n\\) \u5c31\u662f \\(Ans \\times base^{n-2}\\) \u7684 \\((1,1)\\)\u3002</p> <p>\u5199\u4e00\u4e2a\u77e9\u9635\u5feb\u901f\u5e42\u5373\u53ef\u3002</p> <p>\u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e5f\u662f\u4e00\u6837\u7684\u3002</p> <p>\u7136\u540e\u4e3e\u4e00\u4e2a OI-Wiki \u4e0a\u7684\u4f8b\u5b50</p> \\[ f_{1} = f_{2} = 0 \\\\ f_{n} = 7f_{n-1}+6f_{n-2}+5n+4\\times 3^n \\] <p>\u53d1\u73b0 \\(f_n\\) \u548c \\(f_{n-1}, f_{n-2}, n\\) \u6709\u5173\uff0c\u4e8e\u662f\u8003\u8651\u6784\u9020\u4e00\u4e2a\u77e9\u9635\u63cf\u8ff0\u72b6\u6001\u3002</p> <p>\u4f46\u662f\u5982\u679c\u77e9\u9635\u4ec5\u6709\u8fd9\u4e09\u4e2a\u5143\u7d20 \\(\\begin{bmatrix}f_n&amp; f_{n-1}&amp; n\\end{bmatrix}\\) \u662f\u96be\u4ee5\u6784\u9020\u51fa\u8f6c\u79fb\u65b9\u7a0b\u7684\uff0c\u56e0\u4e3a\u4e58\u65b9\u8fd0\u7b97\u548c \\(+1\\) \u65e0\u6cd5\u7528\u77e9\u9635\u63cf\u8ff0\u3002</p> <p>\u4e8e\u662f\u8003\u8651\u6784\u9020\u4e00\u4e2a\u66f4\u5927\u7684\u77e9\u9635\u3002</p> \\[ \\begin{bmatrix}f_n&amp; f_{n-1}&amp; n&amp; 3^n &amp; 1\\end{bmatrix} \\] <p>\u6211\u4eec\u5e0c\u671b\u6784\u9020\u4e00\u4e2a\u9012\u63a8\u77e9\u9635\u53ef\u4ee5\u8f6c\u79fb\u5230</p> \\[  \\begin{bmatrix} f_{n+1}&amp; f_{n}&amp; n+1&amp; 3^{n+1} &amp; 1 \\end{bmatrix} \\] <p>\u8f6c\u79fb\u77e9\u9635\u5373\u4e3a</p> \\[ \\begin{bmatrix} 7 &amp; 1 &amp; 0 &amp; 0 &amp; 0\\\\ 6 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\\\ 5 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\\\ 12 &amp; 0 &amp; 0 &amp; 3 &amp; 0\\\\ 5 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\end{bmatrix} \\] <p>\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\\(f(i) = (f(i - 1) + \\dfrac{p}{100}) / 2\\)\u3002</p> <p>\uff08\u8981\u53d6\u6a21\u7684\uff09</p> <p>\u5148\u5c55\u5f00\u5f0f\u5b50\uff1a\\(f(i) = \\dfrac{1}{2} f(i - 1) + \\dfrac{p}{200}\\)</p> <p>\u5982\u679c\u521d\u59cb\u77e9\u9635\u662f \\(1\\times 2\\) \u7684\u611f\u89c9\u4e0a\u5b8c\u5168\u4e0d\u591f\uff0c\u56e0\u4e3a\u6ca1\u6cd5\u5f88\u597d\u7684\u5904\u7406\u8fd9\u4e2a\u201c\u52a0\u4e0a\u4e00\u4e2a\u5e38\u6570\u201d\u7684\u4e1c\u897f\u3002</p> <p>\u53d1\u73b0\u8f6c\u79fb\u77e9\u9635\u91cc\u7684\u6570\u7684\u672c\u8d28\u662f\u521d\u59cb\u77e9\u9635\u7684\u6570\u7684\u67d0\u4e2a\u7cfb\u6570\u3002</p> <p>\u6240\u4ee5\u672c\u7740\u201c\u9012\u63a8\u5f0f\u91cc\u9700\u8981\u5565\uff0c\u5c31\u5728\u521d\u59cb\u77e9\u9635\u91cc\u653e\u5565\u201d\u7684\u601d\u60f3\uff0c\u6211\u4eec\u653e\u4e00\u4e2a \\(1\\) \u5728\u521d\u59cb\u77e9\u9635\u91cc\uff0c\u7136\u540e\u6bcf\u6b21\u8f6c\u79fb\u90fd\u8ba9 \\(1\\) \u7684\u7cfb\u6570\u4e3a \\(\\dfrac{p}{200}\\) \u5373\u53ef\u3002</p> <p>\u521d\u59cb\u77e9\u9635\uff1a</p> \\[\\begin{bmatrix}f(i), f(i - 1), 1\\end{bmatrix}\\] <p>\u5f97\u5230\u7684\u77e9\u9635\uff1a</p> \\[\\begin{bmatrix}f(i + 1), f(i), 1\\end{bmatrix}\\] <p>\u8f6c\u79fb\u77e9\u9635\uff1a</p> \\[\\begin{bmatrix} \\frac{1}{2} &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 \\\\ \\frac{p}{200} &amp; 0 &amp; 1 \\end{bmatrix}\\]"}, {"location": "algor/math/linear-algebra/matrix/#_7", "title": "\u77e9\u9635\u7684\u4e00\u4e9b\u5e38\u89c1\u5e94\u7528", "text": ""}, {"location": "algor/math/linear-algebra/matrix/#k", "title": "\u6070\u597d K \u6761\u8fb9 \u6700\u77ed\u8def", "text": "<p>\u9996\u5148\u7528\u90bb\u63a5\u77e9\u9635 \\(A\\) \u5b58\u56fe\u3002</p> <p>\u7136\u540e \\(A[i,j]\\) \u5c31\u53ef\u4ee5\u770b\u505a \\(i \\to j\\) \u7ecf\u8fc7\u6070\u597d\u4e00\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002</p> <p>\u8003\u8651\u6c42\u51fa\u7ecf\u8fc7\u6070\u597d\u4e24\u6761\u8fb9\u7684\u6700\u77ed\u8def \\(B\\)\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0 \\(B[i,j]=\\min\\limits_{1\\le k \\le n}\\{A[i,k]+A[k,j]\\}\\)</p> <p>\u8fd9\u91cc\u5c31\u662f\u7528\u4e86\u7c7b\u4f3c Floyd \u7684\u679a\u4e3e\u4e2d\u95f4\u70b9\u601d\u60f3\uff08\u5176\u672c\u8d28\u662f dp\uff09\u3002</p> <p>\u7c7b\u4f3c\u7684\u53ef\u4ee5\u5f97\u5230\u7ecf\u8fc7\u6070\u597d \\(K\\) \u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002</p> <p>\u8bbe \\(A^{r}\\) \u8868\u793a\u7ecf\u8fc7\u6070\u597d \\(r\\) \u6761\u8fb9\u7684\u6700\u77ed\u8def\u77e9\u9635\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230 \\(A^{r}[i,j]=\\min\\limits_{1\\le k \\le n}\\{A^p[i,k]+A^q[k,j]\\},r=p+q\\)\u3002</p> <p>\u53d1\u73b0\u8fd9\u4e2a\u8fd0\u7b97\u5c31\u662f\u4e2a\u7c7b\u4f3c\u4e8e\u77e9\u9635\u4e58\u6cd5\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u5c06\u5176\u5b9a\u4e49\u4e3a \\(\\oplus\\)\u3002</p> <p>\u628a \\(\\sum\\) \u6362\u6210 \\(\\min\\) \uff0c\u628a \\(\\times\\) \u6362\u6210 \\(+\\) \u5c31\u80fd\u770b\u51fa\u6765\u3002</p> <p>\u521a\u597d\u8fd9\u4e2a\u4e1c\u897f\u4ecd\u7136\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u6211\u4eec\u628a\u5f0f\u5b50\u5199\u4e00\u4e0b\uff1a</p> \\[ A^{r} = A^{r-1} \\oplus A^1 \\] <p>\u53d1\u73b0 \\(A^r\\) \u5c31\u7b49\u4e8e \\(A^1\\) \u5728 \\(\\oplus\\) \u610f\u4e49\u4e0b\u7684 \\(r\\) \u6b21\u5e42\u3002</p> <p>\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42 \\(n^3\\log K\\) \u6c42 \\(A^K\\) \u4e86\u3002</p>"}, {"location": "algor/math/linear-algebra/matrix/#_8", "title": "\u77e9\u9635\u8868\u8fbe\u4fee\u6539", "text": "<p>\u8fd9\u4e2a\u53ef\u4ee5\u770b\u7ebf\u6bb5\u6811\u90a3\u4e2a\u9875\u9762\uff0c\u5199\u5230\u90a3\u91cc\u53bb\u4e86\u3002</p> <p>links</p>"}, {"location": "algor/math/linear-algebra/perm/", "title": "\u7f6e\u6362", "text": "<p>\u5927\u90e8\u5206\u6458\u6284\u81ea : OI-Wiki</p>"}, {"location": "algor/math/linear-algebra/perm/#_1", "title": "\u5b9a\u4e49", "text": "<p>\u6709\u9650\u96c6\u5408\u5230\u81ea\u8eab\u7684\u53cc\u5c04\uff08\u5373\u4e00\u4e00\u5bf9\u5e94\uff09\u79f0\u4e3a\u7f6e\u6362\u3002\u96c6\u5408 \\(S=\\{a_1,a_2,\\dots,a_n\\}\\) \u4e0a\u7684\u7f6e\u6362\u53ef\u4ee5\u8868\u793a\u4e3a</p> \\[ f=\\begin{pmatrix}a_1,a_2,\\dots,a_n\\\\ a_{p_1},a_{p_2},\\dots,a_{p_n} \\end{pmatrix} \\] <p>\u610f\u4e3a\u5c06 \\(a_i\\) \u6620\u5c04\u4e3a \\(a_{p_i}\\)\uff0c\u5176\u4e2d \\(p_1,p_2,\\dots,p_n\\) \u662f \\(1,2,\\dots,n\\) \u7684\u4e00\u4e2a\u6392\u5217\u3002\u663e\u7136 \\(S\\) \u4e0a\u6240\u6709\u7f6e\u6362\u7684\u6570\u91cf\u4e3a \\(n!\\)\u3002</p>"}, {"location": "algor/math/linear-algebra/perm/#_2", "title": "\u7f6e\u6362\u4e58\u6cd5", "text": "<p>\u5bf9\u4e8e\u4e24\u4e2a\u7f6e\u6362 \\(f=\\begin{pmatrix}a_1,a_2,\\dots,a_n\\\\a_{p_1},a_{p_2},\\dots,a_{p_n}\\end{pmatrix}\\) \u548c \\(g=\\begin{pmatrix}a_{p_1},a_{p_2},\\dots,a_{p_n}\\\\a_{q_1},a_{q_2},\\dots,a_{q_n}\\end{pmatrix}\\)\uff0c\\(f\\) \u548c \\(g\\) \u7684\u4e58\u79ef\u8bb0\u4e3a \\(f\\circ g\\)\uff0c\u5176\u503c\u4e3a</p> \\[ f\\circ g=\\begin{pmatrix}a_1,a_2,\\dots,a_n\\\\ a_{q_1},a_{q_2},\\dots,a_{q_n}\\end{pmatrix} \\] <p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5148\u540e\u7ecf\u8fc7 \\(f\\) \u7684\u6620\u5c04\uff0c\u518d\u7ecf\u8fc7 \\(g\\) \u7684\u6620\u5c04\u3002</p>"}, {"location": "algor/math/linear-algebra/perm/#_3", "title": "\u5faa\u73af\u7f6e\u6362", "text": "<p>\u5faa\u73af\u7f6e\u6362\u662f\u4e00\u7c7b\u7279\u6b8a\u7684\u7f6e\u6362\uff0c\u53ef\u8868\u793a\u4e3a</p> \\[ (a_1,a_2,\\dots,a_m)=\\begin{pmatrix}a_1,a_2,\\dots,a_{m-1},a_m\\\\ a_2,a_3,\\dots,a_m,a_1\\end{pmatrix} \\] <p>\u82e5\u4e24\u4e2a\u5faa\u73af\u7f6e\u6362\u4e0d\u542b\u6709\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5219\u79f0\u5b83\u4eec\u662f \u4e0d\u76f8\u4ea4 \u7684\u3002\u6709\u5982\u4e0b\u5b9a\u7406\uff1a</p> <p>\u4efb\u610f\u4e00\u4e2a\u7f6e\u6362\u90fd\u53ef\u4ee5\u5206\u89e3\u4e3a\u82e5\u5e72\u4e0d\u76f8\u4ea4\u7684\u5faa\u73af\u7f6e\u6362\u7684\u4e58\u79ef\uff0c\u4f8b\u5982</p> \\[ \\begin{pmatrix}a_1,a_2,a_3,a_4,a_5\\\\ a_3,a_1,a_2,a_5,a_4\\end{pmatrix}=(a_1,a_3,a_2)\\circ(a_4,a_5) \\] <p>\u8be5\u5b9a\u7406\u7684\u8bc1\u660e\u4e5f\u975e\u5e38\u7b80\u5355\u3002\u5982\u679c\u628a\u5143\u7d20\u89c6\u4e3a\u56fe\u7684\u8282\u70b9\uff0c\u6620\u5c04\u5173\u7cfb\u89c6\u4e3a\u6709\u5411\u8fb9\uff0c\u5219\u6bcf\u4e2a\u8282\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u90fd\u4e3a 1\uff0c\u56e0\u6b64\u5f62\u6210\u7684\u56fe\u5f62\u5fc5\u5b9a\u662f\u82e5\u5e72\u4e2a\u73af\u7684\u96c6\u5408\uff0c\u800c\u4e00\u4e2a\u73af\u5373\u53ef\u7528\u4e00\u4e2a\u5faa\u73af\u7f6e\u6362\u8868\u793a\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u4e5f\u53ef\u4ee5\u53eb\u505a\u201c\u7f6e\u6362\u73af\u201d\uff0c\u5728\u5f88\u591a\u5e8f\u5217\u7684\u53d8\u6362\u95ee\u9898\u91cc\u51fa\u73b0\u6bd4\u8f83\u9891\u7e41\u3002</p> <p>\u4e0d\u8fc7\u7528\u5230\u7684\u65f6\u5019\u4e00\u822c \\(S\\) \u90fd\u662f\u4e00\u4e2a\u53ef\u91cd\u96c6\uff08\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u5e8f\u5217\uff09\u3002</p> <p>\u5047\u8bbe\u4e00\u6b21 \u201c\u64cd\u4f5c\u201d \u662f\uff0c\u4ea4\u6362 \\(a\\) \u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\uff0c</p> <p>\\(b\\) \u662f \\(a\\) \u7ecf\u8fc7\u4e00\u6b21\u7f6e\u6362\u4e4b\u540e\u5f97\u5230\u7684\u5e8f\u5217 \\(\\{a_{p_1},a_{p_2},\\dots,a_{p_n}\\}\\)\u3002</p> <p>\u5e76\u4e14\u6211\u4eec\u5c06\u7f6e\u6362</p> \\[ f=\\begin{pmatrix}a_1,a_2,\\dots,a_n\\\\ a_{p_1},a_{p_2},\\dots,a_{p_n} \\end{pmatrix} \\] <p>\u62c6\u6210\u4e86\u82e5\u5e72\u4e2a\u5faa\u73af\u7f6e\u6362 \\(g_1,g_2,\\dots\\)\u3002</p> <p>\u90a3\u4e48\u53ef\u4ee5\u6709\u5982\u4e0b\u7ed3\u8bba\uff1a</p> <ol> <li>\u5faa\u73af\u7f6e\u6362\u4e0a\u4e0d\u80fd\u6709\u76f8\u540c\u7684\u5143\u7d20\uff08\u5c31\u662f\u8bf4\uff0c\u5047\u8bbe\u8fd9\u4e2a\u5faa\u73af\u7f6e\u6362\u662f \\(a\\) \u7684\u4e00\u4e2a\u5b50\u5e8f\u5217 \\(c\\) \u7684\u7f6e\u6362\uff0c\u90a3\u4e48 \\(c\\) \u4e0d\u80fd\u6709\u91cd\u590d\u7684\u5143\u7d20\u51fa\u73b0\uff09</li> </ol> <p>\u8fd9\u4e2a\u7528\u7f6e\u6362\u7684\u5b9a\u4e49\uff08\u96c6\u5408\u610f\u4e49\u4e0a\u7684\u53cc\u5c04\uff09\u53ef\u5f97\u3002</p> <ol> <li> <p>\u5982\u679c\u628a\u4e24\u4e2a\u5faa\u73af\u7f6e\u6362 \\(g_1,g_2\\) \u4e0a\u5206\u522b\u62ff\u4e24\u4e2a\u5143\u7d20\u51fa\u6765\uff0c\u4ea4\u6362\u4e00\u6b21\uff0c\u90a3\u4e48 \\(g_1,g_2\\) \u4f1a\u5408\u5e76\u6210\u4e00\u4e2a\u5faa\u73af\u7f6e\u6362\u3002</p> </li> <li> <p>\u5982\u679c\u628a\u4e00\u4e2a\u5faa\u73af\u7f6e\u6362 \\(g\\) \u7684\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4ea4\u6362\u4e00\u6b21\uff0c\u5b83\u4f1a\u5206\u88c2\u6210\u4e24\u4e2a\u5faa\u73af\u7f6e\u6362 \\(g_1,g_2\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5faa\u73af\u7f6e\u6362 \\(g\\)\uff0c\u5355\u72ec\u505a\u4e00\u6b21\u8fd9\u4e2a\u7f6e\u6362\u6700\u5c11\u9700\u8981\u82b1\u8d39 \\(siz(g)-1\\) \u6b21\u64cd\u4f5c\u3002</p> </li> </ol> <p>\u5176\u4e2d \\(siz()\\) \u662f\u8fd9\u4e2a\u5faa\u73af\u7f6e\u6362\u5305\u542b\u7684\u5143\u7d20\u4e2a\u6570\u3002</p> <p>\u8fd9\u4e2a\u7531 2 \u53ef\u4ee5\u5f97\u77e5</p> <ol> <li>\u7531 \\(a\\) \u5230 \\(b\\)\uff0c\u81f3\u5c11\u9700\u8981\u4f7f\u7528 \\(n - cnt(g)\\) \u6b21\u64cd\u4f5c\u3002</li> </ol> <p>\u5176\u4e2d \\(cnt(g)\\) \u662f\u603b\u5171\u62c6\u6210\u7684\u5faa\u73af\u7f6e\u6362\u7684\u4e2a\u6570\u3002</p> <p>\u8fd9\u4e2a\u7531 2, 3, 4 \u53ef\u4ee5\u5f97\u77e5\u3002</p> <p>\u6700\u8fd1\u4e00\u4e9b\u7528\u5230\u5b83\u7684 CF \u9898\uff1a</p> <p>1672F1 - Codeforces</p> <p>1672F2 - Codeforces</p> <p>1670C - Codeforces</p> <p>1678E - Codeforces</p> <p>1682E - Codeforces</p> <p>\u4e00\u822c\u90fd\u662f\u76f4\u63a5\u8fde\u8fb9\uff0c\u7136\u540e Tarjan \u6216\u8005 dfs \u627e\u73af\uff0c\u7136\u540e\u5904\u7406\u3002</p> <p>\u4e2a\u4eba\u559c\u6b22\u4f7f\u7528 Tarjan\uff0c\u56e0\u4e3a\u5728\u627e\u5b8c\u73af\u4e4b\u540e\u80fd\u505a\u989d\u5916\u7684\u5904\u7406\uff0c\u6bd4\u8f83\u65b9\u4fbf\u3002</p> <p>\u4e0d\u8fc7 Tarjan \u5c31\u9700\u8981\u5224\u4e00\u4e0b\u81ea\u73af\uff0c\u56e0\u4e3a\u5b83\u5bb9\u6613\u5904\u7406\u4e0d\u4e86\uff0c\u6216\u8005\u8bf4\u5176\u5b9e\u6839\u672c\u6ca1\u5fc5\u8981\u3002</p> <p>\u4f46\u5982\u679c\u8981\u6253\u8d77\u6765\u5feb\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u4ec0\u4e48\u989d\u5916\u7684\u4fe1\u606f\uff0c\u8fd8\u662f\u76f4\u63a5\u5199\u4e2a dfs \u6bd4\u8f83\u597d\u3002</p>"}, {"location": "algor/math/linear-algebra/poset/", "title": "\u504f\u5e8f", "text": ""}, {"location": "algor/math/linear-algebra/poset/#_1", "title": "\u975e\u4e25\u683c\u504f\u5e8f\uff0c\u81ea\u53cd\u504f\u5e8f", "text": "<p>\u8bbe \\(\\preccurlyeq\\) \u662f\u96c6\u5408 \\(S\\) \u4e0a\u7684\u4e8c\u5143\u5173\u7cfb\uff0c\u5982\u679c \\(\\preccurlyeq\\) \u6ee1\u8db3\uff1a</p> <ol> <li>\u81ea\u53cd\u6027\uff1a\\(\\forall a \\in S,\\) \u6709 \\(a \\preccurlyeq a\\)</li> <li>\u53cd\u5bf9\u79f0\u6027\uff1a\\(\\forall a,b \\in S,a\\preccurlyeq b \\land b \\preccurlyeq a,\\)  \u5219 \\(a=b\\)\u3002</li> <li>\u4f20\u9012\u6027\uff1a \\(\\forall a,b,c \\in S, a \\preccurlyeq b \\land b \\preccurlyeq c,\\) \u5219 \\(a \\preccurlyeq c\\)</li> </ol> <p>\u5219\u79f0 \\(\\preccurlyeq\\) \u662f \\(S\\) \u4e0a\u7684\u975e\u4e25\u683c\u504f\u5e8f\u6216\u81ea\u53cd\u504f\u5e8f\u3002</p> <p>\u7c7b\u4f3c\u56fe\u8bba\u91cc\u7684\u81ea\u73af\u548c\u65e0\u5411\u8fb9\u3002</p>"}, {"location": "algor/math/linear-algebra/poset/#_2", "title": "\u4e25\u683c\u504f\u5e8f\uff0c\u53cd\u81ea\u53cd\u504f\u5e8f", "text": "<p>\u8bbe \\(\\prec\\) \u662f\u96c6\u5408 \\(S\\) \u4e0a\u7684\u4e8c\u5143\u5173\u7cfb\uff0c\u5982\u679c \\(\\prec\\) \u6ee1\u8db3\uff1a</p> <ol> <li>\u53cd\u81ea\u53cd\u6027\uff1a\\(\\forall a \\in S,\\) \u6709 \\(a \\not\\prec a\\)</li> <li>\u975e\u5bf9\u79f0\u6027\uff1a\\(\\forall a,b \\in S,a\\prec b \\Rightarrow b \\not\\prec a,\\)\u3002</li> <li>\u4f20\u9012\u6027\uff1a \\(\\forall a,b,c \\in S, a \\prec b \\land b \\prec c,\\) \u5219 \\(a \\prec c\\)</li> </ol> <p>\u5219\u79f0 \\(\\prec\\) \u662f \\(S\\) \u4e0a\u7684\u4e25\u683c\u504f\u5e8f\u6216\u53cd\u81ea\u53cd\u504f\u5e8f\u3002</p> <p>\u7c7b\u4f3c\u56fe\u8bba\u91cc\u7684\u6709\u5411\u8fb9\u3002</p> <p>\u4e00\u4e2a\u96c6\u5408\u4e0a\u7684\u4e25\u683c\u504f\u5e8f\u5173\u7cfb\u56fe\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a DAG\uff08\u6709\u5411\u65e0\u73af\uff09\u3002</p> <p>\u5e76\u4e14\u8fd9\u4e2a\u56fe\u7684\u4f20\u9012\u95ed\u5305\u662f\u5b83\u81ea\u5df1\u3002</p> <p>\u6240\u4ee5\u9047\u5230\u4e25\u683c\u504f\u5e8f\u7684\u5224\u5b9a\uff08\u662f\u5426\u6210\u7acb\uff09\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u62d3\u6251\u6392\u5e8f\u89e3\u51b3\u3002</p> <p>\u5982\u679c\u6392\u5e8f\u5b8c\u4e86\u4e4b\u540e\uff0c\u4ecd\u6709 \\(deg \\not= 0\\) \u7684\u70b9\uff0c\u5219\u8fd9\u4e2a\u4e25\u683c\u504f\u5e8f\u5173\u7cfb\u4e0d\u6210\u7acb\u3002</p> <p>\u5982\u679c\u6210\u7acb\uff0c\u8981\u6c42\u6784\u9020\u65b9\u6848\u65f6\uff0c\u4e00\u822c\u9700\u8981\u7528\u5230\u62d3\u6251\u5e8f\u3002</p>"}, {"location": "algor/math/number-theory/congruence/", "title": "\u540c\u4f59", "text": ""}, {"location": "algor/math/number-theory/congruence/#_1", "title": "\u540c\u4f59", "text": "<p>\u51e0\u4e2a\u5b9a\u4e49\uff1a</p> <ul> <li>\u540c\u4f59\uff1a\u82e5 \\(a \\bmod m = b \\bmod m\\)\uff0c\u79f0 \\(a\\) \u4e0e \\(b\\) \u5728\u6a21 \\(m\\) \u610f\u4e49\u4e0b\u540c\u4f59\uff0c\u8bb0\u4e3a \\(a \\equiv b \\pmod m\\)\u3002</li> <li>\u540c\u4f59\u7c7b\uff1a\u5bf9\u4e8e \\(\\forall a \\in [0, m), \\{a + km\\}(k \\in \\mathbb{Z})\\) \u6784\u6210\u4e00\u4e2a\u6a21 \\(m\\) \u4f59\u6570\u76f8\u540c\u7684\u96c6\u5408\uff0c\u8bb0\u4e3a \\(\\overline{a}\\)\uff0c\u79f0\u4e3a\u6a21 \\(m\\) \u7684\u4e00\u4e2a\u540c\u4f59\u7c7b\u3002</li> <li>\u5269\u4f59\u7cfb\uff1a\\(\\overline{0}, \\overline{1}, \\dots \\overline{m - 1}\\) \u6784\u6210 \\(m\\) \u7684\u5b8c\u5168\u5269\u4f59\u7cfb</li> <li>\u7b80\u5316\u5269\u4f59\u7cfb\uff1a\u6240\u6709 \\(\\gcd(a, m) = 1, a &lt; m\\) \u7684 \\(\\overline{a}\\) \u6784\u6210 \\(m\\) \u7684\u7b80\u5316\u5269\u4f59\u7cfb\uff0c\u8fd9\u6837\u7684\u540c\u4f59\u7c7b\u6709 \\(\\varphi(n)\\) \u4e2a\u3002</li> <li>\u7b80\u5316\u5269\u4f59\u7cfb\u5173\u4e8e\u6a21 \\(m\\) \u4e58\u6cd5\u5c01\u95ed\uff0c\u8fd9\u4e2a\u6027\u8d28\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u7528\u6765\u8bc1\u660e\u4e24\u4e2a\u7b80\u5316\u5269\u4f59\u7cfb\u662f\u76f8\u7b49\u7684\uff0c\u8fdb\u800c\u8bc1\u660e\u4e00\u4e9b\u7ed3\u8bba\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u7684\u8bc1\u660e\u6bd4\u8f83\u7b80\u5355\uff1a\u8003\u8651 \\(\\forall a, b, \\gcd(a, m) = \\gcd(b, m) = 1, a,b &lt; m\\)\uff0c\u56e0\u4e3a \\(a, b\\) \u548c \\(m\\) \u4e0d\u542b\u6709\u76f8\u540c\u8d28\u56e0\u5b50\uff0c\u6240\u4ee5 \\(ab\\) \u548c \\(m\\) \u4e5f\u6ca1\u6709\u516c\u5171\u8d28\u56e0\u5b50\u3002</li> </ul>"}, {"location": "algor/math/number-theory/congruence/#_2", "title": "\u6269\u5c55\u6b27\u51e0\u91cc\u5f97", "text": "<ul> <li>B\u00e9zout \u5b9a\u7406\uff1a\\(\\forall a, b\\in \\mathbb{Z}, \\exists x, y \\in \\mathbb{Z}, ax + by = \\gcd(a, b)\\)\u3002</li> </ul> <p>\u8bc1\u660e\uff1a</p> <p>\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42 \\(\\gcd\\) \u7684\u6700\u540e\u4e00\u6b65\u4e00\u5b9a\u662f \\(b = 0, a \\not ={0}\\)\uff0c\u6b64\u65f6\u663e\u7136\u5b58\u5728\u8fd9\u6837\u7684 \\(x,y \\to x = 1, y = 0)\\)\u3002</p> <p>\u6211\u4eec\u8bb0\u4e0a\u4e00\u5c42\uff08\u5df2\u7ecf\u8ba1\u7b97\u51fa\u6765\u7684\uff09\u7684 \\(x, y\\) \u4e3a \\(x, y\\)\uff0c\u8fd9\u4e00\u5c42\u7684 \\(x, y\\) \u4e3a \\(u, v\\)\uff0c\\(a, b\\) \u662f\u5f53\u524d\u5c42\u7684\u3002</p> <p>\u90a3\u4e48\u5047\u8bbe\u4e0a\u4e00\u5c42 \uff08\\(\\gcd(b, a\\bmod b)\\)\uff09 \u5df2\u7ecf\u6ee1\u8db3\u6761\u4ef6\u5219\u6709\uff1a\\(bx + (a\\bmod b)y = \\gcd(a, b)\\)\u3002\uff08\u5c31\u662f\u5f53\u524d\u5c42\u9012\u5f52\u4e0b\u53bb\uff09</p> <p>\u5047\u8bbe\u5b58\u5728 \\(u, v \\in \\mathbb{Z},au + bv = \\gcd(a, b)\\)\uff0c\u90a3\u4e48 \\(au + bv = bx + (a\\bmod b)y = \\gcd(b, a\\bmod b)\\)\u3002</p> <p>\u4ee4 \\(a \\bmod b = a - b\\lfloor\\dfrac{a}{b}\\rfloor\\)\u3002</p> <p>\u90a3\u4e48 \\(au + bv = bx + (a - b\\lfloor\\dfrac{a}{b}\\rfloor)y =ay + b(x - \\lfloor\\dfrac{a}{b}\\rfloor y)\\)\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0 \\(x - \\lfloor\\dfrac{a}{b}\\rfloor y \\in \\mathbb{Z}\\)\u3002</p> <p>\u6240\u4ee5 \\(u = x, v = x - (a - b\\lfloor\\dfrac{a}{b}\\rfloor)y\\) \u5373\u53ef\uff0c\u5f52\u7eb3\u53ef\u4ee5\u8bc1\u660e\u3002</p> <p>\u8fd9\u91cc\u7684\u601d\u8def\u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u60f3\u6cd5\uff0c\u8003\u8651\u5047\u8bbe\u4e0a\u4e00\u5c42\u5b58\u5728\u7b54\u6848\uff0c\u7136\u540e\u60f3\u529e\u6cd5\u5229\u7528\u4e0a\u4e00\u5c42\u7684\u7b54\u6848\u628a\u8fd9\u4e00\u5c42\u7684\u7ed3\u679c\u5316\u6210\u7b54\u6848\u5f62\u5f0f\u5e76\u5f52\u7eb3\u8bc1\u660e\u3002</p> <p>\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u5c31\u53ef\u4ee5\u89e3\u8fd9\u4e2a\u65b9\u7a0b\u7684\u4e00\u4e2a\u89e3 \\((x, y)\\)\uff1a\\(ax + by = \\gcd(a, b)\\)\u3002</p> <p>\u5b9e\u73b0\uff1a</p> <pre><code>int exgcd(int a, int b, int &amp;x, int &amp;y) {\nif(!b) { x = 1, y = 0; return a; }\nint d = exgcd(b, a % b, x, y);\nint z = x; x = y; y = z - y * (a / b);\n}\n</code></pre> <p>\u5982\u679c\u662f\u8981\u6c42 \\(ax + by = c\\) \u7684\u8fd9\u79cd\uff0c\u6211\u4eec\u5148\u6c42\u4e00\u4e2a \\(ax + by = \\gcd(a, b)\\) \u7684\u60c5\u51b5\u3002</p> <p>\u7136\u540e\u6574\u4f53\u4e58\u4e0a \\(\\dfrac{c}{\\gcd(a, b)}\\) \u5373\u53ef\uff0c\u8fd9\u540c\u65f6\u4e5f\u8bf4\u660e\u8fd9\u4e2a\u65b9\u7a0b\u6709\u6574\u6570\u89e3\u7684\u5145\u8981\u6761\u4ef6\u662f \\(\\gcd(a,b) | c\\)\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u91cc\u6c42\u51fa\u6765\u7684\u662f\u4e00\u7ec4\u7279\u89e3\uff0c\u6211\u4eec\u4e0d\u59a8\u8bbe\u4e3a \\((x_0, y_0)\\)\uff0c\u73b0\u5728\u8003\u8651\u6c42\u901a\u89e3\u3002</p> <p>\u627e\u901a\u89e3\u7684\u4e00\u4e2a Trick \u5c31\u662f\u4ece\u7279\u89e3\u51fa\u53d1\uff0c\u8bbe\u4e00\u7ec4\u4e0d\u662f\u7279\u89e3\u7684\u89e3\uff0c\u5c1d\u8bd5\u8ba9\u8fd9\u7ec4\u89e3\u548c\u7279\u89e3\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u7136\u540e\u5c31\u80fd\u5199\u51fa\u901a\u89e3\u7684\u5f0f\u5b50\u4e86\u3002</p> <p>\u8bb0 \\(d = \\gcd(a, b)\\)</p> <p>\u8bbe \\((x, y) \\not=(x_0,y_0)\\)\uff0c\u6ee1\u8db3 \\(ax + by = d\\)\u3002</p> <p>\u6240\u4ee5 \\(ax_0 + by_0 = ax + by \\iff a(x_0 - x) = b(y - y_0)\\) \u4e14 \\(x_0 - x, y - y_0 \\not= 0\\)\u3002</p> <p>\u6240\u4ee5 \\(\\dfrac{a}{b} = -\\dfrac{y - y_0}{x - x_0}\\)\u3002\u53ef\u4ee5\u770b\u4f5c\u6240\u6709\u89e3\u90fd\u662f\u5728\u4e00\u6761\u659c\u7387\u4e3a \\(-\\dfrac{a}{b}\\) \u7684\u76f4\u7ebf\u4e0a\u7684\u70b9\u3002</p> <p>\u8fd9\u91cc\u662f\u659c\u7387\u5f0f\uff0c\u4e0d\u592a\u65b9\u4fbf\uff0c\u6211\u4eec\u5c1d\u8bd5\u6539\u5199\u6210\u5176\u4ed6\u5f62\u5f0f\uff1a</p> <p>\\(d \\not= 0\\)\uff0c\u90a3\u4e48\u6709 \\(\\dfrac a d x + \\dfrac b d y = 1\\)\uff0c\u8fd9\u662f\u76f4\u7ebf\u7684\u622a\u8ddd\u5f0f\u3002</p> <p>\\(x_0 - x, y - y_0\\) \u4ee5\u53ca\u76f4\u7ebf\u6784\u6210\u7684\u4e09\u89d2\u5f62\u548c\u76f4\u7ebf\u622a\u51fa\u6765\u7684\u4e09\u89d2\u5f62\u76f8\u4f3c\u3002</p> <p>\u4e0d\u96be\u5199\u51fa\uff1a\\(x = x_0 + t\\dfrac b d, y = y_0 - t\\dfrac a d,t \\in\\mathbb{Z}\\)\u3002</p>"}, {"location": "algor/math/number-theory/congruence/#_3", "title": "\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b", "text": "<p>\u7ed9\u5b9a \\(a, b, m \\in \\mathbb{Z}\\)\uff0c\u6c42 \\(ax \\equiv b \\pmod m\\) \u7684\u89e3\u3002</p> <p>\u56e0\u4e3a \\(m | ax - b\\)\uff0c\u4ee4 \\(-ym = ax - b\\)\uff0c</p> <p>\u6240\u4ee5 \\(ax + my = b\\)\uff0c\u6240\u4ee5\u6709\u89e3\u80af\u5b9a\u9700\u8981 \\(\\gcd(a, m)\\ |\\ b\\)\uff0c\u8fd9\u91cc\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684\u4e1c\u897f\uff0c\u4e58\u4e0a\u4e00\u4e2a \\(\\dfrac{b}{\\gcd(a, m)}\\) \u5373\u53ef\u3002</p> <p>\u89e3\u96c6\u663e\u7136\u662f \\(\\{y | y\\equiv x \\pmod{\\dfrac{m}{\\gcd(a, m)}}, y \\in \\mathbb{Z}\\}\\)\uff0c\\(x\\) \u662f\u7279\u89e3\u3002</p>"}, {"location": "algor/math/number-theory/congruence/#_4", "title": "\u6b27\u62c9\u5b9a\u7406", "text": "<ul> <li>\u82e5 \\(\\gcd(a, n) = 1\\)\uff0c\u5219 \\(a^{\\varphi(n)} \\equiv 1 \\pmod n\\)\u3002</li> </ul> <p>\u770b\u5230\u8fd9\u4e2a \\(a^{\\varphi(n)}\\)\uff0c\u6211\u4eec\u60c5\u4e0d\u81ea\u7981\u5730\u60f3\u5230\u4e86\u7b80\u5316\u5269\u4f59\u7cfb\u3002</p> <p>\u9996\u5148\u6709\u4e2a\u7ed3\u8bba\u662f\uff0c\u5982\u679c \\(b \\not ={c}\\)\uff0c\\(\\overline{ab}\\) \u548c \\(\\overline{ac}\\) \u4e00\u5b9a\u4e0d\u662f\u540c\u4e00\u4e2a\u540c\u4f59\u7c7b\u3002</p> <p>\u56e0\u4e3a\u7b80\u5316\u5269\u4f59\u7cfb\u5728\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u4e58\u6cd5\u5c01\u95ed\uff0c\u4e14 \\(\\gcd(a, n) = 1\\) \u6240\u4ee5 \\(\\overline{aa_i}\\) \u4e5f\u5c5e\u4e8e\u7b80\u5316\u5269\u4f59\u7cfb\u3002</p> <p>\u90a3\u4e48 \\(\\overline{aa_1}, \\overline{aa_2}, \\overline{aa_3}, \\dots \\overline{aa_{\\varphi(n)}}\\) \u5c31\u7b49\u4ef7\u4e8e \\(\\overline{a_1}, \\overline{a_2}, \\overline{a_3}, \\dots \\overline{a_{\\varphi(n)}}\\)\u3002</p> <p>\u90a3\u4e48 \\(\\prod a_i \\equiv \\prod(aa_i) \\equiv a^{\\varphi(n)}\\prod a_i \\pmod n\\)\u3002</p> <p>\u7531 \\(\\prod a_i \\equiv a^{\\varphi(n)}\\prod a_i \\pmod n\\)\uff0c\u4e24\u8fb9\u9664\u6389\uff0c\u5c31\u5f97\u5230\u4e86\u6b27\u62c9\u5b9a\u7406\u3002</p> <p>\u5f53\u7136\u5982\u679c \\(n\\) \u662f\u8d28\u6570\uff0c\\(\\varphi(n) = n - 1\\)\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u8bc1\u660e\u8d39\u9a6c\u5c0f\u5b9a\u7406\u3002</p> <p>\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u8fd8\u6709\u4e00\u4e2a\u63a8\u8bba\uff0c\u4e4b\u540e\u8865\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u7ed9\u4e58\u65b9\u8fd0\u7b97\u53d6\u6a21\u3002</p>"}, {"location": "algor/math/number-theory/congruence/#_5", "title": "\u8d39\u9a6c\u5c0f\u5b9a\u7406", "text": "<ul> <li>\u5bf9\u4e8e \\(a \\in \\mathbb{Z}\\)\uff0c\u6709\u4e00\u4e2a\u8d28\u6570 \\(p\\)\uff0c\u4e14 \\(\\gcd(a, p) = 1\\)\uff0c\u5219\u6709 \\(a^{p - 1} \\equiv 1 \\pmod p\\)\u3002</li> <li>\u5bf9\u4e8e \\(a \\in \\mathbb{Z}\\)\uff0c\u6709\u4e00\u4e2a\u8d28\u6570 \\(p\\) \u5219\u6709 \\(a^{p} \\equiv a \\pmod p\\)\u3002</li> </ul> <p>\u524d\u8005\u5e26\u5165\u6b27\u62c9\u5b9a\u7406\u5373\u53ef\u3002</p> <p>\u540e\u8005\u8fd9\u91cc\u80fd\u53bb\u4efb\u610f \\(p\\) \u7684\u539f\u56e0\u5c31\u662f\uff0c\u6211\u4eec\u5047\u8bbe\u524d\u8005\u6210\u7acb\uff0c\u4e24\u8fb9\u540c\u65f6\u4e58\u4e0a\u4e00\u4e2a \\(a\\)\uff0c\u7136\u540e\u4e92\u8d28\u7684\u60c5\u51b5\u663e\u7136\u5bf9\uff0c\u5982\u679c \\(a\\) \u662f \\(p\\) \u7684\u500d\u6570\uff0c\u663e\u7136\u4f59\u6570\u4e3a \\(0\\) \u4e5f\u6210\u7acb\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8bc1\u4e86\u540e\u8005\u518d\u5012\u56de\u53bb\u5c31\u884c\u4e86\u3002</p> <p>\u5047\u8bbe\u540e\u8005\u6210\u7acb\uff0c\u6839\u636e\u4e8c\u9879\u5f0f\u5b9a\u7406\uff1a</p> <p>\\((a + 1)^p = a^p + a^{p - 1}\\dbinom{p}{1} + \\dots a\\dbinom{p}{p - 1} + 1\\)</p> <p>\u56e0\u4e3a \\(p\\) \u662f\u8d28\u6570\uff0c\u6240\u4ee5 \\(p\\ |\\ \\dbinom{p}{k}, 1\\le k &lt; p\\)\uff0c\u56e0\u4e3a \\(p\\) \u4e0d\u4f1a\u88ab\u6d88\u6389\u3002</p> <p>\u90a3\u4e48\u5b83\u4eec\u5728\u6a21 \\(p\\) \u610f\u4e49\u4e0b\u5c31\u7b49\u4e8e \\(0\\)\u3002</p> <p>\u6240\u4ee5 \\((a+1)^p \\equiv a^p + 1 \\pmod p\\)\u3002</p> <p>\u5c06\u540e\u8005\u5e26\u5165\uff1a\\((a+1)^p \\equiv a + 1 \\pmod p\\)\u3002</p> <p>\u7136\u540e\u5c31\u6210\u7acb\u4e86\u3002</p>"}, {"location": "algor/math/number-theory/congruence/#_6", "title": "\u4e58\u6cd5\u9006\u5143", "text": "<p>\u4e58\u6cd5\u9006\u5143\u7684\u5b9a\u4e49\u5927\u6982\u5c31\u662f\uff0c\u5982\u679c \\(a \\times inv \\equiv 1 \\pmod p\\)\uff0c\u90a3\u4e48 \\(inv\\) \u5c31\u662f \\(a\\) \u5728\u6a21 \\(p\\) \u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u9006\u5143\uff0c\u4e00\u822c\u8bb0\u4f5c \\(a^{-1}\\) \u6216\u8005 \\(inv(a)\\)\u3002</p> <p>\u7528\u7fa4\u8bba\u7684\u5199\u6cd5\u5c31\u662f\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u6a21 \\(p\\) \u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u7fa4\uff0c\u5e7a\u5143\u4e3a \\(1\\)\uff0c\u4e58\u6cd5\u9006\u5143\u5c31\u662f \\(a\\) \u7684\u5728\u8fd9\u4e2a\u7fa4\u91cc\u7684\u9006\u5143\u3002 </p> <p>\u53ef\u4ee5\u8bc1\u660e\u4e58\u6cd5\u9006\u5143\u662f\u552f\u4e00\u7684\uff0c\u8fd9\u4e2a\u5c31\u76f4\u63a5\u53cd\u8bc1\u6cd5\uff0c\u6d88\u53bb\u5373\u53ef\u3002</p> <p>\u4e00\u822c\u5728 OI \u4e2d\u6211\u4eec\u53ea\u8ba8\u8bba\u6a21\u8d28\u6570\u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u9006\u5143\uff0c\u56e0\u4e3a\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u6570\u90fd\u6709\u4e58\u6cd5\u9006\u5143\u3002</p> <p>\u4f60\u53ef\u4ee5\u7406\u89e3\u6210 \\(a\\times a^{-1} \\equiv a\\times inv \\equiv1 \\pmod p\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u7528\u6765\u5904\u7406\u5e26\u53d6\u6a21\u7684\u9664\u6cd5\u3002</p> <p>\u56e0\u4e3a\u52a0\u51cf\u4e58\u5728\u53d6\u6a21\u610f\u4e49\u4e0b\u90fd\u662f\u5c01\u95ed\u7684\uff0c\u4f46\u662f\u9664\u6cd5\u5c31\u6ca1\u6cd5\u5904\u7406\u3002</p> <p>\u6240\u4ee5\u4e3a\u4e86\u8ba9\u9664\u6cd5\u5728\u53d6\u6a21\u610f\u4e49\u4e0b\u4e5f\u662f\u5c01\u95ed\u7684\uff0c\u6211\u4eec\u628a\u9664\u6cd5\u8f6c\u5316\u6210\u4e58\u4e0a\u5206\u6bcd\u7684\u4e58\u6cd5\u9006\u5143\u5373\u53ef\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4 \\(\\dfrac{a}{b} \\equiv a\\times b^{-1} \\equiv a\\times inv(b) \\pmod p\\)\u3002</p> <p>\u6709\u4e00\u4e2a\u5c0f\u6ce8\u610f\u70b9\u662f\uff0c\\(inv(a)\\times inv(b) = inv(ab)\\)\uff0c\u8fd9\u4e2a\u4ece\u5b9a\u4e49\u4e0a\u7684\u5c01\u95ed\u6027\u5373\u53ef\u77e5\u9053\u3002</p> <p>\u6c42\u6cd5\u53ef\u4ee5\u76f4\u63a5\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a</p> <p>\u5982\u679c \\(a,p\\) \u4e92\u8d28\uff0c\u5219 \\(a\\) \u5728\u6a21 \\(p\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143\u662f \\(a^{p-2}\\)\uff0c\u5feb\u901f\u5e42\u5373\u53ef \\(O(\\log n)\\) \u6c42\uff0c\u8fd9\u91cc\u4e5f\u8bf4\u660e\u4e86\u53ea\u6709 \\(p\\) \u662f\u8d28\u6570\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u4efb\u610f\u7ed9\u5b9a\u7684\u503c\u57df\u5c0f\u4e8e \\(2p\\) \u7684\u5e8f\u5217\u90fd\u53ef\u4ee5\u6c42\u51fa\u9006\u5143\u3002 </p> <p>\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u503c\u57df\u4e3a \\([1,n]\\) \u7684\u6570\u5217\uff0c\u6211\u4eec\u8981\u6c42\u51fa\u6bcf\u4e00\u9879\u5728 \\(\\bmod\\ p\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143\uff08\\(p\\) \u662f\u8d28\u6570\uff09\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u662f \\(O(n \\log p)\\) \u7684\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u8fd9\u4e48\u505a\uff0c\u8003\u8651\u4e00\u4e2a\u53ef\u4ee5\u7ebf\u6027\u9012\u63a8\u7684\u505a\u6cd5</p> <p>\u9996\u5148\u4ee4 \\(r = i\\bmod p\\)\uff0c\u4ee4 \\(\\lfloor p/i\\rfloor = k\\)\uff0c\u5373 \\(ki+r \\equiv 0\\pmod p\\)\u3002</p> <p>\u7136\u540e\u5c31\u662f\u79fb\u9879\uff0c\u628a \\(i\\) \u5355\u72ec\u7559\u4e00\u8fb9\uff0c\u53e6\u5916\u4e00\u8fb9\u662f\u4e00\u4e2a\u5c0f\u4e8e \\(i\\) \u7684\u6570\u7684\u9006\u5143\u7684\u5f62\u5f0f\u3002</p> \\[ \\begin{aligned} ki+r &amp;\\equiv 0 &amp;\\pmod p\\\\ i &amp;\\equiv \\dfrac{-r}{k} &amp;\\pmod p\\\\ i &amp;\\equiv -r \\times inv(k) &amp;\\pmod p\\\\ i &amp;\\equiv -inv(k)\\times r &amp;\\pmod p\\\\ inv(i) &amp;\\equiv -k\\times inv(r) &amp;\\pmod p\\\\ inv(i) &amp;\\equiv -\\lfloor p/i\\rfloor \\times inv(p \\bmod i) &amp;\\pmod p \\end{aligned} \\] <p>\u6700\u540e\u4e00\u6b65\u8fd9\u91cc\u6709\u8d1f\u6570\uff0c\u52a0\u4e00\u4e0b\uff08\u5982\u679c \\(x &lt; 0\\)\uff0c\u5219 \\(x \\equiv p - x \\pmod p\\) \uff09\uff1a</p> \\[ inv(i)\\equiv (p - \\lfloor p/i\\rfloor) \\times inv(p \\bmod i) \\pmod p \\] <p>\u4e8e\u662f\u5c31\u80fd\u7ebf\u6027\u9012\u63a8\u4e86\uff0c\u7ec4\u5408\u6570\u5565\u7684\u4e5f\u80fd\u6c42\uff1a</p> Code <pre><code>const int mod = 998244353;\n\nint inv[si], fact[si], invf[si];\nvoid init(int n) {\ninv[1] = 1, fact[0] = invf[0] = 1;\nfor(int i = 2; i &lt;= n; ++i)\ninv[i] = 1ll * (mod - mod / i) * inv[mod % i] % mod;\nfor(int i = 1; i &lt;= n; ++i)\nfact[i] = 1ll * fact[i - 1] * i % mod,\ninvf[i] = 1ll * invf[i - 1] * inv[i] % mod;\n}\nint C(int n, int m) {\nif(m &lt; 0 || n &lt; m) return 0;\nreturn 1ll * fact[n] * invf[n - m] % mod * invf[m] % mod;\n}\nint Catalan(int n) {\nreturn 1ll * C(n * 2, n) % mod * inv[n + 1] % mod;\n}\n</code></pre>"}, {"location": "algor/math/number-theory/congruence/#crt", "title": "\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406(CRT)", "text": "<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u4e24\u4e24\u4e92\u8d28\u7684\u6574\u6570 \\(m_i\\)\uff0c\u6c42\u4ee5\u4e0b\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4\u7684\u89e3\uff1a</p> \\[ \\begin{cases}     x \\equiv a_1 \\pmod{m_1} \\\\     x \\equiv a_2 \\pmod{m_2} \\\\     \\cdots \\\\     x \\equiv a_n \\pmod{m_n} \\end{cases} \\] <p>CRT\uff1a\u8bbe \\(m = \\prod m_i,M_i=\\dfrac{m}{m_i}\\)\uff0c\\(t_i\\) \u4e3a\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4 \\(M_it_i \\equiv 1 \\pmod{m_i}\\) \u7684\u4e00\u4e2a\u89e3\uff0c\u5219\u65b9\u7a0b\u7ec4\u7684\u89e3\u4e3a\uff1a</p> \\[ x = \\sum\\limits_{i = 1}^n a_iM_it_i \\] <p>\u56e0\u4e3a \\(m_i\\) \u4e24\u4e24\u4e92\u8d28\uff0c\u6240\u4ee5\u663e\u7136 \\(M_i\\) \u662f\u9664\u4e86 \\(m_i\\) \u4ee5\u5916\u7684\u6240\u6709 \\(m_j\\) \u7684\u500d\u6570\u3002</p> <p>\u6240\u4ee5 \\(\\forall k \\not= i, a_iM_it_i \\equiv 0 \\pmod{m_k}\\)\u3002</p> <p>\u7136\u540e \\(a_iM_it_i \\equiv a_i \\pmod{m_i}\\)\uff0c\u8fd9\u4e2a\u662f\u56e0\u4e3a \\(t_i\\) \u662f \\(M_i\\) \u5173\u4e8e \\(m_i\\) \u7684\u4e58\u6cd5\u9006\u5143\uff0c\u6240\u4ee5\u5c31\u6709\u4e0a\u9762\u7684\u5f0f\u5b50\u4e86\u3002</p> <p>\u552f\u4e00\u89e3\u5c31\u6a21\u4e00\u4e2a \\(m\\) \u5c31\u884c\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e00\u5b9a\u6709\u552f\u4e00\u89e3\u7684\uff0c\u611f\u89c9\u975e\u5e38\u663e\u7136\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\u8bc1\u660e\u3002</p> <pre><code>#define int long long\nint crt(std::vector&lt;int&gt; &amp;r, std::vector&lt;int&gt; &amp;m) {\nint n = 1, ans = 0;\nfor(int i = 0; i &lt; (int)m.size(); ++i) n = n * m[i];\nfor(int i = 0; i &lt; (int)m.size(); ++i) {\nint mi = n / m[i], b, y;\nexgcd(mi, m[i], b, y);\nans = (ans + r[i] * mi * b % n) % n;\n}\nreturn (ans % n + n) % n;\n}\n</code></pre>"}, {"location": "algor/math/number-theory/congruence/#excrt", "title": "EXCRT", "text": "<p>\u7528\u4e8e\u6a21\u6570\u4e24\u4e24\u4e0d\u4e92\u8d28\u7684\u60c5\u51b5\u3002</p> <p>\u8003\u8651\u4e24\u4e2a\u65b9\u7a0b\u600e\u4e48\u505a\u3002</p> <p>\u5047\u8bbe \\(x \\equiv a_1 \\pmod{m_1}, x \\equiv a_2 \\pmod{m_2}\\)\u3002</p> <p>\u6309\u7167\u7c7b\u4f3c \\(\\gcd\\) \u90a3\u8fb9\u7684\u5957\u8def\uff1a</p> <p>\\(x = m_1p + a_1 = m_2q + a_2, p, q \\in \\mathbb{Z}\\)\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u77e5\u9053 \\(m_1p - m_2q = a_2 - a_1\\)\uff0c\u7136\u540e\u8fd9\u4e1c\u897f\u5c31\u662f\u7c7b\u4f3c\u7ebf\u6027\u540c\u4f59\u7684\u4e1c\u897f\u3002\u6709\u89e3\u5f53\u4e14\u4ec5\u5f53 \\(\\gcd(m_1, m_2)\\ |\\ a_2 - a_1\\)\u3002</p> <p>\u7136\u540e\u5c31 exgcd \u89e3\u4e00\u4e0b\uff0c\u663e\u7136\u8fd9\u4e24\u4e2a\u65b9\u7a0b\u7684\u89e3\u5e94\u8be5\u662f \\(m_2q + a_2 \\pmod{\\operatorname{lcm}(m_1, m_2)}\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5c31\u76f4\u63a5\u5408\u5e76\u591a\u4e2a\u65b9\u7a0b\u5c31\u53ef\u4ee5\u4e86\u3002</p>"}, {"location": "algor/math/number-theory/du/", "title": "\u675c\u6559\u7b5b", "text": "<p>\u5927\u6982\u662f\u80fd\u6c42\u5f88\u591a\u5f88\u591a\u79ef\u6027\u51fd\u6570\u7684\u524d\u7f00\u548c\u7684\u4e9a\u7ebf\u6027\u7b5b\u6cd5\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u8981\u6c42\u7684\u662f \\(\\sum\\limits_{i = 1}^nf(i) = F(i)\\)\u3002</p> <p>\u6211\u4eec\u627e\u4e00\u4e2a\u79ef\u6027\u51fd\u6570 \\(g\\) \u548c \\(f\\) \u5377\u8d77\u6765\uff0c\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a</p> \\[ \\begin{aligned} (f * g)(n) &amp;= \\sum\\limits_{d | n}f(d)g(\\dfrac{n}{d}) \\\\ &amp;= \\sum\\limits_{d | n}f(\\dfrac{n}{d})g(d)\\iff \\\\ \\sum\\limits_{i = 1}^n (f * g)(i) &amp;= \\sum\\limits_{i = 1}^n \\sum\\limits_{d | i} f(\\dfrac{i}{d})g(d) \\\\ &amp;= \\sum\\limits_{d = 1}^n\\sum\\limits_{i = 1\\land d | i}^{n} f(\\dfrac i d)g(d) \\\\ &amp;= \\sum\\limits_{d = 1}^ng(d)\\sum\\limits_{i = 1}^{\\lfloor\\frac n d\\rfloor} f(i) \\\\ &amp;= \\sum\\limits_{d = 1}^ng(d)F(\\lfloor\\dfrac n d\\rfloor) \\end{aligned} \\] <p>\u5982\u679c\u6211\u4eec\u80fd\u77e5\u9053 \\(f * g\\) \u7684\u524d\u7f00\u548c \\(g\\) \u7684\u524d\u7f00\u548c\uff0c\u4f3c\u4e4e\u80fd\u5feb\u901f\u6c42 \\(F\\)\uff0c\u4f46\u662f\u76f4\u63a5\u505a\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u8003\u8651\u5206\u5272\u5b50\u95ee\u9898\uff1a</p> \\[ \\begin{aligned} g(1)F(n) &amp;= \\sum\\limits_{d = 1}^ng(d)F(\\lfloor\\dfrac n d\\rfloor) -\\sum\\limits_{d = 2}^ng(d)F(\\lfloor\\dfrac n d\\rfloor) \\\\ &amp;= \\sum\\limits_{i = 1}^n (f * g)(i) - \\sum\\limits_{d = 2}g(d)F(\\lfloor\\dfrac n d\\rfloor) \\end{aligned} \\] <p>\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u77e5\u9053 \\((f * g)\\) \u548c \\(g\\) \u7684\u524d\u7f00\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6574\u9664\u5206\u5757\u6765\u8ba1\u7b97 \\(F\\)\uff0c\u5f0f\u5b50\u5f53\u4e2d\u7684 \\(F(\\lfloor\\dfrac n d\\rfloor)\\) \u5219\u53ef\u4ee5\u9012\u5f52\u5904\u7406\u3002</p> <p>\u4f2a\u4ee3\u7801\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a</p> \\[ \\begin{array}{ll} &amp; \\textbf{Du's Sieve method for} \\\\ &amp; \\textbf{Calculating prefix sum of a multiplicative function} \\\\ &amp; \\\\ 1 &amp; \\textbf{Input.} \\text{An integer } n\\\\ 2 &amp; \\textbf{Output.} \\text{The sum of} \\sum\\limits_{i = 1}^n f(i)\\\\ 3 &amp; \\textbf{Function.}\\ \\text{Sieve}(n) \\\\ 4 &amp; \\qquad answer \\gets \\sum\\limits_{i = 1}^n(f * g)(i) \\\\ 5 &amp; \\qquad l \\gets 2, r\\gets 0 \\\\ 6 &amp; \\qquad \\textbf{while}\\text{ l} \\le n: \\\\ 7 &amp; \\qquad \\qquad r \\gets \\min(n, \\left\\lfloor\\dfrac{n}{\\lfloor\\dfrac{n}{l}\\rfloor}\\right\\rfloor) \\\\ 8 &amp; \\qquad \\qquad answer \\gets answer - (\\sum\\limits_{i = l}^r g(i) \\times \\text{Sieve}(\\lfloor\\dfrac{n}{l}\\rfloor)) \\\\ 9 &amp; \\qquad \\textbf{return}\\ answer / g(1) \\end{array} \\] <p>\u7136\u540e\u6709\u51e0\u4e2a\u5e38\u6570\u4e0a\u7684\u5c0f\u4f18\u5316\uff1a</p> <ol> <li>\u5c0f\u4e8e \\(B\\) \u7684\u76f4\u63a5\u7ebf\u6027\u7b5b\uff0c\u8fd9\u90e8\u5206 \\(O(B)\\)\u3002</li> <li>\u8bb0\u5fc6\u5316\uff0c\u5269\u4e0b\u6ca1\u7ebf\u6027\u7b5b\u7684\u90e8\u5206\u76f4\u63a5\u5f00\u4e00\u4e2a map \u6216\u8005 Hash Table \u5c31\u884c\uff0c\u4f46\u662f\u8fd9\u592a\u6162\u4e86\uff0c\u6211\u4eec\u4e0d\u80fd\u63a5\u53d7\uff0c\u6ce8\u610f\u5230\u8fd9\u91cc\u6c42\u548c\u4f1a\u8c03\u7528\u7684\u90e8\u5206\u5168\u662f \\(\\lfloor\\dfrac n i\\rfloor\\) \u7684\u5f62\u5f0f\uff0c\u4e8e\u662f\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u8fd9\u4e9b\u4f4d\u7f6e\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u628a \\(\\lfloor\\dfrac n i\\rfloor\\) \u6620\u5c04\u6210 \\(\\left\\lfloor\\dfrac{n}{\\lfloor\\dfrac{n}{i}\\rfloor}\\right\\rfloor\\)\uff0c\u8fd9\u90e8\u5206\u7684\u6570\u7ec4\u5f00\u4e2a \\(O(n^{\\frac 1 3})\\) \u5dee\u4e0d\u591a\u4e86\uff0c\u4fdd\u9669\u4e00\u70b9\u4e5f\u53ef\u4ee5\u5f00 \\(O(\\sqrt n)\\)\u3002</li> </ol> <p>\\(B\\) \u53d6 \\(\\sqrt n\\) \u4e0d\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u7684\u590d\u6742\u5ea6\u662f\uff1a\\(\\sum\\limits_{i = 1}^{\\lfloor\\frac n B\\rfloor}\\sqrt{\\dfrac n i} = O(\\dfrac{n}{\\sqrt B})\\) \u7684\u3002</p> <p>\u7531\u5747\u503c\u4e0d\u7b49\u5f0f\uff1a\\(B = n^{\\frac{2}{3}}\\) \u65f6\uff0c\u590d\u6742\u5ea6\u6700\u4f18\uff0c\u4e3a \\(O(n^{\\frac 2 3})\\)</p> <p>\u4e00\u4e9b\u5c0f\u5e94\u7528\uff1a</p> <ol> <li>\u7b5b \\(\\mu\\)\uff0c\u6ce8\u610f\u5230 \\(\\mu * Id_0 = \\epsilon\\)\uff0c\u8fd9\u662f Trivial \u7684\u3002</li> <li>\u7b5b \\(\\varphi\\)\uff0c\u6ce8\u610f\u5230 \\(\\varphi * Id_0 = Id_1\\)\uff0c\u8fd9\u662f Trivial \u7684\u3002</li> </ol> \u4e0a\u9762\u4e24\u4e2a\u73a9\u610f\u513f\u7684 Code <p>Source: \u675c\u6559\u7b5b\u6a21\u677f</p> <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;bitset&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e6 + 10;\n\nint n, m, t;\nint smu[si], mu[si];\nint sphi[si], phi[si];\nint pri[si], vis[si];\nvoid sieve(int n) {\nmu[1] = 1, phi[1] = 1, t = 0;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) pri[++t] = i, vis[i] = i, mu[i] = -1, phi[i] = i - 1;\nfor(int j = 1; j &lt;= t; ++j) {\nif(pri[j] &gt; vis[i] || i * pri[j] &gt; n) break;\nvis[i * pri[j]] = pri[j];\nif(i % pri[j] == 0) { mu[i * pri[j]] = 0, phi[i * pri[j]] = phi[i] * pri[j];  break; }\nmu[i * pri[j]] = -mu[i], phi[i * pri[j]] = phi[i] * (pri[j] - 1);\n}\nmu[i] += mu[i - 1], phi[i] += phi[i - 1];\n}\n}\nint id(int x) { return n / x; }\nstd::bitset&lt;si&gt; vm, vp;\nint Mobius(int n) {\nif(n &lt;= m) return mu[n];\nif(vm[id(n)]) return smu[id(n)];\nint ret = 1; // epsilon\nint l = 2, r = 0;\nfor(; l &lt;= n; ) {\nr = min((n / (n / l)), n);\nret -= (r - l + 1) * Mobius(n / l), l = r + 1;\n}\nvm[id(n)] = true;\nreturn smu[id(n)] = ret; // Id_0(1) = 1\n} int Phi(int n) {\nif(n &lt;= m) return phi[n];\nif(vp[id(n)]) return sphi[id(n)];\nint ret = n * (n + 1) / 2; // Id_1\nint l = 2, r = 0;\nfor(; l &lt;= n; ) {\nr = min((n / (n / l)), n);\nret -= (r - l + 1) * Phi(n / l), l = r + 1;\n}\nvp[id(n)] = true;\nreturn sphi[id(n)] = ret;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nsieve(si - 10);\nwhile(T--) {\nvm.reset(), vp.reset();\ncin &gt;&gt; n, m = si - 10;\ncout &lt;&lt; Phi(n) &lt;&lt; \" \" &lt;&lt; Mobius(n) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre> <p>\u5f3a\u4e00\u70b9\u7684\u5e94\u7528\uff1a</p> <p>\\(\\sum\\limits_{i = 1}^n\\varphi(i)\\cdot i\\)\u3002</p> <p>\u4e0d\u96be\u6ce8\u610f\u5230 \\(f(i) = \\varphi(i) \\cdot i\\) \u4f9d\u65e7\u662f\u4e00\u4e2a\u79ef\u6027\u51fd\u6570\u3002</p> <p>\u8003\u8651\u6784\u9020\u4e00\u4e2a \\(g\\) \u4f7f\u5f97 \\(f * g\\) \u7684\u524d\u7f00\u548c\u6bd4\u8f83\u597d\u7b97\uff08\u6700\u597d\u662f \\(O(1)\\)\uff09\u3002</p> <p>\u4e0d\u59a8\u4ee4 \\(g = Id_1\\)\u3002</p> \\[ \\begin{aligned} (f * Id_1)(n)&amp;= \\sum\\limits_{d | n}f(d)Id_1(\\dfrac n d) \\\\ &amp;= \\sum\\limits_{d | n}\\varphi(d) \\cdot d \\cdot \\dfrac n d \\\\ &amp;= n \\end{aligned} \\] <p>\u6240\u4ee5 \\(\\sum\\limits_{i = 1}^n (f * g)(i) = n^2\\)\u3002</p> <p>\\(g\\) \u7684\u524d\u7f00\u548c\u662f Trivial \u7684\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u505a\u4e86\u3002</p> <p>\u8fd9\u91cc\u9009\u62e9 \\(g = Id_1\\) \u7684\u539f\u56e0\u5927\u6982\u662f\uff0c\u6211\u4eec\u60f3\u5c1d\u8bd5\u6d88\u53bb \\(\\varphi(d)\\) \u6216\u8005 \\(d\\) \u6765\u5feb\u901f\u6c42\u548c\uff0c\\(\\varphi(d)\\) \u7684\u8bdd\u5982\u679c\u5377\u4e0a \\(Id_0\\) \u662f\u6ca1\u7528\u7684\uff0c\u5c55\u4e0d\u5f00\uff0c\u6240\u4ee5\u8003\u8651\u6d88\u53bb \\(d\\)\uff0c\u6ce8\u610f\u5230 Dirichlet \u5377\u79ef\u5f62\u5f0f\u91cc\u6709 \\(\\dfrac n d\\)\uff0c\u6240\u4ee5\u6784\u9020\u4e00\u4e2a \\(Id_1\\) \u5377\u4e0a\u53bb\u5c31\u80fd\u6d88\u6389\u4e86\u3002</p>"}, {"location": "algor/math/number-theory/factor/", "title": "\u7ea6\u6570", "text": ""}, {"location": "algor/math/number-theory/factor/#_1", "title": "\u5b9a\u4e49", "text": "<p>\u82e5 \\(n\\) \u9664\u4ee5 \\(d\\) \u7684\u4f59\u6570\u4e3a \\(0\\)\uff0c\u5219\u79f0 \\(d\\) \u80fd\u6574\u9664 \\(n\\)\uff0c\u6216\u8005 \\(d\\) \u4e3a \\(n\\) \u7684\u7ea6\u6570\uff0c\u8bb0\u4f5c \\(d|n,(n,d \\in \\mathbb{Z})\\)</p> <ul> <li>\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u7684\u4e09\u4e2a\u63a8\u8bba\uff1a</li> <li>\u82e5 \\(n \\in \\mathbb{N}^*\\)\uff0c\u5219 \\(n\\) \u7684\u6b63\u7ea6\u6570\u96c6\u5408\u4e3a \\(\\{x | x = p_1^{b_1}p_2^{b_2}\\dots p_m^{b_m},b_i \\le c_i\\}\\)\u3002</li> <li>\\(n\\) \u7684\u6b63\u7ea6\u6570\u4e2a\u6570\u4e3a \\(\\prod\\limits_{i = 1}^m(c_i+ 1)\\)</li> <li>\\(n\\) \u7684\u6b63\u7ea6\u6570\u4e4b\u548c\u4e3a \\((1+p_1+p_1^2+p_1^3+\\dots +p_1^{c_1})\\times\\dots(1+p_m+p_m^2+p_m^3+\\dots +p_m^{c_m}) = \\prod\\limits_{i = 1}^m(\\sum\\limits_{j = 1}^{c_i} p_i^{j})\\)</li> </ul> <p>\u5176\u5b9e\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u53ef\u4ee5\u628a\u6574\u9664\u5173\u7cfb\u53d8\u6210\u8d28\u56e0\u5b50\u7684\u6307\u6570\u5927\u5c0f\u5173\u7cfb\u3002</p> <p>\u6bd4\u5982\u8bb0 \\(x = \\prod p_i^{e_x(i)}\\)\u3002</p> <p>\u5982\u679c \\(x | y \\iff \\forall i,e_x(i) \\le e_y(i)\\)\u3002</p> <p>\\(\\gcd\\) \u548c \\(\\operatorname{lcm}\\) \u4e5f\u53ef\u4ee5\u5199\u6210\u7c7b\u4f3c\u7684\u5f62\u5f0f\uff0c\u5c31\u662f\u6307\u6570\u53d6 \\(\\min/\\max\\)</p>"}, {"location": "algor/math/number-theory/factor/#_2", "title": "\u6c42\u6b63\u7ea6\u6570\u96c6\u5408", "text": ""}, {"location": "algor/math/number-theory/factor/#_3", "title": "\u8bd5\u9664\u6cd5", "text": "<p>\u8003\u8651\u5230 \\(n = a\\times b\\)\uff0c\u5176\u4e2d \\(a,b\\) \u4e3a\u4e00\u5bf9\u540c\u65f6\u51fa\u73b0\u7684\u56e0\u5b50\u3002\u7ed3\u5408\u6839\u53f7\u7ed3\u8bba\uff0c\u626b\u63cf \\(a\\in[1,\\sqrt{n}]\\)\uff0c\u82e5 \\(a | n\\)\uff0c\u5219\u540c\u65f6\u8bb0\u5f55 \\(a,n/a\\) \u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6\u663e\u7136\u662f\u6839\u53f7\uff0c\u7531\u6b64\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u63a8\u8bba\uff1a\u6574\u6570 \\(n\\) \u7684\u7ea6\u6570\u4e0a\u754c\u4e3a \\(2\\sqrt{n}\\) \uff08\u7ea6\u6570\u4e0a\u754c\u7ed3\u8bba\uff09\u3002</p> <pre><code>int m, div[si];\nvoid get_factors(int n) {\nm = 0;\nfor(int i = 1; i * i &lt;= n; ++i)\nif(n % i == 0) {\ndiv[++m] = i; if(i * i != n) div[++m] = n / i;\n}\n}\n</code></pre>"}, {"location": "algor/math/number-theory/factor/#_4", "title": "\u500d\u6570\u6cd5", "text": "<p>\u8bd5\u9664\u6cd5\u6709\u5c40\u9650\u6027\uff0c\u53ea\u80fd\u6c42\u4e00\u4e2a\u6570\u7684\u6b63\u7ea6\u6570\u96c6\u5408\uff0c\u500d\u6570\u6cd5\u5219\u53ef\u4ee5\u6c42 \\([1,n]\\) \u6240\u6709\u6570\u7684\u6b63\u7ea6\u6570\u96c6\u5408\u3002</p> <p>\u57fa\u4e8e\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u60f3\u6cd5\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a \\(d\\in[1,n]\\)\uff0c\u4ee5 \\(d\\) \u4e3a\u7ea6\u6570\u4e4b\u4e00\u7684\u6570\u7684\u96c6\u5408\u5fc5\u7136\u662f \\(\\{kd,k=2,3,4\\dots,\\lfloor n/d\\rfloor\\}\\)</p> <p>\u90a3\u4e48\u76f4\u63a5\u628a \\(d\\) \u6254\u5230\u91cc\u9762\u5373\u53ef\uff0c\u590d\u6742\u5ea6 \\(O(n+n/2+n/3+\\dots+1) = O(n\\log n)\\)\u3002</p> <p>\u53c8\u53ef\u4ee5\u5bfc\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a\\(1\\sim n\\) \u6240\u6709\u6570\u7684\u7ea6\u6570\u4e2a\u6570\u4e4b\u548c\u7ea6\u4e3a \\(n\\log n\\) \u4e2a\uff08\u7ea6\u6570\u4e2a\u6570\u548c\u7ed3\u8bba\uff09\u3002</p> <pre><code>std::vector&lt;int&gt; fact[si];\nvoid get_factors(int n) {\nfor(int i = 1; i &lt;= n; ++i)\nfor(int j = 1; j &lt;= n / i; ++j)\nfact[i * j].emplace_back(i);\n}\n</code></pre>"}, {"location": "algor/math/number-theory/factor/#_5", "title": "\u6700\u5927\u516c\u7ea6\u6570", "text": "<p>\u5b9a\u4e49\u5982\u5b57\u9762\u610f\u4e49\u3002</p> <ul> <li> <p>\u5b9a\u7406\uff1a\\(\\forall a,b \\in \\mathbb{N},\\gcd(a,b)\\times \\operatorname{lcm}(a,b)=a\\times b\\)\u3002</p> </li> <li> <p>\u66f4\u76f8\u51cf\u635f\u672f</p> </li> <li> <p>\\(\\forall a,b \\in \\mathbb{N},a\\ge b\\) \u6709 \\(\\gcd(a,b) = \\gcd(b, a-b) = \\gcd(a, a-b)\\)</p> </li> <li>\\(\\forall a,b \\in \\mathbb{N}\\)\uff0c\u6709 \\(\\gcd(2a,2b) = 2\\gcd(a,b)\\)\u3002</li> </ul> <p>\u7b2c\u4e8c\u8005\u8bc1\u660e\u663e\u7136\u3002</p> <p>\\(\\text{Proof of 1:}\\)</p> <p>\u5bf9\u4e8e \\(\\forall d\\)\uff0c\\(d | a, d|b\\)\uff0c\u53ef\u4ee5\u6709 \\(d|(a-b)\\)\uff0c\u56e0\u4e3a\uff0c\u8bbe \\(a = r_1\\times d,b= r_2\\times d\\)\u3002</p> <p>\u663e\u7136 \\(r1-r2\\ge 0\\)\uff0c\u6240\u4ee5 \\(a-b = (r_1-r_2)d\\)\u3002</p> <p>\u90a3\u4e48 \\((a,b)\\) \u7684\u516c\u7ea6\u6570\u96c6\u5408\u5fc5\u7136\u4e0e \\((a,a-b)\\) \u76f8\u540c\uff0c\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e24\u4e2a\u96c6\u5408\u7684\u6700\u5927\u503c\u76f8\u7b49\uff0c\u5373\u662f \\(\\gcd\\) \u76f8\u7b49\u3002 </p> <ul> <li>\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5</li> </ul> <p>\u5b9a\u7406\uff1a\\(\\forall a,b \\in \\mathbb{N}\\Rightarrow\\gcd(a,b)=\\gcd(b,a\\mod b)\\)</p> <p>\\(\\text{Proof}:\\)</p> <p>\u8003\u8651\u7c7b\u6bd4\u4e0a\u9762\u7684\u8bc1\u660e\u53bb\u8bc1\u660e\u516c\u7ea6\u6570\u96c6\u5408\u76f8\u7b49\u3002</p> <p>\u4e0d\u59a8\u4ee4 \\(a\\ge b\\)\uff0c\u4ee4 \\(a = qb+r\\)\uff0c\u663e\u7136 \\(d|a,d|qb \\Rightarrow d|(a-qb)\\)\u3002</p> <p>\u90a3\u4e48\u8bbe \\(d|a,d|b\\)\uff0c\u5219\u6709 \\(d|qb\\Rightarrow d|(a-qb) \\Rightarrow d|r\\)\u3002</p> <p>\u56e0\u4e3a \\(d|r,d|b\\)\uff0c\u540c\u4e0a\u7406\u5373\u53ef\u3002 </p> <p>\u5f53 \\(b=0\\) \u65f6\uff0c\u539f\u5f0f\u7b49\u4e8e \\(a\\)\uff0c\u53ef\u4ee5\u5199\u51fa\u4ee5\u4e0b\u4ee3\u7801\u6c42 \\(\\gcd\\)\uff08\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u8f97\u8f6c\u76f8\u9664\uff09</p> <pre><code>int gcd(int a, int b) {\nreturn b ? gcd(b, a % b) : a;\n}\n</code></pre> <p>\u590d\u6742\u5ea6 \\(O(\\log(a+b))\\)\u3002</p>"}, {"location": "algor/math/number-theory/factor/#_6", "title": "\u4e92\u8d28", "text": "<p>\u5c31\u662f \\(\\gcd(a,b)=1,a,b\\in\\mathbb{N}\\)\uff0c\u5219\u79f0 \\(a,b\\) \u4e92\u8d28\u3002</p> <p>\u6ce8\u610f\u4e24\u4e24\u4e92\u8d28\u662f \\(\\gcd(a,b)=\\gcd(b,c)=\\gcd(a,c) = 1\\)\u3002 l \\(\\gcd(a,b,c)=1\\) \u4e3a\u201c\\(a,b,c\\) \u4e92\u8d28\u201d\u3002</p>"}, {"location": "algor/math/number-theory/factor/#_7", "title": "\u6b27\u62c9\u51fd\u6570", "text": "<ul> <li> <p>\u5b9a\u4e49\uff1a\\([1,n]\\) \u4e2d\u4e0e \\(n\\) \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\u4e3a \\(\\varphi(n)\\)\uff0c\u79f0\u4f5c\u6b27\u62c9\u51fd\u6570\u3002</p> </li> <li> <p>\u8ba1\u7b97\uff1a\\(\\varphi(n) = n \\times\\prod\\limits_{\\text{PRIME(p)}\\land p|n}(1-\\frac{1}{p})\\)\u3002</p> </li> </ul> <p>\u672c\u8d28\u4e0a\u662f\u5bb9\u65a5\u539f\u7406\uff0c\u5373\u5bf9\u4e8e \\(n\\) \u7684\u4efb\u610f\u4e24\u4e2a\u8d28\u56e0\u5b50 \\(p,q\\)\uff0c\u4ece \\([1,n]\\) \u4e2d\u53bb\u9664 \\(p,q\\) \u5206\u522b\u7684\u500d\u6570\u4e4b\u540e\uff0c\u8fd8\u8981\u628a \\(pq\\) \u7684\u500d\u6570\u52a0\u56de\u6765\u4e00\u6b21\uff0c</p> <p>\u5bf9\u4e8e\u6574\u4f53\u5e94\u7528\u8fd9\u4e2a\u7ed3\u8bba\u53ef\u4ee5\u5f97\u5230 \\(\\varphi(n)=n-\\lfloor\\frac{n}{p}\\rfloor-\\lfloor\\frac{n}{q}\\rfloor+\\lfloor\\frac{n}{pq}\\rfloor=n(1-\\frac{1}{p})(1-\\frac{1}{q})\\)\u3002</p> <p>\u6240\u4ee5\u5206\u89e3\u8d28\u56e0\u6570\u5c31\u53ef\u4ee5 \\(O(\\sqrt{n})\\) \u6c42 \\(\\varphi(n)\\)\u3002</p>"}, {"location": "algor/math/number-theory/factor/#_8", "title": "\u6b27\u62c9\u51fd\u6570\u7684\u6027\u8d28", "text": "<ul> <li>\u6027\u8d281\uff1a\\(\\forall n &gt; 1, 1\\sim n\\) \u4e2d\u4e0e \\(n\\) \u4e92\u8d28\u7684\u6570\u7684\u548c\u4e3a \\(n\\cdot\\varphi(n)/2\\)\u3002</li> </ul> <p>\u7531\u66f4\u76f8\u51cf\u635f\u672f\uff0c\u548c \\(n\\) \u4e92\u8d28\u7684\u6570\u5fc5\u7136\u6210\u5bf9\u51fa\u73b0\uff0c\u4e14\u5747\u503c\u4e3a \\(n/2\\)\uff0c\u8bc1\u6bd5\u3002</p> <ul> <li>\u6027\u8d282\uff1a\u6b27\u62c9\u51fd\u6570\u4e3a\u79ef\u6027\u51fd\u6570\uff0c\u4e14\u6709\uff1a\\(\\gcd(a,b)=1\\Rightarrow \\varphi(ab)=\\varphi(a)\\cdot\\varphi(b)\\)\u3002</li> </ul> <p>\u5c55\u5f00\u8ba1\u7b97\u5f0f\u5c31\u884c\u4e86\u3002</p> <ul> <li>\u6027\u8d283\uff1a\uff08\u79ef\u6027\u51fd\u6570\u7684\u6027\u8d28\uff09\uff1a\u5728\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u80cc\u666f\u4e0b\uff0c\u82e5 \\(f\\) \u4e3a\u79ef\u6027\u51fd\u6570\uff0c\u5219\u6709\uff1a\\(f(n)=\\prod\\limits_{i=1}^mf(p_i^{c_i})\\)</li> </ul> <p>\u663e\u7136\u4efb\u610f\u7684 \\(p_i^{c_i}\\) \u548c \\(p_j^{c_j}\\) \u5fc5\u7136\u4e92\u8d28\uff0c\u7531\u79ef\u6027\u51fd\u6570\u7684\u6027\u8d28\uff0c\u5bf9\u6574\u4f53\u5e94\u7528\u7ed3\u8bba\uff0c\u53ef\u4ee5\u5f97\u5230\u539f\u5f0f\u3002</p> <ul> <li>\u6027\u8d284\uff1a\u82e5 \\(p\\) \u4e3a\u8d28\u6570\uff0c\u82e5 \\(p|n\\) \u4e14 \\(p^2\\not|n\\)\uff0c\u5219 \\(\\varphi(n)=\\varphi(n/p)\\varphi(p)=\\varphi(n/p)\\cdot(p-1)\\)\u3002</li> </ul> <p>\u79ef\u6027\u51fd\u6570\u7684\u6027\u8d28\uff0c\u663e\u7136\uff0c\u5e38\u7528\u4e8e\u9012\u63a8\u3002</p> <ul> <li>\u6027\u8d285\uff1a\u82e5 \\(p\\) \u4e3a\u8d28\u6570\uff0c\u82e5 \\(p|n\\) \u4e14 \\(p^2|n\\)\uff0c\u5219 \\(\\varphi(n)= \\varphi(n/p)\\times p\\)</li> </ul> <p>\u56e0\u4e3a \\(n/p\\) \u548c \\(p\\) \u4e0d\u4e92\u8d28\uff0c\u6240\u4ee5\u53ea\u80fd\u5c55\u5f00\u8ba1\u7b97\u5f0f\u5f97\u5230\uff0c\u5e38\u7528\u4e8e\u9012\u63a8\u3002</p> <ul> <li>\u6027\u8d286\uff1a\\(\\sum_{d|n}\\varphi(d)=n\\)\u3002</li> </ul> <p>\u5f88\u6709\u610f\u601d\u7684\u6027\u8d28\uff0c\u5148\u5bf9 \\(n\\) \u5206\u89e3\u8d28\u56e0\u6570\uff0c\u4ee4 \\(f(x)=\\sum_{d|x}\\varphi(d)\\)\u3002</p> <p>\u663e\u7136 \\(f(p_i^{c_i}) = \\varphi(1)+\\varphi(p_i)+\\varphi(p_i^{2})+\\dots+\\varphi(p_i^{c_i}) = p_i^{c_i}\\)\uff08\u7531\u6027\u8d28 \\(5\\) \u53ef\u4ee5\u53d1\u73b0\u662f\u4e00\u4e2a\u7b49\u6bd4\u6570\u5217\u6c42\u548c\uff09\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u82e5 \\(\\gcd(n,m)=1\\)\uff0c\\(f(nm)=(\\sum_{d|n}\\varphi(d))\\cdot(\\sum_{d|m}\\varphi(d))=f(n)f(m)\\)\u3002</p> <p>\u6240\u4ee5 \\(f\\) \u662f\u79ef\u6027\u51fd\u6570\uff0c\u7531\u79ef\u6027\u51fd\u6570\u6027\u8d28\u53ef\u4ee5\u5f97\u5230\u539f\u5f0f\u6210\u7acb\u3002</p>"}, {"location": "algor/math/number-theory/factor/#_9", "title": "\u7b5b\u6cd5\u6c42\u6b27\u62c9\u51fd\u6570", "text": "<ul> <li>\u57c3\u6c0f\u7b5b</li> </ul> <p>\u8003\u8651\u57c3\u6c0f\u7b5b\u7684\u8fc7\u7a0b\uff0c\u53d1\u73b0\u4efb\u610f\u7684 \\(m\\in[2,n]\\)\uff0c\\(m\\) \u4f1a\u88ab\u6240\u6709\u7684\u8d28\u6570 \\(d\\) \u7b5b\u4e00\u6b21\uff08\u4ece\u5e73\u65b9\u5f00\u59cb\uff0c\u6240\u4ee5\u7b5b\u5b83\u7684\u5fc5\u7136\u662f\u8d28\u6570\uff09\u3002</p> <p>\u7136\u540e\u6839\u636e\u6b27\u62c9\u51fd\u6570\u7684\u8ba1\u7b97\u5f0f\uff1a\\(\\varphi(k)=\\varphi(k)\\times(\\frac{i-1}{i}),k = i,2i,3i,\\dots\\) \u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n\\log n)\\)\u3002</p> <pre><code>int phi[si];\nvoid calc_euler_func(int n) {\nfor(int i = 1; i &lt;= n; ++i) phi[i] = i;\nfor(int i = 2; i &lt;= n; ++i)\nif(phi[i] == i)\nfor(int j = i; j &lt;= n; j += i)\nphi[j] = phi[j] / i * (i - 1);\n}\n</code></pre> <ul> <li>\u6b27\u62c9\u7b5b</li> </ul> <p>\u8003\u8651\u5230\u6bcf\u4e00\u4e2a\u6570\u53ea\u4f1a\u88ab\u4ed6\u7684 \\(mp\\) \u7b5b\u4e00\u6b21\uff0c\u6240\u4ee5\u76f4\u63a5\u5229\u7528\u6027\u8d284\uff0c5\u9012\u63a8\u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> <pre><code>int phi[si];\nint m = 0, prime[si], vis[si];\nvoid calc_euler_func(int n) {\nm = 0, phi[1] = 1;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(vis[i] == 0) { vis[i] = i, prime[++m] = i, phi[i] = i - 1; }\nfor(int j = 1; j &lt;= m; ++i) {\nif(prime[j] &gt; vis[i] || prime[j] * vis[i] &gt; n) break;\nvis[prime[j] * i] = prime[j];\nif(i % prime[j] == 0)\nphi[prime[j] * i] = phi[i] * prime[j]; else phi[prime[j] * i] = phi[i] * (prime[j] - 1);\n}\n}\n}\n</code></pre>"}, {"location": "algor/math/number-theory/mobius-inversion/", "title": "\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14", "text": ""}, {"location": "algor/math/number-theory/mobius-inversion/#_1", "title": "\u5b9a\u4e49", "text": "<ul> <li>\u6570\u8bba\u51fd\u6570\uff1a\\(\\mathbb{N}^* \\to \\mathbb{C}\\)\u3002</li> <li>\u79ef\u6027\u51fd\u6570\uff1a\\(\\forall \\gcd(a,b) = 1, f(a)f(b) = f(ab)\\) \u7684\u6570\u8bba\u51fd\u6570 \\(f\\)\u3002<ul> <li>\u7531\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u53ef\u4ee5\u5199\u51fa\uff1a\u82e5 \\(f\\) \u4e3a\u79ef\u6027\u51fd\u6570\uff0c\u90a3\u4e48 \\(f(n) = \\prod\\limits_{i = 1}^mf(p_i^{e_i})\\)</li> </ul> </li> <li>\u5b8c\u5168\u79ef\u6027\u51fd\u6570\uff1a\\(\\forall a,b, f(a)f(b) = f(ab)\\) \u7684\u6570\u8bba\u51fd\u6570 \\(f\\)\u3002</li> <li>Dirichlet \u5377\u79ef\uff1a\u4e24\u4e2a\u6570\u8bba\u51fd\u6570 \\(f, g\\) \u7684 Dirichlet \u5377\u79ef \\(h\\) \u6ee1\u8db3\uff1a\\((f * g)(n) = h(n) = \\sum\\limits_{d|n} f(d)g(\\dfrac{n}{d})\\)<ul> <li>\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u7ed3\u5408\u5f8b\uff1a\\(f*g = g*f, f*(g*h) = (f*g)*h\\)\u3002</li> <li>\u6ee1\u8db3\u5bf9\u70b9\u503c\u52a0\u6cd5\u7684\u5206\u914d\u5f8b\uff1a\\(f*(g+h) = f*g + f*h\\)\u3002</li> <li>\u82e5 \\(f,g\\) \u4e3a\u79ef\u6027\u51fd\u6570\uff0c\u90a3\u4e48 \\(h = f*g\\) \u4ecd\u7136\u662f\u4e2a\u79ef\u6027\u51fd\u6570\u3002</li> <li>\u5b58\u5728\u4e58\u6cd5\u5e7a\u5143\u51fd\u6570 \\(\\epsilon(n) = [n = 1]\\)\uff08\u8fd9\u91cc\u7684\u4e2d\u62ec\u53f7\u662f Iverson Bracket\uff09\u6ee1\u8db3 \\(f*\\epsilon = f\\)\u3002</li> <li>\u4f60\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\uff0c\u6709\u4e00\u4e2a\u6570\u8bba\u51fd\u6570\u96c6\u5408 \\(R\\)\uff0c\u5728\u5176\u4e0a\u5b9a\u4e49\u4e24\u4e2a\u4e8c\u5143\u8fd0\u7b97\uff1a\u70b9\u503c\u52a0\u6cd5\u548c Dirichlet \u5377\u79ef\uff0c\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u4ea4\u6362\u73af \\((R;+,*)\\)\uff0c\\(\\epsilon\\) \u5373\u4e3a\u4e58\u6cd5\u5e7a\u5143\u3002</li> <li>\u7c7b\u4f3c\u7684\uff0c\u5982\u679c\u6709 \\(f*g = \\epsilon\\)\uff0c\u90a3\u4e48 \\(g\\) \u662f \\(f\\) \u7684 Dirichlet \u9006\u5143\u3002</li> <li>\u5f88\u591a\u65f6\u5019\u5728\u77e5\u9053 \\(f,h\\) \u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u53cd\u63a8 \\(g\\)\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u7b49\u4f1a\u8981\u8bf4\u7684\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u3002</li> </ul> </li> <li>\u5e38\u89c1\u7684\u5b8c\u5168\u79ef\u6027\u51fd\u6570\uff1a<ul> <li>\u5e7a\u5143\u51fd\u6570 \\(\\epsilon(n) = [n = 1]\\)\u3002</li> <li>\u6052\u7b49\u51fd\u6570 \\(Id_k(n) = n^k\\)\uff0c\u4e00\u822c\u6765\u8bf4\u5c31\u7528 \\(k = 0, k = 1\\)\u3002</li> </ul> </li> <li>\u5e38\u89c1\u7684\u79ef\u6027\u51fd\u6570\uff1a<ul> <li>\u7ea6\u6570\u51fd\u6570 \\(\\sigma_k(n) = \\sum\\limits_{d | n} d^k = \\prod\\limits_i(\\sum\\limits_{j = 0}^{e_i}p_i^{jk})\\)\u3002</li> <li>\\(\\sigma_0\\) \u8868\u793a\u7ea6\u6570\u4e2a\u6570\uff0c\\(\\sigma_1\\) \u8868\u793a\u7ea6\u6570\u548c\uff0c\u540e\u9762\u90a3\u4e2a\u7b49\u53f7\u5c31\u662f\u79ef\u6027\u51fd\u6570\u7684\u6027\u8d28\u7684\u4e00\u4e2a\u53d8\u5f62\uff1f</li> <li>\u6b27\u62c9\u51fd\u6570 \\(\\varphi(n)\\)\uff0c\u8fd9\u4e2a\u5728\u4e4b\u524d\u7684\u535a\u5ba2\u91cc\u63d0\u5230\u8fc7\u3002</li> <li>\u4e00\u4e2a\u7ed3\u8bba\uff1a\\(\\varphi * Id_0 = Id_1\\)\uff0c\u8fd9\u4e2a\u662f\u663e\u7136\u7684\uff0c\u5199\u4e00\u4e0b\u5c31\u662f \\((\\varphi * Id_0)(n) = \\sum\\limits_{d | n} \\varphi(d) Id_0(\\dfrac{n}{d}) = \\sum\\limits_{d | n} \\varphi(d) = n = Id_1(n)\\)\u3002</li> <li>\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\uff08\u91cd\u5934\u620f\uff09\uff1a\\(\\mu(n = \\prod\\limits_{i = 1}^k p_i^{e_i}) = \\begin{cases}(-1)^k &amp;\\forall i, e_i = 1 \\\\ 0 &amp;\\text{otherwise.}\\end{cases}\\)</li> </ul> </li> </ul>"}, {"location": "algor/math/number-theory/mobius-inversion/#_2", "title": "\u7ebf\u6027\u7b5b\u6c42\u79ef\u6027\u51fd\u6570", "text": "<p>\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\uff1a</p> <p>\u8003\u8651\u7ebf\u6027\u7b5b\u7684\u8fc7\u7a0b\u3002</p> <p>\u5982\u679c\u8fdb\u5165\u7b2c\u4e00\u5c42\u5faa\u73af\uff0c\u53d1\u73b0 \\(vis(i) = 0\\) \u5373 \\(\\text{PRIME}(i)\\) \u65f6\uff0c\\(\\mu(i) = -1\\)\u3002</p> <p>\u7136\u540e\u5728\u5229\u7528 \\(pri(j)\\) \u6807\u8bb0 \\(i \\times pri(j)\\) \u65f6\u3002</p> <p>\u5982\u679c \\(pri(j) | i\\)\uff0c\u8bc1\u660e \\(i \\times pri(j)\\) \u5b58\u5728 \\(e_i \\ge 2\\)\uff0c\\(\\mu(i \\times pri(j)) = 0\\)\u3002</p> <p>\u5426\u5219\u5c31\u662f \\(\\omega(i \\times pri(j)) = \\omega(i) + 1\\)\uff0c\u53d6\u53cd\u5373\u53ef\u3002</p> Code <pre><code>int n, m;\nint mu[si];\nint pri[si], vis[si];\nvoid sieve(int n) {\nmu[1] = 1, m = 0;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) pri[++m] = i, vis[i] = i, mu[i] = -1;\nfor(int j = 1; j &lt;= m; ++j) {\nif(pri[j] &gt; vis[i] || i * pri[j] &gt; n) break;\nvis[i * pri[j]] = pri[j];\nif(i % pri[j] == 0) { mu[i * pri[j]] = 0; break; }\nmu[i * pri[j]] = -mu[i];\n}\n}\n}\n</code></pre> <p>\u901a\u7528\uff1a</p> <p>\u5176\u5b9e\u5c31\u662f\u5728\u6807\u8bb0\u7684\u65f6\u5019\uff0c\u8003\u8651\u4e00\u4e0b \\(i\\) \u548c \\(pri(j)\\) \u7684\u5173\u7cfb\uff0c\u5e76\u6839\u636e\u79ef\u6027\u51fd\u6570\u7684\u6027\u8d28\u9012\u63a8\u5373\u53ef\u3002</p> <p>\u6bd4\u5982\u7ea6\u6570\u4e2a\u6570 \\(\\sigma_0\\)\uff1a</p> <p>\u5982\u679c \\(i \\not\\equiv 0 \\pmod pri(j)\\)\uff0c\u90a3\u4e48\u6309\u7167\u79ef\u6027\u51fd\u6570\u7684\u6027\u8d28\u9012\u63a8\u5373\u53ef\u3002</p> <p>\u5426\u5219\uff0c\u5c55\u5f00\u5f0f\u5b50\uff0c\u9700\u8981\u8bb0\u5f55\u6700\u5c0f\u8d28\u56e0\u5b50\u7684\u6307\u6570 \\(e_i\\)\u3002</p> Code <pre><code>int n, m;\nint f[si], d[si];\nint pri[si], vis[si];\nvoid sieve(int n) {\nf[1] = 0, d[1] = 1, m = 0;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) pri[++m] = i, vis[i] = i, f[i] = 1, d[i] = 2;\nfor(int j = 1; j &lt;= m; ++j) {\nif(pri[j] &gt; vis[i] || pri[j] * i &gt; n) break;\nvis[i * pri[j]] = pri[j];\nif(i % pri[j] == 0) { f[i * pri[j]] = f[i] + 1, d[i * pri[j]] = d[i] / (f[i] + 1) * (f[i * pri[j]] + 1); break; }\nf[i * pri[j]] = 1, d[i * pri[j]] = d[i] * d[pri[j]];\n}\n}\n}\n</code></pre> <p>\u53e6\u5916\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\\(\\sum\\limits_{i = 1}^n\\sigma_0(i) = \\sum\\limits_{i = 1}^n\\lfloor\\dfrac n i\\rfloor\\)\u3002</p> <p>\u8fd9\u4e2a\u5728\u675c\u6559\u7b5b\u6216\u8005\u662f\u540e\u9762\u83ab\u53cd\u7684\u65f6\u5019\u4e5f\u8bb8\u4f1a\u6709\u7528\u3002</p> <p>\u6b27\u62c9\u51fd\u6570\uff1alink</p> <p>\u8fd9\u4e2a\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u5982\u679c \\(i \\equiv 0 \\pmod pri(j)\\) \u7684\u8bdd\uff0c\u5c55\u5f00\u5f0f\u5b50\u5c1d\u8bd5\u627e\u5230\u5173\u7cfb\u5373\u53ef\u3002</p>"}, {"location": "algor/math/number-theory/mobius-inversion/#_3", "title": "\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14", "text": ""}, {"location": "algor/math/number-theory/mobius-inversion/#_4", "title": "\u91cd\u8981\u6027\u8d28", "text": "<p>\\(\\mu * Id_0 = \\epsilon\\)\uff0c\u5373 \\(Id_0\\) \u7684 Dirichlet \u9006\u5143\u662f \\(\\mu\\)</p> <p>\u8bc1\u660e\uff1a</p> <p>\u82e5 \\(n = 1\\)\uff0c\\((\\mu * Id_0)(n) = 1\\)\uff0c\u8fd9\u662f\u663e\u7136\u7684\u3002</p> <p>\u82e5 \\(n \\not= 1\\)\uff0c\u8bb0 \\(k = \\omega(n) \\iff \\exists p\\ s.t.\\ \\text{PRIME}(p),p^k | n, p^{k + 1}\\not|\\; n\\)\uff0c\u5219\u6709\uff1a</p> <p>\u56e0\u4e3a \\(\\mu, Id_0\\) \u4e3a\u79ef\u6027\u51fd\u6570\uff0c\u6240\u4ee5 \\((\\mu * Id_0)(n) = (\\mu * Id_0)(p^k) \\cdot (\\mu * Id_0)(\\dfrac{n}{p^k}) = (\\sum\\limits_{d | p^k} \\mu(d)) \\cdot (\\sum\\limits_{d | \\frac{n}{p^k}} \\mu(d)) = 0\\)\u3002</p> <p>\uff08\u524d\u8005\u7531\u4e8e \\(d | p^k\\) \u7684 \\(d\\) \u90fd\u662f \\(p^t\\) \u5f62\u5f0f\u7684\uff0c\u800c \\(p\\) \u4e3a\u7d20\u6570\uff0c\u6240\u4ee5\u6240\u6709\u8fd9\u6837\u7684 \\(\\mu(d)\\) \u90fd\u7b49\u4e8e \\(0\\)\uff0c\u6c42\u548c\u81ea\u7136\u4e5f\u662f \\(0\\)\uff09.</p> <p>Q.E.D.</p>"}, {"location": "algor/math/number-theory/mobius-inversion/#_5", "title": "\u70ab\u9177\u53cd\u6f14\u9b54\u672f", "text": "<p>\u521a\u624d\u6211\u4eec\u63d0\u5230\u4e86\uff0c\\(Id_0\\) \u7684 Dirichlet \u9006\u5143\u662f \\(\\mu\\)\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u60f3\u6cd5\uff1a</p> <p>\u5982\u679c\u6709\u4e00\u4e2a\u51fd\u6570 \\(g = Id_0 * f\\)\uff0c\u5373 \\(g(n) = \\sum\\limits_{d | n} f(d)\\)\u3002</p> <p>\u5982\u679c\u77e5\u9053 \\(f\\) \u6c42 \\(g\\) \u662f\u5bb9\u6613\u7684\uff0c\u4f46\u662f\u5982\u679c\u77e5\u9053 \\(g\\) \u8981\u6c42 \\(f\\) \u5462\uff1f</p> <p>\u6362\u53e5\u8bdd\u8bf4\u6211\u4eec\u8981\u8ba9 \\(f\\) \u72ec\u7acb\u51fa\u6765\u3002</p> <p>\u4e0d\u59a8\u8003\u8651\u4e24\u8fb9\u540c\u65f6\u5377\u4e0a\u4e00\u4e2a \\(\\mu\\)\uff0c\u6784\u9020 \\(\\epsilon\\) \u548c \\(f\\) \u7684 Dirichlet \u5377\u79ef\u5f62\u5f0f\uff1a</p> \\[ g * \\mu = (Id_0 * \\mu) * f \\iff f = g * \\mu \\] <p>\u8fd9\u4e2a\u5f0f\u5b50\u88ab\u53eb\u505a\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u516c\u5f0f\uff0c\u975e\u5e38\u597d\u7528\uff01</p>"}, {"location": "algor/math/number-theory/mobius-inversion/#_6", "title": "\u4f8b\u9898", "text": "<p>\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u7ec3\u624b\u9898\uff1a</p> <p>Ex.1</p> <p>\u6c42 \\(\\sum\\limits_{i = 1}^n \\sum\\limits_{j = 1}^m [\\gcd(i, j) = 1](m &lt; n)\\)\u3002</p> <p>\\(n, m \\le 10^7\\)\u3002</p> <p>\u6ce8\u610f\u5230\u8fd9\u4e2a Iverson Bracket \u795e\u4f3c \\(\\epsilon(n)\\) \u7684\u5f62\u5f0f\u3002</p> <p>\u5c31\u662f\uff1a\\(\\sum\\limits_{i = 1}^n \\sum\\limits_{j = 1}^m \\epsilon(\\gcd(i, j))\\)\u3002</p> <p>\u56e0\u4e3a \\(Id_0 * \\mu = \\epsilon\\)\uff0c\u4e0d\u96be\u60f3\u5230\u4f7f\u7528 \\(\\mu\\) \u6765\u66ff\u6362\uff1a</p> <p>\\(\\epsilon(\\gcd(i, j)) = \\sum\\limits_{d | \\gcd(i, j)} \\mu(d)Id_0(\\dfrac{\\gcd(i, j)}{d}) = \\sum\\limits_{d | \\gcd(i, j)} \\mu(d)\\)\u3002</p> <p>\u539f\u5f0f\uff1a\\(\\sum\\limits_{i = 1}^n \\sum\\limits_{j = 1}^m\\sum\\limits_{d | \\gcd(i, j)} \\mu(d)\\)</p> <p>\u8fd9\u79cd\u4e00\u5806\u6c42\u548c\u53f7\u7684\u5f0f\u5b50\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u6280\u5de7\uff0c\u5c1d\u8bd5\u89c2\u5bdf\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u89c2\u5bdf\u662f\u5426\u80fd\u4ea4\u6362 \\(\\sum\\)\u3002</p> <p>\u53d1\u73b0 \\(d | i \\land d | j\\)\uff0c\u5e76\u4e14 \\(d \\in [1,m]\\)\uff08\\(\\gcd(i, j)\\) \u600e\u4e48\u53ef\u80fd\u6bd4 \\(\\min(i, j)\\) \u5927\uff1f\uff09\uff08\u4ee4 \\(i = j\\) \u5373\u53ef\u6784\u9020\u51fa\u6240\u6709 \\([1, m]\\) \u4e2d\u7684 \\(d\\)\uff09\uff0c\u6240\u4ee5\u539f\u5f0f\uff1a</p> \\[ \\sum\\limits_{d = 1}^m\\mu(d)\\sum\\limits_{d | i}\\sum\\limits_{d | j} 1 \\] <p>\u540e\u9762\u76f4\u63a5\u5199\u6210\u6574\u9664\u7684\u5f62\u5f0f\uff1a</p> \\[ \\sum\\limits_{d = 1}^m\\mu(d)\\lfloor\\dfrac n d\\rfloor\\lfloor\\dfrac m d\\rfloor \\] <p>\u8fd9\u90e8\u5206\u5c31\u662f\u4e2a\u6807\u51c6\u7684\u4e8c\u7ef4\u6574\u9664\u5206\u5757\uff0c\u4f46\u662f\u8fd8\u9700\u8981\u6c42 \\(\\sum \\mu\\)\uff0c\u8fd9\u4e2a\u9700\u8981\u7b5b\u4e00\u4e0b\u3002</p> <p>\u5982\u679c \\(n, m\\) \u518d\u5927\u4e00\u70b9\u5c31\u8981\u675c\u6559\u7b5b\u4e86\u3002</p> <p>Tips: \u53e6\u5916\u4e00\u79cd\u7406\u89e3\u65b9\u5f0f\u662f\uff0c\u8003\u8651\u679a\u4e3e \\(d\\)\uff0c\u7136\u540e\u52a0\u4e0a \\(d = \\gcd(i, j)\\) \u7684\u6761\u4ef6\uff0c\u628a \\(d\\) \u6254\u5230\u6700\u5916\u5c42\uff0c\u7136\u540e\u628a\u6761\u4ef6\u4e0b\u653e\u5230\u5185\u5c42\u5faa\u73af\u91cc\u3002</p> <p>Ex.2</p> <p>\u5982\u679c\u662f \\([\\gcd(i, j) = k]\\) \u5462\uff1f</p> <p>\u591a\u6b21\u8be2\u95ee\uff0c\\(5e4\\)\u3002</p> <p>Source: Luogu3455 - Zap</p> <p>\u8fd9\u91cc\u8bbe \\(n \\le m\\)\uff0c\u6211\u4eec\u5c1d\u8bd5\u8f6c\u5316\u4e3a Ex.1 \u7684\u5f62\u5f0f\uff1a</p> \\[ \\begin{aligned} &amp;=\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m[\\gcd(i, j) = k] \\end{aligned} \\] <p>\u4e0d\u59a8\u4ece \\(i, j\\) \u4e2d\u6263\u6389 \\(k\\) \u8fd9\u4e2a\u56e0\u5b50\uff0c\u5c31\u662f\u628a \\(i, j\\) \u770b\u4f5c \\(p\\cdot d, q \\cdot d\\)\uff0c\u7136\u540e\u6211\u4eec\u679a\u4e3e \\(p, q\\) \u5373\u53ef\uff0c\u6761\u4ef6\u53d8\u6210\u4e86 \\(p, q\\) \u4e92\u8d28\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1 \\(d\\) \u662f \\(\\gcd\\)\u3002</p> \\[ \\begin{aligned} &amp;=\\sum\\limits_{i = 1}^{\\lfloor\\frac n k\\rfloor}\\sum\\limits_{j = 1}^{\\lfloor\\frac m k\\rfloor}[\\gcd(i, j) = 1] \\end{aligned} \\] <p>\u7136\u540e\u5c31\u6ca1\u4e86\uff0c\u6ce8\u610f\u5e94\u7528\u8fd9\u4e2a\u6761\u4ef6\u7684\u65f6\u5019\u4e0d\u8981\u53ea\u662f\u50bb\u50bb\u7684\u9664\u8fc7\u53bb\uff0c\u60f3\u6e05\u695a\u5b83\u7684\u672c\u8d28\u662f\u4ec0\u4e48\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e4 + 10;\n\nint n, m;\nint mu[si], s[si];\nint pri[si], vis[si];\nvoid sieve(int n) {\nmu[1] = 1, m = 0;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) pri[++m] = i, vis[i] = i, mu[i] = -1;\nfor(int j = 1; j &lt;= m; ++j) {\nif(pri[j] &gt; vis[i] || i * pri[j] &gt; n) break;\nvis[i * pri[j]] = pri[j];\nif(i % pri[j] == 0) { mu[i * pri[j]] = 0; break; }\nmu[i * pri[j]] = -mu[i];\n}\n}\ns[1] = mu[1];\nfor(int i = 2; i &lt;= n; ++i)\ns[i] = s[i - 1] + mu[i];\n}\nint sum(int l, int r) { return s[r] - s[l - 1]; } int F(int n, int m) {\nif(n &gt; m) swap(n, m);\nint ret = 0;\nint l = 1, r = 0;\nfor(; l &lt;= n &amp;&amp; n / l &amp;&amp; m / l; ) {\nr = min((n / (n / l)), (m / (m / l))), r = min(r, n);\nret += sum(l, r) * (n / l) * (m / l), l = r + 1;\n}\nreturn ret;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nsieve(si - 10);\nwhile(T--) {\nint a, b, k;\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; k;\ncout &lt;&lt; F(a / k, b / k) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre> <p>\u9898\u5916\u8bdd\uff0c\u7406\u89e3\u4e86\u8fd9\u4e9b\u6211\u4ee5\u524d\u770b\u90fd\u4e0d\u6562\u770b\u7684\u5f0f\u5b50\u4e4b\u540e\u6253\u4ee3\u7801\u7279\u522b\u8f7b\u5feb\uff0c\u4e0d\u77e5\u9053\u4e3a\u5565\u3002</p> <p>Ex.3</p> <p>\u6c42 \\(\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m \\gcd(i, j)\\)\u3002</p> <p>\\(n \\le m \\le 10^7\\)\u3002</p> <p>\u601d\u8003\u4e00\u4e0b\u8fd9\u4e2a \\(\\gcd(i, j)\\) \u600e\u4e48\u62c6\u3002</p> <p>\u5982\u679c\u662f\u5206\u7c7b\u5c1d\u8bd5\u679a\u4e3e\u770b\u8d77\u6765\u592a shaber \u4e86\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u9ad8\u7ea7\u70b9\u7684\u505a\u6cd5\u3002</p> <p>\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u8fc7\u6052\u7b49\u51fd\u6570 \\(Id_1(n) = n\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u7528\u4ed6\u66ff\u6362\u4efb\u610f\u7684\u53d8\u91cf\u3002</p> <p>\u800c\u6ce8\u610f\u5230 \\(Id_1 = Id_0 * \\varphi\\)\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a</p> <p>\u539f\u5f0f\uff1a</p> \\[ \\begin{aligned} &amp;=\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m Id_1(\\gcd(i, j)) \\\\ &amp;=\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m \\sum\\limits_{d | \\gcd(i, j)} Id_0(d)\\varphi(d) \\\\ &amp;= \\sum\\limits_{d = 1}^n \\varphi(d)\\sum\\limits_{d | i}\\sum\\limits_{d | j} 1\\\\ &amp;= \\sum\\limits_{d = 1}^n \\varphi(d)\\lfloor\\dfrac n d\\rfloor\\lfloor\\dfrac m d\\rfloor \\end{aligned} \\] <p>\u53c8\u662f\u4e2a\u6570\u8bba\u5206\u5757\u677f\u5b50\u4e86\uff0c\u7b5b\u4e00\u4e0b\u6b27\u62c9\u51fd\u6570\u5373\u53ef\u3002</p> <p>Ex.4</p> <p>\\(\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m \\operatorname{lcm}(i, j)\\)\uff1f</p> <p>\\(n \\le m \\le 10^7\\)\u3002</p> <p>Source: Luogu1829 - Crash\u7684\u6570\u5b57\u8868\u683c</p> <p>\u597d\u70ab\u9177\uff0c\u4e0a\u5f3a\u5ea6\u4e86\u3002</p> \\[ \\begin{aligned} &amp;=\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m \\operatorname{lcm}(i, j) \\\\ &amp;=\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m \\dfrac{ij}{\\gcd(i, j)} \\\\ \\end{aligned} \\] <p>\u76f4\u63a5\u62c6 \\(\\gcd\\) \u592a\u9c81\u83bd\u4e86\uff0c\u8fd9\u91cc\u662f\u5728\u5206\u6bcd\uff0c\u62c6\u4e86\u4e5f\u6ca1\u7528\uff0c\u5148\u5c1d\u8bd5\u628a \\(\\gcd(i, j)\\) \u62ff\u51fa\u6765\u3002</p> <p>\u8003\u8651\u7ecf\u5178\u5957\u8def\uff0c\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684 \\(d\\)\uff0c\u66ff\u6362 \\(\\gcd(i, j)\\)\uff0c\u7136\u540e\u7528 Iverson Bracket \u9650\u5236\u8f6c\u5316\uff08\u5c31\u662f Ex.1 \u91cc Tips \u8bf4\u7684\u7406\u89e3\u65b9\u5f0f\uff09\u3002</p> \\[ \\begin{aligned} &amp;=\\sum\\limits_{d = 1}^n\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m \\dfrac{ij}{d}\\cdot[\\gcd(i, j) = d] \\\\ &amp;=\\sum\\limits_{d = 1}^n\\sum\\limits_{i = 1}^{\\lfloor\\frac n d\\rfloor}\\sum\\limits_{j = 1}^{\\lfloor\\frac m d\\rfloor}\\dfrac{ij}{d} \\cdot d^2 \\cdot [\\gcd(i, j) = 1] \\\\ &amp;=\\sum\\limits_{d = 1}^nd\\sum\\limits_{i = 1}^{\\lfloor\\frac n d\\rfloor}\\sum\\limits_{j = 1}^{\\lfloor\\frac m d\\rfloor}ij\\cdot[\\gcd(i, j) = 1] \\end{aligned} \\] <p>\u8fd9\u91cc\u8981\u4e58\u4e0a \\(d^2\\) \u662f\u56e0\u4e3a\u8fd9\u91cc\u6709 \\(ij\\) \u4e58\u79ef\u9879\u7684\u8d21\u732e\uff0c\u6211\u4eec\u7f29\u77ed \\(i, j\\) \u7684\u679a\u4e3e\u8303\u56f4\u4e4b\u540e\u4e5f\u4f1a\u5c11\u7b97\u3002</p> <p>\u7136\u540e\u6b64\u65f6 \\(d\\) \u5176\u5b9e\u5c31\u548c \\(\\gcd\\) \u5206\u79bb\u4e86\uff0c\u5b83\u73b0\u5728\u53ea\u662f\u4e00\u4e2a\u7cfb\u6570\u4e86\u3002</p> <p>\u6211\u4eec\u8003\u8651 \\(\\sum\\limits_{i = 1}^{\\lfloor\\frac n d\\rfloor}\\sum\\limits_{j = 1}^{\\lfloor\\frac m d\\rfloor}ij\\cdot[\\gcd(i, j) = 1]\\) \u8fd9\u4e00\u5768\u600e\u4e48\u7b97\uff08\u4e3a\u4e86\u5c11\u5199\u4e00\u4e9b\uff0c\u5e76\u4e14\u4f1a\u6e05\u695a\u5f88\u591a\uff09\u3002</p> <p>\u53cd\u6f14\uff01\u72e0\u72e0\u7684\u53cd\u6f14\uff01\u8bb0\u8fd9\u4e00\u5757\u4e3a \\(F(\\lfloor\\dfrac n d\\rfloor,\\lfloor\\dfrac m d\\rfloor)\\)\u3002</p> \\[ \\begin{aligned} F(n, m) &amp;= \\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^mij\\cdot[\\gcd(i,j) = 1]\\\\ &amp;= \\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^mij\\cdot\\sum\\limits_{d | \\gcd(i, j)}\\mu(d) \\\\ &amp;= \\sum\\limits_{d = 1}^n\\mu(d)\\cdot\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^mij,(d | i \\land d | j) \\\\ &amp;= \\sum\\limits_{d = 1}^n\\mu(d)\\cdot\\sum\\limits_{i = 1}^ni\\sum\\limits_{j = 1}^mj,(d | i \\land d | j) \\\\ &amp;= \\sum\\limits_{d = 1}^n\\mu(d)\\cdot\\sum\\limits_{i = 1}^{\\lfloor\\frac n d\\rfloor} id\\sum\\limits_{j = 1}^{\\lfloor\\frac m d\\rfloor}jd\\\\ &amp;= \\sum\\limits_{d = 1}^n\\mu(d)\\cdot d^2 \\sum\\limits_{i = 1}^{\\lfloor\\frac n d\\rfloor}i\\sum\\limits_{j = 1}^{\\lfloor\\frac m d\\rfloor}j \\end{aligned} \\] <p>\u540e\u9762\u90a3\u4e00\u5768\u662f\u7b80\u5355\u6c42\u548c\uff0c\u524d\u9762 \\(\\mu(d) d^2\\) \u53ef\u4ee5\u7b5b\u51fa\u6765\uff0c\u7136\u540e \\(F(n, m)\\) \u5c31\u53ef\u4ee5\u6574\u9664\u5206\u5757\u4e86\uff08\u56e0\u4e3a \\(i,j\\) \u4e0a\u754c\u662f\u6574\u9664\uff0c\u6240\u4ee5\u8fd9\u4e00\u6bb5\u5728 \\(d\\) \u5c5e\u4e8e\u67d0\u4e2a\u5757\u7684\u65f6\u5019\u5168\u662f\u76f8\u7b49\u7684\uff0c\u5c31\u662f\u6574\u9664\u5206\u5757\u7684\u5f62\u5f0f\uff09\u3002</p> <p>\u5e26\u56de\u539f\u5f0f\uff1a</p> \\[ \\sum\\limits_{d = 1}^nd\\cdot F(\\lfloor\\dfrac n d\\rfloor,\\lfloor\\dfrac m d\\rfloor) \\] <p>\u8fd9\u90e8\u5206\u4e5f\u53ef\u4ee5\u6574\u9664\u5206\u5757\uff08\u4e0b\u6807\u91cc\u6709\u6574\u9664\uff0c\u503c\u81ea\u7136\u4e5f\u4f1a\u5206\u5757\uff09\u3002</p> <p>\u4e24\u6b21\u505a\u5b8c\uff0c\u590d\u6742\u5ea6 \\(O(n + m)\\)\u3002</p> Code <p>\u6ca1\u7ef7\u4f4f\uff0csieve \u7684\u65f6\u5019 cnt \u7528\u7684\u662f m\uff0c\u5168\u5c40\uff0c\u7136\u540e main \u91cc sieve \u5b8c\u5c31\u5bc4\u4e86\u3002</p> <p>\u602a\u4e0d\u5f97\u6211\u6539 sieve \u7684 limit \u7684\u65f6\u5019\u7ed3\u679c\u4f1a\u53d8\u3002</p> <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e7 + 10;\nconst int mod = 20101009;\n\nint Qpow(int a, int b) {\nint ret = 1 % mod;\nfor(; b; b &gt;&gt;= 1) {\nif(b &amp; 1) ret = ret * a % mod;\na = a * a % mod;\n}\nreturn ret;\n}\nint inv2;\n\nint n, m, t;\nint mu[si], s[si];\nint pri[si], vis[si];\nvoid sieve(int n) {\nmu[1] = 1, t = 0;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) pri[++t] = i, vis[i] = i, mu[i] = -1;\nfor(int j = 1; j &lt;= t; ++j) {\nif(pri[j] &gt; vis[i] || pri[j] * i &gt; n) break;\nvis[i * pri[j]] = pri[j];\nif(i % pri[j] == 0) { mu[i * pri[j]] = 0; break; }\nmu[i * pri[j]] = -mu[i];\n}\n}\ns[1] = mu[1], s[1] = (s[1] + mod) % mod;\nfor(int i = 2; i &lt;= n; ++i)\ns[i] = (s[i - 1] % mod + 1ll * i % mod * i % mod * (mu[i] + mod) % mod) % mod;      }\nint sum(int n) { return (n % mod) * (n + 1) % mod * inv2 % mod; }\nint sum2(int n, int m) { return sum(n) % mod * sum(m) % mod; }\nint F(int n, int m) {\nint ret = 0;\nint l = 1, r = 0;\nfor(; l &lt;= n &amp;&amp; n / l &amp;&amp; m / l; ) {\nr = min((n / (n / l)), (m / (m / l))), r = min(r, n);\nret = (ret + (s[r] - s[l - 1] + mod) % mod * sum2(n / l, m / l) % mod) % mod;\nl = r + 1;\n}\nreturn ret;\n}\nint G(int n, int m) {\nint ret = 0;\nint l = 1, r = 0;\nfor(; l &lt;= n &amp;&amp; n / l &amp;&amp; m / l; ) {\nr = min((n / (n / l)), (m / (m / l))), r = min(r, n);\nret = (ret + (r - l + 1) % mod * (r + l) % mod * inv2 % mod * F(n / l, m / l) % mod) % mod;\nl = r + 1;\n}\nreturn ret;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nif(n &gt; m) swap(n, m);\nsieve(n), inv2 = Qpow(2, mod - 2);\ncout &lt;&lt; G(n, m) % mod &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <p>Ex.5</p> <p>\u6c42 \\(\\left(\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^n ij\\gcd(i, j)\\right)\\bmod p\\)</p> <p>\\(\\text{PRIME(p)}, p \\in [5 \\times 10^8, 1.1\\times 10^9], n \\le 10^{10}\\)\u3002</p> <p>Source: Luogu3768 - \u7b80\u5355\u7684\u6570\u5b66\u9898</p> \\[ \\begin{aligned} &amp;=\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^n i \\cdot j \\cdot \\gcd(i, j) \\\\ &amp;= \\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^n i \\cdot j \\cdot Id_1(\\gcd(i, j)) \\\\ &amp;= \\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^n i \\cdot j \\cdot \\sum\\limits_{d | \\gcd(i, j)} \\varphi(d) \\\\ &amp;= \\sum\\limits_{d = 1}^n\\varphi(d)\\sum\\limits_{d | i}^{i \\in [1, n]}\\sum\\limits_{d | j}^{j \\in [1, n]}i\\cdot j \\\\ &amp;= \\sum\\limits_{d = 1}^n\\varphi(d)\\sum\\limits_{i = 1}^{\\lfloor\\frac n d\\rfloor}\\sum\\limits_{j = 1}^{\\lfloor\\frac n d\\rfloor} i\\cdot j \\cdot d^2 \\\\ &amp;= \\sum\\limits_{d = 1}^n\\varphi(d)\\cdot d^2 \\sum\\limits_{i = 1}^{\\lfloor\\frac n d\\rfloor}\\sum\\limits_{j = 1}^{\\lfloor\\frac n d\\rfloor}i\\cdot j \\end{aligned} \\] <p>\u8bb0 \\(F(n) = \\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^ni\\cdot j \\iff F(n) = \\left(\\dfrac{n (n + 1)}{2}\\right)^2\\)</p> <p>\u539f\u5f0f\uff1a</p> \\[ \\begin{aligned} &amp;= \\sum\\limits_{d = 1}^n \\varphi(d) \\cdot d^2 \\cdot F(\\lfloor\\dfrac{n}{d}\\rfloor) \\end{aligned} \\] <p>\u4e00\u773c\u4e01\u771f\uff0c\u9274\u5b9a\u4e3a\uff0c\u7eaf\u7eaf\u7684\u6574\u9664\u5206\u5757\u3002</p> <p>\u95ee\u9898\u5728\u4e8e\u600e\u4e48\u5728 \\(n = 10^{10}\\) \u7684\u65f6\u5019\u6c42 \\(\\varphi(d)\\cdot d^2\\) \u7684\u524d\u7f00\u548c\u3002</p> <p>\u8fd9\u90e8\u5206\u9700\u8981\u675c\u6559\u7b5b\uff0c\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\u56e0\u4e3a\u8981\u6c42\u524d\u7f00\u548c\u7684 \\(f = \\varphi(d) \\cdot i^2\\)\uff0c\u6211\u4eec\u6784\u9020 \\(g = Id_2\\) \u5377\u4e0a\u53bb\u5c31\u884c\u4e86\u3002</p> <p>\u8fd9\u79cd\u540e\u9762\u8ddf\u4e00\u4e2a\u53d8\u91cf\u7684\u51e0\u6b21\u65b9\uff0c\u4e00\u822c\u90fd\u662f\u8003\u8651 Dirichlet \u5377\u79ef\u7684\u5f62\u5f0f\u6784\u9020 \\(Id_k\\) \u5377\u4e0a\u53bb\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;bitset&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e7 + 10;\n\nint n, m, t, mod, inv6, inv4;\nint Qpow(int a, int b) {\nint ret = 1 % mod;\nfor(; b; b &gt;&gt;= 1) {\nif(b &amp; 1) ret = ret * a % mod;\na = a * a % mod;\n}\nreturn ret % mod;\n}\nint phi[si], sphi[si];\nint pri[si], vis[si];\nvoid sieve(int n) {\nt = 0, phi[1] = 1;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) pri[++t] = i, vis[i] = i, phi[i] = i - 1;\nfor(int j = 1; j &lt;= t; ++j) {\nif(pri[j] &gt; vis[i] || i * pri[j] &gt; n) break;\nvis[i * pri[j]] = pri[j];\nif(i % pri[j] == 0) { phi[i * pri[j]] = phi[i] * pri[j]; break; }\nphi[i * pri[j]] = phi[i] * (pri[j] - 1);\n}\nphi[i] = 1ll * i % mod * i % mod * phi[i] % mod;\n(phi[i] += phi[i - 1] % mod) %= mod;\n}\n}\nstd::bitset&lt;si&gt; vi;\nint id(int x) { return n / x; }\nint sum2(int n) { return n % mod * (n + 1) % mod * (2 * n % mod + 1) % mod * inv6 % mod; }\nint sum3(int n) { return (n % mod * (n + 1) % mod) % mod * (n % mod * (n + 1) % mod) % mod * inv4 % mod; }\nint Phi(int n) {\nif(n &lt;= m) return phi[n] % mod;\nif(vi[id(n)]) return sphi[id(n)] % mod;\nint ret = sum3(n) % mod;\nint l = 2, r = 0;\nfor(; l &lt;= n; ) {\nr = min(n, (n / (n / l)));\nret = (ret - ((sum2(r) - sum2(l - 1) + mod) % mod * Phi(n / l) % mod) + mod) % mod;\nl = r + 1;\n}\nvi[id(n)] = true;\nreturn sphi[id(n)] = ret % mod;\n}\nint solve(int n) {\nint ret = 0;\nint l = 1, r = 0;\nfor(; l &lt;= n; ) {\nr = min(n, (n / (n / l)));\n(ret += (Phi(r) - Phi(l - 1) + mod) % mod * sum3(n / l) % mod) %= mod; l = r + 1;\n}\nreturn ret;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; mod &gt;&gt; n;\nsieve(m = si - 10); // 1e10^{2/3} ~ 1e7\ninv4 = Qpow(4, mod - 2);\ninv6 = Qpow(6, mod - 2);\ncout &lt;&lt; solve(n) &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/math/number-theory/mobius-inversion/#_7", "title": "\u4e60\u9898", "text": "<p>Luogu2522 - Problem b</p> <p>Zap \u90a3\u9898\u7684\u5347\u7ea7\u7248\uff0c\u73b0\u5728\u662f \\(i \\in[a,b], j \\in[c,d]\\)\u3002</p> <p>\u5f88\u7b80\u5355\u554a\uff0c\u8003\u8651\u4e00\u4e2a\u5e7f\u4e49\u7684\u4e8c\u7ef4\u524d\u7f00\u548c\u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n// #define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e4 + 10;\n\nint n, m;\nint mu[si], s[si];\nint pri[si], vis[si];\nvoid sieve(int n) {\nmu[1] = 1, m = 0;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) pri[++m] = i, vis[i] = i, mu[i] = -1;\nfor(int j = 1; j &lt;= m; ++j) {\nif(pri[j] &gt; vis[i] || i * pri[j] &gt; n) break;\nvis[i * pri[j]] = pri[j];\nif(i % pri[j] == 0) { mu[i * pri[j]] = 0; break; }\nmu[i * pri[j]] = -mu[i];\n}\n}\ns[1] = mu[1];\nfor(int i = 2; i &lt;= n; ++i)\ns[i] = s[i - 1] + mu[i];\n}\nint sum(int l, int r) { return s[r] - s[l - 1]; } int F(int n, int m, int k) {\nif(n &gt; m) swap(n, m);\nint ret = 0;\nint l = 1, r = 0;\nfor(; l &lt;= n / k; ) {\nr = min((n / (n / l)), (m / (m / l))), r = min(r, n / k);\nret += sum(l, r) * (n / (l * k)) * (m / (l * k));\nl = r + 1;\n}\nreturn ret;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nsieve(si - 10);\nwhile(T--) {\nint a, b, c, d, k;\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d &gt;&gt; k;\ncout &lt;&lt; F(b, d, k) - F(a - 1, d, k) - F(b, c - 1, k) + F(a - 1, c - 1, k) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre> <p>HDU1695 - GCD</p> <p>\u8fd8\u662f Zap \u7684\u5347\u7ea7\u7248\uff0c\u4f46\u662f\u73b0\u5728 \\((1, 2),(2, 1)\\) \u7b97\u6210\u4e00\u5bf9\u3002</p> <p>\u5e76\u4e14 \\(n, m\\) \u4e0d\u4e00\u6837\u3002</p> <p>\u6ce8\u610f\u5230 \\(n, m\\) \u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u7684\u9664\u4ee5\u4e8c\u53bb\u91cd\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u522b\u7684\u65b9\u5f0f\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u79cd\u91cd\u590d\u8ba1\u6570\uff0c\u6700\u7b80\u5355\u7684\u5904\u7406\u65b9\u6cd5\u5c31\u662f\u94a6\u5b9a\u5927\u5c0f\uff0c\u56e0\u4e3a \\(= k\\) \u548c \\(= 1\\) \u5c31\u662f\u81ea\u53d8\u91cf\u9664\u4e00\u4e0b\u6240\u4ee5\u6211\u76f4\u63a5\u8003\u8651 \\(= 1\\) \u4e86\u3002</p> <p>\u4e0d\u59a8\u8bbe \\(m &lt; n\\)\uff0c\u7b54\u6848\u4e3a\uff1a</p> \\[ \\begin{aligned} F(n,m)&amp;=\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m[\\gcd(i, j) = 1]\\cdot [j \\le i] \\\\ &amp;=\\sum\\limits_{d = 1}^n\\mu(d) \\sum\\limits_{i = 1}^{\\lfloor\\frac n d\\rfloor}\\sum\\limits_{j = 1}^{\\min(i, \\lfloor\\frac m d\\rfloor)}1 \\\\ &amp;=\\sum\\limits_{d = 1}^n\\mu(d)(\\sum\\limits_{i = 1}^{\\lfloor\\frac m d\\rfloor}\\sum\\limits_{j = 1}^{i}1+\\sum\\limits_{i = \\lfloor\\frac m d\\rfloor + 1}^{\\lfloor\\frac n d\\rfloor}\\sum\\limits_{j = 1}^{\\lfloor\\frac n d\\rfloor}1)\\\\ &amp;=\\sum\\limits_{d = 1}^n\\mu(d)(\\sum\\limits_{i = 1}^{\\lfloor\\frac m d\\rfloor}i + \\lfloor\\dfrac m d\\rfloor(\\lfloor\\dfrac n d\\rfloor - \\lfloor\\dfrac m d\\rfloor)) \\end{aligned} \\] <p>\u7b54\u6848\u662f \\(F(\\lfloor\\dfrac{n}{k}\\rfloor,\\lfloor\\dfrac{m}{k}\\rfloor)\\)\u3002</p> Code <p>\u8bb0\u5f97\u63a8\u5f0f\u5b50\u7684\u65f6\u5019\u4e0d\u8981\u83ab\u540d\u5176\u5999\u52a0 \\(\\sum\\) \u548c\u53d8\u91cf\uff01\u4e00\u6b65\u4e00\u6b65\u6765\u4e0d\u8981\u8df3\uff01</p> <p>\u5982\u679c\u6574\u9664\u5206\u5757\u7684\u51fd\u6570\u6709\u4e24\u4e2a\u5143\u8bb0\u5f97 \\(r\\) \u7684\u53d6\u503c\uff0ccnmd.</p> <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cctype&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int __int128_t\n\nusing namespace std;\nusing i64 = long long;\n\ntemplate &lt;typename __Tp&gt; void read(__Tp &amp;x) {\nint f = x = 0; char ch = getchar();\nfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = 1;\nfor (; isdigit(ch); ch = getchar()) x = (x &lt;&lt; 1) + (x &lt;&lt; 3) + (ch ^ 48);\nif (f) x = -x;\n}\nvoid read(char &amp;ch) { for (ch = getchar(); isspace(ch); ch = getchar()); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void read(__Tp1 &amp;x, __Tp2 &amp;... y) { read(x), read(y...); }\ntemplate &lt;typename __Tp&gt; void write(__Tp x) {\nif (x &lt; 0) putchar('-'), x = -x;\nif (x &gt; 9) write(x / 10);\nputchar(x % 10 + 48);\n}\nvoid write(char ch) { putchar(ch); }\nvoid write(const char *s) { for (; *s; ++s) putchar(*s); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void write(__Tp1 x, __Tp2 ... y) { write(x), write(y...); }\n\nconst int si = 1e5 + 10;\n\nint n, m, t;\nint mu[si], s[si];\nint pri[si], vis[si];\nvoid sieve(int n) {\nmu[1] = 1, t = 0, s[1] = 1;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) pri[++t] = i, vis[i] = i, mu[i] = -1;\nfor(int j = 1; j &lt;= t; ++j) {\nif(pri[j] &gt; vis[i] || pri[j] * i &gt; n) break;\nvis[i * pri[j]] = pri[j];\nif(i % pri[j] == 0) { mu[i * pri[j]] = 0; break; }\nmu[i * pri[j]] = -mu[i];\n}\ns[i] = s[i - 1] + mu[i];\n}\n}\nint get(int n, int m, int d) {\nint u = n / d, v = m / d;\nreturn (v * (v + 1)) / 2 + (v * (u - v));\n}\nint F(int n, int m) {\nif(n &lt; m) swap(n, m);\nint ret = 0;\nint l = 1, r = 0;\nfor(; l &lt;= m &amp;&amp; m / l &amp;&amp; n / l; ) {\nr = min({m, m / (m / l), n / (n / l)});\nret += (s[r] - s[l - 1]) * get(n, m, l), l = r + 1;\n}\nreturn ret;\n}\n\nsigned main() {\n\nsieve(si - 10);\nint T; read(T);\nfor(int nw = 1; nw &lt;= T; ++nw) {\nint a, b, c, d, k;\nread(a, b, c, d, k);\nwrite(\"Case \", nw, \": \");\nif(!k) write(\"0\", endl);\nelse write(F(b / k, d / k), endl);\n}\n\nreturn 0;\n}\n</code></pre> <p>\u6bd4\u8f83\u8da3\u5473\uff0c\u8fd9\u9898\u90fd\u591a\u5c11\u5e74\u4e86\uff0c\u7f51\u4e0a\u5c45\u7136\u6ca1\u6709\u6211\u8fd9\u4e2a\u663e\u800c\u6613\u89c1\u7684\u505a\u6cd5\uff08\uff09</p> <p>\u53ef\u89c1\u5927\u90e8\u5206\u9009\u624b\u7684\u72ec\u7acb\u601d\u8003\u80fd\u529b\u6709\u5f85\uff08\u6b38\u597d\u50cf\u6211\u4e5f\u662f\uff09</p> <p>Luogu2303 - Longge \u7684\u95ee\u9898</p> <p>\u6c42 \\(\\sum\\limits_{i = 1}^n\\gcd(i, n)\\)\uff0c\\(1\\le n &lt; 2^{32}\\)\u3002</p> <p>\u5f88\u7ecf\u5178\u7684\u95ee\u9898\u554a\uff01</p> <p>\u663e\u7136\u5c31\u662f \\(\\sum\\limits_{d | n}\\varphi(d)\\cdot\\dfrac{n}{d}\\)</p> <p>\\(\\varphi\\) \u5c31\u4e0d\u8981\u7ebf\u6027\u7b5b\u4e86\uff0c\u76f4\u63a5 \\(O(\\sqrt n)\\) \u6c42\u5c31\u884c\u3002</p> <p>\u8fd9\u9898\u4f3c\u4e4e\u53ef\u4ee5\u518d\u6b21\u5316\u7b80\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nint n, ans = 0;\nint phi(int x) {    int ans = 1;\nbool flag = false;\nfor(int i = 2; i * i &lt;= x; i++) if(!(x % i)) { flag = true; break; }\nif(!flag &amp;&amp; x != 1) return x - 1; for(int i = 2; i * i &lt;= x; i++) {\nif(!(x % i)) {\nans *= (i - 1), x /= i; while (!(x % i)) x /= i, ans *= i;\n}\n}\nif(x != 1) ans *= x - 1; return ans; }\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i * i &lt;= n; i++) {\nif(!(n % i)) {\nans += phi(i) * (n / i); if(i * i &lt; n) ans += phi(n / i) * i; }\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <p>Luogu3327 - \u7ea6\u6570\u4e2a\u6570\u548c</p> <p>\u6c42 \\(\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m\\sigma_0(ij)\\)\u3002</p> <p>\\(n, m, T \\le 50000\\)\u3002</p> <p>\u6709\u4e00\u4e2a\u6bd4\u8f83\u871c\u8702\u7684\u60f3\u6cd5\uff0c\u636e\u8bf4\u53eb rng_58 - clj \u7b49\u5f0f\uff1a</p> \\[ \\sigma_0(ij) = \\sum\\limits_{x | i}\\sum\\limits_{y | j}[\\gcd(x, y) = 1] \\] <p>\u7136\u540e\u6211\u4eec\u5148\u4e0d\u7740\u6025\u5e26\u8fdb\u53bb\u3002</p> <p>\u5982\u679c\u76f4\u63a5\u5e26\u8fdb\u53bb\u53cd\u6f14\uff0c\u6709 \\(i, j\\) \u5728\u524d\u9762\u7ba1\u7740\uff0c\u5f88\u70e6\u8e81\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u4ea4\u6362\u4e00\u4e0b Sigma\uff1a</p> \\[ \\begin{aligned} ans &amp;= \\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m\\sum\\limits_{x = 1}^i\\sum\\limits_{y = 1}^j[\\gcd(x, y) = 1] \\\\ &amp;= \\sum\\limits_{x = 1}^n\\sum\\limits_{y = 1}^m\\sum\\limits_{x | i}^{i \\in[1, n]}\\sum\\limits_{y | j}^{j\\in[1,m]}[\\gcd(x, y) = 1] \\\\ &amp;= \\sum\\limits_{x = 1}^n\\sum\\limits_{y = 1}^m\\lfloor\\dfrac n x\\rfloor\\lfloor\\dfrac m y\\rfloor[\\gcd(x, y) = 1] \\\\ &amp;= \\sum\\limits_{d = 1}^n\\mu(d)\\sum\\limits_{d | x}\\sum\\limits_{d | y}\\lfloor\\dfrac n x\\rfloor\\lfloor\\dfrac m y\\rfloor\\\\ &amp;= \\sum\\limits_{d= 1}^n\\mu(d)\\cdot g(\\lfloor\\dfrac n d\\rfloor)\\cdot g(\\lfloor\\dfrac m d\\rfloor) \\end{aligned} \\] <p>\\(g\\) \u53ef\u4ee5\u63d0\u524d\u9884\u5904\u7406\uff0c\u6574\u9664\u5206\u5757\u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e4 + 10;\n\nint n, m, t;\nint mu[si], s[si];\nint pri[si], vis[si];\nvoid sieve(int n) {\nt = 0, mu[1] = 1;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) pri[++t] = i, vis[i] = i, mu[i] = -1;\nfor(int j = 1; j &lt;= t; ++j) {\nif(pri[j] &gt; vis[i] || i * pri[j] &gt; n) break;\nvis[i * pri[j]] = pri[j];\nif(i % pri[j] == 0) { mu[i * pri[j]] = 0; break; }\nmu[i * pri[j]] = -mu[i];\n}\nmu[i] += mu[i - 1];\n}\nfor(int i = 1; i &lt;= n; ++i)\nfor(int j = i; j &lt;= n; j += i)\ns[j] ++;\nfor(int i = 1; i &lt;= n; ++i)\ns[i] += s[i - 1];\n}\nint F(int n, int m) {\nif(n &gt; m) swap(n, m);\nint ret = 0;\nint l = 1, r = 0;\nfor(; l &lt;= n &amp;&amp; n / l &amp;&amp; m / l; ) {\nr = min({n, n / (n / l), m / (m / l)});\nret += (mu[r] - mu[l - 1]) * s[n / l] * s[m / l];\nl = r + 1;\n}\nreturn ret;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nsieve(si - 10); int T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n &gt;&gt; m;\ncout &lt;&lt; F(n, m) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre> <p>Luogu2257 - YY\u7684GCD</p> <p>\u6c42 \\(\\sum\\limits_{i = 1}^{n}\\sum\\limits_{j = 1}^{m}[\\gcd(i, j) \\in \\text{prime}]\\)\u3002</p> <p>\\(T = 10^4, n, m \\le 10^7\\)\u3002</p> <p>\u6ce8\u610f\u5230\u5bf9 \\(\\gcd\\) \u6709\u9650\u5236\uff0c\u4e3a\u4e86\u5feb\u901f\u6362\u51fa\u53cd\u6f14\u5f0f\u5b50\uff0c\u6211\u4eec\u94a6\u5b9a \\(\\gcd\\)\uff0c\u5e76\u5c06\u5176\u63d0\u51fa\uff08\u679a\u4e3e \\(\\gcd\\)\uff09\u3002</p> \\[ \\begin{aligned} &amp;=\\sum\\limits_{d \\in \\text{prime}}\\sum\\limits_{i = 1}^{n}\\sum\\limits_{j = 1}^{m}[\\gcd(i, j) = d] \\\\ &amp;=\\sum\\limits_{d \\in \\text{prime}}^{}\\sum\\limits_{i = 1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{j = 1}^{\\lfloor\\frac{m}{d}\\rfloor}[\\gcd(i, j) = 1]\\\\ &amp;=\\sum\\limits_{d \\in \\text{prime}}^{}\\sum\\limits_{i = 1}^{\\lfloor\\frac{n}{d}\\rfloor}\\sum\\limits_{j = 1}^{\\lfloor\\frac{m}{d}\\rfloor}\\sum\\limits_{t | \\gcd(i, j)}^{}\\mu(t)\\\\ &amp;=\\sum\\limits_{d \\in \\text{prime}}^{}\\sum\\limits_{t = 1}^{\\lfloor\\frac{n}{d}\\rfloor}\\mu(t)\\sum\\limits_{i = 1}^{\\lfloor\\frac{n}{dt}\\rfloor}\\sum\\limits_{j = 1}^{\\lfloor\\frac{m}{dt}\\rfloor}1\\\\ &amp;=\\sum\\limits_{d \\in \\text{prime}}^{}\\sum\\limits_{t = 1}^{\\lfloor\\frac{n}{d}\\rfloor}\\mu(t)\\lfloor\\dfrac{n}{dt}\\rfloor\\lfloor\\dfrac{m}{dt}\\rfloor\\\\ \\end{aligned} \\] <p>\u53cd\u6f14\u90a3\u4e00\u6b65\u4e0d\u8981\u8bb0\u5f55\u6210 \\(t | d\\)\uff0c\u8fd9\u6837\u4f1a\u589e\u52a0\u53d8\u91cf\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\uff0c\u65f6\u523b\u8bb0\u4f4f\u6211\u4eec\u8981\u505a\u7684\u662f\u964d\u4f4e\u8026\u5408\u5ea6\u62c6\u5206\u53d8\u91cf\uff0c\u800c\u6211\u4eec\u77e5\u9053 \\(i, j\\) \u4e00\u5b9a\u4f1a\u88ab\u5316\u6389\uff0c\u6240\u4ee5\u6211\u4eec\u8bb0\u5f55\u6210 \\(t | \\gcd(i, j)\\)</p> <p>\u8fd9\u4e2a\u770b\u8d77\u6765\u6ca1\u6cd5\u5f88\u5feb\u505a\uff0c\u4f46\u662f\u53ef\u4ee5\u8bb0\u5f55 \\(T = dt\\)\u3002</p> <p>\u7136\u540e\u5f0f\u5b50\u53d8\u6210\uff1a</p> \\[ \\begin{aligned} &amp;=\\sum\\limits_{T = 1}^n \\lfloor\\dfrac{n}{T}\\rfloor\\lfloor\\dfrac{m}{T}\\rfloor\\cdot \\sum\\limits_{d \\in \\text{prime}, d | T}\\sum\\limits_{t = 1}^{\\lfloor\\frac{n}{d}\\rfloor}\\mu(t) \\end{aligned} \\] <p>\u540e\u9762\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u9884\u5904\u7406\u4e86\uff0c\u5bf9\u6bcf\u4e2a\u8d28\u6570\uff0c\u7ed9\u4ed6\u7684\u500d\u6570\u7684\u8d21\u732e\u52a0\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u8bb0\u5f97\u5f00 O2\uff0c\u4e0d\u7136 TLE/cy</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e7 + 10;\n\nint n, m, t;\nint mu[si], f[si];\nint pri[si], vis[si];\nvoid sieve(int n) {\nt = 0, mu[1] = 1;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) pri[++t] = i, vis[i] = i, mu[i] = -1;\nfor(int j = 1; j &lt;= t; ++j) {\nif(pri[j] &gt; vis[i] || i * pri[j] &gt; n) break;\nvis[i * pri[j]] = pri[j];\nif(i % pri[j] == 0) { mu[i * pri[j]] = 0; break; }\nmu[i * pri[j]] = -mu[i];\n}\n}\nfor(int i = 1; i &lt;= t; ++i) {\nfor(int j = 1; j * pri[i] &lt;= n; ++j) {\nf[pri[i] * j] += mu[j];\n}\n}\nf[0] = 0, mu[0] = 0;\nfor(int i = 1; i &lt;= n; ++i) f[i] += f[i - 1], mu[i] += mu[i - 1];\n}\nint F(int n, int m) {\nif(n &gt; m) swap(n, m);\nint ret = 0;\nint l = 1, r = 0;\nfor(; l &lt;= n; ) {\nr = min({n, n / (n / l), m / (m / l)});\nret += (f[r] - f[l - 1]) * (n / l) * (m / l);\nl = r + 1;\n}\nreturn ret;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nsieve(si - 10);\nint T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n &gt;&gt; m;\ncout &lt;&lt; F(n, m) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre> <p>SPOJ - LCMSUM</p> <p>\u6c42 \\(\\sum\\limits_{i = 1}^n \\operatorname{lcm}(i, n)\\)\u3002</p> <p>\\(T \\le 3 \\times 10^5, 1 \\le n \\le 10^6\\)\u3002</p> <p>\u8001\u529e\u6cd5\u3002</p> \\[ \\begin{aligned} answer &amp;= \\sum\\limits_{i = 1}^{n}\\dfrac{in}{\\gcd(i, n)} \\\\ &amp;= n\\sum\\limits_{i = 1}^{n}\\dfrac{i}{\\gcd(i, n)} \\\\ &amp;= n\\sum\\limits_{d = 1}^n\\sum\\limits_{i = 1}^n\\dfrac{i}{d}\\cdot[\\gcd(i, n) = d] \\\\ &amp;= n\\sum\\limits_{d = 1}^{n}\\sum\\limits_{i = 1}^{\\lfloor\\frac{n}{d}\\rfloor}i\\cdot[\\gcd(i, n / d) = 1] \\end{aligned} \\] <p>\u540e\u9762\u8fd9\u90e8\u5206\u63d0\u51fa\u6765\u53cd\u6f14\u5316\u7b80\u5373\u53ef\uff0c\u524d\u9762\u7684\u90e8\u5206\u5c31\u662f\u6574\u9664\u5206\u5757\u3002</p> <p>\u6ce8\u610f\u9664\u6389 \\(d\\) \u90a3\u4e2a\u5730\u65b9\u4e0d\u8981\u5fd8\u8bb0\u8fd9\u4e2a\u64cd\u4f5c\u672c\u8eab\u7684\u542b\u4e49\uff0c\u6240\u4ee5 \\(n \\to n / d\\)\u3002</p> <p>\u61d2\u5f97\u63a8\u4e86\u3002</p> <p>Luogu3704 - \u6570\u5b57\u8868\u683c</p> <p>\u6c42 \\(\\prod\\limits_{i = 1}^{n}\\prod\\limits_{j = 1}^{m}F(\\gcd(i, j))\\)\u3002</p> <p>\u5176\u4e2d \\(F\\) \u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u7b54\u6848\u5bf9 \\(p\\) \u53d6\u6a21\u3002</p> <p>\\(1\\le T \\le 10^3, 1\\le n, m \\le 10^6\\)\u3002 </p> <p>Simple Problem.</p> <p>\u9996\u5148 \\(\\gcd(i, j)\\) \u5728\u4e0b\u6807\u91cc\u9762\uff0c\u6240\u4ee5\u679a\u4e3e \\(\\gcd(i, j)\\) \u5c06\u5176\u63d0\u51fa\u6765\u7684\u505a\u6cd5\u662f\u663e\u7136\u7684\u3002</p> <p>\u4f46\u662f\u4e00\u4e2a\u95ee\u9898\u5728\u4e8e\uff0c\u73b0\u5728\u8fd9\u91cc\u6c42\u7684\u662f \\(\\prod\\) \u4e0d\u662f \\(\\sum\\)\uff0c\u5982\u679c\u6211\u4eec\u7528 Iverson Bracket \u8f6c\u5316\uff0c\u90a3\u6700\u540e\u4e00\u5b9a\u4f1a\u51fa\u73b0 \\(0\\)\uff0c\u6574\u4e2a\u5f0f\u5b50\u5c31\u53d8\u6210 \\(0\\) \u6ca1\u6cd5\u505a\u4e86\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u600e\u4e48\u5f88\u597d\u7684\u8868\u8fbe\u8fd9\u4e2a\u9650\u5236\u3002</p> <p>\u5176\u5b9e\u672c\u8d28\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u4e0d\u5408\u6cd5\u7684\u5143\u7d20\u5728 \\((\\oplus, \\mathbb Z_p)\\) \u610f\u4e49\u4e0b\u4e3a\u5355\u4f4d\u5143\uff0c\u5982\u679c\u6c42 \\(\\sum\\)\uff0c\u90a3\u4e48 \\(\\oplus = +\\)\uff0c\\(e = 0\\)\u3002</p> <p>\u6240\u4ee5\u73b0\u5728\u662f \\((\\times, \\mathbb Z_p) \\iff e = 1\\)\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u4e0d\u96be\u60f3\u5230 \\(x^0 = 1 = e\\)\uff0c\u6240\u4ee5\u6211\u4eec\u628a Iverson Bracket \u653e\u5728\u6307\u6570\u3002</p> \\[ \\begin{aligned} answer &amp;= \\prod\\limits_{d = 1}^{n}\\prod\\limits_{i = 1}^{n}\\prod\\limits_{j = 1}^{m} F(d)^{[\\gcd(i, j) = d]} \\end{aligned} \\] <p>\u6ce8\u610f\u5230\u5176\u5b9e\u540e\u9762\u4e24\u4e2a \\(\\prod\\) \u5c31\u662f\u5728\u6570 \\((1, 1) \\sim (n, m)\\) \u4e2d\u6709\u591a\u5c11 \\((i, j)\\) \u6ee1\u8db3 \\(\\gcd(i, j) = d\\)\uff0c\u6211\u4eec\u8bb0\u8fd9\u4e2a\u4e3a \\(G(n, m, d)\\)\u3002</p> <p>\u539f\u5f0f\uff1a</p> \\[ \\begin{aligned} &amp;=\\prod\\limits_{d = 1}^{n}F(d)^{G(n, m, d)} \\end{aligned} \\] <p>\\(G\\) \u5c31\u662f\u6211\u4eec\u7684\u8001\u670b\u53cb\uff08Ex.2 \u4e2d\u7684\u7b54\u6848\uff09\uff0c\u53ef\u4ee5\u53cd\u6f14\u3002</p> <p>\u7136\u540e\u5f0f\u5b50\u53d8\u4e3a\uff1a</p> \\[ \\begin{aligned} &amp;=\\prod\\limits_{d = 1}^{n}F(d)^{\\sum\\limits_{t = 1}^{\\lfloor\\frac{n}{d}\\rfloor}\\mu(t)\\lfloor\\frac{n}{dt}\\rfloor\\lfloor\\frac{m}{dt}\\rfloor} \\end{aligned} \\] <p>\u770b\u8d77\u6765\u5df2\u7ecf\u53ef\u4ee5\u505a\u4e86\u5bf9\u5427\uff1f\u4f46\u662f \\(T = 10^3\\)\uff0c\u6211\u4eec\u9700\u8981\u5355\u6b21\u8be2\u95ee\u66f4\u5feb\u7684\u505a\u6cd5\uff0c\u8fd9\u91cc\u5355\u6b21\u8be2\u95ee\u662f \\(O(n)\\) \u7684\u3002</p> <p>\u7136\u540e\u5b9a\u775b\u4e00\u770b\uff0c\u8fd9\u4e2a \\(dt\\) \u7684\u5f62\u5f0f\uff0c\u54ce\u5440\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec YY \u7684 GCD \u5417\uff0c\u679a\u4e3e \\(T = dt\\)\uff01</p> \\[ \\begin{aligned} &amp;=\\prod\\limits_{T = 1}^{n}f(T)^{\\lfloor\\frac{n}{T}\\rfloor\\lfloor\\frac{m}{T}\\rfloor} \\end{aligned} \\] <p>\u5176\u4e2d \\(f(T) = \\prod\\limits_{d | T}^{}F(d)^{\\mu(\\frac{T}{d})}\\)\u3002</p> <p>\\(f\\) \u901a\u8fc7\u500d\u6570\u6cd5\u53ef\u4ee5\u7b97\uff0c\u7136\u540e\u6574\u9664\u5206\u5757\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\u6682\u7565\uff0c\u4e4b\u540e\u5199\u3002</p> <p>Luogu5518 - \u5e7d\u7075\u4e50\u56e2 / \u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u57fa\u7840\u7ec3\u4e60\u9898</p> <p>\u4e1c\u98ce\u8c37 \u65e9\u82d7(Kochiya Sanae)\u975e\u5e38\u559c\u6b22\u5e7d\u7075\u4e50\u56e2\u7684\u6f14\u594f\uff0c\u5979\u60f3\u5bf9\u5979\u4eec\u7684\u6f14\u594f\u8bc4\u5206\u3002</p> <p>\u56e0\u4e3a\u5e7d\u7075\u4e50\u56e2\u6709 \\(3\\) \u4e2a\u4eba\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 \\(3\\) \u4e2a\u6b63\u6574\u6570 \\(A,B,C\\) \u6765\u8868\u793a\u51fa\u4e50\u56e2\u6f14\u594f\u7684\u5206\u6570\uff0c\u5979\u4eec\u7684\u6f14\u594f\u5206\u6570\u53ef\u4ee5\u8868\u793a\u4e3a</p> \\[\\prod_{i=1}^{A}\\prod_{j=1}^{B}\\prod_{k=1}^{C}\\left(\\frac{\\text{lcm}(i,j)}{\\gcd(i,k)}\\right)^{f(type)}\\] <p>\u56e0\u4e3a\u97f3\u4e50\u5728\u4e0d\u540c\u7684\u90e8\u5206\u4f1a\u6709\u4e0d\u540c\u7684\u542c\u89c9\u611f\u53d7\uff0c\u6240\u4ee5 \\(type\\) \u4f1a\u5728 \\(\\{0,1,2\\}\\) \u4e2d\u53d1\u751f\u53d8\u5316\uff0c\u5176\u4e2d\uff1a</p> \\[ \\begin{aligned} f(0)&amp;=1 \\cr f(1)&amp;=i \\times j \\times k \\cr f(2)&amp;=\\gcd(i,j,k) \\end{aligned} \\] \\[ 1\\leq A,B,C\\leq 10^5 \\ \\ \\ \\ 10^7 \\leq p \\leq 1.05\\times 10^9\\ \\ \\ \\ p\\in \\{ prime\\} \\ \\ \\ \\ T =70\\] <p>\u5495\u5495\u5495\u3002</p>"}, {"location": "algor/math/number-theory/mobius-inversion/#_8", "title": "\u9898\u5916\u8bdd", "text": "<p>Source: BZOJ2498/HDU4093 Xavier is Learning to Count</p> <p>\u5495\u5495\u5495\uff0c\u8fd9\u4e2a\u6709\u70b9\u96be\uff0c\u4e4b\u540e\u5199\u3002</p> <p>\u4f46\u662f\u5b83\u5f15\u5165\u4e86\u4e00\u4e2a\u7ed3\u8bba\uff1a</p> <p>\u4e00\u4e2a\u6ee1\u8db3 \\(f(1) \\not = 0\\) \u7684\u6570\u8bba\u51fd\u6570\uff0c\u7528\u5b83\u505a Dirichlet \u5377\u79ef\u662f\u53ef\u9006\u7684\u3002</p> <p>\u5373\u5b58\u5728 \\(g\\) \u4f7f\u5f97 \\(f * g = \\epsilon\\)\u3002 </p> <p>\u8fd9\u4e2a\u5176\u5b9e\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a \\(\\epsilon(1) = 1\\)\uff0c\u5982\u679c \\(f(1) = 0\\) \u4e86\u600e\u4e48\u5377\u90fd\u5377\u4e0d\u56de\u53bb\u3002</p> <p>\u4ee5\u4e0a\u5927\u90e8\u5206\u5185\u5bb9\u53c2\u8003 zyw \u5b66\u59d0\u7684\u8bb2\u4e49\uff0c\u4f8b\u9898\u53c2\u8003 lsj \u5b66\u957f\u7684\u535a\u5ba2\uff0c\u4e60\u9898\u6765\u81ea CYJian \u7684\u9898\u5355\uff0c\u5728\u6b64\u611f\u8c22\u3002</p>"}, {"location": "algor/math/number-theory/prime/", "title": "\u8d28\u6570", "text": ""}, {"location": "algor/math/number-theory/prime/#_1", "title": "\u8d28\u6570\u7684\u5b9a\u4e49", "text": "<p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u9664\u4e86 \\(1\\) \u548c\u5b83\u672c\u8eab\u4ee5\u5916\u6ca1\u6709\u4efb\u4f55\u56e0\u6570\u3002</p> <p>\u672c\u6587\u8bb0 \\(\\text{PRIME}(n)\\) \u8868\u793a \\(n\\) \u4e3a\u8d28\u6570\u3002</p> <p>\u6709\u4e24\u4e2a\u91cd\u8981\u7ed3\u8bba\uff1a</p> <ul> <li>\u7ed3\u8bba 1\uff1a\u5bf9\u4e8e\u8db3\u591f\u5927\u7684 \\(n \\in \\mathbb{N}^*\\)\uff0c\\([1,n]\\) \u4e2d\u7684\u7d20\u6570\u4e2a\u6570\u7ea6\u4e3a \\(\\frac{n}{\\ln n}\\) \u4e2a \uff08\u5bf9\u6570\u7ed3\u8bba\uff09</li> <li>\u7ed3\u8bba 2\uff1a\u82e5 \\(\\lnot \\text{PRIME}(n)\\)\uff0c\u5219 \\(\\exists T \\in [2,\\sqrt{n}]\\)\uff0c\u4f7f\u5f97 \\(T|n\\)\u3002\uff08\u6839\u53f7\u7ed3\u8bba\uff09</li> </ul> <p>\u6b64\u5904\u8bb0 \\(\\sqrt{n} = \\lfloor\\sqrt{n}\\rfloor\\)\u3002</p>"}, {"location": "algor/math/number-theory/prime/#_2", "title": "\u5224\u65ad\u662f\u5426\u4e3a\u8d28\u6570", "text": "<p>\u7531\u6839\u53f7\u7ed3\u8bba\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u8d28\u6570\u5224\u65ad\u7b97\u6cd5\uff1a</p> <p>\u4ee4 \\(x\\in[2,\\sqrt{n}]\\)\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728 \\(x | n\\)\u3002\u82e5\u5b58\u5728 \\(\\Rightarrow \\lnot \\text{PRIME}(n)\\)\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(\\sqrt{n})\\)\u3002</p> <pre><code>bool is_prime(int n) {\nif(n &lt; 2) return false;\nfor(int i = 2; i * i &lt;= n; ++i) if(n % i == 0) return false;\nreturn true;\n}\n</code></pre>"}, {"location": "algor/math/number-theory/prime/#_3", "title": "\u8d28\u6570\u7b5b\u6cd5", "text": "<p>\u6cdb\u5316\uff1a\u7528\u6765\u6c42 \\([1,n]\\) \u4e2d\u7684\u7d20\u6570\u96c6\u5408\u3002</p>"}, {"location": "algor/math/number-theory/prime/#_4", "title": "\u57c3\u6c0f\u7b5b", "text": "<p>\u57fa\u4e8e\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff1a\\(\\forall x \\in \\mathbb{N}^*\\)\uff0c\\(\\lnot \\text{PRIME}(kx),(k = 2, 3, 4,\\dots)\\)</p> <p>\u4e00\u4e2a simple \u7684\u60f3\u6cd5\uff1a\u679a\u4e3e \\(2 \\to n\\)\uff0c\u5982\u679c \\(i\\) \u6ca1\u6709\u88ab\u6807\u8bb0\u4e3a\u5408\u6570\uff0c\u5219 \\(\\text{PRIME}(i)\\)\uff0c\u7136\u540e\u6807\u8bb0\u6240\u6709\u7684 \\(ki\\)\u3002\u5982\u679c \\(i\\) \u5df2\u7ecf\u88ab\u6807\u8bb0\uff0c\u90a3\u4e48\u6807\u8bb0\u6240\u6709\u7684 \\(ki\\)\uff0c\u521d\u59cb\u7684\u65f6\u5019 \\(2\\) \u6ca1\u6709\u88ab\u6807\u8bb0\u3002\u590d\u6742\u5ea6 \\(O(n\\times\\sum\\frac{n}{i})=O(n^2)\\)\u3002</p> <p>\u53d1\u73b0\u8fd9\u4e2a\u505a\u6cd5\u4f1a\u91cd\u590d\u6807\u8bb0\u4e00\u4e2a\u6570\u5f88\u591a\u6b21\uff0c\u6bd4\u5982 \\(12\\) \u5c31\u4f1a\u88ab \\(2, 3, 4, 6\\) \u90fd\u6807\u8bb0\u4e00\u6b21\u3002</p> <p>\u90a3\u4e48\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u4f18\u5316\uff1a\u663e\u7136\u5bf9\u4e8e \\(\\forall rx,r\\in[2,x)\\)\uff0c\\(rx\\) \u5fc5\u7136\u4f1a\u5728\u88ab \\(x\\) \u6807\u8bb0\u5230\u7684\u65f6\u5019\u63d0\u524d\u88ab\u6807\u8bb0\u5230\u3002\u56e0\u4e3a \\(r\\) \u80af\u5b9a\u6bd4 \\(x\\) \u5c0f\uff0c\u90a3\u4e48 \\(r\\) \u80af\u5b9a\u5c31\u6807\u8bb0\u8fc7\u4e86 \\(rx\\)\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece \\(k = x\\) \u5f00\u59cb\u6807\u8bb0 \\(kx\\)\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(\\sum\\limits_{r\\le n \\and \\text{PRIME}(r)}\\dfrac{n}{r}) = O(n \\log \\log n)\\)\u3002</p> <pre><code>bool vis[si];\nint m, prime[si];\nvoid get_primes(int n) {\nm = 0;\nmemset(vis, false, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(!vis[i]) prime[++m] = i;\nfor(int j = i * i; j &lt;= n; ++j) vis[j] = true;\n}\n}\n</code></pre>"}, {"location": "algor/math/number-theory/prime/#_5", "title": "\u7ebf\u6027\u7b5b", "text": "<p>\u53c8\u53eb\u6b27\u62c9\u7b5b\u3002</p> <p>\u8003\u8651\u5230\u57c3\u6c0f\u7b5b\u8fd8\u662f\u4f1a\u91cd\u590d\u6807\u8bb0\u5f88\u591a\u6570\u3002</p> <p>\u8fd8\u662f\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\\(12 = 2 \\times 6 = 3 \\times 4\\)\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u4e0b\uff0c\\(12\\) \u4f1a\u88ab \\(2,3\\) \u5404\u7b5b\u4e00\u6b21\u3002</p> <p>\u95ee\u9898\u6240\u5728\u5c31\u662f\uff0c\u4e00\u4e2a\u6570\u5e76\u4e0d\u80fd\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u6570\u6765\u6807\u8bb0\u5b83\u3002</p> <p>\u601d\u7d22\u4e00\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u6765\u6807\u8bb0\u5b83\uff0c\u56e0\u4e3a\u8d28\u56e0\u5b50\u4e0d\u4f1a\u518d\u62c6\u5206\u6210\u522b\u7684\u56e0\u6570\uff0c\u4f7f\u7528\u6700\u5c0f\u7684\u8d28\u56e0\u5b50\u662f\u56e0\u4e3a\u786e\u5b9a\u8d77\u6765\u65b9\u4fbf\u3002</p> <p>\u8bb0 \\(mp(n)\\) \u8868\u793a \\(n\\) \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c\u663e\u7136\uff0c\u5982\u679c \\(\\text{PRIME}(i) \\Rightarrow mp(i) = i\\)\u3002</p> <p>\u90a3\u4e48\u5f53\u626b\u5230\u67d0\u4e00\u4e2a\u6570 \\(i\\) \u4e14 \\(i\\) \u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u65f6\u5019\uff0c\u4ee4 \\(mp(i) = i\\) \uff0c\u8bb0\u5f55\u8d28\u6570 \\(i\\)\u3002\u7136\u540e\u5bf9\u4e8e \\(i\\) \uff08\u4e0d\u7ba1\u5b83\u662f\u4e0d\u662f\u8d28\u6570\uff09\u679a\u4e3e\u6240\u6709\u6bd4 \\(mp(i)\\) \u5c0f\u6216\u8005\u7b49\u4e8e \\(mp(i)\\) \u7684\u8d28\u6570 \\(j\\)\uff08\u4ece\u5df2\u7ecf\u786e\u5b9a\u7684\u8d28\u6570\u96c6\u5408\u91cc\u9762\u9009\uff09\uff0c\u6807\u8bb0 \\(i\\times j\\) \u4e3a\u5408\u6570\uff0c\u5e76\u4ee4 \\(mp(i\\times j) = j\\)\u3002</p> <p>\u6362\u4e00\u79cd\u8bf4\u6cd5\uff0c\u5c31\u662f\u4ece\u5927\u5230\u5c0f\u7d2f\u79ef\u8d28\u56e0\u5b50\uff0c\u8fd9\u6837\u80fd\u552f\u4e00\u786e\u5b9a\u6bcf\u4e2a\u6570\u7684\u7ec4\u6210\u65b9\u5f0f\uff0c\u6bd4\u5982 \\(12\\) \u5c31\u662f \\(3 \\times 2 \\times 2\\)\u3002</p> <p>\u7b5b\u51fa \\(12\\) \u7684\u8fc7\u7a0b\u662f\uff1b\u5148\u626b\u63cf\u5230 \\(2\\)\uff0c\u6b64\u65f6\u5408\u6cd5\u7684 \\(j\\) \u53ea\u80fd\u662f \\(2\\)\uff0c\u6240\u4ee5\u6807\u8bb0 \\(4\\) \u4e3a\u5408\u6570\uff0c\u7136\u540e\u4ee4 \\(mp(4)=2\\)\uff0c\u626b\u63cf\u5230 \\(3\\)\uff0c\u53d1\u73b0 \\(2,3\\) \u53ef\u4ee5\u5145\u5f53 \\(j\\)\uff0c\u6240\u4ee5\u6807\u8bb0 \\(6,9\\)\uff0c\\(mp(6) = 2,mp(9) = 3\\)\u3002\u626b\u5230 \\(4\\) \u7684\u65f6\u5019\uff0c\u53d1\u73b0\u53ea\u6709 \\(2\\) \u53ef\u4ee5\u5145\u5f53 \\(j\\)\uff0c\u4e8e\u662f\u6807\u8bb0 \\(8\\)\uff0c \\(mp(8)=2\\)\uff0c\u5f53\u626b\u63cf\u5230 \\(6\\) \u7684\u65f6\u5019\uff0c\u5c31\u6807\u8bb0\u4e86 \\(12\\)\uff0c\u5e76\u4ee4 \\(mp(12) = 2\\)\u3002</p> <p>\u56e0\u4e3a\u6bcf\u4e2a\u5408\u6570 \\(i \\times j\\) \u53ea\u4f1a\u88ab\u4ed6\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 \\(j\\) \u7b5b\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f \\(O(n)\\) \u7684\u3002</p> <p>\u8fd9\u6837\u8fd8\u987a\u4fbf\u6c42\u4e86\u6bcf\u4e2a\u6570\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u3002</p> <pre><code>int vis[si];\nint m = 0, prime[si];\n\nvoid get_primes(int n) {\nm = 0;\nmemset(vis, 0, sizeof vis);\nfor(int i = 2; i &lt;= n; ++i) {\nif(vis[i] == 0) { vis[i] = i;\nprime[++m] = i;\n}\nfor(int j = 1; j &lt;= m; ++j) {\nif(prime[j] &gt; vis[i] || prime[j] * i &gt; n) break;\nvis[prime[j] * i] = prime[j];\n}\n}\n}\n</code></pre>"}, {"location": "algor/math/number-theory/prime/#_6", "title": "\u8d28\u56e0\u6570\u5206\u89e3", "text": "<p>\u6cdb\u5316\uff1a\u5206\u89e3\u4e00\u4e2a\u6570\u7684\u6240\u6709\u8d28\u56e0\u5b50</p> <ul> <li>\u7b97\u672f\u57fa\u672c\u5b9a\u7406\uff1a\u4efb\u4f55\u4e00\u4e2a\u5927\u4e8e \\(1\\) \u7684\u6b63\u6574\u6570\u90fd\u53ef\u4ee5\u552f\u4e00\u5206\u89e3\u4e3a\u6709\u9650\u4e2a\u8d28\u6570\u7684\u4e58\u79ef\u3002</li> </ul> <p>\u4e5f\u53eb\u552f\u4e00\u5206\u89e3\u5b9a\u7406\uff0c\u53ef\u4ee5\u5199\u6210 \\(N = p_1^{c1}\\times p_2^{c2}\\times p_3^{c3}\\times \\dots p_m^{cm}, c_i \\in \\mathbb{N}^*, p_i &lt; p_{i + 1},\\text{PRIME}(p_i)\\)\u3002</p> <ul> <li>\u8bd5\u9664\u6cd5\uff1a</li> </ul> <p>\u4e0a\u9762\u7684\u5b9a\u7406\u57fa\u672c\u6ca1\u592a\u5927\u7684\u7528\u5904\uff0c\u8003\u8651\u4e00\u4e2a\u57c3\u6c0f\u7b5b\u7684\u53d8\u5f0f\uff0c\u7ed3\u5408\u6839\u53f7\u7ed3\u8bba\u3002</p> <p>\u60f3\u6cd5\uff1a\u626b\u4e00\u904d \\(d\\in[2,\\sqrt{n}]\\)\uff0c\u82e5 \\(d|n\\)\uff0c\u4e0d\u65ad\u7684\u9664\u6389 \\(n\\) \u4e2d\u7684 \\(d\\)\uff0c\u8bb0\u5f55 \\(c\\) \u5373\u53ef\u3002</p> <p>\u56e0\u4e3a\u4ece\u5c0f\u5230\u5927\uff0c\u6240\u4ee5\u6bcf\u6b21\u80fd\u6574\u9664 \\(n\\) \u7684 \\(d\\) \u5fc5\u7136\u662f\u8d28\u6570\uff0c\u662f\u5408\u6570\u7684\u4e4b\u524d\u90fd\u9664\u6389\u4e86\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> <pre><code>int c[si]; // exponential\nint m = 0, p[si]; // prime factor\n\nvoid divide(int n) {\nm = 0;\nfor(int i = 2; i * i &lt;= n; ++i) {\nif(n % i == 0) {\np[++m] = i, c[m] = 0;\nwhile(n % i == 0) n /= i, c[m]++;\n}\n}\nif(n &gt; 1) p[++m] = n, c[m] = 1;\n}\n</code></pre>"}, {"location": "algor/math/number-theory/sqrt-decomposition/", "title": "\u6570\u8bba\u5206\u5757", "text": "<p>\u4e00\u4e2a\u7b80\u5355\u4e14\u6709\u8da3\u7684\u5c0f\u6280\u5de7\u3002</p> <p>\u6211\u4ee5\u524d\u4f3c\u4e4e\u60f3\u5230\u8fc7\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u8fc7\u4e86\u4e00\u4e2a\u9898\uff0c\u4f46\u662f\u6211\u5fd8\u8bb0\u662f\u5565\u4e86\u3002</p>"}, {"location": "algor/math/number-theory/sqrt-decomposition/#easy", "title": "Easy", "text": "<p>\u7ed9\u5b9a \\(n, k\\)\uff0c\u6c42 \\(\\sum\\limits_{i = 1}^n \\lfloor\\dfrac{k}{i}\\rfloor\\) \u7684\u503c\u3002</p> <p>\\(1\\le n, k \\le 10^5\\)\u3002</p> <p>\u6709\u4e00\u4e2a\u89c2\u5bdf\u662f\uff0c\\(\\lfloor\\dfrac{k}{i}\\rfloor\\) \u8fd9\u4e2a\u4e1c\u897f\u5176\u5b9e\u662f\u4e00\u5757\u4e00\u5757\u7684\u3002</p> <p>\u6bd4\u5982 \\(k = 10 \\to 10, 5, 3, 2, 2, 1, 1, 1, 1, 1\\)\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u6709\u4e00\u4e2a\u60f3\u6cd5\u662f\u8003\u8651\u7b97\u51fa\u6bcf\u4e00\u6bb5\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u964d\u5230 \\(O(B)\\)\uff0c\u5176\u4e2d \\(B\\) \u662f\u6bb5\u6570\u3002</p> <p>\u6211\u4eec\u8003\u8651\u80fd\u6574\u9664 \\(k\\) \u7684\u6570\u5728 \\(1 \\sim k\\) \u5f53\u4e2d\u6709\u591a\u5c11\u4e2a\uff0c\u8fd9\u4e2a\u662f \\(O(\\sqrt k)\\) \u7ea7\u522b\u7684\uff0c\u5982\u679c\u5728 \\(i &gt; k\\) \u7684\u90e8\u5206\uff0c\u90a3\u90fd\u662f \\(0\\) \u4e86\u3002</p> <p>\u6240\u4ee5 \\(O(B) = O(\\sqrt k)\\)\uff0c\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\uff0c\u600e\u4e48\u5206\u5757\uff0c\u6362\u53e5\u8bdd\u8bf4\u600e\u4e48\u5feb\u901f\u77e5\u9053\u6bcf\u4e00\u6bb5\u662f\u54ea\u4e00\u4e9b\u3002</p> <p>\u7ed3\u8bba\uff1a\u5982\u679c \\(i &lt; j\\)\uff0c\u5e76\u4e14 \\(\\lfloor\\dfrac{k}{i}\\rfloor = \\lfloor\\dfrac{k}{j}\\rfloor\\)\uff0c\u90a3\u4e48 \\(j \\in \\mathbb{Z}\\) \u7684 \\(\\max j = \\left\\lfloor\\dfrac{k}{\\lfloor\\dfrac{k}{i}\\rfloor}\\right\\rfloor\\)\u3002</p> <p>\u7ed3\u8bba\u7684\u8bc1\u660e\u5f88\u7b80\u5355\uff1a</p> <p>\u9996\u5148 \\(\\lfloor\\dfrac{x}{y}\\rfloor \\le \\dfrac{x}{y}\\) \u8fd9\u4e2a\u662f\u663e\u7136\u7684\uff0c\u7136\u540e\u6211\u4eec\u5e26\u5165\u4e0a\u9762\u7684\u6761\u4ef6\uff1a</p> \\[ \\lfloor\\dfrac{k}{i}\\rfloor =\\lfloor\\dfrac{k}{j}\\rfloor \\le \\dfrac{k}{j} \\] <p>\u6240\u4ee5\uff1a</p> \\[ \\lfloor\\dfrac{k}{i}\\rfloor \\le \\dfrac{k}{j} \\] <p>\u6709\uff1a</p> \\[ j \\le \\dfrac{k}{\\lfloor\\dfrac{k}{i}\\rfloor} \\] <p>\u7136\u540e\u56e0\u4e3a \\(j \\in \\mathbb{Z}\\) \u6240\u4ee5\uff1a</p> \\[ j \\le \\left\\lfloor\\dfrac{k}{\\lfloor\\dfrac{k}{i}\\rfloor}\\right\\rfloor  \\] <p>\u8fd9\u91cc\u8bc1\u660e\u4e86\u5145\u5206\u6027\uff0c\u5fc5\u8981\u6027\u662f\u663e\u7136\u7684\u3002</p> <p>\u90a3\u4e48\u6bcf\u6b21\u627e\u5230\u6bb5\u9996 \\(l\\)\uff0c\u4ee4 \\(r =\\left\\lfloor\\dfrac{k}{\\lfloor\\dfrac{k}{l}\\rfloor}\\right\\rfloor\\) \u5373\u53ef\u3002</p> Code <pre><code>int calc(int n, int k) {\nint l = 1, r = 0, ret = 0;\nfor(; l &lt;= n &amp;&amp; k / l; ) {\nr = (k / (k / l)), r = min(n, r);\nret += (r - l + 1) * (k / l);\nl = r + 1;\n}\nreturn ret;\n}\n</code></pre> <p>\u6ce8\u610f\u4ee3\u7801\u91cc\u8981\u5224 \\(i &gt; k\\) \u548c \\(i &gt; n\\) \u7684\u60c5\u51b5\u3002</p>"}, {"location": "algor/math/number-theory/sqrt-decomposition/#normal", "title": "Normal", "text": "<p>\u5982\u679c\u6c42 \\(G(n, k) = \\sum\\limits_{i = 1}^n i\\lfloor\\dfrac{k}{i}\\rfloor\\) \u5462\uff1f</p> <p>\u8fd9\u91cc\u662f\u4e2a Trick\uff0c\u6ce8\u610f\u5230\u5206\u6bb5\u4e4b\u540e\uff0c\u6bb5\u4e2d\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684 \\(\\lfloor\\dfrac{k}{i}\\rfloor\\) \u662f\u76f8\u7b49\u7684\u3002</p> <p>\u8fd9\u90e8\u5206\u53ef\u4ee5\u4e58\u6cd5\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6c42\u4e00\u4e2a \\(\\sum\\limits_{i = l}^r i\\) \u5373\u53ef\u3002</p> <p>\u5982\u679c\u662f\u4e00\u4e2a\u51fd\u6570 \\(f(x)\\)\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u591a\u6c42\u7684\u5c31\u662f \\(\\sum\\limits_{i = l}^r f(i)\\)\u3002</p> code <pre><code>int sum(int l, int r) { return (r - l + 1) * (r + l) / 2ll; }\nint calc(int n, int k) {\nint l = 1, r = 0, ret = 0;\nfor(; l &lt;= n &amp;&amp; k / l; ) {\nr = (k / (k / l)), r = min(n, r);\nret += sum(l, r) * (k / l);\nl = r + 1;\n}\nreturn ret;\n}\n</code></pre>"}, {"location": "algor/math/number-theory/sqrt-decomposition/#hard", "title": "Hard", "text": "<p>Source</p> <p>\u6c42 \\(F(n, k) = \\sum\\limits_{i = 1}^n (k\\bmod i)\\)\u3002</p> <p>\u6570\u636e\u8303\u56f4\u4e0d\u53d8\u3002</p> <p>\u62c6\u6210 \\(k\\bmod i = k - i\\lfloor\\dfrac{k}{i}\\rfloor\\) \u5373\u53ef\u3002</p>"}, {"location": "algor/math/number-theory/sqrt-decomposition/#lunatic", "title": "Lunatic", "text": "<p>Source</p> <p>\u6c42 \\(\\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m (n\\bmod i) \\cdot (m \\bmod j), i \\not= j\\)\u3002</p> <p>\u4e0d\u614c\uff0c\u6211\u4eec\u5148\u62c6\u4e00\u4e0b\uff1a</p> \\[ \\begin{aligned} &amp;= \\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m (n - i\\lfloor\\dfrac{n}{i}\\rfloor) \\cdot (m - j\\lfloor\\dfrac{m}{j}\\rfloor), i \\not= j \\\\ &amp;= \\sum\\limits_{i = 1}^n\\sum\\limits_{j = 1}^m (n - i\\lfloor\\dfrac{n}{i}\\rfloor) \\cdot (m - j\\lfloor\\dfrac{m}{j}\\rfloor) - \\sum\\limits_{i = 1}^n (n - i \\lfloor\\dfrac{n}{i}\\rfloor)\\cdot(m - i\\lfloor\\dfrac{m}{i}\\rfloor) \\\\ &amp;= F(n, n)\\cdot F(m, m) - n^2m + mG(n, n) + nG(n, m) - \\sum\\limits_{i = 1}^n i^2 \\cdot\\lfloor\\dfrac{n}{i}\\rfloor\\lfloor\\dfrac{m}{i}\\rfloor  \\end{aligned} \\] <p>\\(F, G\\) \u5c31\u662f\u524d\u9762\u8bf4\u8fc7\u7684\uff0c\u76f4\u63a5\u505a\u5c31\u884c\u3002</p> <p>\u6211\u4eec\u8003\u8651\u6700\u540e\u8fd9\u4e00\u5768\u600e\u4e48\u529e\uff0c\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u4e8c\u7ef4\u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u53d1\u73b0 \\(\\lfloor\\dfrac{n}{i}\\rfloor\\lfloor\\dfrac{m}{i}\\rfloor\\) \u7684\u503c\u4e5f\u662f\u5206\u5757\u7684\u3002</p> <p>\u4f60\u53ef\u4ee5\u7406\u89e3\u6210\uff0c\u6709\u4e24\u4e2a\u697c\u68af\u63a5\u5728\u4e86\u4e00\u8d77\uff0c\u7136\u540e\u5c31\u50cf minecraft \u91cc\u9762\u7684\u6c99\u5b50\u4e00\u6837\uff08\u6211\u89c9\u5f97 cmd \u5927\u7237\u7684\u8fd9\u4e2a\u6bd4\u55bb\u5f88\u5f62\u8c61\u5c31\u642c\u8fc7\u6765\u4e86\uff09\u3002</p> <p>\u7136\u540e\u56fe\u5f62\u5316\u7406\u89e3\u4e00\u4e0b\uff0c\u53ef\u4ee5\u53d1\u73b0 \\(r = \\min(\\left\\lfloor\\dfrac{n}{\\lfloor\\dfrac{n}{l}\\rfloor}\\right\\rfloor, \\left\\lfloor\\dfrac{m}{\\lfloor\\dfrac{m}{l}\\rfloor}\\right\\rfloor)\\)\uff0c\u4e4b\u540e\u505a\u8d77\u6765\u5c31\u5f88\u65b9\u4fbf\u4e86\u3002</p> <p>\u7136\u540e\u4e58\u4e0a\u7684 \\(f(i) =\\sum\\limits_{j = 1}^ij^2\\)\uff0c\u8fd9\u4e2a\u7528\u9ad8\u4e2d\u6570\u5b66\u6559\u7684\u6570\u5217\u77e5\u8bc6\u63a8\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0 \\(f(i) = \\dfrac{i(i + 1)(2i + 1)}{6}\\)\u3002</p> Code <p>\u4ee3\u7801\u91cc\u7684 F, G \u548c\u63cf\u8ff0\u91cc\u4e0d\u592a\u4e00\u6837\uff0c\u6ce8\u610f\u4e00\u4e0b\u5c31\u597d\u4e86\u3002</p> <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cctype&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int __int128_t\n\nusing namespace std;\nusing i64 = long long;\n\ntemplate &lt;typename __Tp&gt; void read(__Tp &amp;x) {\nint f = x = 0; char ch = getchar();\nfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = 1;\nfor (; isdigit(ch); ch = getchar()) x = (x &lt;&lt; 1) + (x &lt;&lt; 3) + (ch ^ 48);\nif (f) x = -x;\n}\nvoid read(char &amp;ch) { for (ch = getchar(); isspace(ch); ch = getchar()); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void read(__Tp1 &amp;x, __Tp2 &amp;... y) { read(x), read(y...); }\ntemplate &lt;typename __Tp&gt; void write(__Tp x) {\nif (x &lt; 0) putchar('-'), x = -x;\nif (x &gt; 9) write(x / 10);\nputchar(x % 10 + 48);\n}\nvoid write(char ch) { putchar(ch); }\nvoid write(const char *s) { for (; *s; ++s) putchar(*s); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void write(__Tp1 x, __Tp2 ... y) { write(x), write(y...); }\n\nconst int mod = 19940417ll;\nconst int inv2 = 9970209ll;\nconst int inv6 = 3323403ll;\n\nint n, m;\nint Sum1(int l, int r) { return (r - l + 1 + mod) % mod * (r + l) % mod * inv2 % mod; }\nint sum(int n) { return (n % mod) * ((n + 1) % mod) % mod * ((2ll * n + 1) % mod) % mod * inv6 % mod; }\nint Sum2(int l, int r) { return (sum(r) - sum(l - 1) + mod) % mod; } int F(int n, int k) {\nint ret = 0;\nint l = 1, r = 0;\nfor(; l &lt;= n &amp;&amp; k / l; ) {\nr = (k / (k / l)), r = min(r, n);\n(ret += Sum1(l, r) * (k / l) % mod) %= mod;\nl = r + 1;\n}\nreturn ret % mod;\n}\nint G(int n, int m) {\nint ret = 0;\nint l = 1, r = 0;\nfor(; l &lt;= n; ) {\nr = min((n / (n / l)), (m / (m / l)));\n(ret += Sum2(l, r) * (n / l) % mod * (m / l) % mod) %= mod;\nl = r + 1;\n}\nreturn ret % mod;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nread(n, m);\nif(n &gt; m) swap(n, m);\n\nint ans = (mod - n * n % mod * m % mod + mod) % mod;\n(ans += (n * n % mod - F(n, n) % mod) % mod * (m * m - F(m, m) % mod) % mod) %= mod;\n(ans += m * F(n, n) % mod + n * F(n, m) % mod) %= mod;\n(ans += mod - G(n, m) % mod) %= mod;\n\nwrite(ans % mod, endl);\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/math/number-theory/sqrt-decomposition/#extra", "title": "Extra", "text": "<p>\u73b0\u5728\u4f60\u53ef\u4ee5\u53bb\u5b66\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u4e86\uff01</p>"}, {"location": "algor/misc/count-points/", "title": "\u6570\u70b9", "text": ""}, {"location": "algor/misc/count-points/#_1", "title": "\u6cdb\u5316", "text": "<p>\u8fd9\u79cd\u95ee\u9898\u4e00\u822c\u90fd\u662f\uff0c\u6709\u4e00\u4e9b\u4e0d\u540c\u79cd\u7c7b\u7684\u9650\u5236\uff0c\u6bd4\u5982\u503c\u57df\u9650\u5236\u548c\u4e0b\u6807\u9650\u5236\u3002</p> <p>\u4f60\u9700\u8981\u5bf9\u6ee1\u8db3\u4e24\u79cd\u6761\u4ef6\u7684\u70b9/\u5143\u7d20\u8ba1\u6570\u3002</p> <p>\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u5957\u8def\u662f\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\u6570\u70b9\uff0c\u8003\u8651\u679a\u4e3e\u4e0b\u6807\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u503c\u57df\uff0c\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6240\u8c13\u52a8\u6001\u7684\u524d\u7f00\u548c\uff0c\u601d\u60f3\u6709\u70b9\u7c7b\u4f3c\u53ef\u6301\u4e45\u5316\u3002</p> <p>\u5982\u679c\u90fd\u662f\u4e0b\u6807\uff0c\u6bd4\u5982\u4f8b\u9898\u7b2c\u4e00\u9898\uff0c\u4e5f\u662f\u4e00\u4e2a\u9053\u7406\u3002</p> <p>\u6709\u7684 dp \u91cc\u9762\u4e5f\u4f1a\u9047\u5230\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u6bd4\u5982 The Battle Of Chibi \u90a3\u9898\u3002</p> <p>\u8fd9\u7c7b\u95ee\u9898\u7684\u672c\u8d28\u662f\uff0c\u8003\u8651\u5c06\u591a\u79cd\u9650\u5236\u5206\u79bb\u5f00\u6765\uff0c\u65b9\u4fbf\u8ba1\u7b97\uff0c\u56e0\u4e3a\u663e\u7136\u5206\u5f00\u6ee1\u8db3\u4e25\u683c\u5f31\u4e8e\u540c\u65f6\u6ee1\u8db3\u5427\uff08</p> <p>\u8fd9\u7c7b\u95ee\u9898\u597d\u50cf\u8fd8\u53ef\u4ee5 cdq\uff0c\u4e09\u7ef4\u53ca\u4ee5\u4e0a\u5c31\u9700\u8981\u4e86\uff0c\u4f46\u662f\u6211\u73b0\u5728\u6ca1\u6709\u5b66\u7684\u5fc5\u8981\uff0c\u5148\u5495\u7740\u3002</p>"}, {"location": "algor/misc/count-points/#_2", "title": "\u4f8b\u9898", "text": ""}, {"location": "algor/misc/count-points/#p2163-shoi2007", "title": "P2163 [SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c", "text": "<p>\u770b\u6765\u4e00\u822c\u7684\u96be\u9898\u662f\u96be\u4e0d\u5012\u8fd9\u4f4d\u56ed\u4e01\u7684\uff0c\u56fd\u738b\u6700\u540e\u6253\u7b97\u7528\u8f66\u8f6e\u6218\u6765\u6d88\u8017\u4ed6\u7684\u5b9e\u529b\uff1a \u201c\u5e74\u8f7b\u4eba\uff0c\u5728\u6211\u7684\u82b1\u56ed\u91cc\u6709 \\(n\\) \u68f5\u6811\uff0c\u6bcf\u4e00\u68f5\u6811\u53ef\u4ee5\u7528\u4e00\u4e2a\u6574\u6570\u5750\u6807\u6765\u8868\u793a\uff0c\u4e00\u4f1a\u513f\uff0c\u6211\u7684 \\(m\\) \u4e2a\u9a91\u58eb\u4eec\u4f1a\u6765\u8f6e\u756a\u8be2\u95ee\u4f60\u67d0\u4e00\u4e2a\u77e9\u9635\u5185\u6709\u591a\u5c11\u6811\uff0c\u5982\u679c\u4f60\u4e0d\u80fd\u7acb\u5373\u7b54\u5bf9\uff0c\u4f60\u5c31\u51c6\u5907\u8d70\u4eba\u5427\uff01\u201d\u8bf4\u5b8c\uff0c\u56fd\u738b\u6c14\u547c\u547c\u5730\u5148\u8d70\u4e86\u3002</p> <p>\u8fd9\u4e0b\u8f6e\u5230\u56ed\u4e01\u50bb\u773c\u4e86\uff0c\u4ed6\u6ca1\u6709\u51c6\u5907\u8fc7\u8fd9\u6837\u7684\u95ee\u9898\u3002\u6240\u5e78\u7684\u662f\uff0c\u4f5c\u4e3a\u201c\u5168\u56fd\u56ed\u4e01\u4fdd\u62a4\u8054\u76df\u201d\u7684\u4f1a\u957f\u2014\u2014\u4f60\uff0c\u53ef\u4ee5\u6210\u4e3a\u4ed6\u7684\u6700\u540e\u4e00\u6839\u6551\u547d\u7a3b\u8349\u3002</p> <p>\u6570\u636e\u8303\u56f4 5e5\uff0c\u503c\u57df 1e7\u3002</p> <p>\u8fd9\u4e2a\u5c31\u662f\u677f\u5b50\u4e8c\u7ef4\u6570\u70b9\u5427\u611f\u89c9\uff0c\u5c31\u76f4\u63a5\u679a\u4e3e \\(x\\)\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 \\(y\\)\u3002</p> <p>\u95ee\u9898\u672c\u8d28\u4e0a\u53ef\u4ee5\u5206\u5f00\u8f6c\u5316\u4e3a\u4e24\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u524d\u7f00\u548c\uff0c\u4f46\u662f\u4e8c\u7ef4\u524d\u7f00\u548c\u5bc4\u4e86\uff0c\u7a7a\u95f4\u5f00\u4e0d\u4e0b\uff0c\u76f4\u63a5\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u4e5f\u5bc4\u4e86\u3002</p> <p>\u6240\u4ee5\u4f60\u8003\u8651\u679a\u4e3e\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u53e6\u5916\u4e00\u4e2a\u7ef4\u5ea6\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002</p> <p>\u5176\u5b9e\u611f\u89c9\u8fd9\u4e2a\u9898\u677f\u5b50\u7684\u6837\u5b50\u4e0d\u662f\u5f88\u50cf\uff0c\u5e94\u8be5\u770b\u4e0b\u9762\u4e24\u4e2a\u9898\u3002</p> Code <pre><code>\u8fd9\u91cc\u6ca1\u6709\u4ee3\u7801\u3002\n</code></pre>"}, {"location": "algor/misc/count-points/#abc283f-permutation-distance", "title": "ABC283F - Permutation Distance", "text": "<p>link</p> <p>\u8fd9\u9898\u8981\u8003\u8651\u62c6\u4e00\u4e0b\uff0c\u5206\u5f00\u6765\u7b97\u3002</p>"}, {"location": "algor/misc/count-points/#20230111c-a", "title": "20230111C - A", "text": "<p>link</p> <p>\u8fd9\u9898\u6709\u989d\u5916\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u89e3\u51b3\u3002</p>"}, {"location": "algor/misc/expression/", "title": "\u8868\u8fbe\u5f0f\u6c42\u503c", "text": "<p>\u6ca1\u5f00\u5de5</p>"}, {"location": "algor/misc/mo/", "title": "\u666e\u901a\u83ab\u961f", "text": ""}, {"location": "algor/misc/mo/#_1", "title": "\u6cdb\u5316", "text": "<p>\u8fd9\u7c7b\u95ee\u9898\u7684\u7279\u70b9\u90fd\u662f\uff0c\u4e00\u822c\u4e0d\u5177\u6709\u533a\u95f4\u7684\u53ef\u52a0\u53ef\u51cf\u6027\uff0c\u4e14\u8f83\u96be\u5408\u5e76\u7b54\u6848\u3002</p> <p>\u8fd9\u4e5f\u5bfc\u81f4\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u7b49\u7b97\u6cd5\u5f88\u96be\u5904\u7406\u8fd9\u4e9b\u8be2\u95ee\u3002</p> <p>\u6240\u4ee5\u6700\u65e9\u5728 codeforces \u4e0a\u51fa\u73b0\u7c7b\u4f3c\u7684\u95ee\u9898\u65f6\uff0c\u9ad8\u624b\u4eec\u60f3\u5230\u4e86\u4f7f\u7528\u5206\u5757\u7684\u601d\u60f3\u3002</p> <p>\u5e76\u4e14\u8fd9\u7c7b\u95ee\u9898\u662f\u79bb\u7ebf\u4e0d\u5e26\u4fee\u7684\uff0c\u6240\u4ee5\u4ed6\u4eec\u5c31\u60f3\u5230\u4e86\u5bf9\u8be2\u95ee\u8fdb\u884c\u5206\u5757\u3002</p>"}, {"location": "algor/misc/mo/#_2", "title": "\u5e94\u7528", "text": "<p>\u4e3b\u8981\u7684\u4e09\u4e2a\u601d\u60f3\u662f\uff1a</p> <ol> <li>\u5c06\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u3002</li> <li> <p>\u5c06\u8be2\u95ee\u5206\u5757\u3002    \u7136\u540e\u6309\u7167\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\u7684\u7f16\u53f7\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002</p> </li> <li> <p>\u6392\u5e8f\u540e\uff0c\u5f53\u524d\u8be2\u95ee\u7b54\u6848\u5c06\u5728\u4e0a\u4e00\u4e2a\u8be2\u95ee\u7684\u57fa\u7840\u4e0a\u5f97\u5230\uff0c\u65b9\u5f0f\u662f\u66b4\u529b\u79fb\u52a8\u5de6\u53f3\u7aef\u70b9\uff0c\u8ba1\u7b97\u53d8\u5316\u7684\u8d21\u732e\u3002</p> </li> </ol> <p>\uff08\u5b9e\u9645\u4e0a\u8fd8\u662f\u5bf9\u5e8f\u5217\u8fdb\u884c\u5206\u5757\uff0c\u4e0d\u8fc7\u5206\u5757\u540e\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u6240\u5904\u7684\u5757\u7684\u7f16\u53f7\u5c06\u5f71\u54cd\u4e4b\u540e\u7684\u64cd\u4f5c\uff09</p> <p>\u5f52\u7eb3\u4e00\u4e0b\uff0c\u53ea\u8981\u5f53\u524d\u533a\u95f4 \\([l, r]\\) \u7684\u7b54\u6848\u53ef\u4ee5\u4ee5 \\(\\text{O}(1)\\) \u7684\u590d\u6742\u5ea6\u6269\u5c55\u5230\u76f8\u90bb\u7684\u533a\u95f4 \\([l,r-1],[l,r+1],[l-1,r],[l+1,r]\\)\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u5206\u5757\u7684\u601d\u60f3\uff0c\u4f18\u5316\u66b4\u529b\u6269\u5c55\u7684\u8fc7\u7a0b\uff0c\u51cf\u5c11\u79fb\u52a8\u7684\u603b\u8ddd\u79bb\u4ee5\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u4e0b\u9762\u7ed9\u51fa\u4e00\u4efd\u6a21\u677f\u5e76\u505a\u89e3\u91ca\u8bf4\u660e\uff1a</p> Code <pre><code>int n, m, unit; // unit \u662f\u5757\u957f\uff0c\u4e00\u822c\u53d6\u6839\u53f7 n\u3002\nint a[si];\n\nstruct Query {\nint l, r, id;\nbool operator &lt; (const Query &amp;b) const {\nif((l / unit) != (b.l / unit)) return l &lt; b.l;\n// \u8fd9\u91cc\u548c\u5199 (l / unit) &lt; (b.l / unit) \u662f\u7b49\u4ef7\u7684\u3002\nreturn r &lt; b.r; }\n}ask[si];\n\nint ans, res[si]; // \u5b9e\u65f6\u7684\u7b54\u6848\uff0c\u6bcf\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\n\ninline void add(int pos) {} // \u52a0\u4e0a pos \u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u540e\uff0c\u7b54\u6848 ans \u4f1a\u5982\u4f55\u53d8\u5316\ninline void sub(int pos) {} // \u5220\u6389 pos \u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u540e\uff0c\u7b54\u6848 ans \u4f1a\u5982\u4f55\u53d8\u5316\n\nint main(){\n\ncin &gt;&gt; n &gt;&gt; m, unit = sqrt(n);\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\n\nfor(int i = 1; i &lt;= m; ++i) cin &gt;&gt; ask[i].l &gt;&gt; ask[i].r, ask[i].id = i;\nsort(ask + 1, ask + 1 + m);\n\nint l = 1, r = 0; // \u7ef4\u62a4\u7b54\u6848\u662f\u95ed\u533a\u95f4 [l, r] \u65f6\u7684\u5199\u6cd5\u3002\nfor(int i = 1; i &lt;= m; ++i) {\nQuery &amp;q = ask[i];\nwhile(l &gt; q.l) add(--l);\nwhile(r &lt; q.r) add(++r);\nwhile(l &lt; q.l) sub(l++);\nwhile(r &gt; q.r) sub(r--);\n// \u8fd9\u91cc\u7684\u79fb\u52a8\u987a\u5e8f\u662f\u6709\u8bb2\u7a76\u7684\uff0c\u4e0d\u80fd\u4e71\u641e\u3002\n\nres[q.id] = ans;\n}\n\nfor(int i = 1; i &lt;= m; ++i) cout &lt;&lt; res[i] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>Warning</p> <ol> <li>\u6b64\u5904\u7ef4\u62a4\u7684\u662f\u95ed\u533a\u95f4\uff0c\u6240\u4ee5\u521d\u59cb\u503c\u4e3a <code>l = 1, r = 0</code>\u3002</li> <li>\u6211\u79fb\u52a8\u6307\u9488\u7684\u5199\u6cd5\u662f\u6bd4\u8f83\u6807\u51c6\u7684\u4e00\u79cd\uff0c\u4e0d\u80fd\u4e71\u6539\uff0c\u5177\u4f53\u4e3a\u4ec0\u4e48\u4e0b\u9762\u4f1a\u8bf4\u3002</li> </ol> <p>\u5173\u4e8e\u6307\u9488\u79fb\u52a8\u7684\u987a\u5e8f</p> <p>OI-wiki \u4e0a\u63d0\u5230\u4e86\u6240\u6709\u7684\u53ef\u80fd\u79fb\u52a8\u65b9\u5f0f\uff0c\u5e76\u5217\u51fa\u4e86\u54ea\u4e00\u4e9b\u662f\u6b63\u786e\u7684\uff0c\u54ea\u4e00\u4e9b\u662f\u9519\u8bef\u7684\u3002</p> <p>\u6211\u4f7f\u7528\u7684\u662f <code>--l, ++r, l++, r--</code>\u3002</p> <p>\u8fd9\u548c\u5176\u5b83\u6b63\u786e\u505a\u6cd5\u7684\u5171\u540c\u70b9\u662f\uff0c\u5168\u90e8\u90fd\u662f\u5148\u6269\u5927\u533a\u95f4\uff0c\u7136\u540e\u518d\u5c06 \\(l,r\\) \u7f29\u5c0f\u5230\u4e0b\u4e00\u4e2a\u8be2\u95ee\u7684\u533a\u95f4 \\([l\\prime,r\\prime]\\)\u3002</p> <p>\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62 \\(l &gt; r + 1\\) \u7684\u60c5\u51b5\u51fa\u73b0\uff0c\u5982\u679c\u8fd9\u79cd\u60c5\u51b5\u51fa\u73b0\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u4e00\u4e2a\u5143\u7d20\u88ab\u52a0\u5165\u7684\u6b21\u6570\u662f\u8d1f\u6570\uff0c\u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\u3002</p> <p>\u4e3a\u4ec0\u4e48\u6709 ++ \u548c -- \u7684\u533a\u522b</p> <p>\u524d\u4e24\u6b21\u6269\u5c55\u662f\u6269\u5927\u533a\u95f4\uff0c\u4f1a\u8ba9\u626b\u5230\u7684\u5143\u7d20\u88ab\u52a0\u5165\u3002</p> <p>\u800c \\(l, r\\) \u672c\u6765\u5728\u7684\u4f4d\u7f6e\u662f\u5df2\u7ecf\u88ab\u52a0\u5165\u8fc7\u7684\uff0c\u6240\u4ee5\u8981\u5148\u76f4\u63a5\u79fb\u52a8\u6307\u9488\u4e4b\u540e\u518d\u52a0\u5165 \\(l - 1\\) \u548c \\(r + 1\\)\uff0c\u5e94\u5f53\u5199 <code>--l, ++r</code>\u3002</p> <p>\u540e\u4e24\u6b21\u6269\u5c55\u662f\u7f29\u5c0f\u533a\u95f4\uff0c\u4f1a\u8ba9\u626b\u5230\u7684\u5143\u7d20\u88ab\u8e22\u51fa\u3002</p> <p>\u800c \\(l, r\\) \u672c\u6765\u5728\u7684\u4f4d\u7f6e\u662f\u5df2\u7ecf\u88ab\u52a0\u5165\u8fc7\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5148\u8e22\u51fa \\(l, r\\) \u518d\u79fb\u52a8\u6307\u9488\uff0c\u5e94\u5f53\u5199 <code>l++, r--</code>\u3002</p> <p>\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(\\text{O}(n\\sqrt{n})\\) \u7684\uff08\u5047\u8bbe \\(n,m\\) \u540c\u9636\uff09\uff0c</p> <p>\u5177\u4f53\u8bc1\u660e\u6211\u662f\u4e0d\u4f1a\u7684\uff08\u6240\u4ee5\u8fd9\u91cc\u6458\u6284\u4e86 OI-wiki \u7684\u8bc1\u660e\u3002</p> Proof &amp; Analysis <p>\u4ee5\u4e0b\u7684\u60c5\u51b5\u5728 \\(n\\) \u548c \\(m\\) \u540c\u9636\u7684\u524d\u63d0\u4e0b\u8ba8\u8bba\u3002</p> <p>\u9996\u5148\u662f\u5206\u5757\u8fd9\u4e00\u6b65\uff0c\u8fd9\u4e00\u6b65\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(\\sqrt{n}\\cdot\\sqrt{n}\\log\\sqrt{n}+n\\log n)=O(n\\log n)\\);</p> <p>\u63a5\u7740\u5c31\u5230\u4e86\u83ab\u961f\u7b97\u6cd5\u7684\u7cbe\u9ad3\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u7528\u901a\u4fd7\u6613\u61c2\u7684\u521d\u4e2d\u65b9\u6cd5\u6765\u8bc1\u660e\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n\\sqrt{n})\\)\uff1b</p> <p>\u8bc1\uff1a\u4ee4\u6bcf\u4e00\u5757\u4e2d \\(L\\) \u7684\u6700\u5927\u503c\u4e3a \\(\\max_1,\\max_2,\\max_3, \\cdots , \\max_{\\lceil\\sqrt{n}\\rceil}\\)\u3002</p> <p>\u7531\u7b2c\u4e00\u6b21\u6392\u5e8f\u53ef\u77e5\uff0c\\(\\max_1 \\le \\max_2 \\le \\cdots \\le \\max_{\\lceil\\sqrt{n}\\rceil}\\)\u3002</p> <p>\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5757\u66b4\u529b\u6c42\u51fa\u7b2c\u4e00\u4e2a\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\u3002</p> <p>\u8003\u8651\u6700\u574f\u7684\u60c5\u51b5\uff0c\u5728\u6bcf\u4e00\u5757\u4e2d\uff0c\\(R\\) \u7684\u6700\u5927\u503c\u5747\u4e3a \\(n\\)\uff0c\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\u5747\u8981\u5c06 \\(L\\) \u7531 \\(\\max_{i - 1}\\) \u4fee\u6539\u81f3 \\(\\max_i\\)    \u6216\u7531 \\(\\max_i\\) \u4fee\u6539\u81f3 \\(\\max_{i - 1}\\)\u3002</p> <p>\u8003\u8651 \\(R\\)\uff1a\u56e0\u4e3a \\(R\\) \u5728\u5757\u4e2d\u5df2\u7ecf\u6392\u597d\u5e8f\uff0c\u6240\u4ee5\u5728\u540c\u4e00\u5757\u4fee\u6539\u5b8c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\u3002\u5bf9\u4e8e\u6240\u6709\u5757\u5c31\u662f \\(O(n\\sqrt{n})\\)\u3002</p> <p>\u91cd\u70b9\u5206\u6790 \\(L\\)\uff1a\u56e0\u4e3a\u6bcf\u4e00\u6b21\u6539\u53d8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f \\(O(\\max_i-\\max_{i-1})\\) \u7684\uff0c\u6240\u4ee5\u5728\u540c\u4e00\u5757\u4e2d\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\sqrt{n}\\    cdot(\\max_i-\\max_{i-1}))\\)\u3002</p> <p>\u5c06\u6bcf\u4e00\u5757 \\(L\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5408\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a</p> <p>\u5bf9\u4e8e \\(L\\) \u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a</p> \\[ \\begin{aligned} &amp; O(\\sqrt{n}(\\max{}_1-1)+\\sqrt{n}(\\max{}_2-\\max{}_1)+\\sqrt{n}(\\max{}_3-\\max{}_2)+\\cdots+\\sqrt{n}(\\  max{}_{\\lceil\\sqrt{n}\\rceil}-\\max{}_{\\lceil\\sqrt{n}\\rceil-1))} \\\\ = &amp; O(\\sqrt{n}\\cdot(\\max{}_1-1+\\max{}_2-\\max{}_1+\\max{}_3-\\max{}_2+\\cdots+\\max{}_{\\lceil\\sqrt{n}\\   rceil-1}-\\max{}_{\\lceil\\sqrt{n}\\rceil-2}+\\max{}_{\\lceil\\sqrt{n}\\rceil}-\\max{}_{\\lceil\\sqrt{n}\\rceil-    1)}) \\\\ = &amp; O(\\sqrt{n}\\cdot(\\max{}_{\\lceil\\sqrt{n}\\rceil-1}))\\\\ \\end{aligned} \\] <p>\uff08\u88c2\u9879\u6c42\u548c\uff09</p> <p>\u7531\u9898\u53ef\u77e5 \\(\\max_{\\lceil\\sqrt{n}\\rceil}\\) \u6700\u5927\u4e3a \\(n\\)\uff0c\u6240\u4ee5 \\(L\\) \u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f\u60c5\u51b5\u4e0b\u4e3a \\(O(n\\sqrt{n})\\)\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u83ab\u961f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n\\sqrt{n})\\)\uff1b</p> <p>\u4f46\u662f\u5bf9\u4e8e \\(m\\) \u7684\u5176\u4ed6\u53d6\u503c\uff0c\u5982 \\(m&lt;n\\)\uff0c\u5206\u5757\u65b9\u5f0f\u9700\u8981\u6539\u53d8\u624d\u80fd\u53d8\u7684\u66f4\u4f18\u3002</p> <p>\u600e\u4e48\u5206\u5757\u5462\uff1f</p> <p>\u6211\u4eec\u8bbe\u5757\u957f\u5ea6\u4e3a \\(S\\)\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u591a\u4e2a\u5728\u540c\u4e00\u5757\u5185\u7684\u8be2\u95ee\uff0c\u632a\u52a8\u7684\u8ddd\u79bb\u5c31\u662f \\(n\\)\uff0c\u4e00\u5171 \\(\\displaystyle \\frac{n}{S}\\)     \u4e2a\u5757\uff0c\u79fb\u52a8\u7684\u603b\u6b21\u6570\u5c31\u662f \\(\\displaystyle \\frac{n^2}{S}\\)\uff0c\u79fb\u52a8\u53ef\u80fd\u8de8\u8d8a\u5757\uff0c\u6240\u4ee5\u8fd8\u8981\u52a0\u4e0a\u4e00\u4e2a \\(mS\\)     \u7684\u590d\u6742\u5ea6\uff0c\u603b\u590d\u6742\u5ea6\u4e3a \\(\\displaystyle O\\left(\\frac{n^2}{S}+mS\\right)\\)   \uff0c\u6211\u4eec\u8981\u8ba9\u8fd9\u4e2a\u503c\u5c3d\u91cf\u5c0f\uff0c\u90a3\u4e48\u5c31\u8981\u5c06\u8fd9\u4e24\u4e2a\u9879\u5c3d\u91cf\u76f8\u7b49\uff0c\u53d1\u73b0 \\(S\\) \u53d6 \\(\\displaystyle \\frac{n}{\\sqrt{m}}\\)   \u662f\u6700\u4f18\u7684\uff0c\u6b64\u65f6\u590d\u6742\u5ea6\u4e3a \\(\\displaystyle O\\left(\\frac{n^2}{\\displaystyle \\frac{n}{\\sqrt{m}}}+m\\left(\\frac{n   }{\\sqrt{m}}\\right)\\right)=O(n\\sqrt{m})\\)\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u5757\u957f\u5ea6\u7684\u8bbe\u5b9a\u4e0d\u51c6\u786e\uff0c\u5219\u83ab\u961f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u53d7\u5230\u5f88\u5927\u5f71\u54cd\u3002\u4f8b\u5982\uff0c\u5982\u679c \\(m\\) \u4e0e \\(\\sqrt n\\) \u540c\u9636\uff0c\u5e76\u4e14\u5757\u957f\u8bef\u8bbe\u4e3a   \\(\\sqrt n\\)\uff0c\u5219\u53ef\u4ee5\u5f88\u5bb9\u6613\u6784\u9020\u51fa\u4e00\u7ec4\u6570\u636e\u4f7f\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n \\sqrt n)\\) \u800c\u4e0d\u662f\u6b63\u786e\u7684 \\(O(n)\\)\u3002</p> <p>\u83ab\u961f\u7b97\u6cd5\u770b\u8d77\u6765\u5341\u5206\u66b4\u529b\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u83ab\u961f\u7b97\u6cd5\u7684\u5206\u5757\u6392\u5e8f\u65b9\u6cd5\u770b\u8d77\u6765\u5f88\u7c97\u7cd9\u3002\u6211\u4eec\u4f1a\u60f3\u5230\u901a\u8fc7\u770b\u4e0a\u53bb\u66f4\u7cbe\u7ec6\u7684\u6392\u5e8f\u65b9\u6cd5\u5bf9\u6240\u6709 \u533a\u95f4\u6392\u5e8f\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u628a\u6240\u6709\u533a\u95f4 \\([l, r]\\) \u770b\u6210\u5e73\u9762\u4e0a\u7684\u70b9 \\((l, r)\\)\uff0c\u5e76\u5bf9\u6240\u6709\u70b9\u5efa\u7acb\u66fc\u54c8\u987f\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6bcf\u6b21\u6cbf\u7740\u66fc\u54c8\u987f\u6700\u5c0f \u751f\u6210\u6811\u7684\u8fb9\u5728\u8be2\u95ee\u4e4b\u95f4\u8f6c\u79fb\u7b54\u6848\u3002\u8fd9\u6837\u770b\u8d77\u6765\u53ef\u4ee5\u6539\u5584\u83ab\u961f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5bf9\u8be2\u95ee\u5206\u5757\u6392\u5e8f\u7684\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u754c\u5df2 \u7ecf\u662f\u6700\u4f18\u7684\u4e86\u3002</p> <p>\u5047\u8bbe \\(n, m\\) \u540c\u9636\u4e14 \\(n\\) \u662f\u5b8c\u5168\u5e73\u65b9\u6570\u3002\u6211\u4eec\u8003\u8651\u5f62\u5982 \\([a \\sqrt n, b \\sqrt n](1 \\le a, b \\le \\sqrt n)\\)    \u7684\u533a\u95f4\uff0c\u8fd9\u6837\u7684\u533a\u95f4\u4e00\u5171\u6709 \\(n\\) \u4e2a\u3002\u5982\u679c\u628a\u6240\u6709\u7684\u533a\u95f4\u770b\u6210\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u5219\u4e24\u70b9\u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u6070\u597d\u4e3a\u4e24\u533a\u95f4\u7684\u8f6c\u79fb\u4ee3\u4ef7\uff0c\u5e76\u4e14\u4efb   \u610f\u4e24\u4e2a\u533a\u95f4\u4e4b\u95f4\u7684\u6700\u5c0f\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a \\(\\sqrt n\\)\uff0c\u6240\u4ee5\u5904\u7406\u6240\u6709\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u5c0f\u4e3a \\(O(n \\sqrt n)\\) \u3002\u5176\u5b83\u60c5\u51b5\u7684\u6570\u636e\u6784\u9020\u65b9\u6cd5\u4e0e\u4e4b\u7c7b\u4f3c\u3002</p> <p>\u83ab\u961f\u7b97\u6cd5\u8fd8\u6709\u4e00\u4e2a\u7279\u70b9\uff1a\u5f53 \\(n\\) \u4e0d\u53d8\u65f6\uff0c\\(m\\) \u8d8a\u5927\uff0c\u5904\u7406\u6bcf\u6b21\u8be2\u95ee\u7684\u5e73\u5747\u8f6c\u79fb\u4ee3\u4ef7\u5c31\u8d8a\u5c0f\u3002\u4e00\u4e9b\u5176\u4ed6\u7684\u79bb\u7ebf\u7b97\u6cd5\u4e5f\u5177\u6709\u540c\u6837\u7684\u7279\u70b9\uff08\u5982\u6c42 LCA \u7684 Tarjan \u7b97\u6cd5\uff09\uff0c\u4f46\u662f\u83ab\u961f\u7b97\u6cd5\u7684\u5e73\u5747\u8f6c\u79fb\u4ee3\u4ef7\u968f \\(m\\) \u7684\u53d8\u5316\u6700\u660e\u663e\u3002</p>"}, {"location": "algor/misc/mo/#_3", "title": "\u5947\u5076\u6027\u4f18\u5316", "text": "<p>\u6ca1\u6709\u4f18\u5316\u7684\u83ab\u961f\u7684\u6307\u9488\u79fb\u52a8\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff08\u611f\u6027\u7406\u89e3\uff09\uff1a</p> <pre><code>-----------------------&gt;|\n           |&lt;-----------|\n           |--o-------o-----&gt;\no \u662f\u6211\u4eec\u5f53\u524d\u6240\u8ba8\u8bba\u7684\u8be2\u95ee\u5de6\u53f3\u7aef\u70b9\u3002\n</code></pre> <p>\u7136\u540e\u5728\u7b2c\u4e09\u6b21\u79fb\u8fc7\u6765\u7684\u65f6\u5019\u624d\u4f1a\u66f4\u65b0\u7b54\u6848\u3002</p> <p>\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0\u662f\uff0c\u5f53\u591a\u4e2a\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u4e0d\u5728\u540c\u4e00\u5757\u65f6\uff0c\\(r\\) \u6307\u9488\u9700\u8981\u591a\u6b21\u5f80\u8fd4\u79fb\u52a8\uff0c\u591a\u8d70\u4e86\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u8def\u7a0b\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\uff0c\u5bf9\u4e8e\u7f16\u53f7\u4e3a\u5947\u6570\u7684\u5757\uff0c\u5757\u5185\u6309 \\(r\\) \u5347\u5e8f\u6392\u5e8f\uff0c\u7f16\u53f7\u4e3a\u5076\u6570\u7684\u5757\uff0c\u5757\u5185\u6309 \\(r\\) \u964d\u5e8f\u6392\u5e8f\u3002</p> <p>\u753b\u56fe\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837\u53bb\u6389\u4e86\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u8def\u7a0b</p> <p>\u6bd4\u5982\u4e0a\u9762\u7684\u8fd9\u4e2a\u56fe\uff0c\u672c\u6765\u5728\u7b2c\u4e09\u6b21\u626b\u8fc7\u6211\u4eec\u6240\u8ba8\u8bba\u7684\u8be2\u95ee\u65f6\u624d\u66f4\u65b0\u7684\u7b54\u6848\uff0c\u5230\u7b2c\u4e8c\u6b21\u626b\u8fc7\u6765\u5c31\u66f4\u65b0\u4e86\u3002</p> <pre><code>-----------------------&gt;|\n           |&lt;-o-------o-|\n</code></pre> <p>\u5b9e\u6d4b\u8dd1\u7684\u98de\u5feb\uff0c\u53ef\u4ee5\u4f18\u5316 \\(30\\% \\sim 35\\%\\) \u7684\u901f\u5ea6\u3002</p> \u5b9e\u73b0 <pre><code>    bool operator &lt; (const Query &amp;b) const {\nif((l / unit) != (b.l / unit)) return l &lt; b.l;\nif((l / unit) &amp; 1)\nreturn r &lt; b.r;\nreturn r &gt; b.r;\n} // \u5947\u5076\u6027\u4f18\u5316\u7684\u5199\u6cd5\n</code></pre>"}, {"location": "algor/misc/mo/#_4", "title": "\u4f8b\u9898", "text": "<p>\u7528\u4e24\u9053\u677f\u5b50\u9898\u770b\u4e00\u770b\u83ab\u961f\u7684\u5177\u4f53\u5b9e\u73b0\u548c\u4e00\u4e9b\u7ec6\u8282\u3002</p>"}, {"location": "algor/misc/mo/#20220429-c-t3", "title": "20220429 C \u7ec4\u6a21\u62df\u8d5b T3", "text": "\u9898\u76ee\u63cf\u8ff0 <p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u957f\u5ea6\u4e3a \\(n\\)\uff0c\\(q\\) \u6b21\u8be2\u95ee\u3002</p> <p>\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4 \\([l,r]\\) \uff0c\u6c42\u8fd9\u4e2a\u533a\u95f4\u91cc\u51fa\u73b0\u6b21\u6570\u4e3a\u5947\u6570\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\\(n,q\\le 10^5, |a_i| \\le 10^9\\)\u3002</p> \u9898\u89e3 <p>\u83ab\u961f\u677f\u5b50\uff0c\u751a\u81f3\u6bd4\u5c0f Z \u7684\u889c\u5b50\u8fd8\u677f\u5b50\u3002</p> <p>\u8003\u8651\u76f4\u63a5\u83ab\u961f\uff0c\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u8bb0\u5f55\u8d21\u732e/\u7b54\u6848\u7684\u53d8\u5316\u3002</p> <p>\u5148\u79bb\u6563\u5316 \\(a_i\\) \u65b9\u4fbf\u7edf\u8ba1\u3002</p> <p>\u5f00\u4e00\u4e2a\u53d8\u91cf \\(ans\\)\uff0c\u8bb0\u5f55\u5b9e\u65f6\u7684\u7b54\u6848\uff0c\u53e6\u5916\u5f00\u4e00\u4e2a\u6570\u7ec4 \\(cnt[i]\\) \u8bb0\u5f55\u6bcf\u4e00\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002</p> <p>\u5982\u679c\u53d8\u52a8 \\(cnt[i]\\) \u4e4b\u540e\uff0c\\(cnt[i]\\) \u53d8\u4e3a\u5947\u6570\uff0c\\(ans+1\\)\uff0c\u53cd\u4e4b \\(ans-1\\) \u5373\u53ef\u3002</p> Code <pre><code>#include &lt;cmath&gt;\n#include &lt;bitset&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint n, Q, unit;\nint a[si];\nstruct Query {\nint l, r, id;\nbool operator &lt; (const Query &amp;b) const {\nif((l / unit) != (b.l / unit)) return l &lt; b.l;\nif((l / unit) &amp; 1) return r &lt; b.r;\nreturn r &gt; b.r; } }ask[si];\n\nint cnt[si];\nint res[si], ans = 0;\n\ninline void add(int pos) { cnt[a[pos]] ++;\nif(cnt[a[pos]] &amp; 1) ans ++;\nelse ans --;\n}\ninline void sub(int pos) { cnt[a[pos]] --;\nif(cnt[a[pos]] &amp; 1) ans ++;\nelse ans --;\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nstd::vector&lt;int&gt; v; v.clear();\ncin &gt;&gt; n, unit = sqrt(n);\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], v.emplace_back(a[i]);\nsort(v.begin(), v.end()), v.erase(unique(v.begin(), v.end()), v.end());\nfor(int i = 1; i &lt;= n; ++i)\na[i] = lower_bound(v.begin(), v.end(), a[i]) - v.begin();\n\ncin &gt;&gt; Q;\nfor(int i = 1; i &lt;= Q; ++i) cin &gt;&gt; ask[i].l &gt;&gt; ask[i].r,\nask[i].id = i;\nsort(ask + 1, ask + 1 + Q);\n\nint l = 1, r = 0;\nfor(int i = 1; i &lt;= Q; ++i) {\nQuery &amp;q = ask[i];\nwhile(l &gt; q.l) add(--l);\nwhile(r &lt; q.r) add(++r);\nwhile(l &lt; q.l) sub(l++);\nwhile(r &gt; q.r) sub(r--);\n\nres[q.id] = ans;\n}\n\nfor(int i = 1; i &lt;= Q; ++i)\ncout &lt;&lt; res[i] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/misc/mo/#z", "title": "[\u56fd\u5bb6\u96c6\u8bad\u961f] \u5c0f Z \u7684\u889c\u5b50", "text": "\u9898\u76ee\u63cf\u8ff0 <p>\u4f5c\u4e3a\u4e00\u4e2a\u751f\u6d3b\u6563\u6f2b\u7684\u4eba\uff0c\u5c0f Z \u6bcf\u5929\u65e9\u4e0a\u90fd\u8981\u8017\u8d39\u5f88\u4e45\u4ece\u4e00\u5806\u4e94\u989c\u516d\u8272\u7684\u889c\u5b50\u4e2d\u627e\u51fa\u4e00\u53cc\u6765\u7a7f\u3002\u7ec8\u4e8e\u6709\u4e00\u5929\uff0c\u5c0f Z \u518d\u4e5f\u65e0\u6cd5\u5fcd\u53d7\u8fd9\u607c\u4eba\u7684\u627e\u889c\u5b50\u8fc7\u7a0b\uff0c\u4e8e\u662f\u4ed6\u51b3\u5b9a\u542c\u5929\u7531\u547d\u2026\u2026</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5c0f Z \u628a\u8fd9 \\(N\\) \u53ea\u889c\u5b50\u4ece \\(1\\) \u5230 \\(N\\) \u7f16\u53f7\uff0c\u7136\u540e\u4ece\u7f16\u53f7 \\(L\\) \u5230 \\(R\\) \u7684\u6240\u6709\u889c\u5b50\u4e2d\u62bd\u51fa\u4e24\u53ea\u3002</p> <p>\u5c3d\u7ba1\u5c0f Z \u5e76\u4e0d\u5728\u610f\u4e24\u53ea\u889c\u5b50\u662f\u4e0d\u662f\u5b8c\u6574\u7684\u4e00\u53cc\uff0c\u751a\u81f3\u4e0d\u5728\u610f\u4e24\u53ea\u889c\u5b50\u662f\u5426\u4e00\u5de6\u4e00\u53f3\uff0c\u4ed6\u5374\u5f88\u5728\u610f\u889c\u5b50\u7684\u989c\u8272\uff0c\u6bd5\u7adf\u7a7f\u4e24\u53ea\u4e0d\u540c\u8272\u7684\u889c\u5b50\u4f1a\u5f88\u5c34\u5c2c\u3002</p> <p>\u4f60\u7684\u4efb\u52a1\u4fbf\u662f\u544a\u8bc9\u5c0f Z\uff0c\u4ed6\u6709\u591a\u5927\u7684\u6982\u7387\u62bd\u5230\u4e24\u53ea\u989c\u8272\u76f8\u540c\u7684\u889c\u5b50\u3002\u5f53\u7136\uff0c\u5c0f Z \u5e0c\u671b\u8fd9\u4e2a\u6982\u7387\u5c3d\u91cf\u9ad8\uff0c\u6240\u4ee5\u4ed6\u53ef\u80fd\u4f1a\u8be2\u95ee\u591a\u4e2a \\([L,R]\\) \u4ee5\u65b9\u4fbf\u81ea\u5df1\u9009\u62e9\u3002</p> <p>\u7136\u800c\u6570\u636e\u4e2d\u6709 \\(L=R\\) \u7684\u60c5\u51b5\uff0c\u8bf7\u7279\u5224\u8fd9\u79cd\u60c5\u51b5\uff0c\u8f93\u51fa 0/1\u3002</p> \u9898\u89e3 <p>\u53ef\u4ee5\u7b97\u7684\u4e0a\u83ab\u961f\u7684\u8d77\u6e90\u9898\u76ee\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u533a\u95f4 \\([l,r]\\) \u7684\u7b54\u6848\u5e94\u5f53\u662f\u4ec0\u4e48\uff1a \u65b9\u6848\u6570\u4e00\u5171\u6709 \\(\\text{C}^{2}_{r - l + 1} = \\dfrac{(r-l+1)\\times(r-l)}{2}\\) \u79cd\u3002</p> <p>\u800c\u5047\u8bbe\u8fd9\u4e2a\u533a\u95f4\u91cc\u989c\u8272 \\(c\\) \u7684\u889c\u5b50\u6709 \\(num[c]\\) \u79cd\uff0c\u6bcf\u79cd\u989c\u8272\u7684\u7b54\u6848\u5c31\u662f \\(\\text{C}^{2}_{num[c]} = \\dfrac{num[c]\\times(num[c]-1)}{2}\\) \u79cd\u3002</p> <p>\u6240\u4ee5\u80fd\u62bd\u5230\u540c\u8272\u7684\u603b\u65b9\u6848\u6570\u662f \\(\\sum_c \\dfrac{num[c]\\times(num[c]-1)}{2}\\) \u79cd\u3002</p> <p>\u90a3\u4e48\u4e00\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u5c31\u662f \\(\\dfrac{\\sum_c \\dfrac{num[c]\\times(num[c]-1)}{2}}{\\dfrac{(r-l+1)\\times(r-l)}{2}}\\)\u3002</p> <p>\u9898\u76ee\u8981\u6c42\u7ea6\u5206\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u8bb0\u5f55\u5b83\u7684\u5206\u5b50\u548c\u5206\u6bcd\uff0c\u6700\u540e\u7ea6\u5206\u5373\u53ef\uff0c\u9898\u76ee\u8981\u6c42\u7684 \\(L = R\\) \u7684\u60c5\u51b5\u4e5f\u9700\u8981\u7279\u5224\uff0c\u539f\u56e0\u663e\u7136\u3002</p> <p>\u90a3\u4e48\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u662f\u53ef\u4ee5 \\(\\text{O}(1)\\) \u8f6c\u79fb\u5230\u76f8\u90bb\u533a\u95f4\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u83ab\u961f\u5373\u53ef\u3002</p> Code <pre><code>#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst i64 si = 5e4 + 10;\n\ni64 n, m, unit;\ni64 c[si], cnt[si];\nstruct Query {\ni64 l, r, id;\nbool operator &lt; (const Query &amp;b) const {\nif((l / unit) != (b.l / unit)) return l &lt; b.l;\nif((l / unit) &amp; 1)\nreturn r &lt; b.r;\nreturn r &gt; b.r;\n}\n}ask[si];\n\ni64 sum = 0;\ni64 nume[si], deno[si];\ni64 gcd(i64 a, i64 b) {\nreturn b ? gcd(b, a % b) : a;\n}\n\nvoid add(i64 pos) {\ni64 now = c[pos];\nsum -= (cnt[now] * (cnt[now] - 1)) / 2;\ncnt[now] ++;\nsum += (cnt[now] * (cnt[now] - 1)) / 2;\n}\nvoid sub(i64 pos) {\ni64 now = c[pos];\nsum -= (cnt[now] * (cnt[now] - 1)) / 2;\ncnt[now] --;\nsum += (cnt[now] * (cnt[now] - 1)) / 2;\n}\n// \u66f4\u65b0\u7b54\u6848\u628a\u539f\u6765\u7684\u51cf\u53bb\uff0c\u7136\u540e\u52a0\u4e0a\u65b0\u7684\u5373\u53ef\u3002\n\nint main() {    // freopen(\"1.in\", \"r\", stdin);\n// freopen(\"1.ans\", \"w\", stdout);\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(cnt, 0, sizeof cnt);\n\ncin &gt;&gt; n &gt;&gt; m, unit = sqrt(n);\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; c[i];\n\nfor(int i = 1; i &lt;= m; ++i) cin &gt;&gt; ask[i].l &gt;&gt; ask[i].r, ask[i].id = i;\nsort(ask + 1, ask + 1 + m);\n\ni64 l = 1, r = 0;\nfor(int i = 1; i &lt;= m; ++i) {\nQuery &amp;q = ask[i];\n\nif(q.l == q.r) {\nnume[q.id] = 0, deno[q.id] = 1;\ncontinue;\n}\n\nwhile(l &gt; q.l) add(--l);\nwhile(r &lt; q.r) add(++r);\nwhile(l &lt; q.l) sub(l++);\nwhile(r &gt; q.r) sub(r--);\n\nnume[q.id] = sum, deno[q.id] = (r - l + 1) * (r - l) / 2;\nif(sum == 0) deno[q.id] = 1ll;\n}\n\nfor(int i = 1; i &lt;= m; ++i) {\nif(nume[i] != 0) {\ni64 com = gcd(nume[i], deno[i]);\nnume[i] /= com, deno[i] /= com;\n}\ncout &lt;&lt; nume[i] &lt;&lt; \"/\" &lt;&lt; deno[i] &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/misc/mt19937/", "title": "mt19937", "text": ""}, {"location": "algor/misc/mt19937/#_1", "title": "\u6982\u8ff0", "text": "<p>\u88ab\u677e\u672c\u5148\u751f\u548c\u897f\u6751\u5148\u751f\u4e8e 1998 \u5e74\u8bbe\u8ba1\u51fa\u6765\u3002</p> <p>\u662f\u4e00\u4e2a\u751f\u6210\u9ad8\u8d28\u91cf\uff0c\u5206\u5e03\u5747\u5300\u7684\u968f\u673a\u6570\u7684\u7b97\u6cd5\uff08\u867d\u7136\u5728 C++11 \u5f53\u4e2d\u662f\u4e00\u4e2a class\uff09</p> <p>\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u641e\u5230 <code>rand()</code> \u7684\u5b9e\u73b0\uff1a</p> <pre><code>static unsigned long next = 1;\n\n/* RAND_MAX assumed to be 32767 */\nint myrand(void) {\nnext = next * 1103515245 + 12345;\nreturn((unsigned)(next/65536) % 32768);\n}\n\nvoid mysrand(unsigned seed) {\nnext = seed;\n}\n// \u5229\u7528\u7ebf\u6027\u540c\u540c\u4f59\u6cd5\u5b9e\u73b0\n</code></pre> <p>\u53d1\u73b0\u8fd9\u4e2a\u73a9\u610f\u513f\u7684\u5faa\u73af\u8282\u53ea\u6709 \\(32767\\)\u3002</p> <p>\u4ec0\u4e48\u610f\u601d\uff1f</p> <p>\u5c31\u662f\u5728\u5f53\u4f60\u9700\u8981\u751f\u6210\u5f88\u5927\u7684\u968f\u673a\u6570\u7684\u65f6\u5019\uff08\u6bd4\u5982\u6a21\u62df\u9000\u706b\uff09\uff0c\u4ed6\u5f88\u5bb9\u6613\u751f\u6210\u7684\u65f6\u5019\u5faa\u73af\u51fa\u73b0\u67d0\u4e2a\u6570\u3002</p> <p>\u56de\u6765\u770b mt19937\u3002</p> <p>\u4e3a\u5565\u8981\u53eb mt19937 \u5462\uff1f</p> <p>\u56e0\u4e3a\u5b83\u7684\u5faa\u73af\u8282\u662f \\(2^{19937}-1\\)\uff0c\u4e5f\u5c31\u662f\u6885\u68ee\uff08mt\uff09\u6570\u3002</p> <p>\u7528\u5b83\uff0c\u4f60\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e9b\u5f88\u6709\u8d28\u91cf\u7684\uff0c\u5206\u5e03\u5747\u5300\u7684\u968f\u673a\u6570\u3002</p>"}, {"location": "algor/misc/mt19937/#_2", "title": "\u4f7f\u7528\u65b9\u5f0f", "text": "<p>\u7528\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>#include&lt;random&gt;\n#include&lt;iostream&gt;\nusing namespace std;\n\nint main(){\nstd::random_device seedgen; // \u975e\u786e\u5b9a\u7684\u5747\u5300\u968f\u673a\u4f4d\u751f\u6210\u5668\n// \u5728\u71b5\u6c60\u8017\u5c3d\u4e4b\u524d\u975e\u5e38\u9ad8\u6548\n// \u6240\u4ee5\u7528\u6765\u5f53\u79cd\u5b50\u751f\u6210\u5668\n// NOIP \u8003\u573a\u6700\u597d\u4e0d\u7528\uff1f\n// \u8fd9\u4e2a\u4e1c\u897f\u4f3c\u4e4e\u5728 32bit \u4e0a\u4f1a\u5bc4\uff08\u751f\u6210\u540c\u6837\u7684\u6570\u636e\uff09\uff0c\n// \u4f46\u662f win\u4e0b\u7684 msys2 64bit \u6ca1\u6709\u4e8b\u60c5\uff0cNOI linux \u8fd8\u6ca1\u6709\u6d4b\u8bd5\u3002\n\nstd::mt19937 Myrand(seedgen()); // \u81ea\u5b9a\u4e49\u4e00\u4e2a mt19937 \u7c7b\u578b\u7684\u751f\u6210\u5668\n\nstd::uniform_int_distribution&lt;long long&gt;RangeInt(0,114514); // \u6307\u5b9a\u6574\u6570\u8303\u56f4\nstd::uniform_real_distribution&lt;long double&gt;RangeReal(0.0,1919810.0); // \u6307\u5b9a\u5b9e\u6570\u8303\u56f4\n\ncout&lt;&lt;Myrand()&lt;&lt;endl; // \u6ca1\u6709\u8303\u56f4,\u4f46\u662f mt19937 \u662f 32 \u4f4d\u7684\uff0c\u6240\u4ee5\u4f1a\u5728 int \u4ee5\u5185\u3002\ncout&lt;&lt;RangeInt(Myrand)&lt;&lt;endl; // \u6709\u8303\u56f4\u7684\u5747\u5300\u6574\u6570\ncout&lt;&lt;RangeReal(Myrand)&lt;&lt;endl; // \u6709\u8303\u56f4\u7684\u5747\u5300\u5b9e\u6570\nreturn 0;\n}\n</code></pre> <p>\u8fd8\u6709\u4e00\u4e2a\u7528\u4e8e 64 \u4f4d\u6574\u6570\u7248\u7684 mt19937 \uff1a<code>mt19937_64</code></p> <p>\u7528\u6cd5\u4e00\u6837\uff0c\u590d\u6742\u5ea6\u5747\u644a \\(\\text{O}(1)\\)\u3002</p> <p>\u9664\u4e86 <code>mt19937</code>\uff0c<code>&lt;random&gt;</code> \u91cc\u9762\u8fd8\u6709\u5f88\u591a\u6709\u610f\u601d\u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u7ffb\u4e00\u7ffb cpp ref\uff0c\u6216\u8005\u5c0f\u6ce2\u7684\u6d1b\u8c37\u65e5\u62a5\u3002</p>"}, {"location": "algor/misc/simulate-anneal/", "title": "\u6a21\u62df\u9000\u706b\u4ece\u7cbe\u901a\u5230\u5165\u571f", "text": ""}, {"location": "algor/misc/simulate-anneal/#_2", "title": "\u7b80\u4ecb", "text": "<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u4e00\u79cd\u53eb\u722c\u5c71\u7b97\u6cd5\u7684\u4e1c\u897f\u3002</p> <p>\u57fa\u672c\u601d\u8def\u5c31\u662f\u5728\u5f53\u524d\u7684\u6700\u4f18\u89e3\u9644\u8fd1\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u89e3\uff0c\u5982\u679c\u65b0\u7684\u89e3\u66f4\u4f18\u5219\u8f6c\u79fb\uff0c\u53cd\u4e4b\u4e0d\u53d8\u3002</p> <p>\u4f60\u53d1\u73b0\u8fd9\u6837\u5b50\u5f88\u5bb9\u6613\u9677\u5165\u5c40\u90e8\u7684\u6700\u4f18\u89e3\u5f53\u4e2d\uff0c\u5e76\u4e14\u53ea\u80fd\u89e3\u51b3\u5355\u5cf0\u51fd\u6570\u7684\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u4e3a\u4e86\u89e3\u51b3\u66f4\u5e7f\u6cdb\u7684\u591a\u5cf0\u51fd\u6570\u7684\u60c5\u51b5\uff0c\u9700\u8981\u5f15\u8fdb\u6a21\u62df\u9000\u706b\u8fd9\u4e2a\u7b97\u6cd5\u3002</p> <p>\u722c\u5c71\u7b97\u6cd5\u5728\u627e\u5230\u5f53\u524d\u6700\u4f18\u89e3\u7684\u9644\u8fd1\u7684\u4e00\u4e2a\u975e\u6700\u4f18\u89e3\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u5b83\u76f4\u63a5\u820d\u5f03\u6389\u3002</p> <p>\u800c\u6a21\u62df\u9000\u706b\u5c31\u662f\u5728\u968f\u673a\u5316\u7684\u4e00\u4e2a\u6982\u7387\u4e0b\uff0c\u5148\u8f6c\u79fb\u5230\u8fd9\u4e2a\u975e\u6700\u4f18\u89e3\u4ee5\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\u627e\u5230\u53ef\u80fd\u7684\u5168\u5c40\u6700\u4f18\u89e3\u7684\u4e00\u4e2a\u7b97\u6cd5\u3002</p> <p>\u5e76\u4e14\u57fa\u4e8e\u91d1\u5c5e\u9000\u706b\u7684\u539f\u7406\uff0c\u5b83\u5982\u679c\u8df3\u51fa\u4e86\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u5728\u6e29\u5ea6\u4e0d\u65ad\u4e0b\u964d\u7684\u65f6\u5019\uff0c\u6270\u52a8\u7684\u5e45\u5ea6\u8d8a\u6765\u8d8a\u5c0f\uff0c\u4e5f\u662f\u5927\u6982\u7387\u4f1a\u8df3\u56de\u6765\u7684\u3002</p> <p>\u4e00\u822c\u6211\u4eec\u4f1a\u7528\u4e8e\u4e00\u4e9b\u65b9\u6848\u6570\u6781\u5927\u7684\uff0c\u6216\u8005\u662f\u6b63\u5e38\u7b97\u6cd5\u96be\u4ee5\u60f3\u5230\u7684\u9898\u5f53\u4e2d\u3002</p> <p>\u5f53\u7136\u8003\u573a\u4e0a\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u6bd5\u7adf\u662f\u4e2a\u968f\u673a\u5316\u7b97\u6cd5\uff08\u9664\u975e\u4f60\u5c31\u6ca1\u60f3\u8fc7\u6253\u6b63\u89e3\uff09\u3002</p>"}, {"location": "algor/misc/simulate-anneal/#_3", "title": "\u57fa\u672c\u539f\u7406", "text": "<p>\u5b83\u57fa\u4e8e\u4e00\u4e2a\u5de5\u4e1a\u4e0a\u7684\u70ed\u5904\u7406\u5de5\u827a\u2014\u2014\u91d1\u5c5e\u9000\u706b\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u57fa\u4e8e\u70ed\u529b\u5b66\u539f\u7406\u3002</p> <p>\u91d1\u5c5e\u9000\u706b\uff1a\u5c06\u91d1\u5c5e\u52a0\u70ed\u5230\u4e00\u5b9a\u6e29\u5ea6\uff0c\u4fdd\u6301\u8db3\u591f\u65f6\u95f4\uff0c\u7136\u540e\u4ee5\u9002\u5b9c\u901f\u5ea6\u51b7\u5374(\u901a\u5e38\u662f\u7f13\u6162\u51b7\u5374\uff0c\u6709\u65f6\u662f\u63a7\u5236\u51b7\u5374)\u7684\u4e00\u79cd\u91d1\u5c5e\u70ed\u5904\u7406\u5de5\u827a\u3002</p> <p>\u6a21\u62df\u9000\u706b\u7684\u8fc7\u7a0b\u662f\u5728\u4e00\u4e2a\u80fd\u91cf\u51fd\u6570 \\(F\\) \u4e0a\u8fdb\u884c\u7684\uff0c\u6211\u4eec\u628a\u5b83\u653e\u5230\u4e8c\u7ef4\u7684\u5750\u6807\u7cfb\u4e0b\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u81ea\u53d8\u91cf\u4e3a\u7cfb\u7edf\u53d8\u91cf\uff0c\u56e0\u53d8\u91cf\u662f\u7cfb\u7edf\u80fd\u91cf\u7684\u4e00\u4e2a\u51fd\u6570\u3002</p> <p>\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u8fd9\u4e2a\u591a\u5cf0\uff08\u8c37\uff09\u51fd\u6570 \\(F\\) \u7684\u6700\u503c\u3002</p> <p>\u7cfb\u7edf\u53d8\u91cf\u53ef\u4ee5\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u53d8\u91cf \\(x\\) \uff0c\u4e5f\u53ef\u4ee5\u662f\u9898\u4e2d\u7ed9\u51fa\u7684\u6761\u4ef6\uff08\u6bd4\u5982 \\(x,y\\) \u5750\u6807\uff09\u7ec4\u6210\u7684\u4e00\u4e2a\u591a\u5143\u7ec4\uff0c\u5728\u4e0b\u6587\u6211\u4eec\u628a\u8fd9\u4e2a\u591a\u5143\u7ec4\uff08\u6216\u8005\u5355\u4e2a\u53d8\u91cf\uff09\u79f0\u4f5c \\(X\\)\u3002</p> <p>\u8868\u793a\u89e3\u7684\u65f6\u5019\u4e5f\u4f9d\u65e7\u4f7f\u7528\u8fd9\u4e2a\u7cfb\u7edf\u53d8\u91cf \\(X\\)\u3002</p> <p>\u90a3\u4e48\uff0c\u6a21\u62df\u9000\u706b\u6bcf\u6b21\u4f1a\u5728\u4e0a\u4e00\u4e2a\u88ab\u63a5\u53d7\u7684\u89e3 \\(X\\) \u7684\u57fa\u7840\u4e0a\u968f\u673a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u89e3 \\(X^\\prime\\)\uff0c</p> <p>\u8fd9\u4e2a\u65b0\u7684\u89e3\u548c \\(X\\) \u4ee5\u53ca\u5f53\u524d\u89e3\u7684\u7cfb\u7edf\u80fd\u91cf \\(F(X)\\) \u6709\u5173\u3002</p> <p>\u5982\u679c \\(X^\\prime\\) \u66f4\u4f18\u79c0\u90a3\u4e48\u63a5\u53d7\u8fd9\u4e2a\u65b0\u6700\u4f18\u89e3\uff0c\u8bb0\u5f55\u5168\u5c40\u7b54\u6848\u3002</p> <p>\u53cd\u4e4b\u4ee5\u4e00\u4e2a\u5173\u4e8e \\(F(X^\\prime)\\) \u548c\u6e29\u5ea6 \\(T\\) \u7684\u6982\u7387\u63a5\u53d7\u8fd9\u4e2a\u975e\u6700\u4f18\u89e3 \\(X^\\prime\\)\uff0c\\(T\\) \u5177\u4f53\u662f\u4ec0\u4e48\u4e0b\u6587\u4f1a\u63d0\u5230\u3002</p>"}, {"location": "algor/misc/simulate-anneal/#_4", "title": "\u5b9e\u73b0", "text": "<p>\u6211\u4eec\u9700\u8981\u5148\u5b9a\u4e49\u51e0\u4e2a\u53d8\u91cf\u4ee5\u65b9\u4fbf\u63cf\u8ff0\uff1a</p> <ul> <li>\u5f53\u524d\u6e29\u5ea6 \\(T\\)\u3002</li> <li>\u521d\u59cb\u6e29\u5ea6 \\(T_0\\) \uff0c\u4e00\u822c\u53d6\u4e00\u4e2a\u8f83\u5927\u7684\u6570\uff0c\u5927\u6982\u5728 \\([1000,5000]\\) \u8303\u56f4\u5185\u3002</li> <li>\u6700\u7ec8\u6e29\u5ea6 \\(T_k\\) \uff0c\u4e00\u822c\u53d6\u4e00\u4e2a\u6781\u5c0f\u7684\u6b63\u6570\uff0c\u5927\u6982\u5728 \\([10^{-15},10^{-8}]\\) \u4e0a\u3002</li> <li>\u964d\u6e29\u7cfb\u6570 \\(\\delta\\) \uff0c\u4e00\u822c\u53d6\u4e00\u4e2a\u5728 \\((0.985,0.997)\\) \u4e0a\u7684\u4e00\u4e2a\u6570\uff0c\u63a8\u8350 \\(0.995\\)\u3002</li> </ul>"}, {"location": "algor/misc/simulate-anneal/#_5", "title": "\u8ba1\u7b97\u7cfb\u7edf\u80fd\u91cf", "text": "<p>\u5199\u8ba1\u7b97\u7cfb\u7edf\u80fd\u91cf\u7684\u51fd\u6570\u5c31\u76f8\u5f53\u4e8e\u5199\u51fa \\(F(X)\\) \u7684\u8868\u8fbe\u5f0f\u3002</p> <p>\u6211\u4eec\u9700\u8981\u6839\u636e\u9898\u76ee\u6240\u7ed9\u7684\u6761\u4ef6 \\(X\\) \u8ba1\u7b97\u51fa\u5728\u89e3\u4e3a \\(X\\) \u7684\u65f6\u5019\u7684\u7cfb\u7edf\u80fd\u91cf \\(F(X)\\)\u3002</p> <p>\u4e3e\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5047\u8bbe \\(X\\) \u5c31\u4ee3\u8868\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u5f53\u4e2d\u7684 \\(x\\) \u5750\u6807\u3002</p> <p>\\(F(X)\\) \u5219\u662f\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570 \\(y=Ax^2+Bx+C\\) \u3002</p> <p>\u90a3\u4e48\u4f60\u8ba1\u7b97\u7cfb\u7edf\u80fd\u91cf\u7684\u51fd\u6570 \\(F(X)\\) \u5c31\u53ea\u9700\u8981\u8fd4\u56de \\(AX^2+BX+C\\) \u5373\u53ef\u3002</p> <p>\u66f4\u591a\u7684\u5b9e\u4f8b\u4f1a\u5728\u4e0b\u9762\u7684\u4f8b\u9898\u4e2d\u63d0\u5230\u3002</p>"}, {"location": "algor/misc/simulate-anneal/#_6", "title": "\u964d\u6e29", "text": "<p>\u6700\u5f00\u59cb\u7684\u65f6\u5019\u4ee4 \\(T=T_0\\)\u3002</p> <p>\u6bcf\u6b21\u964d\u6e29\u53ea\u9700\u8981\u7ed9 \\(T\\) \u4e58\u4e0a \\(\\delta\\) \u5373\u53ef\uff08\u964d\u6e29\u8981\u5728\u63a5\u53d7\u65b0\u89e3\u4e4b\u540e\uff09\u3002</p> <p>\u76f4\u5230 \\(T \\le T_k\\) \u7684\u65f6\u5019\u518d\u505c\u6b62\u964d\u6e29\u5e76\u9000\u51fa\u6a21\u62df\u9000\u706b\u7684\u8fc7\u7a0b\u3002</p> <p>\u6b64\u5904\u5f15\u7528\u4e00\u5f20\u56fe\uff08\u56fe\u6e90\u7ef4\u57fa\u767e\u79d1\uff09\uff1a</p> <p></p> <p>\u4f60\u53d1\u73b0\uff0c\u968f\u7740\u6e29\u5ea6\u7684\u4e0b\u964d\uff0c\u89e3\u7684\u6270\u52a8\u5e45\u5ea6\u4e5f\u8d8a\u6765\u8d8a\u5c0f\uff0c\u6700\u7ec8\u63a5\u8fd1\u4e8e\u6700\u4f18\u89e3\u3002</p> <p>\u8fd9\u5c31\u597d\u6bd4\u5206\u5b50\u6c38\u4e0d\u505c\u606f\u7684\u505a\u65e0\u89c4\u5219\u8fd0\u52a8\u4e00\u6837\uff0c\u800c\u4e14\u6e29\u5ea6\u8d8a\u9ad8\u8fd0\u52a8\u7684\u8d8a\u5feb\uff0c\u5e45\u5ea6\u8d8a\u5927\u3002</p> <p>\u6a21\u62df\u9000\u706b\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u6a21\u62df\u7c7b\u4f3c\u8fd9\u4e2a\u7684\u8fc7\u7a0b\u3002</p>"}, {"location": "algor/misc/simulate-anneal/#_7", "title": "\u751f\u6210\u4e00\u4e2a\u65b0\u89e3", "text": "<p>\u6bcf\u6b21\uff0c\u6211\u4eec\u4f1a\u5728\u4e0a\u4e00\u4e2a\u88ab\u63a5\u53d7\u7684\u89e3\u7684\u57fa\u7840\u4e0a\u968f\u673a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u89e3\u3002</p> <p>\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u6b64\u5904\u4f7f\u7528\u7684\u662f\u4e0a\u4e00\u4e2a\u88ab\u63a5\u53d7\u7684\u89e3\u800c\u4e0d\u662f\u5f53\u524d\u7684\u5168\u5c40\u6700\u4f18\u89e3\u3002</p> <p>\u4e0d\u7136\u4f60\u5c31\u548c\u722c\u5c71\u7b97\u6cd5\u6ca1\u6709\u592a\u5927\u7684\u5dee\u5f02\u4e86ovo\u3002</p> <p>\u4e4b\u524d\u6709\u4e2a\u670b\u53cb\u6a21\u62df\u8d5b\u7684\u65f6\u5019\u6253\u4e86\u9000\u706b\uff0c\u672c\u6765\u53ef\u4ee5\u62ff\u523090pts\uff0c\u4f46\u662f\u5c31\u662f\u56e0\u4e3a\u4f7f\u7528\u4e86\u5168\u5c40\u6700\u4f18\u89e3\u6765\u751f\u6210\u4e0b\u4e00\u4e2a\u89e3\u800c\u5bfc\u81f4\u7206\u96f6\u3002</p> <p>\uff08\u4e0d\u8fc7\u6211\u5bfb\u601d\u7740\uff0c\u4e3a\u5565\u5728\u751f\u6210\u65b0\u89e3\u7684\u65f6\u5019\u4f1a\u7528\u53bb\u5168\u5c40\u6700\u4f18\u89e3\u554a\uff1f\u53d8\u91cf\u4e0d\u90fd\u5e94\u8be5\u6807\u8bc6\u6e05\u695a\u4e86\u5417\uff09</p> <p>\u751f\u6210\u65b0\u89e3\u7684\u65b9\u5f0f\u5f88\u591a\uff0c\u6700\u5e38\u89c1\u7684\u5c31\u662f\u76f4\u63a5\u5728\u7cfb\u7edf\u53d8\u91cf\u5f53\u4e2d\u5305\u62ec\u7684\u6bcf\u4e00\u4e2a\u53d8\u91cf\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u968f\u673a\u6570\u518d\u641e\u4e00\u641e\u3002</p> <p>\u6bd4\u5982\u8fd9\u6837\u5b50\uff1a</p> <pre><code>    double nx=x+((rand()&lt;&lt;1)-RAND_MAX)*t;\ndouble ny=y+((rand()&lt;&lt;1)-RAND_MAX)*t;\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u5b9a\u4e49\u57df \\([l,r]\\) \u5f53\u4e2d\u968f\u673a\u4e00\u4e2a\u65b0\u89e3\u51fa\u6765\uff0c\u4e0d\u7ba1\u4e0a\u4e00\u4e2a\u88ab\u63a5\u53d7\u7684\u7684\u89e3\u662f\u4ec0\u4e48\uff1a</p> <pre><code>    int nx=rand()%r+l;\n</code></pre> <p>\u4e00\u822c\u8981\u770b\u9898\u76ee\u7684\u60c5\u51b5\u800c\u5b9a\u3002</p>"}, {"location": "algor/misc/simulate-anneal/#_8", "title": "\u8f6c\u79fb", "text": "<p>\u8fd9\u4e2a\u8f6c\u79fb\u662f\u6a21\u62df\u9000\u706b\u7684\u7cbe\u9ad3\u4e4b\u4e00\uff0c\u5b83\u5229\u7528\u4e86 Metropolis \u51c6\u5219\u3002</p> <p>\u6211\u4eec\u5b9a\u4e49 \\(\\Delta E\\) \u8868\u793a\u5f53\u524d\u65b0\u751f\u6210\u7684\u89e3 \\(X\\) \u7684\u80fd\u91cf \\(F(X)\\) \u548c\u76ee\u524d\u7684\u5168\u5c40\u6700\u4f18\u89e3\u7684\u80fd\u91cf \\(F(X_0)\\)\u7684\u5dee\u3002</p> <p>\u4e5f\u5c31\u662f \\(\\Delta E = F(X)-F(X_0)\\) \u3002</p> <p>\u8003\u8651\u6211\u4eec\u5f53\u524d\u662f\u5728\u6c42\u80fd\u91cf\u51fd\u6570\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u90a3\u4e48\uff0c\u5982\u679c \\(\\Delta E &lt; 0\\) \uff0c\u6211\u4eec\u76f4\u63a5\u63a5\u53d7\u8fd9\u4e2a\u65b0\u7684\u89e3 \\(X\\)\uff0c\u56e0\u4e3a\u5b83\u7684\u80fd\u91cf\u66f4\u5c0f\u3002</p> <p>\u53cd\u4e4b\uff0c\u5982\u679c \\(\\Delta E &gt; 0\\) \uff0c\u8bc1\u660e\u8fd9\u4e2a\u89e3\u662f\u4e2a\u975e\u6700\u4f18\u89e3\uff0c\u6211\u4eec\u5c31\u4ee5 \\(e^{\\dfrac{\\Delta E}{T}}\\) \u7684\u6982\u7387\u63a5\u53d7\u8fd9\u4e2a\u975e\u6700\u4f18\u89e3\u3002</p> <p>\u4ee3\u7801\u5927\u81f4\u5982\u4e0b\uff1a</p> <pre><code>    if(Delta&lt;0){\n\u8bb0\u5f55\u8fd9\u4e2a\u89e3\u88ab\u63a5\u53d7\n\u8bb0\u5f55\u65b0\u7684\u5168\u5c40\u6700\u4f18\u89e3\n}\nelse if(exp(-Delta/T)*RAND_MAX&gt;rand()) \u8bb0\u5f55\u8fd9\u4e2a\u89e3\u88ab\u63a5\u53d7\n</code></pre> <p>\u53cd\u8fc7\u6765\uff0c\u5982\u679c\u6211\u4eec\u5f53\u524d\u662f\u5728\u6c42\u80fd\u91cf\u51fd\u6570\u7684\u6700\u5927\u503c\u7684\u8bdd\uff0c\u6211\u4eec\u8fd9\u4e48\u5199\u5373\u53ef\uff1a</p> <pre><code>    if(Delta&gt;0){\n\u8bb0\u5f55\u8fd9\u4e2a\u89e3\u88ab\u63a5\u53d7\n\u8bb0\u5f55\u65b0\u7684\u5168\u5c40\u6700\u4f18\u89e3\n}\nelse if(exp(-Delta/T)*RAND_MAX&lt;rand()) \u8bb0\u5f55\u8fd9\u4e2a\u89e3\u88ab\u63a5\u53d7\n</code></pre> <p>\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u5728 <code>else if</code> \u5f53\u4e2d\uff0c \\(e^{\\dfrac{\\Delta E}{T}}\\) \u662f \\(&gt;1\\) \u7684\u3002</p> <p>\u6240\u4ee5\u628a\u5927\u4e8e\u53f7\u6539\u6210\u5c0f\u4e8e\u53f7\u5373\u53ef\u3002</p>"}, {"location": "algor/misc/simulate-anneal/#_9", "title": "\u5176\u4ed6", "text": "<p>\u5728\u9000\u706b\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u4f7f\u7b54\u6848\u66f4\u52a0\u63a5\u8fd1\u6211\u4eec\u8981\u7684\u89e3\uff0c\u4e00\u822c\u4f1a\u8bb0\u5f55\u5168\u5c40\u6700\u4f18\u89e3\u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528\u5f53\u524d\u89e3\u3002</p> <p>\u800c\u4e14\u5728\u5f00\u59cb\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u4ece\u5b9a\u4e49\u57df\u5f53\u4e2d\u7684\u5e73\u5747\u503c\u5f00\u59cb\u9000\u706b\u3002</p> <p>\u5e76\u4e14\uff0c\u5982\u679c\u65f6\u95f4\u5141\u8bb8\u7684\u8bdd\uff0c\u53ef\u4ee5\u5728\u9000\u706b\u8fc7\u7a0b\u5b8c\u6210\u4e4b\u540e\u518d\u8dd1\u4e00\u904d\u7c7b\u4f3c\u4e8e\u6a21\u62df\u9000\u706b\u7684\u8fc7\u7a0b\uff0c\u4ee5\u6c42\u51fa\u66f4\u7cbe\u786e\u7684\u89e3\u3002</p>"}, {"location": "algor/misc/simulate-anneal/#_10", "title": "\u4f18\u5316 &amp; \u8c03\u53c2", "text": "<p>\u4e00\u822c\u4e00\u6b21\u9000\u706b\u662f\u8fdc\u8fdc\u4e0d\u591f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u591a\u8dd1\u51e0\u6b21\u9000\u706b\u3002</p> <p>\u4f60\u53ef\u4ee5\u76f4\u63a5\u8dd1\u4e09\u5230\u4e94\u6b21\u3002</p> <p>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5361\u65f6\u3002</p> <p>\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u5373\u53ef\u3002</p> <pre><code>    while((double)clock()/CLOCK_PER_SEC&lt;Limit) simulated_annealing();\n//limit\u4e00\u822c\u6bd4\u65f6\u95f4\u9650\u5236\u5c0f\u4e00\u70b9\uff0c\u6bd4\u5982\u4f60\u65f6\u9650 1s \uff0climit \u4e00\u822c\u53d6 998ms\u3002\n</code></pre> <p>\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5b50\uff1a</p> <pre><code>int main(){\ndouble ti=clock();\n//...\nwhile(clock()-ti&lt;Limit) simulated_annealing();\n//\u6ce8\u610f\u4e0d\u8981\u5ffd\u7565\u5927\u89c4\u6a21\u8f93\u51fa\u6240\u82b1\u7684\u65f6\u95f4\uff01\nreturn 0;\n}\n</code></pre> <p>\u8fd8\u6709\uff0c\u5982\u679c\u4f60\u4ea4\u4e0a\u53bb\u53d1\u73b0\u65e0\u6cd5AC\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8fdb\u5165\u9000\u706b\u5f53\u4e2d\u6700\u75db\u82e6\u7684\u4e00\u4e2a\u8fc7\u7a0b\uff1a\u8c03\u53c2\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u4f60\u9700\u8981\u8c03\u6574 \\(T_0,T_k\\) \uff0c\u7136\u540e\u628a \\(\\delta\\) \u8c03\u5927\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u662f\u6ca1\u6709\u5565\u901a\u6cd5\u7684\uff0c\u53ea\u80fd\u9760\u7ecf\u9a8c\u548c\u611f\u89c9\u3002</p> <p>\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u66f4\u6539\u968f\u673a\u6570\u79cd\u5b50\uff0c\u6bd4\u5982\u6539\u6210 <code>srand(114514),srand(20061231),srand(time(NULL)),srand(rand())</code>\u3002</p> <p>\u4e2a\u4eba\u63a8\u8350\u540e\u4e24\u79cd\u3002</p>"}, {"location": "algor/misc/simulate-anneal/#_11", "title": "\u4f8b\u9898", "text": "<p>\u5495\u5495\u5495</p>"}, {"location": "algor/misc/simulate-anneal/#reference", "title": "Reference", "text": "<ul> <li>https://www.luogu.com.cn/blog/Darth-Che/mu-ni-tui-huo-xue-xi-bi-ji</li> <li>https://m-sea.blog.luogu.org/qian-tan-SA</li> <li>https://oi-wiki.org/misc/simulated-annealing/</li> <li>\u767e\u5ea6\u767e\u79d1</li> </ul>"}, {"location": "algor/misc/wqs-old/", "title": "Wqs old", "text": "<p>\u4e4b\u524d\u521a\u5b66\u4e8c\u5206\u7684\u65f6\u5019\u505a\u8fc7\u4e00\u9053\u53eb Tree I \u7684\u9898\u76ee\uff0c\u611f\u89c9\u5f88\u6709\u610f\u601d\uff0c\u4e0d\u8fc7\u5f53\u65f6\u4e5f\u6ca1\u600e\u4e48\u6df1\u7a76\u3002</p> <p>\u6628\u5929\u5728 uoj \u7fa4\u56de\u7b54\u95ee\u9898\u7684\u65f6\u5019\u5f97\u5230\u4e86\u6e05\u82b7\u59d0\u59d0\u7684\u6559\u5bfc\uff0c\u77e5\u9053\u4e86\u8fd9\u73a9\u610f\u513f\u5c31\u662f wqs \u4e8c\u5206\uff0c\u56e0\u4e3a\u4e4b\u524d\u5c31\u5bf9\u8fd9\u4e2a\u7cbe\u5999\u7684\u5957\u8def\u5f88\u611f\u5174\u8da3\u4e86\uff0c\u4e8e\u662f\u51b3\u5b9a\u5b66\u4e60\u4e00\u4e0b\u3002</p>"}, {"location": "algor/misc/wqs-old/#_1", "title": "\u6cdb\u5316", "text": "<p>\u5047\u5b9a\u4f60\u6709\u4e00\u4e2a\u9650\u5236\u53c2\u6570 \\(k\\)\uff0c\u4f60\u8981\u6c42 \\(ans(k)\\)\uff0c\u4f46\u662f \\(ans(k)\\) \u6c42\u8d77\u6765\u662f hard \u7684\u3002</p> <p>\u4f46\u662f\u53ef\u4ee5\u5feb\u901f\u7684\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(x\\) \u6c42\u51fa \\(\\max/\\min\\{ans(i)-ix\\}\\)\uff0c\u4e14 \\(ans\\) \u662f\u51f8\u7684\uff0c\u90a3\u4e48\u4e8c\u5206\u8fd9\u4e2a \\(x\\) \u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u5982\u679c \\(ans\\) \u662f\u51f8\u7684\uff0c\u80fd\u53d6\u5230\u7684\u6700\u4f18\u7684 \\(i\\) \u5c31\u662f\u5173\u4e8e \\(x\\) \u5355\u8c03\u7684\uff0c\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u4e8c\u5206\u4e86\u3002</p> <p>\u8fd9\u662f _rqy \u59d0\u59d0\u8bf4\u7684\uff0c\u597d\u50cf\u5bf9\u6211\u8fd9\u79cd\u7b28\u86cb\u6765\u8bf4\u4e0d\u662f\u5f88\u76f4\u89c2\u3002</p>"}, {"location": "algor/misc/wqs-old/#_2", "title": "\u4f8b\u9898", "text": "<p>\u7ed9\u5b9a \\(m\\) \u6761\u8fb9\uff0c\\(n\\) \u4e2a\u70b9\uff0c\u6bcf\u6761\u8fb9\u53ef\u80fd\u662f\u53ef\u7231\u8fb9\u6216\u8005\u4e0d\u53ef\u7231\u8fb9\u3002</p> <p>\u6c42\u6070\u597d\u6709 \\(Need\\) \u6761\u53ef\u7231\u8fb9\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002</p> <p>\u8fd9\u4e2a\u76f4\u63a5\u5199\u4e00\u4e2a \\(dp\\) \u6765\u505a\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u4e0a\u5929\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7c7b\u4f3c\u4e4b\u524d\u67d0\u9053 ds \u4f18\u5316 dp \u7684\u9898\u76ee\u7684\u601d\u8def\uff0c\u8bbe \\(f(i)\\) \u8868\u793a\u6070\u597d\u9009\u4e86 \\(i\\) \u6761\u53ef\u7231\u8fb9\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u6743\u503c\u548c\u3002</p> <p>\u7136\u540e\u6ce8\u610f\u5230 \\(f\\) \u662f\u4e0b\u51f8\u7684\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u659c\u7387\u80fd\u591f\u6620\u5c04\u5230\u4e00\u4e2a\u5207\u70b9\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u62ff\u4e00\u6761\u76f4\u7ebf\u53bb\u5207 \\(f\\) \u7684\u56fe\u50cf\uff0c\u5c1d\u8bd5\u627e\u5230 \\(f(Need)\\)\uff0c\u4f46\u662f\u8fd9\u4e0d\u662f\u80fd\u4e00\u6b65\u5230\u4f4d\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u662f\u77e5\u9053 \\(f\\) \u4e00\u5b9a\u4e0b\u51f8\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u5177\u4f53\u662f\u4ec0\u4e48\u6837\u7684\u3002</p> <p>\u53d1\u73b0\u6839\u636e\u4e0b\u51f8\u51fd\u6570\u7684\u6027\u8d28\uff0c\u5f53 \\(i\\) \u589e\u52a0\u7684\u65f6\u5019\uff0c\u5bf9\u5e94\u5207\u7ebf\u7684\u659c\u7387\u662f\u5355\u8c03\u4e0d\u964d\u7684\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u659c\u7387\u5355\u8c03\uff0c\u5207\u70b9\u4e5f\u5355\u8c03\uff0c\u800c\u6211\u4eec\u968f\u4fbf\u7ed9\u4e00\u4e2a \\(k\\) \u5207\u51fa\u6765\u7684\u5207\u70b9\u6a2a\u5750\u6807\u4e0d\u4e00\u5b9a\u662f \\(Need\\)\uff0c\u4e8e\u662f\u6211\u4eec\u60f3 check\uff0c\u4e5f\u5c31\u60f3\u5bf9\u4e8e\u4e00\u4e2a \\(k\\) \u6c42\u51fa \\(x\\)\uff0c\u987a\u4fbf\u6c42 \\(f(x)\\)\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5efa\u7acb\u6620\u5c04\u5173\u7cfb\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\u56fa\u5b9a\u7684\u659c\u7387\u5bf9 \\(f(x)\\) \u7684\u5207\u70b9\u662f\u56fa\u5b9a\u7684\uff08\u4f7f\u5f97\u622a\u8ddd\u6700\u5927\u7684\u90a3\u4e2a\u70b9\uff09\uff0c\u90a3\u4e48\u5207\u7ebf\u5c31\u56fa\u5b9a\uff0c\u6362\u53e5\u8bdd\u8bf4\u622a\u8ddd\u5c31\u56fa\u5b9a\u3002</p> <p>\u6211\u4eec\u5c31\u5efa\u7acb\u4e86\u4e00\u4e2a\u4ece \\(k \\to x \\to b\\) \u7684\u6620\u5c04\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u5728\u56fa\u5b9a \\(k\\) \u7684\u60c5\u51b5\u4e0b\uff0c\u6c42\u51fa\u8fd9\u4e2a\u5207\u70b9\uff0c\u5e76\u6c42\u51fa\u622a\u8ddd\u3002</p> <p>\u53cd\u8fc7\u6765\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u622a\u8ddd\u6c42\u51fa\u5207\u70b9\uff0c\u8fdb\u4e00\u6b65\u6c42\u51fa \\(f(x)\\)\uff0c\u5177\u4f53\u89e3\u91ca\u5982\u4e0b\uff1a</p> <p>\u5c1d\u8bd5\u5316\u4e00\u4e0b\u67ff\u5b50\uff1a\\(f(x) = kx + b \\iff b = f(x) - kx\\)\u3002</p> <p>\u6ce8\u610f\u5230 \\(b\\) \u6700\u4f18\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6309\u67ff\u5b50\u6c42\u51fa\u7684\u8fd9\u4e2a \\(f(x)\\) \u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff08\u4e5f\u5c31\u662f\u5b9e\u9645\u7684 \\(f\\) \u503c\uff09\uff08\u8fd9\u4e2a\u663e\u7136\uff0c\u6211\u4eec\u662f\u5efa\u7acb\u4e86\u6620\u5c04\u5173\u7cfb\u7684\uff09\u3002</p> <p>\u6240\u4ee5\u6c42\u51fa \\(\\min\\{b\\}\\) \u7b49\u4ef7\u4e8e\u6c42\u51fa \\(f(x)\\)\uff0c\u4e3a\u4ec0\u4e48\u8981\u505a\u8fd9\u4e00\u6b65\u8f6c\u5316\u5462\uff1f</p> <p>\u6ce8\u610f\u5230\uff0c\u5176\u5b9e \\(\\min\\{b\\}\\) \u7b49\u4ef7\u4e8e\u8003\u8651\u7ed9\u6bcf\u6761\u8fb9\u90fd\u51cf\u53bb\u4e00\u4e2a \\(k\\)\uff0c\u6c42\u6070\u597d\u9009\u4e86 \\(x\\) \u6761\u53ef\u7231\u8fb9\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002</p> <p>\u6211\u4eec\u521a\u624d\u8bf4\u4e86\uff0c\u659c\u7387\u56fa\u5b9a\uff0c\\(\\min\\{b\\}\\) \u4e5f\u662f\u56fa\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u4e00\u4e2a \\(k\\)\uff0c\u4e0d\u7ba1\u4ed6\u7684\u9650\u5236\u5982\u4f55\uff0c\u6211\u4eec\u6c42 mst \u6c42\u51fa\u6765\u7684\u6743\u503c\u548c\u4e5f\u5c31\u662f\u56fa\u5b9a\u7684\uff01</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u9009 \\(x\\) \u4e2a\u7684\u9650\u5236\u5c31\u88ab\u76f4\u63a5\u53bb\u9664\uff0c\u6c42 \\(f(x)\\) \u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6ca1\u6709\u9650\u5236\u7684\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206 \\(k\\)\uff0c\u5bf9\u4e8e\u6bcf\u4e2a \\(k\\) \u7b97\u4e00\u4e0b \\(b \\to f(x) \\to x\\)\u3002</p> <p>\u7136\u540e check \u4e00\u4e0b \\(x\\) \u548c \\(Need\\) \u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u8c03\u6574 \\(k\\) \u5c31\u53ef\u4ee5\u4e8c\u5206\u5230 \\(Need\\) \u4e86\uff01</p> <p>\u4f46\u662f\u6ce8\u610f\u5230\uff0c\u5176\u5b9e\u659c\u7387\u548c\u5207\u70b9\u5e76\u4e0d\u4e00\u5b9a\u80fd\u5efa\u7acb\u51fd\u6570\u5173\u7cfb\uff0c\u56e0\u4e3a\u4e00\u4e2a\u659c\u7387\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u5207\u70b9\uff0c\u6bd4\u5982\u4e0b\u56fe\u7684\u60c5\u51b5\uff0c\u6709\u53ef\u80fd\u51fa\u73b0\u4e00\u4e2a\u70b9\u4e24\u8fb9\u7684\u659c\u7387\u76f8\u7b49\u7684\u60c5\u51b5\u3002</p> <p></p> <p>\u56fe\u6e90 https://www.cnblogs.com/TianMeng-hyl/p/14972355.html\u3002</p> <p>\u8bf7\u8bfb\u8005\u628a\u5b83\u4eec\u90fd\u5f53\u6210\u6574\u70b9\uff0c\u8fd9\u91cc\u662f\u611f\u6027\u7684\uff0c\u672c\u9898 \\(f(i)\\) \u663e\u7136\u662f &gt; 0 \u7684\u3002</p> <p>\u90a3\u4e48\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u89e3\u51b3\u8fd9\u4e2a\u4e00\u5bf9\u591a\u7684\u95ee\u9898\uff0c\u4e00\u79cd\u5e38\u89c1\u7684\u89e3\u51b3\u7b56\u7565\u662f\uff0c\u6211\u4eec\u628a\u8fd9\u591a\u4e2a\u70b9\u878d\u5408\u6210\u4e00\u4e2a\u70b9\u8003\u8651\u3002</p> <p>\u5177\u4f53\u505a\u6cd5\u662f\u6c42 mst \u7684\u65f6\u5019\u5982\u679c\u6709\u76f8\u540c weight\uff0c\u8ba9\u53ef\u7231\u8fb9\u66f4\u9760\u524d\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u76f4\u63a5\u5bf9\u7740\u8fd9\u79cd\u60c5\u51b5\u83bd\uff0c\u5f53\u4e00\u4e2a\u659c\u7387\u5bf9\u5e94\u591a\u4e2a\u5207\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6c42\u51fa\u6765\u7684 \\(x\\) \u5e94\u8be5\u662f\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 \\(x\\) \u91cc\u9762\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u56e0\u4e3a\u6392\u5e8f\u7684\u65f6\u5019\u5df2\u7ecf\u8d2a\u5fc3\u5730\u8ba9\u53ef\u7231\u8fb9\u9009\u7684\u5c3d\u53ef\u80fd\u591a\u3002</p> <p>\u4e8e\u662f\u540c\u4e00\u6761\u7ebf\u4e0a\u7684\u6240\u6709\u70b9\u7684\u5f71\u54cd\u90fd\u88ab\u8003\u8651\u5230\u8fd9\u6761\u7ebf\u4e0a\u6700\u9760\u540e\u7684\u4e00\u4e2a\u5207\u70b9\u4e0a\u4e86\uff01</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8003\u8651\u201c\u62d0\u70b9\u201d\u5373\u4e24\u8fb9\u659c\u7387\u4e0d\u7b49\u7684\u70b9\u4e86\u3002</p> <p>\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u505a\uff0c\u4e8c\u5206\u6ee1\u8db3 \\(x &gt; Need\\) \u7684\u6240\u6709 \\(k\\) \u91cc\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002</p> <p>\u5f88\u663e\u7136 \\(Need\\) \u5bf9\u5e94\u7684\u5207\u70b9\u4e00\u5b9a\u5728\u8fd9\u6761\u7ebf\u4e0a\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u53cd\u8bc1\uff0c\u7136\u540e\u7b97 \\(f(Need)\\) \u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u6c42\u51fa\u6765\u7684\u70b9\u7684\u6a2a\u5750\u6807\u4e3a \\(x\\)\uff0c\u663e\u7136 \\(b = f(x) - kx = f(Need) - kNeed\\)</p> <p>\u6240\u4ee5 \\(f(Need) = f(x) - kx + kNeed\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u9700\u8981\u6c42\u51fa\u6765 \\(x\\) \u5904\u7684\u622a\u8ddd\u7136\u540e\u52a0\u4e0a \\(kNeed\\) \u5373\u53ef\u3002</p> <p>ref:  - https://www.cnblogs.com/CreeperLKF/p/9045491.html - https://www.cnblogs.com/TianMeng-hyl/p/14972355.html</p> <p>\u60f3\u8981\u53bb\u7406\u89e3\u90a3\u4e2a\u81ea\u7136\u7684\u601d\u8003\u8fc7\u7a0b\u6709\u70b9\u96be\uff0c\u4f46\u662f\u503c\u5f97\u3002</p> <p>\u4e4b\u524d\u7684\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u505a\u5230\uff0c\u4e0d\u8fc7\u56de\u987e\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e00\u4e0b\u3002</p>"}, {"location": "algor/misc/wqs/", "title": "Wqs \u4e8c\u5206", "text": "<p>\u4e4b\u524d\u521a\u5b66\u4e8c\u5206\u7684\u65f6\u5019\u505a\u8fc7\u4e00\u9053\u53eb Tree I \u7684\u9898\u76ee\uff0c\u611f\u89c9\u5f88\u6709\u610f\u601d\uff0c\u4e0d\u8fc7\u5f53\u65f6\u4e5f\u6ca1\u600e\u4e48\u6df1\u7a76\u3002</p> <p>\u6628\u5929\u5728 uoj \u7fa4\u56de\u7b54\u95ee\u9898\u7684\u65f6\u5019\u5f97\u5230\u4e86\u6e05\u82b7\u59d0\u59d0\u7684\u6559\u5bfc\uff0c\u77e5\u9053\u4e86\u8fd9\u73a9\u610f\u513f\u5c31\u662f wqs \u4e8c\u5206\uff0c\u56e0\u4e3a\u4e4b\u524d\u5c31\u5bf9\u8fd9\u4e2a\u7cbe\u5999\u7684\u5957\u8def\u5f88\u611f\u5174\u8da3\u4e86\uff0c\u4e8e\u662f\u51b3\u5b9a\u5b66\u4e60\u4e00\u4e0b\u3002</p>"}, {"location": "algor/misc/wqs/#_1", "title": "\u6cdb\u5316", "text": "<p>\u5047\u5b9a\u4f60\u6709\u4e00\u4e2a\u9650\u5236\u53c2\u6570 \\(k\\)\uff0c\u4f60\u8981\u6c42 \\(ans(k)\\)\uff0c\u4f46\u662f \\(ans(k)\\) \u6c42\u8d77\u6765\u662f hard \u7684\u3002</p> <p>\u4f46\u662f\u53ef\u4ee5\u5feb\u901f\u7684\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(x\\) \u6c42\u51fa \\(\\max/\\min\\{ans(i)-ix\\}\\)\uff0c\u4e14 \\(ans\\) \u662f\u51f8\u7684\uff0c\u90a3\u4e48\u4e8c\u5206\u8fd9\u4e2a \\(x\\) \u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u5982\u679c \\(ans\\) \u662f\u51f8\u7684\uff0c\u80fd\u53d6\u5230\u7684\u6700\u4f18\u7684 \\(i\\) \u5c31\u662f\u5173\u4e8e \\(x\\) \u5355\u8c03\u7684\uff0c\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u4e8c\u5206\u4e86\u3002</p> <p>\u8fd9\u662f _rqy \u59d0\u59d0\u8bf4\u7684\uff0c\u597d\u50cf\u5bf9\u6211\u8fd9\u79cd\u7b28\u86cb\u6765\u8bf4\u4e0d\u662f\u5f88\u76f4\u89c2\u3002</p> <p>\u6240\u4ee5\u8fd8\u662f\u770b\u4e2a\u4f8b\u9898\u4f1a\u6bd4\u8f83\u597d\u3002</p>"}, {"location": "algor/misc/wqs/#_2", "title": "\u4f8b\u9898", "text": "<p>source: Tree I,by WJMZBMR</p> <p>\u7ed9\u5b9a \\(m\\) \u6761\u8fb9\uff0c\\(n\\) \u4e2a\u70b9\uff0c\u6bcf\u6761\u8fb9\u53ef\u80fd\u662f\u53ef\u7231\u8fb9\u6216\u8005\u4e0d\u53ef\u7231\u8fb9\u3002</p> <p>\u6c42\u6070\u597d\u6709 \\(e\\) \u6761\u53ef\u7231\u8fb9\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002</p> <p>\u9996\u5148\u4e00\u4e2a\u6bd4\u8f83\u66b4\u529b\u7684\u505a\u6cd5\u5c31\u662f\u8bbe \\(dp(i, j)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u9009 \\(j\\) \u4e2a\u53ef\u7231\u8fb9\u7684 mst\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u663e\u7136\u4e0a\u5929\u4e86\u5427\uff01\uff01</p> <p>\u4e8e\u662f\u7c7b\u4f3c\u4e4b\u524d\u67d0\u4e2a ds \u4f18\u5316 dp \u7684\u9898\uff0c\u6211\u4eec\u8bbe \\(f(i)\\) \u8868\u793a\u9009\u4e86 \\(i\\) \u6761\u53ef\u7231\u8fb9\u7684 mst\uff0c\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f \\(f(e)\\)\u3002</p> <p>\u6ce8\u610f\u5230\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u7ed9\u5b9a\u4e0b\u6807\u6c42\u51fa \\(f\\)\uff0c\u8fd9\u4e2a\u662f\u56f0\u96be\u7684\u3002</p> <p>\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0 \\(f\\) \u662f\u4e00\u4e2a\u4e0b\u51f8\u7684\u51fd\u6570\uff08\u8bc1\u660e\u5148\u5495\u5495\u5495\u4e00\u4e0b\uff09\u3002</p> <p>\u4e5f\u5c31\u662f\u957f\u6210\u8fd9\u6837\uff1a</p> <p></p> <p>\u56fe\u6e90 https://www.cnblogs.com/TianMeng-hyl/p/14972355.html\u3002</p> <p>\u8bf7\u8bfb\u8005\u628a\u5b83\u4eec\u90fd\u5f53\u6210\u6574\u70b9\uff0c\u8fd9\u91cc\u662f\u611f\u6027\u7684\uff0c\u672c\u9898 \\(f(i)\\) \u663e\u7136\u662f &gt; 0 \u7684\u3002</p> <p>\u4e8e\u662f\u6709\u4e00\u79cd\u60f3\u6cd5\u662f\uff0c\u62c9\u4e00\u6761\u76f4\u7ebf\u6765\u5207\u8fd9\u4e2a\u51f8\u5305\uff0c\u7136\u540e\u663e\u7136\u6bcf\u4e2a\u659c\u7387\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u5207\u70b9\u6216\u8005\u591a\u4e2a\u5207\u70b9\uff0c\u6211\u4eec\u5148\u4e0d\u8003\u8651\u591a\u4e2a\u5207\u70b9\uff0c\u4e5f\u5c31\u662f\u5047\u8bbe\u6bcf\u4e00\u4e2a \\((i, f(i))\\) \u7684\u4e24\u8fb9\u659c\u7387\u90fd\u4e0d\u7b49\u3002</p> <p>\u6211\u4eec\u662f\u4e0d\u77e5\u9053 \\(f\\) \u5177\u4f53\u957f\u4ec0\u4e48\u6837\u7684\uff0c\u6211\u4eec\u53ea\u77e5\u9053\u4ed6\u662f\u4e00\u4e2a\u51f8\u5305\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u8981\u60f3\u529e\u6cd5\u6c42\u51fa\u6765\u3002</p> <p>\u6ce8\u610f\u5230\u5bf9\u4e8e\u4e0b\u51f8\u51fd\u6570\uff0c\u5f53 \\(i\\) \u589e\u52a0\u7684\u65f6\u5019\uff0c\u5207\u7ebf\u659c\u7387 \\(k\\) \u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u5e76\u4e14\u6b64\u65f6\u4e00\u4e2a \\(k\\) \u4e00\u5b9a\u5bf9\u5e94\u4e00\u4e2a\u5207\u70b9\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u6709\u4e00\u4e2a\u60f3\u6cd5\u662f\uff0c\u80fd\u4e0d\u80fd\u5bf9\u4e8e\u4e00\u4e2a \\(k\\) \u6c42\u51fa\u5b83\u5bf9\u5e94\u7684\u5207\u70b9\u5462\uff1f</p> <p>\u8fd9\u6837\u56e0\u4e3a \\(k\\) \u968f\u7740 \\(x\\) \u5355\u8c03\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u6c42\u51fa \\(e\\)  \u5bf9\u5e94\u7684 \\(k\\) \u8fdb\u800c\u6c42\u51fa \\(f(e)\\) \u4e86\uff01</p> <p>\u7136\u540e\u5176\u5b9e\u6574\u4e2a\u95ee\u9898\u7684\u6700\u96be\u70b9\u662f\u5982\u4f55\u5728\u6709\u9650\u5236\u7684\u60c5\u51b5\u4e0b\u6c42\u51fa mst\u3002</p> <p>\u4e8e\u662f\u6709\u4e86\u4e00\u4e2a\u5f88\u725b\u903c\u7684\u60f3\u6cd5\u3002</p> <p>\u6ce8\u610f\u5230 \\(f(x) = kx + b\\)\uff0c\u5176\u4e2d \\(b\\) \u4e3a\u5207\u7ebf\u7684\u622a\u8ddd\u3002</p> <p>\u56e0\u4e3a \\(b = f(x) - kx\\)\uff0c\u7531\u51e0\u4f55/\u4ee3\u6570\u610f\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a \\(b\\) \u548c \\(k\\) \u662f\u5bf9\u5e94\u7684\uff01</p> <p>\u7136\u540e\u6700\u795e\u5947\u7684\u6765\u4e86\uff0c\u6ce8\u610f\u5230 \\(b\\) \u672c\u8d28\u4e0a\u662f\u7ed9\u6bcf\u4e2a\u53ef\u7231\u8fb9\u51cf\u53bb\u4e00\u4e2a \\(k\\)\uff0c\u7136\u540e\u518d\u6c42\u6709\u9650\u5236\u7684 mst\uff0c\u56e0\u4e3a\u521a\u624d\u8bf4\u4e86\uff0c\\(b\\) \u548c \\(k\\) \u662f\u5bf9\u5e94\u7684\uff0c\u6240\u4ee5\u5176\u5b9e\u5c31\u7b97\u6ca1\u6709\u9650\u5236\uff0c\u51cf\u5b8c\u4e4b\u540e\u6211\u4eec\u76f4\u63a5\u6c42 mst \u6c42\u51fa\u6765\u4e5f\u4e00\u5b9a\u6ee1\u8db3\u8fd9\u4e2a\u9009 \\(x\\) \u6761\u7684\u9650\u5236\uff01</p> <p>\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7b80\u5355\u6c42\u51fa \\(b\\)\uff0c\u52a0\u4e0a \\(kx\\) \u4e4b\u540e\u5c31\u80fd\u5bf9\u4e8e\u4e00\u4e2a \\(k\\) \u6c42\u51fa \\(f(x)\\) \u4e86\uff01</p> <p>\u6240\u4ee5\u6211\u4eec\u5c31\u53ea\u9700\u8981\u4e8c\u5206 \\(k\\)\uff0c\u7136\u540e\u6c42 \\(b\\) \u8fdb\u800c\u6c42 \\(f(x)\\)\uff0c\u53cd\u4ee3\u56de\u53bb\u6c42\u51fa \\(x\\)\uff0c\u7136\u540e\u521a\u624d\u8bf4\u4e86 \\(k\\) \u968f\u7740 \\(x\\) \u5355\u8c03\uff0c\u53cd\u8fc7\u6765\u4e5f\u662f\u4e00\u6837\u7684\u3002</p> <p>\u6240\u4ee5\u6bcf\u6b21\u6c42\u5b8c\u4e4b\u540e\u6bd4\u8f83\u4e00\u4e0b \\(x\\) \u548c \\(e\\) \u8fdb\u800c\u8c03\u6574 \\(k\\) \u5373\u53ef\u3002</p> <p>But\uff0c\u8fd9\u53ea\u662f\u6700\u7b80\u5355\u7684\u60c5\u51b5</p> <p>\u6ce8\u610f\u5230\u5176\u5b9e\u659c\u7387\u548c\u5207\u70b9\u5e76\u4e0d\u4e00\u5b9a\u80fd\u5efa\u7acb\u51fd\u6570\u5173\u7cfb\uff0c\u56e0\u4e3a\u4e00\u4e2a\u659c\u7387\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u5207\u70b9\uff0c\u6bd4\u5982\u521a\u624d\u7684\u60c5\u51b5\uff0c\u6709\u53ef\u80fd\u51fa\u73b0\u4e00\u4e2a\u70b9\u4e24\u8fb9\u7684\u659c\u7387\u76f8\u7b49\u7684\u60c5\u51b5\u3002</p> <p>\u90a3\u4e48\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u89e3\u51b3\u8fd9\u4e2a\u4e00\u5bf9\u591a\u7684\u95ee\u9898\u3002</p> <p>\u4e00\u79cd\u5e38\u89c1\u7684\u89e3\u51b3\u7b56\u7565\u662f\uff0c\u6211\u4eec\u628a\u8fd9\u591a\u4e2a\u70b9\u878d\u5408\u6210\u4e00\u4e2a\u70b9\u8003\u8651\u3002</p> <p>\u5177\u4f53\u505a\u6cd5\u662f\u6c42 mst \u7684\u65f6\u5019\u5982\u679c\u6709\u76f8\u540c weight\uff0c\u8ba9\u53ef\u7231\u8fb9\u66f4\u9760\u524d\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u76f4\u63a5\u5bf9\u7740\u8fd9\u79cd\u60c5\u51b5\u83bd\uff0c\u5f53\u4e00\u4e2a\u659c\u7387\u5bf9\u5e94\u591a\u4e2a\u5207\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6c42\u51fa\u6765\u7684 \\(x\\) \u5e94\u8be5\u662f\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 \\(x\\) \u91cc\u9762\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u56e0\u4e3a\u6392\u5e8f\u7684\u65f6\u5019\u5df2\u7ecf\u8d2a\u5fc3\u5730\u8ba9\u53ef\u7231\u8fb9\u9009\u7684\u5c3d\u53ef\u80fd\u591a\u3002</p> <p>\u4e8e\u662f\u540c\u4e00\u6761\u7ebf\u4e0a\u7684\u6240\u6709\u70b9\u7684\u5f71\u54cd\u90fd\u88ab\u8003\u8651\u5230\u8fd9\u6761\u7ebf\u4e0a\u6700\u9760\u540e\u7684\u4e00\u4e2a\u5207\u70b9\u4e0a\u4e86\uff01</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8003\u8651\u201c\u62d0\u70b9\u201d\u5373\u4e24\u8fb9\u659c\u7387\u4e0d\u7b49\u7684\u70b9\u4e86\u3002</p> <p>\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u505a\uff0c\u4e8c\u5206\u6ee1\u8db3 \\(x &gt; e\\) \u7684\u6240\u6709 \\(k\\) \u91cc\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002</p> <p>\u5f88\u663e\u7136 \\(e\\) \u5bf9\u5e94\u7684\u5207\u70b9\u4e00\u5b9a\u5728\u8fd9\u6761\u7ebf\u4e0a\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u53cd\u8bc1\uff0c\u7136\u540e\u7b97 \\(f(e)\\) \u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u6c42\u51fa\u6765\u7684\u70b9\u7684\u6a2a\u5750\u6807\u4e3a \\(x\\)\uff0c\u663e\u7136 \\(b = f(x) - kx = f(e) - ke\\)</p> <p>\u6240\u4ee5 \\(f(e) = f(x) - kx + ke\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u9700\u8981\u6c42\u51fa\u6765 \\(x\\) \u5904\u7684\u622a\u8ddd\u7136\u540e\u52a0\u4e0a \\(ke\\) \u5373\u53ef\u3002</p> Code <pre><code>// No code was here!\n</code></pre> <p>\u8fd9\u4e2a\u53ea\u662f\u6700\u57fa\u7840\u7684\u5e94\u7528\uff0c\u5176\u5b83\u7684\u4ee5\u540e\u6709\u65f6\u95f4\u5c31\u8865\u4e0a\u3002</p> <p>ref: </p> <ul> <li> <p>https://www.cnblogs.com/CreeperLKF/p/9045491.html</p> </li> <li> <p>https://www.cnblogs.com/TianMeng-hyl/p/14972355.html</p> </li> </ul> <p>\u53e6\u5916\u5199\u8fd9\u4e2a\u7684\u65f6\u5019\u6211\u5220\u6539\u4e86\u5f88\u591a\u6b21\u3002</p> <p>\u5176\u5b9e\u5c31\u662f\u60f3\u628a\u8fd9\u4e2a\u4e1c\u897f\u662f\u600e\u4e48\u6765\u7684\u8bf4\u6e05\u695a\uff0c\u8bf4\u7684\u522b\u4eba\u80fd\u542c\u61c2\uff0c\u4e5f\u95ee\u4e0d\u5012\u6211\u3002</p> <p>\u7136\u540e\u5c31\u82b1\u4e86\u4e0d\u5c11\u65f6\u95f4\uff0c\u7ec8\u4e8e\u641e\u61c2\u4e86\u3002</p> <p>\u4f46\u662f\u8bf4\u7684\u65f6\u5019\u5c31\u6709\u70b9\u90a3\u5565\uff0c\u5199\u4e86 4k \u5168\u90e8\u90fd\u6ce8\u91ca\u6389\u4e86\u3002</p> <p>\u6240\u4ee5\u8fd9\u91cc\u8981\u7279\u522b\u611f\u8c22 \\(2 \\times \\text{mid}(\\texttt{'sxp'+'uzr'})\\) \u5c0f\u5929\u4f7f\u3002</p> <p>\u662f\u4ed6\u8ba9\u6211\u7a81\u7136\u601d\u8def\u5982\u6cc9\u6d8c\uff0c\u5199\u51fa\u4e86\u8fd9\u7bc7 post\uff01wwwww</p>"}, {"location": "algor/string/kmp/", "title": "KMP", "text": ""}, {"location": "algor/string/kmp/#_1", "title": "\u524d\u7f00\u51fd\u6570", "text": "<p>\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u5b9a\u4e49\u5176\u524d\u7f00\u51fd\u6570\u4e3a\u5b83\u5bf9\u5e94\u524d\u7f00\u7684 border \u957f\u5ea6\uff1a</p> \\[ \\pi[i] = \\max\\{j\\}, (s[1\\dots j] = s[i - j + 1 \\dots i], j &lt; i) \\] <p>\u82e5\u4e0d\u5b58\u5728\u8fd9\u6837\u7684 \\(j\\)\uff0c\u5219 \\(\\pi[i] = 0\\)\u3002</p> <p>\u53ef\u4ee5\u7406\u89e3\u6210\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684 \\(s\\) \u7684\u975e\u524d\u7f00\u5b50\u4e32\u548c \\(s\\) \u7684\u524d\u7f00\u80fd\u591f\u5339\u914d\u7684\u6700\u5927\u957f\u5ea6\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u5728\u5f88\u591a\u4e32\u4e32\u9898\u91cc\u9762\u90fd\u4f1a\u6709\u7528\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u63d0\u4e00\u4e0b\u8fd9\u4e2a\u4e1c\u897f\u7684\u8ba1\u7b97\u3002</p> <p>\u6700\u66b4\u529b\u7684\u505a\u6cd5\u5c31\u662f\uff0c\u8003\u8651\u5bf9\u4e8e \\(i\\)\uff0c\u679a\u4e3e\u6240\u6709\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u975e\u524d\u7f00\u5b50\u4e32\uff0c\u5e76\u5c06\u5176\u548c\u5bf9\u5e94\u524d\u7f00\u6bd4\u8f83\u3002</p> <p>\u76f4\u63a5\u505a\u662f \\(O(n^3)\\) \u7684\uff0c\u5982\u679c\u7528 Hash \u4f18\u5316\u4e00\u4e0b\u5c31\u662f \\(O(n^2)\\) \u7684\u3002</p> <p>\u4f46\u662f\u5b58\u5728\u4e00\u79cd\u66f4\u52a0\u4f18\u79c0\u7684\u65b9\u6cd5\u53ef\u4ee5 \\(O(n + m)\\) \u8ba1\u7b97\u5b83\uff0c\u5c31\u662f\u4e0b\u9762\u8981\u8bf4\u7684\u540d\u4e3a Knuth-Morris-Pratt \u7684\u7b97\u6cd5\u3002</p>"}, {"location": "algor/string/kmp/#kmp", "title": "KMP", "text": "<p>\u9996\u5148\u6ce8\u610f\u5230\u4e00\u4e2a\u70b9\u662f\uff0c\u6bcf\u6b21 \\(\\pi[i]\\) \u7684\u53d8\u5316\u4e00\u5b9a\u662f\u5728 \\([0,1]\\) \u4e4b\u95f4\u7684\uff0c\u6700\u591a\u52a0\u4e00\u4e0d\u7136\u4e0d\u53d8\u3002</p> <p>\u8fd9\u4e2a\u6027\u8d28\u6bd4\u8f83\u663e\u7136\uff0c\u4f46\u662f\u5f88\u91cd\u8981\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5b9a\u4e49 \\(\\pi[i]\\) \u7684\u201d\u5019\u9009\u9879\u201c\u4e3a\u6ee1\u8db3 \\(s[1\\dots j] = s[i - j + 1 \\dots i], j &lt; i\\) \u7684\u6240\u6709 \\(j\\)\u3002</p> <p>\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u53e6\u5916\u4e00\u4e2a Theorem\uff1a</p> <p>\u5982\u679c \\(j\\) \u662f \\(\\pi[i]\\) \u7684\u4e00\u4e2a\u5019\u9009\u9879\uff0c\u90a3\u4e48 \\(\\pi[j]\\) \u4e00\u5b9a\u662f \\(\\pi[i]\\) \u5019\u9009\u9879\u4e14 \\(\\forall k \\in (\\pi[j], j)\\)\uff0c\\(k\\) \u90fd\u4e0d\u662f \\(\\pi[i]\\) \u7684\u5019\u9009\u9879\u3002</p> <p>\u5373\u662f\uff0c\\(\\pi[i]\\) \u7684\u5019\u9009\u9879\u4e00\u5b9a\u662f \\(\\pi[j], \\pi[\\pi[j]], \\dots\\)\u3002</p> <p>\u524d\u4e00\u6bb5\u6bd4\u8f83\u663e\u7136\uff0c\u540e\u4e00\u6bb5\u53ef\u4ee5\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff0c\u53ea\u8981\u8bf4\u660e\u8fd9\u4e2a\u4e00\u5b9a\u548c \\(\\pi\\) \u5b9a\u4e49\u4e2d\u7684 \\(\\max\\) \u76f8\u77db\u76fe\u5373\u53ef\u3002</p> <p>\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u7b2c\u4e00\u4e2a Observation \u770b\u51fa\u53e6\u5916\u4e00\u4e2a Theorem\uff1a</p> <p>\u5982\u679c \\(\\pi[i]\\) \u7684\u4e00\u4e2a\u5019\u9009\u9879\u662f \\(j\\)\uff0c\u90a3\u4e48 \\(\\pi[i - 1]\\) \u7684\u4e00\u4e2a\u5019\u9009\u9879\u662f \\(j - 1\\)\u3002</p> <p>\uff08\u4e24\u4e2a\u5b57\u7b26\u4e32 \\(s[i - j + 1\\dots i]\\) \u548c \\(s[1 \\dots j]\\) \u76f8\u7b49\u7684\u524d\u63d0\u662f \\(s[i - j + 1, \\dots i - 1] = s[1\\dots j - 1]\\)\uff09</p> <p>\u4e8e\u662f\u7ed3\u5408\u8fd9\u4e24\u4e2a\u5f15\u7406\uff0c\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a\u7b97\u6cd5\uff1a</p> <p>\u521d\u59cb\u5316 \\(\\pi[1] = 0\\)\uff0c\u4ece \\(i = 2\\) \u5f00\u59cb\u8ba1\u7b97\uff0c\u521d\u59cb\u4ee4 \\(j = 0\\)\uff0c</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a \\(i\\) \uff0c\u5047\u8bbe\u6b64\u65f6 \\(\\pi[1\\sim i - 1]\\) \u90fd\u5df2\u7ecf\u6c42\u51fa\u6765\uff0c\u7136\u540e\u6bcf\u6b21\u6211\u4eec\u90fd\u8ba9 \\(\\pi[i]\\) \u7684\u5019\u9009\u9879\u662f \\(\\pi[i - 1] + 1, \\pi[\\pi[i - 1]] + 1 \\dots\\) \u7136\u540e\u6c42\u6700\u5927\u503c\u5373\u53ef\u3002</p> <p>\u5f53\u7136\u6c42\u6700\u5927\u503c\u7684\u65f6\u5019\u9700\u8981\u5224\u65ad\u65f6\u5019\u5408\u6cd5\uff0c\u6240\u4ee5\u5b9e\u73b0\u7684\u65f6\u5019\u6211\u4eec\u4e00\u822c\u5012\u7740\u6765\uff0c\u4ece \\(j = \\pi[i - 1]\\) \u5f00\u59cb\uff0c\u4e0d\u65ad\u8df3 \\(\\pi\\) \u76f4\u5230\u5408\u6cd5\uff0c\u7136\u540e\u8bb0\u5f55\u6b64\u65f6\u7684 \\(j + 1\\) \u4f5c\u4e3a \\(\\pi[i]\\)\uff0c\u5982\u679c\u6700\u540e \\(j = 0\\) \u4e86\uff0c\u8bc1\u660e\u4e0d\u5b58\u5728\u5019\u9009\u9879\uff0c\\(\\pi[i] = 0\\)\u3002</p> <p>\u56e0\u4e3a \\(j\\) \u521d\u59cb\u503c\u5c31\u662f\u4e0a\u4e00\u5c42\u7684\u524d\u7f00\u51fd\u6570 \\(\\pi[i - 1]\\)\uff0c\u6240\u4ee5\u6bcf\u6b21\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u5c1d\u8bd5\u8ba9 \\(j + 1\\) \u6210\u4e3a\u65b0\u7684\u5019\u9009\u9879\uff0c\u5982\u679c\u5f53\u524d\u7684\u5019\u9009\u9879\u4e0d\u5408\u6cd5\uff0c\u4e4b\u540e\u8df3 \\(\\pi\\) \u627e\u4e0b\u4e00\u4e2a\u5019\u9009\u9879\u7684\u6b65\u9aa4\u5c31\u53eb\u505a\u201c\u5931\u914d\u201d\u3002</p> <p>\u5b9e\u73b0\uff1a</p> <pre><code>Next[1] = 0; // \u8bb0\u5f55 pi \u7684\u540c\u65f6\u4f5c\u4e3a\u5931\u914d\u6307\u9488\uff0cNext \u7684\u610f\u4e49\u53ef\u4ee5\u7406\u89e3\u4e3a\u201c\u4e0b\u4e00\u4e2a\u5019\u9009\u9879\u201d\u3002\nfor(int i = 2, j = 0; i &lt;= n; ++i) {\nwhile(j &gt; 0 &amp;&amp; s[i] != s[j + 1]) j = Next[j];\nif(s[i] == s[j + 1]) j ++;\nNext[i] = j;\n}\n</code></pre> <p>\u663e\u7136\u6bcf\u6b21 \\(j\\) \u6700\u591a\u589e\u52a0 \\(1\\)\uff0c\u800c\u8df3 \\(\\pi\\) \u7684\u6b21\u6570\u663e\u7136\u4e0d\u4f1a\u8d85\u8fc7\u5f53\u524d\u5c42\u5f00\u59cb\u7684\u65f6\u5019 \\(j\\) \u7684\u503c\u548c <code>while</code> \u7ed3\u675f\u4ee5\u540e\u7684 \\(j\\) \u7684\u5dee\u503c\u3002</p> <p>\u6240\u4ee5\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p>"}, {"location": "algor/string/kmp/#_2", "title": "\u5355\u6a21\u5f0f\u5339\u914d", "text": "<p>\u53ef\u4ee5\u8003\u8651\u518d\u8bbe\u4e00\u4e2a \\(f[i]\\)\uff0c\u8868\u793a\u6587\u672c\u4e32\u7684\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u5b50\u4e32\uff08\u6ce8\u610f\u4e0d\u662f\u975e\u524d\u7f00\u4e86\uff09\u548c\u6a21\u5f0f\u4e32\u7684\u524d\u7f00\u80fd\u5339\u914d\u7684\u6700\u5927\u957f\u5ea6\u3002</p> <p>\u5982\u679c \\(f[i]\\) \u548c\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\u76f8\u7b49\uff0c\u90a3\u4e48\u8bc1\u660e\u6a21\u5f0f\u4e32\u5728\u6587\u672c\u4e32\u7684 \\([i - n + 1, i]\\) \u8fd9\u4e2a\u4f4d\u7f6e\u51fa\u73b0\u4e86\u3002</p> <p>\u6c42\u6cd5\u548c Next \u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6bcf\u6b21\u5339\u914d\u7684\u65f6\u5019\u6211\u4eec\u662f\u8ba9\u6a21\u5f0f\u4e32\u7684\u524d\u7f00\u548c\u6587\u672c\u4e32\u7684\u4e00\u4e2a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u5b50\u4e32\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u65e0\u6cd5\u5339\u914d\u5c31\u5728\u6a21\u5f0f\u4e32\u4e0a\u8df3 \\(\\pi\\)\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5408\u6cd5\u7684\u6a21\u5f0f\u4e32\u524d\u7f00\u53ef\u4ee5\u548c\u6587\u672c\u4e32\u7684\u5b50\u4e32\u5339\u914d\u3002</p> <p>\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\uff0c\u5728 \\(t\\) \uff08\u6587\u672c\u4e32\uff09\u4ee5 \\(i - 1\\) \u7ed3\u5c3e\u7684\u5b50\u4e32\u548c \\(s[1, j]\\) \uff08\u6a21\u5f0f\u4e32\uff09\u5df2\u7ecf\u5339\u914d\u4e0a\u4e86\u7684\u65f6\u5019\uff0c\u4e0d\u65ad\u5c1d\u8bd5\u6269\u5c55\u53ef\u4ee5\u548c\u6587\u672c\u4e32\u7684\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u5b50\u4e32\u5339\u914d\u7684\u6a21\u5f0f\u4e32\u7684\u524d\u7f00\u957f\u5ea6\uff0c\u5982\u679c\u80fd\u6269\u5c55\u5230\u6574\u4e2a\u6a21\u5f0f\u4e32\u90a3\u5c31\u8bc1\u660e\u5339\u914d\u6210\u529f\u4e86\u3002</p> <p>\u5f53\u7136\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\u4e0d\u4e00\u5b9a\u8981\u5c0f\u4e8e\u6587\u672c\u4e32\uff0c\u5982\u679c\u5927\u4e8e\u4e86\u663e\u7136\u662f\u65e0\u6cd5\u5339\u914d\u6210\u529f\u7684\uff0c\u4f46\u662f\u5728\u5176\u4ed6\u9898\u91cc\u9762\u5c31\u53ef\u4ee5\u6709\u522b\u7684\u5e94\u7528\uff0c\u6bd4\u5982\u6c42\u6a21\u5f0f\u4e32\u6700\u957f\u7684\u51fa\u73b0\u5728\u6587\u672c\u4e32\u91cc\u7684\u524d\u7f00\u957f\u5ea6\u662f\u591a\u5c11\u4e4b\u7c7b\u7684\u3002</p> <p>\u5b9e\u73b0\uff1a</p> <pre><code>Next[1] = 0;\nfor(int i = 2, j = 0; i &lt;= n; ++i) {\nwhile(j &gt; 0 &amp;&amp; s[i] != s[j + 1]) j = Next[j];\nif(s[i] == s[j + 1]) j ++;\nNext[i] = j;\n}\nfor(int i = 1, j = 0; i &lt;= m; ++i) {\nwhile(j &gt; 0 &amp;&amp; (j == n || s[i] != s[j + 1])) j = Next[j];\nif(t[i] == s[j + 1]) ++j;\nf[i] = j;\nif(f[i] == n) orc[++cnt] = i - n + 1;\n}\n</code></pre> <p>\u590d\u6742\u5ea6 \\(O(n + m)\\)\u3002</p> <p>\u6ce8\u610f\u6c42 \\(f\\) \u7684\u65f6\u5019\u662f\u4ece \\(i = 1\\) \u5f00\u59cb\uff0c\u5e76\u4e14\u5982\u679c \\(j = n\\) \uff08\\(j + 1\\) \u8fd9\u4e2a\u4f4d\u7f6e\u4e0d\u5b58\u5728\u5b57\u7b26\u4e86\uff09\uff0c\u90a3\u4e48 \\(j\\) \u540c\u6837\u9700\u8981\u8df3 \\(\\pi\\)\u3002</p>"}, {"location": "algor/string/kmp/#cf1200e-compress-words", "title": "CF1200E Compress Words", "text": "<p>\u7ed9\u4f60 \\(n\\) \u4e2a\u5b57\u7b26\u4e32\uff0c\u7b54\u6848\u4e32\u521d\u59cb\u4e3a\u7a7a\u3002\u7b2c \\(i\\) \u6b65\u5c06\u7b2c \\(i\\) \u4e2a\u5b57\u7b26\u4e32\u52a0\u5230\u7b54\u6848\u4e32\u7684\u540e\u9762\uff0c \u4f46\u662f\u5c3d\u91cf\u5730\u53bb\u6389\u91cd\u590d\u90e8\u5206\uff08\u5373\u53bb\u6389\u4e00\u4e2a\u6700\u957f\u7684\u3001\u662f\u539f\u7b54\u6848\u4e32\u7684\u540e\u7f00\u3001\u4e5f\u662f\u7b2c \\(i\\) \u4e2a\u4e32\u7684\u524d\u7f00\u7684\u5b57\u7b26\u4e32\uff09\uff0c\u6c42\u6700\u540e\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u3002 \\(n \\le 1e5, \\sum len \\le 1e6\\)\u3002</p> <p>\u8fd9\u91cc\u5c31\u662f\u548c KMP \u4e2d \\(f\\) \u7684\u5b9a\u4e49\u7c7b\u4f3c\u7684\u3002</p> <p>\u8bbe\u7b54\u6848\u4e32\u5f53\u524d\u957f\u5ea6\u4e3a \\(N\\)\uff0c\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\u4e3a \\(M\\)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u7b54\u6848\u4e32\u7684\u540e\u7f00\uff08\u5373\u4ee5 \\(N\\) \u7ed3\u5c3e\u7684\u5b50\u4e32\uff09\u548c\u65b0\u52a0\u5165\u7684\u4e32\u7684\u524d\u7f00\u53ef\u4ee5\u5339\u914d\u7684\u6700\u5927\u957f\u5ea6\u7136\u540e\u5408\u5e76\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u5230\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\u5982\u679c\u76f4\u63a5\u7b97\u6574\u4e2a\u4e32\u5f88\u4e8f\uff0c\u6240\u4ee5\u8003\u8651\u524d\u540e\u5404\u53d6 \\(\\min(N,M)\\) \u957f\u5ea6\u7684\u5b50\u4e32\u62ff\u6765\u5339\u914d\u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\nconst int si_len = 1e6 + 10;\n\nint n;\nstring ans;\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; ans;\nfor(int i = 2; i &lt;= n; ++i) {\nstring nw; cin &gt;&gt; nw;\nint N = int(ans.size()), M = int(nw.size());\nint len = min(N, M);\nstring s = nw.substr(0, len), t = ans.substr(N - len, len);\ns = ' ' + s, t = ' ' + t;\nvector&lt;int&gt; Next(len + 1), f(len + 1);\nNext[1] = 0;\nfor(int j = 2, k = 0; j &lt;= len; ++j) {\nwhile(k &gt; 0 &amp;&amp; s[j] != s[k + 1]) k = Next[k];\nif(s[j] == s[k + 1]) ++k;\nNext[j] = k;\n}\nfor(int j = 1, k = 0; j &lt;= len; ++j) {\nwhile(k &gt; 0 &amp;&amp; t[j] != s[k + 1]) k = Next[k];\nif(t[j] == s[k + 1]) ++k;\nf[j] = k;\n}\nint merge_len = f[len];\nnw.erase(0, merge_len);\nans += nw;\n}   cout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/string/kmp/#poj2406-power-strings", "title": "POJ2406 Power Strings", "text": "<p>\u6c42\u5b57\u7b26\u4e32\u7684\u6700\u5c0f\u5faa\u73af\u8282\uff0c\u591a\u6d4b\u3002 \\(n \\le 10^6\\)\u3002</p> <p>\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c \\((n - \\pi[n]) | n\\)\uff0c\u5219\u5b57\u7b26\u4e32\u5b58\u5728\u5faa\u73af\u8282\uff0c\u6700\u5c0f\u5faa\u73af\u8282\u957f\u5ea6\u4e3a \\(\\dfrac{n}{n - \\pi[n]}\\)\u3002</p> <p>\u7136\u540e\u5199\u8d77\u6765\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4e0d\u8fc7 sb POJ \u4e0d\u652f\u6301\u9ad8\u6807\u51c6\u8bed\u6cd5\uff0cCE \u4e86\u597d\u591a\u6b21\u3002\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\n// using i64 = long long;\n\nconst int si = 1e6 + 10;\n\nchar s[si];\nint n, Next[si];\n\nint main() {\n\nwhile(true) {\nscanf(\"%s\", s);\nif(s[0] == '.') break;\nn = strlen(s);\nNext[1] = 0;\nfor(int i = 2, j = 0; i &lt;= n; ++i) {\nwhile(j &gt; 0 &amp;&amp; s[i - 1] != s[j]) j = Next[j];\nif(s[i - 1] == s[j]) j ++;\nNext[i] = j;\n}\nint len = 1;\nif(n % (n - Next[n]) == 0) len = n / (n - Next[n]);\nprintf(\"%d\\n\", len);\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "algor/string/string-hash/", "title": "\u5b57\u7b26\u4e32\u54c8\u5e0c", "text": ""}, {"location": "algor/string/string-hash/#hash", "title": "\u5b57\u7b26\u4e32 Hash", "text": "<p>\u601d\u60f3\u548c Hash \u6ca1\u6709\u672c\u8d28\u533a\u522b\u3002</p> <p>\u8981\u5173\u6ce8\u7684\u70b9\u4f9d\u65e7\u662f\u600e\u4e48\u8bbe\u8ba1 Hash function\uff0c\u600e\u4e48\u5904\u7406 Hash \u51b2\u7a81\u3002</p> <p>\u8003\u8651\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6620\u5c04\u6210\u4e00\u4e2a\u6570\uff0c\u8fd9\u4e2a\u5229\u7528 Hash function \u5373\u53ef\u3002</p> <p>\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\u662f Hash function \u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff1a</p> <ul> <li> <p>\u5728 Hash \u51fd\u6570\u503c\u4e0d\u4e00\u6837\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e00\u5b9a\u4e0d\u4e00\u6837\uff1b</p> </li> <li> <p>\u5728 Hash \u51fd\u6570\u503c\u4e00\u6837\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0d\u4e00\u5b9a\u4e00\u6837\uff08\u4f46\u6709\u5927\u6982\u7387\u4e00\u6837\uff0c\u4e14\u6211\u4eec\u5f53\u7136\u5e0c\u671b\u5b83\u4eec\u603b\u662f\u4e00\u6837\u7684\uff09\u3002</p> </li> </ul> <p>Hash \u51fd\u6570\u503c\u4e00\u6837\u65f6\u539f\u5b57\u7b26\u4e32\u5374\u4e0d\u4e00\u6837\u7684\u60c5\u51b5\u53eb\u505a\u54c8\u5e0c\u51b2\u7a81\u3002</p> <p>\u505a\u6cd5\u662f\uff0c\u6211\u4eec\u9009\u53d6\u4e00\u4e2a\u5927\u8d28\u6570 \\(base\\)\uff0c\u7136\u540e\u628a\u5b57\u7b26\u4e32\u770b\u505a\u4e00\u4e2a \\(base\\) \u8fdb\u5236\u6570\uff0c\u7b97\u51fa\u8fd9\u4e2a\u503c\u4e4b\u540e\u5bf9\u53e6\u5916\u4e00\u4e2a\u5927\u8d28\u6570 \\(mod\\) \u53d6\u6a21\u3002</p> <p>\u4e0d\u8fc7\u5176\u5b9e \\(base\\) \u53ea\u9700\u8981\u5927\u4e8e\u5b57\u7b26\u96c6\u5927\u5c0f\u5373\u53ef\uff0c\u6ce8\u610f\u4e00\u822c \\(base &lt; mod\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5b57\u7b26\u4e32 \\(s\\)\uff0c\uff08\u4ece \\(1\\) \u5f00\u59cb\uff09\u5b83\u7684 Hash \u503c\u662f\u8fd9\u6837\u8ba1\u7b97\u7684\uff1a</p> \\[ H(s) = \\sum\\limits_{i = 1}^{n} (index(s[i]) \\times base^{n - i}) \\% mod \\] <p>\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u4e5f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u652f\u6301\u57fa\u672c\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u3002</p> <p>\u6bd4\u5982 \\(H(s + ch) = (H(s) \\times b + idx(ch)) \\% mod\\)\uff0c\\(ch\\) \u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u6709\u70b9\u7c7b\u4f3c\u4e8e\u4f4d\u8fd0\u7b97\u7684\u5de6\u79fb\u8fd0\u7b97\u3002</p> <p>\u7136\u540e\u51cf\u53bb\u4e00\u4e2a\u5b57\u7b26\u6216\u8005\u5728\u5f00\u5934\u52a0\u5b57\u7b26\u4e5f\u7c7b\u4f3c\uff08\u5f53\u6210 \\(base\\) \u8fdb\u5236\u6570\u5373\u53ef\uff09</p> <p>\u4e0d\u8fc7\u51cf\u53bb\u7684\u65f6\u5019\u8bb0\u5f97\u8981\u52a0\u4e0a \\(mod\\) \u514d\u5f97\u5bc4\u6389\u3002</p> <p>\u5982\u679c\u662f\u5728\u4e2d\u95f4\u4fee\u6539\u7684\u8bdd\u5c31\u76f4\u63a5\u627e\u5230\u5bf9\u5e94\u4f4d\u7f6e\u51cf\u6389\u5c31\u884c\u4e86\u3002</p> <p>\u7136\u540e\u6709\u8fd9\u4e2a\u4e1c\u897f\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u6240\u6709\u524d\u7f00\u7684 Hash \u503c\u3002</p> <p>\u6709\u4e86\u524d\u7f00 Hash\uff0c\u6211\u4eec\u60f3\u5e72\u7684\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662f\u5feb\u901f\u6c42\u51fa\u5b50\u4e32\u7684 Hash\u3002</p> <p>\u63a8\u4e00\u4e0b\u5f0f\u5b50\uff0c\u663e\u7136\u53ef\u4ee5\u53d1\u73b0\uff1a\\(H(s[l\\dots r]) = H(s[1\\dots r]) - H(s[1\\dots l - 1]) \\times base^{r - l + 1}\\)\uff0c\u8bb0\u5f97\u53d6\u6a21\u3002</p> <p>\u7136\u540e\u5c31\u80fd \\(O(n)\\) \u9884\u5904\u7406 \\(H, base^n\\) \u4e4b\u540e \\(O(1)\\) \u8be2\u95ee\u5b50\u4e32 Hash \u4e86\uff0c\u5f53\u7136 \\(base^n\\) \u4e5f\u662f\u53ef\u4ee5\u5feb\u901f\u5e42\u7b97\u7684\u3002</p> <p>\u6ce8\u610f\u5230\u8fd9\u6837\u5355\u6b21 Hash \u7684\u51b2\u7a81\u6982\u7387\u8fd8\u662f\u6709\u70b9\u5c0f\u5c0f\u7684\u9ad8\uff0c\u6240\u4ee5\u4e3a\u4e86\u6b63\u786e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u53d6\u4e24\u4e2a\u5927\u8d28\u6570\u5206\u522b\u53d6\u6a21\uff0c\u7136\u540e\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a Hash \u503c\u90fd\u76f8\u7b49\u3002</p> <p>\u4e3a\u4e86\u964d\u4f4e\u51b2\u7a81\u6982\u7387\uff0c\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u4e00\u5bf9\u5b6a\u751f\u7d20\u6570\uff0c\u4e00\u822c\u662f \\(10^9 + 7, 10^9 + 9\\)\uff0c\u5f53\u7136\u8fd9\u4e2a\u6bd4\u8f83\u5bb9\u6613\u88ab\u5361\uff08\u56e0\u4e3a\u8fc7\u4e8e\u8457\u540d\uff09\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7684\u7d20\u6570\u5bf9\uff0c\u6bd4\u5982 \\(998244853,10^9+9\\) \u8fd9\u79cd\uff0c\\(base\\) \u4e00\u822c\u53d6 \\(131, 13331\\) \u8fd9\u79cd\u3002</p> <p>\u5982\u679c\u60f3\u907f\u514d\u8fc7\u591a\u7684\u53d6\u6a21\uff0c\u53ef\u4ee5\u4f7f\u7528 ull \u5b58 Hash \u503c\uff0c\u76f4\u63a5\u4e0d\u505a\u4efb\u4f55\u53d6\u6a21\uff0c\u8fd9\u6837\u76f8\u5f53\u4e8e\u5bf9 \\(2^{64}\\) \u53d6\u6a21\uff08\u81ea\u7136\u6ea2\u51fa\u6cd5\uff09</p>"}, {"location": "algor/string/string-hash/#_1", "title": "\u5e94\u7528 &amp; \u4f8b\u9898", "text": ""}, {"location": "algor/string/string-hash/#_2", "title": "\u5b57\u7b26\u4e32\u5339\u914d", "text": "<p>\u5355\u6a21\u5f0f\u5339\u914d\uff0c\u76f4\u63a5\u8003\u8651\u5bf9\u4e8e\u6a21\u5f0f\u4e32\u6c42\u51fa\u5b83\u7684 Hash \u503c\uff0c\u7136\u540e\u626b\u63cf\u6587\u672c\u4e32\u7684\u6240\u6709\u548c\u6a21\u5f0f\u4e32\u957f\u5ea6\u76f8\u7b49\u7684\u5b50\u4e32\u770b\u662f\u5426\u80fd\u5339\u914d\u5c31\u884c\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p>"}, {"location": "algor/string/string-hash/#_3", "title": "\u6700\u957f\u56de\u6587\u5b50\u4e32", "text": "<p>\u8003\u8651\u4e00\u4e2a\u7ecf\u5178 Trick\uff0c\u56e0\u4e3a\u56de\u6587\u4e32\u7684\u957f\u5ea6\u663e\u7136\u5177\u6709\u5355\u8c03\u6027\uff0c\u5982\u679c \\(len\\) \u957f\u5ea6\u7684\u53ef\u884c\uff0c\u90a3\u4e48 \\(len - 2\\) \u7684\u5fc5\u7136\u53ef\u884c\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u4e8c\u5206\u7b54\u6848 \\(len\\)\uff0c\u6bcf\u6b21 Check \u7684\u65f6\u5019\u76f4\u63a5\u679a\u4e3e\u56de\u6587\u4e2d\u5fc3\uff0c\u6bd4\u8f83\u4e24\u8fb9\u8fd9\u4e24\u4e2a\u5b50\u4e32\u7684 Hash \u503c\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002</p> <p>\u9700\u8981\u9884\u5904\u7406\u524d\u540e\u7f00 Hash \u503c\uff0c\u6574\u4f53\u590d\u6742\u5ea6 \\(O(n \\log n)\\)\u3002</p> <p>\u8fd9\u4e2a\u4e5f\u53ef\u4ee5 Manacher \\(O(n)\\) \u505a\u3002</p>"}, {"location": "algor/string/string-hash/#_4", "title": "\u6700\u957f\u516c\u5171\u5b50\u4e32", "text": "<p>\u8fd9\u91cc\u662f \\(m\\) \u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(n\\) \u7684\u5b57\u7b26\u4e32\u6c42\u3002</p> <p>\u8fd9\u4e2a\u7c7b\u4f3c\u56de\u6587\u5b50\u4e32\u4e5f\u53ef\u4ee5\u4e8c\u5206\u3002</p> <p>check \u76f4\u63a5\u5bf9\u4e8e\u6240\u6709\u957f\u5ea6\u4e3a \\(mid\\) \u7684\u5b50\u4e32\uff0cHash \u4e00\u4e0b\u5206\u522b\u6254\u5230 \\(n\\) \u4e2a Hash table \u91cc\u9762\u6c42\u4ea4\u96c6\u5c31\u884c\uff0c\u590d\u6742\u5ea6 \\(O(n\\log n/m)\\)\uff0c\u76ee\u524d\u4e0d\u592a\u61c2\u4e3a\u5565\u662f\u8fd9\u4e2a\u590d\u6742\u5ea6\u3002</p> <p>\u4f46\u662f\u5b83\u786e\u5b9e\u6bd4\u76f4\u63a5 \\(O(n^2)\\) dp \u6548\u7387\u9ad8\u3002</p>"}, {"location": "algor/string/string-hash/#_5", "title": "\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u4e2a\u6570", "text": "<p>\u8fd9\u4e2a\u597d\u50cf\u53ea\u80fd \\(n^2\\) \u5de6\u53f3\u590d\u6742\u5ea6 /ng</p> <p>\u505a\u6cd5\u5c31\u662f\u76f4\u63a5\u626b\u4e00\u6b21\u6bcf\u4e2a\u5b50\u4e32\uff0c\u7136\u540e\u628a\u5b83\u7684 Hash \u503c\u6254\u5230\u4e00\u4e2a\u6570\u7ec4/set\u91cc\u8ba1\u6570\u5c31\u884c\u3002</p> <p>\u5176\u672c\u8d28\u5c31\u662f\u5bf9\u66b4\u529b\u505a\u4e86\u4e00\u4e2a\u4f18\u5316\uff0c\u6709\u6ca1\u6709\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\u6211\u6682\u65f6\u4e0d\u77e5\u9053\u3002</p>"}, {"location": "algor/string/string-hash/#cf1200e-compress-words", "title": "CF1200E Compress Words", "text": "<p>\u7ed9\u4f60 \\(n\\) \u4e2a\u5b57\u7b26\u4e32\uff0c\u7b54\u6848\u4e32\u521d\u59cb\u4e3a\u7a7a\u3002\u7b2c \\(i\\) \u6b65\u5c06\u7b2c \\(i\\) \u4e2a\u5b57\u7b26\u4e32\u52a0\u5230\u7b54\u6848\u4e32\u7684\u540e\u9762\uff0c \u4f46\u662f\u5c3d\u91cf\u5730\u53bb\u6389\u91cd\u590d\u90e8\u5206\uff08\u5373\u53bb\u6389\u4e00\u4e2a\u6700\u957f\u7684\u3001\u662f\u539f\u7b54\u6848\u4e32\u7684\u540e\u7f00\u3001\u4e5f\u662f\u7b2c \\(i\\) \u4e2a\u4e32\u7684\u524d\u7f00\u7684\u5b57\u7b26\u4e32\uff09\uff0c\u6c42\u6700\u540e\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u3002 \\(n \\le 1e5, \\sum len \\le 1e6\\)\u3002</p> <p>\u76f4\u63a5\u8003\u8651\u66b4\u529b\u5408\u5e76\uff0c\u6bcf\u6b21\u4e8c\u5206\u8fd9\u4e2a\u8981\u88ab\u5408\u5e76\u6389\u7684\u4e32\u7684\u957f\u5ea6\uff0c\u7136\u540e\u6bcf\u6b21\u5408\u5e76\u524d\u9884\u5904\u7406\u524d\u540e\u7f00 Hash\u3002</p> <p>\u4e8e\u662f Check \u5c31\u53d8\u6210\u4e86 \\(O(1)\\) \u7684\uff0c\u5c31\u53ef\u4ee5 \\(O(\\log n)\\) \u627e\u51fa\u8fd9\u4e2a\u4e32\uff0c\u4e4b\u540e\u628a\u5408\u5e76\u8fdb\u6765\u7684\u4e32\u53bb\u6389\u516c\u5171\u4e32\u7684\u90e8\u5206\u627e\u51fa\u6765\u52a0\u5230\u7b54\u6848\u4e32\u540e\u9762\u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n \\log n)\\)\uff0c\u8fd9\u9898\u4e5f\u53ef\u4ee5 KMP \u505a\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u548c Next \u7684\u5b9a\u4e49\u662f\u4e00\u81f4\u7684\u3002</p>"}, {"location": "algor/string/trie/", "title": "Trie", "text": ""}, {"location": "algor/string/trie/#_1", "title": "\u6982\u8ff0", "text": "<p>\u53c8\u53eb\u505a\u5b57\u5178\u6811\uff0c\u601d\u60f3\u662f\u628a\u5b57\u7b26\u4e32\u62c6\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u5b57\u7b26\uff0c\u7136\u540e\u5c06\u5b57\u7b26\u653e\u5230\u6811\u7684\u201c\u8fb9\u201d\u4e0a\uff08\u5b57\u7b26\u6307\u9488\uff09\uff0c\u5229\u7528\u8282\u70b9\u50a8\u5b58\u5b57\u7b26\u4e32\u7ed3\u675f\u7b49\u4fe1\u606f\u3002</p> <p>\u666e\u901a Trie \u4e00\u822c\u7528\u4e8e\u68c0\u7d22\u5b57\u7b26\u4e32\u662f\u5426\u5b58\u5728\uff0c\u6216\u8005\u4f5c\u4e3a AC \u81ea\u52a8\u673a\u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u591a\u6a21\u5f0f\u5339\u914d\u3002</p> <p>\u53d8\u79cd\u7684 01Trie \u53ef\u4ee5\u5b9e\u73b0\u8bf8\u5982\u67e5\u8be2\u548c \\(x\\) \u5f02\u6216\u503c\u6700\u5927\u7684\u6570\uff0c\u7ef4\u62a4\u5f02\u6216\u548c\u7b49\u4f4d\u8fd0\u7b97\u76f8\u5173\u64cd\u4f5c\uff0c\u5c24\u5176\u662f\u5f02\u6216\u3002</p> <p>\u7ed3\u6784\u4e00\u822c\u957f\u8fd9\u6837\uff1a</p> <p></p>"}, {"location": "algor/string/trie/#trie", "title": "Trie", "text": "<p>Trie \u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff0c\u63d2\u5165\u548c\u67e5\u8be2\u3002</p> <p>\u9996\u5148\u660e\u786e Trie \u7684\u7ed3\u6784\u5230\u5e95\u662f\u600e\u4e48\u6837\u7684\uff0cTrie \u5c06\u5b57\u7b26\u50a8\u5b58\u4e8e\u6811\u7684\u8fb9\u4e0a\uff0c\u5e76\u5728\u8282\u70b9\u4e0a\u6709\u4e00\u4e2a \\(end\\) \u6807\u8bb0\uff0c\u8868\u793a\u5f53\u524d\u8282\u70b9\u662f\u5426\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u3002</p> <p>\u5b9e\u73b0\u65f6\u5229\u7528\u4e00\u4e2a\u6570\u7ec4 \\(tr[x,ch]\\)\uff0c\u8868\u793a\u8282\u70b9 \\(x\\) \u7684 \\(ch\\) \u5b57\u7b26\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u7f16\u53f7\u3002</p> <p>\u7c7b\u6bd4\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u601d\u60f3\uff0cTrie \u53ea\u4f1a\u5728\u4e00\u4e2a\u8282\u70b9\u88ab\u5efa\u7acb\u65f6\u7ed9\u4e88\u4e00\u4e2a\u7f16\u53f7\u3002</p> <p>\u521d\u59cb\u7684\u65f6\u5019 Trie \u53ea\u6709\u4e00\u4e2a\u8282\u70b9 \\(root\\)\uff0c\u5e76\u4e14\u6240\u6709\u7684 \\(tr\\) \u90fd\u6307\u5411 \\(\\text{NULL}\\) \uff08\u7a7a\uff09\u3002</p>"}, {"location": "algor/string/trie/#_2", "title": "\u63d2\u5165\u5b57\u7b26\u4e32", "text": "<p>\u5c06\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32 \\(s\\) \u63d2\u5165\u5230 Trie \u5f53\u4e2d\u3002</p> <p>\u521d\u59cb\u65f6\u4ee4\u4e00\u4e2a\u6307\u9488 \\(p = root\\)\uff0c\u7136\u540e\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u626b\u63cf\u5b57\u7b26\u4e32 \\(s\\)\u3002 </p> <p>\u5982\u679c\u5f53\u524d\u626b\u63cf\u5230\u7684\u5b57\u7b26\u4e3a \\(s_i\\)\uff0c\u4ee4 \\(p = tr[p,s_i]\\)\u3002</p> <p>\u5982\u679c \\(tr[p,s_i]\\) \u4e0d\u5b58\u5728\uff0c\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9 \\(q\\)\uff0c\u4ee4 \\(tr[p, s_i] = q\\)\uff0c\u7136\u540e\u628a \\(p\\) \u8df3\u5230 \\(q\\)\u3002</p> <p>\u53cd\u4e4b\u76f4\u63a5\u628a \\(p\\) \u8df3\u8fc7\u53bb\u5373\u53ef\u3002</p> <p>\u7136\u540e\u4ee4 \\(i = i + 1\\)\uff0c\u626b\u63cf\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002</p> <p>\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230 \\(s\\) \u88ab\u626b\u63cf\u5b8c\u6bd5\uff0c\u5728\u5f53\u524d\u7684\u8282\u70b9 \\(p\\) \u4e0a\u6253\u4e0a\u4e00\u4e2a\u6807\u8bb0 \\(end[p] = \\text{true}\\)\u3002</p> <p>\u653e\u4e00\u5f20\u65e9\u5e74\u505a\u7684\u6bd4\u8f83\u7cd9\u7684 GIF\uff1a</p> <p></p>"}, {"location": "algor/string/trie/#_3", "title": "\u8be2\u95ee", "text": "<p>\u67e5\u8be2\u4e00\u4e2a\u5b57\u7b26\u4e32 \\(s\\) \u662f\u5426\u5b58\u5728\u4e8e Trie \u5f53\u4e2d\u3002</p> <p>\u7c7b\u4f3c <code>Insert</code> \u64cd\u4f5c\uff0c\u8bbe\u4e00\u4e2a\u6307\u9488 \\(p = root\\)\uff0c\u7136\u540e\u626b\u63cf \\(s_i\\)\u3002</p> <p>\u4e0d\u65ad\u8df3 \\(p = tr[p, s_i]\\)\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u626b\u5b8c \\(s\\)\uff0c\u5c31\u5df2\u7ecf\u51fa\u73b0\u4e86 \\(tr[p,s_i]\\) \u6307\u5411 \\(\\text{NULL}\\) \u7684\u60c5\u51b5\uff0c\u5219\u8fd4\u56de \\(\\text{false}\\)\u3002</p> <p>\u5982\u679c\u5df2\u7ecf\u626b\u63cf\u5b8c\u4e86 \\(s\\)\uff0c\u4e14 \\(end[p] = \\text{true}\\)\uff0c\u8fd4\u56de \\(\\text{true}\\)\u3002</p> <p>\u53cd\u4e4b\u8fd4\u56de \\(\\text{false}\\)\u3002</p>"}, {"location": "algor/string/trie/#_4", "title": "\u4ee3\u7801\u5b9e\u73b0", "text": "\u666e\u901a Trie \u6811 <pre><code>// \u5b9a\u4e49 NULL \u4e3a 0\uff0c\u5b57\u7b26\u96c6\u4e3a a~z\u3002\nint tr[si][27];\nbool exist[si];\nint tot, root;\n\nvoid init() {\nmemset(tr, 0, sizeof tr);\nmemset(exist, false, sizeof exist);\ntot = 0, root = ++tot;\n}\nvoid insert(string s) {\nint p = root;\nfor(int i = 0; i &lt; (int)s.size(); ++i) {\nint ch = (int) (s[i] - 'a') + 1;\nif(!tr[p][ch])\ntr[p][ch] = ++tot;\np = tr[p][ch];\n}\nexist[p] = true;\n}\nbool query(string s) {\nint p = root;\nfor(int i = 0; i &lt; (int)s.size(); ++i) {\nint ch = (int) (s[i] - 'a') + 1;\nif(!tr[p][ch])\nreturn false;\np = tr[p][ch];\n}\nreturn exist[p];\n}\n</code></pre>"}, {"location": "algor/string/trie/#_5", "title": "\u4e00\u4e9b\u6027\u8d28", "text": "<ol> <li>\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u662f\u4ed6\u4eec\u7684\u5c3e\u6807\u8bb0\u6240\u5728\u7684\u4e24\u4e2a\u8282\u70b9\u7684 lca \u5230\u6839\u7684\u8def\u5f84\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002</li> </ol> <p>\u6211\u8ba4\u4e3a LCP \u4e5f\u53ef\u4ee5\u8fd9\u4e48\u66b4\u529b\u6c42\u3002</p> <ol> <li> <p>\u53ef\u4ee5\u628a\u5c3e\u6807\u8bb0\u6539\u6210 <code>int</code>\uff0c\u53ef\u4ee5\u7528\u6765\u7edf\u8ba1\u8bcd\u9891\u3002</p> </li> <li> <p>\u4e5f\u53ef\u4ee5\u65b9\u4fbf\u7684\u7edf\u8ba1\u67d0\u4e2a\u524d\u7f00\u5728\u6240\u6709\u4e32\u5f53\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff08\u7ed3\u5408 2\uff09\u3002</p> </li> <li> <p>\u662f AC \u81ea\u52a8\u673a\u7684\u4e00\u90e8\u5206\u3002</p> </li> </ol>"}, {"location": "algor/string/trie/#01trie", "title": "01Trie", "text": "<p>\u7c7b\u4f3c\u4e8e\u666e\u901a\u7684 Trie\uff0c\u53ea\u4e0d\u8fc7\u5c06\u5b57\u7b26\u96c6\u53d8\u4e3a\u4e86 \\(\\{0,1\\}\\) \u4ee5\u7ef4\u62a4\u4e00\u4e9b\u4e8c\u8fdb\u5236\u76f8\u5173\u7684\u4fe1\u606f\u3002</p>"}, {"location": "algor/string/trie/#x", "title": "\u6c42\u4e0e x \u5f02\u6216\u7684\u6700\u503c", "text": ""}, {"location": "algor/string/trie/#_6", "title": "\u8be2\u95ee\u6700\u503c", "text": "<p>\u5c06\u6240\u6709\u6570\u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u5305\u62ec \\(x\\)\u3002</p> <p>\u7136\u540e\u628a\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u6570\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u63d2\u5165\u8fdb Trie\u3002</p> <p>\u7136\u540e\u4ece\u9ad8\u5230\u4f4e\u626b\u63cf \\(x\\) \u4e8c\u8fdb\u5236\u4e0b\u7684\u6bcf\u4e00\u4f4d\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488 \\(p\\) \u5f80\u4e0b\u8df3\u3002</p> <p>\u5047\u8bbe \\(x\\) \u5f53\u524d\u7684\u8fd9\u4e00\u4f4d\u4e3a \\(k\\)\uff0c\u90a3\u4e48\u60f3\u8981\u8ba9\u5f02\u6216\u548c\u66f4\u5927\uff0c\u5c31\u662f\u8ba9\u8d8a\u9ad8\u7684\u4f4d\u5c3d\u53ef\u80fd\u7684\u4e3a \\(1\\)\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c3d\u91cf\u5f80 \\(k \\operatorname{xor} 1\\) \uff08\u76f8\u53cd\u7684\uff09\u7684\u6307\u9488\u8d70\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u6ca1\u6709 \\(k \\operatorname{xor} 1\\) \u8fd9\u4e2a\u6307\u9488\uff0c\u90a3\u4e48\u5c31\u53ea\u597d\u8d70 \\(k\\) \u8fd9\u4e2a\u6307\u9488\u3002</p> <p>\u8df3\u5230\u53f6\u5b50\u8282\u70b9\u4e4b\u540e\uff0c\u4ece \\(p\\) \u5230 \\(root\\) \u7684\u8def\u5f84\u7ec4\u6210\u7684\u6570\u5c31\u662f\u6240\u6c42\u7684\uff0c\u548c \\(x\\) \u5f02\u6216\u8d77\u6765\u7684\u503c\u6700\u5927\u7684\u6570\uff0c</p> <p>\u5728\u63d2\u5165\u6bcf\u4e2a\u6570\u4e4b\u540e\uff0c\u5728\u5bf9\u5e94\u7ed3\u675f\u7684\u8282\u70b9\u6253\u4e00\u4e2a\u6807\u8bb0\uff0c\u8bb0\u5f55\u4ece\u8fd9\u4e2a\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u7ec4\u6210\u7684\u6570\u662f\u591a\u5c11\u5373\u53ef\u3002</p> <p>\u5f02\u6216\u8d77\u6765\u6700\u5c0f\u540c\u7406\u3002</p>"}, {"location": "algor/string/trie/#_7", "title": "\u4ee3\u7801\u5b9e\u73b0", "text": "01Trie <pre><code>using i64 = long long; const int si = 1e5 + 10; const int k = 32; int tr[k * si][2]; i64 value[k * si]; int tot = 0, root = ++tot; int newnode() {\ntr[++tot][0] = tr[tot][1] = value[tot] = 0;\nreturn tot;\n}\nint cacid(int num, int pos) {\nreturn (num &gt;&gt; pos) &amp; 1; }\nvoid insert(int num) {\nint p = root; for(int i = 32; i &gt;= 0; --i) {\nint ch = cacid(num, i); if(!tr[p][ch]) tr[p][ch] = newnode();\np = tr[p][ch]; }\nvalue[p] = num; }\n// \u67e5\u8be2\u5f02\u6216 x \u6700\u5927\u7684\u4e00\u4e2a\u3002\ni64 query(i64 num) {\nint p = root; for(int i = 32; i &gt;= 0; --i) {\nint ch = cacid(num, i); if(tr[p][ch ^ 1])\np = tr[p][ch ^ 1]; else\np = tr[p][ch]; }\nreturn value[p]; }\n</code></pre>"}, {"location": "algor/string/trie/#_8", "title": "\u7ef4\u62a4\u5f02\u6216\u548c", "text": "<p>01 Trie \u53ef\u4ee5\u7528\u6765\u7ef4\u62a4\u4e00\u4e9b\u6570\u7684\u5f02\u6216\u548c\uff0c\u652f\u6301\u63d2\u5165\uff0c\u5220\u9664\uff0c\u8fd8\u6709\u5168\u5c40\u52a0\u4e00\u64cd\u4f5c\u3002</p> <p>\u6211\u51fa\u7684\u4e00\u9053\u9898\u91cc\u9762\u6709\u7528\u5230\u4e00\u4e2a Trick\uff1a\u5f02\u6216\u548c\u7684\u4e8c\u8fdb\u5236\u4e0b\u67d0\u4e00\u4f4d\u7684\u503c\uff0c\u53d6\u51b3\u4e8e\u6240\u6709\u6570\u7684\u8fd9\u4e00\u4f4d\u7684 \\(1\\) \u7684\u4e2a\u6570\u7684\u5947\u5076\u6027\u3002</p> <p>\u4e5f\u5c31\u662f\uff0c\u5f02\u6216\u548c \\(xorv\\) \u7684\u7b2c \\(k\\) \u4f4d\u662f \\(1\\)\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u6570\u5f53\u4e2d\u6709 \u5947\u6570\u4e2a \u6570\u7684\u7b2c \\(k\\) \u4e3a\u662f \\(1\\)\u3002</p> <p>\u90a3\u4e48\u5229\u7528\u5b83\u6765\u8003\u8651\u7ef4\u62a4\u5168\u5c40\u5f02\u6216\u548c\u3002</p> <p>\u4e0d\u8fc7\u7ef4\u62a4\u5f02\u6216\u548c\u7684\u65f6\u5019\u548c\u4e00\u822c\u7684 01Trie \u4e0d\u4e00\u6837\uff0c\u6b64\u65f6\u7684 01Trie \u5e94\u5f53\u662f\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u63d2\u5165\u7684\uff0c\u4ee5\u65b9\u4fbf\u5168\u5c40\u52a0\u4e00\u64cd\u4f5c\u7684\u5904\u7406\u3002</p>"}, {"location": "algor/string/trie/#_9", "title": "\u4fe1\u606f\u4e0a\u4f20", "text": "<p>\u7528\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u601d\u60f3\uff0c\u6211\u4eec\u81ea\u5e95\u5411\u4e0a\u6536\u96c6\u4fe1\u606f\u3002</p> <p>\u8bbe \\(xorv_i\\) \u8868\u793a\u8282\u70b9 \\(i\\) \u7684\u5b50\u6811\u6240\u7ef4\u62a4\u7684\u5f02\u6216\u548c\u3002</p> <p>\u8bbe \\(wei_i\\) \u6307\u8282\u70b9 \\(i\\) \u5230\u5176\u7236\u4eb2\u8282\u70b9\u8fd9\u6761\u8fb9\u4e0a\u6570\u503c\u7684\u6570\u91cf\uff08\u6743\u503c\uff09\uff0c\u4e5f\u5c31\u662f\u8fd9\u6761\u8fb9 \u88ab\u6240\u6709\u63d2\u5165\u7684\u6570 \u62c6\u6210\u4e8c\u8fdb\u5236\u4e4b\u540e \u5728\u6811\u4e0a\u4ee3\u8868\u7684\u8def\u5f84 \u8986\u76d6\u7684\u6b21\u6570\u3002</p> <p>\u4e0d\u8fc7\u6211\u4eec\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u77e5\u9053\u5177\u4f53\u7ef4\u62a4\u4e86\u54ea\u4e9b\u6570\uff0c\u7ef4\u62a4\u4e86\u591a\u5c11\u4e2a\uff0c</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 \\(wei\\) \u7684\u5947\u5076\u6027\u5c31\u884c\u4e86\u3002</p> <p>\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9 \\(p\\)\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u7684\u8fc7\u7a0b\uff1a</p> <p>\u9996\u5148\uff0c\u4ee4 \\(wei_p = wei_{tr[p][0]} + wei_{tr[p][1]}\\)\u3002</p> <p>\u5982\u679c \\(p\\) \u7684 \\(0\\) \u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u4e0d\u4e3a \\(\\text{NULL}\\)\uff0c\u90a3\u4e48\u8ba9 \\(xorv_p = xorv_p \\operatorname{xor} (xorv_{tr[p][0]}&lt;&lt;1)\\)\uff0c\u4e5f\u5c31\u662f\u5148\u5bf9\u9f50\u6bcf\u4e00\u4f4d\uff0c\u7136\u540e\u5f02\u6216\u8d77\u6765\u3002</p> <p>\u5982\u679c \\(p\\) \u7684 \\(1\\) \u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u4e0d\u4e3a \\(\\text{NULL}\\)\uff0c\u90a3\u4e48\u8ba9 \\(xorv_p = xorv_p \\operatorname{xor} ((xorv_{tr[p][1]} &lt;&lt; 1) \\operatorname{or} (wei_{tr[p][1]} \\operatorname{and} 1))\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u5148\u5bf9\u9f50\u6bcf\u4e00\u4f4d\uff0c\u7136\u540e\u770b\u5947\u5076\u6027\u3002</p>"}, {"location": "algor/string/trie/#_10", "title": "\u63d2\u5165 / \u5220\u9664", "text": "<p>\u63d2\u5165\u76f4\u63a5\u9012\u5f52\uff0c\u5982\u679c\u9047\u5230\u7a7a\u8282\u70b9\uff0c\u90a3\u4e48\u65b0\u5efa\u5373\u53ef\u3002</p> <p>\u4e3a\u4e86\u4e4b\u540e\u5168\u5c40\u52a0\u4e00\u8fdb\u4f4d\u65b9\u4fbf\uff0c\u6211\u4eec\u5f3a\u5236\u8ba9\u6bcf\u4e00\u4e2a\u6570\u90fd\u53d8\u6210 <code>MaxDepth</code> \u4f4d\uff0c\u518d\u63d2\u5165\u8fdb Trie \u5f53\u4e2d\u3002</p> <p><code>MaxDepth</code> \u662f\u4f60\u9009\u62e9\u7684 Trie \u6811\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u4e00\u822c\u6bd4\u8981\u63d2\u5165\u7684\u6570\u7684\u6700\u9ad8\u4f4d\u6570\u591a\u51fa\u4e24\u4e09\u4f4d\u3002</p> <p>\u5f53\u6df1\u5ea6\u5230\u8fbe <code>MaxDepth</code> \u4e4b\u540e\uff0c\u4ee4 \\(wei_p + 1\\)\uff0c\u7136\u540e\u4e0d\u65ad\u5411\u4e0a\u4f20\u9012\u4fe1\u606f\u5373\u53ef\u3002</p> <p>\u8fd9\u6837\u5b50\u5c31\u80fd\u4fdd\u8bc1\uff0c\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570 \\(x\\)\uff0c\\(x\\) \u7684\u4e8c\u8fdb\u5236\u8868\u793a \u5728 Trie \u6811\u4e0a\u4ee3\u8868\u7684\u8def\u5f84 \u4e0a\u7684\u6240\u6709\u8282\u70b9\u7684 \\(wei\\) \u90fd\u4f1a \\(+1\\)\u3002  </p> <p>\u5220\u9664\u64cd\u4f5c\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u53ea\u4e0d\u8fc7\u53d8\u6210\u4e86\u8ba9\u6700\u540e\u4e00\u4f4d\uff08\u6700\u9ad8\u4f4d\uff09\u6240\u5bf9\u5e94\u7684\u8282\u70b9\u7684 \\(wei -1\\)\uff0c\u518d\u5411\u4e0a\u6536\u96c6\u4fe1\u606f\u3002</p>"}, {"location": "algor/string/trie/#_11", "title": "\u5168\u5c40\u52a0\u4e00", "text": "<p>\u601d\u8003\u4e00\u4e0b\uff0c\u5728\u4e8c\u8fdb\u5236\u4e0b\u7684\u52a0\u4e00\u64cd\u4f5c\u5b9e\u8d28\u4e0a\u662f\u4ec0\u4e48\uff1f</p> \\[(10011)_2 + 1 = (10100)_2 \\\\ (10110)_2 + 1 = (10111)_2\\] <p>\u5b9e\u9645\u4e0a\u5c31\u662f\uff1a\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a \\(0\\)\uff0c\u5c06\u5176\u53d6\u53cd\uff0c\u7136\u540e\u5c06\u5b83\u540e\u9762\uff08\u5230\u6700\u4f4e\u4f4d\uff09\u7684\u6240\u6709 \\(1\\) \u53d8\u6210 \\(0\\)\u3002</p> <p>\u5bf9\u5e94\u5230 01Trie \u4e0a\uff0c\u5c31\u662f\u4ece \\(root\\) \u5f00\u59cb\u9012\u5f52\u4e0b\u53bb\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u7684 \\(tr[p][0]\\) \u6307\u9488\uff0c\u7136\u540e\u4ea4\u6362 \\(tr[p][0],tr[p][1]\\)\uff08\u53d6\u53cd\uff09\u3002</p> <p>\u6cbf\u7740\u4ea4\u6362\u4e4b\u540e\u7684 \\(tr[p][0]\\) \u9012\u5f52\u4e0b\u53bb\u64cd\u4f5c\u5373\u53ef\u3002</p>"}, {"location": "algor/string/trie/#_12", "title": "\u4ee3\u7801\u5b9e\u73b0", "text": "\u7ef4\u62a4\u5f02\u6216\u548c <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int si = 1e4 + 10;\nconst int MaxDepth = 21;\n\nint tr[si * (MaxDepth + 1)][2];\nint wei[si * (MaxDepth + 1)], xorv[si * (MaxDepth + 1)];\nint tot = 0, root = ++tot;\n// \u5176\u5b9e\u8fd9\u91cc root \u53ef\u4ee5\u4e0d\u7528\u8d4b\u503c\uff0c\u9012\u5f52\u5f00\u70b9\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u7ed9\u7f16\u53f7\u7684\u3002\n\nint newnode() {\ntr[++tot][0] = tr[tot][1] = wei[tot] = xorv[tot] = 0;\nreturn tot;\n}\nvoid maintain(int p) {\nwei[p] = xorv[p] = 0;\n// \u4e3a\u4e86\u5e94\u5bf9\u4e0d\u65ad\u7684\u5220\u9664\u548c\u63d2\u5165\uff0c\u6bcf\u6b21\u7ef4\u62a4 p \u7684\u65f6\u5019\u90fd\u4ee4 wei, xorv = 0\u3002\n// \u4e5f\u5c31\u662f\u6bcf\u6b21\u90fd**\u91cd\u65b0\u6536\u96c6\u4e00\u6b21\u4fe1\u606f**\uff0c\u800c\u4e0d\u662f\u4ece\u539f\u6765\u7684\u57fa\u7840\u4e0a\u4fee\u6539\u3002\nif(tr[p][0]) {\nwei[p] += wei[tr[p][0]];\nxorv[p] ^= (xorv[tr[p][0]] &lt;&lt; 1);\n// \u56e0\u4e3a\u513f\u5b50\u6240\u7ef4\u62a4\u7684\u5f02\u6216\u548c\u5b9e\u9645\u4e0a\u6bd4 p \u5c11\u4e00\u4f4d\uff0c\n// \u5982\u679c\u8981\u6309\u4f4d\u5f02\u6216\u5c31\u8981\u8ba9\u513f\u5b50\u7684\u5f02\u6216\u548c\u5de6\u79fb\u4e00\u4f4d\uff0c\u548c p \u5bf9\u9f50\u3002\n}\nif(tr[p][1]) {\nwei[p] += wei[tr[p][1]];\nxorv[p] ^= (xorv[tr[p][1]] &lt;&lt; 1) | (wei[tr[p][1]] &amp; 1);\n// \u5229\u7528\u5947\u5076\u6027\u8ba1\u7b97\u3002\n}\nwei[p] = wei[p] &amp; 1;\n// \u6bcf\u63d2\u5165\u4e00\u6b21\u6216\u8005\u5220\u9664\u4e00\u6b21\uff0c\u5947\u5076\u6027\u90fd\u4f1a\u53d8\u5316\u3002\n}\n// \u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684 pushup\uff0c\u4ece\u5e95\u5411\u4e0a\u6536\u96c6\u4fe1\u606f\u3002\n// \u6362\u79cd\u8bf4\u6cd5\uff0c\u662f\u66f4\u65b0\u8282\u70b9 p \u7684\u4fe1\u606f\u3002\nvoid insert(int &amp;p, int x, int depth) {\nif(!p) p = newnode();\nif(depth &gt; MaxDepth) {\nwei[p] += 1;\nreturn;\n}\ninsert(tr[p][x &amp; 1], x &gt;&gt; 1, depth + 1);\n// \u4ece\u4f4e\u5230\u9ad8\u4f4d\u63d2\u5165\uff0c\u6240\u4ee5\u662f x &gt;&gt; 1\u3002\nmaintain(p);\n}\n// \u63d2\u5165\u5143\u7d20 x\u3002\nvoid remove(int p, int x, int depth) {\n// \u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u5e94\u8be5\u5199 &gt; MaxDepth - 1 \u8fd8\u662f &gt; MaxDepth \uff1f\nif(depth == MaxDepth) {\nwei[p] -= 1;\nreturn;\n}\nremove(tr[p][x &amp; 1], x &gt;&gt; 1, depth + 1);\nmaintain(p);\n}\n// \u5220\u9664\u5143\u7d20 x\uff0c\u4f46\u662f x \u4e0d\u80fd\u662f\u4e0d\u5b58\u5728\u7684\u5143\u7d20\u3002\n// \u5426\u5219\u4f1a\u8bbf\u95ee\u7a7a\u8282\u70b9 0 \u7136\u540e\u7ee7\u7eed\u5f80\u4e0b\uff0c\u4f1a\u51fa\u9519\u3002\nvoid addall(int p) {\nswap(tr[p][0], tr[p][1]);\nif(tr[p][0]) addall(tr[p][0]);\nmaintain(p);\n// \u4ea4\u6362\u540e\u4e0b\u9762\u90fd\u88ab\u66f4\u6539\u4e86\uff0c\u9700\u8981\u518d\u6b21 maintain\u3002\n}\n// \u5168\u90e8\u52a0\u4e00\n\nint main() {\nint n;\ncin &gt;&gt; n;\nstd::vector&lt;int&gt; v(n + 1);\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; v[i],\ninsert(root, v[i], 0);\n}\ncout &lt;&lt; xorv[root] &lt;&lt; endl;\n// \u67e5\u8be2\u603b\u5f02\u6216\u548c\nint m;\ncin &gt;&gt; m;\nfor(int i = 1; i &lt;= m; ++i) {\nint x, y;\ncin &gt;&gt; y &gt;&gt; x;\nif(y == 0)\nremove(root, x, 0);\n// remove \u548c addall \u6df7\u7528\u65f6\u5c0f\u5fc3 remove \u6389\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff01\nelse\naddall(root);\ncout &lt;&lt; xorv[root] &lt;&lt; endl;\n}\n}\n</code></pre>"}, {"location": "algor/string/trie/#01trie_1", "title": "01Trie \u5408\u5e76", "text": "<p>\u5408\u5e76\u4e24\u9897 01Trie\u3002</p> <p>\u548c\u7ebf\u6bb5\u6811\u5408\u5e76\u662f\u6bd4\u8f83\u7c7b\u4f3c\u7684\uff0c\u7528\u540c\u6837\u7684\u601d\u60f3\u601d\u8003\u5373\u53ef\u3002</p> <p>\u5c31\u662f\u628a\u4e24\u4e2a\u8282\u70b9\u4e2d\u7684\u4e00\u4e2a\u7684\u4fe1\u606f\u5408\u5e76\u5230\u53e6\u5916\u4e00\u4e2a\u4e0a\uff0c\u5e76\u8fd4\u56de\u5408\u5e76\u4e4b\u540e\u7684\u7f16\u53f7\u3002</p> <p>\uff08\u5f53\u7136\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u628a\u4ed6\u4eec\u5408\u5e76\u5230\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u4e0a\uff09\u3002</p> <p>\u5982\u679c\u6709\u4e00\u4e2a\u8282\u70b9\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\u5373\u53ef\u3002</p> Merge <pre><code>int merge(int p, int q) {\nif(!p) return q;\nif(!q) return p;\nwei[p] += wei[q], xorv[p] ^= xorv[q];\ntr[p][0] = merge(tr[p][0], tr[q][0]);\ntr[p][1] = merge(tr[p][1], tr[q][1]);\nreturn p;\n}\n</code></pre> <p>\u53c2\u8003\u8d44\u6599\uff1a\u5b57\u5178\u6811 (Trie) - OI Wiki (oi-wiki.org)</p>"}, {"location": "blog/", "title": "Index", "text": "<p>\u8fd9\u91cc\u7528\u6765\u653e\u4e9b\u4e0d\u662f\u968f\u8bb0\u7684\u968f\u8bb0\uff0c\u7c7b\u4f3c\u6742\u8c08\u3002</p> <p>\u76f8\u5f53\u4e8e\u662f\u5404\u79cd\u77e5\u8bc6\u7c7b\u968f\u7b14\uff0c\u53ef\u80fd\u662f whk \u4e5f\u53ef\u80fd\u662f OI\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u6280\u672f\u3002</p> <p>\u6211\u4e4b\u524d\u5199\u7684\u4e1c\u897f\u5176\u5b9e\u7c7b\u4f3c\u4e8e Documents\uff0c\u8fd9\u4e2a\u5730\u65b9\u624d\u7b97 blog\u3002</p> <p>\u672c\u6765 mkdocs-material \u6709 blog \u529f\u80fd\uff0c\u4f46\u662f\u6211\u6ca1\u6709 insiders\uff0c\u4e8e\u662f\u5bc4\u4e86\u3002</p> <p>\u7136\u540e\u8fd8\u6709\u4e00\u90e8\u5206\u6742\u8c08\u653e\u5728\u4e86 <code>/misc/flower</code> \u76ee\u5f55\u4e0b\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5206\uff0c\u4f60\u7ba1\u6211\u3002</p>"}, {"location": "blog/2023-01-25/", "title": "\u6d45\u8c08\u6307\u5bf9\u51fd\u6570\u56fe\u50cf\u4ea4\u70b9\u76f8\u5173\u95ee\u9898", "text": "<p>\u524d\u51e0\u5929\u5c0f\u602a\u517d\u5728\u5c0f\u7fa4\u91cc\u9762\u95ee\u4e86\u4e00\u4e2a whk \u9898\uff0c\u611f\u89c9\u662f\u6bd4\u8f83\u6709\u610f\u601d\u7684\u3002</p> <p>\u8fd9\u7c7b\u4e1c\u897f\u8bb0\u5f97\u4ee5\u524d\u4e5f\u8bb2\u8fc7\uff0c\u6240\u4ee5\u7b80\u5355\u8bb0\u5f55\u4e00\u4e0b\uff0c\u5176\u5b9e\u7406\u8bba\u4e0a\u5e94\u8be5\u8bb0\u5f55\u5230\u6211\u9519\u9898\u672c\u4e0a\uff0c\u4f46\u65e0\u6240\u8c13\u3002</p> <p>Q1\uff1a\u6c42 \\(\\log_a(x)\\) \u548c \\(a^x\\) \u7684\u56fe\u50cf\u7684\u4ea4\u70b9\u3002</p> <p>\u5148\u8bd5\u7740\u66b4\u529b\u8054\u7acb\u505a\u4e00\u4e0b\u770b\u770b\u6c42\u4e0d\u6c42\u5f97\u4e86\u96f6\u70b9\u3002</p> <p>\\(\\log_a(x) = a^x\\)\uff0c\u5bc4\uff0c\u4e0d\u884c\u3002</p> <p>\u7136\u540e\u60f3\u5230\u4e00\u4e2a\u4e8b\u60c5\u662f\uff0c\u8fd9\u4fe9\u73a9\u610f\u513f\u662f\u53cd\u51fd\u6570\uff0c\u5173\u4e8e \\(y = x\\) \u5bf9\u79f0\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u5c1d\u8bd5\u76f4\u63a5\u6c42\u5b83\u4eec\u4efb\u610f\u4e00\u4e2a\u51fd\u6570\u548c \\(y = x\\) \u7684\u4ea4\u70b9\uff1f</p> <p>\\(a^x = x \\iff \\log_a(x) = x\\)\uff0c\u8c14\u8c14\uff0c\u597d\u50cf\u6ca1\u6551\uff0c\u8fd9\u73a9\u610f\u513f\u662f\u4e2a\u8d85\u8d8a\u65b9\u7a0b\uff0c\u6ca1\u6709\u4efb\u4f55\u51e0\u4f55/\u4ee3\u6570\u89e3\u6cd5\u3002</p> <p>\u800c\u4e14\u8fd9\u4e2a\u505a\u6cd5\u5176\u5b9e\u4e5f\u662f\u6709\u95ee\u9898\u7684\uff0c\u6709\u4e00\u4e2a\u5f88\u597d\u73a9\u7684\u7279\u4f8b\uff0c\u5f53 \\(a = \\dfrac{1}{16}\\) \u7684\u65f6\u5019\uff0c\u5b83\u4eec\u7684\u4e00\u4e2a\u4ea4\u70b9 \\((1/2, 1/4)\\)\uff0c\u5e76\u4e0d\u5728 \\(y = x\\) \u4e0a\uff0c\u6240\u4ee5\u8fd9\u4e2a\u505a\u6cd5\u5176\u5b9e\u4e5f\u6bd4\u8f83\u5bc4\u3002</p> <p>\u611f\u89c9\u8fd9\u4e2a\u95ee\u9898\u662f\u6bd4\u8f83 hard \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c1d\u8bd5\u8003\u8651\u4e00\u4e2a\u6bd4\u8f83 simple \u7684\u95ee\u9898\u3002</p> <p>Q2\uff1a\\(f(x) = \\log_a(x)\\) \u548c \\(g(x) = a^x\\) \u6709\u591a\u5c11\u4e2a\u4ea4\u70b9\uff1f</p> <p>\u663e\u7136\u6211\u4eec\u8981\u8003\u8651\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u56e0\u4e3a\u5f62\u6001\u4e0d\u592a\u4e00\u6837\u3002</p> <p>\u5148\u8003\u8651\u6bd4\u8f83\u7b80\u5355\u7684 \\(a &gt; 1\\) \u7684\u60c5\u51b5\u3002</p> <p>\u663e\u7136\u6b64\u65f6\u4e0d\u5b58\u5728\u4e0d\u5728 \\(y = x\\) \u4e0a\u7684\u4ea4\u70b9\u3002</p> <p>\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48\u76f4\u63a5\u7684\u8bc1\u660e\u65b9\u6cd5\uff0c\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u7528\u5df2\u77e5\u6761\u4ef6\u63a8\u51fa\u77db\u76fe\u6765\u53cd\u8bc1\u3002</p> <p>\u8bbe\u6709\u4e00\u4e2a\u4ea4\u70b9 \\((m, n), m \\not = n\\)\uff0c\u56e0\u4e3a \\(f,g\\) \u5173\u4e8e \\(y = x\\) \u5bf9\u79f0\uff0c\u6240\u4ee5\u5b9a\u6709\u53e6\u4e00\u4e2a\u4ea4\u70b9 \\((n, m)\\)\uff0c\u4e0d\u59a8\u8bbe \\(n &gt; m\\)\u3002</p> <p>\u56e0\u4e3a \\(a^n = m, a^m = n\\)\uff0c\u53c8\u56e0\u4e3a \\(a &gt; 1\\)\uff0c\u6240\u4ee5 \\(g\\) \u5728 \\(\\mathbb{R}\\) \u4e0a\u5355\u589e\uff0c\u56e0\u4e3a \\(m &lt; n \\iff a^n &lt; a^m \\iff n &lt; m\\)\uff0c\u77db\u76fe\u3002</p> <p>\u6240\u4ee5\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u4ea4\u70b9\u3002</p> <p>\u6240\u4ee5\u6b64\u65f6\u95ee\u9898\u8f6c\u5316\u4e3a\u8003\u8651 \\(f/g(x)\\) \u548c \\(y = x\\) \u7684\u4ea4\u70b9\u7684\u95ee\u9898\u3002</p> <p>\u4ee4 \\(h(x) = g(x) - y = a^x - x\\)\u3002</p> <p>\u539f\u95ee\u9898\u7b49\u4ef7\u4e8e \\(h(x)\\) \u5728 \\(R\\) \u4e0a\u7684\u96f6\u70b9\u4e2a\u6570\u3002</p> <p>\u7136\u540e\u5f88\u663e\u7136\u5c31\u8981\u770b\u5355\u8c03\u6027\u4e86\u3002</p> <p>\\(h^\\prime(x) = a^x \\ln a - 1\\)\uff0c\u4ee4 \\(h^\\prime(x) = 0 \\iff a^x\\ln a= 1 \\iff a^x = \\dfrac{1}{\\ln a} \\iff x = -\\log_a(\\ln a)\\)\u3002</p> <p>\u4ee4 \\(h^\\prime(x) &gt; 0 \\iff x &gt; -\\log_a(\\ln a)\\)\uff0c\u4ee4 \\(h^\\prime(x) &lt; 0 \\iff 0 &lt; x &lt; -\\log_a(\\ln a)\\)\u3002</p> <p>\u6240\u4ee5 \\(h(x)_{\\min} = h(-\\log_a(\\ln a)) = a^{-\\log_a(\\ln a)} + \\log_a(\\ln a)\\)\u3002</p> <p>\u6781\u7aef\u60c5\u51b5\u663e\u7136\u662f\u6781\u503c\u70b9\u4e3a\u96f6\u70b9\uff0c\u6240\u4ee5\uff1a</p> <p>\u4ee4 \\(a^{-\\log_a(\\ln a)} + \\log_a(\\ln a) = 0 \\iff (\\ln a)^{-1} + \\log_a(\\ln a) = 0 \\iff \\dfrac{1}{\\ln a} + \\dfrac{\\ln(\\ln a)}{\\ln a} = 0 \\iff \\ln(\\ln a) = -1 \\iff \\ln a = \\dfrac{1}{e} \\iff a = e^{\\frac{1}{e}}\\)</p> <p>\u7136\u540e\u4e0a\u4e0b\u5e73\u79fb\u53ef\u4ee5\u5f97\u5230\uff1a</p> <p>\u5f53 \\(a = e^{\\frac{1}{e}}\\) \u65f6\uff0c\\(h(x)\\) \u6709\u4e00\u4e2a\u96f6\u70b9\uff0c\u5f53 \\(1 &lt; a &lt; e^{\\frac{1}{e}}\\) \u65f6\uff0c\\(h(x)\\) \u65e0\u96f6\u70b9\uff0c\u5f53 \\(a &gt; e^{\\frac{1}{e}}\\) \u65f6\uff0c\\(h(x)\\) \u6709\u4e24\u4e2a\u96f6\u70b9\u3002</p> <p>\u7136\u540e\u8003\u8651 \\(0 &lt; a &lt; 1\\) \u7684\u60c5\u51b5\u3002</p> <p>\u663e\u7136\u6b64\u65f6\u4e00\u5b9a\u6709\u4e00\u4e2a\u4ea4\u70b9\u5728 \\(y = x\\) \u4e0a\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651 \\((n, m), (m, n)\\) \u5f62\u5f0f\u7684\u4ea4\u70b9\u3002</p> <p>\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u662f\u5426\u5b58\u5728 \\(m, n\\)\uff0c\u4f7f\u5f97 \\(g(m) = n, g(n) = m, a \\in (0, 1)\\)\u3002</p> <p>\u601d\u8003\u4e00\u4e0b\u5df2\u77e5\u6761\u4ef6\u6709\u4ec0\u4e48\uff0c\u4f3c\u4e4e\u4e0d\u592a\u597d\u641e\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u91cc\u672c\u8d28\u4e0a\u662f\u6c42\u5b83\u4eec\u5b58\u5728\u7684\u5145\u8981\u6761\u4ef6\uff0c\u4e8e\u662f\u6211\u4eec\u5148\u5c1d\u8bd5\u8bc1\u660e\u4e00\u4e0b\u5b83\u4eec\u5b58\u5728\u7684\u5145\u5206\u6027\u3002</p> <p>\u5047\u8bbe \\(\\exists m, n, g(m) = n, g(n) = m\\)\u3002</p> <p>\u4e0d\u59a8\u8bbe \\(m &lt; n \\iff g(n) &lt; g(m)\\)\uff0c\u8fd9\u4e2a\u663e\u7136\u4e0d\u77db\u76fe\u3002</p> <p>\u7136\u540e\u56e0\u4e3a \\(\\ln n = m, \\ln m = n \\iff nm = m \\ln m = n \\ln n\\)\u3002</p> <p>\u4ee4 \\(u(x) = x\\ln x\\)\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u8981\u77e5\u9053\u8fd9\u4e1c\u897f\u7684\u5355\u8c03\u6027\u3002</p> <p>\\(u^\\prime(x) = \\ln x + 1\\)\uff0c\u4ee4 \\(u^\\prime(x) = 0 \\iff x = \\dfrac{1}{e}\\)\u3002</p> <p>\u6240\u4ee5 \\(u\\) \u5728 \\((0, \\dfrac{1}{e})\\) \u4e0a\u5355\u8c03\u9012\u51cf\uff08\u7701\u7565\u4e86\u6b65\u9aa4\uff09\uff0c\u5728 \\([\\dfrac{1}{e}, +\\infty)\\) \u4e0a\u5355\u589e\u3002</p> <p>\u6240\u4ee5 \\(0 &lt; m &lt; \\dfrac{1}{e} &lt; n\\)\uff0c\u53c8\u56e0\u4e3a \\(a \\in (0, 1)\\)\uff0c\u6240\u4ee5 \\(m, n &lt; 1 \\iff 0 &lt; m &lt; \\dfrac{1}{e} &lt; n &lt; 1\\)\u3002</p> <p>\u7136\u540e\u5145\u5206\u6027\u5c31\u6709\u4e86\uff0c\u627e\u4e00\u4e0b\u5fc5\u8981\u6027\uff0c\u5c31\u53ea\u9700\u8981\u628a \\(a\\) \u5316\u6210 \\(n, m\\) \u5373\u53ef\u3002</p> <p>\u56e0\u4e3a \\(a = m^{\\dfrac{1}{n}} \\iff a &lt; (\\dfrac{1}{e})^{e}\\)\u3002</p> <p>\u6240\u4ee5\u5f53 \\(0 &lt; a &lt; (\\dfrac{1}{e})^e\\) \u7684\u65f6\u5019\uff0c\u6709\u4e09\u4e2a\u4ea4\u70b9\u3002</p> <p>\u8fd9\u4e2a\u8bf4\u660e\u4e86\u5b58\u5728\u8fd9\u4e24\u4e2a\u4ea4\u70b9\u7684\u5145\u8981\u6761\u4ef6\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u63a8\u51fa\uff1a</p> <p>\\(a = (\\dfrac{1}{e})^e\\) \u7684\u65f6\u5019\uff0c\u4e24\u4ea4\u70b9\u91cd\u5408\u4e8e \\(y = x\\) \u4e0a\uff0c\u53ea\u6709\u4e00\u4e2a\u4ea4\u70b9\u3002</p> <p>\\((\\dfrac{1}{e})^e &lt; a &lt; 1\\) \u65f6\uff0c\u53ea\u6709\u4e00\u4e2a\u4ea4\u70b9\u3002</p> <p>Q2 \u7684\u5bfc\u6570\u90e8\u5206\u4e0d\u7b97\u592a\u96be\uff0c\u5c31\u662f\u9700\u8981\u7a0d\u5fae\u8010\u5fc3\u5316\u7b80\u4e00\u4e0b\u3002</p> <p>\u7136\u540e\u8f6c\u5316\u90e8\u5206\u5c31\u8981\u60f3\u7740\u7528\u5df2\u77e5\u6c42\u672a\u77e5\uff0c\u8003\u8651\u5229\u7528\u5df2\u77e5\u6761\u4ef6\u3002</p> <p>\u7136\u540e\u597d\u4e45\u90fd\u6ca1\u505a\u8fc7\u5bfc\u6570\u9898\u4e86\uff0c\u611f\u89c9\u8111\u5b50\u6709\u70b9\u6d46\u7cca\u3002</p> <p>\u5c31\u8fd9\u4e2a\u9898\u7684\u65b9\u6cd5\u662f\u6c42\u96f6\u70b9\u4e2a\u6570\u53ef\u4ee5\u8003\u8651\u7528\u5bfc\u6570\u6c42\u51fa\u5355\u8c03\u6027\u7136\u540e\u8003\u8651\u6781\u7aef\u60c5\u51b5\u3002</p> <p>\u7136\u540e\u6211\u53d1\u73b0\u6211\u4e00\u822c\u6c42\u5355\u8c03\u6027\u7684\u65b9\u6cd5\u662f\u4e0d\u4e25\u8c28\u7684\u3002</p> <p>\u5e94\u8be5\u628a &gt;0 &lt;0 =0 \u5168\u90e8 explain \u4e00\u4e0b\u3002</p> <p>\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u6ce8\u610f\u7684\u5c31\u662f\uff0c\u5f97\u5206\u6e05\u695a\u73b0\u5728\u5728\u5e72\u561b\uff0c\u8981\u6c42\u7684\u53c2\u6570\u662f\u5565\uff0c\u6211\u5e0c\u671b\u5f97\u5230\u4ec0\u4e48\uff0c\u624b\u5934\u7684\u53d8\u91cf\u662f\u5426\u5199\u5168\u4e86\u6570\u636e\u8303\u56f4\u3002</p>"}, {"location": "blog/2023-01-26/", "title": "\u4e00\u4e2a\u6ca1\u5565\u5375\u7528\u7684\u65b0\uff08\uff1f\uff09\u7b97\u6cd5", "text": "<p>\u8fd9\u662f\u67d0\u5929\u505a\u6a21\u62df\u8d5b\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u9047\u5230\u4e86\u6ca1\u89c1\u8fc7\u7684\u95ee\u9898\uff0c\u778e\u80e1\u7684\u7b97\u6cd5\u3002</p> <p>\u4e25\u683c\u610f\u4e49\u4e0a\u6765\u8bf4\u597d\u50cf\u4e0d\u80fd\u7b97\u7b97\u6cd5\uff0c\u5e94\u8be5\u662f\u4e00\u79cd\u65b0\u7684\u505a\u6cd5\u3002</p> <p>upd on 01.29.23: \u54c8\u54c8\uff0c\u5bc4\u5427\uff0c\u5047\u4e86\uff0c\u88ab\u65e5\u8bed\u9171\u63d2\u4e86\uff0c\u7ed9\u4e86\u4e00\u4e2a\u51f8\u591a\u8fb9\u5f62\u4e5f\u4f1a\u76f8\u4ea4\u7684\u4f8b\u5b50\u3002</p> <p>\u6211\u60f3\u4e86\u4e00\u4e0b\uff0c\u5177\u4f53\u5c31\u662f\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e24\u6761\u76f8\u90bb\u8fb9\uff0c\u94a6\u5b9a\u659c\u7387\u7edd\u5bf9\u503c\u66f4\u5927\u7684\u4e00\u6761\u8fb9\uff0c\u7b97 \\(\\arctan |k|\\)\uff0c\u5982\u679c\u5927\u4e8e\u4e86\u4e24\u8fb9\u5939\u89d2\uff0c\u4e24\u6761\u8fb9\u7684\u77e9\u5f62\u5c31\u4f1a\u76f8\u4ea4\u3002</p> <p>\u5bc4\u3002</p> <p>\u4f17\u6240\u5468\u77e5\u8ba1\u7b97\u51e0\u4f55\u91cc\u6709\u4e00\u4e2a\u53eb\u505a\u201c\u5224\u65ad\u662f\u5426\u5728\u4efb\u610f\u591a\u8fb9\u5f62\u5185\u90e8\u201d\u7684\u95ee\u9898\u3002</p> <p>\u8003\u8bd5\u7684\u65f6\u5019\u8bfb\u9519\u9898\u4ee5\u4e3a\u95ee\u9898\u5c31\u662f\u8fd9\u4e2a\u677f\u5b50\uff0c\u4f46\u662f\u4e0d\u4f1a\uff0c\u4e8e\u662f\u601d\u8003\u4e86\u5f88\u4e45\u6709\u4e86\u4e9b\u60f3\u6cd5\uff0c\u540e\u9762\u7ecf\u8fc7 EI \u7684\u63d0\u9192\u5b8c\u5584\u4e86\u4e00\u4e0b\u3002</p> <p>\u8fd9\u4e2a\u95ee\u9898\u4e00\u822c\u6709\u4e24\u79cd\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6cd5\uff1aRay casting algorithm \u548c Winding number algorithm\u3002</p> <p>\u611f\u89c9\u5f88\u5389\u5bb3\uff0c\u6211\u4e0d\u592a\u6e05\u695a\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u542c\u8bf4\u90fd\u8981\u626b\u4e00\u904d\uff1f\u597d\u50cf\u6709 \\(O(\\log n)\\) \u5355\u6b21\u8be2\u95ee\u7684\u505a\u6cd5\u3002</p> <p>\u4f46\u662f\u6211\u5176\u5b9e\u4e0d\u592a\u4f1a\uff0c\u611f\u89c9\u4e5f\u7406\u89e3\u4e0d\u4e86\u90a3\u4e48\u9ad8\u6df1\u7684\u505a\u6cd5\uff0c\u60f3\u81ea\u5df1\u641e\u4e00\u4e2a\u505a\u6cd5\u51fa\u6765\uff0c\u7136\u540e\u5c31\u6709\u4e86\u8fd9\u73a9\u610f\u513f\uff1a</p> <p>\u5177\u4f53\u6765\u8bf4\u8fd9\u4e2a\u505a\u6cd5\u80fd\u591f\u5728 \\(O(n \\log n)\\) \u5e26\u4e00\u4e2a\u6211\u73b0\u5728\u8fd8\u4e0d\u77e5\u9053\u591a\u5927\u7684\u5e38\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\uff0c\u79bb\u7ebf\u5b8c\u6210\u4ee5\u4e0b\u95ee\u9898\u7684\u5224\u5b9a\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u7531 \\(n\\) \u6761\u8fb9\u7ec4\u6210\u7684 Polygon\uff0c\\(m\\) \u4e2a Point\uff0c\u8981\u6c42 Check \u6bcf\u4e2a Point \u662f\u5426\u5728 Polygon \u5185\u3002</p> <p>\\(1\\le n, m \\le 1e5\\)\uff08\u5373\u5047\u5b9a \\(n, m\\) \u540c\u7ea7\uff09\uff0c\u4fdd\u8bc1\u591a\u8fb9\u5f62\u4e3a\u51f8\u591a\u8fb9\u5f62</p> <p>\u9996\u5148\u6709\u4e00\u4e2a\u76f4\u89c2\u7684\u60f3\u6cd5\uff0c\u591a\u8fb9\u5f62\u53ef\u80fd\u6709\u5f88\u591a\u659c\u7740\u7684\u8fb9\uff0c\u8fd9\u4e0d\u597d\u5224\u65ad\u3002</p> <p>\u6211\u4eec\u60f3\u505a\u7684\u4e8b\u60c5\u5c31\u662f\uff0c\u80fd\u4e0d\u80fd\u8f6c\u5316\u6210\u53ea\u8003\u8651\u6c34\u5e73/\u7ad6\u76f4\u65b9\u5411\u7684\u60c5\u51b5\u5462\uff1f</p> <p>\u4e8e\u662f\u60f3\u5230\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fb9\uff0c\u6211\u4eec\u753b\u4e00\u4e2a\u4ee5\u5b83\u4e3a\u5bf9\u89d2\u7ebf\u7684\u77e9\u5f62\uff1a</p> <p>\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <p></p> <p>\u7136\u540e\u4e2d\u95f4\u8fd9\u4e00\u5927\u5768\u5c31\u5f88\u597d\u5224\u65ad\u4e86\uff0c\u4e00\u770b\u5c31\u662f\u4e2a\u626b\u63cf\u7ebf\u677f\u5b50\u7684\u5f62\u72b6\u3002</p> <p>\u5148\u6309\u7167 \\(x\\) \u5750\u6807\u5206\u7ec4\u5b58\u4e00\u4e0b\u70b9\uff0c</p> <p>\u7136\u540e\u76f4\u63a5\u5bf9\u4e2d\u95f4\u8fd9\u4e00\u5768\u505a\u4e00\u6b21\u626b\u63cf\u7ebf\uff0c\u56e0\u4e3a\u77e9\u5f62\u4e0d\u4f1a\u76f8\u4ea4\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811\u90fd\u4e0d\u9700\u8981\u4e86\uff0c\u76f4\u63a5\u7528\u4e00\u4e2a vector/set \u4e8c\u5206\u641e\u4e00\u4e0b\u5373\u53ef\u3002</p> <p>\u7136\u540e\u6211\u4eec\u628a\u8fd9\u4e9b\u5df2\u7ecf\u88ab\u6807\u8bb0\u7684\u70b9\u5220\u53bb\uff0c\u4e2d\u95f4\u7684\u90e8\u5206\u5c31\u5904\u7406\u5b8c\u4e86\u3002</p> <p>\u5dee\u4e0d\u591a\u957f\u6210\u8fd9\u6837\uff1a</p> <p></p> <p>\u4e0d\u8fc7\u8981\u8bb0\u5f97\u626b\u63cf\u7ebf\u7684\u65f6\u5019\u4e0b\u6807\u5f97\u662f\u6309\u70b9\u96c6\u8986\u76d6\u7684\u4e0b\u6807\u6765\uff08\u4e0d\u7136\u4f1a\u6f0f\u5224</p> <p>\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u8981\u8003\u8651\u7684\u5c31\u662f\u5916\u9762\u7684\u90e8\u5206\u3002</p> <p>\u5176\u5b9e\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u4e5f\u662f\u626b\u63cf\u7ebf\u626b\u8fc7\u53bb\uff0c\u7136\u540e\u56e0\u4e3a\u626b\u63cf\u7ebf\u4e0a\u6709\u6807\u8bb0\u7684\u4e00\u6bb5\u4e00\u5b9a\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u77e9\u5f62\uff0c\u6240\u4ee5\u53ef\u4ee5\u989d\u5916\u8bb0\u4e0b\u8fd9\u4e00\u6bb5\u662f\u54ea\u4e00\u4e2a\u77e9\u5f62\uff0c\u7136\u540e\u5c31\u662f\u66b4\u529b\u505a\u3002</p> <p>\u626b\u5230\u4e00\u4e2a\u70b9\uff0c\u5224\u4e00\u4e0b\u5b83\u5728\u8fd9\u4e2a\u77e9\u5f62\u5bf9\u89d2\u7ebf\u7684\u54ea\u4e00\u4fa7\uff0c\u770b\u770b\u662f\u4e0d\u662f\u5728\u77e9\u5f62\u5185\u5373\u53ef\u3002</p> <p>\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u88ab\u8bbf\u95ee\u5230\u4e00\u6b21\uff0c\u6240\u4ee5\u8fd9\u73a9\u610f\u513f\u7406\u8bba\u6700\u574f\u662f \\(O(n \\log n)\\) \u7684\uff0c</p> <p>\u6ce8\u610f\u5230\u5982\u679c\u662f\u4efb\u610f\u591a\u8fb9\u5f62\uff0c\u6709\u53ef\u80fd\u6211\u4eec\u753b\u51fa\u6765\u7684\u77e9\u5f62\u4f1a\u76f8\u4ea4\uff0c\u8fd9\u4e2a\u505a\u6cd5\u5c31\u5047\u4e86\uff0c\u6240\u4ee5\u6211\u6b63\u5728\u8003\u8651\u80fd\u4e0d\u80fd\u6269\u5c55\u3002</p> <p>\u4e0d\u77e5\u9053\u6b63\u786e\u6027\u5982\u4f55\uff0c\u5982\u679c\u9519\u4e86\u6b22\u8fce\u5f00\u55b7\uff08</p> <p>\u5b9e\u73b0\u6211\u5148\u5495\u5495\u5495\u7740\uff0c\u6709\u65f6\u95f4\u4e86\u518d\u5199\u3002</p> <p>\u8fd9\u4e2a\u505a\u6cd5\u5e94\u8be5\u662f\u88ab\u90a3\u4e2a\u8457\u540d\u8650\u72d7\u9898 Stars in your windows \u542f\u53d1\u7684\u3002</p> <p>\u753b\u77e9\u5f62\u8fd9\u4e2a\uff0c\u53ef\u80fd\u662f\u6211\u54ea\u5929\u65e0\u804a\u60f3\u51fa\u6765\u7684\u3002</p>"}, {"location": "blog/2023-02-02/", "title": "\u8bb0\u5f55\u4e00\u4e2a Stack Overflow \u5b9e\u4f8b", "text": "<p>\u7b80\u5355\u8bb0\u5f55\u4e00\u4e2a\u56e0\u4e3a\u6211\u7684\u5199\u6cd5\u95ee\u9898\u5f88\u5bb9\u6613\u60f3\u4e0d\u5230\u7684 RE \u9519\u8bef\u3002</p> <p>\u5177\u4f53\u9519\u8bef\u662f\u8fd9\u6837\u7684\uff0c\u6211\u5199\u4e86\u4e00\u4e2a\u4ee3\u7801\uff1a</p> \u9519\u8bef\u7684 Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nclass StringWithDoubleHash {\nprivate: string s; i64 len;\ni64 h[2][si], power[2][si];\nconst i64 base = 131;\nconst i64 m[2] = {998244853ll, 1000000009ll};\npublic:\nint Size() { return len; }\ni64 Index(char ch) { return (i64)(ch - 'a'); }\nvoid Init(string t) {\ns = ' ' + t, len = (int)t.size();\npower[0][0] = power[1][0] = 1ll;\nfor(int _ = 0; _ &lt;= 1; ++_) {\nfor(int i = 1; i &lt;= len; ++i) {\npower[_][i] = power[_][i - 1] * base % m[_];\n}\n}\nh[0][0] = h[1][0] = 0ll;\nfor(int _ = 0; _ &lt;= 1; ++_) {\nfor(int i = 1; i &lt;= len; ++i) {\nh[_][i] = (h[_][i - 1] * base) % m[_] + Index(s[i]) % m[_];\n}\n}\n}\ni64 Query(int _, int l, int r) {\nreturn (h[_][r] - (h[_][l - 1] * power[_][r - l + 1] % m[_]) + m[_]) % m[_];\n}\nbool Equal(int l1, int r1, int l2, int r2) {\nbool f = true;\nfor(int _ = 0; _ &lt;= 1; ++_) {\nf &amp;= (Query(_, l1, r1) == Query(_, l2, r2));\n}\nreturn f;\n}\n};\n\nusing str = StringWithDoubleHash;\nbool Equal(str a, str b, int l, int r) {\nif(a.Size() != b.Size()) return false;\nbool f = true;\nfor(int i = 0; i &lt;= 1; ++i) f &amp;= (a.Query(i, l, r) == b.Query(i, l, r));\nreturn f;\n}\n\nint Radius(str s, int l, int r, int c) {\nwhile(l &lt; r) {\nint mid = (l + r + 1) &gt;&gt; 1;\nif(c - mid + 1 &gt;= 1 &amp;&amp; c + mid - 1 &lt;= s.Size() &amp;&amp; s.Equal(c - mid + 1, c, c, c + mid - 1))\nl = mid;\nelse r = mid - 1;\n}\nreturn l;\n}\nint Radius_ignore(str s, int l, int r, int c, int Ra) {\nwhile(l &lt; r) {\nint mid = (l + r + 1) &gt;&gt; 1;\nif(c - mid + 1 &gt;= 1 &amp;&amp; c + mid - 1 &lt;= s.Size()\n&amp;&amp; s.Equal(c - mid + 1, c - Ra - 1, c + Ra + 1, c + mid - 1))\nl = mid;\nelse r = mid - 1;\n}\nreturn l;\n} str s;\n\nint Rad[si];\nint delta[si][27];\nint pre[si], suf[si], cnt[si];\nvoid fix(int a[], int l, int r, int v) {\na[r] += v, a[l - 1] -= v;\n}\nvoid redo(int a[], int n) { for(int i = 1; i &lt;= n; ++i)\na[i] = a[i] + a[i + 1];\n} int main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nstring tmp; cin &gt;&gt; tmp;\nstring t = \"#\";\nfor(int i = 0; i &lt; (int)tmp.size(); ++i)\nt += tmp[i], t += '#';\ns.Init(t), t = ' ' + t;\n\n// cout &lt;&lt; t &lt;&lt; endl;\n\nint n = s.Size(), sum = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nRad[i] = Radius(s, 1, n, i);\nsum = sum + (Rad[i] / 2);\nint L = i - Rad[i] + 1, R = i + Rad[i] - 1;\n\n// loosen\nif(L - 1 &gt;= 1 &amp;&amp; R + 1 &lt;= n) {\nchar ch1 = t[L - 1], ch2 = t[R + 1];\nint Rr = Radius_ignore(s, Rad[i], n, i, Rad[i]);\ndelta[L - 1][(int)(ch2 - 'a' + 1)] += Rr - Rad[i];\ndelta[R + 1][(int)(ch1 - 'a' + 1)] += Rr - Rad[i];\n}\n\n// lessen\nfix(pre, L, i, L), fix(suf, i, R, R), fix(cnt, L, R, 1);\n}\nredo(pre, n), redo(suf, n), redo(cnt, n);\n\n// for(int i = 1; i &lt;= n; ++i) cout &lt;&lt; Rad[i] &lt;&lt; endl;\n\nint ans = -1;\nfor(int i = 1; i &lt;= n; ++i) {\nif(t[i] == '#') continue;\nfor(char ch = 'a'; ch &lt;= 'z'; ++ch) {\nint add = delta[i][(int)(ch - 'a' + 1)];\nint sub = pre[i] + suf[i] - (i * cnt[i]);\nans = max(ans, sum + (add - sub) / 2);\n}\n}\n\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> <p>\u4f46\u662f\u7f16\u8bd1\u540e\u8fd0\u884c\u4f1a\u76f4\u63a5\u8fd4\u56de <code>SIGSEGV</code>\uff0c\u4f7f\u7528 gdb \u8c03\u8bd5\u540e\u51fa\u6765\u4e86\u8fd9\u6837\u7684\u4fe1\u606f\uff1a</p> <pre><code>Reading symbols from T4...\n(gdb) r\nStarting program: C:\\Users\\Administrator\\OneDrive\\Workspace\\Code\\Mockcontests\\20230201C\\T4.exe\n[New Thread 8836.0x23e0]\n[New Thread 8836.0x2cd4]\n[New Thread 8836.0x2a90]\n\nThread 1 received signal SIGSEGV, Segmentation fault.\n0x00007ff7b6ec29c6 in ___chkstk_ms ()\n(gdb) q\n</code></pre> <p>\u6211\u7ecf\u8fc7\u67e5\u627e\u53d1\u73b0\u4e86\u8fd9\u4e2a\u51fd\u6570\u7684\u6e90\u4ee3\u7801\uff1a</p> <pre><code>/* ___chkstk_ms is a *special* function call, which uses %rax as the argument.We avoid clobbering any registers.  Unlike ___chkstk, it just probes the stack and does no stack allocation.  */\n</code></pre> <p>\u529f\u80fd\u5927\u81f4\u662f\u5728\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u6808\u4e4b\u540e\u8fdb\u884c\u4e00\u4e9b\u68c0\u67e5</p> <p>\u731c\u6d4b\u662f\u7533\u8bf7\u6808\u7a7a\u95f4\u7684\u65f6\u5019\u89e6\u53d1\u4e86\u4ec0\u4e48\u9519\u8bef\uff0c\u4f46\u662f\u5177\u4f53\u5e76\u4e0d\u6e05\u695a\uff0c\u7f51\u4e0a\u4e5f\u6ca1\u6709\u7c7b\u4f3c\u7684\u539f\u56e0\u3002</p> <p>\u800c\u4e14\u56e0\u4e3a\u662f\u8fd0\u884c\u5c31 RE \u4e86\uff0c\u6211\u731c\u6d4b\u5927\u6982\u7387\u95ee\u9898\u51fa\u5728 <code>class StringWithDoubleHash</code> \u5f53\u4e2d\uff0c\u56e0\u4e3a\u6211\u4e4b\u524d\u5c01\u88c5\u7684\u65f6\u5019\u5c31\u51fa\u8fc7\u7c7b\u4f3c\u7684\u8fd0\u884c\u5c31\u6302\u7684\u95ee\u9898\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u770b\u51fa\u6765\uff0c\u56e0\u4e3a\u6d4b\u4e86\u4e00\u4e0b\u597d\u50cf\u7a7a\u95f4\u4e5f\u6ca1\u6709\u7206\u70b8\u4e4b\u7c7b\u7684\u3002</p> <p>\u7136\u540e\u6211\u53d1\u4e86\u4e00\u4e2a\u5e16\u5b50\u8be2\u95ee\uff0c\u8fd8\u5728 uoj \u7fa4\u95ee\u4e86\u4e00\u4e0b\u3002</p> <p>\u5f88\u611f\u8c22 @Zyingyzzz \u548c @\u962e\u884c\u6b62 \u795e\u4ed9\u53d1\u73b0\u4e86\u95ee\u9898\u3002</p> <p>\u95ee\u9898\u51fa\u5728\u6211\u7684 <code>Radius</code> \u51fd\u6570\uff0c\u6211\u4f20\u5165\u4e86\u4e00\u4e2a <code>StringWithDoubleHash</code> \u7c7b\u578b\u7684\u6210\u5458\uff0c\u5927\u5c0f\u662f 1e5 \u7ea7\u522b\uff0c\u7136\u540e\u8fd9\u91cc\u76f4\u63a5\u590d\u5236\uff0c\u6240\u4ee5\u5c31 stack overflow \u4e86\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\u5927\u6982\u662f\u4e0d\u7136\u5c31\u4e0d\u4f20\u6210\u5458\uff0c\u4e0d\u7136\u5c31\u4f20\u5f15\u7528\u3002</p> <p>\u8fd9\u4e2a\u5bf9\u6211\u6765\u8bf4\u5f88\u5bb9\u6613\u5199\u9519\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e0b\uff1a</p> \u6b63\u786e\u7684 Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nclass StringWithDoubleHash {\nprivate: string s; i64 len;\ni64 h[2][si], power[2][si];\nconst i64 base = 131;\nconst i64 m[2] = {998244853ll, 1000000009ll};\npublic:\nint Size() { return len; }\ni64 Index(char ch) { return (i64)(ch - 'a'); }\nvoid Init(string t) {\ns = ' ' + t, len = (int)t.size();\npower[0][0] = power[1][0] = 1ll;\nfor(int _ = 0; _ &lt;= 1; ++_) {\nfor(int i = 1; i &lt;= len; ++i) {\npower[_][i] = power[_][i - 1] * base % m[_];\n}\n}\nh[0][0] = h[1][0] = 0ll;\nfor(int _ = 0; _ &lt;= 1; ++_) {\nfor(int i = 1; i &lt;= len; ++i) {\nh[_][i] = (h[_][i - 1] * base) % m[_] + Index(s[i]) % m[_];\n}\n}\n}\ni64 Query(int _, int l, int r) {\nreturn (h[_][r] - (h[_][l - 1] * power[_][r - l + 1] % m[_]) + m[_]) % m[_];\n}\nbool Equal(int l1, int r1, int l2, int r2) {\nbool f = true;\nfor(int _ = 0; _ &lt;= 1; ++_) {\nf &amp;= (Query(_, l1, r1) == Query(_, l2, r2));\n}\nreturn f;\n}\n};\n\nusing str = StringWithDoubleHash;\nbool Equal(str &amp;a, str &amp;b, int l, int r) {\nif(a.Size() != b.Size()) return false;\nbool f = true;\nfor(int i = 0; i &lt;= 1; ++i) f &amp;= (a.Query(i, l, r) == b.Query(i, l, r));\nreturn f;\n}\n\nint Radius(str &amp;s, int l, int r, int c) {\nwhile(l &lt; r) {\nint mid = (l + r + 1) &gt;&gt; 1;\nif(c - mid + 1 &gt;= 1 &amp;&amp; c + mid - 1 &lt;= s.Size() &amp;&amp; s.Equal(c - mid + 1, c, c, c + mid - 1))\nl = mid;\nelse r = mid - 1;\n}\nreturn l;\n}\nint Radius_ignore(str &amp;s, int l, int r, int c, int Ra) {\nwhile(l &lt; r) {\nint mid = (l + r + 1) &gt;&gt; 1;\nif(c - mid + 1 &gt;= 1 &amp;&amp; c + mid - 1 &lt;= s.Size()\n&amp;&amp; s.Equal(c - mid + 1, c - Ra - 1, c + Ra + 1, c + mid - 1))\nl = mid;\nelse r = mid - 1;\n}\nreturn l;\n} str s;\n\nint Rad[si];\nint delta[si][27];\nint pre[si], suf[si], cnt[si];\nvoid fix(int a[], int l, int r, int v) {\na[r] += v, a[l - 1] -= v;\n}\nvoid redo(int a[], int n) { for(int i = 1; i &lt;= n; ++i)\na[i] = a[i] + a[i + 1];\n} int main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nstring tmp; cin &gt;&gt; tmp;\nstring t = \"#\";\nfor(int i = 0; i &lt; (int)tmp.size(); ++i)\nt += tmp[i], t += '#';\ns.Init(t), t = ' ' + t;\n\n// cout &lt;&lt; t &lt;&lt; endl;\n\nint n = s.Size(), sum = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nRad[i] = Radius(s, 1, n, i);\nsum = sum + (Rad[i] / 2);\nint L = i - Rad[i] + 1, R = i + Rad[i] - 1;\n\n// loosen\nif(L - 1 &gt;= 1 &amp;&amp; R + 1 &lt;= n) {\nchar ch1 = t[L - 1], ch2 = t[R + 1];\nint Rr = Radius_ignore(s, Rad[i], n, i, Rad[i]);\ndelta[L - 1][(int)(ch2 - 'a' + 1)] += Rr - Rad[i];\ndelta[R + 1][(int)(ch1 - 'a' + 1)] += Rr - Rad[i];\n}\n\n// lessen\nfix(pre, L, i, L), fix(suf, i, R, R), fix(cnt, L, R, 1);\n}\nredo(pre, n), redo(suf, n), redo(cnt, n);\n\n// for(int i = 1; i &lt;= n; ++i) cout &lt;&lt; Rad[i] &lt;&lt; endl;\n\nint ans = -1;\nfor(int i = 1; i &lt;= n; ++i) {\nif(t[i] == '#') continue;\nfor(char ch = 'a'; ch &lt;= 'z'; ++ch) {\nint add = delta[i][(int)(ch - 'a' + 1)];\nint sub = pre[i] + suf[i] - (i * cnt[i]);\nans = max(ans, sum + (add - sub) / 2);\n}\n}\n\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> <p>\u867d\u7136\u8fd9\u4efd\u8fd8\u662f\u6ca1\u8fc7\u539f\u9898\u5c31\u662f\u4e86\u2026\u2026\u54ed\u3002</p>"}, {"location": "blog/2023-02-03/", "title": "Vscode \u8c03\u8bd5\u76f8\u5173\u914d\u7f6e\u8bb0\u5f55", "text": "<p>\u6700\u8fd1\u89c9\u5f97\uff0c\u5728 vscode \u91cc\u8fd8\u7528\u547d\u4ee4\u884c gdb \u5404\u79cd\u8c03\u8bd5\u5176\u5b9e\u4e0d\u592a\u4f18\u96c5\u3002</p> <p>\u6bd5\u7adf vscode \u81ea\u5e26\u7684\u8c03\u8bd5\u76f8\u5f53\u4e8e\u662f\u7ed9 gdb \u6765\u4e86\u4e00\u4e2a\u6269\u5c55\uff0c\u7528\u8d77\u6765\u66f4\u8212\u670d\u4e00\u4e9b\u3002</p> <p>\u4e8e\u662f\u627e wqs \u795e\u4ed9\u5b66\u4e60\u4e86\u4e00\u4e0b\u8fd9\u73a9\u610f\u513f\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u7136\u540e\u6539\u4e86\u6539\u914d\u7f6e\u6587\u4ef6\u3002</p> <p>Vscode \u7684\u8c03\u8bd5\u4f9d\u8d56\u4e8e\u4e24\u4e2a\u6587\u4ef6\uff1a<code>launch.json</code> \u548c <code>task.json</code>\u3002</p> <p><code>launch.json</code> \u7684\u4f5c\u7528\u4e3b\u8981\u5c31\u662f\u542f\u52a8\u8c03\u8bd5\u5668\uff08\u4e00\u822c\u90fd\u662f gdb\uff09\uff0c\u800c <code>task.json</code> \u7684\u4f5c\u7528\u5219\u662f\u6267\u884c\u7c7b\u4f3c\u7f16\u8bd1\uff0c\u8fd0\u884c\u4e00\u7c7b\u7684\u4efb\u52a1\u3002</p> <p>\u5148\u770b\u4e00\u4e0b <code>launch.json</code>\uff1a</p> <pre><code>{\n// \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 \n// \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002\n// \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387\n\"version\": \"0.2.0\",\n\"configurations\": [\n{\n\"name\": \"Debug a C++ program with GDB\",  // \u8be5\u8c03\u8bd5\u4efb\u52a1\u7684\u540d\u5b57\uff0c\u542f\u52a8\u8c03\u8bd5\u65f6\u4f1a\u5728\u5f85\u9009\u5217\u8868\u4e2d\u663e\u793a\n\"type\": \"cppdbg\",\n\"request\": \"launch\",\n\"program\": \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\",\n\"args\": [],\n\"stopAtEntry\": false,  // \u8fd9\u4e00\u9879\u63a7\u5236\u662f\u5426\u5728\u5165\u53e3\u5904\u6682\u505c\uff0c\u9ed8\u8ba4false\u4e0d\u6682\u505c\uff0c\u6539\u4e3atrue\u6682\u505c\n\"cwd\": \"${workspaceFolder}\",\n\"environment\": [],\n\"externalConsole\": false,  // \u8fd9\u4e00\u9879\u63a7\u5236\u662f\u5426\u542f\u52a8\u5916\u90e8\u63a7\u5236\u53f0\uff08\u72ec\u7acb\u7684\u9ed1\u6846\uff09\u8fd0\u884c\u7a0b\u5e8f\uff0c\u9ed8\u8ba4false\u8868\u793a\u5728\u96c6\u6210\u7ec8\u7aef\u4e2d\u8fd0\u884c\n\"MIMode\": \"gdb\",\n\"miDebuggerPath\": \"C:\\\\msys64\\\\mingw64\\\\bin\\\\gdb.exe\",  // \u8c03\u8bd5\u5668\u8def\u5f84\uff0c\u5fc5\u987b\u4e0e\u4f60\u81ea\u5df1\u7684\u7535\u8111\u76f8\u7b26\n\"setupCommands\": [\n{\n\"description\": \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\",\n\"text\": \"-enable-pretty-printing\",\n\"ignoreFailures\": true\n}\n],\n\"preLaunchTask\": \"Compile a C++ program with GNU C++17 (msys2 64bit)\"  // \u8c03\u8bd5\u524d\u7684\u9884\u6267\u884c\u4efb\u52a1\uff0c\u8fd9\u91cc\u7684\u503c\u662ftasks.json\u6587\u4ef6\u4e2d\u5bf9\u5e94\u7684\u7f16\u8bd1\u4efb\u52a1\uff0c\u4e5f\u5c31\u662f\u8c03\u8bd5\u524d\u9700\u8981\u5148\u7f16\u8bd1\n}\n]\n}\n</code></pre> <p>\u5176\u5b9e\u4e5f\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u5c31\u770b\u770b\u6ce8\u91ca\u5c31\u884c\uff0c\u8fd9\u4e2a\u662f\u4ece\u67d0\u4e2a\u535a\u5ba2\u590d\u5236\u8fc7\u6765\u6539\u7684\uff0c\u6709\u65f6\u95f4\u627e\u4e00\u4e0b\u51fa\u5904\u3002</p> <p>\u7136\u540e\u5c31\u662f\uff0c\u56e0\u4e3a\u5f00\u4e86 O2 \u8c03\u8bd5\u7ecf\u5e38\u4f1a\u7a81\u7136\u8c03\u5230\u4ee4\u4eba\u96be\u4ee5\u7406\u89e3\u7684\u5730\u65b9\uff0c\u6240\u4ee5\u8fd8\u662f\u4e0d\u5f00 O2 \u6bd4\u8f83\u597d\u3002</p> <p>\u7136\u540e\u518d\u770b <code>task.json</code>\uff1a</p> <pre><code>{\n\"tasks\": [\n{\n\"type\": \"shell\",\n\"label\": \"Compile a C++ program with GNU C++17, O2 (msys2 64bit)\",\n\"command\": \"C:\\\\msys64\\\\mingw64\\\\bin\\\\g++.exe\",\n\"args\": [\n\"${file}\",\n\"-o\",\n\"${fileDirname}\\\\${fileBasenameNoExtension}.exe\",\n\"-std=c++17\",\n\"-O2\",\n\"-Wall\",\n\"-Wextra\",\n\"-Wshadow\",\n\"-g\"\n],\n\"options\": {\n\"cwd\": \"${fileDirname}\"\n},\n\"problemMatcher\": [\n\"$gcc\"\n],\n\"group\": {\n\"kind\": \"build\",\n\"isDefault\": true\n},\n\"detail\": \"Compile a C++ program with O2.\"\n},\n{\n\"type\": \"shell\",\n\"label\": \"Compile a C++ program with GNU C++17 (msys2 64bit)\",\n\"command\": \"C:\\\\msys64\\\\mingw64\\\\bin\\\\g++.exe\",\n\"args\": [\n\"${file}\",\n\"-o\",\n\"${fileDirname}\\\\${fileBasenameNoExtension}.exe\",\n\"-std=c++17\",\n\"-Wall\",\n\"-Wextra\",\n\"-Wshadow\",\n\"-g\"\n],\n\"options\": {\n\"cwd\": \"${fileDirname}\"\n},\n\"problemMatcher\": [\n\"$gcc\"\n],\n\"group\": {\n\"kind\": \"build\",\n\"isDefault\": false\n},\n\"detail\": \"Compile a C++ program without O2.\"\n},\n{\n\"label\": \"Run a C++ program with GNU C++17, O2 (msys2 64bit)\",\n\"type\": \"shell\",\n\"command\": \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\",\n\"options\": {\n\"cwd\": \"${fileDirname}\"\n},\n\"dependsOn\": \"Compile a C++ file with GNU C++17, O2 (msys2 64bit)\",\n\"group\": {\n\"kind\": \"build\",\n\"isDefault\": true\n},\n\"presentation\": {\n\"echo\": true,\n\"reveal\": \"always\",\n\"focus\": false,\n\"panel\": \"shared\",\n\"showReuseMessage\": true,\n\"clear\": false\n},\n\"detail\": \"Run a C++ program with O2.\"\n},\n{\n\"label\": \"Run a C++ program with GNU C++17 (msys2 64bit)\",\n\"type\": \"shell\",\n\"command\": \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\",\n\"options\": {\n\"cwd\": \"${fileDirname}\"\n},\n\"dependsOn\": \"Compile a C++ program with GNU C++17 (msys2 64bit)\",\n\"group\": {\n\"kind\": \"build\",\n\"isDefault\": false\n},\n\"presentation\": {\n\"echo\": true,\n\"reveal\": \"always\",\n\"focus\": false,\n\"panel\": \"shared\",\n\"showReuseMessage\": true,\n\"clear\": false\n},\n\"detail\": \"Run a C++ program without O2.\"\n}\n],\n\"version\": \"2.0.0\"\n}\n</code></pre> <p>\u8fd9\u91cc\u6709\u4e24\u79cd task\uff0c\u4e00\u4e2a\u662f\u7f16\u8bd1\u6e90\u6587\u4ef6\uff0c\u53e6\u4e00\u4e2a\u662f\u8fd0\u884c\u6e90\u6587\u4ef6\u3002</p> <p>\u540e\u4e00\u4e2a task \u4f9d\u8d56\u4e8e\u524d\u4e00\u4e2a\uff0c\u6240\u4ee5\u4f1a\u6709 <code>dependsOn</code> \u8fd9\u6837\u7684\u5185\u5bb9\u3002</p> <p>type \u4e00\u822c\u6765\u8bf4\u9009 shell \u4f1a\u6bd4\u8f83\u597d\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u8ba9 task \u76f4\u63a5\u5728\u7ec8\u7aef\u91cc\u8fd0\u884c\uff0c\u6bd4\u8f83\u7b26\u5408\u65e5\u5e38\u4e60\u60ef\u3002</p> <p><code>presentation</code> \u5219\u662f\u8fd0\u884c\u5b8c\u4e4b\u540e\u7684\u4e00\u4e9b\u4fe1\u606f\u663e\u793a\u4e4b\u7c7b\u7684\uff0c\u6bd4\u5982 <code>echo</code> \u5c31\u8868\u793a\u662f\u5426\u663e\u793a\u4fe1\u606f\uff0c<code>clear</code> \u8868\u793a\u662f\u5426\u60c5\u51b5\u4e4b\u524d\u7684\u8f93\u51fa\u3002</p> <p><code>panel</code> \u5219\u662f\u662f\u5426\u4e0e\u4e0a\u4e00\u4e2a\u4efb\u52a1\u5171\u7528\u7ec8\u7aef\u3002</p> <p>\u7136\u540e\u8bb0\u5f97\u8981\u5728\u5206\u7ec4\u91cc\u9009\u4e0a <code>build</code>\uff0c\u4e0d\u7136 <code>C-S-b</code> \u7684\u65f6\u5019\u4e0d\u4f1a\u51fa\u73b0\u5bf9\u5e94 task \u7684\uff08</p> <p>\u7136\u540e\u8fd9\u6837\u914d\u7f6e\u597d\u4e4b\u540e\u628a\u6587\u4ef6\u653e\u5230\u5bf9\u5e94\u5de5\u4f5c\u533a\u7684 <code>.vscode</code> \u76ee\u5f55\u4e0b\uff0c\u76f4</p> <p>\u63a5 F5 \u5c31\u80fd\u8c03\u8bd5\u4e86\u3002</p> <p>\u8c03\u8bd5\u7684\u65f6\u5019\u5c31\u5728\u7ec8\u7aef\u91cc\u8f93\u5165\uff0c\u624b\u52a8\u4f7f\u7528 gdb \u539f\u751f\u547d\u4ee4\u9700\u8981\u5728 Debug console \u91cc\uff0c\u8fd8\u9700\u8981\u52a0\u4e0a <code>-exec</code> \u524d\u7f00\u3002</p> <p>\u56e0\u4e3a Debug console \u5176\u5b9e\u672c\u8d28\u4e0a\u662f\u7ed9\u8868\u8fbe\u5f0f\u6c42\u503c\u7528\u7684\u3002</p> <p></p> <p>\u8fd0\u884c\u7684\u8bdd\u76f4\u63a5\u9009\u4e2d\u5bf9\u5e94\u4efb\u52a1\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u91cc\u552f\u4e00\u96be\u53d7\u7684\u70b9\u662f\uff0c\u6211\u4fee\u6539\u9ed8\u8ba4\u7ec8\u7aef\u4e3a Git Bash \u4e4b\u540e\uff0cjson \u8bbe\u7f6e\u91cc\u7684\u7f3a\u7701\u8def\u5f84\u4f1a\u6709 <code>d:</code> \u7684\u5b57\u6837\uff0cbash \u6ca1\u6cd5\u8bc6\u522b\u3002</p> <p>\u6211\u8fd8\u5728\u601d\u8003\u600e\u4e48\u4fee\u6539\u8ba9\u5b83\u6765\u9002\u914d\u3002</p>"}, {"location": "blog/2023-02-26/", "title": "\u591c\u722c\u5927\u8d5b", "text": "<p>\u539f\u89c6\u9891\u6765\u81ea\uff1a<code>QQ user:279144881</code>\u3002</p> <p>\u8fd9\u624d\u662f\u6211\u5fc3\u4e2d\u6210\u5916\u8be5\u6709\u7684\u6837\u5b50\uff08\u96fe</p> <p>\u8fd9\u4e2a\u8fdc\u5149\u706f\u548c\u6821\u670d\u653e\u5728\u4e00\u8d77\u592a\u9006\u5929\u4e86\u3002</p>"}, {"location": "blog/2023-03-06/", "title": "\u6062\u590d\u56e0\u505c\u673a\u5bfc\u81f4\u6587\u4ef6\u4e22\u5931\u7684 git repo", "text": ""}, {"location": "blog/2023-03-06/#_1", "title": "\u524d\u8a00", "text": "<p>\u6700\u8fd1\u8fd9\u6bb5\u65f6\u95f4\u4e00\u76f4\u5728\u5b66\u6821\u5927\u673a\u623f\u5199\u535a\u5ba2\uff0c\u539f\u7406\u662f\u7528 Onedrive \u540c\u6b65\u6574\u4e2a repo\uff0c\u4e8e\u662f login \u4e4b\u540e\u76f4\u63a5\u4fee\u6539\uff0cmkdocs \u7f16\u8bd1\u4e00\u4e0b\u76f4\u63a5 push \u5c31\u53ef\u4ee5\u3002</p> <p>\u4f46\u662f Onedrive \u6709\u4e00\u4e2a\u6bd4\u8f83\u81f4\u547d\u7684\u95ee\u9898\uff0c\u5bf9\u4e8e\u591a\u6587\u4ef6\uff0c\u5b83\u5f88\u591a\u65f6\u5019\u4e0d\u80fd\u8fdb\u884c\u5373\u65f6\u540c\u6b65\uff0c\u5f80\u5f80\u9700\u8981\u624b\u52a8\u6682\u505c\u540c\u6b65\u6216\u8005\u9000\u51fa\u91cd\u8fdb\u4e4b\u540e\u624d\u4f1a\u8ddf\u90a3\u5565\u4e00\u6837\u81ea\u5df1\u540c\u6b65\u4e00\u70b9\u3002</p> <p>\u8fd9\u4e2a\u5730\u65b9\u5df2\u7ecf\u6709\u4eba\u9047\u5230\u4e86\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u4f46\u662f microsoft \u4f3c\u4e4e\u5e76\u6ca1\u6709\u4fee\u590d\u8fd9\u4e2a\u4e1c\u897f\u3002</p> <p>\u5f88\u70e6\uff0c\u6240\u4ee5\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u6211\u535a\u5ba2\u5199\u5b8c\u4e86\uff0cpublish \u4e86\uff0c\u4f46\u662f\u6211 onedrive \u5e76\u6ca1\u6709\u4e0a\u4f20\uff0c\u6b64\u65f6\u53c8\u9a6c\u4e0a\u8981\u56de\u5bdd\u5ba4\u4e86\uff0c\u5bfc\u81f4\u6587\u4ef6\u540c\u6b65\u4e0d\u4e86\uff0c\u66f4\u6539\u4e22\u5931\u3002</p> <p>\u4e8e\u662f\u6211\u91c7\u53d6\u4e86\u571f\u529e\u6cd5\uff0c\u76f4\u63a5\u5728\u975e\u8fd8\u539f\u76d8\u4e0a\u5b58\u4e00\u4e0b\u6ca1\u6709\u88ab\u540c\u6b65\u7684\u6587\u4ef6\uff0c\u8fd9\u4e2a\u53ea\u9700\u8981\u7b5b\u9009\u7136\u540e\u590d\u5236\u4e00\u4e0b\u5c31\u884c\u4e86\u3002</p> <p>\u4e4b\u524d\u5df2\u7ecf\u6210\u529f\u8fc7\u51e0\u6b21\u4e86\uff0c\u4f46\u662f\u8fd9\u6b21\u5374\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u6211\u5f00\u59cb\u5e76\u6ca1\u6709\u89c9\u5f97\u6709\u5565\u4e0d\u5bf9\u52b2\uff0c\u8fc7\u4e86\u4e00\u4f1a\u5c31\u51fa\u4e8b\u4e86\u3002</p>"}, {"location": "blog/2023-03-06/#_2", "title": "\u95ee\u9898", "text": "<p>\u6211\u590d\u5236\u5b8c\u4e4b\u540e\u8fd0\u884c\u4e86\u7f16\u8bd1\u535a\u5ba2\u7684\u547d\u4ee4\uff1a<code>mkdocs serve</code>\uff0c\u51c6\u5907\u770b\u770b\u662f\u4e0d\u662f\u5c11\u4e86\u4ec0\u4e48\u4e1c\u897f\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u76f4\u63a5\u6ca1\u6cd5\u7f16\u8bd1\u4e86\uff0c\u56e0\u4e3a\u6211\u6709\u7528\u4e00\u4e2a\u6839\u636e git \u4fee\u6539\u8bb0\u5f55\u6765\u81ea\u52a8\u66f4\u65b0\u6587\u4ef6\u4fee\u6539\u65f6\u95f4\u7684\u63d2\u4ef6\uff0c\u800c\u5b83\u63d0\u793a\u6211\uff0c<code>unable to read git log of xx/yy/zz/aa/bb.cc</code></p> <p></p> <p>(\u56e0\u4e3a\u5f53\u65f6\u7684\u4f1a\u8bdd\u5df2\u7ecf\u5173\u4e86\uff0c\u5e78\u597d\u6211\u5f53\u65f6\u5907\u4efd\u4e86\u4ee3\u7801\u4ee5\u9632\u4e07\u4e00\uff0c\u6240\u4ee5\u7528\u4e86\u9519\u8bef\u7684\u4ee3\u7801\u6765\u6f14\u793a)</p> <p>\u6211\u6b64\u65f6\u5c31\u89c9\u5f97\u4e0d\u5bf9\u52b2\uff0c\u968f\u4fbf\u5f00\u4e86\u4e00\u4e2a\u6587\u4ef6\u770b\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e86\u8fd9\u6837\u7684\u4e1c\u897f\uff1a</p> <p></p> <p>\u5f88\u597d\uff0c\u539f\u6765\u662f\u6211\u7684\u6587\u4ef6\u4e71\u7801\u4e86\uff0c\u770b\u8d77\u6765\u662f\u56e0\u4e3a\u6211\u5f53\u65f6\u590d\u5236\u5e76\u6ca1\u6709\u590d\u5236\u5b8c\u5168\uff0c\u7740\u6025\u7740\u8d70\uff0c\u76f4\u63a5\u62c9\u95f8\u65ad\u7535\u4e86\u3002</p> <p>\u4e8e\u662f\u6709\u4e9b\u6587\u4ef6\u5c31\u6ca1\u6709\u62f7\u5b8c\u3002</p> <p>\u4ed4\u7ec6\u5206\u6790\u53d1\u73b0\u4e00\u4e2a\u4e8b\u60c5\u662f\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u4e2a\uff0c\u6211\u7684 <code>.git</code> \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u6709\u635f\u574f\u3002</p> <p>\u4e8e\u662f\u6211\u5c1d\u8bd5\u4f7f\u7528 <code>git reset --hard</code>\uff0c\u7136\u540e <code>git fetch</code>\uff0c\u4e4b\u540e <code>git pull</code> \u628a\u8fdc\u7a0b\u7684\u4ee3\u7801\u62c9\u53d6\u4e0b\u6765\u3002</p> <p>\u4e4b\u540e\u6211\u7ee7\u7eed\u7f16\u8bd1\u4e86\u4e00\u6b21\u3002</p> <p>\u4ecd\u65e7\u662f\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u7136\u540e\u6211\u5c31\u5728\u641c\u7d22\u5f15\u64ce\u91cc\u641c\u7d22\u4e86 <code>\u5982\u4f55\u6062\u590d git \u7684\u6587\u4ef6</code></p> <p>\u5148\u662f\u53d1\u73b0\u4e86 <code>git fsck</code> \u8fd9\u4e2a\u547d\u4ee4\uff0c\u4e8e\u662f\u6211\u4f7f\u7528\u5b83\u68c0\u67e5\u4e86\u6211\u7684 repo\uff1a</p> <p></p> <p>\u53d1\u73b0\u4e86 git \u7684\u6587\u6863\uff0c\u9605\u8bfb\u4e4b\u540e\u5c1d\u8bd5\u4e86\u4e00\u4e0b\uff0c\u4f46\u662f\u4ecd\u65e7\u6ca1\u6709\u5375\u7528\u3002</p> <p>\u7136\u540e\u6ce8\u610f\u5230\u8fd9\u91cc\u6709\u51e0\u53e5\u8bdd\uff1a</p> <p></p> <p>\u6211\u63a8\u6d4b\u53ef\u80fd\u6700\u5927\u7684\u95ee\u9898\u662f\uff0c\u6709\u4e00\u4e9b commit \u6587\u4ef6\u4e22\u5931\u4e86\uff0c\u8fde\u5e26\u7740\u4e00\u4e9b\u6587\u4ef6\u7684 log\uff0c\u4e8e\u662f\u6211\u5148\u5c1d\u8bd5\u4e86\u76f4\u63a5\u4fee\u6539\u5b83\u63d0\u793a\u7684\u6587\u4ef6\uff0c\u8ba9 git \u91cd\u65b0\u521b\u5efa log\uff0c\u7136\u540e\u518d\u8fd0\u884c\uff0c\u53d1\u73b0\u6587\u4ef6\u540d\u53d8\u5316\u4e86\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u4e0d\u6b62\u4e00\u4e2a\uff0c\u8fd9\u6837\u4e0b\u53bb\u4f1a\u6bd4\u8f83\u96be\u53d7\u7684\u3002</p> <p>\u4e8e\u662f\u6211\u5c31\u7ee7\u7eed\u5bfb\u627e\u80fd\u591f\u89e3\u51b3\u95ee\u9898\u7684\u529e\u6cd5\u3002</p> <p>\u518d\u6b21\u9605\u8bfb\u4e86\u6587\u6863\u4e4b\u540e\uff0c\u6211\u6709\u4e00\u4e2a\u60f3\u6cd5\uff0c\u4ed6\u8bf4\uff1a</p> <p>You can recover it the same way, by adding a branch that points to that SHA-1.</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5176\u5b9e git \u5e76\u6ca1\u6709\u4e22\u5931\u8fd9\u4e9b commit\uff0c\u53ea\u662f\u4ece branch \u91cc\u79fb\u9664\u4e86\uff08\u56e0\u4e3a\u6587\u4ef6\u7f3a\u5931\u5bfc\u81f4\u7684\u79fb\u9664\uff09</p> <p>\u6240\u5e78\u8bb0\u5f55\u8fd9\u4e2a\u7684\u6587\u4ef6\u5e76\u6ca1\u6709\u4e22\u5931\u3002</p> <p>\u6240\u4ee5\u6211\u6253\u7b97\uff0c\u628a\u8fd9\u4e9b\u4e22\u5931\u7684 commit \u5168\u90e8\u62c9\u51fa\u6765\uff0c\u76f4\u63a5\u5206\u522b\u4e22\u5230\u51e0\u4e2a branch \u4e0a\uff0c\u7136\u540e\u628a\u8fd9\u4e9b branch \u76f4\u63a5\u5408\u5e76\u5230\u6211\u7684\u672c\u5730 master \u5206\u652f\uff1a</p> <p>\u6240\u4ee5\u6211\u5148\u8fd0\u884c\u4e86 <code>git log --pretty=oneline</code></p> <p></p> <p>\u786e\u5b9e\u662f\u6709 commit \u4e22\u5931\u4e86\uff0c\u4e8e\u662f\u6211\u518d\u6b21\u8fd0\u884c\u4e86 <code>git fsck</code>\uff0c\u7136\u540e\u627e\u5230\u4e86\u8fd9\u4e9b <code>dangling commit</code>\uff1a</p> <p>\u4e4b\u540e\u6211\u65b0\u5efa\u4e86\u4e00\u4e9b branch\uff0c\u5148\u8bd5\u8bd5\u53ef\u4e0d\u53ef\u884c</p> <pre><code>git branch recover-branch-1 xxxx\ngit branch recover-branch-2 yyyy\n</code></pre> <p>\u8dd1\u4e00\u4e0b <code>git branch</code> \u68c0\u67e5\u4e00\u4e0b\uff1a</p> <p></p> <p>\u7136\u540e\u5c31 <code>git checkout</code> \u9009\u62e9\u4e86 <code>master</code> \u5206\u652f</p> <p></p> <p>\u5f88\u597d\uff0c\u4e0d\u80fd\u5408\u5e76\uff0c\u4e3a\u5565\u5462\uff0c\u4ed4\u7ec6\u9605\u8bfb\u4e4b\u540e\u53d1\u73b0\uff0c\u56e0\u4e3a\u67d0\u4e9b\u6587\u4ef6\u4e22\u5931\uff0c\u5bfc\u81f4\u8fd9\u4e9b commit \u4e5f\u90fd\u627e\u4e0d\u56de\u6765\u4e86\uff01fk\u3002</p> <p>\u4e4b\u540e\u6211\u5c31\u6bd4\u8f83\u56f0\u60d1\uff0c\u4e0d\u77e5\u9053\u8be5\u548b\u529e\u6bd4\u8f83\u597d\u3002</p>"}, {"location": "blog/2023-03-06/#_3", "title": "\u89e3\u51b3\u65b9\u6848", "text": "<p>\u6700\u540e\u6211\u53ea\u597d\u4f7f\u7528\u4e0b\u7b56 <code>git clone</code>\uff0c\u8fd9\u4e2a\u672c\u6765\u6700\u5f00\u59cb\u5c31\u60f3\u5230\u4e86\uff0c\u4f46\u662f\u6211\u60f3\u7740\uff0c\u8fd9\u6bd5\u7adf\u662f\u5728 <code>Onedrive</code> \u6587\u4ef6\u5939\u4e0a\u641e\uff0c\u641e\u51fa\u4e8b\u4e86\u5230\u65f6\u5019\u6211\u672c\u5730\u6570\u636e\u4e5f\u6ca1\u4e86\u3002</p> <p>\u4f46\u662f\u4ed4\u7ec6\u4e00\u60f3\uff0c\u8fd9TM\u4e0d\u662f\u8fd8\u6709 git repo \u5417\uff0c\u5c31\u7b97\u6389\u4e86\uff0c\u8fdc\u7aef\u670d\u52a1\u5668\u4e0a\u8fd8\u6709\u4e1c\u897f\u5462\uff01\u76f4\u63a5\u590d\u5236\u4e00\u4e0b\uff0c\u5b9e\u5728\u4e0d\u884c\u91cd\u65b0 remote \u90fd\u597d\u554a\uff01</p> <p>\u4e8e\u662f\u4e3a\u4e86\u4fdd\u9669\uff0c\u6211\u628a\u5df2\u7ecf\u5904\u7406\u5230\u8fd9\u6b65\u7684\u4e24\u4e2a repo\uff08\u5305\u542b\u5173\u7cfb\uff09\u4e22\u8fdb\u4e86\u522b\u7684\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5206\u522b clone\uff0c\u66b4\u529b\u56de\u9000\u5230\u6211\u6628\u5929\u665a\u4e0a\u7684\u7248\u672c\uff08\u5e78\u597d\u6211\u5f53\u65f6\u4e24\u4e2a repo \u90fd\u5df2\u7ecf\u4e0a\u4f20\u4e86\uff0c\u53ea\u662f onedrive \u6ca1\u66f4\u65b0\u800c\u5df2\uff09</p> <p>\u518d\u6b21\u7f16\u8bd1\uff0c\u6210\u529f\u4e86\uff01</p>"}, {"location": "blog/2023-03-06/#_4", "title": "\u603b\u7ed3", "text": "<p>\u6211\u662f shaber\u3002</p> <p>\u4e0d\u8fc7 Onedrive \u7684\u8fd9\u4e2a\u95ee\u9898\u786e\u5b9e\u662f\u5f88\u4ee4\u6211\u5934\u75bc\uff0c\u4f46\u662f\u6211\u672c\u8eab\u5df2\u7ecf\u5f88\u4ee5\u6765\u57fa\u4e8e\u5fae\u8f6f\u751f\u6001\u7684\u4e00\u7cfb\u5217\u4ea7\u54c1\u4e86\uff0c\u540c\u6b65\u529f\u80fd\u786e\u5b9e\u597d\u7528\uff0c\u4e5f\u4e0d\u7528\u9891\u7e41\u7ffb\u5899\uff0ctodo \u7528\u7740\u4e5f\u5f88\u8212\u670d\u3002</p> <p>\u6240\u4ee5\u6211\u6253\u7b97\u53bb report \u4e00\u4e0b\u8fd9\u4e2a bug\uff0c\u76ee\u524d\u5148\u5c06\u5c31\u7740\u7528\uff0c\u5177\u4f53\u89e3\u51b3\u5c31\u662f\uff0c\u65e2\u7136 OneDrive \u5bf9\u8fc7\u591a\u6587\u4ef6\u540c\u6b65\u4e0a\u4f20\u901f\u5ea6\u592a\u6162\uff08\u6211\u731c\u6d4b\u662f\u8981\u8bb0\u5f55\u4e00\u4e9b\u6742\u4e03\u6742\u516b\u7684\u4e1c\u897f\uff08\u4f46\u4e0d\u81f3\u4e8e\u8fd9\u4e48\u6162\u5427\uff09\uff09\uff0c\u90a3\u6211\u5c31\u5148\u53ea\u5728\u5927\u673a\u623f\u7535\u8111\u4e0a\u6539\u3002</p> <p>\u7136\u540e\u540c\u6b65\u5b8c\u4e4b\u540e\u5728\u53e6\u5916\u4e00\u4e2a\u673a\u623f\u7684\u4e3b\u673a\u4e0a\u7f16\u8bd1\uff0c\u7136\u540e\u4e0a\u4f20\u5c31\u7b49\u90a3\u8fb9\u4e0a\u4f20\u5c31\u884c\uff0c\u53cd\u6b63\u90a3\u8fb9\u4e0d\u65ad\u7535\u3002</p>"}, {"location": "blog/2023-03-06/#_5", "title": "\u540e\u8bb0", "text": "<p>\u597d\u9ebb\u70e6\u2026\u2026\u2026\u2026\u2026\u2026</p> <p>\uff08\u89e3\u51b3\u95ee\u9898\u4e4b\u540e\uff1a\uff09</p> <p></p> <p>\u4eca\u5929\u665a\u4e0a\u53d1\u73b0\u4e00\u4e2a\u4e8b\u60c5\uff0c\u5982\u679c onedrive \u4e0d\u540c\u6b65\u4e86\uff0c\u53ef\u4ee5\u8003\u8651\u526a\u5207\u4e4b\u540e\u5728\u79fb\u52a8\u56de\u6765\u3002</p> <p>\u8fd9\u6837 OneDrive \u5c45\u7136\u5c31\u4f1a\u66f4\u65b0\u4e86\uff01\uff08\u53ea\u5bf9 <code>.git</code> \u8bd5\u9a8c\u4e86\u4e00\u4e0b\uff0c\u5982\u679c\u90fd\u53ef\u4ee5\u6211\u4f1a\u5355\u72ec\u53d1\u4e00\u7bc7 blog\uff09</p>"}, {"location": "blog/2023-04-09/", "title": "\u6211\u70b8\u9e21\u88ab\u5403\u4e86\uff0c\u6211\u4e0d\u73a9\u4e86", "text": "<p>\u5982\u679c\u8981\u770b\u66f4\u591a\u7c7b\u4f3c\u7684\uff0c\u8bf7\u5230\u8fd9\u91cc\u6765\u70b9\u4e2a\u8d5e\u6295\u4e2a\u5e01\uff0c\u8ba9\u6211\u66f4\u6709\u52a8\u529b\uff08\uff08</p>"}, {"location": "blog/2023-05-06/", "title": "\u5f3a\u70c8\u8c34\u8d23 EarthMessenger", "text": ""}, {"location": "blog/2023-05-06/#how-to-configure-an-unix-style-environment-on-windows", "title": "How to configure an Unix-style environment on Windows", "text": "<p>\u6700\u8fd1\u53d1\u73b0\u6709\u4e2a\u53eb EarthMessenger \u7684\u5b66\u5f1f\uff0c\u4f7f\u7528 <code>vim:et ts=2 sw=2 sts=2</code> \u7684\u90aa\u6559\uff01</p> <p>\u6211\u5f88\u662f\u6124\u6012\uff0c\u600e\u4e48\u80fd\u4e24\u683c\u7f29\u8fdb\u5462\uff1f\uff1f\uff1f\u53d7\u4e0d\u4e86\u4e86\u3002</p> <p>\u8fc7\u4e86\u51e0\u5929\uff0c\u53d1\u73b0\u8fd9\u4f4d\u540c\u5b66\u5728 <code>D:\\</code> \u88c5\u4e86\u4e2a Manjaro \u865a\u62df\u673a\uff0c\u76f4\u63a5\u4e0d\u8981 Windows \u4e86\u3002</p> <p>\u6211\u66f4\u662f\u6124\u6068\uff01\u6211\u7edd\u5bf9\u65e0\u6cd5\u63a5\u53d7\u7528\u7740 Windows \u8dd1 Linux \u865a\u62df\u673a\u7684\u8fd9\u79cd NTR \u884c\u4e3a\uff0c\u54ea\u6015 Windows \u975e\u5e38\u96be\u7528\uff01</p> <p>\u7528\u4e2a WSL \u90fd\u8fd8\u597d\uff0c\u600e\u4e48\u80fd\u76f4\u63a5\u7528\u865a\u62df\u673a\u5f53\u4e3b\u73af\u5883\u5462\uff1f\uff1f\uff1f\uff1f\uff1f</p> <p>\u4f46\u662f\u8f6c\u5ff5\u4e00\u60f3\uff0c\u4e5f\u4e0d\u662f\u6ca1\u6709\u9053\u7406\uff0cWindows \u592a\u868c\u57e0\u4e86\uff0c\u5b8c\u5168\u6ca1\u6cd5\u83b7\u5f97\u5f88\u597d\u7684\u4f53\u9a8c\u3002</p> <p>\u6700\u8fd1\u5728\u505a\u7684\u52aa\u529b\u5c31\u662f\u5c3d\u529b\u8ba9\u81ea\u5df1\u7684 Windows \u63a5\u8fd1 Linux \u7684\u4f53\u9a8c\u3002</p> <p>Linux \u867d\u7136\u597d\uff0c\u4f46\u662f Gnome\uff0c\u8bb2\u771f\u6211\u4e0d\u662f\u5f88\u559c\u6b22\uff0c\u6211\u5f88\u559c\u6b22 Windows11 \u7684 UI\uff0c\u6709 win \u5473\u4e5f\u6709 Mac \u5473\u3002</p> <p>\u5f88\u559c\u6b22\u8fd9\u79cd NTR\u3002</p> <p>\u4f46\u662f Windows \u7684\u4f53\u9a8c\u53c8\u786e\u5b9e\u96be\u53d7\uff0c\u90a3\u4e48\u8be5\u600e\u4e48\u529e\u5462\uff1f</p> <p>\u662f\u5411 EarthMessenger \u9ed1\u6076\u52bf\u529b\u4f4e\u5934\u5417\uff1f\u5e76\u4e0d\uff0cMsys2 \u4f1a\u51fa\u624b\u3002</p> <p>\u6211\u4eec\u77e5\u9053 Git Bash \u672c\u8d28\u5c31\u662f Msys2 \u5957\u4e86\u4e2a\u76ae\uff0c\u800c Msys2 \u7684\u4e3b\u65e8\u662f\u4ec0\u4e48\uff0c\u628a Linux \u4e0a\u7684\u597d\u4e1c\u897f\u79fb\u690d\u5230 Windows \u4e0a\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4ee5 Git Bash \u4e3a\u57fa\u5e95\uff0c\u6784\u5efa\u4e00\u4e2a\u7c7b Unix \u73af\u5883\uff01</p> <p>\uff08\u867d\u7136\u6211\u4e5f\u6709 Msys2\uff0c\u751a\u81f3\u5b83\u8fd8\u6709 Pacman\uff0c\u66f4\u65b9\u4fbf\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u8fd9\u6bb5\u65f6\u95f4\u5728\u673a\u623f\u7528\u5b66\u6821\u7684\u673a\u5b50\uff0c\u6240\u4ee5\u76f4\u63a5\u7528 Git Bash \u4e86\uff0c\u5e76\u4e14\u6211\u76f4\u63a5\u7528 Msys2 \u5f00\u7684\u8bdd\uff0czsh \u6ca1\u6cd5\u52a0\u8f7d\u6211 windows \u4e0b\u7684 <code>~/</code> \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u800c\u4f1a\u52a0\u8f7d <code>/home/administrator/</code> \u7684\u6587\u4ef6\uff0c\u6211\u8fd8\u4e0d\u6e05\u695a\u600e\u4e48\u5f04\uff0c\u6240\u4ee5\u6682\u65f6\u8fd9\u6837\u4e86\u3002\uff09</p> <p>\u5176\u5b9e\u6211\u53ea\u662f\u8981\u5f04\u4e00\u4e2a zsh\uff0c\u8fd9\u4e2a\u4ece msys2 \u7684 Pack \u91cc\u9762\u627e\u5c31\u884c\u4e86\u3002</p> <p>https://packages.msys2.org/package/zsh?repo=msys&amp;variant=x86_64</p> <p>\u7136\u540e\u89e3\u538b\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6211\u6700\u8fd1\u53d1\u73b0\u7684\u6bd4 Winrar \u597d\u7528\u7684 Peezip\u3002</p> <p>\u7136\u540e\u76f4\u63a5\u4e22\u5230 Git bash \u4e3b\u76ee\u5f55\uff0c\u7136\u540e\u7ed9 <code>~/</code> \u4e0b\u7684 <code>.bashrc</code> \u52a0\u4e24\u53e5\u8bdd\uff1a</p> <pre><code>if [ -t 1 ]; then\nexec zsh\nfi\n</code></pre> <p>\u7136\u540e\u53d1\u73b0 Git Bash \u4e0d\u4f1a\u8c03\u7528\u8fd9\u4e2a\uff0c\u600e\u4e48\u529e\u5462\uff1f</p> <p>\u7ffb\u9605\u6587\u6863\u53d1\u73b0 Git Bash \u8c03\u7528\u7684\u662f <code>.bash_profile</code>\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u518d\u5728 <code>.bash_profile</code> \u91cc\u52a0\u4e00\u53e5\u8bdd\uff1a</p> <pre><code>source ~/.bashrc\n</code></pre> <p>\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e4b\u540e\u5728 Windows Terminal \u91cc\u9762\u52a0\u4e00\u4e2a\u914d\u7f6e\u9009\u9879\u3002</p> <p>\u8bb0\u5f97\u542f\u52a8\u547d\u4ee4\u8981\u52a0\u4e00\u4e2a --login -i\uff0c\u4e0d\u7136\u4f1a\u76f4\u63a5\u5916\u90e8\u6253\u5f00 Git Bash \u800c\u4e0d\u662f\u5728 Wt \u5f53\u4e2d\u6253\u5f00\u3002</p> <p>\u7136\u540e\u76f4\u63a5\u751f\u6210 <code>.zshrc</code>\uff0c\u4e0d\u52a0\u989d\u5916\u914d\u7f6e\u3002</p> <p>\u4e4b\u540e\u4e0b\u4e00\u4e2a oh-my-zsh\uff1a</p> <pre><code>sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre> <p>\u5982\u679c <code>raw.githubusercontent.com</code> \u7528\u4e0d\u4e86\u3002\u53ef\u6362\u6210 <code>raw.fastgit.org</code></p> <p>\u7136\u540e <code>.zshrc</code> \u91cc\u50cf Linux \u4e00\u6837\u8be5\u600e\u4e48\u914d\u7f6e\u5c31\u600e\u4e48\u914d\u7f6e\u5c31\u884c\u3002</p> <p>\u6211\u4e60\u60ef\u52a0\u4e2a <code>zsh-autosuggestion</code> \u548c <code>zsh-syntax-highlighting</code></p> <p>\u7136\u540e\u8be5\u6709\u7684 <code>z</code> \u548c <code>sudo</code>\u3001<code>git</code> \u90fd\u52a0\u4e0a\u3002</p> <p>\u4e0d\u8fc7 sudo \u90a3\u4e2a\u8fd8\u9700\u8981\u989d\u5916\u4e0b\u4e2a Pack\uff1a</p> <pre><code>curl -s https://raw.githubusercontent.com/imachug/win-sudo/master/install.sh | sh\n</code></pre> <p>\u6211\u662f\u7528\u4e86\u81ea\u5df1 fork ys \u51fa\u6765\u7684\u4e3b\u9898\uff1ahttps://github.com/hylwxqwq/yuyuko.zsh-theme</p> <p>\u8fd9\u4e2a\u548c\u6211 Vim \u7684\u4e3b\u9898\uff1ahttps://github.com/hylwxqwq/yuyuko.vim \u6bd4\u8f83\u642d\uff08\u6bd5\u7adf\u7528\u7684\u4e00\u5957\u914d\u8272\uff09</p> <p>\u6548\u679c\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u5b57\u4f53\u7528\u7684\u662f Hermit\uff0c\u5f88\u559c\u6b22\uff0c\u611f\u89c9\u6bd4\u8f83\u53ef\u7231\u3002</p> <p>\u8bdd\u8bf4\u6211\u90a3\u4e2a\u4e07\u5e74\u4e0d\u7ef4\u62a4\u7684 vscode theme \u5c45\u7136\u6709\u4eba\u6765\u4e86\u4e2a\u9ad8\u8d28\u91cf PR\u3002</p> <p>\u7d27\u6025 Merge\uff08\u8349\uff09</p> <p>upd on 0527:</p> <p>\u6700\u8fd1\u53d1\u73b0 zsh \u7684\u542f\u52a8\u901f\u5ea6\u7279\u522b\u6162\uff0c\u5224\u65ad\u662f oh-my-zsh \u7684\u9505\u3002</p> <p>\u56e0\u4e3a ys \u4e3b\u9898\u662f\u975e\u5f02\u6b65\u7684\uff0c\u7136\u540e\u52a0\u4e0a\u4e00\u5806\u82b1\u91cc\u80e1\u54e8\u7684\u4e1c\u897f\uff0c\u5c31\u5361\u7684\u8981\u6b7b\u3002</p> <p>\u6240\u4ee5\u6362\u4e86\u53e6\u5916\u4e00\u4e2a\u652f\u6301 Turbo Mode \u7684\u7ba1\u7406\u5668 zinit\u3002</p> <p>\u7136\u540e\u628a\u4e3b\u9898\u6362\u6210\u4e86\u5f02\u6b65\u7684 pure\uff08\u6bd5\u7adf\u6211\u4e3b\u8981\u662f\u5728 vim \u91cc\u7528\uff0c\u524d\u6bb5\u65f6\u95f4\u7ed9 yuyuko.vim \u52a0\u4e86 terminal color support\uff0c\u6240\u4ee5\u90fd\u4e0d\u7528\u600e\u4e48\u6539\u5c31\u53ef\u4ee5\u9002\u5e94\uff09\u3002</p> <p>\u5177\u4f53\u7684\u914d\u7f6e\u53ef\u4ee5\u76f4\u63a5\u770b\u5b98\u65b9 repo \u7684 example\uff1ahttps://github.com/zdharma-continuum/zinit#usage</p> <p>\u7136\u540e\u901f\u5ea6\u5c31\u8d77\u6765\u4e86\uff0c\u5f88\u8212\u670d\u3002</p>"}, {"location": "blog/2023-05-09/", "title": "\u62b5\u5236 EarthMessenger \u865a\u62df\u673a\u90aa\u6559", "text": "<p>\u53d7\u4e0d\u4e86\u4e86\uff0c\u641e\u4e86\u5927\u534a\u5929\u865a\u62df\u673a\uff0c\u7528\u7740\u5230\u5904\u90fd\u662f\u95ee\u9898\u3002</p> <p>\u4e00\u4f1a\u662f\u786c\u76d8\u8bfb\u5199\u592a\u6162\uff0c\u4e00\u4f1a\u662f\u5185\u5b58\u4e0d\u591f\u7528\uff0c\u4e00\u4f1a\u662f\u8f6f\u4ef6\u5305\u4f9d\u8d56\u4e0d\u591f\uff0c\u4e00\u4f1a\u53c8\u53d8\u6210\u8f93\u5165\u6cd5\u542f\u52a8\u4e0d\u4e86\u4e86</p> <p>\u5df2\u7ecf\u6ca1\u90a3\u4e2a\u65f6\u95f4\u6298\u817e\u4e86\uff0c\u53d7\u4e0d\u4e86\u4e86\uff0c\u8fd8\u662f\u7528 Windows \u5f97\u4e86\u3002</p> <p>EarthMessenger \u865a\u62df\u673a\u90aa\u6559\u5bb3\u4eba\u4e0d\u6d45\uff0c\u6211\u4eec\u8981\u575a\u51b3\u62b5\u5236\uff01</p>"}, {"location": "blog/2023-05-12/", "title": "\u6d45\u8c08\u585e\uff0c\u539f\u4e4b\u95f4\u7684\u5173\u7cfb\u548c\u533a\u522b", "text": "<p>\u738b\u56fd\u4e4b\u6cea\u51fa\u4e86\uff0c\u795e\u4f5c\u3002</p> <p>\u6211\u89c9\u5f97\u6ca1\u6cd5\u7528\u4efb\u4f55\u8bcd\u8bed\u5f62\u5bb9\u5b83\u7684\u725b\u903c\u3002</p> <p>\u6211\u8fd8\u6ca1\u51fa\u521d\u59cb\u7a7a\u5c9b\uff0c\u4f46\u662f\u5df2\u7ecf\u6709\u5f88\u591a\u5730\u65b9\u8ba9\u6211\u611f\u52a8\uff0c\u719f\u6089\u4e86\u3002</p> <p>\u9996\u5148\u662f\u5f00\u59cb\u548c Zelda \u7684\u90a3\u4e00\u6bb5\u5bf9\u8bdd\uff0c\u6211\u597d\u6fc0\u52a8\uff0c\u8fd8\u4ee5\u4e3a\u80fd\u548c Zelda \u4e00\u8d77\u6218\u6597\uff08\u5e26\u4e00\u4e2a\u62d6\u6cb9\u74f6\uff08\u4e0d\u662f\uff09\uff09\u3002</p> <p>\u7ed3\u679c\u516c\u4e3b\u4e0d\u51fa\u610f\u5916\u7684\u51fa\u610f\u5916\u4e86\u3002\u5bc4\u3002</p> <p>\u82cf\u9192\u540e\u98de\u4e0b\u53bb\u7684\u90a3\u4e00\u523b\uff0c\u97f3\u4e50\u54cd\u8d77\uff0c\u524d\u534a\u79d2\uff0c\u719f\u6089\u7684\u8c03\u5b50\uff0c\u540e\u534a\u79d2\uff0c\u58f0\u8c03\uff0c\u5408\u594f\u4e00\u8d77\uff0c\u592a\u9707\u64bc\u4e86\uff0c\u9e21\u76ae\u7599\u7629\u90fd\u8d77\u6765\u4e86\u3002</p> <p>\u7136\u540e\u662f\u795e\u4e4b\u624b\u7684\u90a3\u51e0\u4e2a\u529f\u80fd\uff0c\u9884\u6599\u5efa\u9020\u548c\u878d\u5408\uff0c\u6211\u8349\uff0c\u592a\u597d\u73a9\u4e86\u3002</p> <p>\u7136\u540e\u85af\u6761\u76f4\u64ad\u7684\u65f6\u5019\u76f4\u63a5\u8d70\u94a2\u4e1d\uff0c\u5f00\u76fe\u8df3\uff0c\u7b11\u6b7b\u4e86\u3002</p> <p>\u6211\u662f\u771f\u7684\u6ca1\u60f3\u5230\u5440\u54c8\u54c8\u8fd8\u80fd\u88ab\u6211\u7684\u624b\u79fb\u52a8\uff0c\u6211\u6d4b\uff0c\u6211\u80fd\u79fb\u52a8 npc \u4e86\u662f\u5427\uff0c\u90a3\u4e48\u4f9d\u76d6\u961f\u5c31\uff0c\u6709\u7684\u53d7\u4e86/cy</p> <p>\u7136\u540e\u719f\u6089\u7684\u5f15\u5bfc\u673a\u5236\uff0c\u8001\u4efb\u4f3c\u4e4e\u662f\uff0c\u5c06\u5927\u5bb6\u90fd\u8ba4\u4e3a\u662f\u6ca1\u73a9\u8fc7\u91ce\u708a\u7684\u73a9\u5bb6\u6765\u505a\u5f15\u5bfc\u7684\uff0c\u554a\u554a\uff0c\u8fd9\u79cd\u6000\u5ff5\u7684\u611f\u89c9\u3002</p> <p>\u62ff\u8d70\u9b54\u50cf\u7684\u70e4\u82f9\u679c\u7684\u65f6\u5019\u8bf4\u7684\u8bdd\u4e5f\u7279\u522b\u6709\u610f\u601d\uff01\uff01\uff01\u65e2\u719f\u6089\uff08\u548c\u8001\u56fd\u738b\u5f53\u65f6\u53f0\u5730\u4e0a\u7684\u53f0\u8bcd\u7279\u522b\u50cf\uff09\u53c8\u964c\u751f\uff08\u793c\u8c8c\uff09\u3002</p> <p>\u7136\u540e\u80f6\u56ca\u548c\u62bd\u86cb\u673a\uff0c\u8fd8\u6709\u90a3\u4e2a\uff0c\u53d1\u5149\u8349\uff0c\u6b66\u5668\u53e0\u52a0\uff0c\u6bd4\u5b9e\u673a\u6f14\u793a\u8fd8\u60ca\u8273\uff0c\u6211\u8349\uff0c\u8001\u4efb\uff0c\u4e0d\u6127\u662f\u4f60\uff0c\u8fd9\u4e48\u559c\u6b22\u85cf\u3002</p> <p>\u94a2\u4e1d\u5c45\u7136\u8fd8\u80fd\u7528\u76fe\u6765\u6ed1\u884c\uff1f\uff1f\uff1f\uff1f\u592a jb \u5e05\u4e86\uff01\uff01\uff01\uff01</p> <p>\u89e3\u795e\u5e99\u7684\u65f6\u5019\uff0c\u8001\u4efb\u6ca1\u6709\u8fc7\u591a\u7684\u8bf4\u660e\u8fd9\u4e2a\u600e\u4e48\u64cd\u4f5c\uff0c\u800c\u662f\u7ed9\u4f60\u4e1c\u897f\u653e\u5728\u90a3\u91cc\uff0c\u8ba9\u4f60\u81ea\u5df1\u60f3\u529e\u6cd5\uff0c\u6211\u89c9\u5f97\u8fd9\u624d\u662f\uff0c\u5f00\u653e\u4e16\u754c\u6e38\u620f\u7684\u771f\u8c1b\u3002</p> <p>\u8fd9\u624d\u6709\uff0c\u201c\u5f00\u653e\u7684\u611f\u89c9\u201d\uff0clink \u7684\u89d2\u8272\u5219\u66f4\u52a0\u4e30\u6ee1\uff0c\u4ed6\u786e\u786e\u5b9e\u5b9e\uff0c\u662f\u6211\u4eec\u548c\u6d77\u62c9\u9c81\u4e16\u754c\u7684 link \u554a\u3002</p> <p>\u7136\u540e\u5c31\u662f\uff0c\u90a3\u4e2a\u55b7\u706b\u5668\uff0c\u6211\u8349\uff0c\u592a\u597d\u73a9\u4e86\u3002</p> <p>\u4e16\u754c\u4e0a\u600e\u4e48\u4f1a\u6709\uff0c\u8fd9\u4e48\u597d\u73a9\u7684\u6e38\u620f\uff01\uff01\uff01\uff01\uff01\u8fd9\u91cc\u53ea\u662f\u65b0\u624b\u6751\u554a\uff0c\u6211\u89c9\u5f97\u90fd\u591f\u6211\u73a9\u4e00\u4e24\u4e2a\u6708\u4e86\uff01\uff01\uff01</p> <p>\u522b\u8bf4\u5730\u56fe\u8fd8\u6269\u5927\uff0c\u8fd8\u5206\u4e86\u4e0a\u4e2d\u4e0b\u4e09\u5c42\uff0c\u6211\u7684\u5988\u5440\uff0c\u8fd9\u6e38\u620f 2000 \u4e70\u6211\u89c9\u5f97\u4efb\u5929\u5802\u90fd\u4e8f\u3002</p> <p>\u540e\u7eed\u7684\u4e5f\u8bb8\u4f1a\u7ee7\u7eed\u53d1\uff0c\u7b49\u6211\u4f53\u9a8c\u66f4\u591a\u4e86\u518d\u8bf4\uff01\uff01\uff01</p> <p>\u7b49\u5361\u5e26\u5230\u4e86\uff0c\u5982\u679c\u6709\u670b\u53cb\u60f3\u73a9\uff0c\u53ef\u4ee5\u6765\u627e\u6211\uff01\u6211\u628a NS \u501f\u7ed9\u4f60\uff01\uff01\u6700\u8fd1\u8981\u51c6\u5907\u8003\u8bd5\u6240\u4ee5\u4e0d\u7528 ns\uff01</p> <p>\u7136\u540e\u6211\u4eec\u56de\u5230\u6807\u9898\u3002</p> <p>\u6211\u6ca1\u73a9\u8fc7\u539f\uff0c\u6240\u4ee5\u8bc4\u4ef7\u4e5f\u8bb8\u4e0d\u662f\u5f88\u5ba2\u89c2\uff0c\u5f88\u62b1\u6b49\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u9644\u8fd1\u516b\u4e2a\u5bdd\u5ba4\u56db\u5341\u516b\u4e2a\u4eba\uff0c\u73a9\u6e38\u620f\u7684\u56db\u5341\u4e8c\u4e2a\u4eba\u91cc\u9762\u56db\u5341\u4e00\u4e2a\u73a9\u539f\uff0c\u53e6\u4e00\u4e2a\u662f\u6211/kx</p> <p>\u6240\u4ee5\u4ed6\u4eec\u804a\u5929\u7684\u65f6\u5019\uff0c\u6211\u4e5f\u80fd\u6709\u4e9b\u4e86\u89e3\u3002</p> <p>\u6211\u89c9\u5f97\u539f\u795e\u5927\u6982\u662f\uff0c\u4fa7\u91cd\u4e8e\u62bd\u5361\uff0c\u62bd\u60f3\u8981\u7684\u89d2\u8272\uff0c\u517b\u89d2\u8272\uff0c\u7136\u540e\u809d\uff0c\u4e50\u8da3\u4e3b\u8981\u662f\u5728\u8fd9\u90e8\u5206\u4e0a\u9762\u3002</p> <p>\u585e\u5c14\u8fbe\uff0c\u66f4\u4fa7\u91cd\u4e8e\u5267\u60c5\uff0c\u6e38\u620f\u7cfb\u7edf\uff0c\u73a9\u6cd5\u7b49\u65b9\u9762\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u63a5\u89e6\u4f1a\u611f\u5230\u7279\u522b\u9707\u64bc\uff0c\u52a0\u4e0a\u8bb8\u591a\u7ec6\u8282\uff0c\u4ed6\u603b\u662f\u80fd\uff0c\u4e0d\u66f4\u65b0\uff0c\u4e0d\u7528 DLC\uff0c\u8ba9\u4f60\u53d1\u73b0\u65b0\u7684\u4e1c\u897f\uff0c\u65b0\u7684\u73a9\u6cd5\u3002</p> <p>\u5f88\u559c\u6b22\u585e\u5c14\u8fbe\u73a9\u5bb6\u7684\u4e00\u53e5\u8bdd\uff1a\u201c\u6211\u8349\uff0c\u539f\u6765\u8fd8\u80fd\u8fd9\u6837\u554a\u201d\uff0c\u5c31\u662f\u8fd9\u6837\u7684\u8fc7\u7a0b\uff0c\u66f4\u5438\u5f15\u6211\u4e00\u70b9\uff08\u6211\u73a9\u4e0d\u6765\u62bd\u5361\u6e38\u620f\uff08\u6ca1\u94b1\u6ca1\u809d/ll\uff09\uff09\u3002</p> <p>\u841d\u535c\u9752\u83dc\uff0c\u5404\u6709\u6240\u7231\u561b\uff0c\u53ea\u662f\u4e5f\u8bb8\u6ca1\u6cd5\u63a5\u53d7\u5bf9\u65b9\u7f62\u4e86\uff0c\u90a3\u5c31\u5c0a\u91cd\u5c31\u597d\u4e86\uff0c\u611f\u89c9\u9a82\u6218\u7eaf\u5c5e\uff0c\u81ea\u5351\u7684\u5931\u8d25\u8005\u5bfb\u627e\u4f18\u8d8a\u611f\u8df3\u811a\uff1f</p> <p>\u6211\u89c9\u5f97\u6709\u8fd9\u70b9\u65f6\u95f4\u4e0d\u5982\u591a\u5199\u70b9\u9898\u6216\u8005\u591a\u6253\u6253\u6e38\u620f\u3002</p>"}, {"location": "blog/2023-05-13/", "title": "\u6700\u9ad8\u6307\u793a", "text": "<p>\u5c71\u4e1c A \u961f\u961f\u957f\u50ac\u5575\u83cc\u7684\u6700\u9ad8\u6307\u793a\uff1ahttps://www.luogu.com.cn/blog/80614/zi-ran-yi-chu-jiu-shi-ge-la-ji</p> <p>\u5c71\u4e1c B \u961f\u961f\u957f\u60d8\u4f0a\u59c6\u7684\u6700\u9ad8\u6307\u793a\uff1ahttps://www.luogu.com.cn/blog/FrozaFerrari/wo-fou-kuai-shi-yong-set</p>"}, {"location": "blog/2023-05-14/", "title": "\u6d45\u8bb0\u7f51\u7ad9\u5b57\u4f53\u914d\u7f6e\u76f8\u5173\u95ee\u9898", "text": "<p>\u9996\u5148\u795d\u5927\u5bb6 5.14 \u604b\u604b\u65e5\u5feb\u4e50\uff01</p> <p>\u8fd9\u5e94\u8be5\u662f\u6211\u8fc7\u7684\u7b2c\u4e09\u4e2a\u604b\u604b\u65e5\u4e86\uff1f</p> <p>\u7b2c\u4e00\u4e2a\u604b\u604b\u65e5\uff0c2021 \u5e74\uff0c\u6211\u521d\u4e8c\uff0c\u8003\u5b8c\u4e86\u76f4\u5347\u8003\u8bd5\u7684\u6700\u540e\u4e00\u95e8\uff0c\u5fc3\u60c5\u8212\u5766\u7684\u8d70\u51fa\u4e86\u8003\u573a\uff0c\u5f00\u6000\u5927\u7b11\uff1a\u201c\u6211\u8f88\u5c82\u662f\u84ec\u84bf\u4eba\uff01\"\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u4e2a\u8f66\u4e07\u7684\u9893\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u604b\u604b\u65e5\uff0c2022 \u5e74\uff0c\u6211\u521d\u4e09\uff0c\u5728\u5f00\u5fc3\u7684\u5b66\u4e60\u9ad8\u7ef4\u524d\u7f00\u548c FWT \u72b6\u7269\uff0c\u5e76\u5728\u5bb6\u6253\u65f7\u91ce\u4e4b\u606f</p> <p>\u7b2c\u4e09\u4e2a\u604b\u604b\u65e5\uff0c2023 \u5e74\u3002\u6211\u9ad8\u4e00\uff0c\u6b63\u5728\u4e0d\u614c\u4e0d\u5fd9\u7684\u51c6\u5907\u8003\u8bd5\uff0c\u5199\u9898\uff0c\u6253 maimai\uff0c\u987a\u4fbf\u7b49\u6211\u7684\u738b\u56fd\u4e4b\u6cea\u5361\u5e26\u3002</p> <p>\u4eca\u5929\u4e00\u65f6\u5174\u8d77\uff0c\u6253\u7b97\u628a\u7f51\u7ad9\u5b57\u4f53\u7684\u95ee\u9898\u5f7b\u5e95\u89e3\u51b3\u3002</p> <p>\u6211\u4e4b\u524d\u914d\u7f6e\u7684\u65f6\u5019\u5c31\u662f\uff0c\u6309\u7167 mkdocs-material \u5b98\u7f51\u7684\u6307\u793a\uff0c\u914d\u4e86 <code>mkdocs.yml</code> \u91cc\u7684\u8fd9\u90e8\u5206\uff1a</p> <pre><code>theme:\nfont:\ntext: Roboto Slab\ncode: Consolas\n</code></pre> <p>\u7136\u540e\u53d1\u73b0\u8fd9\u4e1c\u897f\u8c03\u7528\u7684\u662f Google fonts\uff0c\u56fd\u5185\u4f1a\u52a0\u8f7d\u4e0d\u51fa\u6765\uff0c\u5e76\u4e14\u62d6\u7d2f\u7f51\u7ad9\u542f\u52a8\u901f\u5ea6\u3002</p> <p>\u6240\u4ee5\u6211\u53c8\u7528\u4e86\u8fd9\u4e2a\uff1a</p> <pre><code>extra_css:\n- stylesheets/extra.css\n</code></pre> <p>\u5176\u4e2d <code>stylesheets/</code> \u5728 <code>docs</code> \u76ee\u5f55\u4e0b\u3002</p> <p>\u7136\u540e\u5199\u4e0b\u4e86\u8fd9\u6837\u7684\u5185\u5bb9\uff1a</p> <pre><code>@font-face {\nfont-family: \"Consolas\", \"Cambria\", \"Roboto Slab\", \"Lucida Console\", \"Times New Roman\";\nsrc: \"\";\n}\n:root {\n--md-text-font: \"Cambria\";\n--md-code-font: \"Consolas\";\n}\n</code></pre> <p>\u5f53\u65f6\u4e0d\u592a\u660e\u767d\u8fd9\u4e2a\u4e1c\u897f\u7684\u8fd0\u4f5c\u539f\u7406\uff0c\u53ea\u662f\u731c\u5230\u8fd9\u4e1c\u897f\u5e94\u8be5\u662f\u5f15\u7528\u7684\u672c\u5730\u5b57\u4f53\uff0c\u6240\u4ee5\u6211\u5c31\u68c0\u67e5\u4e86\u4ee5\u4e0b windows \u9ed8\u8ba4\u7684\u5b57\u4f53\u91cc\u6709\u4e48\u6709\u5408\u9002\u7684 Serif \u5b57\u4f53\uff0c\u5c31\u627e\u5230\u4e86 Cambria\u3002</p> <p>\u7136\u540e\u5c06\u5c31\u7740\u7528\u4e86\u4e00\u6bb5\u65f6\u95f4\u3002</p> <p>\u540e\u9762\u53d1\u73b0 Linux \u4e0a\u6ca1\u6709\u8fd9\u4e2a\u5b57\u4f53\uff08\u4f5c\u4e3a\u9ed8\u8ba4\uff09\uff0c\u6240\u4ee5\u6211\u5c31\u5728\u60f3\u600e\u4e48\u641e\u3002</p> <p>\u60f3\u8d77\u4e86\u4e4b\u524d\u770b\u5230\u8fc7\u6709\u5927\u4f6c\u641e\u8fc7 <code>fonts.google.com</code> \u7684\u53cd\u4ee3 <code>fonts.loli.net</code>\uff0c\u4e8e\u662f\u60f3\u5230\u5728 css \u91cc\u5f15\u7528\u8fd9\u4e2a\u53cd\u4ee3\u670d\u52a1\u3002</p> <p>\u67e5\u8be2\u4e86\u4e00\u756a\u4e4b\u540e\u52a0\u5165\u4e86\u8fd9\u4e2a\u90e8\u5206\uff1a</p> <pre><code>&lt;style&gt;\n@import url('https://fonts.loli.net/css2?family=Fira+Code:wght@300;400;500;600;700&amp;family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&amp;family=Roboto+Slab:wght@100;200;300;400;500;600;700;800;900&amp;display=swap');\n&lt;/style&gt;\n</code></pre> <p>\u7136\u800c\u5728 <code>.root</code> \u5f53\u4e2d\u4fee\u6539\u5b57\u4f53\u4e4b\u540e\uff0c\u5b57\u4f53\u4ecd\u7136\u6ca1\u6709\u663e\u793a\u3002</p> <p>\u5c1d\u8bd5\u4e86\u5f88\u4e45\u4e4b\u540e\u53ea\u80fd\u653e\u5f03\uff0c\u56e0\u4e3a\u6211\u5f00 F12 \u7ffb\u4e86\u4ee5\u4e0b\u751f\u6210\u7684\u7f51\u9875\u7684\u6e90\u7801\uff0c\u53d1\u73b0 <code>fonts.loli.net</code> \u6839\u672c\u5c31\u6ca1\u6709\u88ab\u8c03\u7528\uff0c\u7559\u5728\u90a3\u91cc\u7684 <code>fonts.googleapi.com</code> \u91cc\u7684 <code>css</code> \u6587\u4ef6\u662f\u7a7a\u7684\u3002</p> <p>\u8bc1\u660e\u5f15\u7528\u5931\u8d25\u4e86\u3002</p> <p>\u540e\u9762\u7ffb mkdocs-material \u7684 issue \u7684\u65f6\u5019\u53d1\u73b0\uff0c\u597d\u50cf\u522b\u4eba\u7684\u76ee\u5f55\u91cc\uff0c\u90fd\u76f4\u63a5\u628a\u5b57\u4f53\u6587\u4ef6\u653e\u8fdb\u53bb\u4e86\uff01</p> <p>\u6211\u662f\u4e0d\u662f\u61a8ber\u3002</p> <p>\u4e8e\u662f\u5feb\u9a6c\u52a0\u97ad\u4e0b\u8f7d\u4e86\u9700\u8981\u7684\u5b57\u4f53\u6587\u4ef6\uff0c\u653e\u5230 <code>extra.css</code> \u7684\u540c\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u5f15\u7528\uff1a</p> <pre><code>/* author : black_trees */\n\n@font-face {\nfont-family: \"Merriweather\", serif;\nsrc: url('./fonts/Merriweather-Light.ttf') format('truetype');\nurl('./fonts/Merriweather-LightItalic.ttf') format('truetype');\nurl('./fonts/Merriweather-Black.ttf') format('truetype');\nurl('./fonts/Merriweather-BlackItalic.ttf') format('truetype');\nurl('./fonts/Merriweather-Bold.ttf') format('truetype');\nurl('./fonts/Merriweather-BoldItalic.ttf') format('truetype');\nurl('./fonts/Merriweather-Regular.ttf') format('truetype');\nfont-weight: normal;\nfont-style: normal;\n}\n:root {\n--md-text-font: \"Merriweather\";\n}\n</code></pre> <p>\u8fd9\u6837\u5c1d\u8bd5\uff0c\u7136\u800c\u8fd8\u662f\u6ca1\u6709\u663e\u793a\uff0c\u600e\u4e48\u56de\u4e8b\u5462\u3002</p> <p>\u89c2\u5bdf\u4e86\u4e00\u4f1a\u522b\u4eba\u7684\u914d\u7f6e\u6587\u4ef6\u4e4b\u540e\uff0c\u53d1\u73b0 src \u540e\u9762\u5e94\u8be5\u662f\u9017\u53f7\uff0c\u6211\u6d4b\uff0c\u6211\u600e\u4e48\u8fd9\u4e48\u50bb\u3002</p> <p>\u52a0\u4e0a\u4e4b\u540e\uff0c\u52a0\u8f7d\uff0c\u773c\u524d\u4e00\u4eae\uff0c\u597d\u4e86\uff01\uff01\uff01\uff01\uff01</p> <p>\u4e8e\u662f\u5174\u594b\u7684\u628a\u4e4b\u524d\u90fd\u6ca1\u60f3\u8fc7\u8981\u52a0\u8fdb\u53bb\u7684 <code>Hermit</code> \u4e5f\u653e\u8fdb\u53bb\u4e86\u3002</p> <pre><code>/* author : black_trees */\n\n@font-face {\nfont-family: \"Merriweather\", serif;\nsrc: url('./fonts/Merriweather-Light.ttf') format('truetype'),\nurl('./fonts/Merriweather-LightItalic.ttf') format('truetype'),\nurl('./fonts/Merriweather-Black.ttf') format('truetype'),\nurl('./fonts/Merriweather-BlackItalic.ttf') format('truetype'),\nurl('./fonts/Merriweather-Bold.ttf') format('truetype'),\nurl('./fonts/Merriweather-BoldItalic.ttf') format('truetype'),\nurl('./fonts/Merriweather-Regular.ttf') format('truetype');\nfont-weight: normal;\nfont-style: normal;\n\nfont-family: \"Hermit\", monospace;\nsrc: url('./fonts/Hermit-Bold.otf') format('opentype'),\nurl('./fonts/Hermit-BoldItalic.otf') format('opentype'),\nurl('./fonts/Hermit-Light.otf') format('opentype'),\nurl('./fonts/Hermit-LightItalic.otf') format('opentype'),\nurl('./fonts/Hermit-Regular.otf') format('opentype'),\nurl('./fonts/Hermit-RegularItalic.otf') format('opentype');\nfont-weight: normal;\nfont-style: normal;\n}\n:root {\n--md-text-font: \"Merriweather\";\n--md-code-font: \"Hermit\";\n}\n</code></pre> <p>\u7f51\u7ad9\u5c31\u53d8\u6210\u4e86\u73b0\u5728\u7684\u6837\u5b50\u3002</p> <p>\u6211\u731c\uff0c\u8fd9\u4e2a\u7684\u539f\u7406\u662f\uff0chtml \u91cc\u9762\u5f15\u7528 css \u7684\u6587\u4ef6\uff0c\u7136\u540e css \u7684 <code>@import</code> \u53ef\u4ee5\u5f15\u7528\u522b\u7684 css\uff0csrc \u5c31\u662f\u76f4\u63a5\u5f15\u7528\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5b57\u4f53\u6587\u4ef6\u3002</p> <p>\u7136\u540e\u7f51\u9875\u52a0\u8f7d\u7684\u65f6\u5019\uff0c\u4e00\u5c42\u5c42\u8c03\u7528\uff0c\u5b57\u4f53\u81ea\u7136\u5c31\u663e\u793a\u6210\u529f\u4e86\uff0c\u9017\u53f7\u6253\u6210\u5206\u53f7\u5c31\u8ba9\u5b57\u4f53\u53ea\u6709 Light \u90a3\u90e8\u5206\u52a0\u8f7d\u4e86\uff0c\u6ca1\u52a0\u8f7d\u5b8c\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u5b57\u4f53\u5168\u540d\u662f\u6ca1\u6cd5\u5f15\u7528\u7684\uff01\u3002</p> <p>upd: \u5230\u5b66\u6821\u4e4b\u540e\u53d1\u73b0\u53c8\u4e0d\u884c\u4e86\uff0c\u8fd8\u662f\u53ea\u6709\u672c\u5730\u6709\u8fd9\u4e2a\u5b57\u4f53\u624d\u884c\u3002</p> <p>\u4e8e\u662f\u6211\u6c14\u6025\u8d25\u574f\uff0c\u7ffb\u4e86\u4e0b OI-wiki \u7684 <code>mkdocs.yml</code>\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u4ed6\u4eec\u5728 font \u540d\u5b57\u5916\u9762\u52a0\u4e86\u5355\u5f15\u53f7\u3002</p> <p>\u6211\u6d4b\uff0c\u6211\u8bd5\u4e86\u4e00\u4e0b\u597d\u50cf\u5c31\u884c\u4e86\u3002</p> <p>md.</p>"}, {"location": "blog/2023-05-24/", "title": "\u4f18\u5316 Vim \u7f16\u8f91\u5927\u6587\u4ef6\u7684\u901f\u5ea6", "text": "<p>\u5927\u6982\u662f\u51e0\u4e2a\u6708\u4ee5\u524d\uff0c\u6682\u65f6\u653e\u5f03\u4e86 Vim \u7684\u4f7f\u7528\uff0c\u8f6c\u7528 Vscode \u4e86\u3002</p> <p>\u6700\u5927\u7684\u95ee\u9898\u662f\u5b83\u7f16\u8f91\u5de8\u5927\u7684 Markdown \u6587\u4ef6\u7684\u65f6\u5019\uff0cINSERT \u6a21\u5f0f\u4e0b\u4f1a\u7279\u522b\u5361\u3002</p> <p>\u5f53\u65f6\u6ca1\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u540e\u6765\u91cd\u65b0\u7528\u4e0a\u7684\u65f6\u5019\u731c\u6d4b\u662f\u63d2\u4ef6\u7684\u95ee\u9898\uff0c\u4e8e\u662f\u5378\u8f7d\u4e86\u4e0d\u5c11\u4e0d\u5fc5\u8981\u7684\u63d2\u4ef6\uff0c\u6bd4\u5982 YCM\u3002</p> <p>\u7136\u540e\u7981\u7528\u4e86 <code>vim-auto-popmenu</code>\uff0c\u5c31\u597d\u591a\u4e86\u3002</p> <p>\u4f46\u662f\u8fd9\u6bb5\u65f6\u95f4\u53c8\u51fa\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\uff08\u6700\u8fd1\u5728\u5199\u6811\u5206\u6cbb\uff0c\u6587\u4ef6\u5dee\u4e0d\u591a\u6709 50KB \u4e86\uff0c1000 \u884c\u5de6\u53f3\uff09\u6240\u4ee5\u8fdb\u884c\u6392\u67e5\u3002</p> <p>\u7136\u540e\u534a\u5929\u8fd8\u662f\u6ca1\u6709\u6536\u83b7\u3002</p> <p>\u4f46\u662f\u53d1\u73b0\uff0c\u4f3c\u4e4e\u53ea\u6709 Markdown \u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u7684\u95ee\u9898\uff0ccpp 5000 \u884c\u5c41\u4e8b\u6ca1\u6709\u3002</p> <p>\u7136\u540e\u60f3\u8d77\u6765\u6211\u6bcf\u6b21\u6253\u5f00 Markdown \u6587\u4ef6\u90fd\u4f1a <code>zR</code> \u4e00\u4e0b\u6253\u5f00\u6298\u53e0\uff0c\u800c\u4e14\u6709\u65f6\u5019 INSERT \u6a21\u5f0f\u5199\u5b8c\u5207\u56de NORMAL \u7acb\u9a6c\u5c31\u7ed9\u6211\u6298\u53e0\u4e86\u3002</p> <p>\u6211\u731c\u6d4b\u662f\u4e0d\u662f\u6298\u53e0\u7684\u8ba1\u7b97\u5bfc\u81f4\u4e86\u6027\u80fd\u7684\u5360\u7528\uff0c\u641c\u7d22\u4e00\u4e0b\u53d1\u73b0\u679c\u7136\u5982\u6b64\uff0c\u95ee\u9898\u51fa\u5728 <code>foldmethod=syntax</code>\uff0c\u56e0\u4e3a\u6211\u4e0b\u8f7d\u4e86 <code>vim-Markdown</code> \u7684\u63d2\u4ef6\uff0c\u8fd9\u4e2a\u63d2\u4ef6\u4f1a\u6269\u5c55 Markdown \u7684\u8bed\u6cd5\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u9700\u8981\u6309\u7167\u8bed\u6cd5\u6298\u53e0\u7684\u5730\u65b9\u589e\u591a\uff0c\u6070\u597d\u6211\u5199\u6cd5\u6bd4\u8f83\u9002\u5e94\u8fd9\u6837\u7684\u8fc7\u7a0b\uff0c\u4e8e\u662f\u4e4e\uff0c\u5c31\u5bc4\u6389\u4e86\u3002</p> <p>\u9042\u5c06 <code>foldmethod</code> \u6539\u4e3a <code>marker</code>\uff0c\u95ee\u9898\u89e3\u51b3\u3002</p> <p>\u6240\u4ee5\u6709\u53ef\u80fd\u4e4b\u524d\u4e5f\u4e0d\u662f <code>vim-auto-popmenu</code> \u7684\u9505\uff0c\u73b0\u5728\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u8fd9\u4e2a\u63d2\u4ef6\u4e86!</p>"}, {"location": "blog/2023-05-31/", "title": "Esperanto", "text": "<p>Saluton, mia amiko!</p> <p>\u5f88\u62b1\u6b49\u603b\u662f\u628a\u9c9c\u82b1\u5199\u6210\u56de\u5fc6\u7684\u5f62\u5f0f\uff0c\u50cf\u4e0a\u4e00\u7bc7\u9c9c\u82b1\u4e00\u6837\u7684\u4f5c\u54c1\u4e0d\u662f\u523b\u610f\u80fd\u5199\u51fa\u6765\u7684\u3002</p> <p>\u5f88\u65e9\u4e4b\u524d\u5728\u4e00\u4e2a oi \u4ea4\u6d41\u7fa4\u91cc\u9047\u5230\u8fc7\u4e00\u4f4d esperantisto\u3002</p> <p>\u5f53\u65f6\u4e86\u89e3\u8fc7 Esperanto \u4e4b\u540e\u840c\u751f\u4e86\u60f3\u8981\u5b66\u4e60\u7684\u6b32\u671b\u3002</p> <p>\u4e5f\u7ffb\u8fc7 reto.cn \u5c1d\u8bd5\u5b66\u4e60\uff0c\u4f46\u662f\u5f53\u65f6\u4f3c\u4e4e\u53ea\u662f\u4e09\u5206\u949f\u70ed\u5ea6\u5427\uff0c\u542c\u5230 Rr \u7684\u5927\u820c\u97f3\u5c31\u653e\u5f03\u4e86\u3002</p> <p>\u90a3\u4e2a\u65f6\u5019\u5904\u5728\u4e00\u79cd\uff0c\u627e\u4e0d\u7740\u52aa\u529b\u7684\u65b9\u5411\u7684\u65f6\u671f\u3002</p> <p>\u4e0d\u5982\u8bf4\u662f\u5bf9\u591a\u5df4\u80fa\u7684\u8ffd\u6c42\u4e0a\u763e\u4e86\uff0c\u5fcd\u53d7\u4e0d\u4e86\u83b7\u53d6\u5185\u5561\u80bd\u6240\u9700\u4ed8\u51fa\u7684\u8fc7\u7a0b\u3002</p> <p>\u5176\u5b9e\u8eab\u8fb9\u7684\u5f88\u591a\u4eba\u65e9\u5c31\u5f00\u59cb\u8fd9\u4e2a\u8fc7\u7a0b\u4e86\uff0c\u6211\u4e00\u76f4\u5904\u5728\u4e00\u4e2a\u534a\u53ea\u811a\u8fdb\u53bb\uff0c\u534a\u53ea\u811a\u51fa\u6765\u7684\u72b6\u51b5\u4e0b\u3002</p> <p>\u5f53\u65f6\u6ca1\u600e\u4e48\u8ba4\u8bc6\u5230\u3002</p> <p>\u8fd9\u6bb5\u65f6\u95f4\u80fd\u7b97\u662f\u5f00\u609f\u4e86\u4e00\u70b9\u3002</p> <p>\u8bdd\u9898\u504f\u4e86\uff0c\u6211\u5199\u7684\u4e1c\u897f\u603b\u662f\u4f1a\u626f\u5230\u8fd9\u4e0a\u9762\u3002</p> <p>\u600e\u4e48\u8bf4\uff0c\u6211\u73b0\u5728\u5f88\u6709\u8868\u8fbe\u7684\u6b32\u671b\uff0c\u4f46\u662f\u6211\u5e76\u4e0d\u662f\u5f88\u60f3\u6253\u5b57\u3002</p> <p>\u53ef\u4ee5\u662f\u56e0\u4e3a\u5361\u987f\u7684\u8f93\u5165\u6cd5\uff0c\u8fc7\u9ad8\u7684\u5ba4\u5185\u6e29\u5ea6\uff0c\u5f88\u70e6\u5fc3\u554a\u3002</p> <p>\u5c1d\u8bd5\u7740\u9610\u8ff0\u6211\u7684\u53d8\u5316\uff0c\u5c3d\u529b\u7684\u60f3\u6293\u4f4f\u6bcf\u4e2a\u7ec6\u8282\u3002</p> <p>\u5176\u5b9e\u8fd9\u6837\u4e5f\u6ca1\u5565\u5fc5\u8981\uff0c\u7ec8\u7a76\u8fd8\u662f\u4f1a\u5fd8\u5374\u7684\uff0c\u8bf4\u662f\u56de\u5fc6\uff0c\u4f46\u662f\u54ea\u91cc\u6709\u65f6\u95f4\u770b\u5462\uff1f</p> <p>\u968f\u4fbf\u8bb0\u5f55\u4e00\u70b9\u65e0\u5173\u7d27\u8981\u7684\u7ec6\u8282\u5c31\u597d\u4e86\u3002</p> <p>\u6211\u5f88\u5e86\u5e78\u6211\u7684\u8bf4\u8bdd\u65b9\u5f0f\u8f6c\u53d8\u4e86\uff0c\u73b0\u5728\u6211\u4f1a\u5148\u8ba9\u8bdd\u8fc7\u8fc7\u5976\u5b50\uff0c\u800c\u4e0d\u662f\u8131\u53e3\u800c\u51fa\u3002</p> <p>\u4ece\u8eab\u8fb9\u4eba\u7684\u53cd\u5e94\u4e5f\u80fd\u770b\u51fa\u6765\u5427\uff0c\u6211\u51cf\u5c11\u4e86\u5bf9\u5916\u754c\u7684\u8f93\u51fa\uff0c\u8bf4\u7684\u8bdd\u5f88\u591a\u65f6\u5019\u4e0d\u5e26\u4efb\u4f55\u60c5\u611f\u3002</p> <p>\u7c7b\u4f3c\u56db\u5bab\u8f89\u591c\u7684\u4e09\u91cd\u9762\u5177\uff0c\u6211\u5185\u5fc3\u91cc\u4f3c\u4e4e\u4e5f\u6709\u7740\u4e09\u91cd\u5b58\u5728\u3002</p> <p>\u6682\u4e14\u79f0\u4ee5\u4e0a\u4e3a \\(\\texttt{Miller, Enonya}\\) \u548c  \u597d\u4e86\u3002</p> <p>\u81f3\u5c11\u6211\u4eec\u4e00\u81f4\u540c\u610f\u8ba9  \u6765\u4e3b\u5bfc\u884c\u52a8\uff0c\u53e6\u5916\u4e24\u4f4d\uff0c\u5728\u5fc5\u8981\u7684\u65f6\u5019\u518d\u51fa\u73b0\u3002</p> <p>\u4e8b\u5b9e\u662f\uff0c\u6211\u786e\u5b9e\u505a\u51fa\u4e86\u4e0d\u5c11\u6539\u53d8\uff0c\u867d\u7136\u4e0d\u5927\uff0c\u4f46\u662f\u76f8\u6bd4\u4e8e\u4ee5\u524d\u7684\u6211\u6765\u8bf4\u5df2\u7ecf\u5f88\u5389\u5bb3\u4e86\u3002</p> <p>\u867d\u7136\u8fd8\u662f\u4e0d\u592a\u591f\uff0c\u4f46\u662f\u6211\u603b\u89c9\u5f97\u90a3\u4e00\u5929\u662f\u4f1a\u5230\u6765\u7684\uff0c\u800c\u4e14\u5f88\u5feb\u3002</p> <p>Agu nun, suferi profite, subtenu la plej bazajn bezonojn unue, kaj poste faru pliajn konsiderojn.</p> <p>\u8fd9\u5c31\u662f\u6211\u73b0\u5728\u5e94\u5f53\u9075\u5b88\u7684\u6559\u6761\u3002</p> <p>Mi estas komencanto, do povas esti sintaksa eraro.</p> <p>\u597d\u4e86\u597d\u4e86\uff0c\u6211\u4eec\u804a\u70b9\u6709\u610f\u601d\u7684\u3002</p> <p>\u5927\u820c\u97f3\u8fd9\u4e1c\u897f\uff0c\u6628\u665a\u4e0a\u7ec3\u4e86\u534a\u4e2a\u5c0f\u65f6\u90fd\u6ca1\u548b\u53d1\u51fa\u6765\u3002</p> <p>\u53ea\u5728\u8ddf\u8bfb patrino \u7684\u65f6\u5019\u7a81\u7136\u53d1\u51fa\u4e86\u5f88\u50cf\u7684\u58f0\u97f3\uff0c\u5f88\u9ad8\u5174\uff0c\u7136\u540e\u4e4b\u540e\u518d\u4e5f\u6ca1\u53d1\u51fa\u8fc7\u3002</p> <p>\u4eca\u5929\u4e2d\u5348\u5403\u5b8c\u996d\u548c\u670b\u53cb\u6563\u6b65\uff0c\u5c1d\u8bd5\u7528\u4e16\u754c\u8bed\u548c\u4ed6\u4ea4\u6d41\uff0c\u56e0\u4e3a\u89c9\u5f97 Vi \u4e0d\u592a\u597d\uff0c\u6240\u4ee5\u6362\u6210\u4e86 sinjoro, \u7136\u540e\u7a81\u7136\u5c31\u5f39\u8d77\u6765\u4e86\uff0c\u5f88\u81ea\u7136\u3002</p> <p>\u5176\u5b9e\u4e5f\u4e0d\u662f\u90a3\u4e48\u96be\u561b\uff0c\u81ea\u7136\u4e00\u70b9\u5c31\u597d\u3002</p> <p>\u6700\u8fd1\u548c\u5de6\u624b\u8fb9\u7684\u5316\u5b66\u7ade\u8d5b\u5c0f\u59d0\u59d0\u804a\u4e86\u5f88\u591a\u4e1c\u897f\u3002</p> <p>\u611f\u89c9\u5f88\u53ef\u7231\u554a\uff01\u5c31\u662f\u90a3\u79cd\u5e26\u70b9\u6175\u61d2\u7684\uff0c\u6bd4\u8f83\u5e73\u548c\u7684\u58f0\u7ebf\u3002</p> <p>\u3010\u5220\u9664\u3011</p> <p>\u800c\u4e14\u4eba\u5f88\u597d\uff1f\u627e\u5979\u95ee\u5316\u5b66\u9898\u90fd\u662f\u5f88\u8010\u5fc3\u7684\u89e3\u7b54\uff1f</p> <p>\u6211\u4ee5\u524d\u4ee5\u4e3a\u5979\u662f\u51e0\u4e4e\u5b8c\u7f8e\u7684\u5b58\u5728\uff0c\u7ed3\u679c\u4e0d\u662f\u554a\uff0c\u539f\u6765\u5979\u4e5f\u4f1a\u6709\u82e6\u607c\u7684\u65f6\u5019\u3002</p> <p>\u53cd\u6b63\u6211\u7b97\u662f\u5c3d\u6211\u6240\u80fd\u5e2e\u4e86\u5e2e\u5979\uff1f</p> <p>\u5177\u4f53\u4ea4\u6d41\u5185\u5bb9\u4e0d\u900f\u9732\u4e86\uff0c\u4e5f\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u5c31\u7b97\u662f\u6b63\u5e38\u7684\u804a\u5929\uff0c\u65e5\u5e38\u7684\uff0c\u6709\u7684\u6ca1\u7684\u3002</p> <p>\u6bd4\u5982\u5410\u69fd\u8001\u5e08\u8bb2\u592a\u5feb\u6ca1\u65f6\u95f4\u505a\u7b14\u8bb0\uff0c\u5410\u69fd\u8eab\u8fb9\u5377\u738b\u5377\u7684\u592a\u731b\uff0c\u5bf9\u6210\u7ee9\u7684\u7126\u8651\uff0c\u56e0\u4e3a\u5ba4\u53cb\u8981\u804a\u5929\uff0c\u6ca1\u6cd5\u597d\u597d\u7761\u89c9/\u505a\u4e8b\u60c5\u4e4b\u7c7b\u7684\u3002</p> <p>\u5979\u7b97\u662f\u552f\u4e00\u4f1a\u548c\u6211\u7ecf\u5e38\u53cc\u5411\u8f93\u51fa\u7684\u670b\u53cb\u5427\uff0c\u800c\u4e14\u6211\u611f\u89c9\u5f88\u804a\u5f97\u6765\uff01</p> <p>\u6211\u8ba4\u8bc6\u7684\u670b\u53cb\uff08True Friend\uff09\u5927\u591a\u53ea\u662f\uff0c\u6211\u5411\u4ed6\u4eec\u8f93\u51fa\uff0c\u7136\u540e\u4ed6\u4eec\u7ed9\u4e88\u6211\u56de\u5e94\uff0c\u5f88\u5c11\u4f1a\u6709\u4ed6\u4eec\u6765\u627e\u6211\u8f93\u51fa\u7684\u65f6\u5019\uff1f</p> <p>\u867d\u7136\u8fd9\u6837\u4e5f\u6ca1\u4ec0\u4e48\u4e0d\u597d\uff0c\u4f46\u6211\u603b\u89c9\u5f97\u7f3a\u4e86\u4ec0\u4e48\uff0c\u7f3a\u5c11\u4e00\u79cd\u88ab\u4f9d\u8d56\u611f\u3002</p> <p>\u6211\u867d\u7136\u5f88\u8106\u5f31\uff0c\u4f46\u662f\u6211\u4e5f\u5e0c\u671b\u6709\u4eba\u80fd\u4f9d\u8d56\u6211\u3002</p> <p>\u8fd9\u6837\u7684\u4f9d\u8d56\u4e0d\u662f\u5e7f\u4e49\u7684\u4f9d\u8d56\uff0c\u53ea\u662f\u8bf4\uff0c\u80fd\u6709\u76f8\u4e92\u4ea4\u6d41\uff0c\u5982\u679c\u6709\u4ea4\u6d41\u80fd\u8ba9\u5fc3\u60c5\u66f4\u597d\u4e4b\u7c7b\u7684\u3002</p> <p>\u6709\u8fd9\u6837\u4e00\u4e2a\u670b\u53cb\u633a\u597d\u7684\uff0c\u7b97\u662f\u5e73\u8861\u4e86\uff0c\u81f3\u4e8e\u3010\u5220\u9664\u3011\u3002</p> <p>\u8fd8\u6709\u4e03\u5929\u9ad8\u8003\u4e86\uff0c\u867d\u7136\u6211\u4e0d\u9ad8\u8003\uff0c\u4f46\u662f\u6211\u90a3\u4e09\u5929\u4e5f\u8981\u671f\u672b\uff0c\u5f88\u795e\u5947\u3002</p> <p>\u5377\u4e00\u5377\u5427\uff0c\u867d\u7136\u8fd9\u51e0\u5929\u6ca1\u548b\u5377\u6210\uff0c\u4f46\u662f\u6bd4\u4e4b\u524d\u597d\u591a\u4e86\u3002</p> <p>\u603b\u5f52\u8fd8\u662f\u6709\u70b9\u8fdb\u6b65\u7684\u3002</p> <p>\u611f\u89c9\u4e16\u754c\u8bed\u8bf4\u7740\u4e5f\u5f88\u53ef\u7231\u5462\u3002</p> <p>\u6700\u8fd1\u6362\u4e86\u5934\u50cf\uff0c\u4e0d\u77e5\u9053\u5176\u4ed6\u4eba\u4f1a\u600e\u4e48\u770b\u3002</p> <p>\u53cd\u6b63\u6211\u89c9\u5f97\uff0c\u5982\u679c Enonya \u662f\u90a3\u53ea\u7c89\u8272\u7684 devil \u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u5f88\u7b26\u5408  \u7684\u5f62\u8c61\u3002</p> <p>\u7ec6\u5fc3\u7684\u4eba\u5e94\u8be5\u6ce8\u610f\u5230\u4e86\uff0c\u8fd8\u6709\u4e00\u534a\uff0c\u90a3\u4e48\u662f\u8c01\u5462\u3002</p> <p>\u56de\u5bdd\u5ba4 VP \u573a ARC \u597d\u4e86\uff0c\u7f13\u89e3\u4e00\u4e0b\u6700\u8fd1\u8fd9\u6bb5\u65f6\u95f4 OI \u7684\u7126\u8651\u3002</p> <p>\u011cis, sinjoro/sinjorino!</p>"}, {"location": "blog/2023-06-13/", "title": "\u6d45\u8c08\u5bf9\u865a\u65e0\u4e3b\u4e49\u7684\u7406\u89e3", "text": "<p>\u4e5f\u8bb8\u4f1a\u6709\u5176\u4ed6\u8bc4\u8bba\u7684\u5730\u65b9\uff1a</p> <ul> <li>Luogu</li> <li>Github</li> <li>Zhihu</li> </ul> <p>\u524d\u6bb5\u65f6\u95f4\u770b\u5230\u4e86\u4e00\u7bc7\u6f2b\u753b\uff1a</p> <p></p> <p>\u7ecf\u8fc7\u4e00\u4e9b\u641c\u7d22\u4e4b\u540e\u5927\u6982\u4e86\u89e3\u5230\u8fd9\u53ea\u53ea\u60f3\u8981\u6574\u70b9\u85af\u6761\u7684\u6d77\u9e25\u5c5e\u4e8e\uff0c\u5178\u578b\u7684\u865a\u65e0\u4e3b\u4e49\u8005\u3002</p> <p>\u5012\u4e0d\u662f\u56e0\u4e3a\u611f\u5174\u8da3\u4ec0\u4e48\u7684\uff0c\u7eaf\u7cb9\u6709\u79cd\u88ab\u547c\u5524\u7684\u611f\u89c9\uff0c\u6240\u4ee5\u518d\u8fdb\u4e00\u6b65\u4e86\u89e3\u4e86\u4e00\u4e9b\u5185\u5bb9\u3002</p> <p>\u76ee\u524d\u624b\u4e0a\u5728\u505a\u7684\u9898\u4e5f\u6ca1\u5565\u601d\u8def\uff0c\u4f46\u662f\u4e5f\u4e0d\u592a\u60f3\u770b\u9898\u89e3\u4ec0\u4e48\u7684\uff0c\u9042\u5229\u7528\u4f11\u606f\u65f6\u95f4\u6d45\u6d45\u8bb0\u4e0b\u4e9b\u4ec0\u4e48\u3002</p> <p>\u7ffb\u770b\u4e86\u8fd9\u4e00\u7bc7\u56de\u7b54\u3002</p> <p>\u6709\u4e0d\u5c11\u5730\u65b9\u90fd\u662f\uff0c\u6211\u66fe\u7ecf\u601d\u8003\u8fc7\u7684\u5185\u5bb9\uff0c\u4e3a\u4e86\u8282\u7701\u65f6\u95f4\u622a\u53d6\u4e00\u90e8\u5206\uff1a</p> <p>\u6709\u9a6c\u514b\u601d\u4e3b\u4e49\u8005\u6559\u6211\u505a\u4e8b\uff0c\u8bf4\u5b9e\u8df5\u662f\u771f\u7406\u3002\u6211\u60f3\uff0c\u8fd9\u6837\u7684\u7406\u60f3\u4e5f\u662f\u633a\u597d\u7684\uff0c\u4e50\u89c2\uff0c\u79ef\u6781\uff0c\u6602\u626c\u7684\u4e00\u751f\u3002</p> <p>\u6709\u5b58\u5728\u4e3b\u4e49\u8005\u6559\u6211\u9009\u62e9\uff0c\u8bf4\u4eba\u751f\u800c\u81ea\u7531\u3002\u6211\u60f3\uff0c\u8fd9\u4e5f\u662f\u5f88\u597d\u7684\uff0c\u660e\u667a\uff0c\u65e0\u6094\uff0c\u6e05\u9192\u7684\u4e00\u751f\u3002</p> <p>\u8fd8\u6709\u4e9b\u53ef\u7231\u7684\u5973\u5b69\u5b50\u4eec\u6559\u6211\u6c89\u6d78\u4e0e\u65e5\u5e38\u7684\u5e78\u798f\u4e2d\uff0c\u8bf4\u53ca\u65f6\u884c\u4e50\u3002\u6211\u60f3\uff0c\u8fd9\u4e5f\u662f\u597d\u7684\uff0c\u76f2\u76ee\uff0c\u65e0\u77e5\uff0c\u5374\u65e0\u53ef\u8fa9\u9a73\u7684\u4e00\u751f\u3002</p> <p>\u5c3c\u91c7\u8bf4\u8981\u9ad8\u8e48\u7740\u524d\u884c\uff0c\u6211\u8bf4\u4f0a\u5361\u6d1b\u65af\u98de\u4e0d\u8fdc\u3002\u6728\u5fc3\u8bf4\u827a\u672f\u662f\u4e00\u5207\uff0c\u6211\u8bf4\u827a\u672f\u662f\u906e\u7f9e\u5e03\u3002\u4e00\u5207\u4e00\u5207\u7684\u7406\u60f3\uff0c\u5728\u6211\u770b\u6765\u5c31\u662f\u6b3a\u9a97\uff1b</p> <p>\u6b63\u56e0\u4e3a\u73b0\u5b9e\u662f\u8fd9\u822c\u6b8b\u9177\uff0c\u4eba\u4eec\u624d\u7ed9\u81ea\u5df1\u5efa\u9020\u4e86\u5982\u6b64\u8f89\u714c\u7684\u7ae5\u8bdd\u3002</p> <p>\u8fd9\u4e9b\u610f\u4e49\uff0c\u8fd9\u4e9b\u7ae5\u8bdd\u5b58\u5728\u8fd9\u4e16\u4e0a\u4e00\u5929\uff0c\u4eba\u5c31\u4e00\u5929\u4e5f\u4e0d\u80fd\u6e05\u9192\u3002\u56e0\u4e3a\u68a6\u5c31\u662f\u68a6\uff0c\u4e00\u76f4\u505a\u68a6\u7684\u4eba\u65e9\u665a\u5206\u4e0d\u6e05\u73b0\u5b9e\uff0c\u4ee5\u4e3a\u4ed6\u4e0d\u4f1a\u6b7b\u53bb\uff0c\u75db\u82e6\u4e5f\u662f\u4e0d\u5e94\u8be5\u7684\u3002</p> <p>\u4f46\u662f\u8981\u6e05\u9192\u4f55\u7528\u5462\u3002\u6211\u8fd8\u662f\u5173\u6389\u624b\u673a\uff0c\u65e9\u65e9\u7761\u89c9\u7f62\u3002</p> <p>\u8fd8\u6709\u8fd9\u4e2a\uff1alink</p> <p>\u865a\u65e0\u4e3b\u4e49\u554a\uff0c \u5c31\u662f\u80fd\u8ba9\u4e00\u4e2a\u4eba\u611f\u53d7\u5230\u5feb\u4e50\u7684\u6761\u4ef6, \u53d8\u5f97\u8d8a\u6765\u8d8a\u9ad8 \u8d8a\u6765\u8d8a\u6df1,\u9010\u6e10\u4ece\u7269\u8d28\u4e2d\u8131\u79bb\u51fa\u6765\u3001\u4e00\u76f4\u4e0a\u5347\uff0c\u98de\u8fbe\u4eba\u751f\u610f\u4e49\u7684\u5c42\u9762.</p> <p>\u5f53\u5b83\u4e00\u76f4\u4e00\u76f4\u5730\u53d1\u5c55\uff0c\u4e00\u76f4\u5230\u4eba\u751f\u610f\u4e49\u4ee5\u4e0a \u5230\u8fde\u4f60\u4e5f\u529d\u8bf4\u4e0d\u4e86\u4f60\u81ea\u5df1\u7684\u65f6\u5019.</p> <p>\u8fd9\u65f6\u5019\u4f60\u5c31\u53d8\u6210\u865a\u65e0\u4e3b\u4e49\uff0c\u4f60\u5c31\u53ef\u4ee5\u629b\u5f03\u4e00\u5207\uff0c\u53bb\u6b7b\u4e86. \u6210\u4e3a\u4eba\u4eec\u773c\u4e2d\u7684 \u201c\u6291\u90c1\u75c7\u201d\u3002 (\u6b64\u4e3a\u4e0d\u4e86\u89e3\u865a\u65e0\u4e3b\u4e49\u7684\u4eba\u4eec\u5bf9\u865a\u65e0\u4e3b\u4e49\u7684\u8bef\u5224\uff0c\u5bb9\u6613\u5c06\u4ed6\u4eec\u8bef\u5224\u6210\u6291\u90c1\u75c7\u3002)</p> <p>\u201c\u53cd\u6b63\u8fd9\u4e2a\u4e16\u754c\u4e5f\u6ca1\u4ec0\u4e48\u53ef\u7f8e\u597d\u7684\u3002\u90a3\u6211\u53c8\u4e3a\u4ec0\u4e48\u8981\u6d3b\u7740\u5462\u3002\u201d </p> <p>\u4f60\u628a\u81ea\u5df1\u7684\u7075\u9b42\u4ece\u8fd9\u4e2a\u73b0\u5b9e\u4e16\u754c\u4e2d\u62bd\u79bb\u51fa\u53bb\uff0c\u53d8\u5f97\u4e27\u6c14\uff0c\u53d8\u5f97\u6291\u90c1\u3002\uff08\u6216\u8bb8\uff09\u4f60\u4f1a\u9009\u62e9\u6c38\u8fdc\u5730\u79bb\u5f00\uff0c\u4e14\u4e1d\u6beb\u4e0d\u540e\u6094\u3002\u4e0d\u8fc7\uff0c \u8fd9\u95ee\u9898\u4e5f\u4e0d\u662f\u6ca1\u6709\u89e3\u6cd5\u3002</p> <p>\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u6211  \u662f  \u5206  \u5272  \u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014</p> <p>\u89e3\u94c3\u8fd8\u987b\u7cfb\u94c3\u4eba\u3002 \u865a\u65e0\u4e3b\u4e49\u672c\u8eab\u5c31\u662f\u7a81\u7834\u53e3\u3002</p> <p>\u4e07\u7269\u7686\u6709\u4e24\u9762\uff0c\u7269\u6781\u5fc5\u53cd\u3002</p> <p>\u4efb\u4f55\u4e8b\u60c5\u90fd\u6ca1\u6709\u610f\u4e49\u4e5f\u610f\u5473\u7740\u4efb\u4f55\u4e8b\u60c5\u90fd\u53ef\u4ee5\u662f\u6709\u610f\u4e49\u7684\u3002</p> <p>\u8bfb\u5b8c\u8fd9\u4e9b\u4e4b\u540e\u7a81\u7136\u7ffb\u5230\u7b2c\u4e00\u7bc7\u56de\u7b54\u7684\u7b2c\u4e00\u4e2a\u8bc4\u8bba\uff1a</p> <p>\u4e00\u5927\u6bb5\u5e9f\u8bdd\uff0c\u6211\u559c\u6b22</p> <p>\u4ee5\u53ca\u4e0b\u9762\u8ddf\u7740\u7684\u53e6\u4e00\u4e2a\u8bc4\u8bba\uff1a</p> <p>\u770b\u4e86\u4e00\u534a\uff0c\u62c9\u4e0b\u6765\u770b\u8bc4\u8bba\u3002\u770b\u5230\u8fd9\u4e2a\u4e00\u4e0b\u51fb\u4e2d\u6211\u4e86\u3002\u50cf\u6781\u4e86\u6291\u90c1\u65f6\u6211\u6240\u60f3\u7684\u4e00\u5806\u5e9f\u8bdd\u3002\u4f46\u662f\u6211\u559c\u6b22</p> <p>\u56de\u60f3\u4e00\u4e0b\uff0c\u6211\u4e4b\u524d\u7684\u9c9c\u82b1\u4e0d\u662f\uff0c\u5927\u591a\u6570\u5145\u65a5\u7740\u8fd9\u6837\u7684\u5185\u5bb9\u5417\uff1f</p> <p>\u90a3\u4e48\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f</p> <p>\u6709\u4eba\u8bf4\u865a\u65e0\u4e3b\u4e49\u662f\u90c1\u90c1\u7684\u4e00\u79cd\u8868\u73b0\u65b9\u5f0f\uff0c\u56e0\u4e3a\u627e\u4e0d\u5230\u7b54\u6848\u6240\u4ee5\u9009\u62e9\u865a\u65e0\u5316\u3002</p> <p>\u7684\u786e\uff0c\u6211\u4ece\u5c0f\u65f6\u5019\u5f00\u59cb\u5c31\u4e00\u76f4\u60f3\u7740\u4e00\u4e2a\u95ee\u9898\uff1a</p> <p>\u6d3b\u7740\u7684\u610f\u4e49\u5230\u5e95\u662f\u4ec0\u4e48\uff1f</p> <p>\u65e2\u7136\u6211\u4eec\u4f5c\u4e3a\u4eba\u7c7b\uff0c\u5728\u5386\u53f2\u7684\u957f\u6cb3\u4e2d\u53ea\u662f\u6ca7\u6d77\u4e00\u7c9f\uff0c\u751a\u81f3\u4e0d\u4f1a\u88ab\u5173\u5fc3\uff0c\u90a3\u4e48\u5b58\u5728\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f</p> <p>\u5730\u7403\u4f1a\u6bc1\u706d\uff0c\u592a\u9633\u4f1a\u7206\u53d1\uff0c\u94f6\u6cb3\u4f1a\u574d\u7f29\uff0c\u5b87\u5b99\u4f1a\u51b7\u5374\uff0c\u90a3\u4e48\u5b87\u5b99\u4e3a\u4ec0\u4e48\u53c8\u4f1a\u5b58\u5728\uff1f\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f\u5b87\u5b99\u5b58\u5728\u7684\u4e4b\u524d\uff0c\u4ec0\u4e48\u53c8\u5b58\u5728\u5462\uff1f</p> <p>\u7269\u7406\u5b66\u5bb6\u8bf4\u5b87\u5b99\u7684\u5f00\u59cb\u662f\u6781\u5c0f\u7684\u4e00\u56e2\u3002</p> <p>\u90a3\u4e48 0s \u7684\u65f6\u5019\u3002\u5b87\u5b99\u662f\u8fd9\u6837\u7684\uff0c\u4f46\u662f\u4f60\u600e\u4e48\u80af\u5b9a\uff0c\u8fd9\u4e00\u65f6\u523b\u5c31\u662f 0s \u5462\uff1f\u5728\u8fd9\u4e4b\u524d\u6709\u4ec0\u4e48\u4e8b\u7269\u5b58\u5728\u5462\uff1f</p> <p>\u5982\u679c\u4f60\u544a\u8bc9\u6211\u6ca1\u6709\u4e1c\u897f\u5b58\u5728\uff0c\u90a3\u4e48\u6700\u521d\u7684\u5b58\u5728\u53c8\u56e0\u4ec0\u4e48\u800c\u5b58\u5728\uff1f\u6ca1\u6709\u5b58\u5728\u7684\u72b6\u6001\u672c\u8eab\u4e5f\u662f\u4e00\u79cd\u5b58\u5728\uff0c\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u6096\u8bba\u6216\u8005\u662f\u6587\u5b57\u6e38\u620f.</p> <p>\u6211\u60f3\u77e5\u9053\uff0c\u96be\u9053\u5b87\u5b99\u662f\u88ab\u4ec0\u4e48\u4e1c\u897f\u5305\u88f9\u8d77\u6765\u7684\u5417\uff1f</p> <p>\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u5b87\u5b99\u4e4b\u5916\u53c8\u662f\u4ec0\u4e48\uff1f</p> <p>\u4ece\u65f6\u95f4\u548c\u7a7a\u95f4\u4e0a\u90fd\u5b8c\u5168\u65e0\u6cd5\u5f97\u5230\u89e3\u7b54\uff0c\u8fd9\u4e2a\u4e16\u754c\u662f\u4ee5\u7a7a\u95f4\u548c\u65f6\u95f4\u7684\u5f62\u5f0f\u5b58\u5728\u7684\u3002</p> <p>\u90a3\u4e48\u4e16\u754c\u518d\u90a3\u4e4b\u524d\u7684\u786e\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u8fd9\u4e00\u5207\u53c8\u662f\u4ec0\u4e48\uff1f</p> <p>\u5230\u6b64\uff0c\u6211\u5df2\u7ecf\u65e0\u6cd5\u7528\u8a00\u8bed\u63cf\u8ff0\u6211\u7684\u95ee\u9898\u4e86\u3002</p> <p>\u6211\u7684\u7684\u786e\u786e\u611f\u53d7\u5230\u4e86\u6211\u7684\u5b58\u5728\uff0c\u4f46\u662f\u6bcf\u5f53\u6211\u60f3\u5230\u8fd9\u91cc\uff0c\u4e00\u6b21\u6b21\u8d28\u95ee\uff0c\u6700\u540e\u3002</p> <p>\u601d\u60f3\u90fd\u4f1a\u5316\u4f5c\u865a\u65e0\uff0c\u6211\u65e0\u6cd5\u89e3\u91ca\u8fd9\u79cd\u611f\u53d7\uff0c\u53ef\u80fd\u662f\u4e0d\u771f\u5b9e\u611f\u548c\u771f\u5b9e\u611f\u5b58\u5728\u7684\u5272\u88c2\u3002</p> <p>\u6216\u8005\u8bf4\u662f\u4e00\u79cd\u6df7\u6c8c\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u5c06\u5176\u5f52\u7ed3\u4e3a\u865a\u65e0\u3002</p> <p>\u8fd9\u4e0d\u662f\u89e3\u7b54\uff0c\u4f46\u662f\u662f\u76ee\u524d\u6700\u597d\u7684\u89e3\u7b54\uff0c\u4f46\u6211\u4e0d\u6ee1\u8db3\u4e8e\u6b64\u3002</p> <p>\u5f80\u5f80\uff0c\u6211\u8eab\u8fb9\u7684\u4eba\u4f1a\u544a\u8bc9\u6211\uff0c\u4f60\u60f3\u8fd9\u4e9b\u6709\u4ec0\u4e48\u7528\uff1f\u4e0d\u5982\u628a\u73b0\u5728\u7684\u4e8b\u60c5\u5148\u505a\u597d\uff0c\u6bd4\u5982\u505a\u4e00\u505a\u4f60\u7684\u9898\u3002</p> <p>\u5728\u6211\u7684\u8ba4\u8bc6\u91cc\uff0c\u6709\u5f88\u591a\u865a\u65e0\u4e3b\u4e49\u8005\u6700\u540e\u90fd\u9009\u62e9\u4e86\u8fd9\u79cd\u89e3\u51b3\u65b9\u5f0f\uff0c\u5728\u65e5\u5e38\u4e2d\u5c06\u5176\u6de1\u5fd8\u3002</p> <p>\u6211\u4e5f\u8fd9\u4e48\u5e72\u4e86\uff0c\u4f46\u662f\u6211\u603b\u662f\u4f1a\u60f3\u8d77\u6765\uff0c\u6211\u5f88\u60f3\u77e5\u9053\u95ee\u9898\u7684\u7b54\u6848\u3002</p> <p>\u5e94\u8be5\u6709\u4e0d\u5c11\u4eba\u4f1a\u8fd9\u4e48\u7406\u89e3\u6211\u73b0\u5728\u6240\u8bf4\u7684\uff1a</p> <ul> <li>\u4e0d\u5c31\u662f\uff0c\u4e0d\u60f3\u505a\u4e8b\u60c5\uff0c\u5077\u61d2\uff0c\u4e3a\u81ea\u5df1\u6478\u9c7c\u627e\u501f\u53e3\u5417\uff1f</li> <li>\u5173\u5fc3\u4e00\u4e2a\u4e0d\u53ef\u80fd\u5f97\u5230\u89e3\u7b54\u7684\u95ee\u9898\u6709\u5565\u7528\uff0c\u4f60\u73b0\u5b9e\u751f\u6d3b\u91cc\u90fd\u6210\u4ec0\u4e48\u6837\u4e86\uff1f\u4f60\u8fd9\u6837\u4f1a\u8ba9xx\u5931\u671b\u7684\u3002</li> <li>...</li> </ul> <p>\u5173\u6211\u9e1f\u4e8b\u3002</p> <p>\u6211\u4e0d\u5173\u5fc3\u8fd9\u4e9b\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u80fd\u5f97\u5230\u89e3\u7b54\u7684\u53ea\u6709\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u4eba\u751f\u7684\u610f\u4e49\u662f\u4ec0\u4e48\u3002</p> <p>\u5bf9\u6211\u6765\u8bf4\uff0c\u5c31\u662f\u5c1d\u8bd5\u89e3\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u60f3\u8981\u5f97\u5230\u81f3\u4e0a\u771f\u7406\uff0c\u8fd9\u662f\u6211\u7684\u8ffd\u6c42\u3002</p> <p>\u6211\u627f\u8ba4\u6211\u559c\u6b22\u8ba1\u7b97\u673a\uff0c\u7b97\u6cd5\u4e00\u7c7b\u7684\u4e1c\u897f\uff0c\u6216\u8005\u8bf4\u662f\uff0c\u5e94\u7528\u6570\u5b66\u3002</p> <p>\u4f46\u662f\u6211\u4e0d\u4e45\u524d\u610f\u8bc6\u5230\uff0c\u8fd9\u4e9b\u4e1c\u897f\u6700\u7ec8\u90fd\u662f\u4e3a\u4e86\u8ffd\u6c42\u771f\u7406\u800c\u670d\u52a1\u7684\u3002</p> <p>\u81f3\u5c11\u6211\u8ba4\u4e3a\uff0c\u7b97\u6cd5\uff0c\u6709\u673a\u4f1a\u8ba9\u6211\u66f4\u63a5\u8fd1\u771f\u7406\u4e00\u6b65\u3002</p> <p>\u6211\u4e0d\u662f\u8bf4\u7b97\u6cd5\u5bf9\u6211\u6765\u8bf4\u53ea\u662f\u5de5\u5177\uff0c\u89e3\u51b3\u95ee\u9898\u7684\u6210\u5c31\u611f\u4e5f\u4f1a\u8ba9\u6211\u6b23\u559c\uff0c\u7eaf\u7cb9\u7684\u4e3a\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u54e6\u4e0d\uff0c\u4f3c\u4e4e\u6db5\u76d6\u4e86\u201c\u80fd\u79bb\u7b54\u6848\u66f4\u8fdb\u4e00\u6b65\u201d\u7684\u559c\u60a6\uff0c\u4f46\u8bf7\u4f60\u76f8\u4fe1\u6211\uff0c\u6211\u4e5f\u4f1a\u559c\u6b22\u7b97\u6cd5\u672c\u8eab\u7684\uff0c\u6211\u4e5f\u5bf9\u5b83\u7cbe\u5999\u7684\u8bbe\u8ba1\u5f88\u7740\u8ff7\u3002</p> <p>\u4e0d\u7136\u4e3a\u4ec0\u4e48\u6211\u603b\u662f\u4f1a\u770b\u7740\u81ea\u5df1\u5199\u51fa\u7684\u4ee3\u7801\uff0c\u7279\u522b\u662f\u5341\u5206\u5de7\u5999\u7684\u9898\u76ee\u7684\u4ee3\u7801\uff0c\u53d1\u4e0a\u597d\u51e0\u5341\u5206\u949f\u7684\u5446\uff0c\u8111\u5b50\u91cc\u56de\u987e\u7740\u7b97\u6cd5\u7684\u8fc7\u7a0b\uff0c\u611f\u53f9\u81ea\u5df1\u771f\u662f\u5929\u624d\u5462\u3002</p> <p>\u865a\u65e0\u4e3b\u4e49\u8005\u5f80\u5f80\u90fd\u4f1a\u8c08\u5230\u897f\u897f\u5f17\u7684\u6545\u4e8b\uff1a</p> <p>\u660e\u660e\u77e5\u9053\u77f3\u5934\u63a8\u4e0a\u53bb\u5c31\u4f1a\u6389\u4e0b\u6765\uff0c\u4f46\u662f\u8fd8\u662f\u5f88\u5f00\u5fc3\u3002</p> <p>\u6211\u4e5f\u5f88\u5f00\u5fc3\uff0c\u6211\u77e5\u9053\u6211\u6b64\u751f\u5927\u6982\u7387\u5f97\u4e0d\u5230\u95ee\u9898\u7684\u7ed3\u679c\u3002</p> <p>\u65e0\u7403\u9e1f\u8c13\uff0c\u5982\u679c\u4ee5\u540e\u6709\u529e\u6cd5\u957f\u751f\u4e86\uff0c\u6211\u5c31\u6709\u66f4\u591a\u7684\u65f6\u95f4\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002</p> <p>\u601d\u8003\u5230\u4e86\uff0c\u628a\u8fd9\u4e2a\u771f\u7406\u5199\u4e0b\uff0c\u5efa\u9020\u8d77\u771f\u7406\u796d\u575b\u3002</p> <p>\u5f53\u7136\u66f4\u6709\u53ef\u80fd\u662f\u6211\u4e3b\u52a8\u8d70\u4e0a\u771f\u7406\u796d\u575b\u8d70\u5411\u6bc1\u706d\uff0c\u56e0\u4e3a\u610f\u4e49\u5df2\u7ecf\u8fbe\u5230\u4e86\u3002</p> <p>\u4e0d\u8fc7\u4f20\u6388\u771f\u7406\u7684\u8fc7\u7a0b\u4f3c\u4e4e\u4f1a\u5f88\u7f8e\u5999\u7684\u6837\u5b50\u3002</p> <p>\u8fd9\u5df2\u7ecf\u662f\u6211\u73b0\u5728\u6ca1\u5fc5\u8981\u60f3\u7684\u4e86\u3002</p> <p>\u5148\u60f3\u60f3\u773c\u4e0b\u7684\u9898\u76ee\u600e\u4e48\u505a\uff0c\u7136\u540e\u518d\u8bf4\u5427\u3002</p> <p>\u4f60\u770b\uff0c\u6211\u8fd8\u4e0d\u662f\u50cf\u5927\u591a\u6570\u865a\u65e0\u4e3b\u4e49\u8005\u4e00\u6837\uff0c\u6700\u540e\u9762\u5bf9\u73b0\u5b9e\u4e86\u3002</p> <p>\u4f46\u662f\u8fd9\u662f\u56e0\u4e3a\u6211\u610f\u8bc6\u5230\u4e86\u865a\u65e0\u7684\u539f\u56e0\uff0c\u6211\u60f3\u8981\u89e3\u51b3\u865a\u65e0\u3002</p> <p>\u5f53\u7136\u5f88\u6709\u53ef\u80fd\u6211\u5728\u524d\u8fdb\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5fd8\u6389\u6211\u672c\u6765\u7684\u76ee\u7684\uff0c\u8fd9\u5f88\u6b63\u5e38\u3002</p> <p>\u6211\u53ef\u80fd\u4f1a\u56e0\u4e3a\u5176\u4ed6\u7684\u5404\u79cd\u56e0\u7d20\uff0c\u5bb6\u4eba\uff0c\u670b\u53cb\uff0c\u4ec0\u4e48\u7684\u62c9\u56de\u53bb\uff0c\u56e0\u4e3a\u90a3\u5f88\u5e78\u798f\u3002</p> <p>\u5c31\u597d\u6bd4\u5927\u591a\u6570\u4eba\u4e0d\u80fd\u8fde\u7eed\u5de5\u4f5c 30 \u5929\u4e0d\u6478\u9c7c\u4e00\u6837\uff0c\u6211\u4e5f\u662f\u9700\u8981\u7f13\u89e3\u7684\u3002</p> <p>\u5f53\u7136\u7f13\u89e3\u8fc7\u5ea6\u4e86\u4e5f\u4f1a\u6709\u540e\u679c\uff0c\u6211\u4f1a\u79bb\u7b54\u6848\u66f4\u8fdc\u3002</p> <p>\u6ca1\u4e8b\uff0c\u56de\u6765\u770b\u770b\u5c31\u597d\u4e86\u3002</p> <p>\u5f53\u7136\uff0c\u6211\u7684\u610f\u601d\u4e0d\u662f\u8bf4\u5bb6\u4eba\u548c\u670b\u53cb\u662f\u6211\u7684\u5de5\u5177\uff0c\u6211\u4e0d\u8fd9\u4e48\u8ba4\u4e3a\u3002</p> <p>\u6211\u89c9\u5f97\u4ed6\u4eec\u65e2\u7136\u5e2e\u52a9\u4e86\u6211\uff0c\u6211\u4e5f\u8981\u5e2e\u52a9\u4ed6\u4eec\uff0c\u6211\u53c8\u4e0d\u662f\u51b7\u8840\u52a8\u7269\u3002</p> <p>\u6211\u6562\u8bf4\u6211\u7684\u4eb2\u60c5\u548c\u53cb\u60c5\u662f\u7edd\u5bf9\u771f\u5b9e\u4e0d\u5e26\u4efb\u4f55\u60c5\u611f\u7684\uff0c\u8bf7\u770b\u5230\u8fd9\u91cc\u7684\u5217\u4f4d\u4e0d\u8981\u5931\u671b\u3002</p> <p>\u6211\u53c8\u4e0d\u662f\u90a3\u79cd\u6cb9\u76d0\u4e0d\u8fdb\uff0c\u4e00\u5fc3\u53ea\u6709\u81ea\u5df1\u7684\u5229\u5df1\u4e3b\u4e49\u8005\u3002</p> <p>\u8fd9\u6bb5\u8bdd\u4e5f\u4e0d\u662f\u7eaf\u7cb9\u7684\u5b89\u6170\uff0c\u6211\u53ea\u662f\u60f3\u5230\u4ec0\u4e48\u8bf4\u4e86\u4ec0\u4e48\u3002\u4ee5\u9632\u6709\u4e9b\u522b\u6709\u7528\u5fc3\u7684\u5bb6\u4f19\u65ad\u7ae0\u53d6\u4e49\u7f62\u4e86\u3002</p> <p>\u5f53\u7136\u6211\u76f8\u4fe1\u6211\u7684\u7236\u4eb2\u548c\u6bcd\u4eb2\uff0c\u662f\u4e00\u5b9a\u80fd\u7406\u89e3\u6211\u7684\u60f3\u6cd5\u7684\uff0c\u4e5f\u80af\u5b9a\u80fd\u7406\u89e3\u6211\u60f3\u8981\u8868\u8fbe\u7684\u4e1c\u897f\uff0c\u6bd5\u7adf\u662f\u5bb6\u4eba\u554a\u3002</p> <p>\u6211\u7684\u8001\u5f1f\u7684\u8bdd\uff0c\u4ed6\u8fd8\u592a\u5c0f\u4e86\uff0c\u7b49\u4ed6\u4e5f\u6709\u7c7b\u4f3c\u7684\u7591\u95ee\u7684\u65f6\u5019\uff0c\u6211\u5f88\u597d\u5947\u4ed6\u7684\u60f3\u6cd5\uff0c\u4e0d\u8fc7\u8fd9\u4e5f\u8bb8\u8981\u7b49\u4e0a\u5341\u5e74\u4e86\u3002</p> <p>\u6ca1\u5173\u7cfb\u3002</p> <p>\u53e6\u5916\uff0c\u4e0d\u7ba1\u4f60\u662f\u8c01\uff0c\u6211\u5f88\u5e0c\u671b\u80fd\u542c\u5230\u4f60\u7684\u89c1\u89e3\uff0c\u6216\u8bb8\u6211\u4eec\u662f\u5fd7\u540c\u9053\u5408\u7684\u670b\u53cb\uff0c\u6216\u8005\u662f\u6301\u622a\u7136\u4e0d\u540c\u7684\u610f\u89c1\u7684\u5bf9\u624b\u3002</p> <p>\u6211\u90fd\u5f88\u6b22\u8fce\uff0c\u56e0\u4e3a\u4ed6\u4eba\u7406\u89e3\u6211\u6d3b\u7740\u4e0d\u7406\u89e3\u6211\uff0c\u548c\u6211\u5b8c\u5168\u65e0\u5173\u3002</p> <p>\u81f3\u5c11\u5728\u8fd9\u4e2a\u5c42\u9762\u4e0a\uff0c\u6211\u662f\u7edd\u5bf9\u72ec\u7acb\u7684\u4e2a\u4f53\uff0c\u4e0d\u548c\u4efb\u4f55\u4eba\u6709\u5173\u3002</p>"}, {"location": "blog/2023-06-14/", "title": "\u6211\u7684\u4e00\u4f4d\u524d\u8f88", "text": "<p>\u4eca\u5929\u4e2d\u5348\u5728\u98df\u5802\u5076\u9047\u4e86 w \u524d\u8f88\uff0c\u7528\u9c9c\u82b1\u7fa4\u7fa4\u53cb\u66f4\u719f\u77e5\u7684\u53eb\u6cd5\u662f\u738b\u54e5\u3002</p> <p>\u9042\u60f3\u8d77\u4e4b\u524d\u53d1\u73b0\u4e86\u4e00\u7bc7 w \u524d\u8f88\u7684\u9c9c\u82b1\uff0c\u4f46\u662f\u56e0\u4e3a\u8fd0\u6c14\u5f88\u597d\u62a2\u5230\u4e86\u6700\u540e\u7684\u591c\u5bb5\u5fd8\u6389\u4e86\u8fd9\u56de\u4e8b\u513f\u3002</p> <p>\u7b2c\u4e00\u904d\u8bfb\u5b8c\u6ca1\u6709\u5f88\u5927\u7684\u611f\u89e6\uff0c\u4f46\u662f\u7ffb\u9605\u4e86\u5176\u4ed6\u4eba\u7684\u9c9c\u82b1\u4e4b\u540e\uff0c\u603b\u611f\u89c9 w \u524d\u8f88\u7684\u5199\u4e0b\u7684\u6587\u5b57\u5e38\u5e38\u900f\u9732\u4e00\u79cd\u72ec\u7279\u7684\u6c14\u606f\u3002</p> <p>\u6211\u4e0d\u5426\u8ba4\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u98ce\u683c\uff0c\u4f46\u662f w \u7684\u6587\u5b57\u4f3c\u4e4e\u6709\u66f4\u80fd\u9707\u6151\u6211\u7684\u5e95\u8574\u3002</p> <p>\u4f5c\u4e3a w \u7684\u5b66\u5f1f\uff0c\u6211\u4e0d\u8bf4\u5f88\u4e86\u89e3 w\uff0c\u4f46\u8d77\u7801\u8fd8\u662f\u5e38\u5e38\u6709\u4ea4\u6d41\u7684\u3002</p> <p>\u6211\u8bb0\u5f97\u662f\u53bb\u5e74 2 \u6708\u4efd\u5f00\u59cb\uff0c\u4e00\u76f4\u5230\u7701\u9009\u7ed3\u675f\uff0c\u6211\u90fd\u7ecf\u5e38\u5728\u4e0b\u8bfe\u8fc7\u540e\u6da6\u5230\u529e\u516c\u5ba4\u53bb\uff0c\u542c w \u548c\u5176\u4ed6\u9ad8\u4e8c\u7684\u5b66\u957f\u95f2\u804a\u3002</p> <p>w \u548c\u4eba\u804a\u5929\u7684\u65f6\u5019\u7ed9\u6211\u4ee5\u4e00\u79cd\u54f2\u5b66\u5bb6\u548c\u6f14\u8bf4\u5bb6\u7279\u6709\u7684\u6c14\u8d28\u3002</p> <p>\u6211\u5f88\u96be\u5f62\u5bb9\u8fd9\u79cd\u611f\u53d7\uff0c\u5982\u679c\u8981\u5728\u5408\u9002\u4e00\u70b9\uff0c\u6211\u89c9\u5f97 w \u7ed9\u6211\u7684\u7b2c\u4e00\u5370\u8c61\u662f\u4e00\u4f4d\u5f88\u6df1\u9083\u7684\u7ec5\u58eb\u3002</p> <p>\u4f46\u7406\u6240\u5f53\u7136\u7684\uff0c\u6211\u5199\u4e0b\u8fd9\u4e9b\u4e4b\u540e\uff0c\u4ecd\u65e7\u89c9\u5f97\u4e0d\u5408\u9002\uff0c\u6211\u4ee5\u4e3a\u5177\u4f53\u7684\u4e8b\u4f8b\u6216\u8bb8\u6bd4\u62bd\u8c61\u7684\u6982\u5ff5\u66f4\u6709\u8bf4\u670d\u529b\u3002</p> <p>w \u524d\u8f88\u4f3c\u4e4e\u662f\uff0c\u4e0d\u5c5e\u4e8e\u6c89\u95f7\u7684\u7ade\u8d5b\u5708\u5b50\u7684\u4eba\uff0c\u4ed6\u548c\u6211\u804a\u8d77\u8fc7\u4ed6\u7684 bass\uff0c\u867d\u7136\u8fd8\u4e0d\u77e5\u9053\u5728\u90a3\u5bb6\u5546\u5e97\u91cc\u9759\u9759\u7684\u8eba\u7740\u3002</p> <p>\u6709\u6b21\u4ed6\u6284\u8d77\u65c1\u8fb9\u653e\u7740\u7684\u4e00\u67c4\u626b\u5e1a\uff0c\u505a\u51fa\u5728\u6211\u8fd9\u4e2a\u5916\u884c\u4eba\u9762\u524d\u770b\u8d77\u6765\u5341\u5206\u70ab\u9177\u7684\u59ff\u52bf\u3002</p> <p>w \u524d\u8f88\u6709\u4e00\u4e2a\u5dee\u4e0d\u591a\u4e94\u516d\u5757\u6307\u7532\u76d6\u5927\u7684 mp3\uff0c\u91cc\u9762\u4f3c\u4e4e\u662f\u6ee1\u6ee1\u5f53\u5f53\u7684\u586b\u5145\u7740\u6447\u6eda\u4e50\u66f2\u3002</p> <p>\u67d0\u5929\u6211\u9759\u6b65\u8e31\u8fdb\u529e\u516c\u5ba4\uff0c\u6253\u7b97\u5728 w \u524d\u8f88\u6ca1\u53d1\u73b0\u7684\u60c5\u51b5\u4e0b\u89c2\u5bdf\u540e\u518d\u79bb\u53bb\u3002</p> <p>\u7136\u800c\u6211\u8fd8\u6ca1\u8fc8\u6b65\uff0cw \u524d\u8f88\u5c31\u5df2\u7ecf\u4e0d\u7d27\u4e0d\u6162\u7684\u8f6c\u8eab\uff0c\u9762\u5e26\u5fae\u7b11\u5730\u95ee\u6211\u6709\u4f55\u8d35\u5e72\u3002</p> <p>\u60ca\u8bb6\u4e8e w \u524d\u8f88\u7684\u8b66\u89c9\u548c\u654f\u9510\uff0c\u6211\u4e0d\u7981\u629b\u51fa\u4e86\u95ee\u9898\uff0cw \u524d\u8f88\u7b11\u4e86\uff0c\u62ff\u8d77\u4ed6\u7684 mp3 \u7ed9\u6211\u770b\uff0c\u5341\u5206\u5f97\u610f\u7684\u8bf4\uff0c\u8fd9\u662f\u95f4\u8c0d\u536b\u661f\u3002</p> <p>\u6211\u4e00\u770b\uff0c\u7684\u786e\uff0c\u94f6\u955c\u4e00\u822c\u7684\u8868\u9762\u5c06 w \u80cc\u540e\u7684\u4e00\u5207\u5168\u90e8\u6536\u5bb9\uff0c\u4e0d\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u6839\u672c\u53d1\u73b0\u4e0d\u4e86\u8fd9\u79cd\u7528\u9014\u3002</p> <p>\u8fd9\u8ba9 w \u524d\u8f88\u7ed9\u4e86\u6211\u4e00\u79cd 007 \u4e00\u6837\u7684\u795e\u79d8\u611f\uff0c\u4ed6\u5728\u6211\u5fc3\u4e2d\u7684\u82f1\u5f0f\u7ec5\u58eb\u7684\u5f62\u8c61\u53c8\u575a\u56fa\u4e86\u8bb8\u591a\u3002</p> <p>\u66f4\u591a\u7684\u65f6\u5019\uff0cw \u524d\u8f88\u4f1a\u9676\u9189\u4e8e\u4ed6\u624b\u4e2d\u7684\u4e8b\u60c5\uff0c\u6709\u7684\u65f6\u5019\u662f\u795e\u5947\u7684\u4e66\u7c4d\uff0c\u6709\u7684\u65f6\u5019\u662f\u4e00\u4e9b\u6211\u5b8c\u5168\u4e0d\u4e86\u89e3\u7684\u4e8b\u7269\u3002</p> <p>\u6bcf\u5f53\u8fd9\u65f6\uff0c\u4e16\u754c\u597d\u50cf\u548c\u4ed6\u5df2\u7ecf\u5206\u79bb\uff0c\u6211\u770b\u5230\u7684\u53ea\u662f\u7269\u8d28\u4e0a\u7684 w \u524d\u8f88\uff0c\u800c\u4ed6\u65e9\u5df2\u53bb\u4ed6\u7684\u4e16\u754c\u9068\u6e38\u4e86\u3002</p> <p>\u5f53\u7136\uff0c\u4e0d\u6392\u9664\u662f\u8033\u673a\u91cc\u7684\u6447\u6eda\u5360\u636e\u4e86\u4ed6\u7684\u795e\u7ecf\uff0c\u4f7f\u6211\u4f20\u51fa\u7684\u5fae\u5c0f\u4fe1\u53f7\u88ab\u6df9\u6ca1\u5728\u97f3\u7b26\u7684\u6d77\u6d0b\u91cc.</p> <p>\u53bb\u5e74\u7701\u9009\u51fa\u699c\u65f6\u662f\u53ca\u5176\u620f\u5267\u7684\uff0c\u6211\u770b\u7740\u4ed6\u4eec\u6d4b\u7b97\u7740 w \u524d\u8f88\u7684\u5206\u6570\uff0c\u4f30\u7b97\u7740\u662f\u5426\u6709\u5361\u7ebf\u8fdb\u961f\u7684\u5e0c\u671b\u3002</p> <p>\u8fc7\u7a0b\u6211\u5df2\u7ecf\u8bb0\u4e0d\u6e05\u695a\u4e86\uff0c\u53ea\u8bb0\u5f97 w \u524d\u8f88\u770b\u8d77\u6765\u5f88\u4e50\u7684\u6837\u5b50\uff0c\u5c4f\u5e55\u4e0a\u653e\u7684\u4f3c\u4e4e\u662f\u5510\u4f2f\u864e\u70b9\u79cb\u9999\u91cc\u90a3\u4e2a\u7ecf\u5178\u6865\u6bb5\uff1a</p> <p>\u6211\u8fdb\u6765\u4e86\uff0c\u6211\u53c8\u51fa\u53bb\u4e86\uff0c\u6211\u53c8\u8fdb\u6765\u4e86\uff0c\u6211\u53c8\u51fa\u53bb\u4e86\u2026\u2026</p> <p>\u5f80\u540e\u6211\u5c31\u6ca1\u600e\u4e48\u89c1\u8fc7 w \u524d\u8f88\u4e86\uff0c\u76f4\u5230 NOIp2022 \u7684\u524d\u5915\uff0c\u6211\u624d\u5728\u719f\u6089\u7684\u4f4d\u7f6e\u770b\u5230\u719f\u6089\u7684\u8eab\u5f71\u3002</p> <p>\u6211\u8bb0\u5f97\u521a\u5230\u7ef5\u9633\u7684\u9152\u5e97\u7684\u65f6\u5019\uff0cw \u524d\u8f88\u72ec\u81ea\u6d88\u5931\u4e86\u4e8c\u5341\u591a\u5206\u949f\u3002</p> <p>\u7b49\u4ed6\u518d\u6b21\u51fa\u73b0\u7684\u65f6\u5019\uff0c\u4ed6\u8bf4\uff0c\u4ed6\u8dd1\u5230\u9152\u5e97\u7684\u5929\u53f0\u53bb\u4e86\uff0c\u800c\u4e14\u662f\u722c\u697c\u68af\u4e0a\u53bb\u7684\uff0c\u4e09\u5341\u4e00\u5c42\u697c\u3002</p> <p>\u6211\u5f88\u4f69\u670d w \u524d\u8f88\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u662f\u8fd9\u4efd\u51b3\u5fc3\uff1f\u8fd8\u662f\u7fa1\u6155\u8fd9\u79cd\u4e3a\u81ea\u5df1\u521b\u9020\u81ea\u7531\u7684\u7a7a\u95f4\u7684\u80fd\u529b\uff1f</p> <p>\u5176\u4ed6\u7684\u4e5f\u6682\u4e14\u56de\u5fc6\u4e0d\u4e0a\u4e86\uff0c\u53ea\u8bb0\u5f97\u5f53\u65f6\u548c\u591a\u54e5\u7684\u9762\u57fa\u8ba1\u5212\u56e0\u4e3a\u8ddd\u79bb\u5ba3\u544a\u7834\u4ea7\u3002</p> <p>\u518d\u540e\u6765\u6211\u5f97\u77e5 w \u524d\u8f88\u8981\u53bb\u5b66\u6587\u79d1\u7684\u6d88\u606f\u3002</p> <p>\u6709\u90a3\u4e48 1s\uff0c\u6211\u6781\u5ea6\u60ca\u6115\uff0c\u6211\u4e0d\u592a\u7406\u89e3\u4e3a\u4ec0\u4e48\u4f5c\u4e3a\u7ade\u8d5b\u751f\u7684 w \u8981\u5728\u9ad8\u4e8c\u7684\u8fd9\u4e2a\u65f6\u95f4\uff0c\u53bb\u4ece\u96f6\u5f00\u59cb\u5b66\u4e60\u6587\u79d1\u3002</p> <p>\u4f46\u662f 1s \u8fc7\u540e\uff0c\u5dee\u4e0d\u591a\u4e5f\u80fd\u7406\u89e3\u4e86\uff0c\u5728\u6211\u7684\u4e86\u89e3\u4e2d\uff0cw \u524d\u8f88\u662f\u8fd9\u6837\u7684\u4eba\uff0c\u5f88\u6709\u4e2a\u6027\uff0c\u4e5f\u80fd\u60f3\u660e\u767d\uff0c\u770b\u7684\u6e05\u695a\u81ea\u5df1\u60f3\u8981\u4ec0\u4e48\u3002</p> <p>\u6211\u5f88\u7fa1\u6155\u6709\u8fd9\u6837\u80fd\u529b\u7684\u4eba\uff0c\u66f4\u5408\u9002\u7684\u8bf4\u6cd5\u662f\u3010\u3011\u3002</p> <p>\u5176\u5b9e\u6211\u672c\u6765\u60f3\u5199\u70b9\u6211\u81ea\u5df1\u7684\u611f\u53d7\u7684\uff0c\u4e0d\u77e5\u4e3a\u4f55\u5c31\u5199\u5230\u4e86 w \u524d\u8f88\u7684\u4e8b\u60c5\uff0c\u4f3c\u4e4e\u53d8\u6210\u4e86\u5bf9 w \u524d\u8f88\u7684\u7b2c\u4e09\u4eba\u79f0\u523b\u753b\u3002</p> <p>\u8bf4\u5230\u5e95\uff0c\u524d\u8f88\u8fd8\u662f\u5e2e\u4e86\u6211\u5f88\u591a\uff0c\u6211\u4f3c\u4e4e\u4e5f\u6ca1\u5565\u53ef\u4ee5\u5e2e\u5230\u524d\u8f88\u7684\uff1f\u90a3\u4e48\u53ea\u80fd\u5199\u4e0b\u8fd9\u79cd\u6d41\u6c34\u8d26\u5f0f\u7684\uff0c\u65e0\u610f\u4e49\u7684\u6587\u5b57\u804a\u4ee5\u81ea\u6170\u4e86\u3002</p>"}, {"location": "blog/2023-06-17/", "title": "\u89c2 LOOPERS \u6709\u611f", "text": "<p>\u542b\u6709\u5267\u900f\u5185\u5bb9\uff01\u614e\u5165</p> <p>\u4eca\u5929\u5f00\u6d4f\u89c8\u5668\u7684\u65f6\u5019\u88ab\u63a8\u9001\u4e86\u4e00\u6761\uff1a\u300aLOOPERS\u300b\u5373\u5c06\u4e0a\u67b6 Steam</p> <p>\u6211\u8d77\u521d\u6ca1\u5565\u6253\u7b97\u7684\uff0c\u4f46\u662f\u770b\u5230\u753b\u98ce\u4e4b\u540e\u7a81\u7136\u5c31\u89c9\u5f97\uff0c\u6709\u5fc5\u8981\u770b\u770b\uff01</p> <p>\u56e0\u4e3a\u8fd9\u79cd\uff0c\u6709\u70b9\u6241\u5e73\u7684\uff0c\u6f2b\u753b\u98ce\u7684\uff0c\u98ce\u683c\u6211\u4e00\u76f4\u5f88\u559c\u6b22\uff0c\u6bd4\u5982\u6211\u5934\u50cf\u7684\u4f5c\u8005\u7684\u753b\u98ce\uff0c\u6216\u8005\u662f P \u7ad9\u4e0a\u4e00\u4f4d\u540d\u5b57\u542b\u6709\u201c\u4eac\u201d\u7684\u753b\u5e08\u7684\u753b\u98ce\u3002</p> <p>\u6240\u4ee5\u70b9\u8fdb\u53bb\u4e00\u770b\uff0c\u6b38\uff0c\u6211\u8349\uff0c\u89c6\u89c9\u5c0f\u8bf4\u554a\uff0c\u53ef\u4ee5\u73a9\u73a9\uff0c\u53cd\u6b63\u6700\u8fd1\u6bd4\u8f83\u70e6\u95f7\u3002</p> <p>\u6211\u7b97\u662f Gal \u5c0f\u767d\u4e86\uff0c\u6ca1\u600e\u4e48\u73a9\u8fc7 Galgame\uff0c\u53ea\u73a9\u8fc7\u4e00\u4e9b\u6bd4\u8f83\u77e5\u540d\u7684\uff0c\u6bd4\u5982\u67da\u5b50\u793e\u7684\u4f5c\u54c1\u3002</p> <p>\u7136\u540e clannad \u554a\uff0c\u590f\u6d1b\u7279\u554a\u8fd9\u4e9b\u90fd\u542c\u8bf4\u8fc7\uff0c\u4f46\u662f\u4e5f\u6ca1\u6df1\u5165\u4e86\u89e3\uff0cclannad \u662f\u56e0\u4e3a\u753b\u98ce\u4e0d\u592a\u4e60\u60ef\uff0c\u800c\u4e14\u542c\u8bf4\u6709\u5200\u5b50\uff08\uff09</p> <p>\u4e0b\u8f7d\u7684\u65f6\u5019\u770b\u4e86\u4e00\u4e0b\u6e38\u620f\u4f5c\u54c1\uff0c\u53d1\u73b0\u98ce\u8bc4\u6709\u4e9b\u5947\u602a\uff0c\u5927\u90e8\u5206\u8bc4\u8bba\u90fd\u5728\u63d0 Key \u793e\uff0c\u9f99\u9a91\u58eb07 \u8fd9\u51e0\u4e2a\u5173\u952e\u8bcd\u3002</p> <p>\u5f53\u6211\u53d1\u73b0\u9f99\u9a91\u58eb\u5c31\u662f clannad \u7684\u5267\u672c\u7684\u65f6\u5019\uff0c\u7a0d\u5fae\u6709\u70b9\u5bb3\u6015\uff0c\u6211\u6015\u6709\u5200\u5b50\u3002</p> <p>\u7136\u540e\u4e0d\u53ef\u907f\u514d\u7684\u53d1\u73b0\u4e86\u7f51\u4e0a\u6709\u4eba\u5728\u4e89\u5435\u7ed3\u5c40\u662f HE \u8fd8\u662f BE\uff0c\u5bfc\u81f4\u6211\u6709\u70b9\u5fd0\u5fd1\u3002</p> <p>\u6124\u6012\uff0c\u4e0b\u6b21\u5f00\u73a9\u4e4b\u524d\u7edd\u5bf9\u4e0d\u641c\u7d22\u4e86\u3002</p> <p>\u4f46\u662f\u5e8f\u7ae0\u7684 Mia \u7684\u58f0\u97f3\u76f4\u63a5\u7ed9\u6211\u5e72\u57ae\u4e86\uff0c\u6211\u8349\uff0c\u592a\u53ef\u7231\u4e86\u3002</p> <p>\u6240\u4ee5\u5c31\u4e0d\u7ba1\u4e86\uff0c\u76f4\u63a5\u5f00\u63a8\uff01</p> <p>\u6574\u4f53\u6765\u8bf4\u786e\u5b9e\u77ed\u4e86\u4e00\u4e9b\uff0c\u6709\u4e9b\u53d9\u4e8b\u786e\u5b9e\u7ed9\u6211\u4e0d\u5b8c\u6574\u7684\u611f\u89c9\u3002</p> <p>\u867d\u7136\u8fd9\u662f\u8001\u5957\u7684\uff0c\u91cd\u590d\u7684\u6bcf\u4e00\u5929\u7684\u5267\u60c5\uff0c\u4e0d\u8fc7\u6211\u8fd8\u662f\u5934\u4e00\u6b21\u63a5\u89e6\u5230\u8fd9\u79cd\u7c7b\u578b\uff0c\u6240\u4ee5\u5bf9\u6211\u6765\u8bf4\u7b97\u662f\u521d\u4f53\u9a8c\u3002</p> <p>\u6211\u5176\u5b9e\u4e5f\u60f3\u8fc7\uff0c\u5982\u679c\u4e00\u5929\u6c38\u8fdc\u7684\u91cd\u590d\u4e0b\u53bb\uff0c\u6211\u4f1a\u5e72\u4ec0\u4e48\u5462\uff0c\u5982\u679c\u6ca1\u6709\u79bb\u5f00\u7684\u65b9\u6cd5\uff0c\u6211\u5174\u8bb8\u4e5f\u4f1a\u6709\u5d29\u6e83\u7684\u4e00\u5929\u5427\u3002</p> <p>\u4f46\u662f\u6211\u76f8\u4fe1\u6211\u4e0d\u4f1a\u90a3\u4e48\u65e9\u4f3c\uff0c\u6211\u4f1a\u625b\u4e0b\u6765\u7684\uff0c\u6bd5\u7adf\u81ea\u4ee5\u4e3a\u5185\u5fc3\u4e2d\u7684\u5435\u95f9\u548c\u4e50\u89c2\u7a0b\u5ea6\u53ef\u662f\u4e0d\u4e0b\u4e8e Tyler \u7684\u554a\u3002</p> <p>\u8fd8\u6709\u4e00\u70b9\u5c31\u662f\u524d\u9762\u663c\u7530\u7684\u8bed\u97f3\u592a\u5435\u4e86\uff08\u6211\u6709\u70b9\u53d7\u4e0d\u4e86\u3002</p> <p>\u521a\u521a\u770b\u5230 Mia \u7684\u65f6\u5019\uff0c\u6211\u77ac\u95f4\u610f\u8bc6\u5230\u5e8f\u7ae0\u7684\u90a3\u4e2a\u5973\u5b69\u5b50\u53ef\u80fd\u5c31\u662f Mia\uff0c\u4f46\u662f\u6211\u6ca1\u8054\u60f3\u5230 LOOPERS \u7684\u542b\u4e49\uff0c\u5b8c\u5168\u5fd8\u4e86\u8fd9\u56de\u4e8b\uff08\uff09</p> <p>\u56e0\u4e3a Mia \u592a\u53ef\u7231\uff0c\u58f0\u7ebf\u5b8c\u5168\u653b\u9677\u6211\u4e86\uff08\uff09\u65e0\u6cd5\u601d\u8003\u4e86\uff08\uff09</p> <p>\u53e6\u5916\u90a3\u4e2a\u90fd\u5e02\u4f20\u8bf4\uff0c\u6211\u5b8c\u5168\u6ca1\u610f\u8bc6\u5230\u662f Mia \u554a\u6211\u8349\uff0c\u6211\u5f53\u65f6\u5b8c\u5168\u4e0d\u7406\u89e3\u5979\u7684\u53f0\u8bcd\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u7740 Tyler \u8bf4\u201c\u4f60\u662f\u5bf9\u7684\u201d\u5462\u3002</p> <p>\u4e2d\u95f4\u7684\u5267\u60c5\uff0c\u5dee\u4e0d\u591a\u4ece Tyler \u548c Mia \u4e00\u8d77\u7684\u65f6\u5019\uff0c\u4ece\u5230\u6469\u5929\u8f6e\u90a3\u91cc\uff0c\u6211\u5927\u6982\u731c\u5230\u4f1a\u6709\u4ec0\u4e48\u53d1\u751f\u4e86\uff08\uff09</p> <p>\u4e00\u5b9a\u662f\uff0c\u4e00\u89c1\u949f\u60c5\u4e86\u5bf9\u5427\uff0c\u54fc\u54fc\u3002</p> <p>\u6211\u8fd9\u91cc\u5dee\u4e0d\u591a\u4e00\u76f4\u5728\u59e8\u6bcd\u7b11\u3002</p> <p></p> <p>\u8df7\u8df7\u677f\u90a3\u4e00\u6bb5\u5c5e\u5b9e\u6709\u70b9\u9006\u5929\u4e86\uff08\uff09\uff0c\u8981\u574f\u6389\u4e86\uff08x</p> <p></p> <p>\u8fd8\u6709\u6709\u6b21\u5bfb\u5b9d\u56de\u6765 Mia \u56e0\u4e3a\u5e73\u80f8\u6240\u4ee5\u8eb2\u5728 Tyler \u540e\u9762\u7684\u6837\u5b50\u4e5f\u5f88\u53ef\u7231\u554a\uff01\u5c31\u662f\uff0c\u626f\u7740\u8863\u670d\uff0c\u6084\u6084\u63a2\u51fa\u5934\u6765\u90a3\u79cd\u611f\u89c9\uff0c\u5f88\u6709\u65e2\u89c6\u611f\u5bf9\u5427\uff01</p> <p>\u540e\u9762\u6211\u8ba4\u4e3a\u662f\u5f88\u6b63\u5e38\u7684\u5267\u672c\uff0c\u4f46\u662f\u4ece\u8981\u56de\u53bb\u90a3\u4e2a\u5730\u65b9\uff0c\u6211\u5dee\u4e0d\u591a\u5c31\u611f\u89c9\u5230 Mia \u7684\u4e0d\u5bf9\u52b2\u4e86\uff0c\u6211\u89c9\u5f97 Mia \u4f3c\u4e4e\u662f\uff0c\u4e0d\u60f3\u56de\u53bb\uff1f</p> <p>\u4ece\u6469\u5929\u8f6e\u8fd9\u6bb5\u5c31\u6709\u70b9\u4e0d\u7965\u7684\u9884\u611f\u4e86\u2026\u2026</p> <p></p> <p>\u8fd9\u91cc\u8fd8\u6ca1\u6709\u8054\u60f3\u5230 Mia \u53ef\u80fd\u662f\u5f97\u4e86\u4e0d\u6cbb\u4e4b\u75c7\u7684\u90e8\u5206\uff0c\u4f46\u662f\u5728\u516c\u56ed\u544a\u522b\u7684\u65f6\u5019\uff0c\u6211\u5927\u6982\u80fd\u7406\u89e3\u4e86\u3002</p> <p>\u4f46\u662f\u6211\u597d\u60f3\u9a82\u4e00\u53e5\uff0cMia\uff0c\u771f\u7684\uff0c\u4f60\u89c9\u5f97\uff0c\u9003\u907f\u80fd\u89e3\u51b3\u4e00\u5207\u95ee\u9898\u5417\uff0c\u4eca\u5929\u4e00\u5b9a\u662f\u8981\u7ed3\u675f\u7684\uff0c\u660e\u5929\u662f\u4f1a\u4e00\u5b9a\u5230\u6765\u7684\u554a\u3002</p> <p>\u7ed3\u679c\u8fc7\u4e0d\u4e86\u51e0\u79d2\u7537\u4e3b\u5c31\u8bf4\u4e86\u51e0\u4e4e\u4e00\u81f4\u7684\u8bdd\uff0c\u6211\u6d4b\uff0c\u8fd9\u662f\u4e0d\u662f\u8bf4\u660e\u6211\u5c31\u662f\u7537\u4e3b\uff0c\u563f\u563f\uff0c\u6211\u7684 Mia\uff0c\u563f\u563f\u2026\u2026\ud83e\udd24\u3002</p> <p>\u540e\u9762\u7684\u5185\u5bb9\uff0c\u867d\u7136\u5b8c\u5168\u5728\u6211\u9884\u6599\u4e4b\u4e2d\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u88ab\u611f\u52a8\u4e86\uff0c\u679c\u7136\u6211\u5c31\u662f\u8fd9\u6837\u7684\uff0c\u603b\u662f\u4f1a\u88ab\u7b80\u5355\u7684\uff0c\u7f8e\u597d\u7684\u6545\u4e8b\u611f\u52a8\u7684\u4eba\u3002</p> <p>\u770b\u5230\u62b1\u5728\u4e00\u8d77\u7684\u90e8\u5206\uff0c\u6211\u6709\u79cd\u541b\u540d\u7684\u65e2\u89c6\u611f\uff08\uff09\uff0c\u4f46\u662f\u8fd9\u91cc\u753b\u7684\u771f\u7684\u597d\u770b\u3002</p> <p></p> <p>\u73b0\u5728\u5b83\u662f\u6211\u7684\u58c1\u7eb8\uff08\uff09</p> <p>\u7136\u540e\u5c31\u662f\uff0c\u88ab\u5927\u5bb6\u8bdf\u75c5\u7684 END \u4e86\u3002</p> <p></p> <p>\u521a\u5f00\u59cb\u6211\u8fd8\u5f88\u5fd0\u5fd1\uff0c\u4f46\u662f\u770b\u5230\u4e24\u4eba\u76f8\u9047\u7684\u65f6\u5019\u8212\u4e86\u4e00\u53e3\u6c14\u3002</p> <p>\u540e\u9762 CG \u51fa\u6765\u7684\u65f6\u5019\u6211\u786e\u5b9e\u88ab\u5413\u5230\u4e86\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u662f\u56e0\u4e3a\u88ab\u5728\u6807\u9898\u5267\u900f\u7684\u795e\u5fc5\u5f71\u54cd\u4e86\uff0c\u6124\u6012\u3002</p> <p>\u4ed4\u7ec6\u4e00\u770b\uff0c\u6211\u89c9\u5f97\u5c31\u662f\uff0c\u4e24\u4eba\u5bf9\u8bdd\u5b8c\u4e4b\u540e\uff0cTyler \u6682\u65f6\u79bb\u5f00\uff0cMia \u5b89\u5fc3\u7684\u7761\u7740\u4e86\uff0c\u518d\u4e5f\u4e0d\u5bb3\u6015\u4f1a\u548c Tyler \u5206\u5f00\u4e86\u3002</p> <p>\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8bf4\u5462\uff0c\u4f60\u770b\u770b Mia \u7684\u6795\u8fb9\u662f\u4ec0\u4e48\u3002</p> <p>\u5fc3\u5f62\u80f8\u9488\uff0c\u5c31\u662f\u90a3\u4e2a\u90fd\u5e02\u4f20\u8bf4\uff0c\u5c31\u662f Mia \u7559\u4e0b\u4e4b\u540e\u7684\u6094\u6068\u6240\u4ea7\u751f\u7684\uff0c\u5f00\u59cb\u7684\u65f6\u5019\uff0cTyler \u4e00\u884c\u627e\u5230\u4e86\u8fd9\u4e2a\u80f8\u9488\u3002</p> <p>\u6211\u89c9\u5f97\u8fd9\u91cc\u524d\u540e\u547c\u5e94\u770b\u7740\u5f88\u8212\u670d\u554a\uff01</p> <p>\u7136\u540e\u6050\u9f99\u6a61\u76ae\uff0c\u5e8f\u7ae0\u5c31\u51fa\u73b0\u8fc7\u7684\uff0c\u8fd9\u4e00\u5207\u7684\u201c\u56e0\u201d\uff0c\u4e24\u4eba\u76f8\u9047\u7684\u201c\u56e0\u201d</p> <p>\u90a3\u4e48\uff0c\u80fd\u5b89\u5fc3\u7761\u7740\u7684 Mia\uff0c\u5c31\u662f\u8fd9\u4e00\u5207\u7684\u201c\u679c\u201d\u5427\u3002</p> <p>\u4e0d\u6392\u9664 Mia \u6ca1\u6709\u82cf\u9192\uff0c\u8fd9\u662f\u5e7b\u60f3\u7684\u53ef\u80fd\uff0c\u4f46\u662f\u770b\u5230\u6a61\u76ae\u548c\u80f8\u9488\uff0c\u6211\u89c9\u5f97\u6ca1\u6709\u5176\u5b83\u53ef\u4ee5\u8bf4\u7684\uff0c\u5fc5\u987b\u662f HE \u554a\u6211\u6d4b\u3002</p> <p>\u53ef\u80fd\u5f88\u591a\u4eba\u4f1a\u53cd\u9a73\u6211\uff0c\u53ef\u662f\u8fd9\u6709\u4ec0\u4e48\u7528\u5462\uff0c\u5728\u6211\u7684\u4e16\u754c\u91cc\uff0c\u8fd9\u5c31\u662f\uff0c\u552f\u4e00\u7684\u3002</p> <p>ANSWER</p> <p>\u4e0d\u8fc7\u8981\u662f\u80fd\u50cf\u4e2d\u95f4\u663c\u7530\u90a3\u4e00\u6bb5\uff0c\u6709\u4e2a\u5929\u6570\u7684\u8bb0\u5f55\uff0c\u6216\u8005\u8bf4\u662f\u5c55\u5f00\u4e00\u4e9b Tyler \u966a\u7740\u6ca1\u6709\u82cf\u9192\u7684 Mia \u7684\u5267\u60c5\u6211\u89c9\u5f97\u4f1a\u66f4\u597d\uff1f</p> <p>\u603b\u4f53\u6765\u8bf4\u6211\u60f3\u7ed9 9 \u5206\uff0c\u6574\u4f53\u89c2\u611f\u6211\u89c9\u5f97\u7565\u5fae\u5dee\u4e86\u4e00\u4e9b\uff0c\u4f46\u6ca1\u5565\u574f\u7684\uff0c\u5c31\u662f\u56e0\u4e3a\u6709\u70b9\u77ed\uff0c\u6ca1\u5403\u5230\u7cd6\uff0c\u6124\u6012\u3002</p> <p>\u4e3b\u8981\u662f\u753b\u98ce\u771f\u7684\u597d\u554a\u6211\u8349\uff0cCV \u4e5f\u5f88\u7ed9\u529b\u554a\uff01\u4e0d\u7ba1\uff0c\u4e0d\u7ba1\uff0c\u4e0d\u7ba1\uff0cMia \u662f\u6211\u7684\uff01</p> <p>\u545c\u545c\uff0c\u4e3a\u4ec0\u4e48\u73b0\u5b9e\u91cc\u6211\u9047\u4e0d\u5230\u6211\u7684 Mia \u554a\uff0c\u545c\u545c\ud83d\ude2d\ud83d\ude2d</p> <p>\u5988\u7684\uff0c\u6ca1\u6709\u7cd6\u5403\u6211\u8981\u6025\u4e86\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u6837\u5176\u5b9e\u4e5f\u86ee\u597d\uff0c\u5c31\u5dee\u90a3\u4e48\u4e00\u70b9\u70b9\u5706\u6ee1\u7684\u7ed3\u5c40\u3002</p> <p>\u6211\u8fd8\u86ee\u559c\u6b22\u7684\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u662f\u56e0\u4e3a\u73b0\u5b9e\u610f\u4e49\u5427\uff08\uff09</p> <p>\u8fd8\u6709\u5f88\u591a\uff0c\u6211\u81ea\u5df1\u7684\u611f\u60c5\u53d8\u5316\uff0c\u6bd4\u5982 Mia \u548c Tyler \u76f8\u9047\u4e4b\u540e\u90a3\u4e00\u5e55\uff0c\u6211\u7684\u4e00\u4e9b\u60f3\u6cd5\u3002</p> <p>\u8fd8\u6709\u4e24\u4eba\u804a\u5929\u7684\u65f6\u5019\u554a\uff0c\u5404\u79cd\u5730\u65b9\uff0c\u6211\u5176\u5b9e\u90fd\u6709\u86ee\u591a\u611f\u53d7\u7684\uff0c\u4f46\u662f\u6211\u4e0d\u592a\u613f\u610f\u5199\u3002</p> <p>\u7b49\u6211\u4e8c\u5237\u4e86\u6765\u8865\uff08\uff09</p> <p>\u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u7ec6\u8282\u60f3\u5199\u7684\uff0c\u4f46\u662f\u4e0d\u7ba1\u5566\uff0c\u7237\u8981\u7761\u89c9\u4e86\uff01</p>"}, {"location": "misc/", "title": "Index", "text": "<p>\u8fd9\u91cc\u5927\u6982\u662f\u653e\u4e00\u4e9b\u968f\u8bb0\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002</p> <p>\u7136\u540e\u5982\u679c\u4f60\u662f\u8981\u627e\u4e00\u4e9b\u8d44\u6e90\u5c31\u770b\u4e0b\u9762\uff1a</p> <p>ZJK \u7237\u7237 2022 \u5e74\u7684\u96c6\u8bad\u961f\u8bba\u6587</p> <p>\u7ed9\u5b66\u5f1f\u5199\u7684\u5355\u8c03\u961f\u5217\u4f18\u5316 dp \u8bb2\u7a3f</p> <p>\u7ed9\u5b66\u5f1f\u5199\u7684\u671f\u671b &amp; \u6982\u7387\u8bb2\u7a3f</p>"}, {"location": "misc/CSP2020/", "title": "CSP2020", "text": ""}, {"location": "misc/CSP2020/#day-0", "title": "day 0", "text": "<p>\u4eca\u5929\u738b\u8001\u5728\u73ed\u4e0a\u7ed9\u6211\u4eec\u8fd9\u4e9bOIer\u9f13\u52b1\u4e86\u4e00\u4e0b\u2026\u2026</p> <p>\u5012\u662f\u8bf4\u51fa\u4e86\u5f88\u591a\u6211\u4eec\u4f5c\u4e3aOIer\u7684\u75db\u2026\u2026</p> <p>\u6211\u9664\u4e86whk\u4e0d\u597d\u5e94\u8be5\u6ca1\u6709\u4ec0\u4e48\u5427\uff1f</p> <p>\u5934\u4e00\u6b21\u665a\u81ea\u4e60\u53ef\u4ee5\u5b8c\u5168\u5728\u673a\u623f\u4e86\u2026\u2026</p> <p>\u5168\u673a\u623f \u88ab\u4e09\u4e2a\u5927\u4f6c\uff08PWK\uff0cLLT\uff0cYL\uff09jc\u4e86</p>"}, {"location": "misc/CSP2020/#day-1", "title": "day 1", "text": "<p>\u4e0a\u5348\u53bb\u8003tg\uff0c\u5728\u9ad8\u4e2d\u90e8\u9047\u89c1\u4e86\u96c6\u8bad\u961f\u5de8\u4f6cZJK\u3002</p> <p>%\u4e00\u53d1\u589e\u52a0RP\u3002</p> <p>\u5230\u4e86\u8003\u573a\uff1a\u8bf6\u4eca\u5e74\u8fd8\u633a\u4e00\u822c\u7684\uff1f</p> <p>\u4f46\u662f\u5f53\u6211\u770b\u5230\u4e86\u7b2c\u4e09\u9898\u2026\u2026</p> <p>\u8349\u8fd9\u9ebb\u98ce\u597d\u81ed\u554a\u554a\u554a</p> <p>\u60a8 #include&lt;queue&gt;\u8fd8\u624b\u6253queue\uff1f</p> <p>\u795eTM O(n) \u7684\u624b\u5199map\u3002</p> <p>\u4ec0\u4e48\u4e1c\u897f\u2026\u2026</p> <p>\u51fa\u8003\u573a\u95ee\u4e86LLT\uff0c\u6709\u9053\u9898\u900968\u2026\u2026\u6211\u50bb\u4e86\u2026\u2026</p> <p>\u539f\u6765\u662f\u6211\u53cd\u6bd4\u4f8b\u51fd\u6570\u753b\u9519\u4e86\u2026\u2026</p> <p>\u6211\u5c45\u7136\u5fd8\u4e86DIj\u65e0\u4f18\u5316\u590d\u6742\u5ea6\u662fn\u65b9\u2026\u2026</p> <p>\u7136\u540eCCF\u6284\u4e8609\u5e74\u7684\u539f\u9898\uff08\u540e\u7f00\u8868\u8fbe\u5f0f\uff09</p> <p>\u4e0b\u5348pj\u7684\u65f6\u5019\u4eba\u591a\u5230\u7206\u2026\u2026</p> <p>\u672c\u4ee5\u4e3apj\u4f1a\u7b80\u5355\u4e00\u70b9\u2026\u2026</p> <p>\u4f46\u662f\u9605\u8bfb\u7a0b\u5e8f\u9898\u600e\u4e48\u8fd9\u4e48\u6076\u5fc3\u554a\u554a\u554a</p> <p>\u8981\u9000\u5f79\u4e86 /kel</p>"}, {"location": "misc/CSP2020/#day-15", "title": "day 1.5", "text": "<p>\u5927\u6982\u662f\u9000\u5f79\u4e86\u5427\u2026\u2026</p> <p>\u8981\u5f00\u59cbwhk\u4e86\u3002</p> <p>\u5bf9OI\u8bf4\u518d\u89c1\u4e86\u2026\u2026</p>"}, {"location": "misc/CSP2020/#day-19", "title": "day 1.9", "text": "<p>\u6210\u7ee9\u4e0b\u6765\u4e86\u3002</p> <p>pj\u548ctg\u4f3c\u4e4e\u52c9\u5f3a\u5361\u8fc7\u7ebf\u2026\u2026</p> <p>\u590d\u6d3b\u4e86\u3002</p> <p>\u673a\u623f\u7684\u6240\u6709\u4eba\u90fd\u6bd4\u6211\u9ad8\uff0c\u6240\u4ee5\u6211\u6700\u83dc\u3002</p> <p>csp-2\u52a0\u6cb9\u3002</p>"}, {"location": "misc/CSP2020/#extra", "title": "extra", "text": "<p>\u8fd9\u6b21\u662f\u771f\u7684\u6076\u5fc3\uff0cSC\u7684\u5206\u6570\u7ebf\u600e\u4e48\u548c\u6d59\u6c5f\u5dee1\u5206\u2026\u2026\u88ab\u5361\u6389\u4e86\u3002</p> <p>\u7136\u540e\uff0c\u548cCSP-2020\u8bf4\u518d\u89c1\u4e86\u3002</p> <p>\u518d\u89c1\u4e86\u3002</p> <p>\u51c6\u786e\u8bf4\uff0c\u662f\u548cOI\u8bf4\u518d\u89c1\u4e86\u3002</p> <p>\u518d\u89c1\u4e86\u3002</p> <p>\u518d\u89c1\u4e86\u2026\u2026</p>"}, {"location": "misc/CSP2020/#_1", "title": "\u9644", "text": "<p>\u4e00\u5e74\u540e\u6765\u770b\u8fd9\u4e2a\uff0c\u611f\u89c9\u5c31\u662f\u9ed1\u5386\u53f2\u554a\u3002</p> <p>\u4e0d\u8fc7\u73b0\u5728\u4e5f\u81ea\u5236\u529b\u6781\u5dee\u2026\u2026</p> <p>\u6211\u9700\u8981\u8715\u53d8</p>"}, {"location": "misc/CSP2021/", "title": "CSP2021", "text": ""}, {"location": "misc/CSP2021/#csp-js-2021", "title": "CSP J/S 2021 \u6e38\u8bb0", "text": ""}, {"location": "misc/CSP2021/#_1", "title": "\u8bf4\u660e\uff1a", "text": "<ul> <li>Day -10 ~ Day-1 \u5747\u4e3a\u521d\u8d5b\u524d</li> <li>Day 0 \u4e3a\u521d\u8d5b</li> <li>Day 0.01 ~ 0.99 \u4e3a\u590d\u8d5b\u524d,\u5176\u4e2d Day 0.33 \u4e3a 9.29 \u5373\u4e3a\u521d\u8d5b\u6210\u7ee9\u516c\u5e03\u5f53\u5929</li> <li>Day 1 \u4e3a\u590d\u8d5b</li> </ul>"}, {"location": "misc/CSP2021/#day-5", "title": "Day -5", "text": "<p>\u6700\u8fd1\u53d8\u6545\u5b9e\u5728\u592a\u591a\u4e86\uff0c\u611f\u89c9\u4eba\u6709\u70b9\u9ebb\u3002</p> <p>\u5b66\u6821\u4e00\u6b21 \u7edf\u4e00 \u51c6\u5907\u521d\u8d5b\uff0c\u505a\u4e86\u597d\u51e0\u5957\u6a21\u62df\uff0c\u6211\u8fd8\u5199\u4e86\u4e00\u4e2a \u521d\u8d5b\u77e5\u8bc6\u70b9 - black_trees - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>\u611f\u89c9\u521d\u8d5b\u597d\u96be\u554a\uff01\u5e0c\u671b\u4eca\u5e74\u4e0d\u8981\u88ab\u5361\u4e86qwq\u3002</p> <p>\u6211\u6682\u65f6\u653e\u4e0b\u590d\u8d5b\u53bb\u51c6\u5907\u521d\u8d5b\uff0c\u65e0\u610f\u95f4\u53d1\u73b0\u8fd9\u4e2a\u5bf9\u590d\u8d5b\u8fd8\u633a\u6709\u5e2e\u52a9\uff1f</p> <p>\u5370\u8c61\u6bd4\u8f83\u6df1\u7684\u4e00\u9898\u662f \\(g(x)=(g(x-1)\\times2002 + g(x-2)\\times 2003) \\text{mod} \\ 2005\\) \uff0809 TG\uff09</p> <p>\u5f53\u65f6\u6bdb\u6839\u513f\u8bb2\u7684\u65f6\u5019\u5fd8\u8bb0\u600e\u4e48\u505a\u4e86\uff0c\u4e8e\u662f\u8bf7\u4e86\u4f73\u8001\u5e08\u8fc7\u6765\uff0c\u76f4\u63a5\u4e00\u4e2a\u8d39\u9a6c\u5c0f\u5b9a\u7406\u79d2\u6740\uff08orz</p> <p>\u73b0\u5728\u624b\u4e0a\u8fd8\u6709\u4e00\u4e2a LGR2021 SCP \u521d\u8d5b\u6a21\u62df\u548c\u67d0\u4eae\u7684\u6a21\u62df\uff08\u636e\u8bf4HL\u90a3\u5957ZJK\u7ffb\u8f66\u4e86</p> <p>\u8fd8\u6709\u4e2a\u5dee\u4e09\u9898\u7684 LGR2020 CSP \u521d\u8d5b\u6a21\u62df\u3002</p> <p>\u6211\u7684 ShooTing Game II \u90a3\u9898\u56e0\u4e3a\u7a81\u7136\u51fa\u73b0\u7684 ZR NOIP\u5341\u8fde\u6d4bDay2T2 \u88ab\u6bd9\u4e86\uff0c\u4e8e\u662f\u4ecepbqd\u7684CFR\u4e0a\u64a4\u4e0b\u6765\u4e86\u3002</p> <p>\u4e0d\u8fc7\u6ca1\u5173\u7cfb\uff0c\u4e4b\u540e\u6709\u597d\u9898\u8fd8\u53ef\u4ee5\u653e\uff0c\u800c\u4e14CF\u7684 Coauthor \u8fd8\u662f\u6709\u6211\u3002</p> <p>\u8fd9\u9898\u5c31\u6254\u53bb\u548c xzq \u4e00\u8d77\u51fa\u7684mn\u8d5b\u4e86\uff0c\u4e0d\u8fc7\u542c\u8bf4\u8981\u5148\u7ed9\u6559\u7ec3\u7ec4\u770b\u4e00\u770b\u3002</p> <p>\u53e6\u5916\u5b66\u6821\u91cc\u7684\u5404\u79cd\u7533\u5fc5\u4eba\u5bfc\u81f4\u7684\u65f6\u95f4\u5c31\u5148\u4e0d\u63d0\u4e86\u3002</p> <p>\u53cd\u6b63\u5404\u79cd\u4e8b\u60c5\u90fd\u7406\u4e86\u4e00\u4e0b\uff0c\u73b0\u5728\u6700\u5927\u7684\u95ee\u9898\u662f\u5468\u516d\u80fd\u4e0d\u80fd\u7559\u6821\uff0c\u5982\u679c\u4e0d\u80fd\u5c31\u53ea\u80fd\u53bbxzq\u5bb6\u501f\u5bbf\u4e86\u3002</p> <p>\u5148\u5199\u5230\u8fd9\u513f\uff0c\u7761\u4e86\u3002</p>"}, {"location": "misc/CSP2021/#day-2", "title": "Day -2", "text": "<p>\u6700\u8fd1\u5929\u5929\u90fd\u5728\u4e0a\u8bfe\u4e0b\u8bfewhk\u7684\u751f\u6d3b\u5f53\u4e2d\u5ea6\u8fc7\uff0c\u5c31\u53ea\u662f\u4e3a\u4e86\u521d\u8d5b\u632a\u4e00\u70b9\u65f6\u95f4\u3002</p> <p>\u8bb0\u5f97\u505a\u4e86\u4e00\u4e2a\u7279\u522b\u79bb\u8c31\u7684\u5377\u5b50\uff0c\u628a\u4eca\u5e74NOI Day1T1 \u62ff\u8fc7\u6765\u5f53\u5b8c\u5584\u7a0b\u5e8f\u3002</p> <p>\u4e0d\u4f1a\u6811\u5256\u6240\u4ee5\u9519\u4e86\u4e00\u4e2a <code>x.r==y.l</code> \uff0c\u7136\u540e\u5c31\u53bb\u5199STGII\u7684std\u4e86\u3002</p> <p>\u7136\u540e\u5199\u7740\u5199\u7740\u53d1\u73b0\u8fd9\u73a9\u610f\u513f\u6839\u672c\u4e0d\u53ef\u4ee5\u653e\u5728PJ&amp;TG\u6a21\u62df\u4e0a\uff0c\u4e8e\u662f\u53ea\u80fd\u64a4\u4e0b\u53bb\u3002</p> <p>\u505a\u521d\u8d5b\u9898\u7684\u65f6\u5019\u53c8\u60f3\u5230\u4e00\u4e2a\u6bd4\u8f83\u597d\u73a9\u7684DS\uff0c\u51c6\u5907\u8003\u5b8c\u4e4b\u540e\u5199 description \u548c std\u3002</p> <p>C\u8001\u5e08\u8bf4\u660e\u665a\u548c\u540e\u5929\u65e9\u4e0a\u5b66\u6821\u90fd\u83ab\u5f97\u996d\u6070\uff0c\u4e8e\u662f\u8ba9xzq\u5e2e\u5e26\u4e86\u4e00\u6876\u6ce1\u9762\u3002</p> <p>\u4ed6\u8d70\u4e4b\u540e\u6211\u624d\u60f3\u8d77\u6765\u53ef\u4ee5\u53bb\u4ed6\u5bb6\u5ad6\u4e00\u987f\uff0c\u4e0d\u8fc7\u8fd9\u6837\u4e5f\u8bb8\u4e0d\u592a\u597d\u3002</p> <p>\u5728\u5bdd\u5ba4\u9047\u5230\u4e86\u6628\u5929\u8ba4\u8bc6\u7684\u5927\u54f2\u5b66\u5bb6\uff0c\u4ed6\u8bf4\u4ed6\u53eb\u5764\u2642\u5764\uff0c\u60f3\u548c\u6211\u4ea4\u2642\u4e2a\u670b\u53cb\u3002</p> <p>\u6211\u6beb\u4e0d\u72b9\u8c6b\u5730\u540c\u2642\u610f\u4e86\uff08\uff08\uff08</p>"}, {"location": "misc/CSP2021/#day-1", "title": "Day -1", "text": "<p>918\u2026\u2026</p> <p>\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026</p> <p>\u65e9\u4e0axzq\u628a\u6ce1\u9762\u62ff\u7ed9\u6211\u7684\u65f6\u5019\uff0c\u8bf4\u8d85\u5e02\u4e70\u4e00\u9001\u4e00\uff08</p> <p>\u5e26\u7ecf\u6d4e\u5b66\u5bb6HHZ\u770b\u5230\u4e4b\u540e\u8ba4\u4e3a\u80af\u5b9a\u662f\u8981\u8fc7\u671f\u7684\u624d\u4e70\u4e00\u9001\u4e00\uff0c\u6211\u89c9\u5f97\u4e5f\u662f\u3002</p> <p>\uff08\u4e2d\u5348\u5403\u7684\u65f6\u5019\u518d\u770b\u770b\u5427\u3002</p> <p>\u4e0b\u5348\u6536\u5230\u4e86\u4e00\u4e9b\u6d88\u606f\uff0c\u5927\u6982\u662f\u5bf9\u4e8e\u67d0\u4e2a\u9762\u5b50\u5de5\u7a0b\u7684\u4e00\u4e9b\u8c03\u6574dc</p> <p>\u56e0\u4e3a\u6211\u4eec\u5728\u98ce\u53e3\u6d6a\u5c16\u4e0a\uff0c\u5e38\u5e74\u88ab\u91cd\u70b9\u5173\u6ce8\uff0c\u6240\u4ee5\u73b0\u5728\u5468\u516d\u5148\u4e0d\u4e0a\u8bfe\uff0c\u7136\u540e\u628a\u5468\u5185\u7684\u65f6\u95f4\u538b\u7f29\u4e00\u4e0b\u3002</p> <p>\u628a\u5468\u516d\u7684\u8bfe\u538b\u8fc7\u53bb\uff0c\u81f3\u4e8e\u665a\u81ea\u4e60\uff0c\u7b49\u98ce\u58f0\u8fc7\u53bb\u4e86\uff0c\u642c\u4e86\u6559\u5ba4\u6362\u4e86\u5bdd\u5ba4\u4e4b\u540e\u5c31\u4f1a\u6162\u6162\u8c03\u56de\u539f\u6765\u7684\u65f6\u95f4\u3002</p> <p>\u4e0d\u8fc7\u548c\u9a6c\u4e0a\u5c31\u4f1a\u505c\u8bfe\u7684\u6211\u53c8\u5565\u5927\u5173\u7cfb\u5462\uff08\u7b11\uff09\uff1f</p> <p>\u53bb\u673a\u623f\u4e4b\u524d\u5f97\u5230\u4e86\u5176\u4ed6\u7ade\u8d5b\u4eba\u7684\u795d\u798f\uff0c\u611f\u89c9\u633a\u5c2c\u7684233</p> <p>\u665a\u4e0a\u548cczh\u8fd8\u6709xyh\u51fa\u53bb\u6070\u4e86\u4e2a\u732a\u6392\u5b9a\u98df\u8fd8\u662f\u5496\u55b1\u996d\u6765\u7740\u3002</p> <p>\u665a\u4e0a\u8003\u4e86\u4e00\u4e2a\u6bdb\u7237\u7b49\u795e\u4ed9\u4e00\u8d77\u51fa\u7684\u521d\u8d5b\u6a21\u62df\uff08\u636e\u8bf4\u6070\u4e861000RMB\uff0c\uff09\u8003\u7684\u8fd8\u884c\u3002</p> <p>\u987a\u4fbf\u628a PalindL \u90a3\u9898\u7684EH ver \u7b80\u5355\u5199\u4e86\u4e00\u4e0b\u6254\u51fa\u9898\u7ec4\u91cc\u4e86\u3002</p> <p>\u56de\u5bdd\u5ba4\u4e4b\u540e\u548czyl\u4ee5\u53calsl\u8ba8\u8bba\u4e86\u4e00\u4e0b\u67d0\u4e2a\u795e\u5947DS\u7684\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u505a\u6cd5\u3002</p> <p>\u7136\u540e\u624d\u60f3\u8d77\u6765\u6211\u4e3b\u5e2d\u6811\u7684\u7b14\u8bb0\u6ca1\u5199\uff08\uff0c\u5c31\u987a\u624b\u6254todo\u91cc\u4e86\u3002</p> <p>\u5199\u4e0b\u8fd9\u4e9b\u7684\u65f6\u5019\u5916\u9762\u4e0b\u7740\u96e8\uff0c\u5b66\u6821\u91cc\u53ea\u5269\u4e86OIer\uff0c</p> <p>\u4e0d\u7981\u89c9\u5f97\u8fd9\u624d\u662f\u6211\u8981\u7684\u751f\u6d3b\u554a\u3002</p> <p>\u8ba8\u8bba\u8ba8\u8bba\u9898\uff0c\u6253\u6253\u6bd4\u8d5b\u8fb1\u9a82\u51fa\u9898\u4eba\uff0c\u51fa\u51fa\u6bd4\u8d5b\u5361\u7206\u4e00\u5806\u4eba\uff0c\u4eab\u53d7\u8fd9OIer\u7684\u5b81\u9759\u3002</p> <p>\u5e0c\u671b\u5b83\u80fd\u966a\u6211\u8d70\u5230\u9ad8\u4e8c\u3002</p> <p>\u6211\u5df2\u7ecf\u4e24\u5e74\u88ab\u521d\u8d5b\u5361\u4e86\uff0c\u6211\u4e0d\u60f3\u518d\u51fa\u4ec0\u4e48\u95ee\u9898\u4e86\u3002</p>"}, {"location": "misc/CSP2021/#day-0", "title": "Day 0", "text": "<p>\u65e9\u4e0a\u6821\u95e8\u53e3\u96c6\u5408\uff0c\u53d1\u73b0mjc\u4ed6\u51c6\u5907\u51fa\u53bb\u6070\u996d\u56e0\u4e3a\u6ca1\u8001\u5e08\u88ab\u62e6\u4e86\uff08</p> <p>\u770b\u89c1\u8f66\u4ee5\u4e3a\u662f\u81ea\u5df1\u4eba\uff0c\u7ed3\u679c\u662f\u7269\u7406\u7ade\u8d5b\u7684\uff0c\u8fd8\u56e0\u4e3a\u4ed6\u4eec\u7684\u8863\u670d\u4e4b\u7c7b\u7684\u5947\u602a\u89c4\u5b9a\u88ab\u83ab\u540d\u5176\u5999\u9a82\u4e86\u4e00\u987f\uff0c</p> <p>\u7136\u540e\u718a\u6821\u6700\u540e\u624d\u77e5\u9053\u6211\u4eec\u4e0d\u662f\u7269\u7406\u7ade\u8d5b\u662f\u4fe1\u606f\u7684\uff08</p> <p>\u4f9d\u60ef\u4f8b\uff0c\u53bb\u7684\u8def\u4e0a\u6574\u4e86\u70b9\u5927\u6d3b\u3002</p> <p>\u4e0d\u8fc7\u5230\u4e86\u4e4b\u540e\u53d1\u73b0\u662f\u6811\u5fb7\u5149\u534e\uff0c\u4f3c\u4e4e\u53ef\u4ee5\u548c HMP_Haoge \u9762\u57fa\uff1f</p> <p>\u8fdb\u53bb\u4e4b\u540e\u53d1\u73b0\u4e00\u5927\u5806\u4eba\u5728\u5217\u9635\uff0c\u6211\u8ba4\u4e3a\u8003\u524d\u5217\u9635\u80fd+rp\uff0c\u4e8e\u662f\u5c31\u52a0\u5165\u4e86\u3002</p> <p>\u62ff\u5230\u8bd5\u5377\u53d1\u73b0\u6bd4\u6628\u665a\u90a3\u4e2a\u9634\u95f4\u6a21\u62df\u8fd8\u9634\u95f4\uff01\uff08Base64\u6211\u8bf4\u7684\u5c31\u662f\u4f60\u548c\u56db\u6bdb\u5b50</p> <p>\u8001\u5957\u8def\u5148\u628a\u4f1a\u505a\u7684\u505a\u4e86\uff0c\u7136\u540e\u6162\u6162\u63a8\u3002</p> <p>\u82f9\u679c\u90a3\u9898\u6ca1\u53d1\u73b0\u662f\u4e2a Fibb\uff0c\u76f4\u63a5\u8bbe\u4e86\u4e00\u4e2a\u51fd\u6570 <code>Q(n,m)</code> \u63a8\u4e86\u4e00\u4e0b\u5c31\u7b97\u51fa\u6765\u4e86\u3002</p> <p>\u7403\u90a3\u9898\u4ee5\u4e3a\u662f\u6c42\u5e76\uff0c\u4f46\u662f\u6ca1\u53d1\u73b0\u67090.</p> <p>Base64\u5b8c\u5168\u4e0d\u4f1a\uff0c\u53ea\u80fd\u7528\u4e00\u4e9b\u7384\u5b66\u6280\u5de7\u505a\u4e86\uff0c\u4f46\u662f\u6ca1\u770b\u89c1HelloWorld\u7684 W \u5927\u5199\u4e86</p> <p>\u56db\u6bdb\u5b50\u72b9\u8c6b\u5f88\u4e45\uff0c\u7a81\u7136\u60f3\u8d77\u6bdb\u6839\u513f\u4ee5\u524d\u8bb2\u8fc7\u7c7b\u4f3c\u7684qry\uff0c\u5c31\u505a\u4e86\u3002</p> <p>\u4e0b\u6765\u5bf9\u5404\u8def\u795e\u4ed9\u7684\u6837\u5b50\uff0c\u89c9\u5f97\u662f72.5\u7684\u6837\u5b50\uff0c\u5e94\u8be5\u80fd\u8fc7qwq\u3002</p> <p>\u4e2d\u5348\u548c\u5927\u5bb6\u4e00\u8d77\u6070\u9762\u987a\u4fbf\u8ba8\u8bba\uff0c\u633a\u5feb\u4e50\u7684\u3002</p> <p>\u4e0b\u5348\u542c\u8bf4\u90a3\u4f4d cja \u8981\u8fc7\u6765\uff0c\u795d\u4ed6\u597d\u8fd0\u3002</p> <p>\u8fdb\u53bb\u5c31\u968f\u4fbf\u505a\u4e86\u4e00\u4e0b\u3002</p> <p>\u51fa\u6765\u611f\u89c9\u6211\u5e94\u8be5\u6ca1\u5565\u95ee\u9898\u3002</p> <p>\u7ed3\u679c\u56de\u5bb6\u4e00\u5bf9\u7b54\u6848\uff0c\u597d\u5bb6\u4f19\uff0cJ\u548cS \u90fd\u662f 64pts\uff0cPJ\u6302\u4e8615\u5206\u50bb\u903c\u5206\u545c\u545c\u545c\u3002</p> <p>\u7136\u540e\u6211\u5c31\u4e00\u76f4\u7279\u522b\u7126\u8651\uff0c\u548c\u8001\u7238\u6253\u4e86\u4e2a\u7535\u8bdd\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u5e73\u590d\u5fc3\u6001\uff0c\u540e\u6765\u60f3\u8d77\u795d\u8001\u8bf4\u7684</p> <p>\u4eca\u5e74\u9898\u96be\uff0c\u800c\u4e14\u4eba\u591a\uff0c\u53c8\u4e0d\u4f1a\u51cf\u673a\u5b50\uff0c\u5206\u6570\u7ebf\u80af\u5b9a\u4f1a\u4e0b\u964d</p> <p>\u5e0c\u671b\u662f\u5427\u3002</p> <p>\u7136\u540e\u6211\u89c9\u5f97tg \u5e94\u8be5\u80fd\u8fc7\uff0cpj\u6709\u70b9\u90a3\u4e2a\uff08\u4e0d\u4f1a\u6211\u8fd9\u8f88\u5b50\u5c31\u6253\u4e0d\u6210pj\u4e86\u5427\u2026\u2026</p> <p>\u53bbfst\u7fa4\u91cc\u95ee\u4e86\u4e00\u4e0b\u53d1\u73b0\u6709\u6bd4\u6211\u66f4\u60e8\u7684\u2026\u2026\u90a3\u6211\u4e5f\u4e0d\u503c\u5f97\u653e\u5f03\u554a\u3002</p> <p>\u6211\u63a5\u53d7\u4e86\uff0c\u6211\u5982\u679c\u771f\u7684J\u6216\u8005S\u7684\u521d\u8d5b\u6302\u4e86</p> <p>\u90a3\u5c31\u6765\u5e74\u518d\u6218\uff0c\u6709\u4eba\u5df2\u7ecf\u7b49\u4e86\u4e09\u5e74\u90fd\u6ca1\u8bf4\u4ec0\u4e48\uff0c\u6211\u6709\u5565\u597d\u8bf4\u7684\u5462</p> <p>\u8a66\u9a13\u306b\u5408\u683c\u3057\u306a\u3051\u308c\u3070,\u3058\u3083\u3042\u3001\u3082\u3046\u4e00\u5e74\u5f85\u3064.</p> <p>3\u5e74\u3082\u5f85\u3063\u3066\u3044\u308b\u4eba\u3082\u3044\u307e\u3059,\u79c1\u3082\u6587\u53e5\u3092\u8a00\u3046\u5fc5\u8981\u306f\u306a\u3044.</p> <p>\u673a\u4e0a\u306e\u7a7a\u8ad6\u306f\u7121\u7528\u3060\u3001\u99ac\u9e7f.</p> <p>\u6211\u5e0c\u671b\u4e0d\u8981\u5230\u6b64\u4e3a\u6b62\u3002</p>"}, {"location": "misc/CSP2021/#day-033", "title": "Day 0.33", "text": "<p>\u5206\u51fa\u4e86\uff0ctg 63\uff0cpj 61\u3002</p> <p>\u5206\u6570\u7ebf\u7684\u8bdd\uff1atg 50, pj 62 \uff08\u666e\u53ca\u53c8\u540a\u7ebf\u4e86\uff09</p> <p>\u4f46\u662f\u6240\u5e78\uff0c\u5b66\u6821\u8fd9\u6b21\u7684 PJ \u5956\u52b1\u540d\u989d\u7ed9\u4e86\u6211\uff0c\u4e8e\u662f\u6211\u53ef\u4ee5\u53bb\u6253\u4eba\u751f\u7684\u7b2c\u4e00\u6b21PJ\u4e86\uff08\u524d\u9762\u4e00\u76f4\u540a\u7ebf</p> <p>\u7136\u540e\u5728\u673a\u623f\u628a\u7b2c\u4e00\u573a\u6a21\u62df\u8d5b\u6574\u5b8c\u4e86\uff0c\u6bd4\u8f83\u826f\u5fc3\u3002</p> <p>\u4e0d\u8fc7\u6700\u8fd1\u6587\u5316\u8bfe\u6709\u70b9\u95ee\u9898\uff0c\u53ef\u80fd\u9700\u8981\u6211\u6293\u7d27\u65f6\u95f4\uff0c\u4e8e\u662f\u7a0d\u5fae\u538b\u7f29\u4e86\u4e0b\u65f6\u95f4\u3002</p>"}, {"location": "misc/CSP2021/#day-097-1020", "title": "Day 0.97 10.20", "text": "<p>\u7b80\u5355\u8bf4\u4e00\u4e0b\u6700\u8fd1\u600e\u4e48\u4e86\u5427\uff0c\u592a\u5fd9\u5b8c\u5168\u6ca1\u65f6\u95f4\u5199\u6e38\u8bb0\u4e86\u3002</p> <p>\u56fd\u5e86\u96c6\u8bad\u7684\u6e38\u8bb0\u5199\u5728\u672c\u5b50\u4e0a\uff0c\u4e4b\u540e\u62cd\u7167\u53d1\u4e0a\u6765\u3002</p> <p>\u6700\u8fd1\u8fd9\u6bb5\u65f6\u95f4\u505c\u8bfe\uff0c\u5dee\u4e0d\u591a\u5c31\u662f\u6a21\u62df\u8d5b\uff0c\u6539\u9519\uff0c\u8865\u4e13\u9898\uff0c\u5199\u9898\uff0c\u8865\u9898\u2026\u2026</p> <p>\u5c31\u8fd9\u4e48\u6109\u5feb\u7684\u8fc7\u4e86\u4e00\u4e2a\u5468\uff0c\u4e0d\u8fc7\u6a21\u62df\u8d5b\u4e00\u76f4\u90fd\u6ca1\u8003\u597d\u2026\u2026</p> <p>\u6a21\u62df\u8d5b\u5929\u5929\u6302\u5206\uff0c\u4eba\u9ebb\u4e86\u3002</p> <p>\u6709\u4e00\u6b21\uff08\u5e94\u8be5\u662f\u4e0a\u5468\u4e94\uff09\u627eJX\u804a\u4e86\u4e00\u4e0b\uff0c\u6211\u81ea\u5df1\u4e5f\u5199\u4e86\u4e2a\u90ae\u4ef6\uff0c\u89c9\u5f97\u6211\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u592a\u6d6e\u8e81\u4e86\uff0c\u7a33\u4e0d\u4e0b\u6765\u3002</p> <p>\u800c\u4e14\u603b\u662f\u4f1a\u7ed9\u81ea\u5df1\u4e00\u4e9b\u83ab\u540d\u7684\u538b\u529b\uff08\u56e0\u4e3a compere\uff09\u3002</p> <p>\u4e0b\u5348\u8fd8\u88ab\u62c9\u53bb\u8fd0\u52a8\u4f1a\uff0c\u5f53\u662f\u653e\u677e\u4e00\u4e0b\u8111\u5b50\u4e86\u3002</p> <p>\uff08wqs\u4f5c\u4e3a\u5e7f\u64ad\u7ad9\u7ad9\u957f\u653e\u4e86\u611f\u60c5\u7684\u6469\u5929\u697c\uff08\u6211\u8f66\u4e07\u4eba\u76f4\u63a5\u72c2\u559c\uff09</p> <p>4*100 \u6709\u4eba\u53d7\u4f24\u5e2e\u4ed6\u8dd1\u4e86\uff0c\u7136\u540e\u4e3a\u4e86\u56e2\u4f53\u9879\u56db\u5904\u5954\u6ce2\u2026\u2026 </p> <p>\u7ed3\u679c\u6700\u540e\u8863\u670d\u7164\u7403\u4e86\u2026\u2026</p> <p>\u552f\u4e00\u7684\u5b89\u6170\u662f\u73ed\u4e3b\u4efbF\u5973\u58eb\u7ed9\u6211\u4eec\u8fd9\u4e9b OIer \u51c6\u5907\u4e86\u5403\u7684\uff08</p> <p>\u4e4b\u540e\u8981\u53bb\u7ef5\u9633\u8003\u8bd5\uff0c\u5e0c\u671b\u6302\u5206\u4e0d\u8981\u592a\u60e8\u3002</p>"}, {"location": "misc/CSP2021/#day-098-1021", "title": "Day 0.98 10.21", "text": "<p>\u4eca\u5929\u6a21\u62df\u8d5b 5min \u624b\u6495\u7ebf\u6bb5\u6811 1A 100pts \u8d70\u4eba/kx</p> <p>\u7136\u540e\u5269\u4e0b\u7684 3h55min \u53ea\u62ff\u4e86 30 /kx</p> <p>\u672c\u6765\u53ef\u4ee5 310 \u7684 /ll</p>"}, {"location": "misc/CSP2021/#day-099-1022", "title": "Day 0.99 10.22", "text": "<p>\u627e\u4f73\u8001\u5e08\u95eepqbd\u7684\u9898\uff0c\u7ed3\u679c\u4f73\u8001\u5e08\u7ed9\u4e86\u6781\u5ea6\u4f18\u79c0\u7684\u505a\u6cd5</p> <p>\u4e8e\u662f\u4f73\u8001\u5e08\u8fdb\u7fa4\u4e86 /kx</p> <p>\u4e0b\u5348\u6e9c\u53bbTencent \u73a9\u53bb\u4e86\uff0c\u7136\u540e\u5c31\u8dd1\u8def\u53bb\u7ef5\u9633\u3002</p>"}, {"location": "misc/CSP2021/#day-1-1023", "title": "Day 1 10.23", "text": "<p>\u6211\u89c9\u5f97\u5427\uff0c\u8fd9\u6b21\u867d\u7136\u53ef\u80fd\u62ff\u4e0d\u5230\u4ec0\u4e48\u5956\uff0c\u4f46\u662f\u6536\u83b7\u633a\u5927\u7684\u3002</p> <p>\u9996\u5148\u4e0a\u5348J\u7ec4\uff0c\u5fc3\u6001\u51fa\u4e86\u70b9\u5c0f\u95ee\u9898\uff0c\u5bfc\u81f4T4\u6ca1\u5199\u51fa\u6765\u3002</p> <p>\u5148\u5f00 A \u9898\uff0c\u5f00\u59cb\u7684\u65f6\u5019\u6709\u70b9\u7d27\u5f20\u7ed3\u679c\u534a\u5c0f\u65f6\u624d\u770b\u51fa\u6765\u662f\u50bb\u903c\u9898\uff0c\u4f46\u662f\u6211\u5f53\u65f6\u4e00\u770b\u65f6\u95f49\u70b9\uff0c\u6211\u4ee5\u4e3a\u5df2\u7ecf\u8fc7\u53bb\u4e00\u4e2a\u5c0f\u65f6\u4e86\uff08\u5e73\u5e38\u6a21\u62df\u8d5b\u90fd\u662f8\u70b9\u5f00\u59cb\uff0c\u6240\u4ee5\u4e60\u60ef\u4e86\uff09</p> <p>\u7136\u540e\u5c31\u6709\u70b9\u614c\uff0cT1\u5199\u4e86\u8dd1\u8def\u53bb\u770bT2T3.</p> <p>\u53d1\u73b0T3 \u4f3c\u4e4e\u662f\u4e2a\u5c0f\u6a21\u62df\uff0c\u5728\u8349\u7a3f\u7eb8\u4e0a\u7406\u4e86\u4e00\u4e0b\u601d\u8def\u5c31\u5f00\u5199\u4e86\u3002</p> <p>\u4e00\u51714\u4e2a\u5927\u6837\u4f8b\uff0c\u6211\u8c03\u4e86\u56db\u6b21\uff0c\u7136\u540e\u90fd\u8fc7\u4e86\uff0c\u5199\u4e86\u4e2agen\u968f\u673a\u51fa\u4e32hack\u53d1\u73b0\u4e5f\u6ca1\u95ee\u9898\u3002</p> <p>\u62ac\u5934\u4e00\u770b\u8fd8\u6709 1h40min\u3002</p> <p>\u7136\u540e\u53bb\u5199T2\uff0c\u6211\u5f53\u65f6\u4ee5\u4e3a\u9898\u9762\u6ca1\u8bf4c++14\u6240\u4ee5\u4e0d\u6562\u7528auto\uff0c\u7136\u540e\u8c03\u4e86\u597d\u51e0\u6b21\u53d1\u73b0\u662f\u79bb\u6563\u5316\u51fa\u9519\u4e86\u3002</p> <p>\u8fc7\u4e86\u5927\u6837\u4f8b\u8dd1\u8def\uff0c\u8fd8\u67091h\u3002</p> <p>\u770b T4 \u7684\u65f6\u5019\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5 set \u533a\u95f4\u5220\u9664\uff0c\u4f46\u662f\u53d1\u73b0\u5fd8\u8bb0set\u548b\u7528\u4e86 /qd</p> <p>\u7a81\u7136\u53d1\u73b0 T2 \u6709\u4e2a\u5927\u6837\u4f8b\u51fa\u95ee\u9898\u4e86\uff0c\u4e8e\u662f\u56de\u53bb\u8c03\u3002</p> <p>\u5927\u6982\u8fd8\u670920min \u7684\u65f6\u5019\u6ca1\u8c03\u5b8c\uff0c\u5fc3\u5c31\u6709\u70b9\u614c\u4e86\u3002</p> <p>\u6700\u540e\u68c0\u67e5\u6587\u4ef6\u7684\u65f6\u5019\u7a81\u7136\u53d1\u73b0 T1 \u6709\u4e2a\u5730\u65b9\u5c11\u5199\u4e86\u7b49\u53f7\uff0c\u52a0\u4e0a\u4e4b\u540e\u6309ctrl+s \u7684\u65f6\u5019\u521a\u597d\u542c\u5230\u4e86\u6536\u5377\u7684\u58f0\u97f3\u3002</p> <p>\u4f46\u662fcena\u6ca1\u6709\u663e\u793a\u6536\u5377\uff0c\u6240\u4ee5\u6211\u4f30\u8ba1\u8fd8\u662f\u5199\u5165\u4e86\u7684\u3002</p> <p>\u9884\u4f30 100+40+100+020=240260.</p> <p>\u6302\u60e8\u4e86\uff0c\u5fc3\u60c5\u6709\u70b9\u4e0d\u597d\u3002</p> <p>\u4e2d\u5348\u5728dc\u9644\u8fd1\u7684\u67d0\u4e2a\u996d\u5e97\u6070\u996d\u3002</p> <p>\u7136\u540e\u5728\u8f66\u4e0a\u7761\u4e86\u4e00\u89c9\u3002</p> <p>\u4e0b\u5348\u8fdb\u8003\u573a\u7684\u65f6\u5019\u770b\u89c1\u4e86\u9893\u4ed9 Jess\uff0c\u8fc7\u53bb\u819c\u4e86\u4e00\u53d1\u3002</p> <p>\u8fdb\u53bb\u4e4b\u540e\u53d1\u73b0\u8fd8\u662f\u4e0a\u5348\u7684\u8003\u573a\uff0c\u4e0d\u8fc7\u6362\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u3002</p> <p>\u65c1\u8fb9\u7684\u4fe9\u5c0f\u54e5\u548c\u6211\u4e00\u4e2a\u59d3\uff0c\u800c\u4e14\u7b2c\u4e8c\u4e2a\u5b57\u90fd\u662fy\uff08</p> <p>\u5f00\u9898\u7684\u65f6\u5019\u6709\u70b9\u4e0d\u6b62\u6240\u9519\u3002</p> <p>\u8bfb\u4e8620min\u9898\uff0c\u611f\u89c9T1\u4f1a\u4e86\u4e00\u70b9\u70b9\uff0c\u5199\u4e86\u4e00\u4e0b\u53d1\u73b0\u4e0d\u5bf9\u53c8\u505c\u4e86\u3002</p> <p>T2 \u770b\u4e86\u4e00\u773c\u6570\u636e\u8303\u56f4\uff1a\\(n\\le 500\\)\u3002</p> <p>\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2a\u533a\u95f4DP\u5417\uff1f</p> <p>\u7ed3\u679c\u6211\u63a8\u7740\u63a8\u7740\u5c31\u53d1\u73b0\u4e0d\u5bf9\u52b2\uff0c\u8fd9\u73a9\u610f\u513f\u5c31\u662f\u90a3\u79cd\u4e00\u773c\u77e5\u9053\u600e\u4e48\u505a\u4f46\u5c31\u662f\u63a8\u4e0d\u51fa\u6765\u7684\u5927\u6076\u5fc3\u9898\u2026\u2026</p> <p>\u7136\u540e\u6211\u5c31\u50bb\u4e86\uff0c\u4f30\u8ba1\u8981\u7206\u96f6\u4e86\u2026\u2026</p> <p>\u7136\u540e\u8fd9\u65f6\u8fd8\u5269 3h40min \uff0c\u6211\u5c31\u5728\u4e0d\u65ad\u7684\u514b\u670d\u5fc3\u7406\u95ee\u9898\u3002</p> <p>\u5f53\u65f6\u8fc7\u4e8e\u7d27\u5f20\uff0c\u8111\u888b\u4e00\u7247\u7a7a\u767d\uff0c\u611f\u89c9\u81ea\u5df1\u8003\u524d\u590d\u4e60\u7684\u5565\u90fd\u5fd8\u8bb0\u4e86\uff0c\u800c\u4e14\u5957\u4e0d\u4e0a\u6765\u3002</p> <p>\u5927\u6982\u8fc7\u4e86 20min \u5de6\u53f3\uff0c\u6211\u60f3\u8d77\u6765\u81ea\u5df1\u5e26\u4e86\u51b0\u9547\u96ea\u78a7\uff08\u522b\u95ee\u4e3a\u4ec0\u4e48\u79cb\u5929\u5e26\u51b0\u9547\u7684\uff09\uff0c\u559d\u4e86\u4e00\u53e3\u4e4b\u540e\u5750\u4e86 5min \u51b7\u9759\u4e0b\u6765\u4e86\u3002</p> <p>\u6211\u89c9\u5f97\u6211\u4e0d\u5e94\u8be5\u6d6a\u8d39\u6211\u597d\u4e0d\u5bb9\u6613\u4e89\u53d6\u8fc7\u6765\u7684\u673a\u4f1a\uff0c\u8d77\u7801\u4e0d\u80fd\u8f9c\u8d1f\u6211\u81ea\u5df1\u3002</p> <p>\u4e4b\u540e\u7ec8\u4e8e\u5f00\u59cb\u5199T1\u4e86\u3002</p> <p>\u53d1\u73b0 T1 \u53ef\u80fd\u662f\u4e2a\u8d2a\u5fc3\u6216\u8005\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u4f46\u662f\u4e8c\u5206\u505a\u6cd5\u5f53\u65f6\u8003\u573a\u4e0a\u7d27\u5f20\u7a81\u7136\u8111\u62bd\u4e0d\u6562\u5199\u4e86\uff0c\u7136\u540e\u5c31\u5199\u4e86\u4e00\u4e2a\u8d2a\u5fc3+\u5206\u8ba8\u8fc7\u4e86\u5927\u6837\u4f8b\u3002</p> <p>\u7136\u540e\u5f53\u65f6\u5f00\u5fc3\u7684\u53eb\u4e86\u51fa\u6765\uff08\u4e0d\u662f\u5f88\u5927\u58f0\uff09\uff0c\u53c8\u5c0f\u58f0\u7684\u8bf4\u4e86\u4e00\u53e5\uff0c200pts\uff0c\u8fd9\u4e0b\u7a33\u4e86\uff08\u5f53\u65f6\u53e3\u8bef\u4e86\uff0c\u4e0d\u77e5\u9053\u6709\u54a9\u6709\u5f71\u54cd\u5230\u65c1\u8fb9\u4e24\u4f4d\u5c0f\u54e5\u7684\u5fc3\u6001\uff0c\u771f\u662f\u5bf9\u4e0d\u8d77\uff08\u3002</p> <p>\u7136\u540e\u8fc7\u4e8630s\u5c31\u51b7\u9759\u4e0b\u6765\uff0c\u5199\u4e86\u4e2a gen \u62cd\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u6709\u4e9b\u60c5\u51b5\u8fd8\u6709\u95ee\u9898\uff0c\u51b3\u5b9a\u90a3\u4e00\u90e8\u5206\u5c31\u9760\u6253\u66b4\u529b\u62ff\u5206\uff0c\u4f46\u662f\u53ea\u662f\u8fc7\u4e86\u5927\u6837\u4f8b\uff0cgen\u4e4b\u540e\u6ca1\u7528\u4e86\uff08\u56e0\u4e3a\u6211\u7740\u6025\u53bb\u63a8T2 \u5fd8\u8bb0\u56de\u6765\u62cdT1\u4e86\uff09\u3002</p> <p>\u4f30\u8ba1\u4f1a\u6302\u7684\u5f88\u60e8\uff0cT1 \u53ef\u80fd\u6700\u591a 40pts\u3002</p> <p>\u7136\u540e\u6211\u5f53\u65f6\u63a8\u4e0d\u51fa T2 \uff0c\u56e0\u4e3a\u4e0d\u4f1a\u5904\u7406 ASB \u7684\u60c5\u51b5\u3002</p> <p>\u8fd8\u81ea\u4ee5\u4e3a\u80fd\u968f\u4fbf\u641e\u51fa\u6765\u62ff 100pts</p> <p>\u7ed3\u679c\u6700\u540e\u5c31\u53ea\u80fd\u5199\u4e86\u4e00\u4e2a\u8fc7\u4e86\u2154\u4e2a\u5927\u6837\u4f8b\u7684\u4e1c\u897f\u4ea4\u4e0a\u53bb\u3002</p> <p>\u53c8\u5f00\u59cb\u7740\u6025\u4e86\uff0c\u7ee7\u7eed\u6765\u4e86\u4e00\u53e3\u96ea\u78a7\uff0c\u7136\u540e\u53bb\u770b\u4e86\u4e0b T3\uff0c\u4ee5\u4e3a\u7279\u6b8a\u6027\u8d28\u90a3\u90e8\u5206\u5206\u5f88\u597d\u62ff\uff0c\u4f46\u662f\u6211\u9519\u4e86\u3002</p> <p>\u8fd9\u65f6\u6211\u4e0d\u5f97\u4e0d\u9762\u5bf9\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u6211\u80af\u5b9a 100pts \u4e0d\u5230\u3002</p> <p>\u6211\u5c31\u5728\u60f3\uff0c\u6211\u4e3a\u5565\u8003\u8bd5\u7684\u65f6\u5019\u5565\u90fd\u4f1a\u5fd8\u8bb0\uff0c\u6211\u8fd8\u503c\u4e0d\u503c\u5f97\u7ee7\u7eedOI\u3002</p> <p>\uff08\u4ee5\u4e0b\u8fd9\u6bb5\u662f\u6211\u5185\u5fc3\u7684\u51e0\u6bb5\u5bf9\u767d\uff0c\u4e0d\u8bb0\u5f97\u662f\u5927\u6982\u4ec0\u4e48\u65f6\u5019\u60f3\u7684\u4e86\uff09</p> <p>\u6211\u611f\u89c9\u4e3a\u5565\u6211\u5565\u90fd\u4e0d\u4f1a\u554a\uff0c\u8fd9\u6302\u5206\u6302\u8fd9\u4e48\u5927\uff0c\u522b\u4eba\u540c\u673a\u623f\u7684\u4eba\u5747200+\uff0c\u6211\u56de\u53bb\u8fd8\u6709\u8138\u5417\u3002</p> <p>\u4e3a\u5565\u9694\u58c1\u5c0f\u54e5\u540e\u4e09\u9898\u90fd\u4f1a\u6253\u66b4\u529b\u554a\uff0c\u6211\u751a\u81f3\u8fde\u66b4\u529b\u90fd\u4e0d\u4f1a\u6253\u4e86\uff0c\u6211\u662f\u4e0d\u662f\u8be5\u9000\u5f79\u554a\u3002</p> <p>\u6211TM\u662f\u4e0d\u662f\u56e0\u4e3a\u6ca1\u6cd5\u9759\u4e0b\u6765\u60f3\u9898\u624d\u8fd9\u6837\u7684\u554a\uff1f\uff08\u559d\u53e3\u6c34\u63a8 T2\uff09\uff0c\uff08\u8fc7\u4e8610min \u53c8\u653e\u4e0b\u8349\u7a3f\uff09\u5b8c\u4e86\u3002</p> <p>\u8981\u4e0d\u5269\u4e0b\u8fd9 30min \uff0c\u6211\u5565\u90fd\u4e0d\u5199\u4e86\uff0c\u597d\u597d\u60f3\u60f3\u4e3a\u5565\u6211\u4f1a\u8fd9\u6837\u5427\uff0c\u4e5f\u7b97\u603b\u7ed3\u4e00\u4e0b\u4e86</p> <p>\u8fd9\u6b21\u5e72\u8106\u5c31\u7b97\u5403\u4e2a\u6559\u8bad\uff0c\u4e4b\u524d\u521d\u8d5b\u6302\u5206\u4e0d\u4e5f\u662f\u4e00\u6837\u7684\u5417\uff1f</p> <p>\u7136\u540e\u5c31\u5b8c\u4e86\uff0c\u6211\u51fa\u8003\u573a\u7684\u65f6\u5019\u9047\u89c1\u7684\u7b2c\u4e00\u4e2a\u673a\u623f\u4eba\u662f xyh\uff0c\u53ea\u6709\u4ed6\u548c\u6211\u662f\u521d\u4e09\u7684\u6765\u7ef5\u9633\u8003\u7684\u3002</p> <p>\u6211\uff1axyh\uff01</p> <p>x\uff1a\u548b\u6837\uff1f</p> <p>\u6211\uff1a\u6211pjtg\u90fd\u8003\u6302\u4e86</p> <p>x\uff1a\u5f7c\u6b64\u5f7c\u6b64\uff0c\u6211\u4e5f\u6302\u7684\u5f88\u60e8</p> <p>(\u8ba8\u8bba\u5f7c\u6b64\u62ff\u4e86\u591a\u5c11\u90e8\u5206\u5206\uff0c\u987a\u4fbf\u8ba8\u8bba\u4e0b\u505a\u6cd5)</p> <p>x\uff1a \u6211\u8fd9\u6b21\u5b8c\u4e86\u5c31\u8981\u9000\u5f79\u4e86</p> <p>\u6211\uff1a\u522b\u9000\u5f79\u554a\uff0c\u9000\u5f79\u5e72\u5565\uff0c\u53cd\u6b63\u6211\u6b7b\u4e5f\u4e0d\u9000\u5f79\u3002</p> <p>x\uff1a\u2026\u2026</p> <p>\uff08\u9a6c\u5148\u751f\u4ece\u65c1\u8fb9\u8d70\u8fc7\u53bb\uff0c\u4ed6\u4f3c\u4e4e\u5fc3\u60c5\u4e0d\u592a\u597d\uff0c\u53ef\u80fd\u662f\u8003\u6302\u4e86\uff09</p> <p>\u51fa\u6821\u95e8\u4e4b\u540eXyh\u7684\u7236\u4eb2\u95ee\u6211\u5982\u4f55\uff1a</p> <p>\u6211\uff1a\u90fd\u8003\u6302\u4e86\u2026\u2026</p> <p>Xyh\u7684\u7236\u4eb2\uff1a\u4f60\u592a\u8c26\u865a\u4e86\uff0c\u600e\u4e48\u53ef\u80fd\u5417\u2026\u2026</p> <p>\u6211\uff1a\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\uff08\u8fc7\u4e86\u51e0\u79d2\uff09\uff0c\uff08\u62cdxyh\uff09\u7b54\u5e94\u6211\u4e0d\u8981\u9000\u5f79\u554a\uff01</p> <p>Xyh\u7236\u4eb2\uff1a\u9000\u5f79\u662f\u5565\u610f\u601d\uff08\u95eexyh\uff09</p> <p>\u7136\u540e\u6211\u5c31\u8d70\u4e86</p> <p>\u56de\u5bb6\u5230 Academic Group \u91cc\u9762\u95ee\u4e86\u95ee\uff0c\u53d1\u73b0\u5927\u5bb6\u90fd\u6302\u7684\u5f88\u60e8\u3002</p> <p>\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e Dave,Turtle,ACO,Ty,Charles \u2026\u2026</p> <p>\u7136\u540e FST \u7fa4\u4e5f\u5728\u8ba8\u8bba\u6302\u5206\u7684\u4e8b\u513f\u2026\u2026</p> <p>Xcel \u9000\u7fa4\u4e86\uff0c\u4ed6\u8bf4\u4ed6\u548c\u4ed6\u7236\u6bcd\u5546\u91cf\uff0c\u51c6\u5907AFO\u4e86\uff0c\u795d\u4ed6\u597d\u8fd0\u3002</p> <p>\u6211\u89c9\u5f97\u5427\uff0c\u4e0d\u7ba1\u62ff\u4e0d\u62ff\u5956\uff0c\u603b\u7ed3\u4e00\u4e0b\u662f\u5f88\u6709\u5fc5\u8981\u7684\uff1a</p> <ul> <li>\u5fc3\u6001\u95ee\u9898\u592a\u5927\uff0c\u8003\u8bd5\u7684\u65f6\u5019\u5b8c\u5168\u6ca1\u6709\u6a21\u62df\u8d5b\u65f6\u5019\u7684\u90a3\u79cd\u81ea\u4fe1\uff0c</li> <li>\u4eba\u6bd4\u8f83\u6d6e\u8e81\uff0c\u6ca1\u6cd5\u4e13\u5fc3\u7684\u505a\u4e8b\u60c5\uff08\u8fd9\u4e2a\u662f\u5927\u95ee\u9898\uff0cwhk\u4e0a\u4e5f\u9700\u8981\u6539\uff09</li> <li>\u611f\u89c9\u81ea\u5df1\u8fd8\u662f\u5728\u4e3a\u4e86\u522b\u4eba\u7684\u79f0\u8d5e\u800c\u6d3b\uff0c\u6d3b\u4e0d\u51fa\u81ea\u5df1\u7684\u6d12\u8131\uff08\u8fd9\u4e5f\u662f\u4e2a\u5927\u95ee\u9898\uff09</li> <li>\u6c34\u5e73\u8fd8\u771f\u7684\u4e0d\u591f\u3002</li> </ul> <p>\u51b3\u5b9a\u4e4b\u540e\u8fd9\u4e00\u5e74\u9700\u8981\u505a\u8fd9\u4e9b\u4e8b\u513f\uff1a</p> <p>\u8fd9\u6b21\u5fc5\u987b\u8981\u5b8c\u6210\u4e86</p> <ul> <li>\u521d\u8d5b\u4fdd\u969c 95pts</li> <li>CF \u601d\u7ef4\u9898\u9898\u5355 AK+Solution</li> <li>\u63d0\u9ad8 algor \u5168\u90e8\u5b66\u5b8c + \u4e00\u70b9\u7701\u9009\u57fa\u7840</li> <li>\u8865\u5b8c RFJ \u9898\u5355\u3002</li> <li>CF &amp; AT VP 50+</li> <li>CF &amp; AT RC 15+</li> <li>\u6a21\u62df\u8d5b 10+</li> </ul> <p>\u4eca\u5e74\u6b62\u6b65\u4e8e\u6b64\uff0c\u660e\u5e74\u6211\u56de\u6765\u7684\u65f6\u5019\u8981\u8ba9\u60a8\u4eec\u770b\u5230\u6211\u6700\u9ad8\u7684\u5b9e\u529b\uff01</p>"}, {"location": "misc/CSP2022/", "title": "CSP2022", "text": ""}, {"location": "misc/CSP2022/#csp2022", "title": "CSP2022 \u6e38\u8bb0", "text": ""}, {"location": "misc/CSP2022/#_1", "title": "\u4e45\u8fdc\u7684\u8fc7\u53bb", "text": "<p>\u9000\u5f79\u4e86\u3002</p> <p>\u6587\u5316\u8bfe\u4e86\u3002</p> <p>\u4e1a\u4f59\u4f11\u95f2\u9009\u624b\uff0c\u7814\u7a76\u4e86\u4e00\u70b9\u57fa\u7840\u7684\u4e1c\u897f\uff0c\u7b97\u662f\u7ed9\u4e4b\u524d\u8fd8\u503a\u4e86\u3002</p> <p>\u81ea\u5df1\u7684\u8ba1\u5212\u5b8c\u6210\u5ea6\u8fd8\u662f\u5f88\u4f4e\u3002\u3002\u3002</p>"}, {"location": "misc/CSP2022/#916", "title": "9.16\uff0c\u521d\u8d5b\u524d\u4e24\u5929", "text": "<p>\u505a\u4e86\u5957\u521d\u8d5b\u6a21\u62df\u5377\u5b50\uff0c\u4eff\u771f\u4e86\u7ebf\u4e0a\u73af\u5883\uff0c\u4e0d\u8fc7\u62ff\u5230\u5377\u5b50\u5df2\u7ecf\u5f00\u59cb 20min\u591a\u4e86\uff0c\u56e0\u4e3a\u6ca1\u6709\u63d0\u524d\u8c03\u8bd5\u597d\u8bbe\u5907\u3002</p> <p>\u8003\u4e86\u4e2a 75.5\uff0c\u6bd4\u4e4b\u524d\u90fd\u597d\uff0c\u4e0d\u8fc7\u53ef\u80fd\u6709\u8fd0\u6c14\u6210\u5206\u3002</p> <p>\u5341\u516d\u8fdb\u5236\u90a3\u9898\u8499\u5bf9\u4e86\uff0c\u51e0\u4e2a\u7ec4\u5408\u6570\u5b66\u9898\u505a\u5bf9\u4e86\uff0c15 \u9898\u5bb9\u65a5+\u6570\u8bba\u6ca1\u6765\u5f97\u53ca\u7b97\u3002</p> <p>\u4f46\u662f\u975e\u5e38\u751f\u6c14\u554a\uff0c\u4e4b\u524d\u81ea\u5df1\u5b66\u4e86\u63d2\u677f\u6cd5\u8fd8\u7ed9 OI-wiki \u5199\u4e86\u63d2\u677f\u6cd5\u7684\u5185\u5bb9\uff0c\u7ed3\u679c\u63d2\u677f\u6cd5\u7684\u9001\u5206\u586b\u7a7a\u9898\u6ca1\u505a\u5bf9\u3002</p> <p>\u7136\u540e\u7b2c\u56db\u9898\u90a3\u4e2a\u7b80\u5355\u5206\u8ba8\u7ec4\u5408\uff0c\u56e0\u4e3a tm \u7684\u628a\u7ec4\u5408\u6570\u548c\u6392\u5217\u6570\u516c\u5f0f\u5f04\u6df7\u4e86\u81ea\u5df1\u6ca1\u53d1\u73b0\uff0c\u6655\u5934\u6655\u8111\u7684\u3002</p> <p>\u7136\u540e\u611f\u89c9\u5bf9\u4e8e \u91cd\u590d\u8ba1\u6570 \u8fd9\u4e2a\u65b9\u9762\u72af\u9519\u5f88\u591a\uff0c\u611f\u89c9\u6709\u7684\u65f6\u5019\u6ca1\u6cd5\u7406\u89e3\uff0c\u4e4b\u540e\u8981\u591a\u7ec3\u4e60\u3002</p> <p>\u4e3b\u5b9a\u7406\u90a3\u4e2a\u9898\u5e94\u8be5\u79d2\u6740\u7684\uff01\u8fd8\u662f\u82b1\u4e86\u4e00\u70b9\u70b9\u65f6\u95f4\u3002</p> <p>\u56db\u8272\u5b9a\u7406\u90a3\u4e2a\u9898\u6ca1\u641e\u61c2\uff0c\u56e0\u4e3a\u91cd\u590d\u8ba1\u6570\u3002\u3002\u3002\uff0c\u4e4b\u540e\u5199\u5230\u6570\u5b66\u7684\u9519\u9898\u672c\u4e0a\u9762\u5427\u3002</p> <p>\u7136\u540e tm \u7684\u6ca1\u8010\u5fc3\u5206\u6790\u7a0b\u5e8f\u5b8c\u578b\u90a3\u4e2a\u4f18\u5148\u961f\u5217\u9898\u3002</p> <p>\u611f\u89c9\u603b\u4f53\u8fd8\u662f\u7d27\u5f20\u4e86\uff0c\u4e0d\u8fc7\u5fc3\u6001\u8f83\u4e8e\u4e4b\u524d\u81ea\u4fe1\u4e86\u5f88\u591a\uff0c\u800c\u4e14\u51ed\u7740\u7b2c\u4e00\u76f4\u89c9\u8499\u5bf9\u4e86\u4e0d\u5c11\uff01\u3002</p> <p>\u660e\u5929\u6a21\u62df\u7684\u65f6\u5019\u51c6\u5907\u591a\u4e00\u70b9\u6c34\uff0c\u7136\u540e\u4e00\u5305\u6e7f\u7eb8\u5dfe\u7528\u6765\u51b7\u9759\uff0c\u7136\u540e\u8349\u7a3f\u7eb8\u5c3d\u91cf\u6709\u6761\u7406\u4e00\u70b9\u3002</p> <p>\u6709\u4e00\u4e9b\u516c\u5f0f\u4ec0\u4e48\u7684\uff0c\u5982\u679c\u81ea\u5df1\u611f\u89c9 \u5370\u8c61\u6709\u70b9\u6a21\u7cca\u4e86 \uff0c\u4e00\u5b9a\u8981\u5199\u51fa\u6765\uff01</p> <p>\u7136\u540e\u66b4\u529b\u4eba\u5de5\u6808\u8bb0\u5f97\u5f04\u6210\u4ee3\u7801\u7f29\u8fdb\u5f0f\u7684\u3002</p> <p>\u4eca\u5929\u8bbe\u5907\u51fa\u4e86\u4e00\u70b9\u95ee\u9898\uff0cIpad \u5f55\u5c4f\u7a7a\u95f4\u4e0d\u591f\uff0c\u800c\u4e14\u62cd\u6444\u4f4d\u7f6e\u4e0d\u591f\u6e05\u6670\u3002</p> <p>\u800c\u4e14\u8fdb\u53bb\u7684\u5306\u5306\u5fd9\u5fd9\u7684\u3002\u3002\u3002\u3002\u3002\u4e0d\u8fc7\u4e5f\u597d\uff0c\u7b97\u662f\u4e00\u4e2a\u53cd\u4f8b\u4e86\u3002</p> <p>\u5199\u5b8c\u65e5\u8bb0\u5c31\u53bb\u7761\u89c9\u4e86\u3002</p>"}, {"location": "misc/CSP2022/#917", "title": "9.17\uff0c\u521d\u8d5b\u524d\u4e00\u5929", "text": "<p>\u5403\u4e86\u7897\u70ed\u5e72\u9762+\u714e\u86cb\uff08\u70ed\u5e72\u9762\u662f\u4e4b\u524d\u5c01\u57ce\u7684\u65f6\u5019\u4e70\u7684\uff09</p> <p>\u53c8\u505a\u4e86\u4e00\u5957\u521d\u8d5b\u6a21\u62df\u5377\u5b50\uff0c\u8fdb\u53bb\u53c8\u662f 10 min \u591a\u4e86\uff0c\u56e0\u4e3a\u4ee5\u4e3a\u4e0d\u5f04\u7ebf\u4e0a\u3002</p> <p>\u8fd9\u6b21\u9898\u8981\u96be\u5f97\u591a\uff0c\u4e0d\u8fc7\u8003\u7684\u66f4\u9ad8\u4e86\uff0c81.5\uff0887.5\uff09\uff0c\u56e0\u4e3a\u6700\u540e\u68c0\u67e5\u4e0d\u4ed4\u7ec6\u586b\u9519\u4e86\u4e24\u4e2a 3 \u5206\u7684\u7a7a\uff0c\u4e8e\u662f\u5c11\u4e86 6pts\u3002</p> <p>\u4e0d\u7136\u80fd rk4\uff0c\u73b0\u5728\u53d8\u6210 rk8 \u4e86 /ng\uff0cxzq \u53c8\u4e00\u6b21\u767b\u9876 rk1 \u4e86\u3002\u3002\u3002\u3002\u3002\u5f3a</p> <p>\u7136\u540e\u6574\u4f53\u5fc3\u6001\u5f88\u4e0d\u9519\uff0c\u5c31\u662f\u4e00\u8def\u60a0\u95f2\u5730\u54fc\u7740\u6b4c\u505a\u5b8c\u7684\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6628\u665a\u8003\u51fa\u4fe1\u5fc3\u4e86\u5427\u3002</p> <p>T3 \u90a3\u4e2a\u6b27\u62c9\u56de\u8def\u7684\u5b9a\u4e49\u770b\u8d70\u773c\u4e86\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5bf9\u201c\u95ed\u8def\u201d\u7684\u7406\u89e3\u9519\u4e86\u3002</p> <p>\u7136\u540e T7 \u90a3\u4e2a\u5173\u4e8e TCP \u7f51\u7edc\u534f\u8bae\u7684\uff0c\u56e0\u4e3a\u6ca1\u6709\u80cc\u8fc7\u9020\u7403\u4e86\u3002</p> <p>\u7ec4\u5408\u6570\u5b66\u9898\u4f9d\u7136\u7a33\u5b9a\u53d1\u6325\u5168\u505a\u5bf9\u3002</p> <p>\u4e00\u4e2a\u5904\u7406\u77e9\u9635\u7684\u9898\uff0c\u6709\u70b9\u6ca1\u5fc3\u6c14\u8bfb\uff0c\u6700\u540e\u4e00\u9898\u662f\u677f\u677f\u6811\u5256\uff0c\u9ca8\u5375\u3002</p> <p>T15 \u90a3\u4e2a\u8fd0\u7b97\u7b26\u987a\u5e8f\u4f9d\u7a00\u8bb0\u5f97 <code>mod</code> \\(&gt;\\) <code>+</code> \\(&gt;\\) <code>xor</code>\uff0c\u7ed3\u679c\u5bf9\u4e86\uff0c\u4e4b\u540e\u9700\u8981\u8bb0\u4e00\u8bb0\u4e86\u3002</p> <p>\u9605\u8bfb\u7b2c\u4e00\u9898\u90a3\u4e2a\u6784\u9020 \\(a_i = cnt(i)\\) \u7684\u65b9\u6848\u6570\u7684\u9898\u5f88\u6709\u610f\u601d\uff0c\u8bf4\u4e0d\u5b9a\u53ef\u4ee5\u62ff\u6765\u51fa CF\u3002</p> <p>\u7136\u540e\u90a3\u4e2a\u9898\u6700\u540e\u4e24\u95ee\u5168\u90e8\u9519\u5b8c\uff0c\u96be\u8fc7\uff0c\u4f46\u662f \\(\\sum a_i = n\\) \u7684\u7ed3\u8bba\u597d\u50cf\u662f\u5bf9\u7684\uff1f\uff1f\uff1f\u795e\u5947</p> <p>\u8fd8\u6709\u5c31\u662f\u505a\u9898\u901f\u5ea6\u6709\u70b9\u6162\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u53ef\u80fd\u662f\u592a\u95f2\u4e86\u7684\u7f18\u6545\u3002\u3002\u3002\u3002\u3002</p> <p>1h20m \u624d\u505a\u5b8c\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u4e2a\u6691\u5047\u7684\u52aa\u529b\u80af\u5b9a\u662f\u56e0\u7d20\u4e4b\u4e00\u5427\uff0c\u5728\u6709\u5f88\u91cd\u7684 whk \u538b\u529b\u7684\u540c\u65f6\u8fd8\u4ecd\u7136\u4fdd\u6301 OI\uff0c\u6bd4\u6211\u4e4b\u524d\u6d51\u6d51\u5669\u5669\u7684\u505c\u8bfe\u4e09\u4e2a\u6708\u6709\u6548\u591a\u4e86\u3002</p> <p>CodeForces Rating \u4e5f\u662f\u3002</p> <p>\u7136\u540e\u8bbe\u5907\u8c03\u8bd5\u7684\u5dee\u4e0d\u591a\u4e86\u3002</p> <p>\u6628\u5929\u603b\u7ed3\u7684\u5fc3\u6001\uff0c\u601d\u8def\uff0c\u8349\u7a3f\u95ee\u9898\u4eca\u5929\u90fd\u89e3\u51b3\u4e86\u3002</p> <p>\u53cd\u6b63\u5c31\u50cf\u6211\u7238\u5988\u8bf4\u7684\uff1a\u4e0d\u7ba1\u662f NOIP\uff0c\u9ad8\u8003\uff0c\u8fd8\u662f\u4ec0\u4e48\u8003\u8bd5\uff0c\u7528\u4f60\u7684\u5e73\u5e38\u5fc3\u5bf9\u5f85\uff08\u751a\u81f3\u544a\u8bc9\u6211\u9ad8\u8003\u7684\u65f6\u5019\u8ba9\u6211\u81ea\u5df1\u8d70\u8def\u53bb\u4e0d\u9001\u6211\uff08\uff08\uff08\uff08\uff08\uff08</p> <p>\u5728 luogu \u4e0a\u9762\u56de\u7b54\u4e86\u51e0\u4e2a\u5c0f\u670b\u53cb\u7684\u95ee\u9898\uff0c\u7b97\u662f\u590d\u4e60\u3002</p> <p>\u4e0b\u5348\u8fd8\u6709\u4e00\u5957 hb \u7684\u6a21\u62df\uff0c\u628a Osu \u4e0b\u56de\u6765\u4e86\uff0c\u6253\u5b8c\u5982\u679c\u8fd8\u884c\u9893\u4e00\u628a\u3002</p> <p>\u5988\u7684\uff0c\u6253\u5b8c\u5b8c\u5168\u5410\u6389\u4e86\u3002</p> <p>\u53ea\u6709 36 pts\u3002</p> <p>\u9605\u8bfb\u7a0b\u5e8f\u5b8c\u5168\u88ab\u51fb\u98de\uff0c\u7ec4\u5408\u6570\u5b66\u9898\u5168\u90e8\u5bc4\u5b8c\u3002</p> <p>\u611f\u89c9\u662f\u5fc3\u6001\u5b8c\u5168\u7206\u70b8\u7684\u7f18\u6545\uff0c\u76f4\u63a5\u6ca1\u6709\u5fc3\u6c14\u8bfb\u9898\u4e86\u3002</p> <p>\u51e0\u4e2a\u7ec4\u5408\u6570\u5b66\u9898\u5f88\u6709\u610f\u601d\uff0c\u5f00\u4e86\u4e00\u4e2a\u5c0f\u4e13\u9898\u7528\u6765\u8bb0\u5f55\uff0c\u7136\u540e\u7a0d\u5fae\u6539\u4e86\u6539\u535a\u5ba2\u67b6\u6784\uff0c\u52a0\u4e86 Comment System\u3002</p> <p>\u6700\u540e\u9762\u90a3\u51e0\u4e2a\u9605\u8bfb\u771f\u7684\u662f\u5657\u53fd\u7b97\u6cd5\u5e72\u7206\u4e00\u5806\u4eba\u554a\u3002\u3002\u3002\u3002</p> <p>\u771f\u7684\u96be\u8bfb\u9898\uff0c\uff0c\uff0c\uff0c\u6700\u540e\u4e00\u9898\u5176\u5b9e\u672c\u8d28\u4e0a\u662f ODT\uff0c\u6709\u4e00\u4e2a\u6211\u778e\u731c\u7684\u9898\u5c45\u7136\u662f\u5947\u602a\u7684\u6c42\u6b27\u62c9\u8def\u3002\u3002\u3002</p> <p>\u7136\u540e\u53c8\u81ed\u53c8\u957f\u7684 dp\uff0c\u6bd4\u8f83\u9633\u95f4\u4f46\u662f\u5fc3\u6c14\u4e0d\u884c\u76f4\u63a5\u6302\u6389\u4e86\uff0c\u4e00\u4e9b\u603b\u7ed3\u597d\u7684\u4e60\u60ef\u4e5f\u6ca1\u6709\u7528\u4e0a\u3002</p> <p>\u660e\u5929\u4e00\u5b9a\u8981\u5173\u7a97\u7136\u540e\u5f00\u4e2a\u7a7a\u8c03\uff0c\u4fdd\u6301\u6e05\u9192\uff0c\u907f\u5f00\u697c\u4e0b\u5fd7\u613f\u8005\u90a3\u4e2a\u5faa\u73af\u4e00\u4e2a\u5c0f\u65f6\u7684\u5e7f\u64ad\ud83d\ude05\u3002</p> <p>\u665a\u4e0a\u5c31\u662f\u542c\u4f73\u7238\u8bb2\u9898\uff0c\u7136\u540e\u505a\u4e00\u4e0b\u7ec4\u5408\u6570\u5b66\u7684\u4e00\u4e9b\u8bb0\u5f55\u4e4b\u7c7b\u7684\uff0c\u7136\u540e\u5f04\u4e86\u4e00\u4e2a\u521d\u8d5b\u6ce8\u610f\u4e8b\u9879\u3002</p>"}, {"location": "misc/CSP2022/#918", "title": "9.18 \u521d\u8d5b", "text": "<p>\u4e0a\u5348\u5403\u4e86\u70ed\u5e72\u9762 + \u4e24\u4e2a\u86cb\uff0c\u6628\u5929\u5403\u4e86\u4e00\u4e2a\u86cb\uff0c\u53ea\u8003\u597d\u4e86\u4e00\u6b21\uff0c\u4eca\u5929\u5403\u4e86\u4e24\u4e2a\u86cb\uff0c\u90a3\u5c31\u662f\u8003\u597d\u4e24\u6b21\uff08\u786e\u4fe1</p> <p>\u5657\u53fd\u7ec4\u6574\u4f53\u96be\u5ea6\u4e0d\u662f\u5f88\u5927\u5427\uff0c\u53ef\u80fd 1h \u5de6\u53f3\u5269\u4e86\u51e0\u4e2a\u9898\uff0c\u7136\u540e\u6162\u6162\u78e8\u3002</p> <p>\u6709\u4e00\u4e9b\u9898\u4e0d\u662f\u5f88\u786e\u5b9a\uff0c\u6bd4\u5982 Haffman\uff0cdouble \u7684\u7cbe\u5ea6\uff08\u725b\u987f\u8fed\u4ee3\u5f00\u6839\u53f7\u90a3\u4e2a\u9898\uff09\uff08pj \u600e\u4e48\u4f1a\u6709\u725b\u8fed\u554a\uff01</p> <p>\u7136\u540e\u6574\u4f53\u90fd\u5f88\u6c34\uff0c\u8fde\u4e2a\u6570\u6570\u9898\u6ca1\u6709\u3002</p> <p>\u4e0d\u8fc7\u4e2d\u95f4\u53d7\u5230\u9632\u7a7a\u8b66\u62a5\u7684\u5e72\u6270\u4e86\uff0c\u4e5f\u6ca1\u4e8b\uff0c\u8fd9\u662f\u5fc5\u987b\u8981\u653e\u7684\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u662f\u8981\u5f00\u7b54\u9898\u673a\u5668\u7684\u9ea6\u7684\uff0c\u4e8e\u662f\u4f1a\u6709\u70b9\u5435\uff0c\u6211\u628a\u7b54\u9898\u673a\u5668\u97f3\u91cf\u8c03\u5c0f\u4e86\u4e00\u70b9\u70b9\uff0c\u662f\u5728\u6211\u80fd\u542c\u5230\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd\u6211\u7684\u97f3\u91cf\u4e0a\u3002</p> <p>\u540e\u9762\u6709\u4e00\u4e2a\u5c0f\u670b\u53cb\u76f4\u63a5\u53eb\u51fa\u6765\uff1a\u201c\u600e\u4e48\u8fd9\u4e48\u96be\uff01\uff1f\uff1f\uff1fOh No\uff01\uff01\uff01\uff01\u201d</p> <p>\u8349\uff0c\u53ef\u80fd\u662f\u6ca1\u89c1\u8bc6\u8fc7\u524d\u4e24\u5e74\u7684 PJ\uff0c\u4eca\u5e74\u603b\u4f53\u4e0a PJ \u6bd4\u53bb\u5e74\u7b80\u5355\u591a\u4e86\u3002</p> <p>80+ \u5e94\u8be5\u662f\u6ca1\u6709\u95ee\u9898\u7684\u4e86\uff0c\u8fc7\u521d\u8d5b\u5e94\u8be5\u53ef\u4ee5\uff0c\u8d5b\u540e\u8dd1\u4e86\u4e00\u8dd1\u725b\u987f\u8fed\u4ee3\uff0c\u53d1\u73b0\u5b83\u4e0d\u662f\u7528 eps \u800c\u662f\u76f4\u63a5 ==\uff0c\u663e\u7136\u6709\u95ee\u9898\u4f46\u662f\u6211\u5f53\u65f6\u6ca1\u6709\u770b\u51fa\u6765\uff01</p> <p>\u7136\u540e\u5403\u4e86\u987f\u597d\u7684\uff0c\u53bb\u7761\u4e86\u4e2a\u89c9\uff0c\u51c6\u5907\u4e0b\u5348\u7684 TG\u4e86\u3002</p> <p>\u8bb0\u4f4f\uff0c\u8981\u953b\u70bc\u7684\u5c31\u662f\u4e0d\u88ab\u5916\u90e8\u73af\u5883\u5f71\u54cd\u5fc3\u6001/\u601d\u8003/\u601d\u8def\u7684\u80fd\u529b\uff0c\u53ea\u8981\u94bb\u8fdb\u53bb\u601d\u8003\u5c31\u884c\u4e86\uff01</p> <p>\u7edd\u5bf9\u4e0d\u8981\u81ea\u5df1\u89c9\u5f97\uff0c\u597d\u96be\u554a~~\uff0c\u8fd9\u6837\u662f\u8d1f\u9762\u7684\u5fc3\u7406\u6697\u793a\u3002</p> <p>\u60f3\u7740\uff0c\u6211\u5c31\u7b97\u8fc7\u4e0d\u4e86\uff0c\u4e5f\u6743\u5f53\u4eab\u53d7\u6bd4\u8d5b\u4e86\uff0c\u6211\u80af\u5b9a\u8981\u9759\u4e0b\u5fc3\u6765\u53bb\u8bfb\u7a0b\u5e8f\uff0c\u4e0d\u8981\u82b1\u65f6\u95f4\u5728\u6ca1\u6709\u601d\u8003\u7684\u6263\u624b\u4e0a\u9762\u3002</p> <p>\u53ea\u8981\u6ca1\u601d\u8def\u4e86\uff0c\u4e0d\u662f\u8df3\u8fc7\u5c31\u662f\u7528\u7b14\u5f00\u59cb\u5199\u53ef\u80fd\u601d\u8def\uff01</p> <p>\u53cd\u6b63\u653e\u5e73\u5fc3\u6001\u3002</p> <p>\u4e0b\u5348\u5f00\u8003\uff0c\u63d0\u65e9\u8fdb\u8003\u573a\uff0c\u53d1\u73b0\u548c gjh \u4e00\u4e2a\u8003\u573a\uff0c\u90ed\u54e5\u592a\u5e05\u4e86 /se/se/se</p> <p>\u7136\u540e\u5c31\u5f00\u59cb\u505a\uff0c\u5f00\u59cb\u7684\u65f6\u5019\u611f\u89c9\u9009\u62e9\u9898\u6bd4\u8f83\u96be\uff0c\u7136\u540e\u7b80\u5355\u505a\u4e86\u51e0\u9898\u5c31\u5148\u770b\u540e\u9762\u7a0b\u5e8f\u90e8\u5206\u4e86\u3002</p> <p>\u7136\u540e\u770b\u5230 <code>j = 0; j &lt; n; j *= 2</code> \u76f4\u63a5\u868c\u57e0\uff1f\uff1f\uff1f\uff1f</p> <p>\u7136\u540e\u6211\u731c\u4e4b\u540e\u4f1a\u6539\u6210 1\uff0c\u9009\u4e86 \\(\\log\\) \u76f4\u63a5\u8dd1\u8def\uff0c\u540e\u9762\u786e\u5b9e\u6539\u4e86\u3002</p> <p>\u770b\u5230\u540e\u9762\u7684\u9898\u6bd4\u8f83\u7b80\u5355\u4e4b\u540e\u6e9c\u56de\u53bb\u9759\u4e0b\u5fc3\u770b\u9009\u62e9\u4e86\u3002</p> <p>\u7136\u540e\u88ab 10 \u9898\u868c\u57e0\u4e86\uff0c\u6211\u600e\u4e48\u7b97\u90fd\u662f 105\uff0c\u5361\u4e86 20min\uff0c\u53ea\u80fd\u968f\u4fbf\u9009\u4e86\u4e00\u4e2a\u7b54\u6848\u8d70\u4eba\u3002</p> <p>\u7ed3\u679c\u51fa\u9898\u4eba\u8bed\u6587\u53ef\u80fd\u662f\u9003\u8bfe\u4e86\uff0c\u6839\u672c\u6ca1\u8bf4\u6e05\u695a\u5927\u4f5c\u4e1a\u662f tm \u51e0\u4e2a\u4eba\u505a\u554a\uff01\u539f\u6765\u7b54\u6848\u76f4\u63a5\u5c31\u662f \\(\\dbinom{8}{2}\\) \u554a \uff01</p> <p>md\u3002</p> <p>\u7136\u540e\u540e\u9762\u9605\u8bfb T1 \u4ee5\u4e3a\u662f\u4e2a KMP\uff0c\u5fd8\u8bb0\u4e86\uff0c\u540e\u9762\u53d1\u73b0 KMP \u597d\u50cf\u662f\u8981\u8df3 Next \u7684\uff0c\u8fd9\u4e2a\u6ca1\u6709\u8df3\u3002</p> <p>\u7136\u540e\u6539\u4e86\u4e00\u4e0b\u6700\u540e\u4e00\u95ee\u7684\u7b54\u6848\uff0c\u4f46\u662f\u6ca1\u6765\u5f97\u53ca\u624b\u5b8c\u4e00\u4e0b\uff0c\u7136\u540e\u590d\u6742\u5ea6\u5c31\u6ca1\u6539\u8fc7\u6765\u3002\u3002\u3002</p> <p>\u770b\u7740\u9605\u8bfb T2 \u641e\u4e86\u4e00\u4f1a\uff0c\u53d1\u73b0\u662f\u4e2a\u8fdb\u5236\u8f6c\u6362\uff0c\u5feb\u4e50\u505a\u5b8c\u8d70\u4eba\u3002</p> <p>\u4f46\u662f\u6ca1\u770b\u5230 28 \u7684 n \u6ca1\u6709\u52a0\u7edd\u5bf9\u503c\uff0cmd\uff0c\u5751\u4eba\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01</p> <p>\u6700\u540e\u4e00\u9898\u7b97\u9519\u4e86/ng</p> <p>\u5f52\u5e76\u7b2c k \u5c0f\u6ca1\u7406\u89e3\u592a\u6e05\u695a\uff0c\u9519\u4e86\u4e24\u4e2a\u3002</p> <p>\u6700\u540e\u4e00\u9898\uff0c\u53bb\u5e74\u56db\u6bdb\u5b50\u5728\u8fd9\u91cc\uff0c\u7ed3\u679c\u600e\u4e48\u662f\u4e2a\u9ca8\u5375 dp \uff1f\uff1f\uff1f\uff1f\uff1f</p> <p>\u8d5b\u540e\u6d4b\u7b54\u6848\uff0c\u5bf9\u4e86 U \u7fa4\u7684\u7b54\u6848\uff0c\u7136\u540e\u53d1\u73b0\u662f 63.5\uff1f\uff1f\uff1f\uff1f</p> <p>\u5988\u7684\u5bc4\u4e86\u554a\uff0c\u5f00\u59cb\u751f\u6c14\uff01\uff01\uff01</p> <p>\u540e\u9762\u51fa\u53bb\u7406\u53d1\uff0c\u7ed3\u679c\u4e00\u8def\u5012\u9709\uff0c\u5148\u662f\u8fde\u7740\u9047\u5230\u4e24\u4e2a\u7eff\u706f\u7a81\u7136\u53d8\u7ea2\uff0c</p> <p>\u7136\u540e\u53c8\u662f\u7406\u53d1\u5e97\u5168\u6ee1\u4eba\u3002</p> <p>\u56de\u6765\u5feb\u8fdb\u5c0f\u533a\u4e86\u8001\u7238\u624d\u8bf4\u8ba9\u6211\u53bb\u9633\u53f0\u90a3\u8fb9\uff0c\u628a\u6211\u7684\u516c\u4ea4\u5361\u63a5\u4f4f\u53bb\u51b2\u5361\u3002</p> <p>\u7ed3\u679c\u53d1\u73b0\u6691\u5047\u8865\u8bfe\u7684\u65f6\u5019\u5df2\u7ecf\u51b2\u4e86 30 \u591a\u5757\u4e86\uff0c\u56e0\u4e3a\u5f53\u65f6\u7684\u75ab\u60c5\uff0c\u5c31\u6ca1\u7528\u3002</p> <p>\u7136\u540e\u5c31\u5404\u79cd\u5012\u9709\u3002\u3002\u3002\u3002</p> <p>\u6211\u5f53\u65f6\u5728\u60f3\uff0c\u4e5f\u8bb8\u662f\u4e0b\u5348 rp \u7528\u5b8c\u4e86\uff0c\u4e8e\u662f\u4eba\u54c1\u8fd9\u4e48\u70c2\u3002</p> <p>\u7136\u540e\u56de\u6765\u5403\u4e86\u4e2a\u996d\u3002</p> <p>\u53bb\u5c0f\u56fe\u7075\u5bf9\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0 79 \uff1f\uff1f\uff1f</p> <p>\u8fc7\u4e86\u4e00\u4f1a\u53d1\u73b0\u597d\u50cf\u6211\u7528 U \u7fa4\u7684\u7b54\u6848\u7b97\u9519\u4e86\uff01\uff01\uff01\uff01</p> <p>\u4ed4\u7ec6\u9a8c\u8bc1\u53d1\u73b0\u786e\u5b9e\uff01\uff01\uff0170\u5e94\u8be5\u6709\u4e86\uff01\uff01\uff01\uff01\uff01\uff08\u5982\u679c\u4e89\u8bae\u9898\u518d\u7ed9\u70b9\u5206\u5c31\u597d\u4e86\uff01\uff01\uff011\uff09</p> <p>\u4e5f\u8bb8\u80fd\u8fc7\u5427\uff0c\u7136\u540e \u5657\u53fd\u53ef\u80fd\u56e0\u4e3a\u778e\u8003\uff0c\u5927\u6982\u7387\u53c8\u6ca1\u6709 tg \u9ad8/ng</p> <p>\u4e0d\u8fc7\u8fd9\u6b21 pj\uff0ctg\u90fd\u6bd4\u4e4b\u524d\u9ad8\u4e86 10pts\u5de6\u53f3\uff0c\u4e5f\u7b97\u8fdb\u6b65\u4e86\u3002</p> <p>\u4e4b\u524d\u7b2c\u4e00\u6b21\u53ea\u8003\u4e86 J1\uff0c\u6ca1\u8fc7\uff0c\u7b2c\u4e8c\u6b21\u8003\u4e86 J1\uff0cS1\uff0c\u90fd\u6ca1\u8fc7\u3002</p> <p>\u7b2c\u4e09\u6b21\u53ea\u8fc7\u4e86 S1\uff0cJ1 \u9760\u7740\u5956\u52b1\u540d\u989d\u8fdb\u53bb\u4e86\u3002</p> <p>\u8fd9\u6b21\u4e5f\u8bb8\u5c31\u662f\u5168\u8fdb\u53bb\u4e86\u5427\uff01</p> <p>\u665a\u4e0a\u6536\u62fe\u4e86\u4e00\u4e0b\u4e1c\u897f\uff0c\u660e\u5929\u5f00\u5b66\u4e86\uff0c\u5230\u65f6\u5019\u5728\u8f66\u4e0a\u53ef\u4ee5\u505a\u4e00\u70b9 KMP \u9898\u3002</p>"}, {"location": "misc/CSP2022/#920", "title": "9.20\uff0c\u5f00\u5b66\u7b2c\u4e8c\u5929", "text": "<p>\u4eca\u5929\u5728\u548c JX \u8fd8\u6709 FST \u5546\u91cf\u4e4b\u540e\u5728\u5b66\u6821 OI \u7684\u65f6\u95f4\u3002</p> <p>\u5dee\u4e0d\u591a\u662f\u5316\u751f\u8bed\u8fd9\u4e09\u79d1\u7684\u8865\u5dee\u4e0d\u4e0a\uff0c\u5176\u4ed6\u90fd\u4e0a\u3002</p> <p>\u7136\u540e\u5bf9\u4e86\u4e00\u4e0b\u521d\u8d5b\u7b54\u6848\uff08\u542c\u8bf4\u662f official answer\uff09\uff0cTG 76.5\uff0c\u7136\u540e\u542c\u8bf4\u82cf\u5dde\u5206\u6570\u7ebf\u662f 75\uff0c</p> <p>\u6240\u4ee5\u5728\u6210\u90fd\u4e5f\u5e94\u8be5\u8fc7\u4e86\u3002</p> <p>upd : \u666e\u53ca 71.5, tg 77.5\uff0c\u53c8\u4e00\u6b21\u521b\u4e0b\u4e86\u63d0\u9ad8 \u300b \u666e\u53ca\u7684\u8bb0\u5f55\u3002</p>"}, {"location": "misc/CSP2022/#1019", "title": "10.19\uff0c\u8fc7\u4e86\u5f88\u4e45\u4e4b\u540e", "text": "<p>\u7b80\u5355\u63d0\u4e00\u53e5\u6700\u8fd1\u90fd\u5728\u5e72\u5565\u5427\uff0c\u62ff Atcoder \u7684 DP contest \u7ec3\u4e86\u4e0b\u624b\uff0c\u4e0d\u8fc7\u73b0\u5728\u8fd8\u6709 7 \u4e2a\u9898\u6ca1\u505a\u3002</p> <p>\u7136\u540e\u590d\u4e60\u4e86\u4e00\u4e0b KMP\uff0c\u8865\u4e86\u4e0b\u5b57\u7b26\u4e32 Hash\u3002</p> <p>whk \u90a3\u8fb9\u5c31\u662f\u8be5\u548b\u5377\u548b\u5377\uff0c\u53cd\u6b63\u6bcf\u5929\u4e8b\u60c5\u90fd\u6392\u7684\u5f88\u6ee1\uff0c\u5dee\u4e0d\u591a\u7ecf\u5e38\u662f\u7b2c\u4e00\u4e2a\u51fa\u5bdd\u5ba4\u6700\u540e\u4e00\u4e2a\u56de\u5bdd\u5ba4\u7684\u3002</p> <p>\u6bd5\u7adf\u65e9\u8bfb\u4e4b\u524d\uff0c\u665a\u81ea\u4e60\u4e0b\u8bfe\u4e4b\u540e\u52a0\u8d77\u6765\u6709 1h\uff0c\u4e0d\u7528\u767d\u4e0d\u7528\u3002</p> <p>\u6570\u7406\u5316\u751f\u611f\u89c9\u8fd8\u597d\uff0c\u8bed\u6587\u6700\u8fd1\u5f00\u59cb\u79ef\u7d2f\u4f5c\u6587\u7d20\u6750\u4e86\uff0c\u7136\u540e\u5f00\u59cb\u628a\u4ee5\u524d\u7684\u7b14\u8bb0\u7cfb\u7edf\u5316\u6574\u7406\u3002</p> <p>\u611f\u89c9\u7b14\u8bb0\u633a\u91cd\u8981\u7684\uff0c\u590d\u4e60\u4e5f\u633a\u91cd\u8981\u7684\u3002</p> <p>\u4e0d\u8fc7\u611f\u89c9\u73b0\u5728\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u662f\u600e\u4e48\u5728\u505a\u9898\u7684\u65f6\u5019\u4fdd\u6301\u6e05\u9192\uff0c\u4e0d\u4f1a\u62ff\u5230\u9898\u5c31\u778e\u5199\u778e\u505a\uff0c\u4f1a\u5148\u60f3\u60f3\u80fd\u4e0d\u80fd\u5f52\u5316\u5230\u5df2\u6709 Trick \u4e0a\uff0c\u7136\u540e\u6bcf\u4e00\u6b65\u90fd\u6709\u4e00\u4e2a\u660e\u786e\u7684\u76ee\u6807\u548c\u601d\u8def\u3002</p> <p>\u8fd8\u6709\u4e00\u70b9\u662f\u6700\u8fd1\u611f\u89c9\u5f88\u4e0d\u8db3\u7684\uff0cwhk \u90a3\u8fb9\u611f\u89c9\u6ca1\u6709\u5565\u505a\u9898\u7684\u5fc3\u6c14\uff0c\u6d6e\u8e81\u7684\u5f88\u3002</p> <p>\u53ef\u80fd\u662f\u56e0\u4e3a\u6025\u4e86\uff0c\u611f\u89c9\u6bcf\u5929\u81ea\u5df1\u7684 Extra works \u90a3\u4e48\u591a\uff0c\u6709\u4e9b\u81ea\u5df1\u611f\u89c9\u4e0d\u5fc5\u8981\u7684 work \u5c31\u76f4\u63a5 c \u4e86\u3002</p> <p>\u53ef\u80fd\u8fd9\u4e5f\u662f\u6700\u8fd1\u72b6\u6001\u4e0d\u4f73\u7684\u539f\u56e0\uff0c\u800c\u4e14\u8ba1\u5212\u91cc\u7684\u5f88\u591a\u4e1c\u897f\u5e76\u4e0d\u662f\u6bcf\u5929\u90fd\u5728\u575a\u6301\u7684\uff0c\u6bd4\u5982\u6700\u8fd1\u5c31\u6ca1\u548b\u80cc\u751f\u7269\u548c\u5316\u5b66\u7684\u77e5\u8bc6\u70b9\u4e86\u3002</p> <p>\u6700\u8fd1\u7528\u7684\u90a3\u4e2a\u56db\u8c61\u9650\u89c4\u5212\u6cd5\u633a\u597d\u7528\u7684\uff0c\u4f46\u662f\u6bcf\u5929\u90fd\u505a\u4e0d\u5b8c\u5f88\u6709\u632b\u8d25\u611f\u554a\u3002</p> <p>\u8fd8\u662f\u8981\u628a\u751f\u5316\u8fd8\u6709\u82f1\u8bed\u7684\u77e5\u8bc6\u70b9\u80cc\u8bf5\u653e\u5230\u4e2d\u5348\uff0c\u7136\u540e\u665a\u4e0a\u56de\u5bdd\u7684\u8def\u4e0a\uff0c\u6d17\u6f31\u7684\u65f6\u5019\uff0c\u8d70\u8def\u7684\u65f6\u5019\u53ef\u4ee5\u80cc\u4e00\u4e0b\uff0c\u8282\u7701\u70b9\u65f6\u95f4\uff0c\u665a\u4e0a\u5c31\u770b\u770b\u6709\u5565\u80cc\u6f0f\u7684\u3002</p> <p>\u4e0d\u8fc7\u51e0\u4e2a\u6211\u53ef\u80fd\u4e0d\u9009\u7684\u79d1\u76ee\u5c31\u6709\u70b9\u96be\u8fc7\uff0c\u57fa\u672c\u90fd\u6ca1\u653e\u4ec0\u4e48\u7cbe\u529b\u5728\u4e0a\u9762\u3002</p> <p>\u82f1\u8bed\u80cc\u4e66\u8fd8\u53ef\u4ee5\uff0c\u53ea\u662f\u8bed\u6cd5\u90a3\u8fb9\u5dee\u4e86\u5f88\u591a\uff0c\u7136\u540e\u5f88\u591a phrase \u8bb0\u4e0d\u5230\u4e86\u3002\u3002\u3002\u3002</p> <p>\u53cd\u6b63\u96be\u8fc7\uff0c\u6700\u8fd1\u7684\u51e0\u4e2a\u5468\u672b\u90fd\u6709\u70b9\u6446\uff0c\u5bfc\u81f4\u5f88\u591a\u4e8b\u60c5\u6ca1\u505a\u3002</p> <p>\u771f\u7684\u5410\uff0c\u6700\u8fd1\u6253\u7684 3 \u573a cf \u4e5f\u6ca1\u5199\u9898\u89e3\u3002</p> <p>\u6253\u7b97 csp \u4e4b\u524d\u8bf7\u4e24\u5929\u5047\u4e0a\u6765\u6253\u6253\u6a21\u62df\u8d5b\u6062\u590d\u611f\u89c9\u3002</p> <p>md\uff0ccsp \u600e\u4e48\u548c\u534a\u671f\u8003\u8bd5\u91cd\u5408\u5ea6\u8fd9\u4e48\u9ad8\u554a\u3002\u3002\u3002</p> <p>\u660e\u5929\u518d\u53bb\u627e\u5fc3\u7406\u8001\u5e08\u804a\u804a\uff0c\u8bb0\u5f97\u627e\u73ed\u4e3b\u4efb\u7b7e\u5047\u6761\u3002</p>"}, {"location": "misc/CSP2022/#1020", "title": "10.20", "text": "<p>\u7b7e\u5047\u6761\u7684\u65f6\u5019\u88ab\u73ed\u4e3b\u4efb\u620f\u5267\u6027\u7684\u903c\u7740\u505c\u8bfe\u4e86\uff1f</p> <p>\u7136\u540e\u548c\u5fc3\u7406\u8001\u5e08\u804a\u5929\uff0c\u5f97\u51fa\u7ed3\u8bba\u662f\u8981\u7ef4\u6301\u4e00\u4e2a\u5e73\u7a33\u7684\u5fc3\u6001\u3002</p> <p>\u800c\u4e14\u5b9a\u76ee\u6807\u7684\u65f6\u5019\u4e00\u822c\u4e0d\u8981\u7ed9\u81ea\u5df1\u5b9a\u90a3\u79cd\u201c\u5f88\u6ee1\u201d\u7684\u76ee\u6807\uff0c\u6bd4\u5982\u4f7f\u7528\u201c\u5fc5\u987b\uff0c\u4e00\u5b9a\u201d\u8fd9\u79cd\u8bcd\u6c47\u4e4b\u7c7b\u7684\u3002</p> <p>\u5bb9\u6613\u575a\u6301\u4e0d\u4e0b\u6765\u3002</p> <p>\u800c\u4e14\u56e0\u4e3a\u5fc3\u6001\u8fd9\u4e1c\u897f\u4e5f\u6ca1\u6709\u7edd\u5bf9\u7684\u5e73\u7a33\uff0c\u80fd\u505a\u7684\u5c31\u662f\u6700\u5c0f\u5316\u5fc3\u6001\u6ce2\u52a8\u3002</p> <p>\u7814\u7a76\u4e86\u4e00\u4e0b Code::Blocks\uff0c\u611f\u89c9\u975e\u5e38\u597d\u7528\uff01</p> <p>\u597d\u50cf\u8981\u590d\u4e60\u4e00\u4e0b\u7ebf\u6027\u6c42\u9006\u5143\u8fd9\u79cd\u677f\u5b50\u4e4b\u7c7b\u7684\u4e1c\u897f\u4e86\u3002</p>"}, {"location": "misc/CSP2022/#1021", "title": "10.21", "text": "<p>\u5728\u5bb6\u6446\u70c2\u3002</p>"}, {"location": "misc/CSP2022/#1022", "title": "10.22", "text": "<p>\u4e0d\u5199\u4e86\uff0c\u5495\u5495\u5495\u3002</p>"}, {"location": "misc/CSP2022/#1023", "title": "10.23", "text": "<p>\u56e0\u4e3a\u53d6\u6a21\uff0c\u51cf\u6cd5\u4e0d\u52a0 mod\uff0c\u5728\u53d6\u6a21\u610f\u4e49\u4e0b\u53d6 max \u6ca1\u770b\u5230\uff0c\u76f4\u63a5\u51fb\u98de\u4e86\u3002</p> <p>-130pts\u3002</p> <p>\u4e0b\u5348 CF\uff0c\u6253\u5f97\u7a00\u6487\u3002</p> <p>\u665a\u4e0a\u76f4\u63a5\u81ea\u95ed\u4e86\uff0c\u505a\u5b8c\u6838\u9178\u53bb\u64cd\u573a\u6162\u8d70\u4e86\u4e00\u5708\u9759\u4e86\u4e00\u4e0b\uff0c\u7136\u540e\u5750\u5728\u8db3\u7403\u573a\u65c1\u8fb9\u90a3\u4e2a\u96d5\u50cf\u6c89\u601d\u4e86\u534a\u4e2a\u5c0f\u65f6.</p> <p>\u611f\u89c9\u70ed\u7231\u662f\u5f88\u91cd\u8981\uff0c\u5f88\u7eaf\u7cb9\u4f46\u662f\u5f88\u96be\u4fdd\u6301\u9ad8\u7eaf\u5ea6\u7684\u4e1c\u897f\u3002</p> <p>\u6211\u4e4b\u524d\u5c31\u4e00\u76f4\u5728\u4e3a\u4e86\u522b\u4eba\u7684\u8ba4\u53ef\u5b66 OI\uff0c\u6ca1\u7406\u89e3\u5c31\u4e71\u70b9\u79d1\u6280\u6811\u3002</p> <p>\u53ef\u4ee5\u8bf4\u662f\u597d\u5927\u559c\u529f\uff0c\u4f46\u662f\u5b9e\u529b\u4e0d\u8db3\u5427\u3002</p> <p>\u665a\u4e0a\u627e\u5230 zjk \u8ba8\u8bba\u4e86\u4e00\u4e0b\u90a3\u4e2a\u795e\u79d8\u9898\u7684\u505a\u6cd5\u3002</p> <p>\u73b0\u5728\u89c9\u5f97\u72b6\u6001\u662f\uff0c\u5b66\u4e86\u7684\u638c\u63e1\u4e0d\u719f\uff0c\u7136\u540e\u8fd8\u60f3\u8981\u201c\u8363\u8a89\u201d\uff0c\u7136\u540e\u5c31\u6025\u4e86\uff0c\u5fc3\u6c14\u6709\u70b9\u4e0b\u4e0d\u53bb\u3002</p> <p>\u91cd\u8981\u7684\u662f attitude\uff0c\u6211\u70ed\u7231\u7684\u662f Cs\uff0c\u4e0d\u662f\u4e3a\u4e86 OI \u7684\u8363\u8a89\u3002</p> <p>\u4e0d\u60f3\u88ab\u843d\u4e0b\u592a\u591a\u5c31\u522b emo\u4e86\uff0c\u5c3d\u529b\u8fc7\u4e86\u5c31\u4e0d\u7528\u540e\u6094\uff0cjust for fun\uff0cnot for the honor, enjoy what you do now.</p> <p>\u4e5f\u627e zjk \u7237\u7237\u95ee\u4e86\u5173\u4e8e\u5fc3\u6001\u7684\u4e8b\u60c5\uff0c\u56de\u7b54\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>4182_543_731 2022-10-23 22:31:38\n\u5173\u4e8e\u6bd4\u8d5b:\n\u9996\u5148\u6211\u4e0d\u592a\u559c\u6b22\u6253cf \u56e0\u4e3a\u6211\u4e5f\u975e\u5e38\u53d7rating\u53d8\u5316\u5f71\u54cd(\u611f\u89c9\u8fd9\u4e1c\u897f\u53ef\u80fd\u548c\u6027\u683c\u6709\u5173 \u81f3\u5c11\u6211\u4e0d\u5927\u884c)\n\u7136\u540e\u611f\u89c9cf\u53ef\u80fd\u4e5f\u4e0d\u5b8c\u5168\u662f\u5fc5\u8981\u7684(\u867d\u7136\u73b0\u5728hb\u8bad\u7ec3\u65b9\u5f0f\u5bf9cf\u662f\u8fd9\u6837\u7684)\n\n4182_543_731 2022-10-23 22:33:03\n\u6211\u611f\u89c9\u6211\u8bad\u7ec3\u4e00\u76f4\u662f\u591a\u5237\u9898 \u53ef\u4ee5\u60f3\u5f88\u957f\u65f6\u95f4 \u7136\u540e\u591a\u8865\u9898\u89e3(\u867d\u7136\u8fd9\u4e1c\u897f\u56e0\u4eba\u800c\u5f02\u6211\u4e0d\u80fd\u8bc4\u4ef7)(\u800c\u4e14\u56fd\u5bb6\u961f\u53e6\u5916\u51e0\u4e2a\u4eba\u90fd\u4e0d\u600e\u4e48\u5199\u9898\u89e3)\n\u7136\u540e\u6bd4\u8d5b\u72b6\u6001\u5565\u7684\u6700\u540e\u518d\u53bb\u8c03\u6574(\u5f53\u7136\u7ec6\u8282\u5565\u7684\u8fd8\u662f\u8981\u6ce8\u610f \u4e0d\u8fc7\u5199\u591a\u4e86\u53ef\u4ee5\u505a\u5230\u4e0d\u600e\u4e48\u6015\u7ec6\u8282\u95ee\u9898)\n\n4182_543_731 2022-10-23 22:44:16\n\u7136\u540e\u8bf4\u5230\u5fc3\u6001\n\n\u56fd\u5bb6\u961f\u96c6\u8bad\u521a\u5f00\u59cb\u7684\u65f6\u5019\u6211\u5728us open\u6253\u51fa\u4e86\u961f\u53cbak\u6211200\u7684\u6210\u7ee9\u7136\u540e\u6211\u4e00\u5ea6\u5fc3\u6001\u7206\u70b8\n\u7136\u540e\u6211\u9009\u62e9\u7761\u89c9 \u6253\u6e38\u620f \u5237atc\u627e\u56de\u611f\u89c9 \u7136\u540e\u7ebf\u4e0b\u7b2c\u4e00\u573a\u6211\u53c8\u6253\u51fa\u4e86275/4*300 \u8fd9\u4e2a\u65f6\u5019\u8fd8\u662f\u4e00\u54684\u573a\u6bd4\u8d5b\n\u7136\u540e\u6211\u5fc3\u6001\u975e\u5e38\u70b8 \u7136\u540e\u6211\u53c8\u53bb\u5f00\u6e38\u620f\u6253\u4e86\u6574\u4e2a\u540e\u534a\u573a\u7ed3\u679c\u53d1\u6325\u8fd8\u884c\n\n\u7136\u540e\u4e24\u6b21ctt d2\u70b8\u6389\u7136\u540e\u5f00\u9893 d3d4\u6b63\u5e38\u53d1\u6325\n\n\u7136\u540e\u5f88\u591a\u6bd4\u8d5b(scoi20 noi21 \u6700\u540e\u4e00\u6bb5\u96c6\u8bad)\u4e5f\u662f\u8fd9\u6837\u5e72\u7684(\n(\u6ce8\u610f\u8fd9\u91cc\u6e38\u620f\u90fd\u6307offline\u7c7b\u578b\n\n4182_543_731 2022-10-23 22:48:36\n(\u5efa\u8bae\u8df3\u8fc7\u4e0a\u4e00\u6bb5\u56e0\u4e3a\u592a\u5947\u602a\u4e86\n\u7136\u540e\u6211\u6709\u4e00\u4e9b\u611f\u89c9:\n\u8fc7\u5ea6\u6295\u5165\u53ef\u80fd\u6709\u53cd\u4f5c\u7528(\u5178\u578b\u4f8b\u5b5022.1\u7684\u65f6\u5019\u6211\u5728nj\u96c6\u8bad \u6700\u540e\u51e0\u5929\u5fc3\u6001\u6781\u5176\u66b4\u8e81 \u8fd8\u597dcts\u5ef6\u671f\u4e86)\n\u8003\u524d\u8fd8\u5728\u60f3\u600e\u4e48\u8003\u597d\u6781\u5927\u6982\u7387\u8003\u70b8\n\u8003\u524d\u80fd\u505a\u5230\u653e\u7a7a\u5e94\u8be5\u662f\u597d\u72b6\u6001(\n\u8bf4\u4e0d\u5b9a\u8003\u524d\u6478\u9c7c\u6709\u7528(\u4f46\u662f\u9700\u8981\u662f\u6b63\u786e\u6478\u9c7c\n\u8003\u573a\u4e0a\u4e5f\u5e94\u8be5\u591a\u51b7\u9759\u591a\u60f3 (\u6211\u6709\u573a\u6a21\u62df\u8d5b\u5feb2h\u4e00\u9898\u4e0d\u4f1a 3h\u591a\u70b9ak)(\u56e0\u4e3aoi\u4e5f\u4e0d\u662f\u901f\u5ea6\u7ade\u8d5b\u4f46\u662f\u53ef\u80fdcf\u662f\n\n4182_543_731 2022-10-23 22:49:59\nbonus:\u67d0\u6b21\u300a\u56fd\u5bb6\u961f\u9009\u624bnfls\u6821\u5185\u4ea4\u6d41\u300b \u6211\u4eec\u4e00\u81f4\u901a\u8fc7\u8003\u524d\u4e00\u6bb5\u65f6\u95f4\u5e94\u8be5\u6446\u8fd9\u4ef6\u4e8b\n\n4182_543_731 2022-10-24 07:59:22\n\u4f46\u611f\u89c9\u7ecf\u5e38\u628a\u4e00\u4e2a\u9898\u72ec\u7acb\u60f3\u51fa\u6765\u5c31\u80fd\u8bb0\u4f4f\u4e86(\n\n4182_543_731 2022-10-24 08:00:48\n\u53ef\u4ee5\u591a\u5237\u5237\u9898(arc(?)\n\n4182_543_731 2022-10-24 08:01:06\narc\u6781\u5ea6\u5c0f\u6e05\u65b0\u4f46\u4e0d\u77e5\u9053\u5237\u4e0d\u5237\u7684\u52a8\n\n4182_543_731 2022-10-24 08:01:17\n\n\u6700\u8fd1\u7684f\u9664\u5916(bushi)\n\n4182_543_731 2022-10-24 08:02:19\natc\u6bd4\u8d5b\u7279\u6027:\u4ee3\u7801\u6781\u5176\u77ed\n\n4182_543_731 2022-10-24 08:02:40\n\u6211\u5237agc\u5e94\u6ca1\u5199\u8fc7&gt;2k\u4ee3\u7801\n\n4182_543_731 2022-10-24 08:02:56\narc\u9664\u53bb\u6284\u677f\u5b50\u6ca1\u5199\u8fc7&gt;1.5k(?)\n\n4182_543_731 2022-10-24 08:03:03\n\u677f\u5b50:\u7f51\u7edc\u6d41 fft\n\n4182_543_731 2022-10-24 08:15:20\n\natc\u611f\u89c9\u90fd\u662f\u7eaf\u601d\u8003\u6bd4\u8d5b(\n\n4182_543_731 2022-10-24 08:15:54\n\u7136\u540e\u73b0\u5728abc ex\u53d8\u6210\u4e86\u9ad8\u9636\u5957\u8def\u6bd4\u8d5b(\n\n4182_543_731 2022-10-24 08:20:10\n(\u5982\u679c4h\u80fd\u505a\u51fa\u9898\u5e94\u8be5\u6ca1\u95ee\u9898\n\n4182_543_731 2022-10-24 08:20:21\n\u5efa\u8bae104\u5f00\u59cb\u5012\u7740\u505a\n\n4182_543_731 2022-10-24 08:21:35\n(\u867d\u7136\u6211\u53ea\u5237ef\n\n4182_543_731 2022-10-24 08:22:01\n\u8fd8\u6709\u8fd9\u79cd\u4e1c\u897f\u7a81\u51fa\u4e00\u4e2a\u7eaf\u601d\u8003\u6240\u4ee5\u751a\u81f3\u53ef\u4ee5\u4e00\u8fb9whk\u4e00\u8fb9\u60f3\u9898(\n</code></pre>"}, {"location": "misc/CSP2022/#1024", "title": "10.24", "text": "<p>\u4eca\u5929\u611f\u89c9\u5f88\u5f00\u5fc3\u3002</p> <p>ZJK \u7ed9\u4e86\u5efa\u8bae\u8bf4\uff0c\u4ece ARC104 \u5f00\u59cb\u5012\u7740\u505a\uff08\u76ee\u7684\u662f\u953b\u70bc\u601d\u7ef4\uff09\u3002</p> <p>\u4ed6\u8fd8\u8bf4\u8981\u591a\u60f3\uff01</p> <p>hfy \u8bf4\u53ef\u4ee5\u9009\u5b8c\u9898\u76f4\u63a5\u5b9a\u65f6\u5f53\u6a21\u62df\u8d5b\u505a\uff0c\u53ef\u4ee5\u627e\u627e\u611f\u89c9\uff0c\u4e5f\u6709\u52a9\u4e8e\u8003\u8bd5\u7684\u65f6\u5019\u4fdd\u6301\u5e73\u5e38\u5fc3\u3002</p> <p>\u4eca\u5929\u6548\u7387\u8fd8\u53ef\u4ee5\uff0c\u628a\u51e0\u4e2a\u7b80\u5355\u9898\u6539\u4e86\uff0c\u601d\u8003\u91cf\u7ec8\u4e8e\u4e0a\u53bb\u4e86\u4e00\u70b9\u3002</p> <p>\u90a3\u4e2a\u5b50\u96c6\u7684\u9898\u8fd8\u6709\u90a3\u4e2a\u72ec\u7acb\u96c6\u90fd\u5f88\u6709\u610f\u601d\uff0c\u660e\u5929\u8865\u4e00\u8865\u3002</p> <p>\u6539 ABC \u7684 D \u7684\u65f6\u5019\u53d1\u73b0\u4e86\u8fd9\u79cd\u795e\u5947\u7684 dp \u65b9\u5f0f\uff08\u4ece\u4e00\u8840\u7684\u4ee3\u7801\u91cc\u770b\u8fc7\u6765\u7684\uff09</p> <pre><code>bool solve(std::vector&lt;int&gt; v, int target) {\ndp.reset(); dp[10000] = true;\nfor(auto i : v) dp = (dp &lt;&lt; i) | (dp &gt;&gt; i);\nreturn dp[target + 10000];\n}\n</code></pre> <p>\u611f\u89c9\u5f88\u725b\u903c\uff01</p> <p>\u7136\u540e\u53ef\u80fd\u5c31\u662f\u8fc7\u4e86\u4e00\u4e0b Meet in the Middle \u548c\u7b80\u5355\u7684\u5bb9\u65a5\u601d\u60f3\u3002</p> <p>\u548c wkm \u804a\u4e86\u5f88\u4e45\uff0c\u804a\u5230\u4e86\u4ee5\u524d\u5728\u8bad\u7ec3\u8425\u7684\u90a3\u4e2a\u4e09\u5206\u7403\uff0c\u6628\u5929\u5728\u8db3\u7403\u573a\u96d5\u50cf\u65c1\u8fb9\u9759\u5750\u534a\u5c0f\u65f6\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002</p> <p>\u611f\u89c9\u554a\uff0cOI \u4e0d\u662f\u6211\u7684\u5168\u90e8\uff0c\u6211\u70ed\u7231\u7684\u662f Compuer Science\uff0c\u6240\u4ee5\u5176\u5b9e\u8fc7\u5206\u770b\u91cd OI \u5e26\u7ed9\u6211\u7684 honor \u662f\u6ca1\u6709\u7528\u7684\uff0c\u4e0d\u5982\u4eab\u53d7\u5f53\u4e0b\uff01</p> <p>STJU \u548c \u4e2d\u79d1\u5927\uff0c\u90fd\u662f\u5f88\u597d\u7684\u9009\u62e9\u554a\uff01\u62ff\u5b8c NOIP 1= \u76f4\u63a5\u51b2 whk \u4e5f\u5f88\u9999\uff01</p> <p>\u53e6\u5916\u5207\u5fcc\u5927\u559c\u5927\u60b2\uff0c\u4f60\u53d1\u73b0\u6ca1\u6709\uff0c\u6bcf\u6b21\u5927\u559c\u5927\u60b2\u7684\u6a21\u62df\u8d5b\u90fd\u51fa\u4e8b\u4e86\uff08</p>"}, {"location": "misc/CSP2022/#1025", "title": "10.25", "text": "<p>\u5c0f\u6eaa\u4e86\uff0c\u6a21\u62df\u8d5b T1 \u8bfb\u9519\u9898\u6302\u4e86 50pts\uff08\u548c\u90a3\u4e2a\u521d\u4e8c\u5b66\u5f1f ccr \u90fd\u770b\u9519\u4e86\uff0c\u6211\u4eec\u4e0b\u5348\u8fd8\u5bf9\u7740\u8fd9\u4e2a\u641e\u4e86\u597d\u4e45\uff09\u3002</p> <p>\u7136\u540e T3 \u4e00\u773c\u9876\u771f\u9274\u5b9a\u4e3a GSS1 \u6539\u7248\uff0c\u7136\u540e\u76f4\u63a5\u83bd\u4e86\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u53bb\u3002</p> <p>\u8d5b\u540e\u53d1\u73b0\u505a\u6cd5\u5e38\u6570\u8fc7\u5927\u4e86\uff0c\u660e\u660e\u6709\u66f4\u7b80\u5355\u7684\u505a\u6cd5\u7684\u3002</p> <p>\u90a3\u4e2a\u795e\u79d8\u9898\u503c\u57df 1, 2, 3 \u4e0d\u80fd\u505a\u4e86\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u65e0\u89e3/hsh (zjk \u7ed9\u4e86\u4e2a\u5b9a\u7406)</p>"}, {"location": "misc/CSP2022/#1026", "title": "10.26", "text": "<p>\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u5c1d\u8bd5\u878d\u5165\u6bcf\u4e00\u4e2a\u5708\u5b50\u5462\u3002</p> <p>\u4eca\u5929\u5f04\u4e86\u4e00\u4e2a\u6709\u610f\u601d\u7684\u5bb9\u65a5\u9898\uff1aCF997C\uff0chfy \u6559\u6211\u7684\uff0c\u611f\u89c9\u7ec8\u4e8e\u7406\u89e3\u4e86\uff01</p> <p>\u7136\u540e\u542c\u8bf4\u4e8c\u9879\u5f0f\u53cd\u6f14\u662f\u4e00\u4e2a\u5f0f\u5b50\uff0c\u65b9\u4fbf\u63a8\u5f0f\u5b50\u7684\u3002</p> <p>\u770b Command_Block \u548c tzc_wk(ET2006) \u7684\u535a\u5ba2\u597d\u50cf\u6709\u5f88\u5168\u7684\u7701\u9009\u77e5\u8bc6\uff1f</p> <p>\u4ee5\u540e\u8bf4\u4e0d\u5b9a\u53ef\u4ee5\u5b66\u7740\u73a9\u3002</p>"}, {"location": "misc/CSP2022/#1027", "title": "10.27", "text": "<p>\u60f3\u4ee5\u540e\u7684\u4e8b\u60c5\u662f\u6ca1\u6709\u7528\u7684\u3002</p> <p>\u4e0d\u8fc7\u63d0\u524d\u89c4\u5212\u4e00\u4e0b\u4e5f\u672a\u5c1d\u4e0d\u53ef\u3002</p> <p>\u5982\u679c\u4eca\u5e74\u62ff\u4e86 NOIP 1= \u5c31\u76f4\u63a5\u9000\u5f79 whk\uff0c\u4f46\u662f\u5e73\u5e38\u53ef\u4ee5\u6253\u6253 ARC \u5b66\u5b66\u7701\u9009\u7684\u4e1c\u897f\uff1f</p> <p>\u5c31\u5f53\u505a\u771f\u6b63\u7684\u5174\u8da3\u7231\u597d\u4e86\u3002</p> <p>\u5982\u679c\u4eca\u5e74\u6ca1\u62ff\u4e5f\u6ca1\u5173\u7cfb\uff0c\u660e\u5e74\u8fd8\u53ef\u4ee5\uff0c\u800c\u4e14\u8fd8\u6709\u4e0d\u5c11\u7ade\u8d5b\u65f6\u95f4\uff0c\u597d\u597d\u78e8\u4e00\u78e8\uff0c\u5b8c\u5168\u591f\u4e86\uff01</p> <p>\u81f3\u4e8e\u5927\u5b66\u80fd\u4e0d\u80fd\u6253 ACM \u8fd9\u4e9b\uff0c\u592a\u9065\u8fdc\u4e86\uff0c\u4e0d\u662f\u6211\u8981\u8003\u8651\u7684\u4e1c\u897f\u3002</p> <p>\u5f04\u61c2\u4e86\u4e00\u4e2a\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u9898\uff0c\u611f\u89c9\u4e5f\u5f88\u6709\u610f\u601d\uff0c\u800c\u4e14\u7b2c\u4e00\u6b21\u770b\u6587\u5b57\u9898\u89e3\u80fd\u8865\u5145\u51fa\u601d\u8def\u7136\u540e\u5199\u51fa\u6765\uff0c\u751a\u81f3\u4e00\u904d\u8fc7\uff01</p> <p>\u660e\u5929\u628a dsu on tree \u7684\u677f\u5b50 CF600E \u8fc7\u4e00\u4e0b\uff0c\u7136\u540e\u5c31\u590d\u4e60\u4e00\u904d\u77e5\u8bc6\u70b9\u548c Trick\uff0c\u5199\u4e2a\u5927\u6a21\u62df\u9759\u4e00\u9759\u5fc3\u3002</p> <p>\u518d\u51fa\u53bb\u5403\u4e2a\u996d\uff0c\u5dee\u4e0d\u591a\u4e86\uff0c\u4fdd\u6301\u4e0b\u5e73\u5e38\u5fc3\uff0c\u6b63\u5e38\u8003\u5c31\u53ef\u4ee5\u3002</p> <p>\u4eab\u53d7\uff01</p> <p>\u611f\u89c9\u6700\u8fd1\u51e0\u5929\u5b66 OI \u5f88\u5feb\u4e50\u3002</p>"}, {"location": "misc/CSP2022/#1028", "title": "10.28", "text": "<p>\u4eca\u5929\u590d\u4e60\u7b97\u6cd5\uff0c\u548c hfy\u3001wcx \u8001\u5e08\u6fc0\u60c5\u6253\u677f\u5b50\u7ade\u901f\u3002</p> <p>\u4e0b\u5348\u5f00\u4e86\u4e00\u573a ARC (ARC080) \u4e00\u8d77\u6253\u3002</p> <p>\u7136\u540e\u611f\u89c9\u633a\u6709\u610f\u601d\uff0c\u4ee5\u540e whk \u5c31\u7528\u8fd9\u4e2a\u8c03\u8282\u4e86\u3002</p> <p>\u665a\u4e0a\u548c PhOer zs \u51fa\u53bb\u5403\u4e86\u4e2a\u996d\uff0c\u542c\u8bf4 MO \u662f 30 \u53f7\u8003\u3002</p> <p>\u665a\u4e0a\u603b\u7ed3\u4e86\u4e00\u4e0b ARC\uff0c\u7136\u540e\u60f3\u8d77\u6765\u53ef\u4ee5\u548c Meatherm \u9762\u57fa\uff0c\u4e8e\u662f\u7b80\u5355\u8bf4\u4e86\u4e00\u4e0b\u7279\u5f81\u3002</p> <p>hfy \u8bf4\u6211\u7f29\u8896\u5b50\u968f\u673a\u6e38\u8d70\u548c zxjk \u7684\u4e60\u60ef\u4e00\u81f4\uff0c\u8349\uff0c\u597d\u50cf\u786e\u5b9e\u3002</p> <p>\u53f7\u5bb6\u519b\u7684\u8003\u524d\u63d0\u9192\u7ec8\u4e8e\u66f4\u65b0\u4e86\u3002</p> <p>\u53ea\u80fd\u8bf4\u4fdd\u6301\u5e73\u5e38\u5fc3\u5427\u3002</p> <p>\u548c wcx \u8001\u5e08\u4e00\u8d77\u804a\u5929\u6478\u9c7c\u534a\u5c0f\u65f6\u7ed3\u675f\u4e86\u665a\u81ea\u4e60\uff0c\u52a0\u6cb9\u3002</p> <p></p>"}, {"location": "misc/CSP2022/#1029", "title": "10.29", "text": "<p>\u8003\u8bd5\uff0c\u4e0a\u5348\u8d77\u5e8a\u548c czh,xyh \u4e00\u8d77\u8d70\u3002</p> <p>\u7136\u540e\u8fdb J \u8003\u573a\uff0c\u53d1\u73b0\u81ea\u5df1\u4e0a\u4e0b\u5348\u4e00\u573a\uff1f\uff1f\u800c\u4e14gjh\u4e0b\u5348\u5750\u6211\u65c1\u8fb9\uff1f</p> <p>\u611f\u89c9\u4e03\u4e2d\u9ad8\u65b0\u7684\u8bbe\u65bd\u6bd4\u6211\u4eec\u597d\u591a\u4e86/ll</p> <p>\u62ff\u5230\u4e86 win11 + i7 \u7684\u914d\u7f6e\u3002</p> <p>\u666e\u53ca\u5f00\u9898\uff0c\u7136\u540e\u53d1\u73b0 T1 \u5c31\u662f\u7b80\u5355\u7684 log \u6c42\u4e00\u4e0b\uff0c\u7136\u540e\u53d1\u73b0 C++ \u91cc\u9762 <code>log</code> \u662f <code>ln</code>\uff0c<code>log10</code> \u624d\u662f <code>lg</code>\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5bc4\u4e86\u4e00\u6b21\u3002</p> <p>\u7136\u540e T2 \u6b7b\u6d3b\u60f3\u4e0d\u5230 \\(O(1)\\) \u505a\u6cd5\uff0c\u770b\u5230\u4e86 \\(m = n - ed + 2\\) \u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u91cc\u7684\u63d0\u793a\uff0c\u4f46\u662f\u8fd8\u662f\u4e0d\u77e5\u9053\uff0c\u53ef\u80fd\u534a\u4e2a\u5c0f\u65f6\u5de6\u53f3\u51b3\u5b9a\u5148\u6253\u4e2a \\(\\sqrt{n}\\) \u66b4\u529b\u62ff\u4e2a 60pts\u3002</p> <p>\u7136\u540e\u770b T3\uff0cMD\uff0c\u8868\u8fbe\u5f0f\u6811\uff0c\u800c\u4e14\u8981\u52a0\u62ec\u53f7\u4e4b\u7c7b\u7684\uff0c\u96be\u641e\uff0c\u5148\u770b T4\uff0c\u7136\u540e T4 \u5f00\u59cb\u6ca1\u601d\u8def\u3002</p> <p>\u5b9a\u775b\u4e00\u770b\uff0c\u601d\u8003\u4e00\u4e0b\uff0c\u611f\u89c9\u5c31\u662f\u4e2a\u7b80\u5355 \\(O(n^3)\\) dp\uff0c\u8bbe \\(dp(i, j)\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u70b9\uff0c\u7528\u4e86 \\(j\\) \u6b21\u673a\u4f1a\u7684\u6700\u957f\u3002</p> <p>\u7136\u540e\u5199\u5b8c\u53d1\u73b0\u5faa\u73af\u53cd\u4e86\u4e00\u6b21\uff0c\u8fc7\u4e86 Sample1\uff0cSample2 \u6ca1\u8fc7\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u53d1\u73b0\u5982\u679c\u6709\u6ca1\u6709\u7528\u7684\u53ef\u4ee5\u5f80\u4e0a\u4e22\uff0c\u7136\u540e\u5728\u540e\u9762\u8865\u4e86\u4e00\u4e0b\u5c31\u8fc7\u4e86\u5927\u6837\u4f8b\u3002</p> <p>\u7136\u540e\u56de\u53bb\u770b T2\uff0c\u7a81\u7136\u89c9\u5f97\u76f4\u63a5\u6362\u4e2a\u5143\u7136\u540e\u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b\u770b\u770b\u6709\u6ca1\u6709\u6574\u6570\u89e3\u5c31\u884c\u4e86\uff0c\u7136\u540e\u5199\u5b8c\u3002</p> <p>\u770b T3\uff0c\u8fd8\u5269 1h 50m\uff0c\u4f30\u8ba1\u5199\u4e0d\u5b8c\uff0c\u76f4\u63a5\u5f00\u59cb\u6253\u66b4\u529b\u548c\u7279\u6b8a\u6027\u8d28\u5206\uff0c\u6700\u540e\u53d1\u73b0\u5199\u6302\u4e86\uff0c\u53cd\u6b63\u65e0\u6240\u8c13\uff0c\u671f\u671b\u5e94\u8be5 300+\uff0cpj1=\u6709\u4e86\u3002</p> <p>\u7136\u540e\u51fa\u53bb\u548c xyh\uff0cczh \u4e00\u8d77\u5403\u706b\u9505\uff0c\u8fd8\u53bb 711 \u4e70\u4e86\u4e00\u76d2 \u5c0f \u6c49 \u5821 \uff0c\u996d\u56e2\u548c\u4e00\u74f6\u8336\u03a0\u3002</p> <p>\u5728 xyh \u4ed6\u4eec\u8ba2\u7684\u9152\u5e97\u7761\u4e86\u4e00\u4f1a\u89c9\uff0c\u7136\u540e\u53bb\u8003\u573a\uff0c\u8fdb\u8003\u573a\u7684\u65f6\u5019\u770b\u5230\u4e86 JuanZhang \uff01\uff01\u5d14\u8001\u5e08\u597d\u5e05\uff01\uff01\uff01</p> <p>\u7136\u540e\u8fdb\u8003\u573a\u4e4b\u540e\u5e76\u6ca1\u6709\u770b\u5230 Mea\uff0c\u6240\u4ee5\u5c31\u8fdb\u53bb\u4e86\uff0cgjh\u4e00\u76f4\u5728\u65c1\u8fb9\u5047\u6211/ng</p> <p>\u5f00\u9898\uff0cT1\u4e00\u773c\u8ba4\u4e3a\u662f\u4e2a Dp\uff0c\u60f3\u4e86\u4e00\u4f1a\u5f00\u59cb\u5199\uff0c\u7136\u540e\u53d1\u73b0\u6709\u540e\u6548\u6027\uff0c\u601d\u8003\u4e86\u4e00\u4e0b\u53d1\u73b0\u6362\u4e00\u4e0b\u9636\u6bb5\u5c31\u884c\u3002</p> <p>\u4e4b\u540e\u53d1\u73b0\u72b6\u6001\u5408\u6cd5\u6027\u4e0d\u80fd\u4fdd\u8bc1\uff0c\u5148\u6253\u4e86\u4e00\u4e2a 40pts\u66b4\u529b\u7a33\u4f4f\u3002</p> <p>\u7136\u540e\u60f3\u5230\u53ef\u4ee5\u76f4\u63a5\u8bb0\u5f55\u8f6c\u79fb\u8def\u5f84\u7136\u540e\u5224\uff0c\u5148\u7b97\u4e86\u4e00\u4e0b\u7a7a\u95f4\u53d1\u73b0\u4e0d\u4f1a\u70b8\uff0c\u4e8e\u662f\u5c31\u5199\u4e86\u3002</p> <p>\u7136\u540e\u770b T2\uff0c\u8ba4\u4e3a\u662fshaber\u9898\uff0c\u7136\u540e\u5206\u8ba8\u51fa\u6765\u3002</p> <p>\u7ed3\u679c\u6b63\u8d1f\u5206\u5f00\u7ef4\u62a4minmax\u5199\u6302\u4e86\uff0cT3\u7684\u6709\u624b\u90e8\u5206\u5206\u90fd\u6ca1\u6253\u3002</p> <p>\u5410\u4e86\uff0c\u6700\u540e\u53d1\u73b0\u5199\u6302\u7684\u65f6\u5019\u7740\u6025\u4e86\uff0c\u672c\u6765\u4e4b\u524d\u5fc3\u6001\u4e00\u76f4\u5f88\u5e73\u7a33\u7684\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u4ee5\u4e3a\u81ea\u5df1\u53ef\u4ee5 200+ \u7136\u540e\u7b56\u7565\u6df7\u4e71\u4e86\u3002</p> <p>\u770b\u6765\u5e94\u5bf9\u7a81\u53d1\u7684\u80fd\u529b\u8fd8\u4e0d\u591f\uff0c\u4e0d\u8fc7\u65e0\u6240\u8c13\uff0c\u53cd\u6b63\u5e94\u8be5\u80fd\u8fdb NOIP\u3002</p> <p>\u56de\u5bb6\uff0c\u5199\u6e38\u8bb0\uff0c\u6d4b\u4ee3\u7801\uff0c\u8865 whk\uff0c\u4eca\u5929\u5c31\u8fd9\u6837\u8fc7\u53bb\u4e86\uff0c\u53c8\u662f\u5e73\u5e38\u7684\u4e00\u5929\u5462\u3002</p>"}, {"location": "misc/CSP2022/#1030", "title": "10.30", "text": "<p>\u56de\u53bb whk \u4e86\uff0c\u4f30\u8ba1\u8003\u7684\u7a00\u6487\u3002</p> <p>\u7b80\u5355\u505a\u4e00\u4e2a\u8d5b\u540e\u603b\u7ed3\u5427\uff1a</p> <p>PJ\uff1a\u8003\u7684\u8fd8\u884c\uff0c\u4f46\u662f\u6574\u4f53\u505a\u9898\u901f\u5ea6\u6162\u4e86\uff0c\u88ab T2 \u8bc8\u9a97\u4e86 30 min \u6ca1\u6362\u9898\u7136\u540e\u5bfc\u81f4 T3 \u6ca1\u65f6\u95f4\u5199\u5b8c\u3002</p> <p>\u4f46\u662f\u53d1\u73b0 T3 \u5199\u4e0d\u5b8c\u4e86\u4e4b\u540e\u679c\u65ad\u5148\u6253\u66b4\u529b\u548c\u7279\u6b8a\u6027\u8d28\u518d\u68c0\u67e5\u5df2\u7ecf\u5199\u4e86\u7684\u9898\u662f\u5426\u5199\u6302\u8fd9\u70b9\u633a\u597d\u7684\u3002</p> <p>\u7136\u540e T4 \u4e00\u773c\u6ca1\u6709\u601d\u8def\u7684\u65f6\u5019\u6ca1\u6709\u6025\uff0c\u5148\u51b7\u9759\u601d\u8003\u7136\u540e\u60f3\u51fa\u7ed3\u8bba\uff0c\u4e5f\u6ca1\u6709\u60f3\u5230\u7ed3\u8bba\u5c31\u72c2\u559c\uff0c\u800c\u662f\u8003\u8651\u4e86\u4e00\u4e0b corner case \u8fd8\u6709 dp \u7684\u540e\u6548\u6027\u548c\u5408\u6cd5\u6027\uff0c\u907f\u514d\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\uff0c\u5199\u5b8c\u6d4b\u5927\u6837\u4f8b + \u62cd\u786e\u8ba4\u65e0\u8bef\u4e86\u518d\u53bb\u770b\u7684 T3\u3002</p> <p>T2 \u88ab\u8bc8\u9a97\u4e86\uff0c\u4f46\u662f\u5148\u6253\u4e86 60pts \u66b4\u529b\u786e\u4fdd\u5206\u6570\uff0c\u7136\u540e\u653e\u6389 T2 \u53bb\u770b\u540e\u9762\u7684\uff0c\u4e4b\u540e\u6362\u4e2a\u8111\u5b50\u6e05\u9192\u70b9\u4e86\u518d\u8fc7\u6765\u60f3\u9898\u3002</p> <p>\u6700\u540e\u7559\u4e86\u4e00\u70b9\u65f6\u95f4\u5728 Linux \u4e0b\u9762\u7f16\u8bd1\u4e86\u4e00\u6b21\uff0c\u671f\u671b\u5f97\u5206\u662f 100 + 100 + 20 ~ 60 + 100\u3002</p> <p>Pj \u8003\u7684\u662f\u5f88\u7b26\u5408\u671f\u671b\u7684\u7b56\u7565\u7684\u3002</p> <p>TG\uff1a\u8003\u7684\u5f88\u70c2\uff0cT1 \u5f00\u573a\u5c31\u60f3\u5230\u4e00\u4e2a\u505a\u6cd5\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u5565\u8fd9\u4e2a\u65f6\u5019\u76f4\u63a5\u6025\u4e86\uff0c\u76f4\u63a5\u5f00\u83bd\uff0c\u6839\u672c\u6ca1\u7ec6\u60f3\u6b63\u786e\u6027\u548c\u5408\u6cd5\u6027\uff0c\u7ed3\u679c\u53d1\u73b0\u81ea\u5df1\u6f0f\u4e86\u72b6\u6001\uff0c\u82b1\u4e86\u989d\u5916\u7684\u65f6\u95f4\u53bb\u68c0\u67e5\u6392\u9519\uff0c\u8fd9\u4e2a\u65f6\u5019\u53d1\u73b0\u505a\u6cd5\u5047\u4e86\uff0c\u4f46\u662f\u8fd8\u6ca1\u6025\uff0c\u601d\u8003\u4e86\u4e00\u6ce2\u600e\u4e48\u641e\u6210\u5408\u6cd5\u7684\uff0c\u7136\u540e\u60f3\u51fa\u6765\u4e86\u3002</p> <p>\u770b T2\uff0c\u4e00\u773c\u770b\u51fa\u5206\u7c7b\u8ba8\u8bba\uff0c\u4f46\u662f\u5206\u7c7b\u8ba8\u8bba\u7684\u65f6\u5019\u6709\u70b9\u78e8\u8e6d\uff0c\u5fc3\u91cc\u89c9\u5f97\u65f6\u95f4\u8fd8\u5f88\u591f\u7528\uff08\u6b64\u65f6\u4ee5\u4e3a\u81ea\u5df1\u53ef\u4ee5\u62ff\u5230 200\uff09\uff0c\u7136\u540e\u5c31\u6162\u60a0\u60a0\u7684\u5199\uff0c\u6d6a\u8d39\u4e86\u65f6\u95f4\u3002</p> <p>\u540e\u9762\u7ebf\u6bb5\u6811\u7ef4\u62a4 RMQ \u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u9047\u5230\u4e86\u8003\u524d\u4e00\u5929\u7684\u65b0 Trick \u5bfc\u81f4\u72c2\u559c\uff0c\u8fd9\u4e2a\u65f6\u5019\u6ca1\u51b7\u9759\u4e0b\u6765\u53bb\u68c0\u67e5\u5b9e\u73b0\u7ec6\u8282\uff0c\u6070\u597d\u8fd9\u4e2a Trick \u5b9e\u73b0\u4e0d\u597d\u5f04\uff0c\u5dee\u4e0d\u591a\u5199\u4e86 40 ~ 50 min \u624d\u610f\u8bc6\u5230\u5199\u6cd5\u5047\u4e86\uff0c\u6b64\u65f6\u5927\u6982\u8fd8\u5269 1h 30min\uff0c\u8fd9\u4e2a\u65f6\u5019\u5fc3\u6001\u5c31\u6025\u4e86\u3002</p> <p>\u5176\u5b9e\u6b63\u786e\u7b56\u7565\u662f\u76f4\u63a5\u62ff\u6027\u8d28\u5206\u8dd1\u8def\u53bb\u6253 T3 \u66b4\u529b\uff0c\u4f46\u662f\u5fc3\u91cc\u4e00\u76f4\u4ee5\u4e3a\u81ea\u5df1\u53ef\u4ee5\u8c03\u51fa T2\uff0c\u7ed3\u679c\u8d8a\u8c03\u8d8a\u6025\uff0cT2\u6ca1\u8df3\u51fa\u6765\uff0cT3 \u7684\u5927\u4f17\u66b4\u529b\u5206 60pts \u4e5f\u6ca1\u6253\uff0c\u76f4\u63a5\u6012\u6302 120 pts\uff0cT4 \u6839\u672c\u90fd\u6ca1\u770b\uff0c\u5e94\u8be5\u6709 20 pts \u5de6\u53f3\u7684\u66b4\u529b\u7684\u3002</p> <p>\u6240\u4ee5\u603b\u7ed3\u662f\uff1a\u5e94\u5bf9\u7a81\u53d1\u60c5\u51b5\u7684\u65f6\u5019\u8111\u5b50\u4e0d\u591f\u6e05\u9192\uff0c\u614c\u4e86\uff0c\u6ca1\u601d\u8003\u600e\u4e48\u5728\u5f53\u524d\u60c5\u51b5\u4e0b\u6700\u4f18\u5316\u81ea\u5df1\u7684\u5f97\u5206\uff0c\u7136\u540e\u5c31\u5fc3\u6001\u6eda\u96ea\u7403\uff0c\u8d8a\u6765\u8d8a\u6025\uff0c\u4ee3\u7801\u80fd\u529b\u4e5f\u4e0d\u591f\uff0c PJT3 \u6ca1\u5199\u51fa\u6765\uff0cTGT2 \u6ca1\u8c03\u51fa\u6765\uff0c\u53ef\u80fd\u4e0b\u6b21\u8003\u524d\u9700\u8981\u591a\u5199\u51e0\u4e2a\u5927\u6a21\u62df\u6765\u5e73\u590d\u5fc3\u6001\uff0c\u6700\u597d\u662f\u5b9a\u65f6\u505a\uff0c\u6a21\u62df\u8003\u573a\u73af\u5883\uff0c\u9047\u5230\u7a81\u53d1\u72b6\u51b5\u4e5f\u80fd\u5feb\u901f\u8f6c\u53d8\u7b56\u7565\u4f18\u5148\u62ff\u5206\u3002</p> <p>\u6700\u91cd\u8981\u7684\uff1a\u5c3d\u91cf\u4fdd\u6301\u8111\u5b50\u7684\u76f8\u5bf9\u6e05\u9192\uff0c\u4e0d\u8981\u55ef\u83bd\uff0c\u964d\u4f4e\u5fc3\u6001\u4e0a\u4e0b\u6ce2\u52a8\uff0c\u5bf9\u7b56\u662f\u591a\u6253\u6a21\u62df\u8d5b\uff0c\u53ef\u80fd\u73b0\u5728\u8fd8\u6ca1\u7279\u522b\u9002\u5e94 OI \u8d5b\u5236\uff0c\u8981\u591a\u7ec3\u3002</p>"}, {"location": "misc/CSP2022/#1031", "title": "10.31", "text": "<p>\u6587\u5316\u8bfe\u81ea\u95ed\u4e86\u3002</p> <p>\u8fd9\u7bc7\u6e38\u8bb0\u5c31\u5199\u5230\u8fd9\u91cc\u4e86\u3002</p>"}, {"location": "misc/CSP2022/#118", "title": "11.8", "text": "<p>upd:</p> <p>TG: 100 + 40 + 0 + 0 PJ: 90 + 100 + 0 + 100</p> <p>shaber.</p>"}, {"location": "misc/NOIP2022/", "title": "NOIP2022", "text": "<p>\u5982\u679c\u4f60\u662f\u5728 LuoguBlog \u6216\u8005 cnblogs \u770b\u5f97\u5230\u7684\u3002</p> <p>\u5efa\u8bae\u5230 GithubBlog \u4e0a\u770b\uff0c\u56e0\u4e3a\u6211\u7528\u4e86\u53ea\u6709 mkdocs \u652f\u6301\u7684\u6269\u5c55\u8bed\u6cd5\u3002</p>"}, {"location": "misc/NOIP2022/#noip2022", "title": "NOIP2022 \u6e38\u8bb0", "text": ""}, {"location": "misc/NOIP2022/#1117", "title": "11.17", "text": "<p>\u4e0a\u5348\u5199\u4e86\u4e00\u4e2a\u80fd\u91cf\u5b88\u6052+\u503e\u659c\u4f20\u9001\u5e26\u6a21\u578b\u7684\u597d\u5403\u9898\u3002</p> <p>\u6ca1\u6765\u5f97\u53ca\u5199 notes \u5c31\u6536\u5230\u4e86\u5c0f\u505c\u8bfe\u7684\u6d88\u606f\u3002</p> <p>\u7136\u540e\u4e0b\u5348\u5c31\u56de\u53bb\u6574\u4e86\u70b9\u82b1\u6d3b\uff0c\u5199\u4e86\u70b9 Vim-usage\u3002</p> <p>\u7136\u540e\u628a\u671f\u671b dp \u90a3\u4e2a\u9898\u5199\u4e86\uff0c\u914d\u7f6e\u4e86\u4e00\u4e0b\u73af\u5883\uff0c\u53d1\u73b0\u5b66\u6821\u7535\u8111\u662f Vim 8.0 /ch </p> <p>\u6240\u4ee5\u5378\u8f7d\u4e86\u5728 D \u76d8\u91cc\u91cd\u88c5\u4e86\u4e00\u4e2a 9.0\uff0c\u4f46\u662f\u597d\u50cf mkdp \u51fa\u4e86\u70b9\u95ee\u9898\uff0c\u4e8e\u662f\u53d1\u4e86\u4e00\u4e2a issue.</p> <p>\u5443\u5443\uff0c\u7136\u540e\u665a\u4e0a\u5403\u996d\u4e4b\u524d\u5c31\u662f\u770b\u6559\u804c\u5de5\u7bee\u7403\u8054\u8d5b\u3002</p> <p>\u6211\u7684\u5316\u5b66\u8001\u5e08\uff0c\u7269\u7406\u8001\u5e08\uff0c\u8fd8\u6709 OI \u6559\u7ec3\u53d1\u6325\u7a33\u5b9a\uff0c\u5e26\u9886\u9ad8\u4e00\u6559\u5e08\u7ec4\u4ee5 34\uff1a19 \u7684\u597d\u6210\u7ee9\u51fb\u8d25\u4e86\u9ad8\u4e8c\u6559\u5e08\u7ec4\uff01</p> <p>\u7136\u540e\u5728\u53e6\u5916\u4e00\u8fb9\u770b\u5230\u4e86\u521d\u4e2d\u7684\u73ed\u4e3b\u4efb\u8001\u5e08\u738b\u8001\uff0c\u8fc7\u53bb\u770b\u7684\u65f6\u5019\u6b63\u597d\u770b\u5230\u738b\u8001\u5355\u624b\u8fdb\u4e86\u4e00\u4e2a\u5f88\u6f02\u4eae\u7684\u4e09\u5206\u8fd8\u662f\u4e24\u5206\u3002</p> <p>\u62dc\u8c22\uff0c\u540e\u9762\u4e00\u5806\u539f 19 \u73ed\u7684\u4eba\u56f4\u7740\u738b\u8001\u804a\u5929\u3002\u3002</p> <p>\u5fc3\u6001\u5565\u7684\u603b\u7ed3\u5c31\u4e0d\u6302\u4e0a\u6765\u4e86\uff0c\u8981\u770b\u7684\u65f6\u5019\u7ffb\u4e0b\u65e5\u8bb0\u672c\u3002</p> <p>C \u8001\u5e08\u627e\u6211\u4eec\u4e09\u4e2a\u8c08\u4e86\u4e0b\u4eca\u540e\u7684\u76ee\u6807\u4e4b\u7c7b\u7684\u3002</p> <p>NOIP \u653e\u677e\u8003\u5427\u3002</p> <p>\u5f00\u6838\u4e86\u9152\u7cbe\u961f\u957f\uff0c\u611f\u8c22 Ed \u63d0\u4f9b\u7684\u5173\u952e\u4fe1\u606f\u3002</p>"}, {"location": "misc/NOIP2022/#1118", "title": "11.18", "text": "<p>Restart \u80fd\u89e3\u51b3 90% \u7684\u95ee\u9898\uff08\u786e\u4fe1\u3002</p> <p>\u5443\u5443\uff0c\u4eca\u5929\u662f\u6446\u7684\uff0c\u4e0a\u5348\u5f00\u4e86\u4e2a ABC277 VP\uff0c\u4e2d\u95f4\u4e0b\u53bb\u62cd\u4e86\u4e2a\u7167\u82b1\u4e86 30min\uff0c\u56de\u6765\u5199\u4e86\u677f\u5b50 E\uff0cD \u6709\u4e2a <code>[i]</code> \u6253\u6210 <code>[n]</code> \u4e8e\u662f\u5728\u65f6\u95f4\u7ed3\u675f\u540e 1min \u8fc7\u4e86\u3002</p> <p>\u7136\u540e\u5c31\u662f\u6446\u70c2\uff0c\u6446\u70c2\u3002</p> <p>F 2400\uff0c\u57fa\u672c\u6ca1\u5565\u601d\u8def\uff0c\u6253\u7b97\u53bb\u505a\u4e0b Poker \u4e5f\u6ca1\u5e72\u52b2\u3002</p> <p>\u4e8e\u662f\u4e0b\u5348\u7ee7\u7eed\u6446\u70c2\uff0c\u548c kmz \u51fa\u53bb\u5403\u4e86\u4e2a\u996d\uff0c\u73b0\u5728\u7ec8\u4e8e\u5f00\u59cb\u67e5\u6761\u5b50\u4e86\uff1f</p> <p>\u665a\u4e0a\u8bf4\u4e86\u4e0b\u53bb\u7ef5\u9633\u8003\u8bd5\u7684\u4e8b\u60c5\uff0c\u8fd9\u6b21\u662f\u5728\u5357\u5c71\u3002</p> <p>\u6709\u6ca1\u6709\u4eba\u80fd\u9762\u57fa\u554a/kel</p> <p></p> <p>\u4e0a\u6b21\u5728\u4e1c\u8fb0\u8003\u8bd5\uff0c\u6211\u7b97\u662f\u649e\u5230\u90a3\u5565\u4e86\u3002</p> <p>\u8fd9\u6b21\u6362\u5230\u5357\u5c71\u8003\u8bd5\uff0c\u5e0c\u671b\u80fd\u6709\u66f4\u597d\u7684 rp\uff1f</p> <p>C \u8001\u5e08\u627e\u6211\u4eec\u9ad8\u4e00\u7684\u6240\u6709\u4eba\u6765\u96c6\u4f53\u8c08\u4e86\u4e00\u6b21\u8bdd\uff0c\u7528\u4ed6\u7684\u8bdd\u8bf4\u662f\u4e00\u4e2a\u503c\u5f97\u7eaa\u5ff5\u7684\u65f6\u523b\u3002</p> <p>\u76f8\u4fe1\u66b4\u529b\uff01\uff01\uff01\uff01\u76f8\u4fe1 CCF \u7684\u6570\u636e\u4e00\u5b9a\u5f88\uff01\uff01\uff01\uff01\uff01</p> <p>\u56e0\u4e3a\u4e4b\u540e\u5927\u6982\u7387\u6ca1\u6cd5\u96c6\u9f50\u4e86\u3002</p> <p>\u665a\u4e0a\u627e wkm \u5b66\u4e86\u4e00\u4e0b gdb \u548b\u7528\uff0c\u660e\u5929\u8981\u7528\u4e00\u7528\u3002</p> <p>\u542c\u8bf4 wkm \u4e0a\u5348\u88ab\u9632\u76d7\u5355\u5411\u95e8\u9501\u5728\u5929\u53f0\u4e86\u8349\uff0c\u6700\u540e\u8fd8\u662f\u558a\u4e86\u4e00\u4e2a\u697c\u4e0b\u6253\u626b\u4e2d\u534e\u56ed\u7684\u84dd\u80cc\u5fc3\u5e2e\u5fd9\u7684\uff08\u3002</p> <p>\u5443\u5443\uff0c\u53ef\u80fd\u660e\u5929\u8981\u5199\u4e00\u5199 Task \u548c Limit \u4e4b\u7c7b\u7684\uff0c\u611f\u89c9\u8fd9\u6837\u592a\u6446\u4e86\u4e0d\u597d\u3002</p>"}, {"location": "misc/NOIP2022/#1119", "title": "11.19", "text": "<p>\u8fdb\u884c\u4e86\u4e00\u4e2a\u6a21\u62df\u8d5b\u7684\u8003\uff0c100 + 0 + 100 + 33\u3002</p> <p>T2 \u56e0\u4e3a\u4e0d\u4f1a\u7fa4\u8bba\u6240\u4ee5\u6ca1\u8bfb\u61c2\u9898\uff0c\u4e00\u5206\u6ca1\u62ff\u3002</p> <p>T4 \u601d\u8def\u6b63\u786e\u7136\u800c\u5c11\u8ba8\u8bba\u4e86\u4e9b\u5185\u5bb9\u3002</p> <p>\u548c ccr \u8ba8\u8bba\u4e86\u4e00\u4e0b\u8ba4\u4e3a T4 \u5e94\u8be5\u5c31\u662f\u5206\u8ba8\uff0cT2 \u6bd4\u8f83\u7384\u5e7b\u3002</p> <p>\u4e0b\u5348\u5199\u5b8c Vim-Usage \u4e4b\u540e\u88ab opj \u53eb\u53bb\u7ed9\u5b66\u5f1f\u8bb2\u8ff0\u8840\u6cea\u7ecf\u5386\u3002</p> <p>\u5dee\u4e0d\u591a\u8bf4\u4e86\u8fd9\u4e9b\u5185\u5bb9\u5427\uff08\u6709\u70b9\u4e71\uff09\uff1a</p> draft.txt <p>\u9898\u89e3\u7684\u5229\u5f0a\u3002</p> <ul> <li>\u4e0d\u6562\u8d28\u7591\uff0c\u601d\u8003\u91cf\u592a\u5c11\uff0c\u4e45\u4e86\u4e4b\u540e\u601d\u7ef4\u6d3b\u6027\u5c31\u4e0b\u964d\u4e86\uff0c\u6c34\u5e73\u4e5f\u4f1a\u4e0b\u964d\u3002     \u4e5f\u4f1a\u6709\u4ee5\u4e3a\u81ea\u5df1\u80fd\u60f3\u51fa\u6765\u7684\u8fd9\u79cd\u5fc3\u7406\uff0c\u7136\u540e\u4e0d\u6df1\u5165\uff0cG\u3002</li> <li>\u5bf9\u601d\u8def\u662f\u4e00\u79cd\u65b0\u7684\u542f\u53d1\uff08\u5c3d\u91cf\u627e\u548c\u81ea\u5df1\u505a\u6cd5\u7c7b\u4f3c\u7684\u9898\u89e3\uff0c\u8fd9\u6837\u6548\u679c\u66f4\u597d\u3002\uff09</li> <li>\u80fd\u5b66\u5230\u4e1c\u897f\u5c31\u662f\u597d\u7684\u3002</li> </ul> <p>\u4e0d\u7ba1\u4f60\u5b66\u7684\u8fd9\u4e2a\u8003\u8bd5\u4f1a\u4e0d\u4f1a\u8003\uff0c\u6700\u91cd\u8981\u7684\u662f\u5b66\u6ca1\u5b66\u5230\u5957\u8def\uff0c\u540e\u671f\u90fd\u662f\u6bd4\u8c01 Trick \u89c1\u5f97\u591a\u3002 \u601d\u8003\u7684\u90a3\u4e2a\u8fc7\u7a0b\u624d\u662f\u6700\u91cd\u8981\u7684\u3002</p> <p>\u5982\u679c\u5f00\u59cb\u5bf9\u7740\u9898\u53d1\u5446\u7684\u65f6\u5019\uff0c\u53bb\u5395\u6240\u6216\u8005\u518d\u8bfb\u4e00\u904d\u9898\u9762\u3002 \u628a\u81ea\u5df1\u601d\u7ef4\u7684\u6d41\u7a0b\u56fe\u753b\u51fa\u6765\uff0c\u514d\u5f97\u56e0\u4e3a\u53d1\u5446\u6d6a\u8d39\u65f6\u95f4\uff0c\u4e2d\u65ad\u601d\u8003\u8fc7\u7a0b</p> <p>\u6df1\u5ea6\u601d\u8003\u7684\u5b9a\u4e49\u5927\u6982\u662f\u6307\uff0c\u8111\u888b\u91cc\u9762\u6709\u4e00\u4e2a\u6e05\u6670\u7684\u6d41\u7a0b\u56fe\uff0c\u77e5\u9053\u6bcf\u4e00\u6b65\u8981\u7ef4\u62a4\u4ec0\u4e48\u4fe1\u606f\uff0c\u77e5\u9053\u4e0b\u4e00\u6b65\u8981\u5e72\u4ec0\u4e48\uff0c\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5e72\uff0c\u77e5\u9053\u4e00\u4e9b\u7ec6\u8282\uff0c\u4f46\u662f\u786e\u5b9e\u56e0\u4e3a\u4e00\u4e9b key \u6ca1\u60f3\u5230\u4e0d\u4f1a\uff0c\u8fd9\u4e2a\u65f6\u5019\u770b\u9898\u89e3\u624d\u662f\u6709\u4ef7\u503c\u7684\u3002</p> <p>OI \u8fd9\u4e1c\u897f\u771f\u6b63\u5438\u5f15\u4eba\u7684\u5730\u65b9\u5728\u4e8e\u601d\u8003\u8fc7\u540e\u90a3\u4e2a\u62e5\u6709\u5de8\u5927\u6210\u5c31\u611f\u7684\u8fc7\u7a0b\uff08\u60f3\u51fa\u6765\uff0c\u770b\u9898\u89e3\u604d\u7136\u5927\u609f\u4e4b\u7c7b\u7684\uff09\u3002</p> <p>\u6240\u4ee5\u771f\u7684\u6295\u5165\u4e4b\u540e\u4f1a\u53d1\u73b0\uff0c\u5176\u5b9e\u9893\u5e9f\uff0c\u4e5f\u5c31\u662f\u77ed\u65f6\u95f4\u80fd\u83b7\u5f97\u6210\u5c31\u611f\u7684\u4e1c\u897f\uff0c\u771f\u7684\u6ca1\u6709\u610f\u601d\u3002</p> <p>JX \u627e\u6211\u95ee\u4e86\u70b9 Vim \u76f8\u5173\u7684\u4e1c\u897f\uff0c\u611f\u89c9\u5176\u5b9e OI \u5fc5\u8981\u7684\u914d\u7f6e\u548ckey\u4e5f\u5c31\u90a3\u4e9b\uff1f</p> <p>\u53d1\u73b0\u6ca1\u6709\u4eba\u53ef\u4ee5\u548c\u81ea\u5df1\u4e00\u8d77\u4f4f\uff0cxzq \u548c hfy \u7684\u5bb6\u957f\u90fd\u8981\u4e00\u8d77\u53bb\uff0c\u6240\u4ee5\u6211\u5bc4\u5bc4\u4e86\u3002</p> <p>\u665a\u4e0a\u56de\u6765\u5f04\u4e86\u4e00\u4e0b\u535a\u5ba2\u7684\u6846\u67b6\uff0c\u66f4\u65b0\u4e86 mkdocs\u3002</p> <p>\u88ab cftm \u6574\u7834\u9632\u4e86\uff0c\u5177\u4f53\u539f\u56e0\u4e0d\u63d0\u3002</p> <p>\u4e45\u8fdd\u7684\u5403\u4e86\u53ea\u70e4\u9e21\uff0c\u9999\u7684\u3002</p> <p>\u53d1\u73b0\u7535\u5b50\u73ed\u724c\u4e0a\u7684\u4e2a\u4eba\u4ecb\u7ecd\u53ef\u4ee5\u5728\u7f51\u4e0a\u6539\uff0c\u4e8e\u662f\u6539\u6210\u4e86\u8fd9\u6837\uff1a</p> <p></p> <p>\u54e6\u5bf9\u4e86\uff0c\u8bb0\u5f97\u6574\u7406\u4e0b\u535a\u5ba2\u7684\u56fe\u7247\uff0c\u6362\u4e2a\u56fe\u5e8a\u3002</p> <p>\u5443\u5443\uff0c\u611f\u89c9\u5c31\u8fd9\u4e9b\u4e86\u3002</p>"}, {"location": "misc/NOIP2022/#1120", "title": "11.20", "text": "<p>\u8001\u7238\u53bb\u8dd1\u6210\u9a6c\u4e86\u3002</p> <p>\u66f4\u65b0\u5230\u4e86 win11 22H2\uff0c\u611f\u89c9\u66f4\u8212\u670d\u4e86\u3002</p> <p>\u4e0a\u5348\u627e\u4e86\u627e\u4e07\u534e\u955c\u7684\u8d44\u6e90\uff0c\u7a81\u7136\u60f3\u5230\u4e00\u4e2a\u4e8b\u60c5\u3002</p> <p>\u611f\u89c9\u5f88\u591a\u4e8b\u7269\u548c\u6211\u7684\u5173\u7cfb\u597d\u6bd4 \\(\\sin x\\) \u548c \\(\\cos x\\)\u3002</p> <p>\u6bd4\u5982\u6211\u5f88\u65e9\u7684\u65f6\u5019\u5c31\u770b\u89c1\u8fc7\u4e1c\u65b9\uff0c\u4f46\u662f\u6ca1\u6709\u5165\u5751\uff0c\u5f53\u65f6\u770b cz \u7684\u5165\u5751\u6307\u5357\u91cc\u5199\u7684\u5f39\u5e55\u5c04\u51fb\u6e38\u620f\uff0c\u89c9\u5f97\u53ef\u80fd\u6ca1\u4ec0\u4e48\u610f\u601d\u3002</p> <p>\u7ed3\u679c\u540e\u6765\u56e0\u4e3a\u67d0\u9996\u6b4c\u88ab\u5e26\u5165\u4e86\u5751\uff0c\u5c1d\u8bd5\u4e86\u5996\u5996\u68a6\uff0c\u559c\u6b22\u4e0a\u4e86 STG \u7684\u98ce\u683c\u3002</p> <p>\u4e07\u534e\u955c\u4e5f\u662f\uff0c\u6211\u4e4b\u524d\u641c\u5e7b\u60f3\u4e07\u534e\u955c\u7684\u65f6\u5019\u641c\u51fa\u8fc7\u4e07\u534e\u955c\uff0c\u5f53\u65f6\u89c9\u5f97\u5c31\u662f\u4e2a\u4ec0\u4e48\u756a\u5267\u5427\u53ef\u80fd\u3002</p> <p>\u7136\u540e\u4e5f\u6ca1\u6709\u6df1\u5165\u4e86\u89e3\u8fc7\uff0c\u7ed3\u679c\u5f53\u6211\u60f3\u5c1d\u8bd5 Gal \u7684\u65f6\u5019\uff0c\u4e07\u534e\u955c\u53c8\u51fa\u73b0\u5728\u4e86\u6211\u7684\u773c\u524d\u3002</p> <p>\u6240\u4ee5\u5c31\u771f\u7684\uff0c\u662f\u90a3\u79cd\u4e0d\u65ad\u4ea4\u7ec7\u7f20\u7ed5\u590d\u5408\u79bb\u522b\u7684\u8fc7\u7a0b\uff0c\u6784\u6210\u4e86\u4eba\u751f\u554a\u3002</p> <p>\u4f60\u4ee5\u4e3a\u6211\u4eec\u6e10\u884c\u6e10\u8fdc\u4e86\uff0c\u5b9e\u9645\u4e0a\u5374\u662f\u4e3a\u4e86\u4e0b\u6b21\u76f8\u4ea4\u505a\u51c6\u5907\uff0c\u4f60\u4ee5\u4e3a\u6211\u4eec\u76f8\u4ea4\u4e86\uff0c\u80fd\u5408\u6210\u4e00\u6761\u7ebf\u4e86\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u9a6c\u4e0a\u5c31\u4f1a\u79bb\u522b\u3002</p> <p>\u4efb\u4f55\u4e8b\u60c5\u90fd\u4e0d\u662f Eternal \u7684\uff0c\u6216\u8005\u8bf4\u4f60\u7684\u4eba\u751f\u597d\u6bd4\u706b\u8f66\uff0c\u4f60\u9047\u5230\u7684\u4e8b\u60c5\uff0c\u9047\u5230\u7684\u4eba\uff0c\u4f1a\u5728\u4e0d\u540c\u7684\u7ad9\u4e0a\u8f66\uff0c\u4e0b\u8f66\uff0c\u6216\u8bb8\u5728\u4e58\u5750\u522b\u7684\u7ebf\u8def\u540e\u53c8\u548c\u4f60\u4ea4\u7ec7\u3002</p> <p>\u662f\u8fd9\u6837\u7684\u3002</p> <p>\u6211\u9760\u4e07\u534e\u955c\u597d\u597d\u73a9\uff01\uff01\uff01</p> <p>\u83b2\u534e\uff0c\u83b2\u534e\uff0c\u83b2\u534e\uff0c\u563f\u563f\u2026\u2026</p> <p>\u9ed1\u957f\u76f4\u51b7\u50b2\u5a07\uff0c\u600e\u4e48\u4f1a\u6709\u8fd9\u79cd\u5b58\u5728\uff01\uff01\uff01\uff01\uff01</p> <p>\u56de\u5b66\u6821\u4e4b\u540e\u548c hfy \u8fdb\u884c\u9893\u5e9f\u6d3b\u52a8\uff0c\u559d\u559d\u7ca5\uff0c\u7136\u540e\u7ee7\u7eed\u4e07\u534e\u955c\u3002</p> <p>\u563f\u563f\uff0c\u6211\u7684\u83b2\u534e\uff0c\u563f\u563f\uff0c\u83b2\u534e\u2026\u2026\uff0c\u6211\u7684\u83b2\u534e\u3002</p> <p>\u611f\u89c9\u4e00\u4e2a\u4e8b\u60c5\u662f\uff0c\u6bcf\u6b21\u6253 Gal \u90fd\u4f1a\u53ea\u8d70\u6700\u559c\u6b22\u7684\u89d2\u8272\u7684\u8def\u7ebf\uff0c\u5176\u4ed6\u7684\u7edd\u5bf9\u4e0d\u4f1a\u78b0\u3002</p> <p>\u800c\u4e14\u5982\u679c\u6709 He\uff0c\u9047\u5230\u4e86 Be \u4f1a\u7acb\u9a6c\u8bfb\u6863\u3002</p> <p>\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\uff0c\u4e5f\u8bb8\u662f\u4e2a\u4eba\u6027\u683c\u3002</p> <p></p> <p>\u6765\u770b\u70b9 hfy \u56fe\uff1a</p> <p></p> <p>hfy \u8981\u6c42\u5408\u5f71\uff0c\u8349\u3002</p> <p>\u4e8e\u662f\u5c31\u5408\u5f71\u4e86\u3002</p> <p></p> <p>\u5443\u5443\uff0c\u4f46\u662f\u611f\u89c9\u597d\u50cf\u8fd9\u6837\u6709\u70b9\u8fc7\u4e8e\u9893\u5e9f\u4e86\u3002</p> <p>\u4e0d\u884c\u4e0d\u884c\u4e0d\u884c\u4e0d\u884c\u4e0d\u884c\u4e0d\u884c\uff0c\u8fc7\u4e8e\u6d6e\u8e81\u4e86\u3002</p> <p>\u5199\u5b8c\u6e38\u8bb0\u8d76\u7d27\u505a\u505a\u9898\u6062\u590d\u72b6\u6001\u3002</p> <p>MD\uff0cARC \u7ed9\u6211\u6574\u4e0d\u4f1a\u4e86\uff0c\u6c34\u5e73\u4f4e\u4e0b\uff0c\u53ef\u80fd\u662f\u6709\u70b9\u61d2\u4e86\uff0c\u731c\u4e86\u6027\u8d28\u4e0d\u60f3\u53bb\u8bc1\u660e\u6216\u8005\u8bc1\u4f2a\u3002</p> <p>\u5443\u5443\uff0c\u611f\u89c9\u8fd9\u4e2a\u72b6\u6001\u975e\u5e38\u4e0d\u5bf9\uff0c\u6709\u5fc5\u8981\u6574\u70b9\u4ec0\u4e48\u63d0\u9192\u81ea\u5df1\u3002</p>"}, {"location": "misc/NOIP2022/#1121", "title": "11.21", "text": "<p>\u72b6\u6001\u5f88\u4e0d\u597d\uff0c\u6709\u70b9\u5934\u75db + \u80c3\u75db\u3002</p> <p>\u6574\u5929\u4ec0\u4e48\u90fd\u6ca1\u505a\uff0cfw\u3002</p> <p>\u5199\u4e86\u70b9\u9c9c\u82b1\uff0c\u5c45\u7136\u5f97\u5230\u4e86\u8ba4\u53ef\uff0c\u4e4b\u540e\u62ff\u5230 laptop \u5c31 update \u5230 github blog \u4e0a\u3002</p> <p>\u8fd9\u91cc\u662f\u539f\u6587\uff1a</p> 11-21 \u65e5\u9c9c\u82b1 - Edit <p>Edit </p> <p>Stomachache\uff0cheadache\uff0c\u6253\u5b8c\u7403\u8fc7\u540e\u6362\u8863\u670d\u592a\u6162\u4e86\uff0c\u53ef\u80fd\u662f\u6709\u70b9\u98ce\u70ed\u611f\u5192\u3002</p> <p>\u5403\u4e86\u8fde\u82b1\u6e05\u761f\u80f6\u56ca\u4e4b\u540e\u8fd8\u662f\u4e00\u6837\uff0c\u8fc7\u4e8e\u96be\u53d7\uff0c\u4e00\u9053\u9898\u4e5f\u6ca1\u6709\u505a\u3002</p> <p>\u4e34\u65f6\u8d77\u610f\u51b3\u5b9a\u8bf7\u4e2a\u5047\u51fa\u53bb\u51fa\u4e2a\u996d\uff0c\u4e5f\u7b97\u6563\u6563\u5fc3\u3002</p> <p>\u88f9\u4e0a\u4e94\u5c42\u8863\u670d\uff0c\u6234\u4e0a\u5370\u5237\u7740\u4f01\u9e45\u7684\u53e3\u7f69\uff0c\u8fd9\u597d\u50cf\u662f\u4ece tencent \u90a3\u91cc\u62ff\u56de\u6765\u7684\u5427\u3002</p> <p>\u8d70\u5230 PhOer \u57fa\u53cb\u63a8\u8350\u7684\u8001\u9ebb\u6284\u624b\u5e97\uff0c\u60f3\u70b9\u4e00\u4efd\u8001\u9ebb\uff0c\u4f46\u662f\u8f6c\u5ff5\u4e00\u60f3\uff0c\u611f\u5192\u4e86\u8fd8\u662f\u4e0d\u8981\u5403\u8fa3\u7684\u6bd4\u8f83\u597d\u3002</p> <p>\u201c\u4e09\u4e24\uff0c\u6e05\u6c64\u201d\uff0c\u6211\u5982\u662f\u8d70\u8fdb\u5e97\u3002</p> <p>\u7ed9\u4eba\u4e00\u79cd\u5f88\u6000\u5ff5\u7684\u611f\u89c9\u554a\uff0c\u5c0f\u65f6\u5019\u7ecf\u5e38\u4f1a\u5403\u534e\u9633\u90a3\u8fb9\u7684\u4e00\u5bb6\u8001\u9ebb\u6284\u624b\uff0c\u4ece\u6765\u90fd\u662f\u5403\u6e05\u6c64\u3002</p> <p>\u4f46\u662f\u8fd8\u662f\u4ee5\u5b69\u63d0\u7684\u8eab\u4efd\u6ee1\u610f\u7684\u63a5\u53d7\u4e86\u4e00\u7897\u7897\u4e00\u4e24\u7684\u6284\u624b\u3002</p> <p>\u5f88\u70eb\uff0c\u5f88\u5408\u6211\u610f\uff0c\u51fa\u6765\u5c31\u662f\u4e3a\u4e86\u5403\u4e0a\u4e00\u7897\u8fd9\u6837\u70ed\u4e4e\u4e4e\u7684\u6284\u624b\u7684\uff0c\u4e5f\u8bb8\u4f1a\u8ba9\u6211\u7f13\u89e3\u4e00\u70b9\u5427\u3002</p> <p>\u600e\u4e48\u611f\u89c9\u7fa4\u53cb\u6bd4\u4e09\u6b21\u5143\u7684\u59b9\u5b50\u8fd8\u4f53\u8d34\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u4ee5\u524d\u90a3\u6b21\u7ecf\u5386\u8ba9\u6211\u5bf9\u4e09\u6b21\u5143\u7684\u59b9\u5b50\u5931\u53bb\u4e86\u597d\u611f\u5427\u3002</p> <p>\u4e0d\u7ba1\u5e72\u4ec0\u4e48\uff0c\u6211\u90fd\u662f\u90a3\u79cd\u5728\u4e00\u68f5\u6811\u4e0a\u540a\u6b7b\u7684\u4eba\u3002</p> <p>Galgame \u4e5f\u662f\uff0c\u53ea\u63a8\u81ea\u5df1\u559c\u6b22\u89d2\u8272\u7684 HE\uff0c\u77e5\u9053\u6ca1\u6709 HE \u5c31\u7edd\u5bf9\u4e0d\u4f1a\u5165\u624b\u3002</p> <p>\u611f\u60c5\u4e5f\u662f\u8fd9\u6837\u7684\uff0c\u4f46\u4e5f\u56e0\u4e3a\u8fd9\u4e2a\u88ab\u4f24\u7684\u5f88\u6df1\uff0c\u4e0d\u7ed9\u5e78\u597d\u5b83\u6ca1\u6709\u5f71\u54cd\u5230\u6211\uff0c\u6216\u8005\u8bf4\u53ea\u5b58\u5728\u6b63\u9762\u5f71\u54cd\u3002</p> <p>\u60f3\u5230\u8fd9\u91cc\uff0c\u4e00\u53e3\u6c64\u559d\u4e0b\u53bb\uff0c\u597d\u70eb\uff01</p> <p>\u70ed\u6c14\u84b8\u817e\u7740\uff0c\u955c\u7247\u4e0a\u8d77\u4e86\u4e00\u5c42\u6c34\u73e0\u3002</p> <p>\u8212\u670d\u591a\u4e86\u3002</p> <p>\u8d70\u51fa\u53bb\uff0c\u53bb\u5230\u7ae0\u9c7c\u70e7\u7684\u644a\u5b50\uff0c\u644a\u4e3b\u662f\u4e00\u4e2a\u6148\u7965\u7684\u8001\u7237\u7237\uff0c\u7ed9\u6211\u4e00\u79cd\u5f88\u4eb2\u5207\u7684\u611f\u89c9\u3002</p> <p>\u6162\u541e\u541e\uff0c\u4e0d\u7d27\u4e0d\u6162\u7684\u628a\u7ae0\u9c7c\u70e7\u6311\u8d77\u6765\uff0c\u771f\u597d\u554a\u3002</p> <p>\u201c\u4e0d\u8981\u8089\u677e\u54c8\uff08\u56db\u5ddd\u8bdd\u5e38\u89c1\u8bed\u6c14\u52a9\u8bcd\uff09\u201d\uff0c</p> <p>\u201c\u597d\uff0c\u8981\u54c8\u5b50\uff08\u4ec0\u4e48\uff09\u9171\uff1f\u201d\uff0c\u201c\u6211\u60f3\u4e00\u54c8\uff08\u4e00\u4e0b\uff09\uff0c\u6492\u62c9\u9171\u561b\uff08\u56db\u5ddd\u4eba\u7279\u6709 s sh \u4e0d\u5206\uff09\u201d\uff0c</p> <p>\u201c\u83ab\u5f97\uff08\u6ca1\u6709\uff09\u95ee\u9898\uff01\u201d\u3002</p> <p>\u7236\u4eb2\u8bf4\u8fc7\uff0c\u53cc\u624b\u9012\u51fa\uff0c\u53cc\u624b\u63a5\u8fc7\u662f\u5bf9\u522b\u4eba\u7684\u5c0a\u91cd\uff0c\u6211\uff0c\u644a\u4e3b\u90fd\u8fd9\u4e48\u505a\u4e86\uff0c\u644a\u4e3b\u4e00\u5b9a\u6709\u4e00\u4e2a\u53cb\u5584\u7684\u5185\u5fc3\u5427\uff08\u7b11\u3002</p> <p>\u5403\u7684\u65f6\u5019\u8fd8\u662f\u50cf\u4e2a baka \u4e00\u6837\uff0c\u5c3d\u7ba1\u6211\u77e5\u9053\u4f1a\u6709\u70b9\u70eb\u5634\uff0c\u4f46\u662f\u8fd8\u662f\u4e00\u53e3\u54ac\u4e86\u4e0b\u53bb\uff0c\u6025\u7740\u5f80\u5916\u5439\u6c14\u3002</p> <p>\u5f88\u4e0d\u5c0f\u5fc3\uff0c\u6728\u9c7c\u5c51\u9644\u7740\u5728\u6c99\u62c9\u9171\u4e0a\uff0c\u7c98\u5230\u4e86\u6211\u7684\u5634\u8fb9\uff0c\u8214\u6389\u3002</p> <p>\u5982\u679c\u6709\u4e2a\u59b9\u5b50\u5728\u65c1\u8fb9\u7684\u8bdd\uff0c\u4e5f\u8bb8\u4f1a\u88ab\u6211\u7684\u8fd9\u526f\u6837\u5b50\u9017\u7b11\u5427\uff0c\u51b7\u5a07\u7684\u9ed1\u957f\u76f4\u59b9\u5b50\u7efd\u653e\u7b11\u9765\u7684\u5239\u90a3\uff0c\u4e00\u5b9a\u5f88\u7f8e\u3002</p> <p></p> <p>\u53ef\u60dc\u6211\u5df2\u7ecf\u5931\u53bb\u4e86\u8fd9\u6837\u7684\u673a\u4f1a\u5f88\u4e45\u4e86\u3002</p> <p>\u968f\u673a\u6e38\u8d70\uff0c\u4eff\u4f5b\u662f\u5728\u4e00\u6761\u60ec\u610f\u7684\u8857\u9053\u4e0a\uff0c\u4f46\u597d\u50cf\u4e5f\u786e\u5b9e\u662f\u4e00\u6761\u60ec\u610f\u7684\u8857\u9053\u3002</p> <p>\u5bd2\u98ce\u5439\u8fc7\u6765\u4e86\uff0c\u6211\u6234\u4e0a\u5e3d\u5b50\uff0c\u6ca1\u6709\u70ed\u996e\uff0c\u5f88\u96be\u53d7\uff0c\u60f3\u559d\u70b9\u70ed\u7684\uff0c\u4f46\u662f\u8d85\u5e02\u91cc\u90fd\u6ca1\u6709\u3002</p> <p>\u5356\u81ed\u8c46\u8150\u7684\u5927\u53d4\uff0c\u5b64\u96f6\u96f6\u7684\u7b49\u7740 customer\uff0c\u4f46\u662f\u4ece\u4ed6\u7684\u8138\u4e0a\u770b\u4e0d\u5230\u4e00\u4e1d\u5931\u671b\u3002</p> <p>\u53ef\u80fd\u5f88\u591a\u4f5c\u5bb6\u90fd\u6ca1\u6709\u5411\u4e0b\uff0c\u770b\u8fc7\u8eab\u8fb9\u7684\u8fd9\u4e9b\u5c0f\u4eba\u7269\u5427\u3002</p> <p>\u63cf\u5199\u4ed6\u4eec\u7684\uff0c\u4e00\u5b9a\u662f\u4e2a\u82e6\u6da9\u4f46\u662f\u5e26\u7740\u4e00\u4e1d\u5bf9\u751f\u6d3b\u7684\u671f\u671b\u7684\u6545\u4e8b\uff0c\u6211\u8fd9\u4e48\u60f3\u7740\uff0c\u8d70\u5411\u4e86\u6c11\u4e50\u3002</p> <p>\u6c11\u4e50\uff0c\u8bb8\u4e45\u6ca1\u6709\u6da8\u4ef7\uff0c\u7ec8\u4e8e\u6da8\u4e86\u4e00\u6b21\u4ef7\uff0c\u770b\u5230\u4e86\u66fe\u7ecf\u4e0d\u77e5\u9053\u5728\u90a3\u4e00\u90e8\u52a8\u753b\u91cc\u770b\u8fc7\u7684 SANGARIA coffee\u3002= 9.9\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u662f 10\uffe5 \u5462\uff0c\u8fd9\u4e5f\u8bb8\u662f\u5546\u5bb6\u7684\u610f\u56fe\u5427\u3002</p> <p>\u7528\u624b\u6413\u7740\u5496\u5561\uff0c\u60f3\u8ba9\u5b83\u53d8\u6696\u548c\u4e00\u70b9\uff0c\u597d\u5e0c\u671b\u6709\u4e00\u4e2a\u53ef\u7231\u7684\u59b9\u5b50\uff0c\u56f4\u7740\u56f4\u5dfe\uff0c\u6234\u7740\u624b\u5957\uff0c\u5c1d\u8bd5\u7740\u5439\u51c9\u624b\u91cc\u7684\u5976\u8336\uff0c\u6216\u8005\u8bf4\u5439\u7740\u6211\u4e70\u7684\u5976\u8336\uff0c\u867d\u7136\u6211\u5e76\u4e0d\u559c\u6b22\u559d\u5976\u8336\uff0c\u4f46\u662f\u59b9\u5b50\u4eec\u4e5f\u8bb8\u5f88\u559c\u6b22\u559d\u5427\u3002</p> <p></p> <p>\u6bcf\u6b21\u60f3\u8981\u8bb0\u4f4f\u4ec0\u4e48\u4e1c\u897f\u7684\u65f6\u5019\u603b\u662f\u4f1a\u5f88\u5feb\u7684\u5fd8\u8bb0\uff0c\u592a\u8d2a\u5fc3\u4e86\u3002</p> <p>\u56de\u5230\u6559\u5b66\u697c\uff0c\u611f\u53f9\u7740\u8fd9\u5c31\u662f\u751f\u6d3b\u554a\uff0c\u8fd9\u6837\u7684\u65e5\u5b50\u4e0d\u5e38\u6709\uff0c\u4f46\u662f\u683c\u5916\u73cd\u8d35\u3002</p> <p></p> <p>\u4eba\u751f\u662f\u4e00\u7ec4\u7ec4 \\(\\sin x\\) \u548c \\(\\cos x\\) \u7684\u56fe\u50cf\uff0c\u4ea4\u7ec7\u7f20\u7ed5\u7740\uff0c\u8fdc\u79bb\u7740\uff0c\u9760\u8fd1\u7740\u3002</p> <p>\u6211\u9047\u5230\u4f60\uff0c\u90a3\u662f\u4f60\u548c\u6211\u90fd\u5230\u8fbe\u4e86 \\(k\\pi + \\dfrac{\\pi}{4}, (k \\in \\mathbb{Z})\\)\u3002</p> <p>\u53ea\u4e0d\u8fc7\u4f60\u7684\u56fe\u50cf\u53ef\u80fd\u4f1a\u7a81\u7136\u8f6c\u5411\uff0c\u79fb\u5230\u53e6\u4e00\u4e2a\u5e73\u9762\uff0c\u6211\u5c31\u4e0d\u4f1a\u91cd\u65b0\u9047\u89c1\u4f60\u3002</p> <p>\u4f46\u662f\u6709\u4e9b\u4eba\u4e0d\u4e00\u6837\uff0c\u4f60\u548c\u6211\u7684\u66f2\u7ebf\u4eff\u4f5b\u5929\u751f\u5c31\u5e94\u5f53\u540c\u5904\u540c\u4e00\u5e73\u9762\u7684 \\([-1, 1]\\) \u4e4b\u95f4\uff0c\u4ece\u6211\u4eec\u7684\u5b9a\u4e49\u57df\u76f8\u4ea4\u7684\u90a3\u4e00\u77ac\u95f4\u540e\uff0c\u6211\u4eec\u5c31\u4e0d\u4f1a\u5206\u5f00\uff0c\u76f4\u5230\u751f\u547d\u7ed3\u675f\uff0c\u4f60\u6216\u8005\u6211\uff0c\u6211\u4eec\u7684\u5b9a\u4e49\u57df\u5230\u6b64\u4e3a\u6b62\u3002</p> <p>\u53ef\u662f\u751f\u4e0e\u6b7b\uff0c\u4ece\u6765\u90fd\u662f\u53ea\u8bfb\u7684 <code>std::pair&lt;long double, long double&gt;</code>\uff0c\u4f60\u65e0\u6cd5\u6539\u53d8\u8fd9\u4e00\u5207\uff0c\u547d\u8fd0\u5728\u521b\u9020\u4f60\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u7528 Administrator \u6743\u9650\u5199\u5165\u4e86\u8fd9\u4e24\u4e2a\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u3002</p> <p>\u53ef\u80fd\u4f60\u4f1a\u5c1d\u8bd5 <code>sudo</code>\uff0c\u4f46\u662f\u4eba\u751f\u662f Windows \u7cfb\u7edf\uff0c\u95ed\u6e90\u7684\u5b83\u65e0\u6cd5\u8ba9\u4f60\u7aa5\u89c1\u5176\u6700\u672c\u8d28\u7684\u771f\u5b9e\uff0c\u4f60\u4e0d\u53ef\u80fd\u6210\u4e3a Administrator\uff0c\u4f60\u53ea\u662f Guest\uff0c\u4e00\u4e2a\u666e\u901a\u7684 Guest\u3002</p> <p>\u5f53\u7136\u6211\u4eec\u4e2d\u603b\u662f\u6709\u4eba\uff0c\u4f1a\u53bb\u5c1d\u8bd5\u63a2\u6c42 Administrator \u7684\u5965\u79d8\uff0c\u7834\u89e3\uff0c\u91cd\u7ec4\uff0c\u4ed6\u4eec\u505a\u7684\u4e8b\u60c5\u662f\u503c\u5f97\u5c0a\u91cd\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5b9e\u5728\u662f\u592a\u6e3a\u5c0f\uff0c\u8fd9\u662f\u6211\u4eec\u8bc1\u660e\u81ea\u5df1\u5b58\u5728\u7684\u610f\u4e49\uff0cAdministrator \u5728\u5220\u9664\u4f60\u7684\u65f6\u5019\u8bf4\u4e0d\u5b9a\u4f1a\u5728\u5176\u4ed6 User \u7684 memory.txt \u5f53\u4e2d\u7559\u4e0b\u90a3\u4e48\u4e00\u884c\u5b57\uff0c\u4ee3\u8868\u4f60\u6765\u8fc7\u3002</p> <p>\u53ea\u8981\u4f60\u4e0d\u4ece\u6700\u540e\u4e00\u4e2a\u62e5\u6709\u4f60\u7684 memory.txt \u4e2d\u6d88\u5931\uff0c\u4f60\u5c31\u662f immortal \u7684\u3002</p> <p>\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u8fd9\u53ea\u662f\u4e00\u4e2a\u4eba\u8111\u888b\u4e0d\u6e05\u6670\u7684\u65f6\u5019\u8bf4\u7684\u80e1\u8bdd\uff0c\u4f46\u662f\u65e0\u6240\u8c13\u4e86\u3002</p> <p>\u6211\u60f3\u53bb\u66f4\u591a\u7684\uff0c\u66f4\u591a\u7684\u4e86\u89e3\u8fd9\u4e2a\u4e16\u754c\u7684\u5965\u79d8\uff0c\u6211\u5f88\u5e73\u51e1\uff0c\u4f46\u662f\u6211\u60f3\u53bb\u8bd5\u8bd5\uff0c\u8bf4\u4e0d\u5b9a\u6211\u5c31\u4f1a\u5728\u67d0\u4e2a\u6743\u9650\u7ec4\u91cc\u83b7\u5f97\u4e00\u5e2d\u4e4b\u5730\uff0cmaintain \u7740\uff0cmodify \u7740\u6ce8\u518c\u8868\u3002</p> <p>\u6211\u624b\u4e2d\u7684 regedit \u4f1a\u662f\u4ec0\u4e48\uff0c\u6211\u4e0d\u77e5\u9053\u3002</p> <p>\u6559\u7ec3\u8981\u4e86\u79d1\u6280\u9986\u7528\u6765\u7ed9\u6211\u4eec\u653e\u7535\u5f71\uff0c\u4f46\u662f\u6211\u8eab\u4f53\u4e0d\u592a\u597d\u5c31\u6ca1\u6709\u53bb\u3002</p> <p>\u53ef\u80fd\u5c31\u8fd9\u6837\u4e86\uff0c\u7761\u4e00\u89c9\u5c31\u597d\u4e86\u3002</p> <p>\u88ab\u5076\u50cf\u6768\u7237\u8ba4\u4e3a\u662f win \u4e86\u3002</p>"}, {"location": "misc/NOIP2022/#1122", "title": "11.22", "text": "<p>\u5230\u7ef5\u9633\u4e86\u3002</p> <p>\u8fd8\u662f\u5199\u4e86\u7bc7\u9c9c\u82b1\uff1a</p> 11-22 \u65e5\u9c9c\u82b1 Phenomena <p>Phenomena </p> <p>\u6628\u5929\u665a\u4e0a\u542c C \u8001\u5e08\u8bf4\uff0c\u7535\u7ade\u673a\u623f\u8981\u5c01\u5b58\u4e86\u3002</p> <p>\u771f\u7684\u8d70\u5230\u6211\u4e4b\u524d\u89c9\u5f97\u6700\u574f\u7684\u7ed3\u5c40\u4e86\u5462\uff0c\u53ef\u80fd\u6211\u5c31\u8fd9\u4e48\u5931\u53bb\u4e86\u4e00\u4e2a\u5bb9\u8eab\u4e4b\u6240\uff1f</p> <p>\u66b4\u529b Ag \u5927\u8dcc starCatMeow \u4e5f\u5728\uff0c\u501f\u4e86\u624b\u673a\u62cd\u4e0b\u4e86\u8fd9\u5f20\u7167\u7247\u3002</p> <p>\u6ca1\u60f3\u5230\u6211\u8fd8\u771f\u7684\u662f last one\u3002</p> <p></p> <p>\u6700\u540e\u7684\u65f6\u95f4\u662f\u5728\u770b\u4e16\u754c\u676f\uff0c\u5f53\u65f6\u597d\u50cf\u770b\u5230 3 - 0 \u5c31\u8d70\u4e86\uff1f</p> <p>China \u4e0a\u6b21\u8fdb World Cup \u5df2\u7ecf\u662f 20 \u5e74\u524d\u7684\u4e8b\u60c5\u4e86\u554a\uff0c\u597d\u50cf\u4e5f\u662f\u7b2c\u4e00\u6b21\u3002</p> <p>\u6c89\u9ed8\u7684 14 s\uff0c\u65e5\u672c\u8db3\u7403\u4f1a\u6709\u66f4\u591a\u7684\u5c11\u5e74\u8865\u4e0a\uff0c\u6211\u4eec\u5462\uff1f\u6211\u5f88\u60f3\u77e5\u9053\uff0c\u6211\u4eec\u5462\uff1f</p> <p>\u4f60\u5bf9\u7684\u8d77\u6211\u4eec\u5417\uff1f\u8138\u90fd\u4e0d\u8981\u4e86\u3002</p> <p>\u56de\u5bdd\u5ba4\u8fdb\u884c\u4e86\u70ed\u6c34\u6fa1\u7684\u6d17\uff0c\u611f\u89c9\u8212\u7545\u591a\u4e86\uff0c\u76d6\u4e0a\u5de8\u5927\u539a\u7684\u88ab\u5b50\uff0c\u7761\u7740\u4e86\u3002</p> <p>\u6709\u6ca1\u6709\u68a6\uff1f\u597d\u50cf\u6709\u5427\uff0c\u6211\u8bb0\u5f97\u662f\u6211\u5f88\u96be\u53d7\u7684\u65f6\u5019\uff0c\u68a6\u89c1\u6709\u4e00\u4e2a\u53ef\u7231\u7684\u5973\u5b69\u5b50\u7ed9\u6211\u819d\u6795\u3002</p> <p>\u5634\u91cc\u5531\u7740\u5c0f\u65f6\u5019\u542c\u89c1\u7684\u7684\u6c11\u8c23\uff0c\u53c8\u5f88\u5feb\u9677\u5165\u9ed1\u6697\u4e86\u3002</p> <p>\u4eca\u5929\u6211\u4eec\u73ed\u662f\u84dd\u80cc\u5fc3\uff0c\u51fa\u5bdd\u5ba4\u7684\u65f6\u5019\u62ff\u8d70\u4e86 Phone\uff0c\u4e8e\u662f\u62cd\u4e0b\u4e86\u8fd9\u5f20\u7167\u7247\uff1a</p> <p></p> <p>\u505a\u6210\u5916\u6587\u660e\u4eba\u3002</p> <p>\u53ef\u80fd\u6709\u975e \u2716 Y \u7684\u4eba\u770b\u5230\u8fd9\u4e2a\uff0c\u90a3\u4e48\u8fd8\u662f\u89e3\u91ca\u4e00\u4e0b\u5427\u3002</p> <p>\u84dd\u80cc\u5fc3\u597d\u6bd4\u5fd7\u613f\u8005\uff0c\u5443\uff0c\u597d\u50cf\u4e0d\u592a\u6070\u5f53\u3002</p> <p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5728\u6821\u56ed\u91cc\u968f\u673a\u6e38\u8d70\uff0c\u6e05\u626b\u6821\u56ed\uff0c\u76d1\u7763\u6587\u660e\u793c\u8c8c\uff0c\u5236\u6b62\u4e0d\u6587\u660e\u73b0\u8c61\uff0c\u5e2e\u52a9\u8001\u5e08\u548c\u540c\u5b66\u3002</p> <p>\u4e00\u822c\u4e00\u5b66\u671f\u624d\u80fd\u8f6e\u5230\u4e00\u6b21\uff0c\u8fd9\u534a\u5929\u5c31\u90fd\u4e0d\u4f1a\u4e0a\u8bfe\u3002</p> <p>\u6211\u4e4b\u524d\u597d\u50cf\u4e00\u76f4\u662f\u52b3\u52a8\u7ec4\uff0c\u5728\u521d\u4e2d\u90e8\u90a3\u8fb9\uff0c\u7d2f\u7684\u8981\u6b7b\u3002</p> <p>\u90a3\u4e24\u6b21\u6bcf\u6b21\u90fd\u5077\u5077 run \u53bb\u673a\u623f\uff0c\u90fd\u88ab\u6293\u5305\u4e86/ll</p> <p>\u6211\u7adf\u7136\u8fd8\u8bb0\u5f97\u5f53\u65f6\u5199\u7684\u9898\uff0c\u597d\u50cf\u662f\u90a3\u4e2a\u533a\u95f4 dp\uff0cPolygon\u3002</p> <p>\u7ecf\u5e38\u4f1a\u6709\u8fd9\u6837\u7684\u611f\u89c9\uff0c\u8fd1\u671f\u7684\u5f88\u591a\u4e8b\u60c5\u6211\u4f1a\u5fd8\u8bb0\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u7ec6\u5c0f\u7684\u4e1c\u897f\u53ef\u80fd\u4f1a\u8bb0\u5f97\u5f88\u6e05\u6670\u3002</p> <p>\u8d70\u5230\u697c\u9053\u91cc\u9762\uff0c\u7a81\u53d1\u5947\u60f3\u60f3\u62cd\u4e00\u5f20\u7167\u7247\u3002</p> <p></p> <p>\u6709\u65f6\u5019\u7b2c\u4e00\u6b21\u9047\u89c1\u4e00\u4e9b\u4e1c\u897f\u7684\u65f6\u5019\uff0c\u4f1a\u83ab\u540d\u5176\u5999\u6709\u7ecf\u5386\u8fc7\u7684\u611f\u89c9\uff0c\u53ef\u80fd\u662f\u5728\u68a6\u91cc\u9884\u89c1\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u6211\u731c\u7684\u9519\u89c9\u3002</p> <p>\u8fd9\u79cd\u73b0\u8c61\u5df2\u7ecf\u4e0d\u5e38\u89c1\u4e86\uff0c\u6211\u8bb8\u4e45\u90fd\u6ca1\u6709\u9047\u89c1\u8fc7\u4e86\uff0c\u4f46\u697c\u9053\u7ed9\u4e86\u6211\u8fd9\u79cd\u611f\u89c9\u3002</p> <p>\u81ea\u5df1\u5176\u5b9e\u53d1\u73b0\u8fc7\u5f88\u591a\u5f88\u5947\u602a\u7684\u73b0\u8c61\uff0c\u4f46\u662f\u90fd\u6ca1\u6709\u8bb0\u5f55\u8fc7\uff0c\u8fd9\u4e9b\u73b0\u8c61\u603b\u662f\u7ed9\u6211\u4ee5\u5947\u5999\u7684\u611f\u89c9\u3002</p> <p>\u96be\u5f97\u6709\u4e00\u6b21\u673a\u4f1a\uff0c\u5c31\u8bb0\u5f55\u4e00\u4e0b\u5427\u3002</p> <p>\u6765\u5230\u673a\u623f\uff0c\u53d1\u73b0\u4e86\u539f\u6279\u3002</p> <p></p> <p>\u4e0a\u5348\u7684\u6a21\u62df\u8d5b T1 \u6ca1\u5220 Debug\uff0cT4 corner case \u88ab\u6211\u6ce8\u91ca\u4e86\uff0c\u54c8\u54c8\uff0c\u6211\u662f\u4e0d\u662f\u8822\u72d7\u3002</p> <p>\u96be\u5f97\u6709\u673a\u4f1a\uff0c\u4e2d\u5348\u7684\u65f6\u5019\u5c31\u53bb\u62cd\u51e0\u5f20\u5b66\u6821\u7684\u7167\u7247\u5427\u3002</p> <p>\u4e00\u5982\u65e2\u5f80\u7684\u64cd\u573a\uff0c\u4e00\u5982\u65e2\u5f80\u7684\u4e2d\u534e\u56ed\u3002</p> <p>\u4e00\u5982\u65e2\u5f80\u7684\u9762\u5305\u548c\u4e4c\u9f99\u8336\u3002</p> <p>\u597d\u50cf\u4e0d\u6b62\u62cd\u4e86\u5b66\u6821\uff0c\u8fd8\u62cd\u4e86\u70b9\u522b\u7684\uff08CWOI \u591a\u4eba\u7167\uff09\u3002</p> <p>\u5728\u8f66\u4e0a\u91cd\u65b0\u6234\u7740\u8033\u673a\u63a8\u4e86\u4e00\u904d\u83b2\u534e\u7ebf\uff0c\u6df1\u611f\u83b2\u534e\u7684\u58f0\u4f18\u7684\u5f3a\u5927\u4e4b\u5904\uff0c10\u5e74\u4e86\u8fd8\u80fd\u4fdd\u6301\u90a3\u6837\u3002</p> <p>\u597d\u53ef\u7231\uff0c\u8bf4\u8d77\u6765\u6628\u5929\u5916\u8bed\u8282\u5f00\u5e55\u7684\u65f6\u5019\u7684\u591a\u8bed\u8a00\u4f4f\u6301\u91cc\u6709\u65e5\u8bed\u4e3b\u6301\u4eba\u3002</p> <p>\u90a3\u4e2a\u58f0\u7ebf\u7b80\u76f4\u6050\u6016\uff0c\u5c31\u662f\u6807\u51c6\u7684\u53ef\u7231\u841d\u8389\u58f0\u7ebf\uff0c\u5982\u679c\u6211\u6ca1\u8bb0\u9519\u7684\u8bdd\u4e00\u5e74\u524d\u6211\u4e5f\u542c\u8fc7\u4e00\u6b21\uff0c\u5f88\u5389\u5bb3\u3002</p> <p>\u4ee5\u524d\u5b66\u7684\u4f2a\u97f3\u4e5f\u5df2\u7ecf\u5b8c\u5168\u4e0d\u4f1a\u4e86\uff0c\u5982\u679c\u662f\u4ee5\u524d\u7684\u6211\u5e94\u8be5\u53ef\u4ee5\u6a21\u4eff\u83b2\u534e\u7684\u58f0\u7ebf\u5427\u3002</p> <p>\u54c8\u54c8\uff0c\u73b0\u5728\u8fd9\u7834\u9523\u55d3\u5b50\uff0c\u73a9\u4e2a\u9524\u5b50\u3002</p> <p>\u5443\u5443\uff0c\u53c8\u7a81\u7136\u60f3\u8d77\uff0c\u6211\u6709\u4e2a\u4e60\u60ef\uff0c\u6211\u7279\u522b\u559c\u6b22\u6536\u96c6\u5bf9\u6211\u6709\u8c61\u5f81\u610f\u4e49\u7684\u4e1c\u897f\u3002</p> <p>\u6bd4\u5982 fumo\uff0cex-npy \u7684\u4e66\u4fe1\uff0cThe Legend of Zelda \u7684\u5361\u5e26\uff0cLunatic Kingdom \u7684 CD\u3002</p> <p>\u6216\u8005\u8bf4\u6211\u4e00\u76f4\u5728\u5bfb\u6c42\u4e00\u79cd\u5bc4\u6258\uff0c\u6211\u5e0c\u671b\u8fd9\u79cd\u5bc4\u6258\u80fd\u591f\u5b9e\u4f53\u5316\uff0c\u5f88\u8822\u5427\u3002</p> <p>\u6628\u5929\u7684\u9c9c\u82b1\u540d\u4e3a Edit\uff0c\u4eca\u5929\u7684\u9c9c\u82b1\u540d\u4e3a Phenomena\uff0c\u6211\u4f3c\u4e4e\u5728\u5c1d\u8bd5\u5199\u70b9\u6df1\u523b\u7684\u4e1c\u897f\u3002</p> <p>\u6628\u5929\u6709\u5f88\u591a\u4eba\u8bc4\u8bba\uff0c\u6211\u5f88\u5f00\u5fc3\u3002</p> <p>\u5728\u6807\u8bc6\u7b26\u91cc\u5206\u5272\u6bcf\u4e00\u4e2a\u5b57\u7b26\u7684\u884c\u4e3a\u4e0d\u77e5\u9053\u53ef\u4ee5\u6709\u591a\u5c11\u4eba\u6ce8\u610f\u5230\u3002</p> <p>\u6628\u5929\u8bf4\u4e86\u4eba\u751f\uff0c\u4eca\u5929\u8bf4\u70b9\u4ec0\u4e48\u5462\u3002</p> <p>\u8981\u4e0d\u8fd8\u662f\u8bf4\u8bf4\u4eba\u751f\u5427\uff0c\u54c8\u54c8\u3002</p> <p>\u4f46\u662f\u8bb2\u53e5\u5b9e\u8bdd\uff0c\u523b\u610f\u7684\u9063\u8bcd\u9020\u53e5\u8fdc\u8fdc\u6bd4\u4e0d\u4e0a\u7a81\u7136\u51fa\u73b0\u7684\u7075\u611f\u3002</p> <p>\\(\\sin x\\) \u4e0e \\(\\cos x\\) \u4fbf\u662f\u5982\u6b64\u3002</p> <p>\u4f46\u5176\u5b9e\uff0c\u6211\u6240 Explain \u7684\u8fd9\u4e9b Phenomena\uff0c\u5c31\u5df2\u7ecf\u80fd\u7b97\u662f\u7a81\u7136\u51fa\u73b0\u7684\u7075\u611f\u4e86\u3002</p> <p>\u4e0d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u6709\u4eba\u4e5f\u89c2\u5bdf\u8fc7\uff0c\u8bb0\u5f55\u8fc7\u8fd9\u4e9b\u73b0\u8c61\uff1f</p> <p>\u6211\u8349\u8349\u8349\u8349\u8349\u8349\u3002</p> <p>\u521a\u5230\u7ef5\u9633\u5c31\u6454\u574f\u4e86\u81ea\u5df1\u7684\u624b\u673a\u3002</p> <p>\u6025\u6025\u6025\u3002\u4e00\u5b9a\u662f\u9152\u5e97\u5927\u5385\u7684 bot \u7684\u9519\u3002</p> <p>\u4e2d\u5348\u62cd\u7684\u7167\u7247\u5168\u90e8\u6ca1\u4e86/ll</p> <p>\u9152\u5e97\u73af\u5883\u611f\u89c9\u8fd8\u53ef\u4ee5\uff0c\u7528\u7535\u8111\u524d\u7f6e\u6444\u50cf\u5934\u62cd\u4e86\u7167\u7247\u3002</p> <p>\u5443\u5443\uff0c\u611f\u89c9\u4e0d\u60f3\u5199\u4e86\uff0c\u6124\u6012\uff0c\u6211\u7684\u624b\u673a\uff0c\u6211\u7684\u624b\u673a\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01</p> <p></p> <p>\u53d1\u73b0\u6210\u90fd\u7684\u957f\u671f\u7801\u4e0d\u80fd\u5728\u7ef5\u9633\u7528\uff0c\u5bc4\u5bc4\u3002</p> <p>\u5f88\u53ef\u60dc\u548c dottle \u9519\u5f00\u4e86\uff0c\u6ca1\u6709\u80fd\u89c1\u5230\u3002</p> <p>\u611f\u53f9\u9152\u5e97\u4f4d\u7f6e\u5f88\u597d\uff0c\u5403\u4e86\u65c1\u8fb9\u7684 dicos\uff0c\u665a\u4e0a\u5f00\u6446\u3002</p> <p></p> <p>\u8bad\u7ec3\u73af\u5883\u5927\u6982\u8fd9\u6837\u3002</p>"}, {"location": "misc/NOIP2022/#1123", "title": "11.23", "text": "<p>\u4e0a\u5348\u8fdb\u884c\u6a21\u62df\u8d5b\u7684\u6539\u9519\u3002</p> <p>\u4f46\u662f\u597d\u50cf\u8fd8\u662f\u4e0d\u4f1a\u4e25\u8c28\u8bc1\u660e T2 \u7ed3\u8bba\uff0cT3 \u60f3\u5230\u4e86\u4e00\u4e2a\u628a end \u62c9\u4e0a\u6765\u7684\u5408\u5e76\u65b9\u5f0f\u4f46\u662f\u5177\u4f53\u6ca1\u60f3\u6e05\u695a\u3002</p> <p>\u7136\u540e\u5c31\u5b66\u674e\u8d85\u7ebf\u6bb5\u6811\u53bb\u4e86\u3002</p> <p>\u6211r\uff0c60\uffe5\uff0c\u5c31\u8fd9\uff1f\u9152\u5e97\u4f60\u600e\u4e48\u8fd9\u4e48\u9ed1\uff0c\u6211\u548c xzq 54\uffe5 \u5403\u9971\u4e86\u8fd8\u591a\uff0c\u4f60\u8fd9 60\uffe5\u4ec0\u4e48\u6c34\u5e73\uff0c\u597d\u610f\u601d\uff1f\uff1f\uff1f\uff1f</p> <p>\u8c14\u8c14\uff0c\u4e0b\u5348\u8bb2\u9898\uff0c\u7136\u540e\u5c31\u75af\u72c2\u8c03\u8bd5\u674e\u8d85\u6811\uff0c\u665a\u4e0a\u53d1\u73b0\u662fbool\u8f6c\u6362\u7684\u9505\uff0c\u6211*\uff0c\u9000\u94b1\u3002</p> <p>\u5b8c\u86cb\uff0c\u597d\u9898\u63a8\u8350\u5b8c\u5168\u6ca1\u505a\uff0c\u611f\u89c9\u5176\u4ed6\u4eba\u90fd\u5377\u4e86\u5f88\u591a\u4e86\uff0c\u6211\u4e22\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u6b21\u674e\u8d85\u6811\u7684\u7b14\u8bb0\u5199\u7684\u6bd4\u8f83\u7b80\u660e\uff1f\u611f\u89c9\u662f\u6211\u60f3\u8981\u7684\u98ce\u683c\u3002</p> <p>\u770b\u4e86\u4e0b\u65e5\u672c\uff0c\u5f88\u6c89\u7a33\u554a\uff0c2-1 \u9006\u8f6c\u5fb7\u610f\u5fd7\u6218\u8f66\uff0c\u606d\u559c\u3002</p>"}, {"location": "misc/NOIP2022/#1124", "title": "11.24", "text": "<p>\u6a21\u62df\u8d5b\u5bc4\u5bc4\uff0cT1 \u5bb9\u65a5\u4e0d\u4f1a\uff0cT2\u4e0d\u4f1a\uff0cT3\u4e0d\u4f1a\uff0cT4\u4e0d\u4f1a\uff0c\u53ea\u56e0\u4e86\u3002</p> <p>czh \u6700\u8fd1\u66b4\u529b\u6253\u6ee1\u611f\u89c9\u5f88\u503c\u5f97\u5b66\u4e60\uff0c\u8981\u76f8\u4fe1\u5927\u90e8\u5206\u4eba\u5b9e\u9645\u53d1\u6325\u4f1a\u5f88\u70c2\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u8003\u573a\u8ba4\u4e3a\u4e0d\u592a\u597d\u7684\u5206\u6570\uff0c\u5982\u679c\u62ff\u5230\u4e86\u8fd8\u662f\u6709\u673a\u4f1a\u7684\u3002</p> <p>\u7b2c\u4e00\u6b21\u5403\u75af\u72c2\u661f\u671f\u56db\uff0c\u611f\u89c9\u4e00\u822c\u3002</p> <p>\u9009\u4e86\u4e00\u573a ARC\uff0cARC076\uff0c\u660e\u5929\u665a\u4e0a\u548c\u76d2\u996d\u6cb9\u4e00\u8d77\u6253\u3002</p> <p>\u7136\u540e\u6574\u4e86\u56db\u4e2a\u671f\u671b+\u5bb9\u65a5\u9898\uff0c\u6253\u5f00\u4e00\u4e0b\u601d\u7ef4\u3002</p> <p>\u660e\u5929\u4e0b\u5348\u6253 ARC\uff0c\u665a\u4e0a\u8fc7\u4e00\u4e0b\u677f\u5b50\u3002</p> <p>\u6df1\u611f\u6c34\u5e73\u771f\u7684\u4e0d\u591f\u3002</p> <p>\u665a\u81ea\u4e60\u542c\u53f7\u5bb6\u519b\u5206\u4eab\u8003\u8bd5\u7ecf\u9a8c\u4e4b\u524d\u8fdb\u884c\u516c\u5c4f\u6574\u6d3b\uff0c\u8349\u3002</p> <p></p> <p>\u6211\u5c45\u7136\u5165\u955c\u4e86\uff0c\u8fd9\u74f6 Kvass \u663e\u7136\u662f\u6211\u7684\u3002</p> <p></p> <p>\u770b\u4e86\u4e0b\u8461\u8404\u7259\u6253\u52a0\u7eb3\uff0c\u5f88\u6fc0\u60c5\uff01</p> <p>\u548c\u7fa4\u53cb\u5f00\u8bed\u97f3\uff0c\u7b2c\u4e00\u6b21\u89c1\u5230 dwt \u771f\u4eba\u3002</p>"}, {"location": "misc/NOIP2022/#1125", "title": "11.25", "text": "<p>\u9152\u5e97\u7684\u53eb\u9192\u670d\u52a1\u7b80\u76f4\u662f\uff0c\u4ee4\u4eba\ud83d\ude05\uff0c\u6211\u6628\u5929\u8bf4\u7684 6:55\uff0c\u7ed3\u679c7:40\u4e86\u53eb\u6211\uff1f</p> <p>\u4eca\u5929\u662f\u6bd4\u8f83\u6446\u7684\uff0c\u611f\u89c9\u5176\u5b9e\u90fd\u6ca1\u505a\u4ec0\u4e48\u4e8b\u60c5\uff1f</p> <p>\u8c14\u8c14\uff0c\u4e0d\u8fc7 gjh \u795e\u6307\u5bfc\u4e86\u5bb9\u65a5\u76f8\u5173\u7684\u4e00\u4e9b\u4e1c\u897f\uff0c\u53d1\u73b0\u94a6\u5b9a\u548c\u5f3a\u5236\u7684\u610f\u4e49\u7565\u6709\u4e0d\u540c\u3002</p> <p>\u7136\u540e\u4e0b\u5348\u5ef6\u7eed\u4f20\u7edf\u548c hfy \u6253 ARC \u5f00\u8111\u6d1e\uff0c\u505a\u4e86 CDE\uff08\u5176\u5b9e\u7b97\u662f\u53e3\u80e1\uff09\u3002</p> <p>\u8fdb\u884c\u4e86\u4e00\u4e2a\u97f3\u6e38\u4eba\u7684\u805a\u4f1a\uff0c\u8fd8\u6709\u4f20\u7edf\u5408\u6253\u3002</p> <p></p> <p>\u8fd9\u5f20\u56fe\u662f\u6700\u8fd1\u770b\u5230\u6709\u4eba\u5728\u90a3\u4e2a Remix \u8fc7\u540e\u6574\u7684\u8c31\u5b50\uff0c\u8d28\u91cf\u5f88\u9ad8\u3002</p> <p>\u5c0f\u9ed1\u5b50\u6280\u672f\u529b\u9ad8\u8d85\uff01</p> <p></p> <p>\u665a\u4e0a\u7ee7\u7eed\u5f00\u6446\uff0c\u7ed3\u679c\u6768\u7237\u7ed9\u7684\u9898\u5355\u6ca1\u770b\uff08\uff08\uff08</p> <p>\u8c14\u8c14\uff0c\u611f\u89c9\u8fd8\u662f\u6709\u5fc5\u8981\u8fc7\u4e00\u904d\u677f\u5b50\uff0c\u7136\u540e\u7a81\u7136\u60f3\u8d77\u81ea\u5df1 vimrc \u6ca1\u6709\u80cc\uff0c\u6211\u8349\u3002</p> <p>\u548c\u6768\u7237\u6700\u540e\u4ea4\u6d41\u4e86\u4e00\u4e0b\u8003\u8bd5\u6280\u5de7\uff0c\u6536\u62fe\u4e86\u4e1c\u897f\uff0c\u5c31\u6253\u7b97\u7761\u4e86\uff0c\u660e\u5929\u8fdb\u8003\u573a\u4e4b\u524d\u518d\u8fc7\u4e00\u904d\u6570\u5b66\u548c\u5176\u5b83\u7684\u91cd\u8981\u7684\u4e1c\u897f\u3002</p>"}, {"location": "misc/NOIP2022/#1126", "title": "11.26", "text": "<p>\u8c14\u8c14\uff0c\u611f\u89c9\u5357\u5c71\u7684\u673a\u623f\u4e5f\u8fdc\u8fdc\u5927\u4e8e\u6211\u4eec\u3002</p> <p>\u548c hfy \u6328\u7740\uff0c\u4e0d\u8fc7\u662f\u524d\u540e\u6328\u7740\uff0c\u4e00\u4e2a\u4eba\u4e00\u4e2a\u684c\u5b50\u611f\u89c9\u5f88\u8212\u670d\u3002</p> <p>zip \u5bc6\u7801\u662f <code>biu#2019miss</code>\uff0c\u51fa\u9898\u4eba\u662f\u8f66\u4e07\u4eba\u5427\uff0cpdf \u5c45\u7136\u4e5f\u6709\u5bc6\u7801\uff0c\u957f\u77e5\u8bc6\u4e86\uff0c<code>solo@2022</code></p> <p>\u4f46\u662f vimrc \u5fd8\u8bb0\u80cc backspace \u7684settings\uff0c\u5988\u7684\uff0c\u53ea\u80fd\u7528 C::B \u4e86\u3002</p> <p>\u5f00 T1\uff0c\u6211\u8349\uff0c\u611f\u89c9\u5f88\u96be\u641e\u554a\uff0cT2\uff0cT3\uff0cT4\uff0c\u6211\u8349\u90fd\u5f88\u96be\u641e\u3002</p> <p>\u51b7\u9759\u4e00\u4e0b\uff0c\u5148\u770b\u770b T1\uff0c\u611f\u89c9\u662f\u5c0f\u6e05\u65b0\u6a21\u62df\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a 100pts\uff0c\u5199\u4e86 64pts \u8dd1\u8def\u3002</p> <p>\u7136\u540e\u5f00 T3\uff0c\u56e0\u4e3a\u611f\u89c9 T2 \u6709\u70b9\u90a3\u5565\uff0c\u53d1\u73b0 T3 \u8fd9\u4e0d\u5148\u6c42\u4e2a\u5272\u8fb9\u7136\u540e\u8ba1\u6570\u4e00\u4e0b\u3002</p> <p>\u4f46\u662f\u4ed4\u7ec6\u4e00\u770b\uff0c\u611f\u89c9\u5176\u5b9e\u7279\u522b\u9ebb\u70e6\uff0c\u6211\u65e5\u3002</p> <p>\u7136\u540e\u53c8\u53bb\u770b T4\uff0c\u611f\u89c9\u66b4\u529b\u5f88\u96be\u5199\u3002</p> <p>\u7136\u540e\u9677\u5165\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684\u7f5a\u5750\u671f\u3002</p> <p>\u51b7\u9759\u4e86\u4e00\u4e0b\u8dd1\u53bb\u505a T2 \u4e86\uff0c\u624b\u63a8\u4e86\u4e00\u4e0b\u611f\u89c9\u66b4\u529b\u53ef\u4ee5\u5148\u5355\u8c03\u6808\u5904\u7406\u4e00\u4e0b\u7136\u540e\u7b97\u8d21\u732e\u3002</p> <p>\u7136\u540e\u5f00\u5199\uff0c\u5199\u7684\u5f88\u6162\uff0c\u7136\u540e\u53d1\u73b0\u8fc7\u4e0d\u4e86\u6837\u4f8b\uff0c\u53d1\u73b0\u8d21\u732e\u7b97\u591a\u4e86\uff0c\u7136\u540e\u6b64\u65f6\u53ea\u5269 1h30min\u3002</p> <p>\u8b66\u544a\u4e86\u4e00\u4e0b\u81ea\u5df1\uff0c\u8981\u4eab\u53d7\u6bd4\u8d5b\uff0c\u4e8e\u662f\u7ee7\u7eed\u601d\u8003\uff0c\u7ed3\u679c\u5565\u90fd\u6ca1\u60f3\u51fa\u6765\u3002</p> <p>\u5509\uff0c\u611f\u89c9\u8fd9\u6b21\u66b4\u529b\u5206\u771f\u7684\u96be\u6253\uff0cT2 \u90a3\u4e2a \\(n = 2\\) \u7684\u867d\u7136\u5e73\u51e1\u4f46\u662f\u4e0d\u597d\u5199\u554a\u3002</p> <p>\u51fa\u8003\u573a\uff0c\u95ee\u5927\u5bb6\uff0c\u53d1\u73b0\u4eba\u5747\u4e0d\u4f1a T2\uff0c\u8349\u3002</p> <p>\u542c\u8bf4 T3 \u662f\u70b9\u53cc\u6811\u4e0a\u5efa\u865a\u6811\u3002</p> <p>\u5509\uff0c\u611f\u89c9\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u6211\u6ca1\u600e\u4e48\u89c1\u8fc7\u5957\u8def\uff0c\u5f88\u591a\u4e1c\u897f\u6ca1\u5b66\uff0c\u800c\u4e14\u6a21\u62df\u8d5b\u6253\u7684\u592a\u5c11\u4e86\u3002</p> <p>qz \u4ed6\u4eec\u5728\u5408\u5f71\u554a\uff0c\u6211\u4eec\u6ca1\u5408\u5f71\u3002</p> <p>\u56de\u53bb\u95ee\u4e86\u95ee\u7fa4\u53cb\uff0ctyq \u8bf4 T3 \u4e0d\u7528\u865a\u6811\u3002</p> <p>\u5443\u5443\uff0c\u611f\u89c9\u8fd8\u662f\u7f3a\u4e4f\u7ec3\u4e60\uff0c\u548b\u641e\u634f\uff0c\u5176\u5b9e\u5b66\u4e86\u7684\u4e1c\u897f\u7ec3\u4e00\u7ec3\u5c31\u597d\uff0c\u4f46\u662f\u548b\u4fdd\u6301\u611f\u89c9\u3002</p> <p>\u7279\u522b\u662f\u4e4b\u540e\u5e72\u5565\uff0c\u6211\u4e2a\u4eba\u89c9\u5f97\u5c31\u7ec3\u4e60\u5bb9\u65a5\uff0c\u6570\u6570\uff0c\u671f\u671b\u4e4b\u7c7b\u7684\uff0c\u4ee3\u7801\u91cf\u4f1a\u5c11\uff0c\u4e5f\u597d\u73a9\u3002</p> <p>\u51fa\u9898\u4eba\u53ef\u80fd\u662f\u8f66\u4e07\u4eba+homo\uff0ct1\u6700\u540e\u4e00\u4e2a\u5927\u6837\u4f8b\u7b54\u6848\u662f <code>114 514</code>\u3002</p> <p>\u5c31\u8fd9\u6837\uff0c\u6211\u56de\u53bb\u5b66\u7269\u5316\u751f\u4e86\uff0c\u53ef\u80fd\u6bcf\u5929\u5c31 plant \u4e00\u70b9\u82b1\uff0c meow \uff0c\u4e5f\u8bb8\u6211\u7684\u77e5\u8bc6\u5728\u5efa\u9020 barrack \u7684\u65f6\u5019\u80fd\u8d77\u5230\u4f5c\u7528\u5427\uff0c\u5e0c\u671b\u8fd9\u6b21 match \u5927\u5bb6\u90fd\u6709\u597d\u6210\u7ee9</p> <p>\u6700\u540e\u8fd9\u53e5\u8bdd\u61c2\u5f97\u90fd\u61c2\u3002</p> <p>\u611f\u89c9\u8fd1\u671f\u6700\u5927\u7684\u95ee\u9898\u662f\u8fdb\u5165\u4e0d\u4e86\u72b6\u6001\uff0c\u5bc4\u5bc4\u3002</p> <p>\u665a\u4e0a\u6d4b\u4e86\u4e00\u4e0b\uff0cT1 \u8be5\u62ff\u7684\u8fd8\u662f\u62ff\u4e86\uff0c\u8d77\u7801\u6709\u5206\u4e0d\u81f3\u4e8e\u7206\u96f6\u3002</p>"}, {"location": "misc/antontrygubO_o/", "title": "OI \u601d\u7ef4\u6280\u5de7", "text": "<p>\u7ffb\u770b yhp \u795e\u4ed9\u7684\u5173\u6ce8\u8bb0\u5f55\u7684\u65f6\u5019\u65e0\u610f\u95f4\u53d1\u73b0\u4e86 cqbz \u7684\u4e00\u4f4d\u795e\u4ed9\u7684\u535a\u5ba2\uff1a</p> <p>https://www.cnblogs.com/C202044zxy/p/15126199.html</p> <p>\u6211\u8ba4\u4e3a\u5f88\u5389\u5bb3\uff0c\u867d\u7136\u6211\u8fd8\u8fbe\u4e0d\u5230\u8fd9\u79cd\u5883\u754c\u5c31\u662f\u4e86\u3002</p> <p>\u6211\u4e5f\u6253\u7b97\u5f00\u4e2a\u7c7b\u4f3c\u7684\u4e1c\u897f\u6765\u8bb0\u5f55\u8bb0\u5f55\uff08\u4e0d\u8fc7\u53ef\u80fd\u5f88\u591a\u4e1c\u897f\u6bd4\u8f83 naive \u5c31\u662f\u4e86\u3002</p> <p>\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u7684 URL \u6709\u70b9\u4e1c\u897f\uff0c\u4e3a\u4ec0\u4e48\u5462\uff0c\u56e0\u4e3a\u871c\u8702\u3002</p> <p> </p> <p>\u871c\u8702\uff0c\u871c\u8702\uff0c\u5927\u5bb6\u90fd\u6765\u505a\u871c\u8702\u9898\u3002\u871c\u8702\uff0c\u871c\u8702\uff0c\u5927\u5bb6\u90fd\u6765\u505a\u871c\u8702\u9898\u3002\u871c\u8702\uff0c\u871c\u8702\uff0c\u5927\u5bb6\u90fd\u6765\u505a\u871c\u8702\u9898\u3002</p> <p>\u91cd\u8981\u7684\u4e8b\u60c5\u91cd\u590d\u4e09\u904d\uff0c\u56e0\u4e3a\u6211\u4e0d\u4f1a\u505a\u871c\u8702\u573a\u7684 C\u3002</p> <p>\u5148\u5495\u5495\u5495\u7740\uff0c\u6162\u6162\u6574\u7406\u3002</p> <p>\u6211\u5199\u4e86 <code>\u9e3d\u3002</code> \u7684\u57fa\u672c\u5c31\u662f\uff0c\u6211\u81ea\u5df1\u4e5f\u6ca1\u592a\u591a\u60f3\u6cd5\uff0c\u89c1\u7684\u9898\u4e0d\u591f\u591a\u7684\u3002</p> <p>\u5f53\u7136\u5199\u4e86\u7684\u4e5f\u53ea\u80fd\u8bf4\u662f\u89c1\u8fc7\u4e00\u5b9a\u7684\u9898\u76ee\uff0c\u6bd5\u7adf\u6211\u6c34\u5e73\u4f4e\u662f\u5927\u5bb6\u6709\u76ee\u5171\u7779\u7684\u3002</p> <p>\u8fd9\u4e1c\u897f\u6211\u89c9\u5f97\u53ef\u80fd\u5c31\u5bf9\u6211\u8fd9\u79cd\u7b28\u86cb\u6709\u7528\uff0c\u771f\u8981\u770b\u70b9\u4ec0\u4e48\u4e1c\u897f\u51fa\u6765\uff0c\u5efa\u8bae\u8fd8\u662f\u770b\u4e0a\u9762\u7684 link\u3002</p> <p>\u5f53\u7136\uff0c\u5e38\u89c1\u7684\u5957\u8def\uff0c\u5c31\u521a\u5b66\u4e86\u7684\u5c0f\u670b\u53cb\u90fd\u53ef\u4ee5\u77e5\u9053\u7684\uff0c\u6211\u4e00\u822c\u5c31\u4e0d\u5199\u4e86\uff08</p> <p>\u4e4b\u524d\u5199\u5728 <code>/algor</code> \u548c <code>/rec</code> \u5e95\u4e0b\u7684\u4e00\u4e9b Trick \u4e5f\u4f1a\u6162\u6162\u8fc1\u79fb\u8fc7\u6765\uff0c\u4ee5\u540e\u8003\u524d\u770b\u8fd9\u91cc\u5c31\u884c\u4e86</p> TODO list <p>\u503c\u57df\u4e0a\u7684\u4e00\u7c7b\u52a8\u6001\u95ee\u9898\uff0c\u5f88\u591a\u65f6\u5019\u53ef\u4ee5\u8003\u8651 BIT \u6216\u8005\u4e3b\u5e2d\u6811\uff1f</p> <p>\u7f6e\u6362\u73af\u76f8\u5173\uff1f</p> <p>Acwing277</p> <p>Bzoj3307 \u96e8\u5929\u7684\u5c3e\u5df4</p> <p>tips: \u6587\u4ef6\u8def\u5f84\u5c3d\u91cf\u7528 <code>.md</code> \u540e\u7f00\uff0c\u8fd9\u6837\u624d\u662f\u535a\u5ba2\u76ee\u5f55\u4e0b\u7684\u6b63\u5e38\u76f8\u5bf9\u8def\u5f84\uff0c\u4e0d\u7136\u5b83\u4f1a\u7b97\u6210\u751f\u6210\u7684 site \u4e2d\u95f4\u7684\u76f8\u5bf9\u8def\u5f84\uff0c\u8fd9\u6837\u8981\u591a\u4e00\u4e2a <code>../</code>,\u800c\u4e14\u4e0d\u80fd\u662f <code>.md/#</code>,\u8fd9\u6837\u4e5f\u4f1a\u51fa\u4e8b.</p>"}, {"location": "misc/antontrygubO_o/#0x00", "title": "0x00. \u505a\u9898\u601d\u8def", "text": ""}, {"location": "misc/antontrygubO_o/#0x01", "title": "0x01. \u9605\u8bfb\u9898\u9762", "text": "<p>\u62ff\u5230\u9898\u9996\u5148\u5e94\u8be5\u505a\u7684\u662f\u9605\u8bfb\u9898\u9762\uff0c\u5148\u5f62\u5f0f\u5316\u9898\u9762\uff08\u5f88\u591a\u65f6\u5019\u5f62\u5f0f\u5316\u5c31\u4ee3\u8868\u4e86\u521d\u6b65\u8f6c\u5316\uff09\u3002</p> <p>\u60f3\u6e05\u695a\u9898\u76ee\u8981\u6c42\u4f60\u505a\u4ec0\u4e48\uff0c\u8fd9\u7c7b\u95ee\u9898\u6709\u6ca1\u6709\u89c1\u8fc7\uff0c\u6709\u6ca1\u6709\u5957\u8def\uff0c\u5982\u679c\u89c1\u8fc7\u7c7b\u4f3c\u7684\uff0c\u8fd9\u4e2a\u9898\u5e94\u8be5\u6709\u4ec0\u4e48\u53d8\u5316\uff1f\u6bd4\u5982\u505a\u8fc7 Permutation Distance \u4e4b\u540e\u518d\u770b\u5230 230111C-T1-\u5c0fW\u4e0e\u8eab\u9ad8 \u8fd9\u6837\u3002</p> <p>\u770b\u6e05\u695a\u95ee\u9898\u662f online \u8fd8\u662f offline\uff1f\u662f exists \u8fd8\u662f forall\uff1f</p> <p>\u6ca1\u6709\u5957\u8def\u7684\u8bdd\u662f\u4e0d\u662f\u5e94\u8be5\u8003\u8651\u8f6c\u5316/\u89c2\u5bdf\u7ed3\u8bba\uff1f\uff08\u8fd9\u4e2a\u4e0b\u9762\u518d\u8bf4\uff09</p> <p>\u5f53\u7136\uff0c\u5982\u679c\u4e00\u4e2a\u95ee\u9898\u601d\u8003\u7684\u65f6\u5019\u8111\u888b\u91cc\u6ca1\u6709\u4e00\u79cd\u201c\u6e05\u6670\u201d\u7684\u611f\u89c9\uff0c\u5c31\u5c3d\u91cf\u4e0d\u8981\u5f00\u59cb\u4e0b\u4e00\u6b65\uff0c\u6bd4\u5982 230203C-T1-\u5b57\u7b26\u4e32\u3002</p> <p>\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u4e5f\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u70b9\uff0c\u53ef\u4ee5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5feb\u901f\u5224\u65ad\u5bf9\u5e94 subtask \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ee5\u786e\u5b9a\u65b9\u5411\uff0c\u6bd4\u5982 Union of Two Sets \u8fd9\u7c7b\u4ea4\u4e92\uff0c\u80fd\u901a\u8fc7\u4ea4\u4e92\u9898\u51fa\u9898\u7684\u5c40\u9650\u6027\uff0c\u6839\u636e\u6570\u636e\u8303\u56f4\u5feb\u901f\u5224\u65ad\u505a\u6cd5\uff08\uff08\uff08</p> <p>\u4e0d\u8fc7\u6709\u7684\u65f6\u5019\u4e5f\u4e0d\u80fd\u88ab\u8fd9\u4e2a\u5c40\u9650\u4e86\uff1a\u6bd4\u5982230201C-T4-\u56de\u6587\u4e32\uff0c\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5b57\u7b26\u96c6\u662f \\(26\\)\uff0c\u800c\u4e14\u5b57\u7b26\u4e32\u957f\u5ea6 \\(1e5\\)\uff0c\u4ee5\u4e3a\u590d\u6742\u5ea6\u662f \\(26 \\times 1e5\\)\uff0c\u7ed3\u679c\u5b9e\u9645\u4e0a\u8fd8\u8981\u518d\u591a\u4e00\u4e2a\u4e8c\u5206\u7684 \\(\\log\\)\u3002</p> <p>\u8fd8\u6709 230201C-T2-\u7ffb\u8f6c\uff0c\u8fd9\u4e2a\u4e5f\u662f\u88ab\u6570\u636e\u8303\u56f4\u76f4\u63a5\u9a97\u4e86\uff0c\u65b9\u5411\u76f4\u63a5\u9519\u5b8c\uff0c\u672c\u6765\u5c31\u662f\u66b4\u529b\uff0c\u60f3\u6210\u72b6\u538b dp \u4e86\u2026\u2026</p> <p>\u6240\u4ee5\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u6765\u5224\u5b9a\u505a\u6cd5\u662f\u4e0b\u4e0b\u7b56\uff0c\u53ea\u80fd\u5728\u5b8c\u5168\u6ca1\u6709\u601d\u8def\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff01</p> <p>\u4e0d\u8fc7\u4f60\u4e3a\u4e86\u786e\u5b9a\u505a\u6cd5\u503c\u4e0d\u503c\u5f97\u60f3\u4e0b\u53bb\uff0c\u8fd8\u662f\u8981\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\u7684\uff0c\u907f\u514d\u50cf USCAO23JAN Bronze T2 \u8fd9\u6837\uff0c\u672c\u6765\u5c31\u662f\u4e2a\u8bed\u6cd5\u66b4\u529b\u9898\uff0c\u5c31\u56e0\u4e3a\u628a \\(10\\) \u770b\u6210\u4e86 \\(1e5\\)\uff0c\u60f3\u4e86\u5927\u534a\u5929\u8d2a\u5fc3\uff0c\u6210\u4e3a\u5c0f\u4e11\u3002</p>"}, {"location": "misc/antontrygubO_o/#0x02", "title": "0x02. \u8f6c\u5316\u95ee\u9898\u4ee5\u53ca\u89c2\u5bdf\u7ed3\u8bba\u548c\u6027\u8d28", "text": "<p>\u8fd9\u4e2a\u5176\u5b9e\u624d\u662f\u5f88\u591a\u65f6\u5019\u6253\u5f00\u9898\u76ee\u7a81\u7834\u53e3\u7684\u5730\u65b9\u3002</p> <p>\u6709\u4e00\u4e9b\u6bd4\u8f83\u5e38\u7528\u7684\u6280\u5de7\uff0c\u5728\u8fd9\u91cc\u5217\u4e3e\u4e00\u4e0b\uff1a</p> <ul> <li>\u6700\u7b28\u7684\u65b9\u6cd5\u5c31\u662f\u8003\u8651\u624b\u73a9\u6837\u4f8b\uff0c\u6a21\u62df\u4e00\u4e0b\u9898\u9762\u7684\u8fc7\u7a0b\u770b\u770b\u6709\u6ca1\u6709\u542f\u53d1\uff0c\u627e\u627e\u89c4\u5f8b\u8bd5\u8bd5\uff1f\u6bd4\u5982\uff1a220518C-T2-\u300c\u5ba2\u661f\u7480\u74a8\u4e4b\u591c\u300d \u8fd9\u6837\uff1f\u6216\u8005\u662f\u7c7b\u4f3c 2301113C-T4-coin \u8fd9\u79cd\u8003\u8651\u628a\u6709\u8054\u7cfb\u7684\u4e1c\u897f\u653e\u5728\u4e00\u8d77\uff0c\u89c2\u5bdf\u5230\u95ee\u9898\u7684\u672c\u8d28\uff1f</li> <li>\u518d\u8fdb\u4e00\u6b65\u5c31\u662f\u8003\u8651\u89c2\u5bdf\u7b54\u6848\u7684\u5f62\u5f0f\uff0c\u5408\u6cd5\u89e3\u7684\u5f62\u72b6\uff0c\u770b\u770b\u6709\u6ca1\u6709\u4ec0\u4e48\u542f\u53d1\uff0c\u6bd4\u5982 Young Maids\uff0c\u8003\u8651\u4e00\u4e2a\u7b54\u6848\u5408\u6cd5\u540e\u5bf9\u539f\u95ee\u9898\u51b3\u7b56\u7684\u9650\u5236\u662f\u4ec0\u4e48\uff1f\u8fd8\u662f\u8bf4\u6bd4\u5982 221025C-T4-\u7f6a\u2f08\u633d\u6b4c</li> <li>\u8981\u60f3\u6e05\u695a\uff0c\u4ec0\u4e48\u4e1c\u897f\u624d\u4f1a\u9020\u6210\u8d21\u732e\uff0c\u4e00\u4e2a\u4f4d\u7f6e\u4ec0\u4e48\u65f6\u5019\u5408\u6cd5\uff0c\u4ec0\u4e48\u65f6\u5019\u4e0d\u5408\u6cd5\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u7c7b\u4f3c\u62c6\u5f00\u9650\u5236\u4e00\u6837\uff0c\u8ba9\u5404\u4e2a\u5143\u7d20\u505a\u7684\u8d21\u732e\u5c3d\u91cf\u7684\u51cf\u5c11\u5bf9\u5176\u5b83\u5143\u7d20\u8d21\u732e\u7684\u5f71\u54cd\uff0c\u8fd9\u6837\u66f4\u65b9\u4fbf\u8ba1\u7b97\uff0c\u6bd4\u5982\u7c7b\u4f3c 230203C-T4-\u4ea4\u6362 \u7684\u60f3\u6cd5\uff0c\u5f88\u591a\u65f6\u5019\u4e5f\u80fd\u7c7b\u4f3c\u4e0b\u9762 dp \u91cc\u63d0\u5230\u7684 Xor-Subsequence (easy version) \u4e00\u6837\u7528\u6765\u6392\u9664\u4e0d\u5fc5\u8981\u7684\u72b6\u6001\u3002</li> <li>\uff08\u63a5\u4e0a\u4e00\u6761\uff09\u4e5f\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u8003\u8651\u5168\u5c40 or \u6bcf\u4e00\u6bb5\uff0c\u672c\u8eab\u5c31\u5df2\u7ecf\u80fd\u6ee1\u8db3\u7b54\u6848\u7684\u8d21\u732e\uff0c\u7136\u540e\u518d\u8003\u8651\u51d1\u51fa\u6765\u4e4b\u540e\u53c8\u51fa\u73b0\u7684\u65b0\u7684\u8d21\u732e\uff08\u524d\u63d0\u662f\u5f00\u59cb\u7684\u65f6\u5019\u6ee1\u8db3\u8d21\u732e\u7684\uff0c\u62fc\u51d1\u8d77\u6765\u4e4b\u540e\u4e5f\u80fd\u6ee1\u8db3\u8d21\u732e\uff09\uff1aNOIOnline2022TG-\u4e39\u9493\u6218\uff0cCF1801C-Music Festival</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u6700\u4f18\u5316\u95ee\u9898\uff0c\u601d\u8003\u4e00\u4e0b\uff0c\u600e\u4e48\u6837\u624d\u80fd\u66f4\u52a0\u4f18\u79c0\uff0c\u662f\u4e0d\u662f\u8981\u8003\u8651\u8d2a\u5fc3\u554a\uff0cdp\u554a\u4e4b\u7c7b\u7684\u505a\u6cd5\u4e86\uff1f\u6bd4\u5982 230203C-T3-\u5e8f\u5217</li> <li>\u89c2\u5bdf\u4e00\u4e2a\u770b\u8d77\u6765\u5565\u90fd\u6ca1\u6709\u7684\u95ee\u9898\uff0c\u8981\u8003\u8651\u81ea\u5df1\u624b\u52a8\u52a0\u4e0a\u4e00\u4e9b\u9650\u5236\uff0c\u5199\u51fa\u201c\u4e0d\u662f\uff0c\u5c31\u662f\uff0c\u4e00\u5b9a\u662f\uff0c\u5426\u5219\u201d\u8fd9\u6837\u7684\u89c2\u5bdf\uff0c\u7136\u540e\u8003\u8651\u8fd9\u4e9b\u4e1c\u897f\u6709\u5565\u7528\uff1a230117C-T4-\u5b50\u56fe\u3002</li> </ul> <p>\u8fd9\u4e9b\u662f\u7528\u4e8e\u8f6c\u5316\u95ee\u9898\u7684\uff0c\u6216\u8005\u8bf4\u5df2\u7ecf\u63a5\u8fd1\u76f4\u63a5\u7684\u505a\u6cd5\u4e86\uff1a</p> <ul> <li>\u6709\u591a\u4e2a\u590d\u5408\u7684\u9650\u5236\u6761\u4ef6\u7684\u65f6\u5019\uff0c\u8003\u8651\u628a\u9650\u5236\u6761\u4ef6\u62c6\u5f00\u7ef4\u62a4\uff1aPermutation Distance\u3002</li> <li>\u8003\u8651\u66f4\u6362\u8d21\u732e\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u9009\u62e9\u4e0d\u90a3\u4e48\u76f4\u89c2\u7684\u8d21\u732e\u62c6\u5f00\u7ef4\u62a4\uff1f\u7c7b\u4f3c Manacher \u8fd9\u6837\uff0c\u53ea\u8003\u8651\u4ee5\u4e00\u4e2a\u4f4d\u7f6e\u4e3a\u4e2d\u5fc3\u7684\u6240\u6709\u56de\u6587\u4e32\uff0c\u8fdb\u4e00\u6b65\u8bf4\u8fd9\u4e2a\u662f\u94a6\u5b9a\u4e00\u4e2a\u7c7b\u4f3c dp \u4e2d\u201c\u9636\u6bb5\u201d\u7684\u57fa\u5e95\uff0c\u627e\u5230\u4e00\u4e2a\u8ba1\u7b97\u8d21\u732e\u7684\u57fa\u51c6\u3002</li> <li>\u6216\u8005\u8003\u8651\u7d2f\u52a0\u5f71\u54cd\uff0c\u6279\u91cf\u5904\u7406\u8d21\u732e\uff1f\u6bd4\u5982 230201C-T4-\u56de\u6587\u4e32\uff0c\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\u5c31\u662f\u53cd\u8fc7\u6765\uff0c\u8003\u8651\u57fa\u51c6\u5bf9\u4e8e\u6240\u6709\u80fd\u4ea7\u751f\u8d21\u732e\u7684\u70b9\u7d2f\u52a0\u4e00\u4e2a\u6743\u503c\uff0c\u6700\u540e\u79bb\u7ebf\u5728\u6240\u6709\u70b9\u7b97\u4e00\u4e0b\u6743\u503c\u5373\u53ef</li> <li>\u4e5f\u53ef\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u590d\u6742\u7684 \\(\\sum\\sum\\min\\max\\) \u8fd9\u6837\u7684\u5f0f\u5b50\uff0c\u6211\u4eec\u5c1d\u8bd5\u76f4\u63a5\u94a6\u5b9a\u51fa\u5355\u4e2a\u4f4d\u7f6e\u7684\u7b54\u6848\uff0c\u6c42\u548c\u4e4b\u540e\u518d\u63a8\u5f0f\u5b50ABC290F - Maximum Diameter\uff0c\u4e0d\u7136\u5c31\u662f\u7c7b\u4f3c\u4e0a\u9762\u90a3\u6837\u66f4\u6362\u8ba1\u7b97\u65b9\u5f0f\u3002</li> <li>\u662f\u5426\u8981\u8003\u8651\u5206\u79bb\u53d8\u91cf\uff1f\u6bd4\u5982\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u77e9\u9635\u6539\u77e9\u9635\u548c\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u7ebf\u6bb5\u6811\u7ef4\u62a4\u65b9\u5dee\u7684\u65f6\u5019\u3002</li> <li>\u8003\u8651\u4e00\u4e0b\u4fee\u6539\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u4e4b\u540e\uff0c\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u662f\u4ec0\u4e48\uff1f\u8fd9\u91cc\u8fd8\u662f\u4ee5 230201C-T4-\u56de\u6587\u4e32 \u4e3a\u4f8b\uff0c\u8fd9\u4e2a\u9898\u786e\u5b9e\u6bd4\u8f83\u6df1\u523b\u3002</li> <li>\u8003\u8651\u4e00\u4e0b\uff0c\u6b63\u7740\u505a\u5f88\u9ebb\u70e6\uff0c\u80fd\u5426\u8003\u8651\u53cd\u7740\u505a\uff0c\u6216\u8005\u62c6\u5f00\u505a\uff1f</li> <li>\u5f53\u524d\u7684\u5f0f\u5b50\uff0c\u5f53\u524d\u7684\u4e00\u4e9b\u53d8\u91cf\uff0c\u80fd\u4e0d\u80fd\u5b58\u5728\u5176\u5b83\u7b49\u4ef7\u7684\uff0c\u53ef\u4ee5\u65b9\u4fbf\u8ba1\u7b97\u7684\u610f\u4e49\uff1f\u6bd4\u5982\u7528\u7ec4\u5408\u610f\u4e49\u8f6c\u5316\uff0c\u6216\u8005\u662f\u7528\u7c7b\u4f3c wqs \u4e8c\u5206\u91cc\u7ed9\u5f0f\u5b50\u7ed3\u5408\u539f\u95ee\u9898\u627e\u610f\u4e49\u7684\u8fd9\u79cd\uff1f</li> <li>\u6709\u7684\u65f6\u5019\u751a\u81f3\u53ef\u4ee5\u8003\u8651\u589e\u52a0\u9650\u5236\u6765\u7f29\u51cf\u72b6\u6001\uff0c\u4f46\u662f\u4ecd\u7136\u4fdd\u8bc1\u5408\u6cd5\uff1f\u7c7b\u4f3c230115C-T3-\u5b9e\u9a8c\u81f3\u5c11\u4e0d\u597d\u7b97\uff0c\u4f46\u662f\u81f3\u5c11\u51d1\u51fa\u8fd8\u53ef\u4ee5\u7ef4\u62a4\uff0c\u6216\u8005\u662f 230407C-T4-Y\u8001\u677f\u7684\u522b\u5885 \u8fd9\u6837\u4e3a\u4e86\u8ba1\u6570\u65b9\u4fbf\u52a0\u5165\u9650\u5236\u7684</li> <li>\u60f3\u6e05\u695a\u4e00\u7c7b\u8d21\u732e\u4ec0\u4e48\u65f6\u5019\u4f1a\u88ab\u8ba1\u7b97\uff0c\u5982\u679c\u5b83\u53ef\u4ee5\u88ab\u4e0d\u540c\u79cd\u60c5\u51b5\u7684\u4e0d\u540c\u4f4d\u7f6e\u66f4\u65b0\uff0c\u662f\u5426\u8981\u8003\u8651\u94a6\u5b9a\u53ea\u8ba1\u7b97\u67d0\u4e9b\u90e8\u5206\uff1a230117C-T4-\u5b50\u56fe\u3002</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\u6216\u8005\u662f\u4ec0\u4e48\u4e1c\u897f\uff0c\u505a\u591a\u6b21\u53d8\u6362\uff0c\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u8003\u8651\uff0c\u539f\u5e8f\u5217\u5bf9\u591a\u6b21\u64cd\u4f5c\u4e4b\u540e\u7684\u5e8f\u5217\u54ea\u4e9b\u4f4d\u7f6e\u4f1a\u6709\u8d21\u732e\uff0c\u8d21\u732e\u662f\u600e\u4e48\u6837\u7684 230407C-T3-\u8fdb\u5316 </li> <li>\u5982\u679c\u4e00\u4e2a\u6700\u4f18\u5316\u95ee\u9898\u5904\u7406\u8d77\u6765\u5341\u5206\u56f0\u96be\uff0c\u4e0d\u59a8\u5c1d\u8bd5\u627e\u5230\u6700\u4f18\u5316\u95ee\u9898\u7684\u5355\u8c03\u6027\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u5224\u5b9a\u95ee\u9898\u6765\u6c42\u89e3\uff0c\u8bb0\u4f4f\uff0c\u5927\u90e8\u5206\u65f6\u5019\u5224\u5b9a\u96be\u5ea6\u8fdc\u4f4e\u4e8e\u6700\u4f18\u5316\uff1a230430C-T3-Square\u3002</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x03", "title": "0x03. \u601d\u8def\u7684\u5ef6\u7eed\u3001\u5207\u6362\u4ee5\u53ca\u601d\u7ef4\u7a7a\u767d\u7a97\u53e3", "text": "<p>\u6709\u6027\u8d28\uff0c\u6709\u60f3\u6cd5\u4e4b\u540e\uff0c\u5e94\u8be5\u8003\u8651\u7684\u5c31\u662f\uff0c\u600e\u4e48\u6837\u628a\u5b83\u5e94\u7528\u5230\u539f\u95ee\u9898\u4e0a\u3002</p> <p>\u8fd8\u6709\uff0c\u8fd9\u4e9b\u4e1c\u897f\u662f\u5426\u80fd\u4fdd\u8bc1\u6b63\u786e\u6027\uff1f\u6709\u6ca1\u6709\u53cd\u4f8b\uff1f\u6709\u6ca1\u6709\u7279\u6b8a\u60c5\u51b5\uff1f\u8003\u8651\u4e00\u4e0b\u5148\uff1f</p> <p>\u5982\u679c\u5f53\u524d\u601d\u8def\u867d\u7136\u5f88\u6e05\u6670\uff0c\u4f46\u5c31\u662f\u5361\u5728\u4e00\u4e2a\u70b9\uff0c\u77e5\u9053\u5e94\u8be5\u628a\u5b83\u5f04\u6210\u4ec0\u4e48\u5f62\u5f0f\uff0c\u4f46\u662f\u786e\u5b9e\u6ca1\u6709\u529e\u6cd5\u505a\u5230\uff0c\u5c31\u9700\u8981\u8003\u8651\u91cd\u542f\u601d\u8def\uff0c\u6216\u8005\u662f\u89c2\u5bdf\u601d\u7ef4\u94fe\u4e0a\u662f\u4e0d\u662f\u6709\u4ec0\u4e48\u5730\u65b9\u51fa\u95ee\u9898\u4e86\uff0c\u6bd4\u5982\uff1a230201C-T2-\u7ffb\u8f6c</p> <p>\u601d\u7ef4\u7a7a\u767d\u7684\u65f6\u5019\uff0c\u6709\u4e24\u79cd\u529e\u6cd5\uff0c\u4e00\u79cd\u662f\u89c2\u5bdf\u9898\u9762\uff0c\u53e6\u5916\u4e00\u79cd\u5c31\u662f\u8003\u8651\u91cd\u65b0\u7406\u4e00\u904d\u601d\u8def\u3002</p> <p>\u957f\u65f6\u95f4\u7684\u601d\u7ef4\u7a7a\u767d\u4f1a\u5bfc\u81f4\u8131\u51fa\u72b6\u6001\u3002</p> <p>\u5982\u679c\u611f\u89c9\u601d\u8def\u6709\u70b9\u6df7\u4e71\u4e86\uff0c\u6216\u8005\u8bf4\u5361\u5728\u5173\u952e\u70b9\u4f46\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u505a\u4e86\uff0c\u4e5f\u9700\u8981\u91cd\u65b0\u7406\u4e00\u4e0b\u601d\u8def\uff0c\u800c\u4e14\u4e0d\u80fd\u592a\u5feb\u76f4\u63a5\u8fc7\u8fc7\u53bb\uff0c\u6162\u4e00\u70b9\uff0c\u4e0d\u7740\u6025\u3002</p>"}, {"location": "misc/antontrygubO_o/#0x10", "title": "0x10. \u6742\u9879", "text": ""}, {"location": "misc/antontrygubO_o/#0x11", "title": "0x11. \u8d2a\u5fc3", "text": "<p>\u6b63\u5e38\u60f3\u6cd5\u5176\u5b9e\u5e94\u8be5\u662f\uff0c\u5bf9\u4e8e\u4e00\u770b\u5c31\u662f\u8d2a\u5fc3\uff0c\u4f46\u662f\u7b56\u7565\u4e0d\u660e\u663e\u7684\u9898\uff0c\u5e94\u8be5\u628a\u6240\u6709\u53ef\u80fd\u7b56\u7565\u62ff\u51fa\u6765\uff0c\u4e0d\u7136\u53cd\u8bc1\uff0c\u4e0d\u7136 exc arg\uff0c\u4e0d\u7136\u8303\u56f4\u653e\u7f29\uff0c\u53cd\u6b63\u5c31\u5e94\u8be5\u6c42\u51fa\u6765\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4ec0\u4e48\u6700\u4f18\uff0c\u7136\u540e\u518d\u6765\u8003\u8651\u600e\u4e48\u5199\u4ee3\u7801\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u8981\u786e\u4fdd\u4f60\u7684\u7ed3\u8bba\u7684\u6b63\u786e\u548c\u5408\u7406\u3002</p> <p>\u800c\u4e0d\u662f\u4e00\u4e2a\u52b2\u7684\u778e\u60f3\u7ed3\u8bba\uff0c\u8fd9\u6837\u547d\u4e2d\u6548\u7387\u5f88\u4f4e\u3002</p> <ul> <li>\u4e00\u79cd\u62c6\u5206\u7684\u8d2a\u5fc3\u601d\u60f3\uff1a\u53ef\u4ee5\u6309\u7167\u67d0\u79cd\u201c\u91cd\u8981\u7a0b\u5ea6\u201d\u5206\u5f00\u8003\u8651\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u60c5\u51b5\u5206\u5f00\u8003\u8651\uff0c\u6700\u540e\u76f4\u63a5\u66b4\u529b\u590d\u5408\uff1aTHUPC2023-pre-A -\u5927\u5bcc\u7fc1</li> <li>\u5982\u679c\u4e00\u4e2a\u9898\uff0c\u6ca1\u6cd5\u5f88\u597d\u7684\u901a\u8fc7\u8d2a\u5fc3\u6765\u5feb\u901f\u786e\u5b9a\u4e00\u4e9b\u5fc5\u9009\u7b56\u7565\uff0c\u6216\u8005\u8bf4\u6392\u9664\u5197\u6742\uff08\u4e5f\u5c31\u662f\u6709\u4e0d\u5c11\u7279\u4f8b\uff09\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5bf9\u4ed6\u76f4\u63a5\u901a\u8fc7\u66b4\u529b\u6216\u8005\u7ef4\u62a4\u4fe1\u606f\u7b97\u7b54\u6848\uff1aCF1801B - Buying gifts\uff0c230322C-T2-Brackets\u3002\u6216\u8005\u662f\u6211\u4eec\u5c31\u76f4\u63a5\u8003\u8651 dp\uff1aCF1801C-Music Festival (\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u5728\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\u91cc\u53d6\u6700\u4f18\u89e3\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u52b2\u7684\u8003\u8651\u5c40\u90e8\u6700\u4f18\u89e3)</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x12", "title": "0x12. \u6784\u9020", "text": "<p>\u5176\u5b9e\u6784\u9020\u5c5e\u4e8e\u6bd4\u8f83 adhoc \u7684\u9898\u76ee\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5b58\u5728\u4e00\u5b9a\u7684\u5957\u8def\u3002</p> <ul> <li>\u5047\u8bbe\u7b54\u6848\u5b58\u5728\uff0c\u5e94\u8be5\u662f\u600e\u4e48\u6837\u7684\uff1f</li> <li>\u90a3\u4e48\uff0c\u7b54\u6848\u4e0d\u5b58\u5728\u7684\u65f6\u5019\u5e94\u8be5\u662f\u600e\u4e48\u6837\uff1f</li> <li>\u6709\u6ca1\u6709\u4ec0\u4e48\u7279\u6b8a\u7684\u65b9\u5f0f\uff0c\u80fd\u591f\u8ba9\u6761\u4ef6\u88ab\u5f88\u597d\u7684\u6ee1\u8db3\uff1f</li> <li>\u53ef\u4e0d\u53ef\u4ee5\u653e\u5bbd\u6216\u8005\u7f29\u5c0f\u9898\u76ee\u7684\u9650\u5236\u4ee5\u4fbf\u66f4\u597d\u7684\u6784\u9020\uff1f</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x13", "title": "0x13. \u4e71\u641e", "text": "<ul> <li>\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\u505a\u5f88\u591a\u4e2a independent problem \u7684\u65f6\u5019\u4e00\u822c\u90fd\u4f1a\u8981\u8003\u8651\u4ece\u4e0a\u4e00\u4e2a\u72b6\u6001\u7ee7\u627f\uff0c\u6216\u8005\u662f\u8003\u8651\u5148\u6574\u4f53\u505a\u4e00\u904d\u518d\u8ba1\u7b97 ignore \u4e00\u4e9b\u64cd\u4f5c\u4e4b\u540e\u7684\u5f71\u54cd\u4e4b\u7c7b\u7684 \uff1aLeast Elements\uff0c230203C-T2-\u6392\u5217\u3002</li> <li>\u5982\u679c\u662f\u901a\u8fc7\u6253\u8868\u627e\u89c4\u5f8b\uff0c\u627e\u5230\u4e86 \\(k = c\\) \uff08\u5e38\u6570\uff09\u7684\u89c4\u5f8b\uff0c\u53ef\u4ee5\u8003\u8651\u628a\u5f0f\u5b50\u4e2d\u7684\u5e38\u6570\u9879\u6362\u6210 \\(k\\) \u76f8\u5173\u7684\u5f0f\u5b50\uff0c\u8fdb\u800c\u63a8\u51fa\u901a\u9879\u516c\u5f0f\uff1aTHUPC2023-pre-B - \u62e7\u87ba\u4e1d</li> <li>\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5ffd\u7565\u90e8\u5206\u9650\u5236\uff0c\u76f4\u63a5\u5bf9\u4e8e\u4e00\u90e8\u5206\u9650\u5236\u505a\u5b8c\uff0c\u7136\u540e\u518d\u4e00\u4e00\u8c03\u6574\u6ee1\u8db3\u5176\u5b83\u9650\u5236\uff0c\u4e0d\u8fc7\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u901a\u5e38\u5c31\u53ef\u4ee5\u770b\u51fa\u590d\u5408\u540e\u7684\u505a\u6cd5\u4e86\uff1aLost Cows</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u4f1a\u8df3\u6765\u8df3\u53bb\uff0c\u7b97\u4e00\u4e0b\u65b9\u6848\u6570\uff0c\u7ecf\u8fc7\u7684\u8def\u5f84\u957f\u5ea6\u4e4b\u7c7b\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u60f3\u5230\u5229\u7528\u500d\u589e\u7ef4\u62a4\uff1aCF1809F - Traveling in Berland\uff08\u8fd9\u9898\u9898\u89e3\u8fd8\u6ca1\u5199\uff09\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u95ee\u9898\u8981\u4f60\u5408\u5e76\u4e00\u5806\u4e1c\u897f\uff0c\u800c\u4f60\u53ea\u4f1a\u66b4\u529b\uff0c\u8bf7\u52a1\u5fc5\u76f4\u63a5\u542f\u53d1\u5f0f\u5408\u5e76\uff1a230331C-T2-Favorite Colors\u3002</li> <li>\u7c7b\u4f3c CDQ \u548c\u70b9\u5206\u6cbb\u7684\u8fd9\u79cd\u201c\u53ea\u8003\u8651\u4e00\u79cd\u7b80\u5355\u60c5\u51b5\uff0c\u5176\u4ed6\u5206\u6cbb\u5904\u7406\u201d\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u591a\u62ff\u6765\u601d\u8003\u601d\u8003\u3002</li> <li>\u5f88\u591a\u201c\u63d2\u5165\u201d\u7c7b\u7684\u95ee\u9898\u90fd\u6709\u201c\u76f8\u5bf9\u6b21\u5e8f\u4e0d\u53d8\u7684\u6027\u8d28\u201d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u65b9\u9762\u627e\u5230\u95ee\u9898\u7684\u7a81\u7834\u53e3\uff1a230414C-T4-ZYB\u73a9\u5b57\u7b26\u4e32</li> <li>\u6709\u4e00\u7c7b\u95ee\u9898\uff0c\u6bcf\u6b21\u64cd\u4f5c \\((i, j)\\) \u4e0d\u6b62\u4f1a\u6539\u53d8 \\(a_i, a_j\\)\uff0c\u901a\u5e38\u8fd8\u4f34\u6709\u5176\u4ed6\u7684\u9650\u5236\uff0c\u6211\u4eec\u4e00\u822c\u8003\u8651\uff0c\u60f3\u529e\u6cd5\u901a\u8fc7\u8fd9\u4e9b\u9650\u5236\u627e\u51fa\u4e00\u4e2a\u201c\u5143\u64cd\u4f5c\u201d\uff0c\u6d88\u53bb/\u51cf\u5c11\u9650\u5236\uff1aABC296F-Simultaneous Swap</li> <li>\u6709\u4e00\u7c7b\u95ee\u9898\uff0c\u5b83\u4f1a\u8981\u6c42\u4f60\u6309\u7167\u67d0\u4e2a\u6b65\u9aa4\u5229\u7528\u67d0\u4e2a\u4e1c\u897f\u751f\u6210\u67d0\u4e2a\u4e1c\u897f\uff0c\u5982\u679c\u4f60\u80fd\u5c1d\u8bd5\u7ef4\u62a4\u8fd9\u91cc\u9762\u6240\u8c13\u7684\u201c\u4e0d\u53d8\u91cf\u201d\uff0c\u90a3\u4e48\u8ba1\u7b97\u4f1a\u5f88\u65b9\u4fbf\uff0c\u5f53\u7136\u8fd8\u6709\u4e00\u79cd\u60f3\u6cd5\u662f\u8f6c\u5316\u6210\u56fe\u8bba\u95ee\u9898\uff0c\u8003\u8651\u7b54\u6848\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u5e76\u5c1d\u8bd5\u538b\u7f29\uff0c\u5408\u5e76\u76f8\u540c\u7684\u5757/\u8def\u5f84\uff0c\u4ee5\u6b64\u8fbe\u5230\u4f18\u5316\u7684\u76ee\u7684\uff1a230509C-T2-Find and Replace\u3002</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x20", "title": "0x20. \u52a8\u6001\u89c4\u5212", "text": "<p>\u5efa\u8bae\u5148\u9605\u8bfb \u5173\u4e8e dp \u7684\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879 \u4ee5\u53ca \u91cd\u65b0\u89e3\u6784\u52a8\u6001\u89c4\u5212</p>"}, {"location": "misc/antontrygubO_o/#0x21", "title": "0x21. \u786e\u5b9a\u9636\u6bb5", "text": "<p>\u9636\u6bb5\u5176\u5b9e\u5f88\u597d\u786e\u5b9a\uff0c\u524d \\(i\\)\uff0c\\(u\\) \u7684\u5b50\u6811\u8fd9\u79cd\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\uff0cFloyd \u7684 \\(k\\) \u4e3a\u9636\u6bb5\u7b97\u662f\u4e00\u79cd\u6bd4\u8f83\u7279\u6b8a\u7684\u9636\u6bb5\uff0c\u4e0d\u8fc7\u5927\u5bb6\u90fd\u77e5\u9053\u4e86\u5c31\u4e0d\u5199\u4e86\u3002</p> <ul> <li>\u5982\u679c\u9898\u76ee\u7ed9\u51fa\u7684\u6761\u4ef6\u65e0\u6cd5\u4ee5\u7ebf\u6027\u7684\u987a\u5e8f\u4f5c\u4e3a\u9636\u6bb5\uff0c\u6bd4\u5982 Flexible String Revisit \u8fd9\u6837\u8981\u5728\u5e8f\u5217\u4e0a\u968f\u673a\u9009\u62e9\u7684\uff0c\u4e0d\u7136\u5c31\u8003\u8651\u6bcf\u4e00\u6b65\u7684\u4ee3\u4ef7\uff08\u8fd9\u9898\u662f\u4ece \\(i\\) \u4e2a\u4e0d\u540c\u53d8\u5316\u5230 \\(i - 1\\) \u4e2a\u4e0d\u540c\u4e3a\u4e00\u6b65\uff09\uff0c\u4e0d\u7136\u5c31\u8003\u8651\u7c7b\u4f3c\u72b6\u538b\u62c6\u5206\u8fd9\u79cd\u3002</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x22", "title": "0x22. \u72b6\u6001\u8bbe\u8ba1", "text": "<p>\u4e00\u822c\u6765\u8bf4\u53ea\u9700\u8981\u63d0\u53d6\u9898\u76ee\u4e2d\u7684\u8981\u7d20\uff0c\u7ed3\u5408\u9636\u6bb5\u8bbe\u8ba1\u72b6\u6001\u5c31\u53ef\u4ee5\u3002</p> <p>\u5e38\u89c1\u7684 dp \u72b6\u6001\u65e0\u975e\u5c31\u662f\u524d \\(i\\) \u524d \\(j\\)\uff0c\\(u\\) \u7684\u5b50\u6811\uff0c\u72b6\u6001\u4e3a \\(msk\\)\uff0c\u8d70\u5230 \\(pos\\) \u7684\u671f\u671b\u8fd9\u6837\uff0c\u770b\u770b <code>/algor/dp</code> \u91cc\u9762\u7684\u4e1c\u897f\u5c31\u884c\u4e86\u3002</p> <p>\u4e0d\u8fc7\u5f88\u591a\u65f6\u5019\u9650\u5236\u6761\u4ef6\u5206\u4e24\u7c7b\uff0c\u4e00\u7c7b\u53ef\u4ee5\u5728\u72b6\u6001\u4e2d\u8868\u8fbe\uff0c\u4e00\u7c7b\u53ef\u4ee5\u5728\u8f6c\u79fb\u4e2d\u8868\u8fbe\uff0c\u8fd9\u4e2a\u63a5\u4e0b\u6765\u4f1a\u8bf4\u3002</p> <p>\u80fd\u5728\u72b6\u6001\u4e2d\u8868\u8fbe\u7684\u4e00\u822c\u662f\u5f53\u524d\u4f4d\u7f6e\u7684\u4e00\u4e9b\u9650\u5236\uff0c\u6bd4\u5982\u5f53\u524d\u5df2\u7ecf\u9009\u4e86 \\(j\\) \u4e2a\u8fd9\u79cd\u3002</p> <p>\u8fd9\u91cc\u8bb0\u5f55\u4e86\u4e00\u4e9b\u5bf9\u6211\u6765\u8bf4\u66fe\u7ecf\u4e0d\u662f\u5f88\u5e38\u89c4\u7684\u60f3\u6cd5\u3002</p> <ul> <li>\u6709\u4e9b\u9898\u76ee\u9700\u8981\u8003\u8651\uff0c\u5728\u72b6\u6001\u4e2d\u94a6\u5b9a\u524d\u9762\u4e00\u6bb5\u4e00\u5b9a\u5408\u6cd5\uff0c\u7136\u540e\u53ea\u8003\u8651\u51b3\u7b56\u65f6\u4f1a\u6709\u53d8\u5316\u7684\u90e8\u5206\uff0c\u8fd9\u79cd\u4e00\u822c\u5728\u505a\u8f6c\u79fb\u7684\u65f6\u5019\u8981\u5c0f\u5fc3\u8c28\u614e\uff0c\u4e0d\u8981\u6f0f\u6389\u4e86\u9650\u5236\u6761\u4ef6\u3002</li> <li>\u5982\u679c\u9898\u76ee\u4e2d\u7684\u8981\u7d20\u6bd4\u8f83\u591a\uff0c\u4f46\u662f\u77e5\u9053\u4e00\u5b9a\u7684\u4fe1\u606f\u4e4b\u540e\u53ef\u4ee5\u63a8\u51fa\u5269\u4e0b\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u72b6\u6001\u91cc\u7701\u53bb\u5bf9\u5e94\u7684\u7ef4\u5ea6\uff1aMobile Service</li> <li>\u7ed9\u4e00\u4e2a\u5e8f\u5217\uff0c\u8981\u6c42\u5c06\u5176\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u6bb5\uff0c\u6c42\u67d0\u4e2a\u4ee3\u4ef7\u7684\u6700\u5927\u503c\u8fd9\u4e00\u7c7b\u95ee\u9898\uff0c\u5982\u679c\u9898\u76ee\u6ca1\u6709\u9650\u5236\u4f60\u9700\u8981\u5206\u591a\u5c11\u6bb5\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbe\u8ba1 dp \u72b6\u6001\u4e3a\uff0c\u8003\u8651\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\u5206\u5272\u6210\u82e5\u5e72\u6bb5\u7684\u4ee3\u4ef7\u6700\u5927\u662f\u591a\u5c11\uff1aOptimal Partition\uff0c\u4efb\u52a1\u5b89\u6392</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x23", "title": "0x23. \u72b6\u6001\u8f6c\u79fb", "text": "<p>\u72b6\u6001\u8f6c\u79fb\u4e00\u822c\u53d6\u51b3\u4e8e\u72b6\u6001\u7684\u5b9a\u4e49\uff0c\u5c31\u8003\u8651\u600e\u4e48\u8ba9\u72b6\u6001\u80fd\u8986\u76d6\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\uff0c\u4e0d\u91cd\u590d\u4e0d\u6f0f\u7b97\u5c31\u53ef\u4ee5\u3002</p> <p>\u5982\u679c\u72b6\u6001\u786e\u5b9e\u600e\u4e48\u641e\u90fd\u4f1a\u91cd\u590d\uff0c\u53ef\u4ee5\u8003\u8651\u5bb9\u65a5\u4e00\u4e0b\u3002</p> <p>\u5982\u679c\u4f1a\u6f0f\u72b6\u6001\uff0c\u601d\u8003\u4e00\u4e0b\u662f\u4e0d\u662f\u9636\u6bb5\u6709\u95ee\u9898\uff0c\u9700\u4e0d\u9700\u8981\u5bf9\u539f\u95ee\u9898\u505a\u7c7b\u4f3c Exchange Argument \u7684\u5904\u7406\uff1f\uff1aZabuton</p> <p>\u6216\u8005\u662f\u4e0d\u662f\u72b6\u6001\u672c\u8eab\u5c31\u6709\u95ee\u9898\uff1f</p> <p>\u6709\u4e9b\u9650\u5236\u6761\u4ef6\u9700\u8981\u5728\u72b6\u6001\u8f6c\u79fb\u7684\u65f6\u5019\u8fdb\u884c\u4f18\u5316\uff0c\u8fd9\u4e2a\u5c31\u4e0d\u540c\u4e8e\u72b6\u6001\u8bbe\u8ba1\u4e2d\u7684\u9650\u5236\u6761\u4ef6\u4e86\uff0c\u6240\u4ee5\u5728\u8003\u8651\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709\u601d\u8def\u4e86\uff0c\u53ef\u4ee5\u591a\u770b\u770b\u9898\u9762\uff0c\u518d\u627e\u627e\u6709\u6ca1\u6709\u6f0f\u6389\u7684\u9650\u5236\u6761\u4ef6\u3002</p> <ul> <li>\u671f\u671b dp \u5728\u8f6c\u79fb\u7684\u65f6\u5019\u53ef\u4ee5\u628a\u671f\u671b\u5f53\u6210\u968f\u673a\u53d8\u91cf\u7684\u4e00\u79cd\u53d6\u503c\uff0c\u539f\u7406\u662f\u4e58\u6cd5\u5206\u914d\u5f8b\uff1aIlya and Escalator\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u671f\u671b dp \u7684\u8bb2\u7a3f\u3002</li> <li>\u6362\u6839 dp \u7684\u65f6\u5019\u9700\u8981\u8003\u8651\u6e05\u695a\uff0c\u7b2c\u4e8c\u4e2a dp \u6570\u7ec4\u5230\u5e95\u4ece\u4ec0\u4e48\u8f6c\u79fb\u8fc7\u6765\uff0c\u6709\u6ca1\u6709\u7b97\u91cd\u590d\u7684\u90e8\u5206\uff0c\u5982\u679c\u53d6\u6a21\u8fd8\u8981\u8003\u8651\u662f\u5426\u5b58\u5728\u9006\u5143\u4e4b\u7c7b\u7684\uff1aSubtree</li> <li>\u6709\u4e9b dp \u867d\u7136\u9636\u6bb5\u662f\u4e0b\u6807\uff0c\u4f46\u662f\u5b83\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u51b3\u7b56\u65b9\u4fbf\uff0c\u9700\u8981\u66f4\u6539\u4e00\u4e0b\u7b49\u53f7\u5de6\u8fb9\u7684\u4e0b\u6807\uff0c\u65b9\u4fbf\u8f6c\u79fb\uff0c\u4e0d\u7136\u6211\u4eec\u4e0d\u597d\u786e\u5b9a\u8fd9\u4e2a\u51b3\u7b56\u5230\u5e95\u5bf9\u7b54\u6848\u4ea7\u751f\u4e86\u4ec0\u4e48\u8d21\u732e\uff1aCleaning Shifts</li> <li>\u5982\u679c dp \u72b6\u6001\u76f4\u63a5\u8f6c\u79fb\u5f88\u9ebb\u70e6\uff0c\u6bd4\u5982\u90a3\u79cd\u6709\u5173\u8054\u6027\u7684\u72b6\u538b dp\uff0c\u8003\u8651\u4e00\u4e0b\u7b49\u4ef7\u7684\u8f6c\u5316\uff1f2301113C-T4-coin</li> <li>\u5982\u679c\u662f\u6811\u5f62 dp\uff0c\u53ef\u4ee5\u5229\u7528 dfs \u5e8f\u7684\u6027\u8d28\uff0c\u628a\u8282\u70b9\u5206\u6210\u4e24\u7c7b\uff0c\u7528\u4e8e\u5f88\u597d\u7684\u8868\u8fbe\u4e00\u4e9b\u7956\u5148\u5173\u7cfb\uff0c\u5f88\u591a\u65f6\u5019\u8fd8\u53ef\u4ee5\u7528\u6765\u51cf\u5c11\u679a\u4e3e\uff0c\u76f4\u63a5\u4e00\u6b65\u5230\u4f4d\uff1a230224C-T4-\u8fa3\u6912</li> <li>\u5982\u679c\u5728\u6811\u4e0a\u4f7f\u7528\u659c\u7387\u4f18\u5316\uff0c\u8981\u8bb0\u5f97\u51fa\u5b50\u6811\u4e4b\u540e\u56de\u6eaf\u51f8\u58f3\u7684\u72b6\u6001\uff1aHarbingers</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x24", "title": "0x24. \u540e\u6548\u6027\u76f8\u5173", "text": "<p>\u8fd9\u4e2a\uff0c\u5176\u5b9e\u5c31\u662f\u65b9\u7a0b\u63a8\u51fa\u6765\u7684\uff0c\u8981\u5199\u4ee3\u7801\u7684\u65f6\u5019\u9700\u8981\u8003\u8651\u7684\u4e86\u3002</p> <ul> <li>\u5f88\u591a\u65f6\u5019\u9700\u8981\u8003\u8651\u9ad8\u65af\u6d88\u5143\u6216\u8005\u66f4\u6539\u679a\u4e3e\u987a\u5e8f\uff0c\u5982\u679c\u8fd9\u6837\u8fd8\u662f\u6ca1\u7528\u5927\u6982\u7387\u662f\u72b6\u6001\u8bbe\u8ba1\u5c31\u51fa\u4e8b\u4e86\uff1a[HNOI2013] \u6e38\u8d70</li> <li>\u671f\u671b dp \u5f88\u591a\u65f6\u5019\u8981\u8003\u8651\u5012\u63a8\uff0c\u4e0d\u7136\u5bb9\u6613\u56e0\u4e3a\u72b6\u6001\u4e4b\u95f4\u7684\u4f9d\u8d56\u6210\u73af\uff0c\u6216\u8005\u56e0\u4e3a\u7ec8\u6b62\u72b6\u6001\u4e0d\u552f\u4e00\uff0c\u751a\u81f3\u56e0\u4e3a\u6982\u7387\u4e0d\u597d\u8ba1\u7b97\u800c\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\uff1aGotta Go Fast</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x25", "title": "0x25. \u4f18\u5316\u8f6c\u79fb", "text": "<p>\u8fd9\u4e2a\u5176\u5b9e\u5c31\u5206\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u8003\u8651\u4f18\u5316\u8f6c\u79fb\uff08\u51b3\u7b56\u96c6\u5408\uff09\uff0c\u4e00\u79cd\u662f\u4f18\u5316\u72b6\u6001\u3002\uff08\u81f3\u5c11\u4ee5\u76ee\u524d\u6211\u6240\u77e5\u9053\u7684\u6765\u770b\uff09</p> <p>\u524d\u8005\u4e00\u822c\u662f\u6570\u636e\u7ed3\u6784\u4f18\u5316 dp\uff08\u5355\u8c03\u961f\u5217\u4e5f\u662f\u6570\u636e\u7ed3\u6784\u554a\uff09\uff0c\u4e5f\u6709\u8003\u8651\u89c2\u5bdf\u9650\u5236\u6761\u4ef6\u7684\u7279\u6b8a\u6027\u6765\u53bb\u9664\u5197\u6742\u72b6\u6001\u7684\uff1aXor-Subsequence (easy version)\uff0c\u4ea6\u6216\u8005\u662f\u659c\u7387\u4f18\u5316 dp</p> <p>\u4e5f\u6709\u5229\u7528\u8d39\u7528\u63d0\u524d\u8ba1\u7b97\u7684\u601d\u60f3\u7684\uff1a\u4efb\u52a1\u5b89\u6392\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7406\u89e3\u6210\u201c\u61d2\u64cd\u4f5c\u201d\u7684\u53cd\u65b9\u5411\u3002</p> <p>\u540e\u8005\u5176\u5b9e\u4e00\u822c\u5728\u72b6\u6001\u8bbe\u8ba1\u7684\u65f6\u5019\u5c31\u505a\u4e86\uff0c\u8fd9\u91cc\u4e0d\u591a\u63d0\u3002</p> <p>\u6709\u7684\u65f6\u5019\u4e5f\u4f1a\u6709\u6bd4\u8f83\u871c\u8702\u7684 DP \u4f18\u5316\uff0c\u6bd4\u5982 230430C-T4-Label \u8fd9\u4e2a\u9898\uff0c\u8981\u901a\u8fc7\u76f4\u63a5\u89c2\u5bdf DP \u6570\u7ec4\u672c\u8eab\uff0c\u627e\u5230\u4e00\u5927\u6bb5\u672c\u8d28\u76f8\u540c\u7684\u72b6\u6001\uff0c\u6765\u5c1d\u8bd5\u538b\u7f29\u51b3\u7b56\u96c6\u5408\u4ee5\u8fbe\u5230\u4f18\u5316\u590d\u6742\u5ea6\u7684\u76ee\u7684\u3002</p>"}, {"location": "misc/antontrygubO_o/#0x26", "title": "0x26. \u5404\u79cd\u6a21\u578b", "text": "<p>\u5bf9\u4e8e\u4e00\u4e9b\u7279\u5b9a\u7684\u95ee\u9898\uff0c\u5b83\u4eec\u7684 dp \u8bbe\u8ba1\u662f\u975e\u5e38\u5957\u8def\u5316\u7684\uff0c\u6240\u4ee5\u5355\u72ec\u63d0\u51fa\u6765\uff1a</p> <ul> <li>\u5bf9\u4e8e\u672c\u8d28\u4e0d\u540c\u5b50\u5e8f\u5217\uff0c\u4e00\u822c\u90fd\u662f\u8bbe \\(dp(i)\\) \u8003\u8651\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\u7684\u7b54\u6848\uff0c\u7136\u540e\u5bf9\u4e8e\u5f53\u524d\u4f4d\u7f6e\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\uff1a230115C-T4-\u7f8e\u98df</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u6392\u5217\uff0c\u7b97\u4e00\u4e9b\u65b9\u6848\u6570\u7684\u8ba1\u6570 dp\uff0c\u4ed6\u7684\u56fa\u6709\u5957\u8def\u5c31\u662f\u8003\u8651\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\uff1a230111C-T4-\u5c0fW\u4e0e\u5927\u6570</li> <li>\u5982\u679c\u662f\u8054\u901a\u5757\u4e58\u79ef\uff0c\u8003\u8651\u5b83\u7684\u7ec4\u5408\u610f\u4e49\uff0c\u672c\u8d28\u662f\u5c06\u6811\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u8054\u901a\u5757\uff0c\u8003\u8651\u6bcf\u4e2a\u8054\u901a\u5757\u9009\u4e00\u4e2a\u7684\u65b9\u6848\u6570\uff1a230322C-T4-Mushroom</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x30", "title": "0x30. \u6570\u636e\u7ed3\u6784", "text": ""}, {"location": "misc/antontrygubO_o/#0x31", "title": "0x31. \u8f6c\u5316", "text": "<ul> <li>\u5bf9\u4e8e\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\uff0c\u52a8\u6001\u7ef4\u62a4\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5229\u7528 CDQ \u5206\u6cbb\uff0c\u5c06\u52a8\u6001\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u9759\u6001\u7684\uff0c\u5176\u539f\u7406\u662f\u5229\u7528\u5206\u6cbb\u7684\u601d\u60f3\u5c06\u4e00\u5806\u52a8\u6001\u95ee\u9898\u62c6\u5206\u6210\u51e0\u4e2a\u5c0f\u7684\u9759\u6001\u95ee\u9898\u3002</li> <li>\u6709\u4e00\u7c7b\u95ee\u9898\uff0c\u867d\u7136\u662f\u533a\u95f4\u64cd\u4f5c\uff0c\u4f46\u662f\u56e0\u4e3a\u591a\u6b21\u64cd\u4f5c\u4e4b\u540e\u4f1a\u6709\u5f88\u591a\u201c\u65e0\u7528\u201d\u7684\u64cd\u4f5c\uff0c\u6b64\u65f6\u53ef\u4ee5\u5728\u533a\u95f4\u64cd\u4f5c\u4e2d\u52a0\u4e00\u4e2a\u526a\u679d\u4f18\u5316\uff0c\u4ee5\u8fbe\u5230\u7c7b\u4f3c\u5355\u70b9\u6539\u590d\u6742\u5ea6\u7684\u6548\u679c\uff1a\u533a\u95f4\u5f00\u6839\u53f7\uff0c\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u533a\u95f4\u53d6\u6a21\uff0c\u7ef4\u62a4\u533a\u95f4 Max</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x32", "title": "0x32. \u660e\u786e\u9700\u8981\u7ef4\u62a4\u7684\u4fe1\u606f", "text": "<p>\u7ef4\u62a4\u7684\u4fe1\u606f\u7684\u533a\u522b\u4f1a\u5bfc\u81f4\u4ee3\u7801\u5b9e\u73b0\u590d\u6742\u5ea6\u7684\u533a\u522b\u3002</p> <ul> <li>\u5982 Buy tickets \u8fd9\u4e00\u9898\uff0c\u5982\u679c\u76f4\u63a5\u7ef4\u62a4\u6574\u4e2a\u5e8f\u5217\u4f1a\u5f88\u9ebb\u70e6\uff0c\u9700\u8981\u5230\u5904\u5220\u9664\u52a0\u70b9\u4e4b\u7c7b\u7684\uff0c\u5982\u679c\u8fd9\u9898\u6211\u4eec\u9009\u62e9\u4e86\u201c\u7ef4\u62a4\u7a7a\u4f4d\u201d\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\u4e8c\u5206\u4e86\u3002</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x33", "title": "0x33. \u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u7ed3\u6784", "text": "<p>\u6570\u636e\u7ed3\u6784\u7684\u4e0d\u540c\u5f80\u5f80\u4f1a\u76f4\u63a5\u51b3\u5b9a\u4ee3\u7801\u5b9e\u73b0\u590d\u6742\u5ea6\u548c\u4f60\u7684\u5fc3\u6001\u3002</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u95ee\u9898\u4e00\u770b\u5c31\u662f\u6bd4\u8f83\u663e\u7136\u7684 XXX \u677f\u5b50\uff0c\u4f46\u662f\u5b9e\u73b0\u96be\u5ea6\u786e\u5b9e\u592a\u9ad8\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\uff0c\u5728\u5f53\u524d\u7684\u9650\u5236\u4e0b\uff0c\u5b58\u4e0d\u5b58\u5728\u53e6\u4e00\u79cd\u66f4\u5de7\u5999\u7684\u7ef4\u62a4\u65b9\u5f0f\uff1f\u6bd4\u5982\u7ebf\u6bb5\u6811\u4e8c\u5206+\u533a\u95f4 qmax\uff0c\u53ef\u4e0d\u53ef\u4ee5\u76f4\u63a5\u5148 sort \u7136\u540e\u7c7b\u4f3c\u5bf9\u9876\u7684\u4e24\u4e2a set \u7ef4\u62a4\u4e24\u4e2a\u90e8\u5206\uff1fCF1801B - Buying gifts</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x34", "title": "0x34. \u7ef4\u62a4\u65b9\u5f0f(\u6a21\u578b)", "text": "<ul> <li>\u5bf9\u4e8e\u7ef4\u62a4\u7684\u590d\u6742\u7684\u4fe1\u606f\uff0c\u901a\u5e38\u6211\u4eec\u9700\u8981\u8003\u8651\u62c6\u5f00\u8fdb\u884c\u7ef4\u62a4\uff0c\u4f7f\u5f97\u4e0d\u6ee1\u8db3\u4e00\u4e9b\u53ef\u4ee5\u7ef4\u62a4\u7684\u6027\u8d28\u7684\u4fe1\u606f\u53d8\u5f97\u53ef\u4ee5\u7ef4\u62a4\uff08\u4e5f\u662f\u590d\u5408\u548c\u5206\u62c6\u7684\u601d\u60f3\uff09\uff1a\u533a\u95f4\u65b9\u5dee\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u6210\u662f\u5206\u79bb\u5e38\u91cf\u548c\u53d8\u91cf\uff0c\u5c06\u53d8\u91cf\u5206\u7c7b\u7ef4\u62a4\u3002</li> <li>\u5bf9\u4e8e\u4e00\u4e9b\u6ca1\u6709\u660e\u663e\u7684\u7ed3\u5408\u5f8b\u7684\u4fe1\u606f\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u8003\u8651\u591a\u6dfb\u52a0\u4e00\u4e9b\u4fe1\u606f\uff0c\u6765\u4f7f\u5f97\u8fd9\u4e2a\u4fe1\u606f\u5177\u6709\u7ed3\u5408\u5f8b\uff1f\u6bd4\u5982\u8bf4\u7ebf\u6bb5\u6811\u5f53\u4e2d\u7684\u7c7b\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u95ee\u9898\u3002</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x40", "title": "0x40. \u6570\u5b66", "text": ""}, {"location": "misc/antontrygubO_o/#0x41", "title": "0x41. \u6027\u8d28\u76f8\u5173", "text": "<ul> <li>Lcm \u7684\u672c\u8d28\u5c31\u662f\uff0c\u5bf9\u4e8e\u6240\u8fd0\u7b97\u7684\u6570\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u8003\u8651\u6bcf\u4e2a\u56e0\u5b50\u51fa\u73b0\u7684\u6700\u9ad8\u6b21\u5e42\uff0c\u7136\u540e\u4e58\u8d77\u6765\uff1a230331C-T3-Exercise\u3002</li> <li>\u4e8c\u8fdb\u5236\u4e0b\u52a0\u4e00\u7684\u672c\u8d28\u5c31\u662f\uff0c\u627e\u5230\u4f4e\u4f4d\u7684\u7b2c\u4e00\u4e2a 0\uff0c\u53d8\u6210 1 \u4e4b\u540e\u628a\u4e4b\u540e\u7684 1 \u5168\u90e8\u53d8\u6210 0\uff1a01Trie \u7ef4\u62a4\u5168\u5c40\u52a0\u4e00.</li> <li>\u5982\u679c\u4e00\u4e2a\u95ee\u9898\u5728\u67d0\u4e9b\u9650\u5236\u4e3a\u8d28\u6570\u7684\u6761\u4ef6\u4e0b\u6bd4\u8f83\u597d\u505a\uff0c\u4f46\u662f\u5f53\u524d\u7684\u9650\u5236\u662f\u5408\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528 exCRT \u4e00\u7c7b\u7684\u4e1c\u897f\u5408\u5e76\u7b54\u6848\uff0c\u8f6c\u5316\u6210\u66f4\u7b80\u5355\u7684\u95ee\u9898\u3002</li> <li>\u5362\u5361\u65af\u5b9a\u7406\u4f3c\u4e4e\u53ef\u4ee5\u88ab\u770b\u4f5c P \u8fdb\u5236\u6570\u7684\u4e00\u4e9b\u5f15\u7528\uff0c\u8fd9\u4e2a\u662f\u67d0 MOer \u6559\u6211\u7684\uff0c\u67d0\u573a ABC \u7528\u5230\u4e86\uff0c\u4f46\u662f\u6211\u6ca1\u6539\uff0c\u6709\u65f6\u95f4\u6765\u8865\u4e00\u4e0b\u3002</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x42", "title": "0x42. \u8ba1\u6570", "text": "<ul> <li>\u5bf9\u4e8e\u4e0b\u6807\u91cc\u6709\u9650\u5236\u7684\uff0c\u901a\u5e38\u53ef\u4ee5\u62ff\u51fa\u6765\u8003\u8651\uff0c\u8fd9\u6837\u4e5f\u8bb8\u4f1a\u7b80\u5316\u8ba1\u7b97:ABC297F-Minimum Bounding Box 2</li> <li>\u5bf9\u4e8e\u4e00\u4e9b\u591a\u6b21\u6c42\u548c\u7684\u95ee\u9898\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8003\u8651\u4ea4\u6362\u6c42\u548c\u987a\u5e8f\uff1f\u5f53\u7136\u4ea4\u6362\u7684\u65f6\u5019\u8981\u6ce8\u610f\u4e0b\u6807\u7684\u9650\u5236\uff1aABC297F-Minimum Bounding Box 2</li> <li>\u90a3\u79cd\u9650\u5236\u6bd4\u8f83\u591a\u4f46\u662f\u53ef\u4ee5\u5206\u7c7b\u7684\uff0c\u6216\u8005\u662f\u5bb9\u6613\u7b97\u91cd\u7684\u95ee\u9898\uff0c\u90fd\u53ef\u4ee5\u8003\u8651\u5bb9\u65a5\u539f\u7406\uff0c\u5f53\u7136\u4f7f\u7528\u7684\u65f6\u5019\u8981\u60f3\u60f3\u80fd\u4e0d\u80fd\u5316\u7b80\u4ee5\u6ee1\u8db3\u590d\u6742\u5ea6\uff0c\u4e0d\u7136\u5c31\u8981\u6362\u4e00\u6362\u5176\u4ed6\u505a\u6cd5\uff0c\u6bd4\u5982 dp\uff1a230411C-T3-\u9006\u5e8f\u5bf9</li> <li>\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u8ba1\u6570\u95ee\u9898\uff0c\u63a8\u51fa\u4e86\u5b83\u7684\u5145\u5206\u4e0d\u5fc5\u8981\u6761\u4ef6\uff0c\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u90e8\u5206\u53ef\u4ee5\u5c1d\u8bd5\u62bd\u8c61\u6761\u4ef6\uff0c\u5229\u7528\u5bb9\u65a5\u7b97\u6389\uff1a230418C-T1-\u5e8f\u5217\u3002</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x50", "title": "0x50. \u56fe\u8bba", "text": ""}, {"location": "misc/antontrygubO_o/#0x51", "title": "0x51. \u6811\u4e0a\u95ee\u9898", "text": ""}, {"location": "misc/antontrygubO_o/#0x52", "title": "0x52. \u8fde\u901a\u6027\u95ee\u9898", "text": "<ul> <li>\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\u8fde\u901a\u6027\u95ee\u9898\uff0c\u4e0d\u6b62\u53ef\u4ee5\u8003\u8651 Tarjan\uff0c\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\u8fd8\u53ef\u4ee5\u8003\u8651\u5148\u8fde\u51fa\u53cd\u5411\u8fb9\uff0c\u52a0\u8fb9\u4e4b\u540e\u53d8\u6210\u65e0\u5411\u8fb9\uff0c\u53ef\u4ee5\u4f7f\u7528 dsu \u7ef4\u62a4\uff1aABC295G-Minimum Reachable City</li> <li>\u901a\u5e38\u5bf9\u4e8e\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u7ef4\u62a4\u4e86\u8054\u901a\u5757\u4fe1\u606f\uff0c\u8003\u8651\u5408\u5e76\u7684\u65f6\u5019\uff0c\u4f1a\u7528\u5230\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u4e0d\u7136\u590d\u6742\u5ea6\u5bb9\u6613\u5bc4\u6389\uff1a230418C-T2-\u56fe\u3002</li> </ul>"}, {"location": "misc/antontrygubO_o/#0x60", "title": "0x60. \u5b57\u7b26\u4e32", "text": ""}, {"location": "misc/antontrygubO_o/#0x61", "title": "0x61. \u5b57\u7b26\u4e32\u5339\u914d", "text": "<ul> <li>\u6709\u7684\u65f6\u5019\uff0c\u5728\u786e\u5b9a\u5b57\u7b26\u96c6\u5927\u5c0f\u548c\u64cd\u4f5c\u957f\u5ea6\u53ef\u884c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 bitset \u6765\u652f\u6301\u5339\u914d\u64cd\u4f5c\uff1a230411C-T4-\u5c0f\u738b\u732e\u6b4c</li> </ul>"}, {"location": "misc/flower/", "title": "Index", "text": "<p>\u5b58\u653e\u9c9c\u82b1\u548c\u968f\u8bb0\uff0c\u4e0d\u5982\u8bf4\u662f\u7528\u6765\u53d1\u7535\u7684\u3002</p> <p>\u6709\u4e9b\u968f\u8bb0\u7684\u8bc4\u8bba\u653e\u5728\u4e86 LuoguBlog \u4e0a\uff0c\u613f\u610f\u770b\u81ea\u5df1\u7ffb\u3002</p> <p>\u9664\u4e86 Index \u4ee5\u5916\u7684\uff0c\u6240\u6709 flower \u76ee\u5f55\u4e0b\u7684 post \u90fd\u4e0a\u4e86\u9501\uff0c\u5bc6\u7801\u662f\u7edf\u4e00\u7684\u3002</p> <p>\u9700\u8981\u9605\u89c8\u7684\u8bdd\u8bf7\u7559\u8a00\u6216\u8005\u662f qq \u8054\u7cfb\u6211\uff0c\u8054\u7cfb\u65b9\u5f0f\u5728\u9875\u811a\u3002</p> <p>\u6216\u8005\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u731c\u4e00\u731c\u5bc6\u7801\uff0c\u5bc6\u7801\u662f\u4e00\u79cd\u5e38\u89c1\u7c7b\u578b\u540d\u3002</p>"}, {"location": "misc/gdb-usage/", "title": "GDB \u4f7f\u7528\u6307\u5317", "text": "<p>\u8bb0\u5f97\u52a0\u4e0a <code>-g</code>\u3002</p> <p>\u5e38\u7528\u547d\u4ee4\uff08\u8f6c\u81ea OI wiki\uff09\uff1a</p> <ul> <li><code>list</code>\uff08<code>l</code>\uff09\uff1a\u5217\u51fa\u7a0b\u5e8f\u6e90\u4ee3\u7801\uff0c\u5982 <code>l main</code> \u6307\u5b9a\u5217\u51fa <code>main</code> \u51fd\u6570\u9644\u8fd1\u7684\u82e5\u5e72\u884c\u4ee3\u7801\u3002</li> <li><code>break</code>\uff08<code>b</code>\uff09\uff1a\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5982 <code>b main</code> \u8868\u793a\u5728 <code>main</code> \u51fd\u6570\u5904\u8bbe\u7f6e\u65ad\u70b9\u3002</li> <li><code>if &lt;CONDITION&gt;</code>\uff1a\u5982\u679c\u6ee1\u8db3  \u6761\u4ef6\uff0c\u5219\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5982 <code>b 137 if i == n &amp;&amp; j == m</code> <li><code>run</code>\uff08<code>r</code>\uff09\uff1a\u8fd0\u884c\u7a0b\u5e8f\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u8fd0\u884c\u6216\u9047\u5230\u65ad\u70b9\u3002</li> <li><code>continue</code>\uff08<code>c</code>\uff09\uff1a\u5728\u7a0b\u5e8f\u9047\u5230\u65ad\u70b9\u540e\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u8fd0\u884c\u6216\u5230\u8fbe\u4e0b\u4e00\u4e2a\u65ad\u70b9\u3002</li> <li><code>if &lt;CONDITION&gt;</code>\uff1a\u7528\u6cd5\u540c <code>b if</code></li> <li><code>next</code>\uff08<code>n</code>\uff09\uff1a\u6267\u884c\u5f53\u524d\u884c\u8bed\u53e5\uff0c\u5982\u679c\u5f53\u524d\u884c\u6709\u51fd\u6570\u8c03\u7528\uff0c\u5219\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\u6267\u884c\u3002</li> <li><code>if &lt;CONDITION&gt;</code>\uff1a\u7528\u6cd5\u540c\u4e0a\u3002</li> <li><code>step</code>\uff08<code>s</code>\uff09\uff1a\u6267\u884c\u5f53\u524d\u884c\u8bed\u53e5\uff0c\u5982\u679c\u5f53\u524d\u884c\u6709\u51fd\u6570\u8c03\u7528\uff0c\u5219\u8fdb\u5165\u8be5\u51fd\u6570\u5185\u90e8\u3002</li> <li><code>finish</code>\uff08<code>fin</code>\uff09\uff1a\u7ee7\u7eed\u6267\u884c\u81f3\u5f53\u524d\u51fd\u6570\u8fd4\u56de\u3002</li> <li><code>call</code>\uff1a\u8c03\u7528\u67d0\u4e2a\u51fd\u6570\uff0c\u4f8b\u5982\uff1a<code>call f(2)</code>\uff08\u4ee5\u53c2\u6570 2 \u8c03\u7528\u51fd\u6570 f\uff09\u3002</li> <li><code>quit</code>\uff08<code>q</code>\uff09\uff1a\u9000\u51fa gdb\u3002</li> <li><code>display</code>\uff08<code>disp</code>\uff09\uff1a\u6307\u5b9a\u7a0b\u5e8f\u6682\u505c\u65f6\u663e\u793a\u7684\u8868\u8fbe\u5f0f\u3002</li> <li><code>print</code>\uff08<code>p</code>\uff09\uff1a\u6253\u5370\u8868\u8fbe\u5f0f\u7684\u503c\u3002</li> <li><code>delete display &lt;NUM&gt;</code> \uff1a\u5220\u9664\u7b2c  \u4e2a\u8868\u8fbe\u5f0f <li><code>clear &lt;NUM/FUNC&gt;</code>\uff1a\u5220\u9664\u65ad\u70b9</li> <p><code>display</code> \u548c <code>print</code> \u6307\u4ee4\u90fd\u652f\u6301\u63a7\u5236\u8f93\u51fa\u683c\u5f0f\uff0c\u5176\u65b9\u6cd5\u662f\u5728\u547d\u4ee4\u540e\u7d27\u8ddf <code>/</code> \u4e0e\u683c\u5f0f\u5b57\u7b26\uff0c\u4f8b\u5982 <code>p/d test</code>\uff08\u6309\u7167\u5341\u8fdb\u5236\u6253\u5370\u53d8\u91cf test \u7684\u503c\uff09\uff0c</p> <p>\u652f\u6301\u7684\u683c\u5f0f\u5b57\u7b26\u6709\uff1a</p> \u683c\u5f0f\u5b57\u7b26 \u5bf9\u5e94\u683c\u5f0f d \u6309\u5341\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf x \u6309\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf a \u6309\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf t \u6309\u4e8c\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf c \u6309\u5b57\u7b26\u683c\u5f0f\u663e\u793a\u53d8\u91cf f \u6309\u6d6e\u70b9\u6570\u683c\u5f0f\u663e\u793a\u53d8\u91cf u \u6309\u5341\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u65e0\u7b26\u53f7\u6574\u578b o \u6309\u516b\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf <p>\u6ce8\u610f\u5982\u679c\u6709 breakpoint \u4e00\u5b9a\u4f18\u5148\u5728 breakpoint \u505c\u4e0b\uff0c\u800c\u4e0d\u662f\u53d6\u51b3\u4e8e\u4f7f\u7528\u4e86 n \u8fd8\u662f s\u3002</p> <p>\u9047\u5230 breakpoint \u4f1a\u5728\u90a3\u4e00\u884c\u505c\u4e0b\u6765\uff0c\u7136\u540e\u663e\u793a\u4ee3\u7801\u3002</p> <p>\u4e00\u4e9b\u5e38\u89c1\u5f02\u5e38\u8fd4\u56de\u503c\uff1a</p> <ul> <li><code>SIGFPE (8)</code>\uff1a\u9664\u96f6\u5f02\u5e38\u3002</li> <li><code>SIGSEGV (11)</code>\uff1a\u65e0\u6548\u5185\u5b58\uff0c\u65e0\u6743\u9650\u5199\u5165\u3002</li> <li><code>SIGILL (4)</code>\uff1a\u5806\u6808\u6ea2\u51fa\uff0c\u6570\u7ec4\u8d8a\u754c\u7834\u574f\u5806\u6808\u3002 </li> </ul>"}, {"location": "misc/menu/", "title": "\u521d\u8d5b\u77e5\u8bc6\u590d\u4e60", "text": ""}, {"location": "misc/menu/#_1", "title": "\u6570\u5b66\u90e8\u5206", "text": "<ul> <li>\u6392\u5217\u7ec4\u5408 </li> <li>\u9e3d\u5de2\u539f\u7406</li> <li>\u5bb9\u65a5\u539f\u7406</li> <li>\u65af\u7279\u6797\u6570</li> <li>\u5361\u7279\u5170\u6570</li> </ul>"}, {"location": "misc/menu/#_2", "title": "\u7b97\u6cd5\u90e8\u5206", "text": "<ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790</li> <li>\u6392\u5e8f</li> <li>\u6811\u7684\u904d\u5386</li> <li>\u8868\u8fbe\u5f0f\u8ba1\u7b97</li> <li>\u57fa\u7840\u56fe\u8bba\u95ee\u9898</li> </ul>"}, {"location": "misc/menu/#_3", "title": "\u8ba1\u7b97\u673a\u539f\u7406\u90e8\u5206", "text": "<ul> <li>\u4f4d\u8fd0\u7b97</li> <li>\u8fdb\u5236\u8f6c\u5316\uff08\u8fd9\u4e2a\u5495\u5495\u5495\u6389\u4e86\uff09</li> <li>\u8ba1\u7b97\u673a\u76f8\u5173\uff08\u8fd9\u4e2a\u5495\u5495\u5495\u6389\u4e86\uff09</li> </ul>"}, {"location": "misc/music/", "title": "\u8fd1\u671f\u63a8\u6b4c", "text": "<p>\u53ef\u80fd\u662f\u56e0\u4e3a\u5fc3\u60c5\u5f88\u70e6\u95f7\u5427\uff0c\u6240\u4ee5\u6253\u7b97\u505a\u70b9\u522b\u7684\u4ec0\u4e48\u7f13\u89e3\u4e00\u4e0b\u3002</p> <p>\u6ca1\u600e\u4e48\u5b66\u8fc7\u4e50\u7406\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u4e13\u4e1a\u672f\u8bed\u4e5f\u4e0d\u61c2\uff0c\u53ea\u4f1a\u778e\u804a\u804a\u3002</p>"}, {"location": "misc/music/#20230108", "title": "2023.01.08", "text": "<p>\u4eca\u5929\u5076\u7136\u70b9\u5230\u4e86 sskr \u7684\u4e00\u9996\u672f\u66f2\uff0c\u53ea\u542c\u524d\u594f\u5c31\u518d\u4e5f\u505c\u4e0d\u4e0b\u6765\u4e86\u3002</p> <p>\u611f\u89c9\u554a\uff0c\u524d\u594f\u8fd9\u6bb5\u65cb\u5f8b\u7b80\u76f4\u662f\u795e\u3002</p> <p>\u4e5f\u6709\u53ef\u80fd\u662f\u6700\u8fd1\u5fc3\u60c5\u4e0d\u597d\u559c\u6b22\u90a3\u79cd\u7a7a\u7075\u70b9\u7684\uff0c\u6b22\u5feb\u4e00\u70b9\u7684\u65cb\u5f8b\uff0c\u7136\u540e\u521a\u597d\u542c\u5230 sskr \u7684\u672f\u66f2\uff08</p> <p>\u4e0d\u592a\u597d\u63cf\u8ff0\u8fd9\u6bb5\u65cb\u5f8b\uff0c\u4f46\u662f\u5c31\u662f\u771f\u7684\uff0c\u5b83\u662f\u6709\u79cd\u7a7a\u7075\u7684\u611f\u89c9\uff0c\u6709\u70b9\u5fe7\u4f24\uff0c\u4f46\u662f\u5f88\u7279\u522b\uff0c\u5fc3\u60c5\u5341\u5206\u4f4e\u843d\u7684\u65f6\u5019\u542c\u7740\u7b97\u662f\u4e00\u79cd\u6170\u85c9\u5427\u3002</p> <p>\u728d\u9640\u591a\u554a\uff0c\u662f\u7f6a\u4eba\u554a\uff0c\u4f46\u662f\u7f6a\u4eba\u4e5f\u662f\u4f1a\u6709\u5584\u5fc3\u7684\u5b58\u5728\u5427\uff1f\u7edd\u5bf9\u7684\u4e8b\u7269\u662f\u4e0d\u5b58\u5728\u7684\u3002</p> <p>\u6216\u8005\u8bf4\uff0c\u82a5\u5ddd\u7684\u8fd9\u4e2a\u6545\u4e8b\u60f3\u544a\u8bc9\u6211\u7684\uff0c\u4e5f\u6709\u70b9\u90a3\u79cd\uff0c\u4e0d\u8981\u7ed9\u70b9\u9633\u5149\u5c31\u707f\u70c2\u7684\u90a3\u79cd\u610f\u601d\uff1f\u4e0d\u662f\u5f88\u597d\u8bf4\uff0c\u53cd\u6b63\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u867d\u7136\u662f\u4e00\u6bb5\u6de1\u6de1\u7684\u65cb\u5f8b\uff0c\u4f46\u662f\u80fd\u5199\u51fa\u90a3\u79cd\u82e6\u75db\u611f\uff0c\u5728\u5730\u72f1\u91cc\u707c\u70e7\u7684\u611f\u89c9\u5427\uff0cmiku \u7684\u58f0\u7ebf\u4f3c\u4e4e\u4e5f\u662f\u523b\u610f\u8c03\u6559\u6210\u8fd9\u6837\u7684\u3002</p> <p>\u611f\u89c9\u81ea\u5df1\u968f\u673a\u8bf4\u8bdd\u7684\u611f\u89c9\uff0c\u5c31\u662f\u5728\u62d9\u52a3\u7684\u6a21\u4eff zun \u6851\uff0c\u662f\u8fd9\u6837\u7684\u5427\u3002</p> <p>\u55ef\uff0c\u8bf4\u5230\u82e6\u95f7\u7684\u65f6\u5019\u542c\u5230\u7684\u65cb\u5f8b\uff0c\u4e5f\u6709\u8fd9\u4e2a\u5427\uff1a  </p> <p>\u6bd4\u8d77\u8718\u86db\u4e1d\uff0c\u8fd9\u9996\u66f2\u5b50\u7684\u65cb\u5f8b\u5e76\u4e0d\u662f\u90a3\u4e48\u6293\u8033\uff0c\u4f46\u662f nameless \u7684\u58f0\u7ebf\u5728\u5f53\u65f6\u4e5f\u7b97\u7ed9\u4e86\u6211\u4e00\u4e2a\u5e73\u590d\u5fc3\u60c5\u7684\u673a\u4f1a\u5427\uff0c\u6211\u8bb0\u5f97\u53ef\u80fd\u662f\u5728\u67d0\u4e2a\u4eba\u7684\u535a\u5ba2\u91cc\u770b\u5230\u7684\uff0c\u597d\u50cf\u53c8\u662f\u5728\u67d0\u4e2a\u7f51\u7ad9\u7ffb\u8d44\u6e90\u7684\u65f6\u5019\u542c\u5230\u7684\uff1f\uff1f\u5fd8\u4e86\uff0c\u7f62\u4e86\u3002</p> <p>\u8bf4\u8d77\u6765\uff0c\u6211\u542c\u97f3\u6e38\u66f2\u57fa\u672c\u90fd\u662f\u9700\u8981\u67d0\u4e00\u6bb5\u65cb\u5f8b\u7279\u522b\u6293\u8033\u624d\u884c\u7684\uff1f</p> <p>\u6bd4\u5982 Poppy \u7684 climax \u6bb5\uff0cspasmodic \u7684 ending\uff0cPUPA \u7684\u524d\u594f\uff0cSaiko Stronger \u7684 climax\uff0cCrossOver 00:10 \u5de6\u53f3\u7684\u90a3\u6bb5\uff0cEther Strike \u7684\u96f6\u5149\u5439\u5587\u53ed\u6bb5\uff08</p> <p>\u4f46\u662f\u6709\u4e9b\u66f2\u5b50\u53c8\u6bd4\u8f83\u7279\u522b\uff0c\u6bd4\u5982 Sakura Fubuki\uff0c\u8fd9\u4e2a\u771f\u7684\u662f\u56e0\u4e3a\u6df7\u97f3\u610f\u5916\u7684\u5e72\u51c0\uff0c\u6ca1\u6709\u600e\u4e48\u7528\u548c\u98ce\u4e50\u5668\u5374\u4e00\u80a1\u6a31\u82b1\u6563\u843d\u7684\u5473\u9053\u3002</p> <p>\u8fd8\u6709 Tempestissmo \u548c IZANA\uff0cApollo\uff0c\u8fd9\u4e9b\u662f\u6574\u4f53\u5370\u8c61\u7ed9\u6211\u5f88\u597d\u7684\uff0c\u4f46\u662f\u5355\u72ec\u62c9\u51fa\u6765\u53ef\u80fd\u4e0d\u662f\u90a3\u4e48\u51fa\u8272\u4e86\uff1f\u53ef\u80fd\u5c31 IZAZA Watch out \u7684\u4eba\u58f0\u540e\u9762\u4e00\u5c0f\u6bb5\u624d\u662f\uff1f</p> <p>Nhelv\uff0cGrievous Lady\uff0c#1f1e33\uff0c\u5219\u662f\u7a81\u51fa\u7684\u9f13\u70b9\u548c\u8282\u594f\u5427\u3002</p> <p>Aventyr \u8981\u7279\u522b\u4e00\u70b9\uff0c\u4e0d\u592a\u597d\u8bf4\u6e05\u695a\u3002</p> <p>\u97f3\u6e38\u66f2\u6b4c\u5355\u5728\u8fd9\u91cc\u4e86\uff08\u53ea\u662f\u4e00\u90e8\u5206\uff0c\u8fd9\u91cc\u662f\u6211\u6700\u559c\u6b22\u7684 10 \u9996\uff08\u6df7\u8fdb\u6765\u4e00\u4e2a\u4e1c\u65b9\u540c\u4eba\uff08\uff09\uff09\uff1a</p> <p>\u53d1\u73b0 mkdocs \u652f\u6301 iframe \u554a\uff01\u597d\uff01</p>"}, {"location": "misc/music/#20230128", "title": "2023.01.28", "text": "<p>Touhou Collaboration I</p> <p>\u6211\u60f3\u8bb0\u5f55\u4e00\u4e9b\u4ee4\u4eba\u611f\u52a8\u7684\u66f2\u5b50\u3002</p> <p>\u6807\u51c6\u662f\u6211\u957f\u65f6\u95f4\u4e0d\u4f1a\u542c\u70e6</p> <p>\u800c\u4e14\u7b2c\u4e00\u6b21\u542c\u7684\u65f6\u5019\u56e0\u4e3a\u5404\u79cd\u56e0\u7d20\u88ab\u60ca\u8273\u5230\u7684\u90a3\u79cd\u3002</p> <p>\u6211\u4f1a\u5c3d\u91cf\u63d2\u5165\u4e00\u4e9b\u89c6\u9891\u4ec0\u4e48\u7684\uff0c\u65b9\u4fbf\u7406\u89e3\uff08</p> <p>\u4e3a\u4e86\u4f53\u9a8c\uff0c\u6211\u653e\u7684\u90fd\u662f Easy \u96be\u5ea6\u7684\uff08\u56e0\u4e3a\u6211\u4ee5\u524d\u5c31\u8fd9\u4e48\u83dc</p> <p>\u56e0\u4e3a\u6211\u8fd8\u6ca1\u641e\u61c2\u600e\u4e48\u76f4\u63a5\u4ece\u67d0\u4e2a\u5730\u65b9\u5f00\u59cb\u64ad\u653e\uff0c\u6240\u6709\u6709\u4e00\u90e8\u5206\u662f\u6807\u6ce8\u4e86\u5f00\u59cb\u65f6\u95f4\u7684\u3002</p> <p>\u6807\u9898\u66f2\u548c Ending \u56e0\u4e3a\u4e00\u4e9b\u539f\u56e0\u4e00\u822c\u6253\u5f55\u50cf\u7684\u65f6\u5019\u4e0d\u4f1a\u5f55\uff0c\u6240\u4ee5\u5c31\u6ca1\u6709\u4e86\u3002</p> <ol> <li>\u5e7d\u96c5\u306b\u54b2\u304b\u305b\u3001\u58a8\u67d3\u306e\u685c\u3000\uff5e Border of Life</li> </ol> <p>\u5996\u5996\u68a6\u516d\u9762</p> <p>uuz \u7684\u4e3b\u9898\u66f2\uff0c\u4e3a\u4ec0\u4e48\u8bf4\u5b83\u4ee4\u4eba\u611f\u52a8\u5462\uff1f</p> <p>\u6211\u89c9\u5f97\u5f88\u5927\u4e00\u90e8\u5206\u8981\u5f52\u529f\u4e8e ZUN \u7684\u5c0f\u53f7\uff08</p> <p>\u542c\u7684\u65f6\u5019\u6709\u4e00\u79cd\u60b2\u6006\u7684\u611f\u89c9\uff0c\u4f60\u60f3\u554a\uff0c\u4ea1\u7075\u5c11\u5973\u60f3\u8981\u590d\u6d3b\u6811\u4e0b\u7684\u5c11\u5973\uff0c\u7aed\u5c3d\u5168\u529b\uff0c\u6a31\u82b1\u6811\u4e5f\u53ea\u80fd\u516b\u5206\u54b2\u3002</p> <p>\u5176\u5b9e zun \u6700\u5927\u7684\u7279\u70b9\u5c31\u662f\u6e38\u620f\u548c\u5f39\u5e55\u7684\u6709\u673a\u7ed3\u5408\u3002</p> <p>\u8fd8\u6709\uff0c\u5c0f\u53f7\u4ec0\u4e48\u7a81\u7136\u505c\u6b47\uff0c\u80cc\u666f\u4e5f\u6162\u6162\u6e05\u6670\uff0c\u6211\u4ee5\u4e3a\u5c31\u8981\u7ed3\u675f\u4e86\u2026\u2026\u7a81\u7136\uff0c\u5c0f\u53f7\u518d\u6b21\u51fa\u73b0\uff0c\u8fd9\u65f6\u5019\uff0cuuz\u7a81\u7136\u5f00\u6247\uff0c</p> <p>\u685c\u7b26\u300c\u5b8c\u5168\u306a\u308b\u58a8\u67d3\u306e\u685c -\u4ea1\u6211-\u300d</p> <p>\u771f\u7684\uff0c\u592a\u9707\u64bc\u4e86\u3002</p> <p>\u8774\u8776\u5f39\u5f88\u80fd\u886c\u6258\u6c1b\u56f4\uff0c\u6709\u79cd uuz \u968f\u7740\u6a31\u82b1\u800c\u4f18\u96c5\u8d77\u821e\uff0c\u8fd8\u80fd\u81ea\u5982\u7684\u548c\u4f60\u6218\u6597\u7684\u611f\u89c9\u3002</p> <p>\u8bb2\u771f\uff0c\u56e0\u4e3a\u6211\u4e0d\u4f1a\u4e50\u7406\u4ec0\u4e48\u7684\uff0c\u63cf\u8ff0\u8d77\u6765\u8fd8\u662f\u6709\u4e00\u5b9a\u96be\u5ea6\u7684\uff08</p> <p>\u5f00\u59cb\u65f6\u95f4\uff1a25:07</p> <ol> <li>\u30b7\u30f3\u30c7\u30ec\u30e9\u30b1\u30fc\u30b8\u3000\uff5e Kagome-Kagome</li> </ol> <p>\u6c38\u591c\u6284\u4e94\u9762\u9053\u4e2d</p> <p>\u8fd9\u9996\u662f zun \u6839\u636e\u7b3c\u4e2d\u9e1f\u6539\u53d8\u7684\u3002</p> <p>\u6211\u5f88\u559c\u6b22\u5f00\u5934\u7684\u94a2\u7434\u6bb5\uff0c\u52a0\u4e0a\u7a81\u7136\u51fa\u73b0\u7684\u5154\u5b50\u5996\u7cbe\uff0c\u5f39\u5e55\u5982\u7f51\u4e00\u822c\u4ece\u4e24\u4fa7\u6d12\u4e0b\uff0c\u597d\u50cf\u662f\u5728\u6355\u83b7\u7b3c\u4e2d\u9e1f\u4e00\u6837\u3002</p> <p>\u94a2\u7434\u7a81\u7136\u52a0\u901f\uff0c\u5c0f\u53f7\u4e00\u5207\uff01</p> <p>\u7136\u540e\u5c0f\u53f7\u505c\u6b47\uff0c\u53c8\u56de\u5230\u4e86\u5f00\u900f\u7684\u65cb\u5f8b\uff0c\u4e0d\u8fc7\u8fd9\u6b21\u7528\u7684\u5e94\u8be5\u662f\u4e09\u5473\u7ebf\uff0c\u54ea\u6015\u662f\u5c0f\u53f7\u518d\u51fa\uff0c\u7684\u65f6\u5019\u4f9d\u65e7\u5f88\u6293\u8033\u3002</p> <p>\u6b64\u65f6\u9053\u4e2d boss\uff0c\u5e1d \u51fa\u73b0\uff0c\u65cb\u5f8b\u76f8\u6bd4\u7b2c\u4e00\u6bb5\u6709\u6240\u52a0\u901f\uff0c\u5e1d\u7684\u7acb\u7ed8\u6b64\u65f6\u662f\u4e0a\u4e0b\u6446\u52a8\u7684\uff0c\u5e94\u8be5\u662f\u60f3\u8868\u73b0\u51fa\u5154\u5b50\u7684\u7075\u52a8\u611f\uff0c\u5f88\u6709\u610f\u601d\uff0c\u9f13\u70b9\u66f4\u591a\u4e86\u3002</p> <p>\u66f2\u5b50\u52a0\u901f\u4e5f\u662f\u4e3a\u4e86\u8fd9\u4e2a\u5427\uff1f</p> <p>\u7136\u540e\uff0c\u80cc\u666f\u7684\u7684\u957f\u5eca\uff0c\u95e8\u4e00\u6247\u6247\u5173\u95ed\uff0c\u968f\u7740\u5c0f\u53f7\u7684\u5347\u964d\u8c03\u800c\u65cb\u8f6c\u7740\uff0c\u4e5f\u5f88\u6709\u611f\u89c9\uff01\uff01\uff01\uff01</p> <p>\u4e0d\u8fc7\u8fd9\u4e4b\u540e\uff0c2\uff1a30 \u4e4b\u540e\u5c31\u4e0d\u662f\u6e38\u620f\u4e2d\u80fd\u542c\u5230\u7684\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u8981\u9762\u5bf9\u94c3\u4ed9\u4e86\uff08</p> <p>\u4f46\u662f\u8fd9\u79cd\uff0c\u9012\u8fdb\u5f0f\u589e\u6dfb\u4e50\u5668\uff0c\u771f\u7684\u5f88\u5389\u5bb3\u3002\u8fd8\u6709\u4e0d\u65ad\u5730\u5347\u8c03\uff0c\u52a0\u901f\u3002</p> <p>\u771f\u7684\u80fd\u4f53\u73b0\u51fa\u90a3\u79cd\uff0c\u7d27\u8feb\u7684\uff0c\u723d\u5feb\u7684 boss \u6218\u7684\u611f\u89c9\u3002</p> <p>\u5c0f\u53f7\u8fd8\u662f\u4e00\u5982\u65e2\u5f80\u7684\u6709\u50ac\u6cea\u7684\u611f\u89c9\u3002</p> <p>\u5f00\u59cb\u65f6\u95f4\uff1a17:57</p> <ol> <li>\u7815\u6708</li> </ol> <p>\u8403\u68a6\u60f3\u5bf9\u8bdd\u66f2</p> <p>\u8fd9\u4e2a\uff0c\u8fd8\u6709\u5fc5\u8981\u53d9\u8ff0\u5417\uff1f\uff0c\u5e94\u8be5\u662f\u6240\u6709\u4e1c\u65b9\u66f2\u91cc\u6700\u80fd\u8ba9\u6211\u611f\u52a8\u7684\u4e86\u3002</p> <p>\u6211\u8bb0\u5f97\u8fd9\u662f U2 \u5199\u7684\u66f2\u5b50\uff0c\u4f46\u662f\u4e5f\u5f88\u6709 zun \u5473\u3002</p> <p>\u6709\u8282\u65e5\uff0c\u5bb4\u4f1a\u7684\u611f\u89c9\uff0c\u4e5f\u6709\u60b2\u6006\u7684\u611f\u89c9\u3002</p> <p>\u5f15\u7528wyy\u7684\u8bc4\u8bba\uff1a</p> <p>\u6bcf\u6b21\u542c\u7740\u8fd9\u9996\u66f2\u5b50\u5c31\u89c9\u5f97\u5fc3\u60c5\u8212\u7545\uff0c\u5c0f\u5c0f\u7684\u53c8\u5de8\u5927\u7684\u9b3c\uff0c\u4f20\u8bf4\u91cc\u56db\u5904\u52fe\u5f15\u7f8e\u5c11\u5973\u5374\u53c8\u5728\u6700\u540e\u5173\u5934\u5927\u558a\u7740\u81ea\u5df1\u4ece\u4e0d\u8bf4\u8c0e\u7684\u5bb6\u4f19\uff0c\u5982\u4eca\u4e5f\u95f2\u9760\u5728\u5e7b\u60f3\u4e61\u7684\u67d0\u5904\u62b1\u7740\u81ea\u5df1\u7684\u9152\u58f6\u75db\u996e\u5427\uff0c\u5e94\u8be5\u5df2\u7ecf\u88ab\u88ab\u4eba\u7c7b\u63a5\u53d7\u4e86\u5427\uff0c\u5230\u73b0\u5728\u4e5f\u7ec8\u4e8e\u4ea4\u5230\u670b\u53cb\u4e86\u5427\uff1f\u867d\u8bf4\u6b21\u5143\u4e0d\u540c\uff0c\u679c\u7136\u8fd8\u662f\u60f3\u8981\u5c31\u7740\u6708\u5149\u4e0e\u6a31\u82b1\u548c\u5979\u5e72\u4e0a\u4e00\u676f\u554a\u30fd(\uff9f\u2200\uff9f)\uff89</p> <p>\u8fd9\u4e00\u70b9\u4e0d\u5047\uff0c\u8fd9\u9996\u66f2\u5b50\u662f\u6240\u6709\u4e1c\u65b9\u66f2\u91cc\u9762\u6700\u80fd\uff0c\u8ba9\u6211\u5feb\u901f\u8c03\u6574\u72b6\u6001\u7684\uff0c\u7ed9\u6211\u4e00\u79cd\u6b22\u4e50\u7684\uff0c\u65e0\u5fe7\u65e0\u8651\u7684\u611f\u89c9\u3002</p> <p>\u4f46\u662f\u4e5f\u4e0d\u662f\u5355\u7eaf\u5982\u6b64\uff0c\u5c0f\u53f7\u5e26\u6765\u7684\u90a3\u70b9\u60b2\u6006\u8fd8\u662f\u5f88\u5389\u5bb3\u3002</p> <ol> <li>\u6c38\u9060\u306e\u4e09\u65e5\u5929\u4e0b</li> </ol> <p>\u5f39\u5e55\u5929\u90aa\u9b3c\u7ec8\u76d8\u66f2</p> <p>\u60f3\u8981\u4e0b\u514b\u4e0a\u7684\u5929\u90aa\u9b3c\u3002</p> <p>\u5e73\u548c\u4e2d\u5374\u900f\u9732\u7740\u6df1\u6df1\u7edd\u671b\uff0c\u4e0d\u65ad\u7684\u5c1d\u8bd5\u7740\uff0c\u4e0d\u77e5\u9053\u4f55\u65f6\u624d\u662f\u5c3d\u5934\u3002</p> <p>\u800c\u4e14 zun \u6545\u610f\u505a\u7684\u662f\uff0c\u524d\u540e\u80fd\u4e00\u76f4\u8854\u63a5\u8d77\u6765\u7684\u3002</p> <p>\u56e0\u4e3a\u8fd9\u662f\u6e38\u620f\u6700\u7ec8\u76d8\u7684\u66f2\u5b50\u3002</p> <p>\u800c\u4e14 retry \u4e0d\u4f1a\u5237\u65b0 bgm\uff0c\u8fd9\u662f\u5c11\u89c1\u7684\uff0c\u5c31\u597d\u6bd4\uff0c\u4f60\u771f\u7684\u662f\u88ab\u56f0\u5728\u5669\u68a6\u5f53\u4e2d\uff0c\u4e00\u6b21\u6b21\u4e00\u6b21\u6b21\u7684 miss\uff0c\u53ea\u60f3\u8981\u5b8c\u6210\u4e0b\u514b\u4e0a\u7684\u7406\u60f3\uff0c\u60f3\u8981\u5b88\u4f4f\u81ea\u5df1\u7684\uff0c\u77ed\u547d\u7684\u4e09\u65e5\u5929\u4e0b\u3002</p> <p>ZUN \u4e5f\u8bf4\uff1a\u6700\u540e\u662f\u6bd4\u8f83\u6e29\u987a\u7684\u611f\u89c9\u7684\u66f2\u5b50 \u3000\u53ea\u4e0d\u8fc7\u5f39\u5e55\u662f\u5730\u72f1\u3002\u4e0d\u5982\u8bf4\u66f2\u5b50\u70d8\u6258\u7740\u7edd\u671b\u611f\u3002 \u3000\u771f\u7684\u662f\u4e0d\u53ef\u80fd\u7684\u5417\uff1f</p> <p>\u6574\u9996\u66f2\u5b50\u6700\u4f20\u795e\u7684\u5e94\u8be5\u662f\u7b1b\u5b50\u3002</p> <p>\u7b1b\u5b50\u4e00\u51fa\u6765\u771f\u7684\u6709\u90a3\u79cd\uff0c\u7edd\u671b\u5230\u6781\u70b9\u7684\u611f\u53d7\u4e86\u3002</p> <p>\u4eff\u4f5b\u80fd\u770b\u5230\uff0c\u6b63\u90aa\u7528\u7740\u9053\u5177\uff0c\u4e0d\u65ad\u5411\u5e7b\u60f3\u4e61\u7684\u9876\u70b9\u6311\u6218\u7740\uff0c\u51b2\u51fb\u7740\uff0c\u6211\u5f88\u559c\u6b22\u8fd9\u79cd\u7edd\u671b\u4e2d\u7684\u575a\u6bc5\u611f\u3002</p> <p>\u5f88\u559c\u6b22\u8fd9\u4e2a\uff0c\u5efa\u8bae\u591a\u542c\u542c\uff0c\u6211\u66fe\u7ecf\u4e3a\u4e86\u4e00\u5f20\u7b26\u5361miss\u4e86\u63a5\u8fd11000\u6b21\uff0c\u51e0\u5929\u91cc\u8111\u5b50\u53ea\u6709\u8fd9\u9996\u66f2\u5b50\u3002</p> <p>\u867d\u7136\u75db\u82e6\uff0c\u4f46\u662f\u8fd8\u662f\uff0c\u5f88\u6709\u610f\u8574\u3002</p> <p>\u66f2\u5b50\u7684\u610f\u601d\uff0c\u9002\u7528\u7684\u5730\u65b9\uff0c\u4e5f\u6709\u70b9\u7c7b\u4f3c\u3010\u4f60\u6c38\u8fdc\u5230\u8fbe\u4e0d\u4e86\u6b7b\u4ea1\u7684\u771f\u5b9e\u3011\u8fd9\u6837\u7684\u611f\u89c9\u3002</p> <ol> <li>\u9e93\u306e\u795e\u793e</li> </ol> <p>\u98ce\u795e\u5f55 Ending</p> <p>\u57fa\u672c\u6ca1\u6709\u600e\u4e48\u542c\u8fc7\uff08\u9ebb\u5c06\u5c71\u592a\u96be\u4e86\uff09\uff0c\u53ea\u662f\u4e34\u65f6\u9009\u7684\uff0c\u4f46\u662f\u4e5f\u5f88\u6709\u610f\u601d\u3002</p> <p>\u8fd9\u662f Ending \u66f2\uff0c\u5176\u5b9e\u5bf9\u4e8e\u521a\u521a\u6298\u78e8\u4e86\u5f88\u4e45\uff0c\u597d\u4e0d\u5bb9\u6613\u901a\u5173\u7684\u5927\u5bb6\u3002</p> <p>Ending \u548c Staff \u66f2\u662f\u771f\u7684\u5f88\u611f\u4eba\u7684\u3002</p> <p>\u8131\u4e0b\u8033\u673a\uff0c\u644a\u5728\u6905\u5b50\u4e0a\uff0c\u957f\u8212\u4e00\u53e3\u6c14\u3002</p> <p>\u6bcf\u6b21\u901a\u5173\u90fd\u4f1a\u8fd9\u6837\uff0c\u591a\u4e45\u4e86\u8fd8\u662f\u6ca1\u6709\u6539\u53d8\uff0c\u597d\u6bd4\uff0c\u7ecf\u5386\u8fc7\u65e0\u6570\u632b\u6298\uff0c\u7ec8\u4e8e\u770b\u5230\u4e86\u66d9\u5149\u7684\u611f\u89c9\u3002</p> <p>\u5f88\u559c\u6b22\u8fd9\u79cd\u54f2\u5b66\uff0c\u4e0d\u5c11\u4eba\u5176\u5b9e\u6700\u559c\u6b22\u7684\u66f2\u5b50\u5e94\u8be5\u662f ED\uff0c\u6211\u53ef\u4ee5\u8bf4\uff0c\u5927\u90e8\u5206 ED \u90fd\u662f\u51b7\u95e8\u795e\u66f2\u3002</p> <p>hmx\uff0cyym\uff0cyyc \u4e09\u4f5c ED\uff0c\u5982\u679c\u5f53\u4f5c\u7ec4\u66f2\u653e\u5728\u4e00\u8d77\uff0c\u771f\u7684\u5f88\u5389\u5bb3\u3002</p> <p>\u5927\u68a6\u521d\u9192\u7684\u611f\u89c9\uff0c\u4eff\u4f5b\u521a\u4ece\u5e7b\u60f3\u5f53\u4e2d\u8131\u8eab\u3002</p> <ol> <li>\u65e7\u5730\u7344\u8857\u9053\u3092\u884c\u304f</li> </ol> <p>\u5730\u7075\u6bbf\u4e09\u9762\u9053\u4e2d</p> <p>\u6b22\u5feb\u7684\u611f\u89c9\u3002</p> <p>\u6f2b\u6b65\u5728\u5e9f\u5f03\u7684\u65e7\u5730\u72f1\u8857\u9053\u4e0a\u3002</p> <p>\u4f46\u662f\u5b83\u4ecd\u65e7\u7e41\u534e\uff0c\u9b3c\u4eec\u5728\u8fd9\u91cc\u996e\u9152\u4f5c\u4e50\uff0c\u597d\u4e0d\u5feb\u6d3b\u3002</p> <p>\u6574\u9996\u66f2\u5b50\u5c31\u662f\uff0c\u7ed9\u6211\u4e00\u79cd\uff0c\u4e2d\u56fd\u7684\u5143\u5bb5\u706f\u4f1a\uff0c\u65e5\u672c\u7684\u70df\u706b\u796d\u5178\u4e00\u6837\u7684\u611f\u89c9\u3002</p> <p>\u70ed\u70ed\u95f9\u95f9\u7684\uff0c\u5927\u5bb6\u90fd\u7a7f\u7740\u65b0\u8863\u670d\uff0c\u559c\u6c14\u6d0b\u6d0b\u7684\u8d70\u5728\u8857\u4e0a\uff0c\u624b\u4e0a\u4e5f\u8bb8\u8fd8\u62ff\u7740\u7ae0\u9c7c\u70e7\u4ec0\u4e48\u7684\u3002</p> <p>\u60f3\u8d77\u4e00\u4e2a\u753b\u9762\uff0c\u5f88\u9002\u5408\u8fd9\u9996\u6b4c\uff0c\u4f46\u662f\u627e\u4e0d\u5230\u56fe\u4e86\u3002</p> <p>\u7a7f\u7740\u548c\u670d\u7684\u5c11\u5973\u7684\u6728\u5c50\u677e\u4e86\uff0c\u53f3\u624b\u62ff\u7740\u7ae0\u9c7c\u70e7\uff0c\u5f88\u4f18\u96c5\u7684\u5f2f\u4e0b\u8eab\u53bb\uff0c\u5de6\u624b\u521a\u78b0\u5230\u978b\u8ddf\u7684\u65f6\u5019\uff0c\u5374\u56de\u5934\u770b\u7740\u4f60\uff0c\u8138\u4e0a\u8fd8\u6709\u72d0\u9762\u5177\uff0c\u624e\u7740\u4e38\u5b50\u5934\u3002</p> <p>\u84e6\u7136\u56de\u9996\uff0c\u90a3\u4eba\u5374\u5728\uff0c\u706f\u706b\u9611\u73ca\u5904\u3002</p> <p>\u5f00\u59cb\u65f6\u95f4\uff1a07:30</p> <ol> <li>\u9752\u7a7a\u306e\u5f71</li> </ol> <p>\u661f\u83b2\u8239\u6807\u9898\u66f2</p> <p>\u56de\u8f6c\u4e00\u4e0b\u7684\u90a3\u4e2a\u6ed1\u97f3\u5f88\u6709\u610f\u601d\u54e6\u3002</p> <p>\u6253\u5f00\u661f\u83b2\u8239\u7684\u65f6\u5019\uff0c\u97f3\u4e50\u60f3\u8d77\uff0c\u5c0f\u5b9d\u8239\u5e26\u7740\u7075\u68a6\u4ece\u5c4f\u5e55\u53f3\u8fb9\u98de\u5165\u3002</p> <p>\u81ea\u4fe1\u7684\u7b11\u7740\uff0c\u597d\u50cf\u662f\u5bf9\u524d\u65b9\u4e91\u96fe\u4e2d\u7684\u5b9d\u8239\u52bf\u5728\u5fc5\u5f97\u3002</p> <p>\u4e0d\u6127\u662f\u7075\u68a6\u5462\u3002</p> <p>\u4e00\u5982\u65e2\u5f80\u7684\u4e3b\u65cb\u5f8b\uff0c\u8fd8\u662f\u5f88\u559c\u6b22\uff0c\u661f\u83b2\u8239\u7684\u97f3\u6548\u6bd4\u8f83\u7279\u522b\uff0c\u662f\u90a3\u79cd\u5f88\u6e05\u65b0\u7684\u611f\u89c9\uff0c\u8fd9\u4e2a\u975e\u5e38 suki\u3002</p> <ol> <li>\u5922\u6bbf\u5927\u7940\u5edf</li> </ol> <p>\u795e\u7075\u5e99\u4e94\u9762\u9053\u4e2d</p> <p>zun \u5f88\u5389\u5bb3\uff01</p> <p>\u8fd9\u9996\u66f2\u5b50\u4e00\u542c\u5c31\u662f\uff0c\u90a3\u79cd\u7a7a\u7075\u7684\u5730\u4e0b\u5de8\u5927\u7a7a\u95f4\u7684\u611f\u89c9\u5427\uff01</p> <p>\u5e94\u8be5\u662f\u56e0\u4e3a\u97f3\u8f68\u91cc\u7c7b\u4f3c\u56de\u97f3\u7684\u548c\u58f0\u3002</p> <p>30 \u79d2\u5de6\u53f3\u7684\u65cb\u5f8b\u7ed9\u4eba\u4e00\u79cd\u5f88\u6e05\u51c0\u7684\u611f\u89c9\uff0c\u4eff\u4f5b\u8fd9\u91cc\u662f\u4ec0\u4e48\uff0c\u80dc\u5730\u3002</p> <p>\u9f13\u70b9\u4ecd\u65e7\u5f88\u6709\u7164\u6c14\u7076\u7684\u7279\u8272\u3002</p> <p>01:05 \u5de6\u53f3\u5c60\u81ea\u53e4\u51fa\u573a\uff0c\u597d\u50cf\u662f\u5e7d\u7075\u4e00\u822c\uff0c\u662f\u7a81\u7136\u65cb\u8f6c\u7740\u51fa\u73b0\u7684\u3002\uff08\u4e0d\u8fc7\u7eb8\u7247\u4eba\u8fd9\u70b9\u6709\u70b9\u51fa\u620f\u4e86\u3002</p> <p>01:31 \u7684\u65f6\u5019\uff0c\u968f\u7740\u82cf\u6211\u7684\u90a3\u4e2a\u7c7b\u4f3c\u7535\u98ce\u66b4\u7684\u6da1\u65cb\u5f39\u5e55\uff0c\u5f88\u6709\u611f\u89c9\uff01</p> <p>\u80cc\u666f\u91cc\u65cb\u8f6c\u7684\u68a6\u6bbf\uff0c\u6f2b\u5929\u6e38\u79bb\u7684\u795e\u7075\uff0c\u4e0d\u65ad\u53d8\u5316\u7740\u7684\u3002</p> <p>\u5f88\u4ee4\u4eba\u5174\u594b\uff0cZun \u8fd9\u9996\u5199\u7684\u771f\u7684\u5f88\u795e\u3002</p> <p>\u5f00\u59cb\u65f6\u95f4\uff1a20:54</p> <ol> <li>\u4e0d\u601d\u8b70\u306a\u304a\u7953\u3044\u68d2</li> </ol> <p>\u8f89\u9488\u57ce\u6807\u9898\u66f2</p> <p>\u4e0d\u53ef\u601d\u8bae\u7684\u8c61\u62d4\u868c\uff08\u5212\u6389\u3002</p> <p>\u8fd9\u662f\u6700\u6ca1\u6709 ZUN \u5473\u9053\u7684\u6807\u9898\u66f2\u3002</p> <p>\u4f46\u662f\u6211\u7b2c\u4e00\u6b21\u542c\u5230\u7684\u65f6\u5019\u5c31\uff0c\u7279\u522b\u559c\u6b22\u3002</p> <p>\u5927\u5bb6\u90fd\u8bf4\u8fd9\u662f ZUN \u4f5c\u66f2\u6c34\u5e73\u7684\u5dc5\u5cf0\u4e4b\u4e00\uff0c\u5f88\u9707\u64bc\uff0c\u4e4b\u524d\u4ece\u672a\u6709\u8fc7\u7684\u611f\u89c9\u3002</p> <p>\u771f\u7684\uff0c\u4f60\u53ef\u80fd\u8981\u8bd5\u7740\u542c\u4e00\u4e0b zun \u4ee5\u524d\u6807\u9898\u66f2\u5077\u61d2\u7684\u98ce\u683c\u624d\u77e5\u9053\u3002</p> <p>\u4e3a\u4ec0\u4e48\u5927\u5bb6\u90fd\u559c\u6b22\u8fd9\u9996\u3002</p> <p>\u8fd9\u57fa\u672c\u662f\u516c\u8ba4\u7684\u6807\u9898\u66f2\u7b2c\u4e00\u4e86\u3002</p> <p>\u6211\u6253\u5f00\u6e38\u620f\u4ec0\u4e48\u90fd\u6ca1\u6709\u5e72\uff0c\u5c31\u542c\u4e86\u597d\u51e0\u8fb9\u66f2\u5b50\u3002</p> <p>\u987a\u4fbf\u770b\u770b\u96be\u5f97\u753b\u7684\u975e\u5e38\u6b63\u5e38\u751a\u81f3\u6709\u70b9\u6da9\u7684\u7075\u68a6\uff08</p> <p>01:20 \u5de6\u53f3\u4e3b\u65cb\u5f8b\u51fa\u6765\u7684\u65f6\u5019\u5feb\u54ed\u4e86\u3002</p> <p>\u771f\u7684\uff0cbeyond expression, really breathtaking.</p> <ol> <li>\u795e\u793e\u304b\u3089\u898b\u3048\u308b\u6708</li> </ol> <p>\u7ec0\u73e0\u4f20 Ending</p> <p>\u7ec0\u73e0\u4f20\uff0c\u7cfb\u5217\u6700\u96be\u4f5c\u7684 Ending\u3002</p> <p>\u7ed3\u5c40\u5199\u4e86\u4e0d\u5c11\u6709\u6df1\u610f\u7684\u8bdd\uff0c\u81f3\u5c11\u6211\u8fd9\u4e48\u89c9\u5f97\u3002</p> <p>\u8fd9\u79cd\uff0c\u6709\u70b9\u7a7a\u7075\u7684\u611f\u89c9\uff0c\u5b87\u5b99\u7684\u98ce\u683c\uff0c\u5f88\u7b26\u5408\u7ec0\u73e0\u4f20\u7684\u6c14\u8d28\u3002</p> <p>\u7ec0\u73e0\u4f20\u5e94\u8be5\u662f\u6700\u3010lunatic\u3011\u7684\u4e00\u4f5c\u4e86\uff0c\u4e0d\u7ba1\u662f\u4ece\u96be\u5ea6\u8fd8\u662f\u4ece\u8bbe\u5b9a\u4e0a\u3002</p> <p>\u751a\u81f3\u8fd8\u6709\u4e24\u4f4d\u4e1c\u65b9\u6218\u529b\u5929\u82b1\u677f\u548c\u4f60\u5728 EX \u6218\u6597\uff08\u867d\u7136\u5df2\u7ecf\u653e\u4e86\u5f88\u591a\u6c34\u4e86\u3002</p> <p>\u4e00\u9762\u7684\u5f39\u5e55\u5c31\u5df2\u7ecf\u5f88\u4e0d\u53cb\u5584\u4e86\uff0c\u771f\u7684\u662f\u72c2\u6c14\uff0c\u66f2\u5b50\u57fa\u672c\u4e5f\u5f88\u72c2\u6c14\uff08\u9664\u4e86\u56db\u9762\u9053\u4e2d\uff0c\u90a3\u4e2a\u6211\u89c9\u5f97\u662f\u8d85\u7ea7\u795e\u66f2\uff0c\u4f46\u662f\u4e0d\u9002\u5408\u653e\u5728\u8fd9\u91cc\uff0c\u6211\u8981\u5355\u72ec\u5199\uff09</p> <p>\u6240\u4ee5\u554a\uff0c\u4e5f\u662f\u90a3\u79cd\uff0c\u5927\u68a6\u521d\u9192\u7684\u611f\u89c9\uff0c\u800c\u4e14\u5c31\u662f\u9760\u5bf9\u6bd4\u3002</p> <p>\u8d85\u7ea7\u72c2\u6c14\u7684\u5f39\u5e55\uff0c\u66f2\u5b50\uff0c\u6700\u540e\u6765\u6536\u5c3e\u7684\u786e\u5b9e\u8fd9\u6837\u4e00\u9996\u5e73\u548c\u7684\u66f2\u5b50\u3002</p> <p>\u4ece\u795e\u793e\u6240\u671b\u89c1\u7684\u6708\uff0c\u6a21\u7cca\u4e86\u8ba4\u77e5\uff0c\u72c2\u6c14\u7684\u6708\u3002</p>"}, {"location": "misc/netrw-usage/", "title": "Netrw \u7b80\u660e\u4f7f\u7528\u6307\u5317", "text": "<p>\u4e4b\u524d\u4e00\u76f4\u4f7f\u7528\u7684\u662f <code>NERDTree</code> \u6765\u4f5c\u4e3a Vim \u4e2d\u7684\u6587\u4ef6\u7ba1\u7406\u7cfb\u7edf\u3002</p> <p>\u4f46\u662f\u6211\u67d0\u6b21\u5c1d\u8bd5\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0c\u521a\u8f93\u5165\u4e86\u4e00\u4e2a\u8def\u5f84\u5c31\u6309\u4e0b\u4e86 \uff0c\u4e8e\u662f\u6211\u8fdb\u5165\u4e86\u8fd9\u4e2a\u754c\u9762\uff1a <p></p> <p>\u6211\u4e00\u770b\uff0c\u6b38\u54df\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a File Manager \u5417\uff1f</p> <p>\u7136\u540e\u60f3\u5230\u8fd9\u4e1c\u897f\u5e94\u8be5\u662f Vim \u81ea\u5e26\u7684\uff0c\u4e8e\u662f\u6211\u5c1d\u8bd5\u5229\u7528\u4e86 <code>/</code> \u4e4b\u7c7b\u7684\u547d\u4ee4\uff0c\u53d1\u73b0\u5b83\u53ef\u4ee5\u517c\u5bb9\u4e00\u4e9b\u57fa\u672c\u7684 Vim \u547d\u4ee4\uff0c\u8fd9\u5c31\u5f88\u723d\u4e86\uff01</p> <p>\u5f00\u4e86  \u4e4b\u540e\u8bfb\u4e86\u8bfb manual\uff0c\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u662f\u4e00\u822c\u7684\u597d\u7528\u554a\uff01\u7b80\u76f4\u5c31\u662f\u6587\u4ef6\u7ba1\u7406\u5668\u91cc\u7684 vim\uff01 <p>\u867d\u7136\u4f46\u662f\uff0c\u6211\u53ea\u7528\u8fc7 Windows File Explorer \u548c Ubuntu \u7684 File Manager\uff0c\u597d\u50cf\u4e5f\u6ca1\u8d44\u683c\u8bf4\u8fd9\u8bdd\u3002</p> <p>\u65e9\u671f\u7535\u8111\u7684 File Manage \u5e94\u8be5\u5c31\u662f\u7c7b\u4f3c\u8fd9\u4e2a\u754c\u9762\u7684\uff0c\u4e0d\u8fc7\u597d\u7528\u5c31\u884c\uff0c\u7ba1\u5b83\u90a3\u4e48\u591a\u3002</p> <p>\u53ef\u4ee5\u5728\u7f16\u8f91\u6587\u4ef6\u7684\u65f6\u5019\u8f93\u5165 <code>:Vex</code> \u4ee5\u6253\u5f00\u5f53\u524d\u76ee\u5f55\uff0c<code>:Sex</code> \u662f\u6c34\u5e73\u5206\u5272\uff0c\u6216\u8005 <code>:E</code></p>"}, {"location": "misc/netrw-usage/#_1", "title": "\u5f53\u524d\u76ee\u5f55\u64cd\u4f5c", "text": "<ul> <li><code>i</code> \uff1a \u53ef\u4ee5\u5207\u6362\u663e\u793a\u6a21\u5f0f\uff0c\u6811\u5f62\uff0c\u5217\u8868\u5f62\uff0c\u8be6\u7ec6\u4fe1\u606f</li> <li><code>s</code> \uff1a \u9009\u62e9\u6392\u5e8f\u65b9\u5f0f</li> <li><code>r</code> \uff1a \u53cd\u5411\u6392\u5e8f\u5217\u8868</li> <li><code>cd</code>\uff1a \u4f7f\u5f97\u5f53\u524d\u6253\u5f00\u7684\u76ee\u5f55\u4e3a\u5de5\u4f5c\u76ee\u5f55</li> <li><code>d</code> \uff1a \u65b0\u5efa\u76ee\u5f55</li> <li><code>C-l</code>\uff1a \u5237\u65b0\u5f53\u524d\u76ee\u5f55</li> <li><code>a</code> \uff1a \u663e\u793a\u9690\u85cf\u6587\u4ef6</li> <li><code>C-h</code>\uff1a \u6307\u5b9a\u5173\u952e\u5b57\uff0c\u9690\u85cf\u76f8\u5173\u6587\u4ef6\u3002</li> <li><code>u/U</code>\uff1a\u540e\u9000/\u524d\u8fdb\uff08\u4e0a\u4e00\u4e2a\uff0c\u4e0b\u4e00\u4e2a\u8bbf\u95ee\u8fc7\u7684\u76ee\u5f55\uff09</li> <li><code>-</code> \uff1a\u4e0a\u4e00\u7ea7\u76ee\u5f55\u3002</li> </ul>"}, {"location": "misc/netrw-usage/#_2", "title": "\u6587\u4ef6\u64cd\u4f5c", "text": "<ul> <li><code>%</code> \uff1a \u65b0\u5efa\u6587\u4ef6</li> <li><code>R</code> \uff1a \u91cd\u547d\u540d\u9009\u4e2d\u6587\u4ef6</li> <li><code>&lt;CR&gt;</code> \uff1a \u5728\u5f53\u524d tab \u6253\u5f00\u9009\u4e2d\u6587\u4ef6</li> <li><code>t</code> \uff1a \u5728\u65b0\u7684 tab \u91cc\u6253\u5f00\u5bf9\u5e94\u6587\u4ef6\u3002</li> <li><code>x</code> \uff1a \u4f7f\u7528\u5173\u8054\u7a0b\u5e8f\u6253\u5f00\u6587\u4ef6</li> <li><code>v/o</code> \uff1a\u5728\u65b0 window \u6253\u5f00\u6587\u4ef6\uff0c\u6c34\u5e73/\u7ad6\u76f4\u5206\u5272\u7a97\u53e3\u3002</li> <li><code>p</code> \uff1a \u9884\u89c8\u6587\u4ef6</li> <li><code>qf</code>\uff1a\u663e\u793a\u5f53\u524d\u6587\u4ef6\u4fe1\u606f\u3002</li> </ul>"}, {"location": "misc/netrw-usage/#_3", "title": "\u6587\u4ef6\u6807\u8bb0", "text": "<p>\u8fd9\u4e2a\u4e3b\u8981\u662f\u7528\u6765\u79fb\u52a8\u548c\u590d\u5236\u7684\u3002</p> <ul> <li><code>mf</code>\uff1a\u6807\u8bb0\u8be5\u6587\u4ef6\uff08\u4f1a\u4ee5\u7c97\u4f53\u663e\u793a\uff09</li> <li><code>mF</code>\uff1a\u53d6\u6d88\u6807\u8bb0</li> <li><code>mt</code>\uff1a\u8bbe\u7f6e\u5f53\u524d\u6d4f\u89c8\u7684\u76ee\u5f55\u4e3a\u76ee\u6807\u6587\u4ef6\u5939</li> <li><code>mm</code>\uff1a\u628a\u6240\u6709\u6807\u8bb0\u6587\u4ef6\u79fb\u52a8\u5230\u76ee\u6807\u6587\u4ef6\u5939\u4e2d</li> <li><code>mc</code>\uff1a\u590d\u5236</li> <li><code>md</code>\uff1a\u6700\u591a\u5bf9\u6bd4\u4e09\u4e2a\u6807\u8bb0\u6587\u4ef6\u3002</li> <li><code>&lt;n&gt;Th</code>\uff1a\u4ee5\u7b2c  \u4e2a\u5386\u53f2\u76ee\u5f55\u4f5c\u4e3a\u76ee\u6807\u6587\u4ef6\u5939\u3002 <p>\u6709\u4e86\u8fd9\u4e2a\u4e1c\u897f\uff0c\u4f60\u4e0d\u9700\u8981\u88c5\u989d\u5916\u7684\u63d2\u4ef6\u4e5f\u80fd\u83b7\u5f97 Vscode \u7c7b\u4f3c\u7684\u6d4f\u89c8\u6548\u679c\uff01</p> <p></p>"}, {"location": "misc/shaber/", "title": "\u7206\u96f6\u6280\u5de7", "text": ""}, {"location": "misc/shaber/#_1", "title": "\u7206\u96f6\u6280\u5de7", "text": "<p>\u5f88\u65e9\u4e4b\u524d\u6211\u5f04\u8fc7\u4e00\u7bc7\uff0c\u4f46\u662f\u611f\u89c9\u56e0\u4e3a\u4e00\u4e9b\u539f\u56e0\u5176\u5b9e\u91cc\u9762\u5f88\u591a\u662f\u56e0\u4e3a\u7b97\u6cd5\u672c\u8eab\u4e0d\u6e05\u695a\u5f04\u51fa\u6765\u7684\u7b11\u8bdd\u3002</p> <p>\u8fd9\u8fb9\u5199\u70b9\u6b63\u5e38\u9009\u624b\u4f1a\u72af\u5f97\u9519\u8bef\uff0c\u800c\u4e14\u4e00\u822c\u662f\u5e7f\u6cdb\u51fa\u73b0\u7684\uff0c\u5c0f\u4f17\u9519\u8bef\u6211\u5c31\u5355\u72ec\u5f52\u7c7b\u4e86\u3002</p> <p>\u51fa\u8fd9\u4e2a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9192\u81ea\u5df1\u68c0\u67e5\u7684\u65f6\u5019\u8981\u68c0\u67e5\u4ec0\u4e48\u3002</p> <p>\u7279\u522b\u662f\u90a3\u79cd\uff0c\u672c\u6765\u53ef\u4ee5\u62ff\u5206\u7684\uff0c\u4f46\u662f\u5bb9\u6613\u5bc4\u6389\u7684\u7ec6\u8282\u3002</p> <p>\u8f83\u4e3a\u901a\u7528\u89e3\u51b3\u65b9\u6848\uff1a\u6253\u5f00 <code>-Wall -Wextra -Wshadow</code>\u3002</p> <p>\u5b87\u5b99\u65e0\u654c\u7a76\u6781\u5389\u5bb3\u89e3\u51b3\u65b9\u6848\uff1a\u6253\u4e2a\u6912\u5148\uff0c\u9632\u6b62\u56e0\u601d\u7eea\u968f\u673a\u6e38\u8d70\u5bfc\u81f4\u7684\u732a\u8111\u8fc7\u8f7d\u3002</p> <ul> <li>\u591a\u6d4b\u4e0d\u6e05\u7a7a\u3002</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u591a\u6d4b\u9898\u5148\u5199\u4e2a <code>Init()</code> \u653e\u5728\u90a3\u91cc\u3002</p> <ul> <li><code>998244853</code>\u3002</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1aC-c+C-v\u3002</p> <ul> <li>\u4e0d\u5f00\u957f\u957f\u89c1\u7956\u5b97\u3002</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff0c\u5148\u7b97\u4e00\u4e0b\u6781\u7aef\u7684\u60c5\u51b5\u3002</p> <ul> <li>\u591a\u6d4b\u8bfb\u5165\u6ca1\u8bfb\u5b8c\uff0c\u5224\u4e86\u65e0\u89e3\u76f4\u63a5 continue\u3002</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u4f60\u5148\u522b\u6025\uff0c\u8bb0\u5f55\u4e00\u4e2a vis\uff0c\u8bfb\u5b8c\u4e86\u518d\u8bf4\u3002</p> <ul> <li>\u5728\u4e0d\u77e5\u9053\u8fd0\u7b97\u4f18\u5148\u7ea7\u7684\u60c5\u51b5\u4e0b\u4e0d\u6253\u62ec\u53f7</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u591a\u6253\u51e0\u4e2a\u62ec\u53f7\u53c8\u4e0d\u4f1a\u6b7b</p> <ul> <li>\u503c\u57df\u548c \\(n\\) \u7684\u4e0a\u4e0b\u754c\u76f8\u540c\uff0c\u4f46\u662f\u5e76\u4e0d\u76f8\u5173\uff0c\u8fd9\u65f6\u5019\u4f60\u4e0d\u8981\u4ee5\u4e3a\u7ed9\u51fa\u7684\u6570\u636e\u5c31\u662f\u6392\u5217\u4e86\u3002</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u8bfb\u9898\uff0c\u6ca1\u6551\u4e86\u3002</p> <ul> <li>\u7ebf\u6bb5\u6811\u51e0\u500d\u7a7a\u95f4\uff1f\u62bd\u8c61\u51fa\u6765\u7684\u56fe\u8bba\u9898\u8fb9\u6570\u70b9\u6570\u5f00\u591a\u5c11\uff1f\u5404\u79cd\u8868\u793a\u4e0a\u754c\u7684\u53d8\u91cf\u662f\u4e0d\u662f\u6df7\u7528\u4e86\uff1f</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u5f00\u6570\u7ec4\u4e4b\u524d\u5148\u60f3\u4e00\u4e0b\u3002</p> <ul> <li>\u8d1f\u6570\u53d6\u6a21\u52a0\u4e86 mod \u6ca1\u6709\uff1f\u53d6\u6a21\u7684\u65f6\u5019\u6709\u6ca1\u6709\u53ef\u80fd\u56e0\u4e3a\u5c11\u53d6\u6a21\u6ea2\u51fa\uff1f</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u4e0d\u7136\u5199\u4e2a <code>safe_mod</code>\uff0c\u4e0d\u7136\u5c31\u5f00 <code>i64</code> \u7136\u540e\u8fb9\u52a0\u8fb9\u6a21\u3002</p> <ul> <li><code>pow, log2\uff0csqrt</code> \u662f\u6709\u4e00\u5b9a\u7cbe\u5ea6\u8bef\u5dee\u7684\uff0c\u4e0d\u8981\u592a\u8fc7\u4e8e\u76f8\u4fe1\u5b83\u4eec\u3002</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u590d\u6742\u5ea6\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u6211\u53ef\u4ee5\u4e8c\u5206\u624b\u5199</p> <p><code>pow, sqrt</code> \u5728\u6574\u6570\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u6709\u4e8b\u60c5\u3002</p> <ul> <li>\u4f60\u662f\u4e0d\u662f\u6ca1\u8003\u8651\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\uff1f</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u591a\u7c7b\u578b\u8fd0\u7b97\u7684\u65f6\u5019\u52a0\u70b9 <code>* 1ll, * 1.0</code>\u3002</p> <ul> <li>\u4f60\u662f\u4e0d\u662f\u53c8\u5fd8\u8bb0 memset head \u6570\u7ec4\u4e86\uff0c\u4f60\u662f\u4e0d\u662f\u6ca1\u5199 pop\uff0c\u4f60\u662f\u4e0d\u662f\u8fb9\u754c\u6ca1 return\uff0c\u4f60\u662f\u4e0d\u662f\u5904\u7406\u8fde\u7eed\u989c\u8272\u6bb5\u5b8c\u4e86\u76f4\u63a5 continue \u4e86\u3002</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1aTLE \u7684\u65f6\u5019\u4f60\u53ef\u4ee5\u60f3\u60f3\u8fd9\u4e9b\u3002</p> <ul> <li>\u4f60\u662f\u4e0d\u662f\u5fd8\u4e86\u6709\u8fd0\u7b97\u7b26\u77ed\u8def\u8fd9\u56de\u4e8b\u513f\u3002</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u5f53\u4f60\u53d1\u73b0\u6709\u7684\u6761\u4ef6\u6ca1\u6709\u88ab\u5224\u7684\u65f6\u5019\u770b\u4e00\u770b\u3002</p> <ul> <li>\u53c8\u6ca1\u8003\u8651\u8fb9\u754c\u60c5\u51b5\uff1f</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u6ca1\u6551\u4e86\u3002</p> <ul> <li>\u4f60\u60f3\u6e05\u695a\u4e86 C++ \u548c C \u5206\u522b\u662f\u600e\u4e48\u5904\u7406\u5b57\u7b26\u4e32\u7684\u5417\uff1f</li> </ul> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u8bf7\u4f60\u8bfb\u4e00\u8bfb cpp ref\u3002</p>"}, {"location": "misc/template/", "title": "\u6a21\u677f", "text": "<p>\u8fd9\u91cc\u7528\u6765\u653e\u4e00\u4e9b\u5e38\u7528\u7684\u6a21\u677f\uff0c\u4e3b\u8981\u662f\u6709\u4e9b\u4e1c\u897f\u4e0d\u60f3\u653e\u5230 User snippet \u91cc\u9762\u3002</p> <p>\u5176\u5b9e\u6211\u5bf9\u6a21\u677f\u4f9d\u8d56\u6027\u4e0d\u662f\u5f88\u5f3a\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e1c\u897f\u6bd4\u8f83\u5c11\u3002</p>"}, {"location": "misc/template/#_1", "title": "\u8d77\u624b\u5f0f", "text": ""}, {"location": "misc/template/#_2", "title": "\u901a\u7528\u6a21\u677f", "text": "<pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\n\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> <p>\u6ce8\u610f\u5982\u679c\u662f\u4ea4\u4e92\u9898\u8981\u628a endl \u7684 define \u5220\u6389\u3002</p>"}, {"location": "misc/template/#freopen", "title": "Freopen", "text": "<pre><code>    freopen(\".in\", \"r\", stdin);\nfreopen(\".out\", \"w\", stdout);\n</code></pre>"}, {"location": "misc/template/#io", "title": "\u5feb\u901f IO", "text": ""}, {"location": "misc/template/#_3", "title": "\u53d6\u6d88\u6d41\u540c\u6b65", "text": "<pre><code>    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n</code></pre> <p>\u6ce8\u610f\u53d6\u6d88\u6d41\u540c\u6b65\u4e4b\u540e\u8f93\u51fa\u4f1a\u7edf\u4e00\u96c6\u5408\u5230\u4e00\u8d77\u3002</p> <p>exceptions \u662f\u7528\u6765\u5224\u8bfb\u5165\u662f\u5426\u5408\u6cd5\u7684\uff0c\u4e0d\u5408\u6cd5\u4f1a RE\uff0c\u7528\u6765\u67e5\u9519\u3002</p>"}, {"location": "misc/template/#fastio", "title": "FastIO", "text": "<p>\u6284\u7684 lcx \u7684\u5e76\u9b54\u6539\u4e86\u4e00\u4e0b\u3002</p> <pre><code>#include &lt;cctype&gt;\n\ntemplate &lt;typename __Tp&gt; void read(__Tp &amp;x) {\nint f = x = 0; char ch = getchar();\nfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = 1;\nfor (; isdigit(ch); ch = getchar()) x = (x &lt;&lt; 1) + (x &lt;&lt; 3) + (ch ^ 48);\nif (f) x = -x;\n}\nvoid read(char &amp;ch) { for (ch = getchar(); isspace(ch); ch = getchar()); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void read(__Tp1 &amp;x, __Tp2 &amp;... y) { read(x), read(y...); }\ntemplate &lt;typename __Tp&gt; void write(__Tp x) {\nif (x &lt; 0) putchar('-'), x = -x;\nif (x &gt; 9) write(x / 10);\nputchar(x % 10 + 48);\n}\nvoid write(char ch) { putchar(ch); }\nvoid write(const char *s) { for (; *s; ++s) putchar(*s); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void write(__Tp1 x, __Tp2 ... y) { write(x), write(y...); }\n</code></pre>"}, {"location": "misc/template/#_4", "title": "\u81ea\u52a8\u53d6\u6a21", "text": "<p>\u6284\u7684 Atcoder-modint\uff0c\u4f46\u662f\u662f\u4ece\u4f73\u7238\u90a3\u91cc copy \u7684\uff0c\u53ef\u80fd\u88ab\u4f73\u7238\u9b54\u6539\u8fc7\uff0c\u56e0\u4e3a\u8fd8\u5e26\u4e86 BR\u3002</p> <p>\u7565\u5fae\u505a\u4e86\u4e00\u70b9\u6539\u52a8\u3002</p> <pre><code>using i64 = long long;\nusing ldb = long double;\nusing u64 = unsigned long long;\n\nconstexpr i64 safe_mod(i64 x, i64 m) { return x %= m, x &lt; 0 ? x + m : x; }\nconstexpr i64 pow_mod_constexpr(i64 x, i64 n, int m) {\nif(m == 1) return 0;\nunsigned _m = m; uint64_t r = 1, _x = safe_mod(x, m);\nfor(; n; n &gt;&gt;= 1, _x = _x * _x % _m) if(n &amp; 1) r = r * _x % m;\nreturn r;\n}\nconstexpr bool is_prime_constexpr(int n) {\nif(n &lt;= 1) return false;\nif(n == 2 || n == 7 || n == 61) return true;\nif(n % 2 == 0) return false;\ni64 d = n - 1; while(~d &amp; 1) d /= 2;\nfor(i64 a : {2, 7, 61}) {\ni64 t = d, y = pow_mod_constexpr(a, t, n);\nwhile(t != n - 1 &amp;&amp; y != 1 &amp;&amp; y != n - 1) y = y * y % n, t &lt;&lt;= 1;\nif(y != n - 1 &amp;&amp; t % 2 == 0) return false;\n}\nreturn true;\n}\nconstexpr pair&lt;i64, i64&gt; inv_gcd(i64 a, i64 b) {\na = safe_mod(a, b);\nif(a == 0) return {b, 0};\ni64 s = b, t = a, m0 = 0, m1 = 1;\nwhile(t) {\ni64 u = s / t; s -= t * u, m0 -= m1 * u;\ni64 tmp = s; s = t, t = tmp, tmp = m0, m0 = m1, m1 = tmp;\n}\nif(m0 &lt; 0) m0 += b / s;\nreturn {s, m0};\n}\nstruct Barrett_Reduction {\nunsigned m; uint64_t im;\nBarrett_Reduction(unsigned m) :m(m), im(~0ull / m + 1) {}\nunsigned mul(unsigned a, unsigned b) const {\nuint64_t z = (uint64_t)a * b, x = (__uint128_t)z * im &gt;&gt; 64; unsigned v = z - x * m;\nreturn m &lt;= v ? v + m : v;\n}\n};\ntemplate&lt;int m&gt; struct static_modint {\nusing _mint = static_modint;\npublic:\nstatic _mint raw(int v) { _mint x; return x._v = v, x; }\nstatic_modint() :_v(0) {}\ntemplate&lt;class __Tp&gt; static_modint(__Tp v) { i64 x = v % m; _v = x &lt; 0 ? x + m : x; }\nunsigned val() const { return _v; }\n_mint&amp; operator ++ () { if(++_v == m) _v = 0; return *this; }\n_mint&amp; operator -- () { if(!_v--) _v = m - 1; return *this; }\n_mint operator ++ (int) { _mint res = *this; ++*this; return res; }\n_mint operator -- (int) { _mint res = *this; --*this; return res; }\n_mint&amp; operator += (const _mint&amp; rhs) { _v += rhs._v; if(_v &gt;= m) _v -= m; return *this; }\n_mint&amp; operator -= (const _mint&amp; rhs) { _v -= rhs._v; if(_v &gt;= m) _v += m; return *this; }\n_mint&amp; operator *= (const _mint&amp; rhs) { uint64_t z = _v; z *= rhs._v, _v = z % m; return *this; }\n_mint&amp; operator /= (const _mint&amp; rhs) { return *this = *this * rhs.inv(); }\n_mint operator + () const { return *this; }\n_mint operator - () const { return _mint() - *this; }\n_mint pow(i64 n) const { assert(0 &lt;= n); _mint x = *this, r = 1; for(; n; n &gt;&gt;= 1, x *= x) if(n &amp; 1) r *= x; return r; }\n_mint inv() const{ if(prime) { assert(_v); return pow(m - 2); } else { auto eg = inv_gcd(_v, m); assert(eg.first == 1); return eg.second; } }\nfriend _mint operator + (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) += rhs; }\nfriend _mint operator - (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) -= rhs; }\nfriend _mint operator * (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) *= rhs; }\nfriend _mint operator / (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) /= rhs; }\nfriend bool operator == (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v == rhs._v; }\nfriend bool operator != (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v != rhs._v; }\nprivate:\nunsigned _v;\nstatic constexpr bool prime = is_prime_constexpr(m);\n};\nstruct dynamic_modint {\nusing _mint = dynamic_modint;\npublic:\nstatic void set_mod(int m) { assert(1 &lt;= m), bt = Barrett_Reduction(m); }\nstatic _mint raw(int v) { _mint x; return x._v = v, x; }\ndynamic_modint() :_v(0) {}\ntemplate&lt;class __Tp&gt; dynamic_modint(__Tp v) { i64 x = v % (int)bt.m; _v = x &lt; 0 ? x + bt.m : x; }\nunsigned val() const { return _v; }\n_mint&amp; operator ++ () { if(++_v == bt.m) _v = 0; return *this; }\n_mint&amp; operator -- () { if(!_v--) _v = bt.m - 1; return *this; }\n_mint operator ++ (int) { _mint res = *this; ++*this; return res; }\n_mint operator -- (int) { _mint res = *this; --*this; return res; }\n_mint&amp; operator += (const _mint&amp; rhs) { _v += rhs._v; if(_v &gt;= bt.m) _v -= bt.m; return *this; }\n_mint&amp; operator -= (const _mint&amp; rhs) { _v += bt.m - rhs._v; if(_v &gt;= bt.m) _v -= bt.m; return *this; }\n_mint&amp; operator *= (const _mint&amp; rhs) { _v = bt.mul(_v, rhs._v); return *this; }\n_mint&amp; operator /= (const _mint&amp; rhs) { return *this = *this * rhs.inv(); }\n_mint operator + () const { return *this; }\n_mint operator - () const { return _mint() - *this; }\n_mint pow(i64 n) const { assert(0 &lt;= n); _mint x = *this, r = 1; for(; n; n &gt;&gt;= 1, x *= x) if(n &amp; 1) r *= x; return r; }\n_mint inv() const { auto eg = inv_gcd(_v, bt.m); assert(eg.first == 1); return eg.second; }\nfriend _mint operator + (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) += rhs; }\nfriend _mint operator - (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) -= rhs; }\nfriend _mint operator * (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) *= rhs; }\nfriend _mint operator / (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) /= rhs; }\nfriend bool operator == (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v == rhs._v; }\nfriend bool operator != (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v != rhs._v; }\nprivate:\nunsigned _v;\nstatic Barrett_Reduction bt;\n};\nusing modint = dynamic_modint;\nusing barrett = Barrett_Reduction;\n\nbarrett modint::bt = 998244353;\n\nvoid read(modint &amp;x) { int __value; read(__value); x = __value; return; } void write(modint x) { write(x.val()); }\n\n// in main\nmodint a, b, c;\n</code></pre>"}, {"location": "misc/template/#_5", "title": "\u706b\u8f66\u5934", "text": "<pre><code>#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\n</code></pre>"}, {"location": "misc/template/#_6", "title": "\u5bf9\u62cd", "text": "<p>Bash\uff08\u6284\u7684\u4f73\u7238\u7684\uff09:</p> <pre><code>while true; do\n./gen &gt; in\n./bf &lt; in &gt; 1\n./my &lt; in &gt; 2\ndiff 1 2\nif [ $? -ne 0 ] ; then break; fi\ndone\n</code></pre> <p>cmd</p> <pre><code>:loop\n    gen.exe\n    bf.exe\n    my.exe\n    fc b.ans b.usr\n    if %errorlevel%==0 goto loop\npause\n</code></pre> <p>Need Freopen.</p>"}, {"location": "misc/vim-pref/", "title": "\u6d45\u8c08 Vim \u7684\u914d\u7f6e", "text": "<p>\u7528\u6765\u7528\u53bb\uff0c\u515c\u515c\u8f6c\u8f6c\uff0c\u8fd8\u662f\u56de\u5230\u4e86 Vim \u8fd9\u8be5\u6b7b\u7684 Editor \u4e0a\u9762\u6765\u3002</p> <p>\u4e4b\u524d\u518d\u4e00\u6b21\u653e\u5f03 Vim \u7684\u539f\u56e0\u662f\u54cd\u5e94\u901f\u5ea6\u7a81\u7136\u6162\u7684\u5b8c\u5168\u53d7\u4e0d\u4e86\uff0c\u6211\u8d77\u521d\u8ba4\u4e3a\u662f Gvim windows \u9002\u914d\u7684\u95ee\u9898\u3002</p> <p>\u540e\u6765\u5f97\u77e5\u4e86\u4e00\u4e9b\u5173\u4e8e Vim \u5e95\u5c42\u76f8\u5173\u7684\u4e1c\u897f\u4e4b\u540e\uff0c\u6392\u67e5\u4e86\u81ea\u5df1\u539f\u6765\u7684 <code>.vimrc</code>\uff0c\u53d1\u73b0\u7f6a\u9b41\u7978\u9996\u662f Vim-airline\u3002</p> <p>\u5b83\u548c\u4e00\u4e2a\u53eb\u505a Whitespace check \u7684\u73a9\u610f\u513f\u51b2\u7a81\u4e86\uff0c\u5bfc\u81f4\u6587\u4ef6\u52a0\u8f7d\u901f\u5ea6\u5947\u6162\u65e0\u6bd4\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u8fd9\u4e2a issue\u3002</p> <p>\u548c EarthMessenger \u4ea4\u6d41\u4e86\u4e00\u4e0b\uff0c\u89c9\u5f97\u5176\u5b9e Airline \u8fd9\u4e1c\u897f\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u82b1\u91cc\u80e1\u54e8\u7684\u73a9\u610f\u513f\uff0c\u5176\u5b9e\u4e5f\u6ca1\u6709\u5fc5\u8981\u3002</p> <p>\u9664\u4e86\u5b83 git repo \u7684\u4e00\u4e9b\u663e\u793a\u4e4b\u5916\uff0c\u5176\u5b9e\u4e5f\u6ca1\u5565\u7528\u3002</p> <p>\u8fd8\u6709\u4e9b\u539f\u56e0\u662f\uff0c\u6709\u4e9b\u4f7f\u7528\u975e vim script \u7684\u8bed\u8a00\u7f16\u5199\u7684 extension\uff0c\u5728\u548c vim \u4ea4\u4e92\u7684\u65f6\u5019\u5bb9\u6613\u56e0\u4e3a\u63a5\u53e3\u4e4b\u7c7b\u7684\u95ee\u9898\u54cd\u5e94\u8fc7\u6162\u3002</p> <p>\u7efc\u5408\u8003\u8651\u4e4b\u540e\uff0c\u6211\u89c9\u5f97\u5e94\u5f53\u5c1d\u8bd5\u4e00\u4e0b\u4e00\u4e2a\uff0c\u5c3d\u91cf\u8f7b\u91cf\u7ea7\uff0c\u914d\u7f6e\u4e0a\u624b\u5f88\u5feb\uff0c\u4f9d\u8d56\u5176\u4ed6\u7b2c\u4e09\u65b9\u8bed\u8a00\u548c\u8f6f\u4ef6\u6781\u5c11\u7684 Vim\uff0c\u5e76\u4e14\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u6548\u7387\u3002</p> <p>\u6709\u4e9b\u4e4b\u524d\u89c9\u5f97\u65b9\u4fbf\uff0c\u5b9e\u9645\u4e0a\u8fdd\u80cc\u4e86\u521d\u8877\u7684\u4e60\u60ef\u4e5f\u53ef\u4ee5\u6539\u8fc7\u6765\u3002</p> <p>\u914d\u7f6e\u76f8\u5173\u4ed3\u5e93\uff0c\u4e0d\u5b9a\u671f\u66f4\u65b0\u3002</p>"}, {"location": "misc/vim-pref/#c", "title": "C++", "text": "<p>\u8fd9\u4e2a\u662f\u6700\u57fa\u672c\u7684\u9700\u6c42\u3002</p> <p>\u6b63\u5e38\u6765\u8bf4\u9700\u8981\u7684\u4e1c\u897f\u4e5f\u5c31\u8fd9\u4e9b\uff1a</p> <ul> <li>\u8bed\u6cd5\u9ad8\u4eae</li> <li>\u62ec\u53f7\u8865\u5168</li> <li>\u4e00\u4e9b\u57fa\u672c\u7684\u4ee3\u7801\u683c\u5f0f\u5316\uff08<code>tab = 4</code>\uff0c\u81ea\u52a8\u6362\u884c\uff09</li> <li>\u7f16\u8bd1\u548c\u8fd0\u884c</li> <li>\u8c03\u8bd5</li> </ul> <p>\u7b2c\u4e00\u70b9\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728 vimrc \u91cc\u9762\u5199\u4e00\u53e5\uff1a</p> <pre><code>syntax on\n</code></pre> <p>\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u7b2c\u4e8c\u70b9\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4e2a\u4eba\u4f7f\u7528\u4e60\u60ef\u662f\uff0c\u5e0c\u671b\u8f93\u5165\u524d\u534a\u62ec\u53f7\uff0c\u80fd\u76f4\u63a5\u5f39\u51fa\u540e\u534a\u62ec\u53f7\u5e76\u4e14\u81ea\u52a8\u8df3\u5230\u62ec\u53f7\u91cc\u9762\u3002</p> <p>\u8fd9\u4e2a\u5229\u7528 vim \u7684\u6620\u5c04\u5c31\u53ef\u4ee5\u505a\u5230\uff1a</p> <pre><code>inoremap [ []&lt;Esc&gt;i\ninoremap {&lt;CR&gt; {}&lt;ESC&gt;i&lt;CR&gt;&lt;ESC&gt;O\ninoremap ( ()&lt;Esc&gt;i\ninoremap ' ''&lt;Esc&gt;i\ninoremap \" \"\"&lt;Esc&gt;i\n</code></pre> <p>\u7b2c\u4e8c\u884c\u9700\u8981\u5728\u6709 <code>autoindent</code> \u9009\u9879\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u8fd9\u6837\u4f1a\u81ea\u52a8\u6362\u884c\u5e76\u7f29\u8fdb\u5230\u5927\u62ec\u53f7\u91cc\u9762\uff0c\u8fd9\u4e2a\u539f\u7406\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u57fa\u672c\u7684 vim command.</p> <p>\u56e0\u4e3a\u6211\u4e00\u822c\u662f\u5927\u62ec\u53f7\u4e0d\u6362\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4e00\u822c\u662f <code>&lt;SPACE&gt;{&lt;CR&gt;</code>\uff0c\u884c\u5185\u82b1\u62ec\u53f7\u6211\u7528\u7684\u4e0d\u591a\uff0c\u7528\u4e86\u4e5f\u4e60\u60ef\u4e0d\u8865\u5168\uff0c\u6240\u4ee5\u8fd9\u6837\u5c31\u591f\u7528\u4e86\u3002</p> <p>\u5f53\u7136\uff0c\u56e0\u4e3a vim \u5728\u5904\u7406\u6709\u516c\u5171\u524d\u7f00\u7684\u6620\u5c04\u65f6\u4f1a\u6709\u4e00\u4e2a timeoutlen\uff0c\u4e3a\u4e86\u65b9\u4fbf\u53ef\u4ee5\u6309\u7167\u81ea\u5df1\u624b\u901f\u8c03\u6574\u4e00\u4e0b\uff0c\u6211\u4e00\u822c\u8bbe\u7f6e\u5728 <code>600ms</code> \u5de6\u53f3\u3002</p> <p>\u7b2c\u4e09\u70b9\uff0c\u4e5f\u662f vimrc \u80fd\u76f4\u63a5\u89e3\u51b3\u7684\uff1a</p> <pre><code>set tabstop=4 softtabstop=4 shiftwidth=4 autoindent\n</code></pre> <p>\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u7b2c\u56db\u70b9\uff0c\u5982\u679c\u76f4\u63a5\u5728 vim \u91cc\u4f7f\u7528 <code>!&lt;command&gt;</code>\uff0c\u5728 win \u4e0b\u4f1a\u5f39\u51fa\u7a97\u53e3\uff0clinux \u4e0b\u4f1a\u76f4\u63a5\u5728 vim \u91cc\u5207\u5c4f\u5230\u4e00\u4e2a\u7ec8\u7aef\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u4f60\u5c31\u4e0d\u80fd\u5bf9 vim \u91cc\u539f\u6709\u7684\u4ee3\u7801\u8fdb\u884c\u64cd\u4f5c\u4e86\uff0c\u8fd9\u5f88\u9ebb\u70e6\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5f02\u6b65\u7f16\u8bd1\u7684\u529f\u80fd\u3002</p> <p>\u8fd9\u4e2a\u9700\u8981 Vim 7.4 \u4ee5\u53ca\u4e4b\u540e\u7684\u7248\u672c\uff0c\u56e0\u4e3a 7.4 \u5f00\u59cb\uff0cBram \u624d\u5f15\u5165\u4e86 job \u8fd9\u4e2a\u6982\u5ff5\u3002</p> <p>Vim \u5708\u8457\u540d\u5927\u795e skywind3000 \u66fe\u7ecf\u5199\u8fc7\u4e00\u4e2a\u5f02\u6b65\u8fd0\u884c\u63d2\u4ef6 asyncrun.vim\uff0c\u539f\u7406\u4ec0\u4e48\u7684\u53ef\u4ee5\u5728\u4ed6\u7684\u535a\u5ba2\u770b\u5230\u3002</p> <p>\u56e0\u4e3a\u6211\u76ee\u524d\u6ca1\u6709\u65f6\u95f4\u6df1\u5165\u5b66\u4e60\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u6bd4\u8f83\u7c97\u66b4\u7684\u65b9\u5f0f\uff0c\u76f4\u63a5\u5f00\u4e00\u4e2a Terminal \u7f16\u8bd1\uff0cvim8.1 \u4e4b\u540e\u53ef\u4ee5\u6709\u5185\u7f6e\u7684 <code>terminal</code>\uff0c\u6bd4\u8f83\u65b9\u4fbf</p> <p>\u53cd\u6b63\u6709\u4e0a\u4e0b\u952e\uff0c\u4e5f\u4e0d\u662f\u5f88\u8d39\u65f6\u95f4\uff0c\u800c\u4e14\u6539\u4e00\u4e9b\u9009\u9879\u4e5f\u5f88\u5feb\u3002</p> <p>\u4f46\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u6211\u7ecf\u5e38\u5728\u7c98\u6837\u4f8b\u7684\u65f6\u5019\u628a\u4ee3\u7801\u7c98\u8d34\u8fdb\u53bb\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6211\u7528\u2191\u627e\u4e0d\u5230\u6211\u7684\u7f16\u8bd1\u547d\u4ee4\u4e86\u3002</p> <p>\u4e8e\u662f\u60f3\u5230\u4e86\u4e00\u4e2a\u529e\u6cd5\uff01\u5f00\u4e24\u4e2a\u7ec8\u7aef\uff01\u6211\u771f\u662f\u5929\u624d\uff01</p> <p>\u7b2c\u4e94\u70b9\uff0c\u6211\u5df2\u7ecf\u4e60\u60ef\u4e86 GDB \u8fd9\u79cd\u547d\u4ee4\u884c\u8c03\u8bd5\u7684\u6a21\u5f0f\uff0c\u6240\u4ee5\u76f4\u63a5 Terminal \u5c31\u884c\uff0c\u4e5f\u53ef\u4ee5\u5728 Vim8.1 \u8fc7\u540e\u4f7f\u7528 </p> <pre><code>packadd termdebug\n</code></pre> <p>\u6765\u5f15\u5165 TermDebug \u5305\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u5728 Vim \u91cc\u5b9e\u65f6\u67e5\u770b\u65ad\u70b9\u4e86\u3002</p> <p>\u8bdd\u8bf4 Bram \u5728\u66f4\u65b0 8.1 \u7684\u65f6\u5019\u90fd\u5728\u60f3\u5565\uff0c\u548b\u66f4\u65b0\u4e86\u8fd9\u4e48\u591a\u4eba\u6027\u5316\u529f\u80fd\u3002</p> <p>\u5f88\u53ef\u60dc\u6211\u4eec\u5b66\u6821\u88c5\u7684\u662f 8.0\uff0c\u6709\u70b9\u96be\u53d7\uff0c\u6240\u4ee5\u6211\u4e00\u822c\u90fd\u662f\u624b\u52a8 vim90\u3002</p> <p>\u4f46\u662f TermDebug \u6709\u4e00\u4e2a\u5f88\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u5b83\u4e0d\u80fd\u652f\u6301 <code>&lt;CR&gt;</code> \u7ee7\u7eed\u4e0a\u4e00\u4e2a\u547d\u4ee4\u3002</p> <p>\u6240\u4ee5\u6211\u8fd8\u662f\u76f4\u63a5 <code>:Terminal</code>\uff0c\u7136\u540e <code>&lt;C-w&gt; &lt;S-n&gt;</code> \u5c31\u53ef\u4ee5\u5728 Terminal \u91cc\u9762\u8fdb\u5165 NORMAL \u6a21\u5f0f\u4e86\u3002</p> <p>\u4f46\u662f\u8c03\u7528\u7684\u8fd8\u662f CMD\uff0c\u6240\u4ee5\u6211\u5728\u601d\u8003\u600e\u4e48\u8c03\u7528\u5916\u90e8\u7ec8\u7aef\u3002</p> <p>upd: EarthMessenger \u63d0\u4f9b\u4e86\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff1a<code>:term</code> \u662f\u53ef\u4ee5\u8c03\u7528\u5916\u90e8\u7ec8\u7aef\u7684\u3002</p> <p>\u7c7b\u4f3c\u8fd9\u6837\uff1a<code>:term msys2_shell.cmd -here -no-start -defterm</code>\uff08\u53c2\u6570\u53ef\u4ee5\u81ea\u5df1\u4f7f\u7528 <code>msys2_shell.cmd -help</code> \u67e5\u770b\uff09</p> <p>\u522b\u5fd8\u8bb0\u52a0 Path.</p> <p>\u628a\u8fd9\u4e2a\u6620\u5c04\u6210\u547d\u4ee4\u5c31\u597d\u4e86\uff01</p> <p>\u4e0d\u8fc7\u5982\u679c\u8c03\u7528 Msys2 \u7684\u8bdd\uff0c\u7cfb\u7edf PATH \u91cc\u7684\u7a0b\u5e8f\u662f\u6ca1\u6cd5\u8c03\u7528\u7684\uff0c\u6240\u4ee5\u6709\u7684\u65f6\u5019\u8fd8\u662f\u8981\u7528\u4e00\u7528 Terminal</p> <p>\u7136\u540e Msys2 \u5982\u679c\u6ca1\u6709\u914d\u7f6e\u8fc7\uff0c\u53ef\u80fd\u9700\u8981\u66f4\u65b0\u4e00\u4e0b <code>pacman</code>\uff0c\u4e0d\u7136\u4e0b\u8f7d\u4f1a\u51fa\u4e8b\uff1a</p> <pre><code>pacman -Su\npacman -Sy\n</code></pre> <p>\u5982\u679c\u662f\u7528 Gitbash\uff0c\u4e5f\u662f\u7c7b\u4f3c\u7684\uff1a<code>:term bash.exe --login -i</code> \uff08\u540e\u9762\u7684\u53c2\u6570\u662f\u4e3a\u4e86\u963b\u6b62\u5b83\u6253\u5f00\u7a97\u53e3\uff09</p>"}, {"location": "misc/vim-pref/#markdown", "title": "Markdown", "text": "<p>\u8fd9\u4e2a\u4e5f\u662f\u5f88\u91cd\u8981\u7684\u9700\u6c42\u3002</p> <ul> <li>\u8bed\u6cd5\u9ad8\u4eae\u548c\u4e00\u4e9b\u57fa\u672c\u7684\u8865\u5168</li> <li>Preview</li> <li>\u6587\u4ef6\u540d\u8865\u5168\u3002</li> <li>\u4e00\u4e9b\u6570\u5b66\u516c\u5f0f\u7684\u5feb\u901f\u8f93\u5165\uff08\u5199\u83ab\u53cd\u9898\u9898\u89e3\u592a\u75db\u82e6\u4e86\uff09</li> </ul> <p>\u5173\u4e8e\u7b2c\u4e00\u4e2a\uff0c\u4e4b\u524d\u9009\u62e9\u4e86\u63d2\u4ef6\uff1a<code>preservim\\vim-markdown</code>\uff0c\u4f46\u662f\u540e\u6765\u53d1\u73b0\u5b83\u4f1a\u62d6\u6162\u6574\u4e2a vim \u7684\u6548\u7387\uff0c\u8fd9\u662f\u4e0d\u80fd\u5fcd\u53d7\u7684\uff0c\u6240\u4ee5\u5220\u9664\u4e86\uff0c\u5e72\u8106\u76f4\u63a5 <code>syntax off</code>\uff0c\u6216\u8005\u5c31\u7528\u539f\u751f\u7684 syntax\u3002</p> <p>\u4f46\u662f\u53d1\u73b0\u4ee3\u7801\u5757\u9ad8\u4eae\u6ca1\u4e86\uff0c\u70e6\u607c\uff0c\u6700\u540e\u5728\u77e5\u4e4e\u4e0a\u53d1\u73b0\u4e86\u89e3\u51b3\u65b9\u6848\uff1a</p> <p><code>let g:markdown_fenced_languages =['c', 'cpp']</code></p> <p>\u8fd9\u4e2a\u751a\u81f3\u53ef\u4ee5\u8bc6\u522b\u5230\u6211\u7f29\u8fdb\u8fc7\u7684\u4ee3\u7801\u5757\uff0c\u6bd4 <code>vim-markdown</code> \u725b\u903c\u591a\u4e86\u3002</p> <p>\u679c\u7136\uff0c\u539f\u751f vim \u624d\u662f\u6700\u725b\u7684\uff08\uff09</p> <p>\u7136\u540e\u516c\u5f0f\u6e32\u67d3\u6ca1\u4e86\uff0c\u6124\u6012\uff0c\u6240\u4ee5\u5728\u56fd\u5916\u5927\u795e\u535a\u5ba2\u91cc\u627e\u5230\u4e86\u89e3\u51b3\u65b9\u6848</p> <p>\u5927\u81f4\u5c31\u662f\u5c1d\u8bd5\u5339\u914d <code>$$</code> \u5e76\u7ed9\u4ed6\u52a0\u4e0a\u9ad8\u4eae\uff0c\u4e0d\u8fc7\u8fd8\u6709\u70b9 bug\uff0c\u4e4b\u540e\u6765\u4fee\u3002</p> <p>\u7b2c\u4e8c\u4e2a\uff0c\u6211\u4e4b\u524d\u5c31\u4e00\u76f4\u5728\u7528\uff0c\u662f\u4e00\u4e2a\u56fd\u5185\u5927\u4f6c\u5f00\u53d1\u7684\uff0c\u611f\u89c9\u633a\u597d\u7528\uff0c\u6bd5\u7adf\u53ef\u4ee5\u540c\u6b65\u9884\u89c8\u8fd8\u53ef\u4ee5\u5bfc\u51fa\uff1a<code>iamcco/markdown-preview.nvim</code>\u3002</p> <p>\u7b2c\u4e09\u4e2a\u4e3b\u8981\u662f\u56e0\u4e3a\uff0c\u6211\u7ecf\u5e38\u4f1a\u5f15\u7528\u6211\u81ea\u5df1\u535a\u5ba2\u76ee\u5f55\u4e0b\u7684\u56fe\u7247\uff0c\u6587\u7ae0\uff0c\u6240\u4ee5\u8fd9\u4e1c\u897f\u5bf9\u6211\u6765\u8bf4\u5f88\u6709\u5fc5\u8981\u3002</p> <p>\u6211\u4ee5\u524d\u4ee5\u4e3a vim \u6ca1\u6709\u5185\u7f6e\u8865\u5168\uff0c\u67d0\u5929\u95f2\u6765\u65e0\u4e8b\u4e71\u6309\u7684\u65f6\u5019\u6309\u51fa\u4e86\u4e00\u4e2a popmenu\uff0c\u53d1\u73b0\u53ef\u4ee5\u8865\u5168\u6587\u4ef6\uff0c\u641c\u7d22\u4e86\u4e00\u4e0b\u4e4b\u540e\u53d1\u73b0\u53ea\u9700\u8981 <code>&lt;C-x&gt;&lt;C-f&gt;</code> \u5c31\u53ef\u4ee5\u4e86\u3002\u611f\u53f9\uff0cvim \u679c\u7136\u8fd8\u662f\u6280\u9ad8\u4e00\u7b79\uff0c\u65e9\u5c31\u6709\u4e86\u8fd9\u6837\u7684\u529f\u80fd\u3002</p> <p>\u7b2c\u56db\u4e2a\u7684\u8bdd\uff0c\u6211\u5199\u4e86\u51e0\u4e2a\u6620\u5c04\uff0c\u653e\u5728 <code>$VIM/ftplugin/markdown.vim</code> \u91cc\u9762\u5c31\u53ef\u4ee5\u4e86\u3002</p>"}, {"location": "misc/vim-pref/#misc", "title": "Misc", "text": "<p>\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u5b57\u5178\uff0c\u8fd9\u4e2a vim \u5176\u5b9e\u4e5f\u81ea\u5e26\u4e86\uff0c\u4e0d\u8fc7\u4e0d\u4f1a\u81ea\u52a8\u5f39\u51fa\uff0c\u800c\u662f\u8981  \u4e00\u4e0b\u3002 <p>\u6709\u70b9\u96be\u53d7\uff0c\u4e4b\u524d\u9009\u7528\u4e86 skywind3000 \u5927\u4f6c\u7684 vim-autopopmenu\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u9700\u8981\u8bfb\u53d6 buffer\uff0c\u5728\u5927\u6587\u4ef6\u7f16\u8f91\u65f6\u4f1a\u5f88\u5361\uff0c\u4e8e\u662f\u653e\u5f03\u3002</p> <p>\u7136\u540e\u5173\u4e8e\u7cfb\u7edf\u526a\u8d34\u677f\u8fd9\u4e2a\u4e8b\u60c5\uff0c\u8fd9\u4e2a\u6211\u4e4b\u524d\u559c\u6b22\u540c\u6b65 vim \u7684\u526a\u5207\u677f\u548c\u7cfb\u7edf\u526a\u8d34\u677f\u3002</p> <p>\u4e0d\u8fc7\u73b0\u5728\u8fd8\u662f\u89c9\u5f97\uff0c\u72ec\u7acb\u4e00\u4e0b\u4f1a\u6bd4\u8f83\u597d\uff0c\u56e0\u4e3a vim \u91cc\u7ecf\u5e38 dd \u554a\uff0c\u4e34\u65f6\u79fb\u52a8\u4e00\u4e0b\u4ee3\u7801\u4e4b\u7c7b\u7684\uff0c\u526a\u5207\u64cd\u4f5c\u5f88\u591a\uff0c\u800c\u4e14 vim \u672c\u8eab\u8fd9\u4e2a register \u529f\u80fd\u53c8\u4e0d\u662f\u6446\u8bbe\uff0c\u80af\u5b9a\u8fd8\u662f\u8981\u7528\u7528\u7684\uff0c\u6240\u4ee5\u6211\u73b0\u5728\u7684 vimrc \u5c31\u6ca1\u6709\u540c\u6b65\u4e86\u3002</p> <p>\u8fd8\u6709\u4e00\u4e2a\u662f\u5173\u4e8e\u76f8\u5bf9\u884c\u53f7\u7684\uff0c\u53d1\u73b0\u5176\u5b9e\u8fd9\u4e2a\u6bd4\u76f4\u63a5\u5f04\u884c\u53f7\u8981\u597d\u7684\u591a\uff0c\u53ef\u4ee5\u5c11\u6253\u4e00\u4e2a shift\uff1f</p> <p>\u4f46\u662f\u8981\u5feb\u901f\u8df3\u5230\u89c6\u91ce\u4e4b\u5916\u7684\u5730\u65b9\u5c31\u4e0d\u592a\u65b9\u4fbf\uff0c\u4f46\u662f\u53ef\u4ee5\u76f4\u63a5\u6eda\u5c4f\uff0c\u6240\u4ee5\u8fd8\u633a\u4e0d\u9519\u3002</p> <p>\u4e2d\u6587\u8f93\u5165\u6cd5\u7684\u8bdd\uff0c\u4e4b\u524d\u770b\u5230\u8fc7\u4e00\u4e2a\u5185\u5d4c\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5728\u670d\u52a1\u5668\u4e4b\u7c7b\u7684\u5730\u65b9\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u6211\u6ca1\u6709\u5728\u5947\u602a\u7684\u73af\u5883\u4e0b\u8f93\u5165\u4e2d\u6587\u7684\u9700\u6c42\uff0c\u6240\u4ee5\u6682\u65f6\u4e0d\u9700\u8981\uff0c\u6709\u7cfb\u7edf\u8bcd\u5e93\u5c31\u597d\u4e86\u3002</p> <p>\u4e0d\u8fc7\u8fd8\u6709\u4e00\u4e9b\u9700\u6c42\uff0c\u6bd4\u5982\u4e00\u4e2a\u5185\u7f6e todolist manager\uff0c\u6211\u6ca1\u6709\u770b\u5230\u6bd4\u8f83\u7b26\u5408\u6211\u5fc3\u610f\u7684\uff0c\u4e8e\u662f\u6253\u7b97\u81ea\u5df1\u5199\u4e00\u4e2a\uff0cvim script \u592a\u70e6\uff0c\u6240\u4ee5\u6211\u7684\u60f3\u6cd5\u662f\u4f7f\u7528 c++ \u5b9e\u73b0\uff0c\u5728\u7ec8\u7aef\u5f53\u4e2d\u5de5\u4f5c\uff0c\u6709\u65f6\u95f4\u4e86\u518d\u8003\u8651\u901a\u8fc7\u8c03\u7528\u7684\u65b9\u5f0f\u5185\u5d4c\u5230 vim \u91cc\uff0c\u6216\u8005\u662f\u7528 Qt \u52a0\u4e2a\u56fe\u5f62\u5316\u754c\u9762\u76f4\u63a5\u5c01\u88c5\u6210\u5e94\u7528\u3002</p> <p>\u6709\u4e00\u4e2a\u53eb Nerdcommenter \u7684\u63d2\u4ef6\uff0c\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e9b\u5feb\u901f\u6ce8\u91ca\u7684\u529f\u80fd\uff0c\u7ecf\u8fc7\u4ee5\u4e0b\u914d\u7f6e\u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u7528 leader \u952e\u6765\u5b9e\u73b0\u6ce8\u91ca\uff08leader \u9ed8\u8ba4\u662f <code>\\</code>\uff09\u3002</p> <pre><code>let g:NERDCreateDefaultMappings = 1\nlet g:NERDSpaceDelims = 1\nlet g:NERDCompactSexyComs = 1\nlet g:NERDDefaultAlign = 'left'\nlet g:NERDAltDelims_java = 1\nlet g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }\nlet g:NERDCommentEmptyLines = 1\nlet g:NERDTrimTrailingWhitespace = 1\nlet g:NERDToggleCheckAllLines = 1\n</code></pre> <p>\u5c31\u53ea\u9700\u8981\u8bb0\u4f4f <code>\\ci</code> \u4ee5\u53ca <code>\\cc</code> \u5373\u53ef\uff08<code>\\</code> \u662f <code>&lt;leader&gt;</code> \u952e\uff09\u3002</p> <p>\u8fd8\u6709\u4e00\u4e2a\u4e8b\u60c5\u662f\uff0c\u6211\u4e0d\u559c\u6b22\u5728\u6211\u7684\u4ee3\u7801\u6587\u4ef6\u5939\u91cc\u653e <code>~un, swp</code> \u4e4b\u7c7b\u7684\u6587\u4ef6\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u4e9b\u6587\u4ef6\u8fd8\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u628a\u5b83\u4eec\u5b58\u5728\u4e00\u4e2a\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u7684\u8bbe\u7f6e\uff1a</p> <pre><code>set backup swapfile undofile\nset backupdir=C:\\Users\\Administrator\\.vimtmp\\backup\nset undodir=C:\\Users\\Administrator\\.vimtmp\\undo\nset directory=C:\\Users\\Administrator\\.vimtmp\\swp\n</code></pre> <p>\u5f53\u7136\uff0c\u5982\u679c\u63d0\u793a\u4e86\u65e0\u6cd5\u5199\u5165\uff0c\u5efa\u8bae\u68c0\u67e5\u4e00\u4e0b\u8def\u5f84\u683c\u5f0f\u662f\u4e0d\u662f\u6b63\u786e\u7684\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u770b <code>:help backupdir</code>\uff0c\u6216\u8005\u662f\u628a\u5f53\u524d\u6587\u4ef6\u539f\u6709\u7684 <code>~, ~un, .swp</code> \u6587\u4ef6\u5220\u6389\u89e3\u51b3\u51b2\u7a81\u5c31\u884c\u3002</p> <p>\u53e6\u5916\uff0cvim \u81ea\u5e26\u4e86\u4e00\u4e2a\u6587\u4ef6\u7ba1\u7406\u7cfb\u7edf netrw\uff0c\u6211\u5f88\u559c\u6b22\uff0c\u8fd9\u4e2a\u653e\u5230\u5355\u72ec\u7684\u4e00\u7bc7\u6587\u7ae0\u91cc\u6765\u5199\u3002</p> <p>last but not least, \u6211\u5199\u4e86\u4e00\u4e2a\u4e3b\u9898\uff0c\u611f\u89c9\u633a\u723d\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u7528\u4e00\u7528\uff1a hylwxqwq/yuyuko.vim\u3002</p> <p>\u5f53\u7136\u6709\u4e00\u4e9b\u5730\u65b9\u7684 syntax \u56e0\u4e3a\u6211\u8fd8\u6ca1\u53d1\u73b0\u6240\u4ee5\u53ef\u80fd\u4f1a\u663e\u793a\u4e3a\u9752\u8272\uff0c\u770b\u8d77\u6765\u4e0d\u592a\u723d\uff0c\u53d1\u73b0\u4e86\u53ef\u4ee5 open an issue.</p> <p>upd: \u4fee\u590d\u4e86\uff0c\u5e76\u4e14\u8c03\u6574\u4e86\u5bf9\u6bd4\u5ea6\uff0c\u73b0\u5728\u66f4\u8212\u670d\u4e00\u70b9\u3002</p> <p>\u6700\u8fd1\u5c1d\u8bd5\u4e86 fzf \u548c fzf.vim\u3002</p> <p>\u611f\u89c9\u5f88\u597d\u7528\u554a\uff01\u53ea\u662f\u4f3c\u4e4e\u5b83\u4e0d\u592a\u80fd\u548c\u6211\u7684 yuyuko.vim \u9002\u914d\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u6ca1\u505a\u975e 256 \u8272\u7684\u652f\u6301\u3002</p> <p>\u6709\u65f6\u95f4\u518d\u6765\u5f04\u4e00\u4e0b\u597d\u4e86\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u8001\u662f <code>Files:</code> \u592a\u9ebb\u70e6\uff0c\u521a\u597d\u53d1\u73b0\u4e00\u4e2a <code>[N]f</code> \u7a7a\u7740\u6ca1\u5565\u7528\uff0c\u5c31\u62ff\u6765\u6620\u5c04\u4e86\u4e00\u4e0b\u3002</p> <p>\u53c8\u7a81\u7136\u60f3\u5230\u6211\u7ecf\u5e38\u76f4\u63a5 <code>e ./</code>\uff0c\u4e3a\u5565\u4e0d\u63d0\u5347\u4e00\u4e0b\u6548\u7387\uff0c\u76f4\u63a5\u6620\u5c04\u5462\uff1f\u4e8e\u662f\u5728 <code>_vimrc</code> \u91cc\u9762\u5c31\u53c8\u591a\u4e86\u51e0\u884c\uff1a</p> <pre><code>nmap f :FZF&lt;CR&gt;\nnmap F e ./&lt;CR&gt;\nnmap &lt;leader&gt;t :Terminal\nnmap &lt;leader&gt;n :tabnew\n</code></pre> <p>\u611f\u53f9\uff0cVim \u679c\u7136\u662f\u8d8a\u8c03\u6559\u6548\u7387\u8d8a\u9ad8\u554a\u3002</p> <p>\u66f4\u65b0\u4e86 yuyuko.vim \u5bf9 Termcolor \u7684\u9002\u914d\u3002</p> <p>\u4e4b\u524d\u4e00\u76f4\u4e0d\u77e5\u9053 <code>g:terminal_ansi_colors</code> \u662f\u4ec0\u4e48\uff0c\u4eca\u5929\u7ffb\u9605\u6587\u6863\u5e76\u5b9e\u9a8c\u4e4b\u540e\u53d1\u73b0\uff0c\u4f3c\u4e4e\u662f\u7ed9 vim \u4e2d\u542f\u52a8\u7684\u7ec8\u7aef\u9ed8\u8ba4\u63d0\u4f9b\u7684\u989c\u8272\u5217\u8868\u3002</p> <p>\u662f\u4e00\u4e2a\u5305\u542b\u5341\u516d\u4e2a HEX code \u7684\u5217\u8868\uff0c\u7f16\u53f7 0~15\uff0c\u7ec8\u7aef\u542f\u52a8\u7684\u65f6\u5019\u5982\u679c\u8f93\u51fa\u989c\u8272\u6587\u672c\uff0c\u5c31\u4f1a\u53d1\u8d77\u5bf9\u8fd9\u4e2a\u989c\u8272\u7684\u8bf7\u6c42\u3002</p> <p>\u6240\u4ee5\u4e4b\u524d\u6ca1\u52a0\u8fd9\u4e2a\u9002\u914d\u7684\u65f6\u5019\uff0cfzf \u6ca1\u6709\u663e\u793a\u51fa\u5bf9\u5e94\u7684\u989c\u8272\u7684\u95ee\u9898\u5c31\u5f97\u5230\u4e86\u89e3\u51b3\u3002</p> <p>\u6211\u5199\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u8bcd\u9891\u7edf\u8ba1\uff0c\u5bf9 <code>yuyuko.vim</code> \u7edf\u8ba1\u4e86\u4e00\u4e0b\u5e38\u7528\u989c\u8272\uff0c\u7136\u540e\u653e\u8fdb\u53bb\u4e4b\u540e\u505a\u4e86\u4e00\u4e9b\u8c03\u6574\uff0cfzf \u5c31\u652f\u6301 yuyuko.vim \u7684 theme \u4e86\uff01</p> <p>\u4e00\u5f00\u59cb\u5176\u5b9e\u53ea\u662f\u60f3\u6539 fzf \u7684\u9002\u914d\uff0c\u540e\u6765\u53d1\u73b0 fzf \u672c\u8d28\u662f\u8c03\u7528\u4e86\u4e00\u4e2a cmd\uff0c\u6240\u4ee5\u542f\u52a8\u7684 cmd \u5f53\u4e2d\u7684\u5e26\u989c\u8272\u6587\u672c\u4e5f\u662f yuyuko.vim \u7684\u4e3b\u9898\u4e86\uff0c\u5305\u62ec\u4e0a\u9762\u8c03\u7528\u7684 msys2 \u548c gitbash.</p> <p>upd: \u56de\u5bb6\u4e4b\u540e\u53d1\u73b0 fzf \u5bf9\u4e2d\u6587\u7684\u652f\u6301\u6709\u95ee\u9898\uff1a#issue 1377\u3002</p> <p>\u800c\u4e14\u4f5c\u8005\u5495\u5495\u5495\u4e86\u597d\u4e45\u4e86\uff0c\u6211\u4e5f\u6ca1\u90a3\u4e2a\u80fd\u529b\u81ea\u5df1 fork \u7136\u540e\u4fee\u590d\uff0c\u6240\u4ee5\u6211\u627e\u5230\u4e86\u53e6\u5916\u7684\u4e00\u4e2a\u66ff\u4ee3\u54c1 vim-clap\u3002</p> <p>\u56e0\u4e3a LeaderF \u5b89\u88c5\u548c\u4f9d\u8d56\u592a\u9ebb\u70e6\uff0c\u6211\u7684 gvim \u7684 <code>python3</code> \u652f\u6301\u603b\u662f\u5f04\u4e0d\u597d\uff0c\u7136\u540e CtrlP \u53c8\u592a\u6162\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u914d\u7f6e\u4e3b\u9898\u4e5f\u633a\u65b9\u4fbf\u7684\uff0c\u901f\u5ea6\u548c FZF \u5dee\u4e0d\u591a\uff0c\u529f\u80fd\u751a\u81f3\u66f4\u5f3a\u5927\uff0c\u800c\u4e14\u5bf9\u4e2d\u6587\u7684\u652f\u6301\u6ca1\u95ee\u9898\uff08\u6bd5\u7adf\u662f\u56fd\u4eba\u4f5c\u8005\uff09</p> <p>\u7136\u540e\u5c31 fork \u4e86\u4e00\u4e0b\u539f repo \u7684 default \u4e3b\u9898\uff0c\u6539\u4e86\u4e00\u4e2a\u9002\u5408\u6211\u7684\u914d\u8272\uff1ayuyuko-clap\u3002</p> <p>\u4e0d\u8fc7\u73b0\u5728\u91cc\u9762\u8fd8\u6709\u4e00\u4e9b\u90e8\u5206\u4f9d\u8d56\u4e8e yuyuko.vim \uff08\u56e0\u4e3a\u7528\u4e86 <code>hi! link</code>\uff09\uff0c\u53cd\u6b63\u73b0\u5728\u53ea\u6709\u6211\u4e00\u4e2a\u4eba\u7528\uff0c\u4ee5\u540e\u518d\u8bf4\u4fee\u590d\u7684\u4e8b\u60c5\uff08\uff09</p> <p>\u53e6\u5916\u53d1\u73b0\u4e86 <code>vimtweak.dll</code> \u8fd9\u4e2a\u4e1c\u897f\uff0c\u53ef\u4ee5\u652f\u6301 gvim \u7684\u900f\u660e\uff0c\u539f\u7406\u597d\u50cf\u662f Vim \u53ef\u4ee5\u8c03\u7528\u5916\u90e8\u6269\u5c55\u51fd\u6570\uff0cdll \u672c\u8d28\u662f msvc \u7f16\u8bd1\u51fa\u6765\u7684\u4e00\u4e2a\u6269\u5c55\u5e93\uff0c\u6709\u4eba\u7528 msvc \u5199\u4e86\u7a97\u53e3\u900f\u660e\uff0c\u7136\u540e\u52a0\u4e86\u8fdb\u6765\uff0cvim \u5c31\u53ef\u4ee5\u8c03\u7528\u4e86\u3002</p> <p>\u73b0\u5728 vimrc \u591a\u4e86\u8fd9\u4e9b\uff1a</p> <pre><code>let g:clap_theme = 'yuyuko_clap'\n\ncommand! W :Clap windows\ncommand! GitTerm :term bash.exe --login -i\n\nnmap F :e ./&lt;CR&gt;\nnmap f :Clap files&lt;CR&gt;\nnmap &lt;leader&gt;f :Clap blines&lt;CR&gt;\nnmap &lt;leader&gt;F :Clap buffers&lt;CR&gt; \nnmap &lt;leader&gt;n :tabnew&lt;CR&gt;\nnmap &lt;leader&gt;tg :GitTerm&lt;CR&gt;\nnmap &lt;leader&gt;tc :terminal&lt;CR&gt;\n\" \u8bb0\u5f97\u52a0 PATH\n\nfunc EnableTransparency()\n  silent exec libcallnr(\"vimtweak.dll\", \"SetAlpha\", 200)\nendfunc\nfunc DisableTransparency()\n  silent exec libcallnr(\"vimtweak.dll\", \"SetAlpha\", 255)\nendfunc\n\nmap &lt;F9&gt; &lt;ESC&gt;:call EnableTransparency()&lt;CR&gt;\nmap &lt;F10&gt; &lt;ESC&gt;:call DisableTransparency()&lt;CR&gt;\n</code></pre> <p>\u6700\u8fd1\u5728\u9002\u5e94 vim \u7684\u6eda\u52a8\uff0c\u4f46\u662f\u53d1\u73b0\u8fd9\u4e2a\u5207\u5c4f\u4e00\u6837\u7684\u611f\u89c9\uff0c\u6bcf\u6b21\u6eda\u52a8\u5b8c\u90fd\u53cd\u5e94\u4e0d\u8fc7\u6765\u81ea\u5df1\u5728\u90a3\u91cc\uff08got lost\uff09</p> <p>\u6240\u4ee5\u627e\u5230\u4e86\u4e4b\u524d\u7528\u8fc7\u7684 smooth-scroll\uff0c\u633a\u597d\u7528\u7684\u3002</p>"}, {"location": "misc/vim-usage/", "title": "Vim \u7b80\u660e\u4f7f\u7528\u6307\u5317", "text": "<p>Practise more.</p> <p>\u8003\u573a Vimrc:</p> <pre><code>syntax on\nset ai ts=4 sts=4 sw=4 nu rnu mouse=a ruler\nset ar acd backup swapfile undofile\nset guifont=Consolas:h12:cANSI\nset timeoutlen=666 ttimeoutlen=0\nset backspace=indent,eol,start\n\ninoremap [ []&lt;Esc&gt;i\ninoremap {&lt;CR&gt; {}&lt;Esc&gt;i&lt;CR&gt;&lt;ESC&gt;O\ninoremap ( ()&lt;Esc&gt;i\ninoremap \" \"\"&lt;Esc&gt;i\ninoremap ' ''&lt;Esc&gt;i\n</code></pre>"}, {"location": "misc/vim-usage/#_1", "title": "\u7f16\u8f91\u6a21\u5f0f", "text": ""}, {"location": "misc/vim-usage/#normal-mode", "title": "Normal Mode", "text": "<p>\u4e00\u822c Vim \u7684\u547d\u4ee4\u90fd\u662f\u5728 Normal mode \u4e0b\u9762\u5b8c\u6210\u7684\u3002</p> <p>\u6240\u6709\u6a21\u5f0f\u6309 <code>ESC</code> \u90fd\u53ef\u4ee5\u8fdb\u5165 Normal mode\u3002</p> <p>Normal mode \u4e0d\u53ef\u4ee5\u8fdb\u884c\u8f93\u5165\uff0c\u952e\u76d8\u4e0a\u6240\u6709\u7684\u5b57\u6bcd\u57fa\u672c\u90fd\u662f\u4e2a\u547d\u4ee4\u3002</p> <p>\u4e5f\u53ef\u4ee5\u7528 <code>:</code> \u8fdb\u5165 Command mode\u3002</p> <p>\u4e0b\u9762\u7684\u547d\u4ee4\u4f1a\u6807\u8bb0 <code>[N]</code> \u8868\u793a\u8be5\u5feb\u6377\u952e\u5728 Normal mode \u4e0b\u53ef\u7528\u3002</p>"}, {"location": "misc/vim-usage/#command-mode", "title": "Command Mode", "text": "<p>\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u6587\u4ef6\u64cd\u4f5c\uff0c\u5c5e\u6027\u7684\u8bbe\u7f6e\u3002</p> <p>\u8fd8\u53ef\u4ee5\u5229\u7528 <code>:!&lt;Command&gt;</code> \u5728\u4e00\u4e2a\u5916\u90e8\u7ec8\u7aef\u91cc\u9762\u6267\u884c <code>&lt;Command&gt;</code> \u547d\u4ee4\u3002</p> <p>\u6bd4\u5982 <code>!g++ % -o %&lt; -Wall -std=c++17 -O2 -g</code> \u5c31\u53ef\u4ee5\u7f16\u8bd1\u5f53\u524d\u7684\u6587\u4ef6\uff08cpp\uff09\u3002</p>"}, {"location": "misc/vim-usage/#insert-mode", "title": "Insert Mode", "text": "<p>\u6b63\u5e38\u7684\u8f93\u5165\u6a21\u5f0f\uff0cVim Easy \u53ea\u6709\u8fd9\u4e2a\u6a21\u5f0f\u3002</p>"}, {"location": "misc/vim-usage/#visual-mode", "title": "Visual Mode", "text": "<p>\u9009\u62e9\u6a21\u5f0f\uff0c\u6709\u4e09\u79cd\u3002</p> <p>\u7b2c\u4e00\u79cd\u662f\u5728 Normal mode \u4e0b\u6309 <code>v</code> \u8fdb\u5165\u7684\u53ef\u89c6\u6a21\u5f0f\uff0c\u8fd9\u4e2a\u5c31\u662f\u7c7b\u4f3c\u5176\u4ed6 Editor \u7684\u9009\u62e9\u529f\u80fd\u3002</p> <p>\u7b2c\u4e8c\u79cd\u662f\u6309 <code>V</code> \u4e5f\u5c31\u662f <code>S-v</code> \u8fdb\u5165\u7684\u884c\u53ef\u89c6\u6a21\u5f0f\uff0c\u8fd9\u4e2a\u6a21\u5f0f\u4f1a\u81ea\u52a8\u9009\u62e9\u5149\u6807\u6240\u5728\u884c\uff0c\u5e76\u4e14\u4f1a\u590d\u5236\u6362\u884c\u7b26\u3002</p> <p>\u7b2c\u4e09\u79cd\u662f\u6309 <code>C-v</code> \u8fdb\u5165\u7684\u5757\u53ef\u89c6\u6a21\u5f0f\uff0c\u8fd9\u4e2a\u6a21\u5f0f\u4f1a\u9009\u4e2d\u4e00\u4e2a\u5757\uff08\u77e9\u5f62\uff09\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u5b9e\u4f8b\uff1a</p> <pre><code>    std::cin.tie(0) -&gt; sync_with_stdio(false);\nstd::cin.exceptions(cin.failbit | cin.badbit);\n</code></pre> <p>\u6211\u4eec\u60f3\u628a\u5b83\u4eec\u524d\u9762\u7684 <code>std::</code> \u5168\u90e8\u5220\u6389\uff0c\u5c31\u53ef\u4ee5\u7528\u5757\u53ef\u89c6\u6a21\u5f0f\u9009\u4e2d\u7136\u540e\u5220\u9664\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4e00\u4e2a\u4e2a\u67e5\u627e\u7136\u540erepalce\u6389\u5b83\u4eec\uff09\u3002</p>"}, {"location": "misc/vim-usage/#replace-mode", "title": "Replace Mode", "text": "<p>\u6309 <code>R</code> \u8fdb\u5165\uff0c\u987e\u540d\u601d\u4e49\u662f\u7528\u6765\u6279\u91cf replace \u7684\u3002</p>"}, {"location": "misc/vim-usage/#_2", "title": "\u7f16\u8f91\u5668\u5feb\u6377\u952e", "text": ""}, {"location": "misc/vim-usage/#_3", "title": "\u79fb\u52a8\u7c7b", "text": "<ul> <li><code>[N/V] h j k l</code> \uff1a \u4e0a\u4e0b\u5de6\u53f3\uff08\u53ef\u4ee5\u5728\u524d\u9762\u52a0\u4e0a\u6570\u5b57\u8868\u793a\u91cd\u590d\u591a\u5c11\u6b21\uff0c\u6bd4\u5982 \\(3l\\) \u5c31\u662f\u5f80\u5de6\u79fb\u52a8\u4e09\u4e2a\u5b57\u7b26\uff08Vim \u7684\u6240\u6709\u547d\u4ee4\u57fa\u672c\u90fd\u652f\u6301\u8fd9\u4e2a\uff09\uff09</li> <li><code>[N/V] gg</code> \uff1a\u8df3\u5230\u6587\u4ef6\u7684\u5f00\u5934\u3002</li> <li><code>[N/V] G</code>\uff1a\u8df3\u5230\u6587\u4ef6\u7684\u7ed3\u5c3e</li> <li><code>[N/V] &lt;Number&gt;G  / :&lt;Number&gt;</code> \uff1a \u8df3\u5230\u7b2c <code>&lt;Number&gt;</code> \u884c</li> <li><code>[N/V] &lt;Number&gt;|</code>\uff1a\u628a\u5149\u6807\u79fb\u52a8\u5230\u7b2c <code>&lt;Number&gt;</code> \u5217\u4e0a</li> <li><code>[N/V] Backspace Space</code>\uff1a \u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a\u5b57\u7b26/\u4e0b\u4e00\u4e2a\u5b57\u7b26</li> <li><code>[N/V] + Enter</code>\uff1a\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26</li> <li><code>[N/V] -</code>\uff1a\u79fb\u52a8\u5230\u4e0a\u4e00\u884c\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26\u3002</li> <li><code>[N] f&lt;Char&gt;</code>\uff1a\u79fb\u52a8\u5230\u540c\u4e00\u884c\u7684\u4e0b\u4e00\u4e2a <code>&lt;Char&gt;</code> \u5b57\u7b26\u5904\u3002</li> <li><code>[N] F&lt;Char&gt;</code>\uff1a\u79fb\u52a8\u5230\u540c\u4e00\u884c\u7684\u4e0a\u4e00\u4e2a <code>&lt;Char&gt;</code> \u5b57\u7b26\u5904\u3002</li> <li><code>[N/V] 0/^/$</code> \uff1a\u79fb\u52a8\u5230\u786c/\u8f6f\u884c\u5934/\u5c3e\u3002(\u8f6f\u884c\u9996\u4e0d\u5305\u62ec\u7f29\u8fdb\uff0c\u5373\u6307\u7b2c\u4e00\u4e2a\u53ef\u89c1\u5b57\u7b26\u3002)</li> <li><code>[N/V] H</code>: \u628a\u5149\u6807\u79fb\u5230\u5c4f\u5e55\u6700\u9876\u7aef\u4e00\u884c\u3002</li> <li><code>[N/V] M</code>: \u628a\u5149\u6807\u79fb\u5230\u5c4f\u5e55\u4e2d\u95f4\u4e00\u884c\u3002</li> <li><code>[N/V] L</code>: \u628a\u5149\u6807\u79fb\u5230\u5c4f\u5e55\u6700\u5e95\u7aef\u4e00\u884c\u3002</li> <li><code>[N/V] b/B</code>\uff1a\u8df3\u5230\u4e0a\u4e00\u4e2a\u5355\u8bcd\u5f00\u5934\uff08\u5982\u679c\u5728\u67d0\u4e2a\u5355\u8bcd\u91cc\uff0c\u4f1a\u8df3\u5230\u8fd9\u4e2a\u5355\u8bcd\u5f00\u5934\uff09</li> <li><code>[N/V] ge/E</code>\uff1a\u8df3\u5230\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u7ed3\u5c3e\u3002</li> <li><code>[N/V] w/W</code>\uff1a\u8df3\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u5f00\u5934</li> <li><code>[N/V] e/E</code>\uff1a\u8df3\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7ed3\u5c3e</li> <li>\u8fd9\u56db\u4e2a\u952e\u7684\u5c0f\u5199\u662f\u53ea\u8981\u6709\u8fd0\u7b97\u7b26\u6216\u8005\u7a7a\u683c\u5c31\u5206\u5272\uff0c\u5927\u5199\u53ea\u4ee5\u7a7a\u683c\u4e3a\u6807\u51c6\u5212\u5206\u3002</li> <li><code>[N/V] %</code>\uff1a\u8df3\u8f6c\u5230\u5339\u914d\u7684\u62ec\u53f7\u7684\u5f00\u5934\u3002</li> <li><code>[N/V] ()</code>\uff1a\u8df3\u8f6c\u5230\u8fd9\u4e00\u53e5\u7684\u5f00\u5934\u6216\u8005\u7ed3\u5c3e\uff08\u4f3c\u4e4e\u53ea\u5bf9\u82f1\u6587\u53e5\u53f7\u8d77\u4f5c\u7528\uff09</li> <li><code>[N/V] {}</code>\uff1a\u8df3\u8f6c\u5230\u67d0\u4e00\u6bb5\u7684\u5f00\u5934\u6216\u8005\u7ed3\u5c3e\uff08\u4ee5\u7a7a\u683c\u9694\u5f00\uff09</li> </ul>"}, {"location": "misc/vim-usage/#_4", "title": "\u7eaf\u7f16\u8f91\u7c7b", "text": "<ul> <li><code>[N] i</code>\uff1a\u8fdb\u5165 Insert Mode\uff08\u5728\u5f53\u524d\u5149\u6807\u5757\u7684\u5de6\u4fa7\u63d2\u5165\uff09</li> <li><code>[N] a</code>\uff1a\u8fdb\u5165 Insert Mode\uff08\u5728\u5f53\u524d\u5149\u6807\u5757\u7684\u53f3\u4fa7\u63d2\u5165\uff09</li> <li><code>[N] O</code>\uff1a\u5728\u5f53\u524d\u884c\u4e0a\u65b9\u65b0\u5efa\u4e00\u884c\uff0c\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\uff0c\u5149\u6807\u5904\u4e8e\u884c\u9996\uff08\u9664\u975e\u6709 auto indent\uff09</li> <li><code>[N] o</code>\uff1a\u5728\u5f53\u524d\u884c\u4e0b\u65b9\u65b0\u5efa\u4e00\u884c\uff0c\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\uff0c\u5149\u6807\u5904\u4e8e\u884c\u9996\uff08\u9664\u975e\u6709 auto indent\uff09</li> <li><code>[N] A</code>\uff1a\u5c06\u5149\u6807\u79fb\u52a8\u81f3\u672c\u884c\u672b\u5c3e\uff0c\u540c\u65f6\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u3002</li> <li><code>[N] I</code>\uff1a\u5c06\u5149\u6807\u79fb\u52a8\u81f3\u672c\u884c\u9996\uff0c\u540c\u65f6\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u3002</li> <li><code>[N] S</code>\uff1a\u5220\u9664\u672c\u884c\u7684\u6240\u6709\u6587\u5b57\uff0c\u540c\u65f6\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\u3002</li> <li><code>[N] u/C-r</code>\uff1aUndo \u548c Redo\u3002</li> <li><code>[N] ~</code>\uff1a\u53cd\u8f6c\u5149\u6807\u5757\u5b57\u7b26\u7684\u5927\u5c0f\u5199\u3002</li> <li><code>[V] &lt;&gt;</code>\uff1a\u51cf\u5c11\u6216\u8005\u589e\u52a0\u9009\u4e2d\u5757\u7684\u7f29\u8fdb</li> <li><code>[N] &lt;&lt; &gt;&gt;</code>\uff1a\u5f53\u524d\u884c\u3002</li> <li><code>[N] .</code>\uff1a\u5728\u5149\u6807\u4f4d\u7f6e\u8f93\u5165\u4e0a\u4e00\u6b21\u8fdb\u5165 INSERT \u6a21\u5f0f\u65f6\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff08\u592a\u597d\u7528\u4e86\uff01\uff09</li> </ul>"}, {"location": "misc/vim-usage/#_5", "title": "\u590d\u5236\u7c98\u8d34\u7c7b", "text": "<ul> <li><code>[V] y</code>\uff1a\u590d\u5236\u5728\u53ef\u89c6\u6a21\u5f0f\u4e0b\u9009\u4e2d\u7684\u6587\u672c\uff08\u53ef\u4ee5\u52a0\u7ec4\u5408\u952e\u6765\u590d\u5236\u4e00\u4e2a\u5355\u8bcd/\u53e5\u5b50\u4e4b\u7c7b\u7684\uff0c\u4e0d\u8fc7\u6211\u4e0d\u548b\u7528\u5c31\u4e0d\u5199\u4e86\uff09\u3002</li> <li><code>[N/V] yy</code> \u590d\u5236\u5f53\u524d\u884c\u3002</li> <li><code>[N] ggVG</code> \uff1a\u8fd9\u662f\u4e00\u4e2a\u7ec4\u5408\u952e\uff0c\u7b49\u4ef7\u4e8e\u5168\u6587\u590d\u5236\uff08\u4f1a\u591a\u590d\u5236\u4e00\u4e2a\u6362\u884c\u7b26\uff09\u3002</li> <li><code>[N/V] d</code>\uff1a\u526a\u5207\uff08\u9700\u8981\u7c7b\u4f3c <code>d&lt;Number&gt;&lt;Move&gt;</code> \u7684\u7ec4\u5408\u952e\uff0c\u6bd4\u5982 <code>d8l</code> \u5c31\u662f\u5220\u9664\u5149\u6807\u5757\u53f3\u8fb98\u4e2a\u5b57\u7b26\uff08\u5305\u62ec\u5149\u6807\u5757\u672c\u8eab\uff08\u5149\u6807\u5b9e\u9645\u4e0a\u662f\u5728\u5149\u6807\u5757\u7684\u5de6\u8fb9\uff09\uff09\uff0c<code>d8h</code> \u5219\u662f\u5de6\u8fb9\uff08\u4e0d\u542b\u5149\u6807\u5757\uff09\uff0c<code>dG</code> \u662f\u4ece\u5f53\u524d\u884c\u4e00\u76f4\u5220\u5230\u6587\u4ef6\u7ed3\u5c3e\uff09\u3002</li> <li><code>[N/V] dd</code>\uff1a\u526a\u5207\u4e00\u6574\u884c\u3002</li> <li><code>[N/V] x&lt;Number&gt;</code>\uff1a\u5220\u9664\u5149\u6807\u53f3\u8fb9 <code>&lt;Number&gt;</code> \u4e2a\u5b57\u7b26\uff08\u5149\u6807\u662f\u5728\u5149\u6807\u5757\u7684\u5de6\u8fb9\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u76f4\u63a5\u6309 <code>x</code> \u4f1a\u5220\u9664\u5149\u6807\u5757\u9009\u4e2d\u7684\u5b57\u7b26\uff09\u3002</li> <li><code>[N/V] X&lt;Number&gt;</code>\uff1a\u5de6\u8fb9\u3002</li> <li><code>[C] :&lt;i&gt;,&lt;j&gt; dd</code>\uff1a\u526a\u5207\u7b2c \\(i\\) \u884c\u5230\u7b2c \\(j\\) \u884c\u7684\u6240\u6709\u6587\u672c\u3002</li> <li><code>[N] p/P</code> \uff1a\u5728\u5149\u6807\u7684\u540e/\u524d\u4f4d\u7f6e\u7c98\u8d34\uff08\u6ce8\u610f\u662f\u5426\u590d\u5236\u4e86\u6362\u884c\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>reg</code> \u67e5\u770b\u5bf9\u5e94\u5bc4\u5b58\u5668\u91cc\u7684\u4e1c\u897f\uff09</li> <li><code>[N/V] \"&lt;char&gt;y</code>\uff1a\u590d\u5236\u5230 <code>&lt;char&gt;</code> \u5bc4\u5b58\u5668\u5f53\u4e2d\uff08<code>0 ~ 9</code> \u7684\u6570\u5b57\uff0c<code>a ~ z/A ~ Z</code> \u7684\u5b57\u6bcd\uff0c<code>+-*</code>\uff09\uff0c\u7c98\u8d34\u540c\u7406\u3002</li> </ul> <p><code>*(win)/+(linux)</code> \u662f\u5f53\u524d\u7f13\u51b2\u533a\uff0c\u7cfb\u7edf\u526a\u8d34\u677f\u4e5f\u4f1a\u5230\u8fd9\u91cc\u9762\u6765\u3002</p> <p>\u4e00\u4e2a tips\uff1a\u5982\u679c\u76f4\u63a5 <code>&lt;S-v&gt;$d</code> \u662f\u4f1a\u5e26\u4e0a\u6362\u884c\u7b26\u7684\uff0c\u4e0d\u60f3\u8981\u53ef\u4ee5 <code>$</code> \u4e4b\u540e <code>h</code>\u3002</p>"}, {"location": "misc/vim-usage/#_6", "title": "\u6587\u4ef6\u64cd\u4f5c\u7c7b", "text": "<ul> <li><code>:file filename</code>\uff1a\u547d\u540d\u5f53\u524d\u6587\u4ef6\u4e3a <code>filename</code>\u3002</li> <li><code>:e file</code>\uff1a\u5173\u95ed\u5f53\u524d\u7684\u6587\u4ef6\uff0c\u6253\u5f00\u6587\u4ef6 <code>file</code>\uff08\u53ef\u4ee5\u662f\u76ee\u5f55\uff0c\u53ef\u4ee5\u6307\u5b9a\u6587\u4ef6\u4f4d\u7f6e\uff09</li> <li><code>:e#</code>\uff1a\u56de\u5230\u4e0a\u4e00\u4e2a\u6587\u4ef6</li> <li><code>:e</code>\uff1a\u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u6587\u4ef6\u3002</li> <li><code>:w</code>\uff1a\u5199\u5165\u5f53\u524d\u6587\u4ef6\u3002</li> <li><code>:q</code>\uff1a\u9000\u51fa\u3002</li> <li><code>:wq</code>\uff1a\u4fdd\u5b58\u5e76\u9000\u51fa\u3002</li> <li><code>:saveas filename</code>\uff1a\u53e6\u5b58\u4e3a\u3002 </li> </ul>"}, {"location": "misc/vim-usage/#_7", "title": "\u5c4f\u5e55\u64cd\u4f5c\u7c7b", "text": "<ul> <li><code>[N]C-f</code>: \u4e0b\u7ffb\u4e00\u5c4f(forward)\u3002</li> <li><code>[N]C-b</code>: \u4e0a\u7ffb\u4e00\u5c4f(back)\u3002</li> <li><code>[N]C-d</code>: \u4e0b\u7ffb\u534a\u5c4f(down)\u3002</li> <li><code>[N]C-u</code>: \u4e0a\u7ffb\u534a\u5c4f(up)\u3002</li> <li><code>[N]C-e</code>: \u5411\u4e0b\u6eda\u52a8\u4e00\u884c\u3002</li> <li><code>[N]C-y</code>: \u5411\u4e0a\u6eda\u52a8\u4e00\u884c\u3002</li> <li><code>[N]zz</code>: \u5c06\u5f53\u524d\u884c\u79fb\u52a8\u5230\u5c4f\u5e55\u4e2d\u592e\u3002</li> <li><code>[N]zt</code>: \u5c06\u5f53\u524d\u884c\u79fb\u52a8\u5230\u5c4f\u5e55\u9876\u7aef(top)\u3002</li> <li><code>[N]zb</code>: \u5c06\u5f53\u524d\u884c\u79fb\u52a8\u5230\u5c4f\u5e55\u5e95\u7aef(buttom)\u3002</li> <li><code>[N]C-w H/J/K/L</code> \uff1a\u5c06\u5f53\u524d\u7a97\u53e3\u79fb\u52a8\u5230\u5c4f\u5e55\u7684\u5de6/\u4e0b/\u4e0a/\u53f3\u5904\u3002</li> <li><code>[N]C-w h/j/k/l</code> \uff1a\u5207\u6362\u5230\u5de6/\u4e0b/\u4e0a/\u53f3\u7684\u7a97\u53e3\u3002</li> <li><code>[N]C-w C-w</code>\uff1a\u6309\u987a\u5e8f\u5207\u6362\u7a97\u53e3\u3002</li> <li><code>[N]C-w -+&lt;&gt;</code>\uff1a\u66f4\u6539\u5f53\u524d\u7a97\u53e3\u5927\u5c0f</li> <li><code>[N]C-w =</code>\uff1a\u5e73\u5747\u5206\u914d\u5927\u5c0f\u3002</li> <li><code>:split</code>\uff1a\u5206\u5272\u5f53\u524d\u7684\u7a97\u53e3\u4e3a\u4e24\u4e2a\u7a97\u53e3\uff08\u6c34\u5e73\u5206\u5272\uff09\uff0c\u53ef\u4ee5\u7528 <code>:set scb</code> \u6253\u5f00\u540c\u6b65\u6eda\u52a8\u3002</li> <li><code>:split &lt;filename&gt;</code>\uff1a\u6c34\u5e73\u5206\u5272\u5e76\u6253\u5f00\u65b0\u7684\u6587\u4ef6\u3002</li> <li><code>:new</code>\uff1a\u6c34\u5e73\u6253\u5f00\u4e00\u4e2a\u65b0\u7a97\u53e3\u5e76\u7f16\u8f91\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u3002</li> <li><code>:vsplit/:vnew</code>\uff1a\u7ad6\u76f4\u5206\u5272\u3002</li> <li><code>:only</code>\uff1a\u53ea\u4fdd\u7559\u5f53\u524d\u7a97\u53e3\u3002</li> <li><code>:close</code>\uff1a\u5173\u95ed\u5f53\u524d\u7a97\u53e3\u3002 </li> </ul>"}, {"location": "misc/vim-usage/#_8", "title": "\u591a\u6587\u4ef6\u7f16\u8f91\u7c7b", "text": "<p><code>vim a.txt b.cpp c.json</code> \u53ef\u4ee5\u540c\u65f6\u6253\u5f00\u591a\u4e2a\u6587\u4ef6\u3002</p> <ul> <li><code>:n</code> \u53ef\u4ee5\u7f16\u8f91\u4e0b\u4e00\u4e2a\u6587\u4ef6\uff0c<code>:N</code> \u53ef\u4ee5\u7f16\u8f91\u4e0a\u4e00\u4e2a\u6587\u4ef6\u3002</li> <li><code>:ls</code> \u6216\u8005 <code>:args</code> \u53ef\u4ee5\u663e\u793a\u6587\u4ef6\u5217\u8868\u3002 </li> </ul>"}, {"location": "misc/vim-usage/#_9", "title": "\u591a\u6807\u7b7e\u7f16\u8f91\u7c7b", "text": "<p>\u6ce8\u610f\u8fd9\u4e2a\u548c\u591a\u6587\u4ef6\u4e0d\u4e00\u6837\uff0c\u4e00\u4e2a\u6807\u7b7e\u9875\u91cc\u53ef\u4ee5\u6709\u591a\u4e2a\u7a97\u53e3\uff0c\u591a\u6587\u4ef6\u4e0d\u662f\u6807\u7b7e\u9875\uff0c\u53ea\u662f\u540c\u65f6\u6253\u5f00\u4e86\u591a\u4e2a\u6587\u4ef6\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u6807\u7b7e\u9875\u7c7b\u4f3c Workspace\u3002</p> <ul> <li><code>vim -p files</code>\uff1a\u6253\u5f00\u591a\u4e2a\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5360\u7528\u4e00\u4e2a\u6807\u7b7e\u9875\u3002</li> <li><code>:tabe/:tabnew</code>\uff1a\u5982\u679c\u52a0\u6587\u4ef6\u540d\uff0c\u5c31\u5728\u65b0\u7684\u6807\u7b7e\u4e2d\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\uff0c \u5426\u5219\u6253\u5f00\u4e00\u4e2a\u7a7a\u7f13\u51b2\u533a\u3002</li> <li><code>C-w gf</code>\uff1a\u5728\u65b0\u7684\u6807\u7b7e\u9875\u91cc\u6253\u5f00\u5149\u6807\u4e0b\u8def\u5f84\u6307\u5b9a\u7684\u6587\u4ef6\u3002</li> <li><code>:tabn</code>\uff1a\u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\uff0c<code>C-PageDown</code> \u4e5f\u53ef\u4ee5\u3002</li> <li><code>:tabp/tabN</code>\uff1a \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6807\u7b7e\uff0c<code>C-PageUp</code> \u4e5f\u53ef\u4ee5\u3002</li> <li><code>&lt;n&gt; gt</code>\uff1a \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\u3002\u5982\u679c\u524d\u9762\u52a0\u4e86 n\uff0c\u5c31\u5207\u6362\u5230\u7b2c n \u4e2a\u6807\u7b7e\u3002\u7b2c\u4e00\u4e2a\u6807\u7b7e\u7684\u5e8f\u53f7\u662f 1\u3002</li> <li><code>gT</code>\uff1a\u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u3002</li> <li><code>:tab split</code>\uff1a \u5c06\u5f53\u524d\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u5728\u65b0\u9875\u7b7e\u4e2d\u6253\u5f00\u3002</li> <li><code>:tabc[lose]</code>\uff1a \u5173\u95ed\u5f53\u524d\u7684\u6807\u7b7e\u9875\u3002</li> <li><code>:tabo[nly]</code>\uff1a \u5173\u95ed\u5176\u5b83\u7684\u6807\u7b7e\u9875\u3002</li> <li><code>:tabs</code>\uff1a \u5217\u51fa\u6240\u6709\u7684\u6807\u7b7e\u9875\u548c\u5b83\u4eec\u5305\u542b\u7684\u7a97\u53e3\u3002</li> <li><code>:tabm[ove] &lt;N&gt;</code>\uff1a \u5c06\u5f53\u524d\u6807\u7b7e\u9875\u79fb\u52a8\u5230\u7b2c \\(N\\) \u4e2a\u6807\u7b7e\u9875\u4e4b\u540e\u3002</li> </ul>"}, {"location": "misc/vim-usage/#_10", "title": "\u67e5\u627e/\u66ff\u6362\u7c7b", "text": "<ul> <li><code>:s/old/new</code>\uff1a\u7528 <code>new</code> \u66ff\u6362\u5f53\u524d\u884c\u7b2c\u4e00\u4e2a <code>old</code>\u3002</li> <li><code>:s/old/new/g</code>\uff1a\u7528 <code>new</code> \u66ff\u6362\u5f53\u524d\u884c\u6240\u6709\u7684 <code>old</code>\u3002</li> <li><code>:n1,n2s/old/new/g</code>\uff1a\u7528 <code>new</code> \u66ff\u6362\u5f53\u524d\u6587\u4ef6 <code>n1</code> \u884c\u5230 <code>n2</code> \u884c\u6240\u6709\u7684 <code>old</code>\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5148\u9009\u4e2d\u3002</li> <li><code>:%s/old/new/g</code>\uff1a\u7528 <code>new</code> \u66ff\u6362\u6587\u4ef6\u4e2d\u6240\u6709\u7684 <code>old</code>\u3002</li> <li><code>:%s/^/xxx/g</code>\uff1a\u5728\u6bcf\u4e00\u884c\u7684\u884c\u9996\u63d2\u5165 <code>xxx</code>\uff0c<code>^</code> \u8868\u793a\u884c\u9996\u3002</li> <li><code>:%s/$/xxx/g</code>\uff1a\u5728\u6bcf\u4e00\u884c\u7684\u884c\u5c3e\u63d2\u5165 <code>xxx</code>\uff0c<code>$</code> \u8868\u793a\u884c\u5c3e\u3002</li> </ul> <p>Tips: \u5982\u679c\u6240\u6709\u66ff\u6362\u547d\u4ee4\u672b\u5c3e\u52a0\u4e0a\u4e86 <code>c</code>\uff0c\u5219\u6bcf\u4e2a\u66ff\u6362\u90fd\u5c06\u9700\u8981\u7528\u6237\u786e\u8ba4\u3002 \u5982 <code>:%s/old/new/gc</code>\uff0c\u52a0\u4e0a <code>i</code> \u5219\u5ffd\u7565\u5927\u5c0f\u5199 <code>(ignore)</code>\u3002</p>"}, {"location": "misc/vim-usage/#_11", "title": "\u63d2\u4ef6\u6269\u5c55\u5feb\u6377\u952e\u7c7b", "text": "<ul> <li><code>[N] \\ci \\cu</code>\uff1a\u00a0\u8bbe\u7f6e\u6ce8\u91ca\u6216\u8005\u53d6\u6d88\u6ce8\u91ca\uff08Need Nerd-Commenter\uff09</li> <li><code>[N] zR</code>\uff1a\u5c55\u5f00\u6240\u6709 Folding\uff08Markdown\uff09</li> <li><code>[N/V] C-N</code>\uff1a\u9009\u4e2d\u8bcd\u6c47\u5e76\u8fdb\u5165 Visual-Multi\uff0c\u6216\u8005\u9009\u4e2d\u4e0b\u4e00\u4e2a\u5339\u914d\uff08Need Visual-Multi\uff09<ul> <li><code>[M] n/N</code>\uff1a\u83b7\u53d6\u4e0b\u4e00\u4e2a/\u4e0a\u4e00\u4e2a\u4e8b\u4ef6\u3002</li> <li><code>[M] q</code>\uff1a\u8df3\u8fc7\u5f53\u524d\u4e8b\u4ef6\u3002</li> <li><code>C-Down/Up</code> \uff1a\u521b\u5efa\u5782\u76f4\u5149\u6807\u3002</li> </ul> </li> <li><code>:MarkdownPreview</code>\uff1a\u9884\u89c8 Markdown\u3002</li> <li><code>:MarkdownPreviewStop</code>\uff1a\u505c\u6b62\u9884\u89c8\u3002</li> </ul>"}, {"location": "misc/vim-usage/#_12", "title": "\u8865\u5168", "text": "<ul> <li><code>[I]C-x C-f</code>\uff1a\u8865\u5168\u6587\u4ef6\u540d</li> </ul> <p>\u5176\u5b83\u7684\u4e0d\u5e38\u7528\u61d2\u5f97\u5199\u4e86\u3002</p>"}, {"location": "misc/vim-usage/#_13", "title": "\u5176\u4ed6\u6280\u5de7", "text": "<ul> <li><code>:pwd</code>\uff1a\u663e\u793a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002</li> <li><code>:reg</code>\uff1a\u663e\u793a register \u72b6\u6001\u3002</li> <li>\u5728\u4efb\u610f\u547d\u4ee4\u540e\u52a0\u4e0a <code>!</code> \u8868\u793a\u5f3a\u5236\u6267\u884c\uff0c\u4f8b\u5982 <code>:q!</code>\uff0c<code>:close!</code>\u3002</li> <li>\u5728\u4efb\u610f\u547d\u4ee4\u524d\u52a0\u4e0a <code>!</code> \u8868\u793a\u5728\u7ec8\u7aef\u4e2d\u6267\u884c\u547d\u4ee4\u3002</li> <li><code>:terminal</code> \u53ef\u4ee5\u5728\u5f53\u524d\u76ee\u5f55\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\uff08Windows\u4e0b\u9ed8\u8ba4 cmd\uff09\u3002</li> <li><code>:TOhtml</code> \u53ef\u4ee5\u628a\u5f53\u524d\u6587\u6863\u8f6c\u5316\u4e3a HTML\u3002 </li> <li>\u5927\u90e8\u5206\u547d\u4ee4\u524d\u52a0\u4e0a\u6570\u5b57\u8868\u793a\u91cd\u590d\u591a\u5c11\u6b21\u3002</li> <li><code>cd</code> \u53ef\u4ee5\u66f4\u6539\u5de5\u4f5c\u76ee\u5f55\u3002</li> <li>\u5728 Command \u6a21\u5f0f\u4e0b\u4f7f\u7528 Tab \u4f1a\u6709\u8865\u5168\uff08\u533a\u5206\u5927\u5c0f\u5199\uff09</li> <li><code>/xxx</code> \u53ef\u4ee5\u7528\u6765\u68c0\u7d22\u7d22 <code>xxx</code>\uff0c\u63a5\u4e0a <code>&lt;CR&gt;</code> \u53ef\u4ee5\u8df3\u5230\u4e0b\u4e00\u4e2a\u5339\u914d\u7684\u4f4d\u7f6e\uff08\u5728\u5149\u6807\u4e0b\u65b9\u641c\u7d22\uff0c\u5982\u679c\u662f\u8981\u5f80\u4e0a\u5c31\u7528 <code>?</code>\uff09\uff0c\u6211\u559c\u6b22\u5728 <code>#define int long long</code> \u4e4b\u540e <code>/int main&lt;CR&gt;</code> /xk\u3002</li> <li><code>*/#</code> \u5219\u53ef\u4ee5\u76f4\u63a5\u68c0\u7d22\u5f53\u524d\u5355\u8bcd\uff0c\u514d\u5f97\u4f60\u624b\u52a8\u8f93\u5165\u592a\u9ebb\u70e6\u3002</li> <li><code>&lt;C-o&gt;</code> \u53ef\u4ee5\u6253\u5f00\u4e0a\u4e00\u4e2a Tag\uff1f\u6211\u4e0d\u6e05\u695a Tag \u662f\u4ec0\u4e48\uff0c\u4e0d\u8fc7\u6211\u77e5\u9053\u8fd9\u4e2a\u53ef\u4ee5\u5feb\u901f\u8df3\u8f6c\u5230\u4e4b\u524d\u7f16\u8f91\u7684\u4f4d\u7f6e\uff08\u4e0d\u7ba1\u662f\u5426\u6253\u5f00\u6587\u4ef6\uff09\u3002</li> <li>Vim \u7684\u5927\u90e8\u5206\u547d\u4ee4\u90fd\u662f\u5355\u8bcd\u7684\u7f29\u5199\uff0c\u6bd4\u5982 yank, paste, quit, write.</li> <li>\u5728\u5185\u7f6e\u7ec8\u7aef\u91cc\u4f7f\u7528 vim command \u65f6\u5019\u9700\u8981\u52a0\u4e0a <code>C-w</code> \u6765\u8f6c\u4e49\u3002</li> </ul>"}, {"location": "misc/flower/as-an-artist/", "title": "05.23.23 - As an Artist", "text": "<p>Another version, comment included.</p> <p>\u6211\u77e5\u9053\u4f60\u60f3\u6765\u770b\u70b9\u4ec0\u4e48\uff0c\u4f46\u662f\u5f88\u53ef\u60dc\u8fd9\u91cc\u6ca1\u6709\u3002</p> <p>\u4f60\u7231\u600e\u4e48\u60f3\u600e\u4e48\u60f3\uff0c\u53cd\u6b63\u4e8b\u5b9e\u5c31\u662f\u8fd9\u6837\u3002</p> <p>\u5b57\u6bcd\u7684\u4e0d\u540c\u7ec4\u5408\u5f80\u5f80\u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u662f\u5b57\u5f62\u4e0a\u7684\u5dee\u5f02\u5374\u5bfc\u81f4\u89c2\u611f\u7684\u4e0d\u540c\u3002</p> <p>\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u6709\u65f6\u559c\u6b22\u5927\u5199\uff0c\u6709\u65f6\u559c\u6b22\u67d0\u4e2a\u7279\u5b9a\u7684\u7ec4\u5408\u7684\u539f\u56e0\u3002</p> \\[ \\texttt{psytrance Psycore} \\] \\[ \\texttt{Tempo tempo} \\] <p>\u629b\u5f00 Genre \u4e0d\u8c08\u3002</p> \\[ \\texttt{tyq wyx} \\] <p>\u56e0\u4e3a\u5ef6\u4f38\u7684\u4e0d\u540c\u4ece\u800c\u5bfc\u81f4\u7684\u89c2\u611f\u4e0d\u540c\u3002</p> \\[ \\texttt{Enonya enonya} \\] <p>\u56e0\u4e3a\u5927\u5199\u5b57\u6bcd\u5bfc\u81f4\u6574\u4f53\u7ed3\u6784\u91cd\u5fc3\u7684\u53d8\u5316\uff0c\u524d\u8005\u663e\u7136\u4f18\u4e8e\u540e\u8005\u3002</p> \\[ \\texttt{Spfa SPFA} \\] <p>\u540e\u8005\u7ed9\u4eba\u4ee5\u4e00\u79cd\u65b9\u6b63\u611f\uff0c\u4f5c\u4e3a\u5757\u72b6\u7269\u653e\u5728\u4ee3\u7801\u4e2d\u4ee4\u4eba\u6109\u60a6\u3002</p> <p>\u5176\u672c\u8d28\u662f\u4eba\u8111\u5bf9\u5b57\u5f62\u7684\u7c7b\u6bd4\uff0c\u5c06\u5176\u5f15\u7533\u4e3a\u4e00\u79cd\u73b0\u5b9e\u4e2d\u5b58\u5728\u7684\u4e8b\u7269\u3002</p> <p>\u6bd4\u5982 \\(\\texttt{Enonya}\\) \u7ed9\u6211\u7684\u611f\u89c9\u662f\u4e00\u628a Type-95\u3002</p> <p>\u8fd9\u5c31\u597d\u6bd4\u4f60\u64e6\u53bb\u5706\u6216\u8005\u4ec0\u4e48\u51e0\u4f55\u56fe\u5f62\u7684\u4e00\u90e8\u5206\uff0c\u4f60\u4e5f\u80fd\u81ea\u52a8\u8865\u5168\u4e00\u6837\u3002</p> <p>\u540c\u6837\uff0c\u5b57\u4f53\u7684\u5dee\u5f02\u4e5f\u662f\u5de8\u5927\u7684\uff0c\u5f88\u53ef\u60dc\u8fd9\u91cc\u5199\u4e0d\u4e0b\u3002</p> <p>\u597d\u6bd4 Ubuntu \u548c Hermit \u7ed9\u4eba\u7684\u5706\u6ed1\u5e26\u6765\u7684\u53ef\u7231\u611f\u3002</p> <p>Times New Roman \u4e0d\u9002\u5408\u4f5c\u4e3a\u7535\u5b50\u9605\u8bfb\u5b57\u4f53\uff0c\u592a\u5c16\u9510\u4e86\u3002</p> <p>Merriweather \u5219\u9002\u4e2d\uff0c\u523b\u610f\u8425\u9020\u7684\u6570\u5b57\u9ad8\u4f4e\u4e0d\u540c\uff0c\u5b9e\u9645\u662f\u6ca1\u6709\u533a\u522b\u7684\u3002</p> <p>\u9012\u8fdb\u5f0f\u7684\u4ee3\u7801\u5757\u7ed9\u6211\u4e00\u79cd\u8212\u7545\u611f</p> <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\n\n\nreturn 0;\n}\n</code></pre> <p>\u5c40\u90e8\u7684\u9012\u589e\uff0c\u518d\u6b21\u56de\u9000\uff0c\u5206\u5757\uff0c\u5206\u6bb5\uff0c\u4f18\u96c5\u3002</p> <p>\u5747\u8861\u7684\u4e2d\u5eb8\u5f0f\u601d\u60f3\uff0c\u6211\u4e0d\u5e0c\u671b\u592a\u77ed\u4e5f\u4e0d\u5e0c\u671b\u592a\u957f\u3002</p> <p>\u8fd9\u662f\u5426\u662f\u4e00\u79cd\u66f2\u89e3\uff1f</p> <p>\u6211\u65f6\u5e38\u80fd\u8fa8\u8ba4\u51fa\u8bd5\u5377\u4e0a\u4e0d\u540c\u90e8\u5206\u7684\u5b57\u4f53\uff0c\u5176\u5b9e\u662f\u5904\u4e8e\u4e00\u79cd\u5bf9\u6392\u7248\u7684\u75c5\u6001\u5f3a\u8feb\u3002</p> <p>\u5c0f\u65f6\u5019\u4f7f\u7528 Word \u65f6\uff0c\u6211\u5c31\u5341\u5206\u5acc\u5f03\uff0c\u6211\u89c9\u5f97\u8fd9\u5f88\u4e0d Elegant\u3002</p> <p>\u6211\u4e5f\u66fe\u7ecf\u60f3\u8fc7\u80fd\u4e0d\u80fd\u5f04\u51fa\u4e00\u79cd\u7cfb\u7edf\uff0c\u4f7f\u7528\u4ee3\u7801\u6765\u7ef4\u6301\u6392\u7248\uff0c\u5e76\u63a7\u5236\u5b57\u4f53\u3002</p> <p>\u8fd9\u5c31\u662f \\(\\TeX\\) \u4e86\uff0c\u6240\u4ee5\u4e3a\u4ec0\u4e48\u6211\u5f88\u5d07\u62dc\u9ad8\u5fb7\u7eb3\u5462\u3002</p> <p>\u8fd9\u4e2a\u540d\u5b57\u4f3c\u4e4e\u8fd8\u662f\u59da\u9662\u58eb\u53d6\u7684\u3002</p> <p>\u53d1\u73b0\u8fc7 LMMono \u8fd9\u4e2a\u5b57\u4f53\uff0c\u6216\u8005\u662f Inconsolata\uff0c\u4f46\u662f\u663e\u793a\u6548\u679c\u4e0d\u4f73\uff0c\u53ea\u5f97\u4f5c\u7f62\u3002</p> <p>\u72ec\u7279\u7684\u7f8e\u5b66\u89c2\u5ff5\u4f3c\u4e4e\u4f7f\u6211\u683c\u683c\u4e0d\u5165\uff0c\u6211\u603b\u89c9\u5f97\u8fd9\u975e\u5e38\u4e0d\u4f18\u96c5\u3002</p> <p>\u4ece\u800c\u6570\u6b21\u8c03\u6574\u684c\u9762 Icons \u7684\u6392\u5217\u65b9\u5f0f\u3002</p> <p>\u6709\u65f6\u5bf9 Taskbar \u4e2d\u7684\u56fe\u6807\u6392\u5217\u5f88\u4e0d\u6ee1\u610f\u3002</p> <p>\u56e0\u4e3a\u989c\u8272\u4e0d\u5c5e\u4e8e\u9012\u8fdb\u5f0f\uff0c\u770b\u8d77\u6765\u5f88\u96be\u53d7\uff0c\u6240\u4ee5\u53c8\u4f1a\u5728\u8fd9\u4e0a\u9762\u6d6a\u8d39\u4e0d\u5c11\u65f6\u95f4\u3002</p> <p>\u5b8c\u7f8e\u4e3b\u4e49\u8005\u662f\u4e0d\u914d\u6d3b\u4e0b\u53bb\u7684\u5417\uff0c\u4e0d\u597d\u8bf4\uff0c\u6211\u5f88\u96be\u63a5\u53d7\u4e0d\u5b8c\u7f8e\u7684\u5b58\u5728\u3002</p> <p>\u6240\u4ee5\u6211\u89c9\u5f97 Undo \u548c Redo \u662f\u4f1f\u5927\u7684\u53d1\u660e\uff0c\u53ef\u60dc\u5bf9\u4e8e\u65f6\u5149\u662f\u65e0\u6cd5\u64cd\u4f5c\u7684\u3002</p> <p>\\([l, mid]\\) \u5df2\u7ecf\u5206\u6cbb\u5b8c\u4e86\uff0c\u73b0\u5728\u662f \\([mid + 1, r]\\) \u4e86\u3002</p> <p>\u5728\u5404\u79cd\u5730\u65b9\u5c1d\u8bd5\u5bfb\u627e\u54f2\u5b66\u7684\u75d5\u8ff9\u5e76\u4e0d\u662f\u611a\u8822\u7684\uff0c\u53ea\u662f\u4e00\u79cd\u72ec\u7279\u7684\u81ea\u6211\u8d4f\u8bc6\u610f\u5411\u7f62\u4e86\u3002</p> <p>\u66f4\u6709\u53ef\u80fd\uff0c\u662f\u5bf9\u4e8b\u7269\u672c\u8d28\u89c4\u5f8b\u7684\u63a2\u6c42\uff0c\u6211\u5e0c\u671b\u628a\u4eba\u4eec\u53e3\u4e2d\u865a\u65e0\u7f25\u7f08\u7684\u4e1c\u897f\u901a\u8fc7\u7406\u8bba\u56fa\u5b9a\u4e0b\u6765\uff0c\u6211\u8ba8\u538c\u865a\u5e7b\u7684\u5b58\u5728\uff0c\u611f\u6027\u4e5f\u662f\u6211\u6240\u538c\u6076\uff0c\u55e4\u4e4b\u4ee5\u9f3b\u7684\u3002</p> <p>\u8fd9\u5c31\u50cf\u4e3a\u4ec0\u4e48\u6211\u5bf9\u73cd\u89c6\u7684\u6570\u636e\uff0c\u5982\u679c\u662f\u6587\u5b57\uff0c\u4f1a\u6536\u5728\u6587\u4ef6\u5939\u91cc\u88c5\u597d\uff0c\u54ea\u6015\u8fd9\u8f88\u5b50\u90fd\u4e0d\u8fc7\u95ee\uff0c\u5df2\u7ecf\u65e0\u7528\u7684\u6570\u636e\uff0c\u5982\u679c\u5305\u542b\u56de\u5fc6\uff0c\u6211\u4e0d\u4f1a\u820d\u5f97\u5220\u9664\uff0c\u800c\u662f\u4f1a\u6536\u5230 U \u76d8\u91cc\uff0c\u548c\u6587\u4ef6\u5939\u4e00\u8d77\u5403\u7070\u3002</p> <p>\u7d6e\u7d6e\u5ff5\u7f62\u4e86\uff0c\u53ea\u4e0d\u8fc7\u662f\u8ff7\u5e7b\u4e4b\u65f6\u7684\u80e1\u8a00\u4e71\u8bed\u7f62\u4e86\u3002</p> <p>\u6076\u7075\u9000\u6563\u3002</p>"}, {"location": "misc/tf/bms/", "title": "Bms", "text": "<p>\u5165\u5751\u65f6\u95f4\u8bb0\u4e0d\u5230\u4e86\uff0c\u4f30\u8ba1\u662f\u4e09\u6708\u4efd\u5427\u3002</p> <p>LR2IR Id: Enonya <code>181734</code></p> <p>\u5165\u5751\u524d\u6709 Malody v2 3dan \u7684 4k \u5b9e\u529b\uff0c\u6240\u4ee5\u4e5f\u8bb8\u52c9\u5f3a\u80fd\u770b\u3002</p> <p>\u6700\u8fd1\u6b63\u5728\u5efa\u7acb\u6620\u5c04\u3002</p> <p>\u8868\u683c\u8bb0\u5f55\u7684\u8bdd\uff0c\u76ee\u524d\u5148\u4e0d\u6253\u7b97\u8003 dan\uff0c\u5148\u6253\u70b9\u559c\u6b22\u7684\u66f2\u5b50\uff0c\u76ee\u6807\u662f\u7ec3\u4e86\u7684\u66f2\u5b50\u6253\u4e0a AA\uff1f\u559c\u6b22\u7684\u66f2\u5b50\u6253\u4e0a A\uff1f</p> <p>\u53cd\u6b63\u6709\u7a81\u7834\u4e86\u4f1a\u5728\u8fd9\u91cc\u8bb0\u5f55\uff1a</p> <p>2023.04.04 \u4ee5\u524d\u7684\u6682\u7565\uff0c\u5982\u679c\u6709\u5370\u8c61\u5c31\u4f1a\u5199\u3002</p> <p>\u76ee\u524d\u90fd\u662f Easy Gause \u548c Easy Judge Rank\u3002</p> <p>\u96be\u5ea6\u8868\u8bb0\u5f55\u7528\uff1a</p> <ul> <li>\u901a\u5e38\u7b49\u7ea7\uff1a<code>\u2606</code></li> <li>\u53d1\u72c2\u7b49\u7ea7\uff1a<code>\u2605</code></li> <li>\u7b2c\u4e8c\u901a\u5e38\u7b49\u7ea7\uff1a<code>\u25bd</code></li> <li>\u7b2c\u4e8c\u53d1\u72c2\u7b49\u7ea7\uff1a<code>\u25bc</code></li> <li>Stardust\uff1a<code>\u03be</code></li> <li>Overjoy: <code>\u2605\u2605</code></li> <li>Satellite: <code>sl</code></li> <li>Stella: <code>st</code></li> <li>\u6c60\u7530\uff1a<code>\u7530</code></li> </ul> <p>\u4e00\u4e9b\u6709\u7528\u7684\u94fe\u63a5</p> <ul> <li>https://www.bilibili.com/read/cv14118840/</li> <li>https://www.bilibili.com/read/cv12301830/</li> </ul> <p>\u8fd1\u671f\u8ba1\u5212\uff1a</p> <ul> <li>Stardust \u96be\u5ea6\u8868\uff1f</li> <li>\u7b2c\u4e8c\u901a\u5e38\u7b49\u7ea7\uff1f \u5728\u516d\u6708\u4e4b\u524d\u7ec3\u5230\u80fd\u6253 Another 12(\u901a\u5e38)</li> </ul> <p>\u952e\u578b\u7ec3\u4e60\uff1a</p> <ul> <li>\u697c\u68af\uff08Sakura Fubuki / Altale\uff09</li> <li>\u4e71/\u5207\uff08Regain\uff09</li> <li>\u547d\u65e5</li> </ul> <p>\u5355\u66f2\u7ec3\u4e60\uff1a</p> \u66f2\u540d \u4f5c\u8005 \u6765\u6e90 \u5dee\u5206 \u8bc4\u7ea7 \u72b6\u6001 \u65f6\u95f4 \u6ce8\u91ca NightTheater \u308f\u304b\u3069\u308a BOFXVI SP NORMAL 5 A Clear N/A \u73a9\u7684\u7b2c\u4e00\u4e2a BMS \u8c31 GOODRUSH EBIMAYO BOF:ET [N] 6 AA Clear N/A \u7b2c\u4e00\u4e2a AA \u7684 lv.6 Poppy Columba(Daily vs. Roon_kun) BOFXVII SP NORMAL 7 AA Clear N/A \u7b2c\u4e00\u4e2a AA \u7684 lv.7 New York Back Raise TeamUOUO BOF:ET SP HYPER 8 AA Clear N/A \u7b2c\u4e00\u4e2a AA \u7684 lv.8 \u547d\u65e5 LeaF BMS\u3092\u305f\u304f\u3055\u3093\u4f5c\u308b\u305c'23BMS SP NORMAL 9 A Clear N/A \u7b2c\u4e00\u4e2a\u7cca\u5230 A \u7684 lv.9 Regain ProjectG BOFXVII SP NORMAL 6 AA Clear 23/04/05 Warm up Doppelganger LeaF BOF2013 SP NORMAL 7 A Clear 23/04/06 Warm up Regain ProjectG BOFXVII SP HYPER 9 A Clear 23/04/07 Warm up R.I.P. eicateve G2R2018 SP HYPER 9 A Clear 23/04/07 Warm up Sakura Fubuki Street BOFU2015 Sp HYPER 9 A Clear 23/04/?? Warm up Random Sobrem X Silentroom BOFXVII SP HYPER 9 A Clear 23/04/?? Warm up \u2200 AAAA ? SP HYPER 10 A Clear 23/04/?? lv.10 A Chronomia Lime SP HYPER 10 A Failed 23/04/13 lv.10 A x2 <p>\u6bb5\u4f4d\u8003\u8bd5\uff1a</p> <p>\u8fd8\u6ca1\u6253\u3002</p>"}, {"location": "misc/tf/ftg/", "title": "Ftg", "text": "<p>\u6700\u8fd1\u6bd4\u8f83\u559c\u6b22\u975e\u60f3\u5929\u5219\u3002</p> <p>Sakuya \u5f88\u5e05\uff01\u4f46\u662f\u6211\u53c8\u6446\u4e86\uff0c\u56e0\u4e3a\u6700\u8fd1\uff0c\u6ca1\u65f6\u95f4\u3002</p>"}, {"location": "misc/tf/maimai/", "title": "Maimai", "text": "<p>\u6bcf\u5468\u4e94\uff0c\u5468\u65e5\u665a\u4e0a\u66f4\u65b0\u3002</p> <p>\u901a\u5e38\u5728\u7280\u6d66\u77f3\u7280\u91cc\u7684\u9177\u6f2b\u603b\u52a8\u5458\u51fa\u52e4\u3002</p> <p>\u662f\u5c0f\u840c\u65b0\u3002</p>"}, {"location": "misc/tf/maimai/#infomation", "title": "Infomation", "text": "<ul> <li>Id: \u03a3Enonya=</li> <li>Dx Rating\uff1a3847 (500+3247)</li> </ul>"}, {"location": "misc/tf/maimai/#achievement", "title": "Achievement", "text": "<p>\u8fd8\u6ca1\u9e1f\u8fc7\u66f2\u5b50\u3002</p>"}, {"location": "misc/tf/maimai/#plan", "title": "Plan", "text": "<p>\u5148\u6293\u4e00\u6293\u51c6\u5ea6\uff0c\u4e60\u60ef\u4e00\u4e0b\u5916\u952e\u3002</p> <p>\u8fc7\u4e86\u4e4b\u540e\u4f1a\u628a\u6210\u7ee9\u622a\u56fe\u653e\u4e2a link \u4e0a\u6765\uff0c\u7136\u540e\u6807\u8bb0\u4e0b\u65e5\u671f\u3002</p> <p>\u63a8\u5206\u5927\u6982\u662f 96% -&gt; 98% -&gt; \u9e1f</p> <ul> <li>Altale EXPERT 11 \u9e1f(doing)</li> <li>Good Bye, Mr. Jack EXPERT 11+ 96% (doing, look forward to finishing at 23.05.19)</li> <li>B.B.K.K.B.K.K EXPERT 11+ 96% (doing)</li> <li>Arty Party 11+ 96% (doing\uff0c\u518d\u4e0d\u6253\u4e0b\u67b6\u4e86\uff0cSbga)</li> <li>Bad Apple! MASTER 11+ 96% (doing)</li> <li>Trick tear EXPERT 12 96% (doing)</li> <li>Altale MASTER 13 96% (doing)</li> </ul>"}, {"location": "misc/tf/maimai/#notes", "title": "Notes", "text": "<ul> <li>Altale \u90a3\u4e2a\u661f\u661f\u8bb0\u5f97\u5206\u5f00\u5904\u7406\uff0cBPM 90 \u554a\u54e5\u3002</li> </ul>"}, {"location": "misc/tf/osumania/", "title": "Osumania", "text": "<p>\u76ee\u524d\uff08\u6700\u9ad8\uff09\u97f3\u6e38\u529b\uff1a</p> <ul> <li>Malody 4k dans v3, reg3 95.91% (\u65e5\u671f\u4e0d\u660e)</li> <li>Malody 4k dans v2, reg5 95.03% (\u65e5\u671f\u4e0d\u660e)</li> </ul> <p>\u957f\u65f6\u95f4\u6ca1\u6253\u4e4b\u540e\u53ef\u80fd\u4f1a\u5927\u5e45\u4e0b\u964d\uff08\uff09</p> <p>Osu Id: hylwxqwq </p> <p>\u76ee\u524d\u4f7f\u7528\u76ae\u80a4\uff1a\u00ab Sakura Vix \u00bb [Crono_s mania edited]\uff0c\u8c31\u9762\u6d41\u901f 30\u3002</p> <p>\u53d1\u529b\u65b9\u5f0f\uff0c\u5927\u6982\u662f\u62ac\u8155\u5f0f\uff0c\u7136\u540e\u6307\u7532\u548c\u6307\u809a\u4ea4\u66ff\u4f7f\u7528\u3002</p> <p>\u8bbe\u5907\uff1aCherry MX Board 1.0 TKL\uff0c\u9752\u8f74\u3002</p>"}, {"location": "misc/tf/osumania/#_1", "title": "\u4e00\u4e9b\u5c0f\u5c0f\u7684\u6210\u5c31\uff1f", "text": "<p>\u5927\u6982\u662f\u6211\u89c9\u5f97\u8d8a\u7ea7\u6253\u51fa\u4e0d\u7b26\u5408\u6c34\u5e73\u53d1\u6325\u7684\uff0c\u6216\u8005 98% \u4ee5\u4e0a\u7684\uff0c\u6211\u5c31\u4f1a\u653e\u8fdb\u6765\u3002</p> <p>\u56e0\u4e3a\u4e00\u4e9b\u539f\u56e0\uff0c\u65f6\u95f4\u53ef\u80fd\u662f\u4e71\u5e8f\u7684\u3002</p> Song Level Mods Accuracy Date Scripts Records Infinite Strife, *3.19 N/A 98.14% 05/20/23 \u590d\u5065 Bilibili cyanine *4.50 N/A 93.27% 05/01/23 \u76ee\u524d\u6253\u4e0a A \u7684\u8bc4\u7ea7\u6700\u9ad8\u8c31\u5b50 \u6682\u65f6\u8fd8\u6ca1\u6709 Protoflicker *3.23 N/A 98.61% 05/07/23 \u624b\u611f\u4e0d\u9519 \u6682\u65f6\u8fd8\u6ca1\u6709 Apollo *4.39 N/A 93.04% 04/26/23 \u624b\u611f\u7206\u53d1\uff0c\u7b2c\u4e00\u6b21\u5c1d\u8bd5 4.1 \u4ee5\u4e0a\u7684\u8c31 Bilibili"}, {"location": "misc/tf/osumania/#_2", "title": "\u4e0b\u4e00\u6b65\u7684\u8ba1\u5212", "text": "<p>\u628a\u4e0a\u9762\u6ca1\u5f55\u5c4f\u7684\u8865\u4e86\u3002</p> <p>\u7136\u540e\uff0c\u662f Apollo *3.56 \u4e0a 98%\uff0cClimax \u4e0a 98%\uff0cNhelv \u4e0a 98%.</p>"}, {"location": "misc/tf/stg/", "title": "Stg", "text": "<p>\u5495\u5495\u5495\u4e86\uff0c\u6682\u65f6\u4e5f\u4e0d\u4f1a\u66f4\u65b0\u3002</p> <p>\u56e0\u4e3a\u8fd1\u671f\u6ca1\u6709\u6253 STG\u3002</p>"}, {"location": "rec/", "title": "Index", "text": "<p>\u8fd9\u4e2a\u5b50\u76ee\u5f55 <code>Record</code> \u4e0b\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u5185\u5bb9\uff1a</p> <ul> <li>Codeforces &amp; Atcoder \u505a\u9898\u8bb0\u5f55 &amp; \u6539\u9519</li> <li>\u5e73\u65f6\u7684\u7ec3\u4e60\u8bb0\u5f55\uff0c\u6bd4\u5982 (dark)Bzoj\uff0cLoj\uff0cUoj\uff0cLuogu \u7684\u9898\u76ee\u3002</li> <li>\u4e00\u4e9b\u6bd4\u8f83\u6709\u610f\u601d\u7684\u5c0f\u4e13\u9898 &amp; Tricks \u6574\u7406\u3002</li> </ul> <p>\u73b0\u5728 CF/AT \u53ea\u6539 \\([1800, 2200]\\) \u533a\u95f4\u7684\u9898\uff0c\u4e13\u9898\u91cc\u53ea\u6709\u6709\u6536\u83b7\u7684\u624d\u5199\u3002--2023/04/04</p>"}, {"location": "rec/arc-vp-record/", "title": "ARC VP \u96c6\u5408", "text": "<p>\u542c\u4e86 zjk \u7684\u5efa\u8bae\uff0cvp ARC \u6253\u7740\u73a9\u5c31\u5f53\u601d\u7ef4\u8bad\u7ec3\u4e86\u3002</p> <p>\u8981\u6ce8\u610f\u7684\u662f ARC103 ~ ARC058 \u8fd9\u4e00\u6bb5\u7684\u7f16\u53f7\u6bd4\u8f83\u5947\u602a\uff0c\u4ed6\u662f\u6309\u7167 abc arc \u5408\u5e76\u6765\u7f16\u53f7\u7684\u3002</p> <p>\u6211\u4ee3\u7801\u91cc\u4e00\u822c\u7528\u7684\u662f ARC103D \u8fd9\u6837\u7684\u5f62\u5f0f\uff0c\u4f46\u662f\u8fd9\u4e2a\u5b9e\u9645\u4e0a\u5728 atc \u4e0a\u7684\u9898\u53f7\u662f arc103_b\u3002</p> <p>\u5377\u9898\u8bb0\u5f55\uff1ahttps://kenkoooo.com/atcoder/#/table/black_trees \u6b22\u8fce\u76d1\u7763\u3002</p> <p>\u76ee\u524d\u8ba1\u5212\u662f\u4e5d\u6708\u4e00\u53f7\u4e4b\u524d vp \u5b8c ARC103 ~ ARC058\uff08\u968f\u673a\u5f00\u9898\uff09</p>"}, {"location": "rec/arc-vp-record/#arc080", "title": "ARC080", "text": "<p>CSP2022 \u8003\u524d\u4e00\u5929\u548c hfy \u8fd8\u6709 wcx \u968f\u673a\u8df3\u4e86\u4e00\u573a ARC \u6253\u7740\u73a9\uff0c\u5c31\u5f53\u5f00\u62d3\u601d\u7ef4\u4e86\u3002</p> <p>\u53d1\u73b0\u8fdc\u53e4 ARC \u548c ABC \u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u76f8\u5f53\u4e8e div1 \u548c div2\u3002</p> <p>\u611f\u89c9 CDE \u90fd\u662f\u53ef\u505a\u9898\uff0cCD \u6bd4\u8f83\u5e73\u51e1\uff0cE \u662f\u5c0f\u6e05\u65b0\u601d\u7ef4\u9898\uff0c\u611f\u89c9\u9700\u8981\u64c5\u957f\u89c2\u5bdf\u7ed3\u8bba\u624d\u5f04\u5f97\u51fa\u6765\u3002</p> <p>F \u4e0d\u592a\u4f1a\uff0c\u4ee5\u540e\u53ef\u4ee5\u770b\u770b</p>"}, {"location": "rec/arc-vp-record/#c-4-adjacent", "title": "C - 4-adjacent", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u4f60\u8981\u91cd\u6392\u8fd9\u4e2a\u5e8f\u5217\uff0c\u4f7f\u5f97\u76f8\u90bb\u4e24\u9879\u4e58\u79ef\u90fd\u662f 4 \u7684\u500d\u6570\u3002</p> <p>\u5982\u679c\u6709\u89e3\u8f93\u51fa <code>Yes</code>,\u5426\u5219\u8f93\u51fa <code>No</code>\u3002</p> <p>\u6bd4\u8f83\u7b80\u5355\uff0c\u8003\u8651\u5206\u7c7b\uff0c\u4e00\u7c7b\u662f\u5947\u6570\uff0c\u4e00\u7c7b\u662f \\(4\\) \u7684\u500d\u6570\uff0c\u53e6\u5916\u4e00\u7c7b\u662f\u4e0d\u662f \\(4\\) \u7684\u500d\u6570\u7684\u5076\u6570\u3002</p> <p>\u6ce8\u610f\u5230\u5947\u6570\u7684\u4e24\u8fb9\u4e0d\u662f\u8fb9\u754c\u5c31\u4e00\u5b9a\u8981\u662f \\(4\\)\uff0c\u5982\u679c\u6ca1\u6709 \\(2 \\times \\text{odd}\\) \u5f62\u5f0f\u7684\u6570\uff0c\u90a3\u53ea\u8981\u5947\u6570\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e \\(4\\) \u7684\u500d\u6570\u7684\u4e2a\u6570 \\(+ 1\\) \u5373\u53ef\u3002</p> <p>\u5982\u679c\u6709 \\(2 \\times \\text{odd}\\) \u5f62\u5f0f\u7684\u6570\uff0c\u90a3\u4e48\u5947\u6570\u7684\u4e2a\u6570\u5fc5\u987b\u8981\u662f \\(\\le\\) \\(4\\) \u7684\u500d\u6570\u7684\u4e2a\u6570\u7684\u3002</p> <p>\u7136\u540e\u5c31\u6ca1\u4e86\u3002</p> Code <pre><code>int c = 0, cc = 0, ccc = 0;\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; a[i];\nif(a[i] &amp; 1) c++;\nelse if(a[i] % 4 == 0) ccc++;\nelse if(a[i] % 2 == 0) cc++;\n}\nif((c &gt; ccc &amp;&amp; cc) || c - 1 &gt; ccc) cout &lt;&lt; \"No\" &lt;&lt; endl;\nelse cout &lt;&lt; \"Yes\" &lt;&lt; endl;\n</code></pre>"}, {"location": "rec/arc-vp-record/#d-grid-coloring", "title": "D - Grid Coloring", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u957f\u5ea6\u4e3a \\(q\\)\uff0c\u7ed9\u5b9a\u4e00\u4e2a \\(n\\times m\\) \u7684\u7f51\u683c\u3002</p> <p>\u4fdd\u8bc1 \\(\\sum a_i = n \\times m\\)\uff0c\u73b0\u5728\u8981\u6c42\u4f60\u67d3 \\(q\\) \u4e2a 4-\u8054\u901a\u5757\u51fa\u6765\uff0c\u5176\u4e2d\u989c\u8272 \\(i\\) \u8981\u6709 \\(a_i\\) \u4e2a\u683c\u5b50\uff0c\u6784\u9020\u65b9\u6848\u3002</p> <p>\\(100\\)\u3002</p> <p>\u7b28\u6bd4\u9898\uff0c\u86c7\u5f62\u67d3\u8272\u5373\u53ef\uff0c\u663e\u7136\u4e00\u5b9a\u6709\u89e3\u3002</p>"}, {"location": "rec/arc-vp-record/#e-young-maids", "title": "E - Young Maids", "text": "<p>\u9898\u76ee\u540d\u5b57\u597d\u602a\u3002</p> <p>\u7ed9\u4f60\u4e00\u4e2a \\(1 \\sim n, (n \\equiv 0 (\\mod 2))\\) \u7684\u6392\u5217 \\(p\\)\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u53d6\u51fa\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20\uff0c\u628a\u4ed6\u4eec\u6309\u7167\u539f\u6765\u7684\u987a\u5e8f\u6254\u5230\u4e00\u4e2a\u961f\u5217\u7684\u5934\u90e8\u3002</p> <p>\u95ee\u4f60\u6700\u540e\u53ef\u80fd\u5f97\u5230\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6392\u5217\u662f\u4ec0\u4e48\u3002</p> <p>\u6570\u636e\u8303\u56f4 \\(2e5\\)\u3002</p> <p>\u611f\u89c9\u5f88\u5c0f\u6e05\u65b0\uff0c\u9700\u8981\u4e00\u5b9a\u89c2\u5bdf\u80fd\u529b\uff1f</p> <p>\u9996\u5148\u6b63\u7740\u663e\u7136\u4e0d\u597d\u641e\uff0c\u8003\u8651\u5012\u8fc7\u6765\u89c2\u5bdf\u5408\u6cd5\u89e3\u7684\u5f62\u72b6\uff08\u611f\u89c9\u548c 221025C \u7684\u7f6a\u4eba\u633d\u6b4c\u90a3\u9898\u60f3\u6cd5\u7c7b\u4f3c\uff09\u3002</p> <p>\u9996\u5148\u6ce8\u610f\u5230\u5982\u679c\u53d6\u4e86 \\((x, y)\\) \u8fd9\u4e24\u4e2a\u4f4d\u7f6e\uff0c \u90a3\u4e48 \\([x + 1, y - 1]\\) \u8fd9\u4e2a\u533a\u95f4\u662f\u4e0d\u80fd\u548c\u5176\u5b83\u533a\u95f4\u7ec4\u5408\u7684\uff0c\u4e5f\u5c31\u662f\u4e0d\u80fd\u8de8\u533a\u95f4\u64cd\u4f5c\u3002</p> <p>\u7531\u6b64\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u53d6\u5230\u7684\u662f\u4e00\u4e2a\u5947\u6570\u9879 + \u4e00\u4e2a\u5076\u6570\u9879\u7684\u5f62\u5f0f\uff08\u4e0d\u7136\u4e00\u5b9a\u6ca1\u6cd5\u628a\u4efb\u610f\u4e00\u4e2a \\([x + 1, y - 1]\\) \u53d6\u5b8c\uff08\u56e0\u4e3a\u8fd9\u6837\u957f\u5ea6\u4e0d\u662f\u5076\u6570\uff09\uff09\u3002</p> <p>\u8981\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u8c08\u5c31\u9700\u8981\u9760\u540e\u53d6\u5230\u7684\u5947\u6570\u9879\u5c3d\u91cf\u5c0f\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6392\u5217\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u8003\u8651\u5076\u6570\u9879\u5927\u5c0f\uff08\u4e0d\u4f1a\u6709\u76f8\u540c\u7684\uff09\u3002</p> <p>\u7136\u540e\u6bcf\u6b21\u6211\u4eec\u628a\u5f53\u524d\u7684\u53ef\u4ee5\u53d6\u7684\u533a\u95f4\u62ff\u51fa\u6765\u653e\u8fdb\u4e00\u4e2a\u5806\uff0c\u5173\u952e\u5b57\u662f\u5947\u6570\u9879\u6700\u5c0f\u503c\u3002</p> <p>\u6bcf\u6b21\u8d2a\u5fc3\u5730\u53d6\u5806\u9876\uff0c\u51b3\u7b56\u5b8c\u4e4b\u540e\u65ad\u4e09\u4e2a\u533a\u95f4\u51fa\u6765\uff0c\u63d2\u5165\u56de\u53bb\uff0c\u4e0d\u65ad\u53d6\u76f4\u5230\u5806\u4e3a\u7a7a\uff0c\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002</p> <p>\u7ef4\u62a4\u539f\u5e8f\u5217\u5947\u6570\u9879\u7684\u533a\u95f4\u6700\u5c0f\u503c\u548c\u5076\u6570\u9879\u7684\u533a\u95f4\u6700\u5c0f\u503c\u76f4\u63a5 RMQ\uff0c\u4e2d\u95f4\u7a7a\u51fa\u6765\u7684\u7528 \\(+\\infty\\) \u8865\u5168\u5c31\u884c\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;set&gt;\n#include &lt;cmath&gt;\n#include &lt;stack&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\nconst int inf = 0x3f3f3f3f;\n\nint n;\nint a[si], b[si], p[si];\n\nclass Segment_Tree {\nprivate:\nstruct node {\nint l, r;\nint minv;\n} t[si &lt;&lt; 2];\ninline void pushup(int p) {\nt[p].minv = min(t[p &lt;&lt; 1].minv, t[p &lt;&lt; 1 | 1].minv);\n}\npublic:\nvoid build(int p, int l, int r) {\nt[p].l = l, t[p].r = r;\nif(l == r) { t[p].minv = b[l]; return; }\nint mid = (l + r) &gt;&gt; 1;\nbuild(p &lt;&lt; 1, l, mid), build(p &lt;&lt; 1 | 1, mid + 1, r);\npushup(p);\n}\nint query(int p, int ql, int qr) {\nint ret = inf, l = t[p].l, r = t[p].r;\nif(ql &lt;= l &amp;&amp; r &lt;= qr) return t[p].minv;\nint mid = (l + r) &gt;&gt; 1;\nif(ql &lt;= mid) ret = min(ret, query(p &lt;&lt; 1, ql, qr));\nif(qr &gt; mid) ret = min(ret, query(p &lt;&lt; 1 | 1, ql, qr));\nreturn ret;\n}\n} tr[2];\n\nstruct Interval {\nint l, r;\nint odd, even;\nbool operator &lt; (const Interval &amp;t) const {\nreturn odd &gt; t.odd;\n}\n};\nstd::priority_queue&lt;Interval&gt; q;\n\nvoid Insert(int l, int r) {\nif(l &gt; r) return;\nint x = tr[l &amp; 1].query(1, l, r), y = tr[l &amp; 1 ^ 1].query(1, p[x] + 1, r);\nq.push({l, r, x, y});\n}\nvoid Assign(Interval t)  {\nInsert(t.l, p[t.odd] - 1), Insert(p[t.odd] + 1, p[t.even] - 1), Insert(p[t.even] + 1, t.r);\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], p[a[i]] = i;\n\nmemset(b, 0x3f, sizeof b);\nfor(int i = 1; i &lt;= n; i += 2)\nb[i] = a[i];\ntr[1].build(1, 1, n);\nmemset(b, 0x3f, sizeof b);\nfor(int i = 2; i &lt;= n; i += 2) b[i] = a[i];\ntr[0].build(1, 1, n);\n\nInsert(1, n);\nwhile(!q.empty()) {\nInterval u = q.top(); q.pop();\ncout &lt;&lt; u.odd &lt;&lt; \" \" &lt;&lt; u.even &lt;&lt; \" \";\nAssign(u);\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/arc-vp-record/#f-unknown", "title": "F - Unknown.", "text": "<p>\u6211\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/arc-vp-record/#arc076", "title": "ARC076", "text": "<p>\u8fd9\u6b21\u662f NOIP2022 \u8003\u524d\u548c hfy \u4e00\u8d77\u8fdb\u884c\u8111\u6d1e\u6253\u5f00\u3002</p> <p>\u56e0\u4e3a\u61d2\u6240\u4ee5\u76d2\u76d2\u4ee3\u7801\u3002</p>"}, {"location": "rec/arc-vp-record/#c-reconciled", "title": "C - Reconciled?", "text": "<p>\u7ed9\u4f60 \\(n\\) \u53ea\u5e26\u7f16\u53f7\u7684\u72d7\uff0c\\(m\\) \u53ea\u5e26\u7f16\u53f7\u7684\u7334\u3002</p> <p>\u8981\u6c42\u51fa\u6ee1\u8db3\u6ca1\u6709\u4efb\u610f\u7684\u72d7/\u7334\u8fde\u901a\u5757\u7684\u6392\u5217\u65b9\u5f0f\u3002</p> <p>\\(1\\le n, m\\le 1e5\\)\u3002</p> <p>\u7b80\u5355\u9898\uff0c\u6ce8\u610f\u5230 \\(|n - m| \\ge 2\\) \u5fc5\u5b9a\u65e0\u89e3\u3002</p> <p>\u7136\u540e \\(n = m\\) \u7684\u65f6\u5019\u7b54\u6848\u662f \\(n!m!\\)\u3002</p> <p>\u5982\u679c\u662f \\(|n - m| = 1\\)\uff0c\u7b54\u6848\u662f \\(2n!m!\\)\u3002</p>"}, {"location": "rec/arc-vp-record/#d-built", "title": "D - Built?", "text": "<p>\u5b9a\u4e49\u4e24\u4e2a\u70b9\u7684 \\(dis\\) \u4e3a \\(\\min(|x_1 - x_2|, |y_1 - y_2|))\\)\u3002</p> <p>\u7ed9\u5b9a \\(n,(1\\le n \\le 1e9)\\) \u4e2a\u70b9\uff0c\u6c42\u4f7f\u5f97\u8fd9\u4e9b\u70b9\u8054\u901a\u7684\u4ee3\u4ef7\u6700\u5c0f\u503c\u3002</p> <p>\u8054\u901a\u4e24\u70b9\u7684\u4ee3\u4ef7\u662f \\(dis\\)\u3002</p> <p>\u672c\u8d28\u662f\u6c42\u6700\u5c0f dis \u751f\u6210\u6811\uff0c\u76f4\u63a5\u52a0\u8fb9\u662f \\(O(n^2)\\) \u7684\u4e0d\u80fd\u63a5\u53d7\u3002</p> <p>\u6ce8\u610f\u5230\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u5bf9 \\(x, y\\) \u5206\u522b\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u8ba9\u4ed6\u548c\u5b83\u5728\u6392\u5217\u4e0a\u7684\u5de6\u53f3\u4e24\u70b9\u8fde\u8fb9\u5c31\u884c\u4e86\u3002</p> <p>\u7136\u540e\u4e00\u904d MST \u5b8c\u4e8b\u3002</p>"}, {"location": "rec/arc-vp-record/#e-connected", "title": "E - Connected?", "text": "<p>\u7ed9\u51fa\u4e00\u4e2a \\(R\\times C\\) \u7684\u68cb\u76d8\uff0c\u5176\u4e2d \\(1\\) \u5230 \\(n\\) \u4e4b\u95f4\u7684\u6bcf\u4e2a\u6b63\u6574\u6570\u90fd\u4f1a\u5728\u68cb\u76d8\u4e0a\u51fa\u73b0\u4e24\u6b21\uff0c</p> <p>\u7ed9\u5b9a\u7b2c \\(i\\) \u4e2a\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8981\u6c42\u628a\u6bcf\u4e00\u5bf9\u76f8\u540c\u7684\u6570\u7528\u7ebf\uff08\u7c97\u7ec6\u5ffd\u7565\u4e0d\u8ba1\uff09\u8fde\u8d77\u6765\uff0c\u4e14\u7ebf\u4e0d\u80fd\u76f8\u4ea4\u4e5f\u4e0d\u80fd\u8d8a\u8fc7\u68cb\u76d8\u8fb9\u754c\uff0c\u6c42\u662f\u5426\u80fd\u5b8c\u6210\u3002</p> <p>\\(R,C 1e8, n 1e5\\)\u3002</p> <p>\u6ce8\u610f\u5230\u53ea\u6709\u4e24\u7aef\u5728\u8fb9\u754c\u7684\u7ebf\u624d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\uff0c\u5176\u5b83\u7684\u5728\u91cc\u9762\u8f6c\u51e0\u4e0b\u5c31\u884c\u4e86\u3002</p> <p>\u6240\u4ee5\u53ea\u9700\u8981\u8003\u8651\u5224\u6240\u6709\u4e24\u7aef\u90fd\u5728\u8fb9\u754c\u7684\u70b9\u5bf9\u5f62\u6210\u7684\u8fde\u7ebf\u662f\u5426\u76f8\u4ea4\u3002</p> <p>\u6ce8\u610f\u5230\u8fd9\u4e2a\u5b9e\u9645\u4e0a\u53ef\u4ee5\u94a6\u5b9a\u4e00\u4e2a\u8f6c\u5708\u7684\u65b9\u5411\uff08\u987a\u65f6\u9488\uff0c\u9006\u65f6\u9488\uff09\uff0c\u628a\u8fd9\u4e2a\u4e1c\u897f\u5f53\u6210\u62ec\u53f7\u5e8f\u5217\u3002\u7136\u540e\u5224\u65ad\u4e00\u4e0b\u62ec\u53f7\u5e8f\u5217\u662f\u5426\u5408\u6cd5\u5c31\u884c\u3002</p>"}, {"location": "rec/arc-vp-record/#f-unknown_1", "title": "F - Unknown", "text": "<p>\u6211\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/arc-vp-record/#arc103", "title": "ARC103", "text": "<p>\u8fd9\u91cc\u662f\u7cfb\u7edf\u6027 vp \u7684\u5f00\u59cb\uff0c\u4e4b\u524d\u53ea\u80fd\u7b97\u662f\u5076\u5c14\u73a9\u73a9\u3002</p> <ul> <li>vp date: 2023/06/02</li> <li>Finish date: 2023/06/02 </li> </ul> Status/Problem C D E F Difficulty 826 2677 1722 2836 Solved Yes No No No Correction / Yes Yes Yes Solution Yes Yes Yes Yes <p>\u8003\u573a E \u60f3\u5230\u6b63\u89e3\u4e86\uff0c\u4f46\u662f\u6ca1\u8c03\u5b8c\uff0c\u8d5b\u540e 1min \u624d\u8fc7.</p> <p>\u662f\u671f\u672b\u8003\u8bd5\u524d vp \u7684\uff0c\u8fd9\u6bb5\u65f6\u95f4\u5fc3\u60c5\u4e0d\u592a\u597d\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u662f\u8c03\u8282\u3002</p>"}, {"location": "rec/arc-vp-record/#c-", "title": "C - /\\/\\/\\/", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u4fee\u6539\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u95ee\u5c06\u5e8f\u5217\u53d8\u597d\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570</p> <p>\u4e00\u4e2a\u5e8f\u5217 \\(a\\) \u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(a\\) \u4e2d\u53ea\u6709\u4e24\u4e2a\u6570\uff0c\u5e76\u4e14 \\(\\forall i, a_i = a_{i + 2}\\)\u3002</p> <p>\u4fdd\u8bc1 \\(n\\) \u662f\u5076\u6570\uff0c\\(1\\le n, a_i \\le 10^5\\)\u3002</p> <p>\u5947\u5076\u4f4d\u7f6e\u5206\u5f00\u8003\u8651\u662f\u5f88\u597d\u60f3\u5230\u7684\uff0c\u5e76\u4e14\u5b83\u4eec\u4e24\u4e2a\u5b50\u5e8f\u5217\u76f8\u4e92\u72ec\u7acb\u4e0d\u5f71\u54cd\u3002</p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u6bcf\u6b21\u4e00\u5b9a\u662f\u4fdd\u7559\u5b50\u5e8f\u5217\u91cc\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u90a3\u4e2a\uff0c\u5269\u4e0b\u7684\u5168\u90e8\u6539\u5b8c\u3002</p> <p>\u56e0\u4e3a\u5947\u5076\u4e0d\u80fd\u76f8\u540c\uff0c\u6240\u4ee5\u8fd8\u8981\u5224\u4e00\u4e0b\u3002</p> <p>\u8fd9\u9898\u5f00\u59cb\u7684\u65f6\u5019\u8fd8\u8003\u8651\u4e86\u5f88\u591a\u60c5\u51b5\uff0c\u4f46\u5176\u5b9e\u6700\u540e\u90fd\u5f52\u5316\u5230\u4e86\u8fd9\u4e24\u4e2a\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u603b\u7ed3\u4e00\u4e2a\u6559\u8bad\uff1a\u5982\u679c\u662f\u770b\u8d77\u6765\u5f88\u50cf\u5206\u7c7b\u8ba8\u8bba\u7684\u9898\uff0c\u591a\u60f3\u60f3\u662f\u4e0d\u662f\u53ef\u4ee5\u5f52\u5316\uff0c\u8fd9\u6837\u6709\u52a9\u4e8e\u7b80\u5316\u601d\u8003\uff0c\u4e5f\u4e0d\u4f1a\u90a3\u4e48\u70e6\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint n;\nstruct node {\nint val, cnt;\nbool operator &lt; (const node &amp;rhs) const {\nreturn cnt &gt; rhs.cnt;\n}\n} odd[si], even[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= si - 10; ++i)\nodd[i].val = even[i].val = i,\nodd[i].cnt = even[i].cnt = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nint val; cin &gt;&gt; val;\nif(i &amp; 1) odd[val].cnt += 1;\nelse even[val].cnt += 1;\n}\nsort(odd + 1, odd + 1 + si - 10);\nsort(even + 1, even + 1 + si - 10);\n\nif(odd[1].val == even[1].val) {\nint ans = 0x3f3f3f3f;\nans = min(n - odd[1].cnt - even[2].cnt, ans); // \u5728\u6ca1\u6709\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u8981\u8f7b\u6613\u65ad\u8a00\u53d8\u91cf\u7684\u5927\u5c0f\u5173\u7cfb\u3002\nans = min(n - even[1].cnt - odd[2].cnt, ans); // \u6211\u5f00\u59cb\u7684\u65f6\u5019\u628a\u8fd9\u4e24\u4e2a\u60c5\u51b5\u5206\u5f00\u6309 [1]cnt \u8003\u8651\u4e86\uff0c\u5ffd\u7565\u4e86 [2]cnt\u3002\ncout &lt;&lt; ans &lt;&lt; endl;\n}\nelse cout &lt;&lt; n - odd[1].cnt - even[1].cnt &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/arc-vp-record/#d-robot-arms", "title": "D - Robot Arms", "text": "<p>\u7ed9\u4f60 \\(n\\) \u4e2a\uff0c\u7f51\u683c\u4e0a\u7684\u70b9\uff0c\u4f60\u9700\u8981\u6784\u9020\u4e00\u4e2a\u673a\u68b0\u81c2\uff0c\u4f7f\u5f97\u673a\u68b0\u81c2\u4ece \\((0, 0)\\) \u5f00\u59cb\uff0c\u80fd\u901a\u8fc7\u5f2f\u6298\u5173\u8282\u7684\u65b9\u5f0f\u5230\u8fbe\u8fd9\u4e9b\u70b9\u3002</p> <p>\u673a\u68b0\u81c2\u6709 \\(m\\) \u4e2a\u6bb5\uff0c\u6bb5\u548c\u6bb5\u4e4b\u95f4\u7684\u5173\u8282\u53ef\u4ee5\u662f\u4efb\u610f\u8f6c\u52a8\u7684\uff0c\u4f46\u662f\u53ea\u6709\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u3002</p> <p>\u73b0\u5728\u4f60\u9700\u8981\u7ed9\u51fa\u6bb5\u7684\u957f\u5ea6\u5e8f\u5217 \\(c\\)\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u70b9\u6784\u9020\u53ef\u884c\u7684\u65b9\u6848\uff0c\\(m\\) \u4e5f\u662f\u4f60\u6765\u6784\u9020\u3002</p> <p>\\(1\\le n \\le 1000, |x_i, y_i| \\in [0, 10^9]\\)\u3002</p> <p>\u8981\u6c42\u4f60\u6784\u9020\u7684 \\(m \\in [1, 40], c_i \\in [1, 10^{12}]\\)\u3002</p> <p>\u65e0\u89e3\u8f93\u51fa <code>-1</code></p> <p>\u770b\u5230\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\\(2^{40} &gt; 10^{12}\\) \u5e76\u4e14\u6ca1\u5927\u591a\u5c11\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u6ce8\u610f\u5230\u5982\u679c\u5b58\u5728 \\((x_i + y_i) \\not\\equiv (x_j + y_j) \\pmod 2\\)\uff0c\u663e\u7136\u65e0\u89e3\u3002</p> <p>\u7136\u540e\u5947\u6570\u53ef\u4ee5\u901a\u8fc7\u4f4d\u79fb\u5f97\u5230\u5076\u6570\u7684\u60c5\u51b5\u3002</p> <p>\u90a3\u4e48\u5269\u4e0b\u7684\uff0c\u5c31\u8003\u8651\u4e8c\u8fdb\u5236\u62c6\u5206\u5373\u53ef\uff0c\u6ce8\u610f\u4ece\u9ad8\u4f4d\u8003\u8651\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e3 + 10;\n\nint n, m;\nint pw[si], ck[2];\nint x[si], y[si], cnt;\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; x[i] &gt;&gt; y[i];\nck[(x[i] + y[i]) &amp; 1] += 1;\n}\nif(ck[0] &amp;&amp; ck[1]) return cout &lt;&lt; \"-1\" &lt;&lt; endl, 0;\nfor(int i = 38; ~i; --i)\npw[++cnt] = 1ll &lt;&lt; i;  if(ck[0]) pw[++cnt] = 1ll;\ncout &lt;&lt; cnt &lt;&lt; endl;\nfor(int i = 1; i &lt;= cnt; ++i) cout &lt;&lt; pw[i] &lt;&lt; \" \\n\"[i == cnt]; for(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= cnt; ++j) {\nif(abs(x[i]) &gt; abs(y[i])) {\nif(x[i] &lt; 0) cout &lt;&lt; \"L\", x[i] += pw[j];\nelse cout &lt;&lt; \"R\", x[i] -= pw[j];\n}\nelse {\nif(y[i] &lt; 0) cout &lt;&lt; \"D\", y[i] += pw[j];\nelse cout &lt;&lt; \"U\", y[i] -= pw[j];\n}\n}\ncout &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/arc-vp-record/#e-tree", "title": "E - Tr/ee", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684 01 \u4e32 \\(s\\)\uff0c\u4f60\u9700\u8981\u5224\u65ad \\(s\\) \u662f\u5426\u80fd\u751f\u6210\u4e00\u9897\u6811\u3002</p> <p>\u751f\u6210\u65b9\u5f0f\u662f\uff1a\u5982\u679c \\(s_i = \\texttt{1}\\)\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u6761\u8fb9\uff0c\u5207\u65ad\u4e4b\u540e\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a \\(i\\) \u7684\u8fde\u901a\u5757\u3002</p> <p>\u53cd\u4e4b\uff0c\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u5207\u5272\uff0c\u90fd\u5e94\u5f53\u65e0\u6cd5\u6784\u9020\u51fa\u4e00\u4e2a\u5927\u5c0f\u4e3a \\(i\\) \u7684\u8fde\u901a\u5757\u3002</p> <p>\u4f60\u9700\u8981\u7ed9\u51fa\u89e3\uff0c\u6216\u8005\u8f93\u51fa <code>-1</code>\u3002</p> <p>\\(2\\le n \\le 10^5\\)\u3002</p> <p>\u9996\u5148\u80fd\u89c2\u5bdf\u5230\uff0c\\(s\\) \u5e94\u5f53\u662f\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u4e0d\u7136\u4e0d\u5408\u6cd5\uff08\u6211\u4eec\u9700\u8981\u8865\u4e0a \\(s_0 \\texttt{0}\\)\u3002\uff09\u3002</p> <p>\u6211\u4eec\u9700\u8981\u6709\u8fa9\u8bc1\u601d\u7ef4\uff0c\u601d\u8003\u4e00\u4e0b\u8fd9\u4e2a\u6761\u4ef6\u662f\u5426\u662f\u5145\u8981\u6761\u4ef6\u3002</p> <p>\u4f3c\u4e4e\u4e0d\u662f\uff0c\u56e0\u4e3a \\(s_1\\) \u5e94\u5f53\u662f \\(\\texttt{1}\\)\uff0c\u56e0\u4e3a\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u6570\u5927\u4e8e \\(2\\) \u7684\u6811\u90fd\u5e94\u5f53\u6709\u53f6\u5b50\u8282\u70b9\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5c31\u662f\u5145\u8981\u6761\u4ef6\u4e86\uff0c\u90a3\u4e48\u8003\u8651\u6784\u9020\u89e3\u3002</p> <p>\uff08\u5269\u4e0b\u7684\u90e8\u5206\u4e5f\u662f\u8003\u573a\u60f3\u5230\u7684\uff0c\u4f46\u662f\u600e\u4e48\u60f3\u5230\u7684\u6211\u4e5f\u89c9\u5f97\u5f88\u795e\u5947\uff09</p> <p>\u4e00\u4e2a\u6bd4\u8f83 Tricky \u7684\u60f3\u6cd5\u662f\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u68f5\u6811\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u4ece\u5c0f\u5230\u5927\u5f00\u59cb\u6ee1\u8db3 siz\u3002</p> <p>\u663e\u7136 \\(1\\) \u662f\u4e00\u4e2a\u5b64\u7acb\u7684\u8282\u70b9\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u770b\u4f5c\uff0c\u662f\u6709\u4e00\u4e2a\u4e24\u4e2a\u8282\u70b9\u7684\u94fe\u5b58\u5728\uff0c\u53ea\u4e0d\u8fc7\u53e6\u4e00\u4e2a\u8282\u70b9\u91cc\u9762\u5305\u542b\u4e86\u5269\u4e0b\u7684 \\(n - 1\\) \u4e2a\u8282\u70b9\u800c\u5df2\u3002</p> <p>\u7c7b\u4f3c\u5c31\u662f\uff0c\u5c1d\u8bd5\u6309\u7167\u9898\u76ee\u7684\u8fc7\u7a0b\uff0c\u7ef4\u62a4\u65ad\u6389\u7684\u8fd9\u6761\u8fb9\u548c\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u901a\u8fc7\u679a\u4e3e\u7684\u65b9\u5f0f\u4e0d\u65ad\u751f\u6210\u6700\u7ec8\u7684\u6811\u3002</p> <p>\u5269\u4e0b\u7684\u4e8b\u60c5\u5c31\u662f\u5c1d\u8bd5\u6784\u9020\u51fa\u66f4\u5927\u7684 siz\uff0c\u5e76\u4e14\u4e0d\u4f1a\u4ea7\u751f\u65b0\u7684 siz\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u5176\u5b83\u5b50\u6811\u53ef\u4ee5\u7528\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a \\(siz = val\\)\uff0c\u6211\u4eec\u5728\u5f53\u524d\u8282\u70b9\u4e0b\u6302 \\(val - 1\\) \u4e2a\u8282\u70b9\u5373\u53ef\u3002</p> <p>\u5269\u4e0b\u7684\u90e8\u5206\u4e5f\u53ef\u4ee5\u627e\u4e00\u4e2a\u73b0\u6210\u7684\u5b50\u6811\u6302\u5728\u4e0a\u9762\uff0c\u7136\u540e\u4e0d\u591f\u7684\u518d\u8865\u4e0a\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u4ece\u201c\u4e0b\u201d\u5f80\u201c\u4e0a\u201d\u52a0\u5165\uff0c\u662f\u4e0d\u4f1a\u6709\u65b0\u7684 siz \u4ea7\u751f\u7684\u3002</p> <p>\u5176\u5b9e\u8fd9\u90e8\u5206\u53ef\u4ee5\u4e0d\u8981\u5e76\u67e5\u96c6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u4e0a\u4e00\u4e2a \\(s_i = \\texttt{1}\\) \u7684 \\(i\\)\u3002</p> <p>\u7136\u540e\u5f88\u5feb\u5c31\u80fd\u6784\u9020\u51fa\u6765\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;set&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cassert&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n;\nbool valid(string s) {\nif(s[1] != '1') return false;\nfor(int i = 0; i &lt;= n; ++i)\nif(s[i] != s[n - i]) return false;\nreturn true;\n} int main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nstring s; cin &gt;&gt; s, n = (int)s.size(), s = '0' + s;\nif(!valid(s)) return cout &lt;&lt; \"-1\" &lt;&lt; endl, 0;\n\nint ls = 0;\ncout &lt;&lt; 1 &lt;&lt; \" \" &lt;&lt; 2 &lt;&lt; endl;\nfor(int i = 2; i &lt; n; ++i) {\ncout &lt;&lt; ls + 1 &lt;&lt; \" \"  &lt;&lt; i + 1 &lt;&lt; endl;    if(s[i] == '1') ls = i;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/arc-vp-record/#f-distance-sums", "title": "F - Distance Sums", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u4f60\u9700\u8981\u7528 \\(a\\) \u751f\u6210\u4e00\u68f5\u65e0\u6743\u6811\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <p>\u82e5 \\(a_i = val\\)\uff0c\u90a3\u4e48\u6811\u4e0a\u6807\u53f7\u4e3a \\(i\\) \u7684\u8282\u70b9\uff0c\u5230\u5176\u5b83\u8282\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\u4e3a \\(val\\)</p> <p>\u4fdd\u8bc1 \\(a_i\\) \u4e0d\u76f8\u540c\uff0c\u503c\u57df \\(10^{12}\\)\uff0c\\(2\\le n \\le 10^5\\)\u3002</p> <p>\u6784\u9020\u65b9\u6848\uff0c\u6216\u8005\u8f93\u51fa <code>-1</code>\u3002</p> <p>\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u7684 SPJ \u5e94\u8be5\u600e\u4e48\u5199\u3002</p> <p>\u5c31\u662f\u4e00\u4e2a\u6362\u6839 dp \u5bf9\u5427\uff1a</p> <p>\\(a(u) = a(fa) - 2siz(u) + n\\)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5408\u5e76\u76f8\u540c\u53d8\u91cf\uff1a\\(a(fa) = a(u) + 2siz(u) - n\\)\u3002</p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5728\u4e00\u6761\u5230\u6839\u8282\u70b9\u7684\u94fe\u4e0a\uff0c\u8282\u70b9\u7684 \\(a\\) \u662f\u9012\u51cf\u7684\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u53f6\u5b50\u8282\u70b9\u662f\u94fe\u4e0a\u6700\u5927\u7684\uff0c\u6839\u662f\u6700\u5c0f\u7684\u3002</p> <p>\u800c\u4e14\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u56e0\u4e3a \\(a\\) \u4e92\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u94a6\u5b9a\u53f6\u5b50\u8282\u70b9\uff0c\u53ef\u4ee5\u77e5\u9053\u5b83\u7684 \\(fa\\) \u7684\u7f16\u53f7\u3002</p> <p>\u56e0\u4e3a\u521a\u624d\u53d1\u73b0\u7684\u6027\u8d28\uff0c\u5982\u679c\u6211\u4eec\u4ece\u5927\u5230\u5c0f\u904d\u5386\uff0c\u90a3\u4e48\u5148\u904d\u5386\u5230\u7684\u4e00\u5b9a\u4e0d\u4f1a\u662f\u5728\u540e\u904d\u5386\u5230\u7684\u7956\u5148\u96c6\u5408\u4e2d\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u9636\u6bb5\uff0c\u53ef\u4ee5\u4ece\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\u9012\u63a8\uff0c\u4e00\u5c42\u4e00\u5c42\u786e\u5b9a\u7f16\u53f7\u3002</p> <p>\u7136\u540e\u6ce8\u610f\u5230\u6211\u4eec\u53ea\u6ee1\u8db3\u4e86 \\(a\\) \u7684\u9650\u5236\uff0c\u6ca1\u8003\u8651\u65e0\u89e3\u7684\u95ee\u9898\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u53d1\u73b0\u6784\u9020\u7684\u65f6\u5019\u51b2\u7a81\u4e86\uff0c\u6216\u8005\u6784\u9020\u51fa\u6765\u7684\u7236\u8282\u70b9\u5bf9\u5e94\u4e0d\u4e0a\uff0c\u5c31\u662f\u65e0\u89e3\u4e86\u3002</p> <p>\u611f\u89c9\u8fd9\u9898\u975e\u5e38\u6709\u610f\u601d\uff01\uff01\u5176\u5b9e\u4e5f\u662f\u8003\u8651\u751f\u6210\u8fc7\u7a0b\uff0c\u7136\u540e\u901a\u8fc7\u627e\u5230\u9636\u6bb5\u6027\u8d28\u4e00\u6b65\u6b65\u786e\u5b9a\u7b54\u6848\uff01</p> Code <pre><code>// author : black_trees\n\n#include &lt;map&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long \n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint n, siz[si];\nint pa[si], dep[si], d[si];\nstd::map&lt;int, int&gt; idx;\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; d[i], idx[d[i]] = i, siz[i] = 1;\nsort(d + 1, d + 1 + n);\n\nfor(int i = n; i &gt; 1; --i) {\nint u, fa;\nu = idx[d[i]], fa = idx[d[i] + siz[u] * 2 - n];\npa[u] = fa, siz[fa] += siz[u];\nif(!fa || pa[fa]) return cout &lt;&lt; \"-1\" &lt;&lt; endl, 0;\n}\nint dis = 0;\nfor(int i = 2, u; i &lt;= n; ++i)\nu = idx[d[i]], dep[u] = dep[pa[u]] + 1, dis += dep[u];\nif(dis != d[1]) return cout &lt;&lt; \"-1\" &lt;&lt; endl, 0;\nfor(int i = 2; i &lt;= n; ++i) cout &lt;&lt; idx[d[i]] &lt;&lt; \" \" &lt;&lt; pa[idx[d[i]]] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-02/", "title": "2022\u5e742\u6708AT&CF", "text": ""}, {"location": "rec/atcf-for-2022-02/#_1", "title": "\u4e8c\u6708\u597d\u9898\u6539\u9519", "text": ""}, {"location": "rec/atcf-for-2022-02/#cf1638e-colorful-operations", "title": "CF1638E Colorful Operations", "text": "<p><code>Feb/22/2022</code></p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u652f\u6301\u4e09\u79cd\u64cd\u4f5c + <code>0 l r v</code> \u5c06 \\([l,r]\\) \u6d82\u6210\u989c\u8272 \\(v\\) + <code>1 v x</code> \u5c06\u6240\u6709\u989c\u8272 \\(v\\) \u7684\u5143\u7d20\u52a0\u4e0a \\(x\\) + <code>2 x</code> \u67e5\u8be2 \\(a_x\\) </p> <p>1e6.</p> <p>\u6559\u4f1a\u6211ODT\u7684\u9898\u3002</p> <p>\u9996\u5148\u53ef\u4ee5\u76f4\u63a5\u5229\u7528 ODT \u7ef4\u62a4\u6bcf\u4e2a\u6bb5\u3002</p> <p>\u64cd\u4f5c0\u5c31\u662f <code>assign</code></p> <p>\u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u8003\u8651\u5bf9\u6bcf\u4e2a\u989c\u8272\u7ef4\u62a4\u4e00\u4e2a \\(tag\\) \u3002</p> <p>\u8868\u793a\u8fd9\u4e2a\u989c\u8272\u5f53\u524d\u4e00\u5171\u52a0\u4e86\u591a\u5c11\u3002</p> <p>\u7136\u540e <code>assign</code> \u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u88ab\u6539\u53d8\u989c\u8272\u7684\u5757\uff0c\u5148\u5229\u7528\u6811\u72b6\u6570\u7ec4\u628a\u4ed6\u7684\u503c\u52a0\u4e0a \\(tag\\) \uff0c\u63a8\u5e73\u4e4b\u540e\u8fd8\u8981\u51cf\u53bb\u65b0\u989c\u8272\u7684 \\(tag\\)\u3002</p> <p>\u64cd\u4f5c 2 \u5229\u7528\u6811\u72b6\u6570\u7ec4 + \u5dee\u5206\u8be2\u95ee\u4e4b\u540e\u518d\u52a0\u4e0a\u5f53\u524d\u989c\u8272\u7684 \\(tag\\) \u5373\u53ef\u3002 </p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si=1e6+10;\nint n,q;\nint a[si];\nint tag[si];\n\ninline int lowbit(int x){ return x&amp;-x; }\nstruct BIT{\nint n,c[si],ans=0;\ninline void modify(int x,int y){ for(register int i=x;i&lt;=n;i+=lowbit(i)) c[i]+=y;}\ninline void add(int l,int r,int v){ modify(l,v),modify(r+1,-v); }\ninline int query(int x){ans=0; for(register int i=x;i;i-=lowbit(i)) ans+=c[i]; return ans; }\n}bitr;\n\nstruct node{\nint l,r;\nmutable int val;\nnode(const int &amp;il,const int &amp;ir,const int &amp;iv):l(il),r(ir),val(iv){}\ninline bool operator &lt; (const node &amp;b)const{ return l&lt;b.l; }\n}; std::set&lt;node&gt;odt;\ninline std::set&lt;node&gt;::iterator split(int pos){\nif(pos&gt;n) return odt.end();\nstd::set&lt;node&gt;::iterator it=--odt.upper_bound((node){pos,0,0});\nif(it-&gt;l==pos) return it;\nint l=it-&gt;l,r=it-&gt;r,v=it-&gt;val;\nodt.erase(it),odt.insert(node{l,pos-1,v});\nreturn odt.insert((node){pos,r,v}).first;\n}\ninline void assign(int l,int r,int v){\nstd::set&lt;node&gt;::iterator itr=split(r+1),itl=split(l);\nfor(std::set&lt;node&gt;::iterator it=itl;it!=itr;++it){\nbitr.add(it-&gt;l,it-&gt;r,tag[it-&gt;val]); } odt.erase(itl,itr),odt.insert((node){l,r,v});\nbitr.add(l,r,-tag[v]);\n}\ninline int Tag(int pos){\nstd::set&lt;node&gt;::iterator it=odt.lower_bound(node{pos,0,0});\nif(it!=odt.end() &amp;&amp; it-&gt;l==pos) return tag[it-&gt;val];\n--it; return tag[it-&gt;val];\n}\n\nsigned main(){\nscanf(\"%lld%lld\",&amp;n,&amp;q),odt.insert((node){1,n,1});\nbitr.n=n; string op; int l,r,c;\nwhile(q--){ cin&gt;&gt;op;\nif(op==\"Color\") scanf(\"%lld%lld%lld\",&amp;l,&amp;r,&amp;c),assign(l,r,c);\nif(op==\"Add\") scanf(\"%lld%lld\",&amp;l,&amp;c),tag[l]+=c;\nif(op==\"Query\") scanf(\"%lld\",&amp;c),printf(\"%lld\\n\",Tag(c)+bitr.query(c));\n} return 0; }\n</code></pre> <pre><code>Tag : ODT/\u6811\u72b6\u6570\u7ec4/\u5dee\u5206\n</code></pre>"}, {"location": "rec/atcf-for-2022-02/#cf1635e-cars", "title": "CF1635E Cars", "text": "<p><code>Feb/23/2022</code></p> <p>\u5728\u4e00\u4e2a\u6570\u8f74\u4e0a\u6709\u4e00\u4e9b\u8f66\uff0c\u6bcf\u4e2a\u8f66\u90fd\u6709\u521d\u59cb\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u65b9\u5411\u4e0d\u4f1a\u6539\u53d8\uff0c\u5f00\u59cb\u8fd0\u52a8\u540e\u901f\u5ea6\u4e0d\u53d8\u3002 \u79f0\u4e24\u8f86\u8f66\u76f8\u5173\uff0c\u5f53\u4e14\u4ec5\u5f53\u4ed6\u4eec\u4e00\u5b9a\u4f1a\u76f8\u9047\uff0c \u79f0\u4e24\u8f86\u8f66\u4e0d\u76f8\u5173\uff0c\u5f53\u4e14\u4ec5\u5f53\u4ed6\u4eec\u4e00\u5b9a\u4e0d\u4f1a\u76f8\u9047\u3002 \u7ed9\u4f60 \\(m\\) \u7ec4\u8f66\u4e4b\u95f4\u76f8\u5173\u4e0d\u76f8\u5173\u7684\u5173\u7cfb\uff0c\u6784\u9020\u4e00\u4e2a\u521d\u59cb\u65b9\u6848\uff0c\u65e0\u89e3\u8f93\u51fa-1\u3002</p> <p>2e5.</p> <p>\u53d1\u73b0\u4e24\u8f86\u8f66\u60f3\u8981\u6709\u5173\u7cfb\uff0c\u5fc5\u987b\u65b9\u5411\u76f8\u53cd\u3002</p> <p>\u8fd9\u91cc\u7528\u4e8c\u5206\u56fe\u67d3\u8272\u5224\u5b9a\u5373\u53ef\uff08\u9700\u8981\u8003\u8651\u4e0d\u8054\u901a\u7684\u60c5\u51b5\uff09</p> <p>\u7136\u540e\u6211\u4eec\u8003\u8651\u4efb\u610f\u4e00\u5bf9\u8f66 \\((u,v)\\)</p> <p>\u5047\u8bbe \\(u\\) \u7684\u65b9\u5411\u662f Right\uff0c\\(v\\) \u7684\u65b9\u5411\u662f Left\u3002</p> <p>\u90a3\u4e48\u5982\u679c \\((u,v)\\) \u76f8\u5173\uff0c\u90a3\u4e48 \\(u\\) \u5728\u6570\u8f74\u4e0a\u9762\u7684\u4f4d\u7f6e\u5fc5\u5b9a\u5c0f\u4e8e \\(v\\)</p> <p>\u5982\u679c\u4e0d\u76f8\u5173\uff0c \\(u\\) \u5728\u6570\u8f74\u4e0a\u9762\u7684\u4f4d\u7f6e\u5fc5\u5b9a\u5927\u4e8e \\(v\\)</p> <p>\u7b2c\u4e00\u79cd\u5173\u7cfb\u8bb0\u4f5c \\(u \\to v\\)</p> <p>\u7b2c\u4e8c\u79cd\u5173\u7cfb\u8bb0\u4f5c \\(v\\to u\\)</p> <p>\u8fd9\u662f\u4e00\u4e2a\u4e25\u683c\u504f\u5e8f\u5173\u7cfb\uff0c\u6240\u4ee5\u53ef\u4ee5\u8054\u7cfb\u5230 DAG\uff0c\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u5224\u65ad\u8fd9\u4e2a\u4e25\u683c\u504f\u5e8f\u5173\u7cfb\u662f\u5426\u6210\u7acb\u5373\u53ef\u3002</p> <p>\u521d\u59cb\u4f4d\u7f6e\u7528\u62d3\u6251\u5e8f\u6c42\u89e3\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si=2e5+10;\nint n,m;\nstd::vector&lt;int&gt;GO[si],G[si];\nint col[si],ord[si],x[si];\nbool vis[si],have_sol=true;\nstruct node{ int ty,u,v; }a[si];\ninline void dfs(int u,int cur){\ncol[u]=cur,vis[u]=true;\nfor(int &amp;v:GO[u]){\nif(vis[v] &amp;&amp; col[v]==cur) have_sol=false;\nif(vis[v]) continue; dfs(v,cur==1?2:1);\n}\n}\n\nsigned main(){\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(register int i=1;i&lt;=m;++i){\nscanf(\"%lld%lld%lld\",&amp;a[i].ty,&amp;a[i].u,&amp;a[i].v);\nGO[a[i].u].push_back(a[i].v),GO[a[i].v].push_back(a[i].u);\n} for(register int i=1;i&lt;=n;++i) if(!vis[i]) dfs(i,1);\nif(!have_sol) return puts(\"NO\"),0;\nfor(register int i=1;i&lt;=m;++i){\nint &amp;u=a[i].u,&amp;v=a[i].v;\nif(a[i].ty==1){ if(col[u]==1) G[u].push_back(v),++ord[v]; else G[v].push_back(u),++ord[u]; }\nelse{ if(col[u]==1) G[v].push_back(u),++ord[u]; else G[u].push_back(v),++ord[v]; }\n} std::queue&lt;int&gt;q; for(register int i=1;i&lt;=n;++i) if(ord[i]==0) q.push(i);\nint tot=0; while(!q.empty()){\nint u=q.front(); q.pop(),x[u]=++tot;\nfor(int &amp;v:G[u]) if(!--ord[v]) q.push(v);\n} if(tot!=n) return puts(\"NO\"),0;\nputs(\"YES\"); for(register int i=1;i&lt;=n;++i){\nif(col[i]==1) putchar('L'); else putchar('R'); printf(\" %lld\\n\",x[i]);\n} return 0;\n}\n</code></pre> <p>Trick</p> <p>\u4e25\u683c\u504f\u5e8f\u5173\u7cfb\u53ef\u4ee5\u5229\u7528\u62d3\u6251\u6392\u5e8f\u6765\u5224\u5b9a/\u6c42\u89e3\u3002</p> <p>\u53c2\u8003 https://zhuanlan.zhihu.com/p/470044525</p> <pre><code>Tag : \u62d3\u6251\u6392\u5e8f/\u4e8c\u5206\u56fe/\u504f\u5e8f\u5173\u7cfb\n</code></pre>"}, {"location": "rec/atcf-for-2022-02/#cf1635f-closest-pair", "title": "CF1635F Closest Pair", "text": "<p><code>Feb/25/2022</code></p> <p>\u7ed9\u4f60\u4e24\u4e2a\u5e8f\u5217 \\(x,w\\) ,\u5b9a\u4e49\u4e00\u4e2a\u70b9\u5bf9 \\((i,j)\\) \u7684\u6743\u503c\u4e3a \\(|x_i-x_j|\\times (w_i+w_j)\\) \\(q\\) \u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4 \\([l,r]\\) \u5f53\u4e2d\u7684\u70b9\u5bf9\u6743\u503c\u7684\u6700\u5c0f\u503c\u3002</p> <p>3e5.</p> <p>\u8003\u8651\u628a \\(x\\) \u5f53\u4f5c \\(x\\) \u8f74\uff0c\\(w\\) \u5f53\u4f5c \\(y\\) \u8f74\u3002</p> <p>\u90a3\u4e48\u628a\u6bcf\u4e2a\u70b9 \\((x_i,w_i)\\) \u653e\u5230\u5750\u6807\u7cfb\u91cc\u9762\u3002</p> <p>\u5982\u679c\u4e24\u4e2a\u70b9\u5f62\u6210\u7684\u6b63\u65b9\u5f62\u5f53\u4e2d\u6709\u522b\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u70b9\u5fc5\u5b9a\u4e0d\u662f\u6700\u4f18\u7684\u3002</p> <p>\u5f62\u5f0f\u5316\u7684\uff0c\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u5bf9 \\((i,j)\\) \uff0c\\(\\exist k \\ | \\ x_i&lt;x_k&lt;x_y \\ \\land \\ w_i&lt;w_k&lt;w_j\\)</p> <p>\u90a3\u4e48 \\((i,j)\\) \u5fc5\u5b9a\u4e0d\u662f\u6700\u4f18\u7684\u3002</p> <p>\u53e6\u5916\u4e00\u8fb9\u7684\u60c5\u51b5\u4e00\u6837\u3002</p> <p>\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(i\\) \uff0c\u5229\u7528\u5355\u8c03\u6808\u5411\u540e\u5904\u7406\u51fa\u6240\u6709\u7684\u53ef\u80fd\u6700\u4f18\u70b9\u5bf9 \\((i,j)\\)\u3002</p> <p>\u7136\u540e\u628a\u8fd9\u4e2a\u70b9\u5bf9\u770b\u4f5c\u662f\u4e00\u4e2a\u7b54\u6848\u533a\u95f4 \\([i,j]\\)\uff0c\u6743\u503c\u5c31\u662f\u8fd9\u4e2a\u70b9\u5bf9\u7684\u8d21\u732e\u3002</p> <p>\u90a3\u4e48\u79bb\u7ebf\u4e4b\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5c31\u662f\u6c42\u8be2\u95ee\u7684\u533a\u95f4\u5f53\u4e2d\u5305\u542b\uff08\u6216\u8005\u4ea4\uff09\u7684\u7b54\u6848\u533a\u95f4\u7684\u6743\u503c\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528 Fenwick Tree \u6216\u8005 Segment Tree \u7ef4\u62a4\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si=3e5+10;\nconstexpr int inf=4e18+1;\nint n,q;\nstruct Fenwick{\nint a[si];\nFenwick(){memset(a,0x7f,sizeof a);}\ninline int lowbit(int x){ return x&amp;-x; }\ninline void modify(int x,int v){x=n-x+1;while(x&lt;=n)a[x]=min(a[x],v),x+=lowbit(x);}\ninline int sum(int x){int ans=inf;x=n-x+1;while(x)ans=min(ans,a[x]),x-=lowbit(x);return ans;}   }tr;\nint x[si],w[si];\nint Stack[si],Top;\nstd::vector&lt;std::pair&lt;int,int&gt;&gt;a[si];\nint ans[si];\n\nsigned main(){\ncin&gt;&gt;n&gt;&gt;q; for(register int i=1;i&lt;=n;++i) cin&gt;&gt;x[i]&gt;&gt;w[i];\nfor(register int i=1;i&lt;=q;++i){\nint l,r; cin&gt;&gt;l&gt;&gt;r; a[r].push_back(make_pair(l,i));\n} for(register int i=1;i&lt;=n;++i){\nwhile(Top &amp;&amp; w[i]&lt;=w[Stack[Top]]) tr.modify(Stack[Top],(x[i]-x[Stack[Top]])*(w[i]+w[Stack[Top]])),--Top;\nif(Top) tr.modify(Stack[Top],(x[i]-x[Stack[Top]])*(w[i]+w[Stack[Top]]));\nStack[++Top]=i; for(auto x:a[i]) ans[x.second]=tr.sum(x.first);\n} for(register int i=1;i&lt;=q;++i) cout&lt;&lt;ans[i]&lt;&lt;endl;\nreturn 0;\n}\n</code></pre> <p>Trick</p> <p>\u6700\u4f18\u6027\u95ee\u9898\u7684\u65f6\u5019\u53ef\u4ee5\u8003\u8651\u67d0\u4e2a\u7b54\u6848\u5982\u4f55\u624d\u53ef\u80fd\u662f\u6700\u4f18\u7684\uff0c\u4ee5\u6b64\u6392\u9664\u5197\u6742\u51b3\u7b56\u3002</p> <pre><code>Tag : \u601d\u7ef4/\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\n</code></pre>"}, {"location": "rec/atcf-for-2022-02/#abc239f-construct-highway", "title": "ABC239F Construct Highway", "text": "<p><code>Feb/28/2022</code></p> <p>\u7ed9\u4f60\u4e00\u9897\u6811\uff0c\u53ea\u544a\u8bc9\u4f60\u4e00\u90e8\u5206\u8fb9\u548c\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u3002</p> <p>\u6784\u9020\u8fd9\u68f5\u6811\u3002</p> <p>2e5.</p> <p>\u9996\u5148\uff0c\u5982\u679c\u7ed9\u51fa\u7684\u5ea6\u6570\u4e4b\u548c\u4e0d\u7b49\u4e8e \\(2n-2\\) \uff0c\u660e\u663e\u65e0\u89e3\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u7ed9\u51fa\u7684\u8fd9\u4e9b\u8fb9\u4f1a\u628a\u6240\u6709\u7684\u8282\u70b9\u5206\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u5728\u8fde\u901a\u5757\u4e4b\u95f4\u8fde\u8fb9\u3002</p> <p>\u5982\u679c\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u9762\u7684\u4e24\u4e2a\u70b9\u8fde\u8fb9\uff0c\u90a3\u4e5f\u662f\u65e0\u89e3\u7684\u3002</p> <p>\u6700\u7279\u6b8a\u7684\u662f\u53ea\u9700\u8981\u4e00\u4e2a\u5ea6\u6570\u7684\u8fde\u901a\u5757\uff0c\u56e0\u4e3a\u6700\u540e\u5fc5\u987b\u662f\u4e00\u68f5\u6811\uff0c\u5b83\u60f3\u8981\u8054\u901a\uff0c\u5c31\u5fc5\u5b9a\u4e0d\u80fd\u548c\u53e6\u5916\u4e00\u4e2a\u9700\u8981\u4e00\u4e2a\u5ea6\u6570\u7684\u8fde\u901a\u5757\u8fde\u8fb9\u3002</p> <p>\u9664\u975e\u53ea\u5269\u6700\u540e\u4e24\u4e2a\u8fde\u901a\u5757\u3002</p> <p>\u5426\u5219\u6700\u540e\u6784\u9020\u51fa\u6765\u7684\u4f1a\u662f\u4e2a\u68ee\u6797\u3002</p> <p>\u6240\u4ee5\u628a\u6240\u6709\u8fde\u901a\u5757\u5206\u6210\u4e24\u7ec4\uff0c\u4e00\u7ec4\u662f\u53ea\u9700\u8981\u4e00\u4e2a\u5ea6\u6570\u7684\u8fde\u901a\u5757\uff0c\u53e6\u5916\u4e00\u7ec4\u662f\u9700\u8981\u81f3\u5c11\u4e24\u4e2a\u7684\u3002</p> <p>\u7136\u540e\u5c31\u8ba9\u7b2c\u4e00\u7ec4\u7684\u4e0d\u65ad\u548c\u7b2c\u4e8c\u7ec4\u7684\u8fde\u8fb9\uff0c\u7b2c\u4e8c\u7ec4\u7ec4\u5185\u6392\u5e8f\u4ece\u5c0f\u5230\u5927\uff0c\u5982\u679c\u7b2c\u4e8c\u7ec4\u7684\u67d0\u4e2a\u8fde\u901a\u5757\u5728\u8fde\u5b8c\u4e4b\u540e\u53d8\u6210\u4e86\u53ea\u9700\u8981\u4e00\u4e2a\u7684\uff0c\u6254\u8fdb\u7b2c\u4e00\u7ec4\u3002</p> <p>\u5176\u5b83\u60c5\u51b5\u5c31\u662f\u65e0\u89e3\u4e86\u3002</p> <p>\u5229\u7528 dsu \u7ef4\u62a4\u5373\u53ef\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si=2e5+10;\nint n,m,sum=0; int deg[si];\nstd::vector&lt;int&gt;f[si];\nstruct Mycmp{ inline bool operator ()(int x,int y)const{ return f[x].size()&lt;f[y].size(); } };\nstruct Dsu{\nint pa[si];\ninline int root(int x){ if(pa[x]!=x) return pa[x]=root(pa[x]); return pa[x]; }\ninline bool same(int x,int y){ return root(x)==root(y); }\ninline void Union(int x,int y){ int rx=root(x),ry=root(y);if(rx==ry) return; pa[rx]=ry; }\n}dsu; std::multiset&lt;int,Mycmp&gt;s;\nstd::vector&lt;pair&lt;int,int&gt;&gt;ans;\n\nsigned main(){ cin&gt;&gt;n&gt;&gt;m; for(register int i=1;i&lt;=n;++i) cin&gt;&gt;deg[i],sum+=deg[i],dsu.pa[i]=i;\nif(sum!=2*n-2) return puts(\"-1\"),0;\nf[0].push_back(0); for(register int i=1;i&lt;=m;++i){\nint u,v; cin&gt;&gt;u&gt;&gt;v; --deg[u],--deg[v]; if(dsu.same(u,v)) return puts(\"-1\"),0; dsu.Union(u,v);  } for(register int i=1;i&lt;=n;++i) if(deg[i]&lt;0) return puts(\"-1\"),0; else while(deg[i]--) f[dsu.root(i)].push_back(i);\nfor(register int i=1;i&lt;=n;++i) if(f[i].size()&gt;0) s.insert(i);\nwhile(!s.empty()){\nstd::multiset&lt;int,Mycmp&gt;::iterator it=s.begin(),itt=s.upper_bound(0);\nint rmp=*it;\nif(f[*it].size()&gt;1) return puts(\"-1\"),0; s.erase(it);\nif(!f[rmp].size()) continue;\nif(itt==s.end()){\nstd::multiset&lt;int,Mycmp&gt;::iterator yt=std::prev(s.end()); int ls=*yt; ans.push_back({f[rmp][0],*prev(f[ls].end())}),s.erase(yt);\n}\nelse{\nint ls=*itt; ans.push_back({f[rmp][0],*prev(f[ls].end())});\ns.erase(itt),f[ls].pop_back(),s.insert(ls);\n}\n} for(std::pair&lt;int,int&gt;x:ans) cout&lt;&lt;x.first&lt;&lt;\" \"&lt;&lt;x.second&lt;&lt;endl; return 0;\n}\n</code></pre> <pre><code>Tag : \u5e76\u67e5\u96c6/\u6784\u9020/\u601d\u7ef4\n</code></pre>"}, {"location": "rec/atcf-for-2022-02/#cf1642ecf1641c-anonymity-is-important", "title": "CF1642E/CF1641C Anonymity Is Important", "text": "<p><code>Feb/24/2022</code></p> <p>\u7ed9\u4f60\u4e00\u4e2a\u75c5\u4eba\u7684\u5e8f\u5217\uff0c\u521d\u59cb\u4e0d\u77e5\u9053\u4efb\u4f55\u5173\u4e8e\u75c5\u4eba\u7684\u4fe1\u606f\u3002</p> <p>\u73b0\u5728\u6709 \\(q\\) \u6b21\u64cd\u4f5c\uff0c\u7b2c\u4e00\u79cd\u662f <code>0 l r 0/1</code>  \u8868\u793a\u786e\u5b9a \\([l,r]\\) \u5f53\u4e2d\u6709\u6ca1\u6709\u75c5\u4eba</p> <p>\u7b2c\u4e8c\u79cd\u662f\u8be2\u95ee <code>1 x</code> \uff0c\u8981\u6c42\u8f93\u51fa\u5728\u5f53\u524d\u5df2\u77e5\u4fe1\u606f\u4e0b\uff0c\u75c5\u4eba \\(x\\) \u7684\u72b6\u6001\uff08\u6ca1\u75c5\uff0c\u6709\u75c5\uff0c\u4e0d\u786e\u5b9a\uff09\u3002</p> <p>2e5.  </p> <p>\u8fd9\u9898\u6709\u5f88\u591a\u79cd\u505a\u6cd5\uff0c\u6211\u7684\u505a\u6cd5\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u7c7b\u4f3c jiangly \u505a\u6cd5\u7684\u4e00\u4e2a <code>std::set</code> \u7ef4\u62a4\u3002</p> <p>\u53e6\u5916\u4e00\u79cd\u662f odt\u3002</p> <ul> <li>set \u505a\u6cd5\uff1a</li> </ul> <p>\u601d\u8def\u4e4b\u540e\u8865\uff0c\u5148\u653e\u4ee3\u7801</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nint n,q;\n\nsigned main(){\ncin&gt;&gt;n&gt;&gt;q; std::set&lt;int&gt;s; for(register int i=-1;i&lt;=n;++i) s.insert(i);\nstd::map&lt;int,int&gt;rec; while(q--){ int op; cin&gt;&gt;op;\nif(op==0){ int l,r,x; cin&gt;&gt;l&gt;&gt;r&gt;&gt;x; --l;\nif(!x){\nstd::set&lt;int&gt;::iterator it=s.lower_bound(l);\nwhile(*it&lt;r) it=s.erase(it);\n}   else{\nstd::map&lt;int,int&gt;::iterator it=rec.lower_bound(l);\nif(it!=rec.end() &amp;&amp; it-&gt;second&lt;=r) continue;\nrec[l]=r,it=rec.find(l);\nwhile(it!=rec.begin() &amp;&amp; r&lt;=std::prev(it)-&gt;second) rec.erase(std::prev(it));\n}\n}\nelse{ int x;cin&gt;&gt;x;--x;\nif(!s.count(x)) puts(\"NO\");\nelse{\nauto qwq=s.find(x);\nint l=*std::prev(qwq),r=*std::next(qwq);\nauto it=rec.upper_bound(l);\nif(it!=rec.end() &amp;&amp; it-&gt;second&lt;=r) puts(\"YES\");\nelse puts(\"N/A\");\n}\n}\n} return 0;\n}\n</code></pre> <ul> <li>odt \u505a\u6cd5\uff1a</li> </ul> <p>\u9996\u5148\u8003\u8651\u5229\u7528 odt \u7ef4\u62a4\u6574\u4e2a\u5e8f\u5217\uff0c\u521d\u59cb\u63d2\u5165\u4e00\u4e2a \\((1,n,-1)\\) \u7684\u8282\u70b9\u8868\u793a\u6574\u4e2a\u5e8f\u5217\u90fd\u4e0d\u786e\u5b9a\u3002</p> <p>\u53d1\u73b0 \\(0\\) \u7684\u4f18\u5148\u7ea7\u662f\u6700\u9ad8\u7684\uff0c\\(1\\) \u4e0d\u80fd\u8986\u76d6\u5b83\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u662f <code>0 l r 0</code> \uff0c\u76f4\u63a5\u66b4\u529b <code>assign</code> \u5373\u53ef\u3002</p> <p>\u4f46\u662f\u5982\u679c\u662f <code>0 l r 1</code> \uff0c\u5c31\u8981\u8003\u8651\u4e0d\u8986\u76d6 \\((l,r,0)\\) \u7684\u8282\u70b9\u3002</p> <p>\u76f4\u63a5\u66b4\u529b\u5373\u53ef\uff0c\u7528\u94fe\u8868\u7ef4\u62a4\u7684\u8bdd\u590d\u6742\u5ea6\u5e94\u8be5\u6ca1\u592a\u5927\u95ee\u9898\u3002</p> <p>\u5982\u679c\u6700\u540e\u8be2\u95ee\u7684\u4f4d\u7f6e\u7684\u989c\u8272\u662f \\(1\\) \u5e76\u4e14\u8fd9\u4e2a\u5757\u7684\u957f\u5ea6\u662f \\(1\\) \uff0c\u7b54\u6848\u5c31\u662f YES</p> <p>\u5982\u679c\u8be2\u95ee\u5230 \\(0\\)\uff0c\u7b54\u6848\u662f NO</p> <p>\u5982\u679c\u8be2\u95ee\u5230 \\(-1\\) \u6216\u8005\u5757\u957f\u4e0d\u4e3a \\(1\\) \u7684\u989c\u8272\u4e3a \\(1\\) \u7684\u5757\uff0c\u7b54\u6848\u662f N/A\u3002</p> <p>\u53e6\u5916\u4e00\u79cd odt \u5957 odt \u7684\u505a\u6cd5\u4f3c\u4e4e\u6ca1\u6709\u5fc5\u8981\u3002</p> <pre><code>Tag : \u66b4\u529bDS/ODT/\u67d3\u8272\n</code></pre>"}, {"location": "rec/atcf-for-2022-02/#abc241f-skate", "title": "ABC241F Skate", "text": "<p><code>Feb/28/2022</code></p> <p>\u7ed9\u4e00\u4e2a\u77e9\u9635\uff0c\u67d0\u4e9b\u4f4d\u7f6e\u6709\u969c\u788d\uff0c\u6bcf\u6b21\u79fb\u52a8\u5fc5\u987b\u8981\u5728\u6700\u540e\u649e\u5230\u4e00\u4e2a\u969c\u788d\uff0c</p> <p>\u95ee\u4ece \\((s_x,s_y)\\) \u5230 \\((g_x,g_y)\\) \u7684\u6700\u5c0f\u6b65\u6570\u3002</p> <p>\u77e9\u96351e9\uff0c\u969c\u788d1e5\uff0c\u8d77\u70b9\u7ec8\u70b9\u4e0d\u91cd\u5408\u3002</p> <p>\u7ec6\u8282\u7565\u5fae\u6709\u70b9\u591a\u7684 BFS\u3002</p> <p>\u56e0\u4e3a\u6bcf\u4e00\u6b65\u6700\u540e\u53ea\u4f1a\u505c\u5728\u969c\u788d\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u3002</p> <p>\u6240\u4ee5\u628a\u969c\u788d\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u90fd\u5efa\u4e00\u4e2a\u70b9\uff0c\u5206\u522b\u548c\u53ef\u4ee5\u5230\u5b83\u7684\u70b9\u8fde\u8fb9\u3002</p> <p>\u7136\u540e BFS \u5373\u53ef\u3002</p> <p>\u6570\u636e\u8303\u56f4\u5df2\u7ecf\u63d0\u793a\u4e86\u8981\u4ece\u969c\u788d\u5165\u624b\u4e86\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si=1e6+10;\nstd::map&lt;int,std::set&lt;int&gt;&gt;row,col;\nstd::map&lt;std::pair&lt;int,int&gt;,int&gt;rec;\nstd::vector&lt;int&gt;G[si];\nint dis[si];\nint sx,sy,gx,gy;\nint h,w,n,tot=0;\ninline void node(int x,int y){ if(!(x&lt;1 || x&gt;h || y&lt;1 || y&gt;w) &amp;&amp; !rec.count({x,y})) rec[{x,y}]=++tot; }\ninline void add(int x,int y){ G[x].push_back(y); }\ninline void bfs(int s){\nfor(register int i=1;i&lt;=tot;++i) dis[i]=-1;\nstd::queue&lt;int&gt;q; q.push(s),dis[s]=0;\nwhile(!q.empty()){\nint u=q.front();q.pop();\nfor(int v:G[u]){\nif(!~dis[v]) dis[v]=dis[u]+1,q.push(v);\n}\n}\n}\n\nsigned main(){\ncin&gt;&gt;h&gt;&gt;w&gt;&gt;n&gt;&gt;sx&gt;&gt;sy&gt;&gt;gx&gt;&gt;gy;\nfor(register int i=1,u,v;i&lt;=n;++i) cin&gt;&gt;u&gt;&gt;v,row[u].insert(v),col[v].insert(u),node(u-1,v),node(u+1,v),node(u,v+1),node(u,v-1); node(sx,sy),node(gx,gy);\nfor(std::pair&lt;pair&lt;int,int&gt;,int&gt;iter:rec){\nint x=iter.first.first,y=iter.first.second;\nstd::_Rb_tree_const_iterator&lt;int&gt; it;\nit=row[x].lower_bound(y); if(it!=row[x].begin()) add(rec[{x,y}],rec[{x,*std::prev(it)+1}]);\nit=row[x].upper_bound(y); if(it!=row[x].end()) add(rec[{x,y}],rec[{x,*it-1}]);\nit=col[y].lower_bound(x); if(it!=col[y].begin()) add(rec[{x,y}],rec[{*std::prev(it)+1,y}]);\nit=col[y].upper_bound(x); if(it!=col[y].end()) add(rec[{x,y}],rec[{*it-1,y}]);\n} bfs(rec[{sx,sy}]);\nreturn printf(\"%lld\\n\",dis[rec[{gx,gy}]]),0;\n}\n</code></pre> <p>Trick</p> <p>\u591a\u8bfb\u4e00\u8bfb\u6570\u636e\u8303\u56f4</p> <pre><code>Tag : BFS/\u601d\u7ef4 </code></pre>"}, {"location": "rec/atcf-for-2022-03/", "title": "2022\u5e743\u6708AT&CF", "text": ""}, {"location": "rec/atcf-for-2022-03/#_1", "title": "\u4e09\u6708\u597d\u9898\u6539\u9519", "text": ""}, {"location": "rec/atcf-for-2022-03/#cf1646e-power-board", "title": "CF1646E Power Board", "text": "<p><code>Mar/05/2022</code></p> <p>\u7ed9\u4f60\u4e00\u4e2a \\(n\\times m\\) \u7684\u77e9\u9635\uff0c\u4e14 \\(a_{i,j}=i^j\\)\u3002\u6c42\u8fd9\u4e2a\u77e9\u9635\u5f53\u4e2d\u6709\u591a\u5c11\u4e0d\u540c\u7684\u6570\u3002</p> <p>1e6\u3002</p> <p>\u66b4\u529b\u660e\u663e\u7206\u70b8\u3002</p> <p>\u8003\u8651\u5bb9\u65a5\u4e4b\u7c7b\u7684\u505a\u6cd5\u6765\u53bb\u91cd\u3002</p> <p>\u53d1\u73b0\u4e24\u4e2a\u4e0d\u540c\u884c \\((i,j)\\) \u4f1a\u751f\u6210\u91cd\u590d\u7684\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(\\exist d,a,b \\ |\\ i=d^a,j=d^b\\)\u3002</p> <p>\u6bd4\u5982 \\(2,4,8\\) \u8fd9\u79cd\u3002</p> <p>\u5217\u4e00\u4e2a\u8868\uff1a</p> \\[\\begin{bmatrix}2^1&amp;2^2&amp;2^3&amp;\\dots&amp;2^m \\\\4^1&amp;4^2&amp;4^3&amp;\\dots&amp;4^m\\\\8^1&amp;8^2&amp;8^3&amp;\\dots&amp;8^m\\end{bmatrix}\\] <p>\u5316\u6210 \\(2\\) \u7684\u6b21\u5e42\u5f62\u5f0f\uff1a </p> \\[\\begin{bmatrix}2^1&amp;2^2&amp;2^3&amp;\\dots&amp;2^m \\\\2^2&amp;2^4&amp;2^6&amp;\\dots&amp;2^{2m}\\\\2^3&amp;2^6&amp;2^9&amp;\\dots&amp;2^{3m}\\end{bmatrix}\\] <p>\u8003\u8651\u6307\u6570\uff1a</p> \\[\\begin{bmatrix}1&amp;2&amp;3&amp;\\dots&amp;m \\\\2&amp;4&amp;6&amp;\\dots&amp;{2m}\\\\3&amp;6&amp;9&amp;\\dots&amp;{3m}\\end{bmatrix}\\] <p>\u5982\u679c\u53ea\u8003\u8651 \\(2,4,8,16\\) \u8fd9\u79cd\u7684\u8bdd\uff0c\u7b54\u6848\u5c31\u662f\u4e0a\u9762\u7b2c\u4e09\u4e2a\u8868\u5f53\u4e2d\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u53bb\u6389\u5e95\u6570\u7684\u8fc7\u7a0b\u5c31\u662f\u6c42\u4e86\u4e00\u4e2a \\(\\log\\) \uff0c\u6240\u4ee5\u8868\u91cc\u9762\u7684\u6570\u662f \\(\\log\\) \u7ea7\u522b\u7684\u3002</p> <p>\u5199\u4e00\u4e2a\u66b4\u529b\u5373\u53ef\u67e5\u8be2\u3002</p> <p>\u8f6c\u5316\u5230\u539f\u9898\uff0c\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e0d\u662f\u67d0\u4e00\u4e2a\u6574\u6570\u7684\u5927\u4e8e\u7b49\u4e8e \\(2\\) \u7684\u6574\u6570\u6b21\u5e42\u7684\u6570\u6c42\u4e00\u6b21\u3002</p> <p><code>std::bitset</code> \u5373\u53ef\u3002 \u601d\u8def\u6765\u81ea\uff1ahttps://codeforces.com/blog/entry/100584?#comment-892898 @Suri429</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long \nconstexpr int si=1e6+10;\nint s=1,n,m;\nint a[si],b[si];\nstd::bitset&lt;si*20&gt;c;\n#undef int \n\nint main(){\n#define int long long \nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(register int i=1;i&lt;=20;++i){\nfor(register int j=1;j&lt;=m;++j) c[i*j]=1;\na[i]=c.count();\n}\nfor(register int i=2;i&lt;=n;++i){\nif(b[i]==1) continue;\nint k=1;b[i]=1;\nfor(register int j=i*i;j&lt;=n;j=j*i) b[j]=1,k=k+1;\ns=s+a[k];\n} return printf(\"%lld\",s),0;\n#undef int \n}\n</code></pre> <pre><code>Tag : \u66b4\u529b/bitset/\u601d\u7ef4\n</code></pre>"}, {"location": "rec/atcf-for-2022-03/#cf1647e-madoka-and-the-sixth-graders", "title": "CF1647E Madoka and the Sixth-graders", "text": "<p><code>Mar/22/2022</code></p> <p>\u7ed9 \\(n\\) \u5f20\u684c\u5b50\uff0c\u521d\u59cb\u7684\u65f6\u5019\u684c\u5b50\u4e0a\u5750\u7740\u7684\u5b66\u751f\u7684\u7f16\u53f7\u5206\u522b\u4e3a \\(a_1, a_2, \\dots , a_n\\)\u3002</p> <p>\u4e14 \\(a\\) \u662f\u4e00\u4e2a \\(n\\) \u7684\u6392\u5217\uff0c\u7136\u540e\u7ed9\u5b9a\u51e0\u7ec4\u6709\u5411\u5173\u7cfb \\((i,j)\\)\uff0c\u8868\u793a\u6bcf\u8fc7\u4e00\u8282\u8bfe\uff0c\u684c\u5b50 \\(i\\) \u7684\u5b66\u751f\u4f1a\u79fb\u52a8\u5230\u684c\u5b50 \\(j\\)\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u684c\u5b50\u4e0a\u6709\u8d85\u8fc7\u4e00\u4e2a\u4eba\uff0c\u7559\u4e0b\u7f16\u53f7\u6700\u5c0f\u7684\uff0c\u7136\u540e\u8e22\u51fa\u5176\u4ed6\u7684\u3002</p> <p>\u95e8\u5916\u7684\u5b66\u751f\u7f16\u53f7\u4e3a \\(n+1,n+2,\\dots\\)\u3002</p> <p>\u5982\u679c\u6709\u7a7a\u7684\u4f4d\u7f6e\uff0c\u6309\u7167\u4f4d\u7f6e\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u8ba9\u95e8\u5916\u7684\u5b66\u751f\u4f9d\u6b21\u8fdb\u6765\u586b\u4e0a\u3002</p> <p>\u7ed9\u5b9a\u6700\u7ec8\u7684\u72b6\u6001 \\(b\\) \uff0c\u6c42\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684 \\(a\\)\u3002</p> <p>1e5\u3002</p> <p>\u4fdd\u8bc1\u6bcf\u8282\u8bfe\u603b\u662f\u6709\u5b66\u751f\u88ab\u8e22\u51fa\uff0c\u5b66\u751f\u7684\u7f16\u53f7\u4e92\u4e0d\u76f8\u540c\u3002</p> <p>\u53d1\u73b0\u9898\u76ee\u4fdd\u8bc1\u4e86 \\(p\\) \u5f53\u4e2d\u5fc5\u7136\u6709\u91cd\u590d\u5143\u7d20\u3002</p> <p>\u6240\u4ee5\u6bcf\u4e00\u8f6e\u5fc5\u7136\u4f1a\u6709\u4eba\u88ab\u5f00\u9664\uff0c\u7b49\u4ef7\u4e8e\u6bcf\u4e00\u8f6e\u5fc5\u7136\u6709\u4eba\u8fdb\u5165\u3002</p> <p>\u6240\u4ee5\u6559\u5ba4\u91cc\u7684\u6240\u6709\u6570\u7684\u6700\u5927\u503c\u4e00\u5b9a\u662f\u5355\u8c03\u4e0a\u5347\u7684\u3002</p> <p>\u53ef\u4ee5\u6c42\u51fa\u5f53\u524d\u7ecf\u8fc7\u7684\u8f6e\u6570 \\(k =\\) <code>(*max_element(b + 1, b + 1 + n) - n) / (n - set&lt;int&gt;(p + 1, p + 1 + n).size())</code></p> <p>\u56e0\u4e3a\u7c7b\u4f3c\u6837\u4f8b\u4e00\u5f53\u4e2d\u7684 \u201c\u53cc\u5411\u8fb9\u201d \u5f88\u4e0d\u597d\u5904\u7406\u3002</p> <p>\u6240\u4ee5\u5f53\u52a1\u4e4b\u6025\u662f\u7ecf\u8fc7 \\(k\\) \u8f6e\u4e4b\u540e\uff0c\u539f\u6765\u5728\u67d0\u4e00\u4e2a\u70b9\u7684 stu \u4f1a\u5728\u54ea\u4e00\u4e2a\u70b9\u51fa\u73b0\u3002</p> <p>\u8bbe\u8fd9\u4e2a\u70b9\u4e3a \\(dest[i]\\)</p> <p>\u5e76\u4e14\u5148\u4e0d\u8003\u8651\u88ab\u5f00\u9664\u7684\u60c5\u51b5\u3002</p> <p>\u8fd9\u4e2a\u5982\u679c\u76f4\u63a5\u9012\u63a8\u662f \\(\\text{O}(nk)\\) \u7684\uff0c\u5fc5\u7136\u4f1a TLE\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5173\u4e8e \\(2\\) \u7684\u6b63\u6574\u6570\u6b21\u5e42\u5177\u6709\u5212\u5206\u6027\u3002</p> <p>\u4e5f\u5c31\u662f\u8bbe \\(t[i][j]\\) \u8868\u793a \\(i\\) \u8df3 \\(2^j\\) \u6b65\u53ef\u4ee5\u5230\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5fc5\u7136\u53ef\u4ee5\u5f97\u5230 \\(t[i][j] = t[ t[i][j - 1] ][j - 1]\\).</p> <p>\u66f4\u4e00\u822c\u7684\uff0c \\(t[i][j] = t[ t[ t[ t[i][j-3] ][j-3] ][j-2] ][j-1]\\) \uff0c\u8fd9\u6837\u53ef\u4ee5\u4e00\u76f4\u5d4c\u5957\u4e0b\u53bb\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u9012\u63a8\u5c31\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u500d\u589e\u4f18\u5316\u3002</p> <p>\u6240\u4ee5\u628a \\(k\\) \u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u679a\u4e3e \\(k\\) \u7684\u6bcf\u4e00\u4f4d\uff0c\u5982\u679c\u5f53\u524d\u4f4d\u662f \\(1\\)\uff0c \u90a3\u4e48\u7ed9\u6bcf\u4e00\u4e2a \\(dest\\) \u8df3 \\(2^j\\) \u6b65\uff0c\\(j\\) \u662f\u5f53\u524d\u4f4d\u3002</p> <p>\u521d\u59cb\u5316 \\(to[i][0] = p[i]\\)\u3002</p> <p>\u5bf9\u4e8e\u56e0\u4e3a \\(p[i]\\) \u6709\u91cd\u590d\u7684\uff0c\u6240\u4ee5 \\(dest[i]\\) \u4e5f\u5fc5\u7136\u4f1a\u6709\u91cd\u590d\u7684\u3002</p> <p>\u5047\u8bbe\u67d0\u4e00\u4e2a\u70b9 \\(i\\)\uff0c\u6709\u4e09\u4e2a\u70b9\uff08\u5b9e\u9645\u4e0a\u4e2a\u6570\u4efb\u610f\uff0c\u6b64\u5904\u4e3e\u4f8b\u9700\u8981\uff09 \\(A, B, C\\) \u53ef\u4ee5\u7ecf\u8fc7 \\(k\\) \u8f6e\u5230\u8fbe\u5b83\uff0c</p> <p>\u90a3\u4e48\u7559\u5728\u8fd9\u4e2a\u5730\u65b9\u7684\uff08\\(b[i]\\)\uff09\u5fc5\u7136\u662f\u8fd9\u4e09\u70b9\u8fc7\u6765\u7684\u5b66\u751f\u5f53\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\uff0c</p> <p>\u6240\u4ee5\u6700\u5f00\u59cb\uff08\\(k = 0\\)\uff09\u7684\u65f6\u5019\uff0c\\(A, B, C\\) \u5f53\u4e2d\u5fc5\u7136\u6709\u4e00\u4e2a\u70b9\u7684\u5b66\u751f\u662f \\(b[i]\\)\u3002</p> <p>\u4e3a\u4e86\u8ba9\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u8003\u8651\u8ba9 \\(A, B, C\\) \u5f53\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u4e00\u4e2a\u70b9\u521d\u59cb\u5750\u4e0a \\(b[i]\\)\uff0c\u4e5f\u5c31\u662f\u8ba9\u8fd9\u4e2a\u70b9\u7684 \\(a = b[i]\\)\u3002</p> <p>\u7136\u540e\u73b0\u5728\u5c31\u5df2\u7ecf\u586b\u597d\u4e86\u4e00\u4e9b\u70b9\u3002</p> <p>\u7ef4\u62a4\u5269\u4e0b\u7684\uff0c\u7f16\u53f7\u5728 \\(1 \\sim n\\) \u5f53\u4e2d\u7684\u5b66\u751f\u96c6\u5408 \\(S\\)\uff08\u4e3a\u4ec0\u4e48\u662f \\(1 \\sim n\\) \u539f\u56e0\u663e\u7136\uff09\u3002</p> <p>\u7136\u540e\u4ece\u524d\u5f80\u540e\u626b\u63cf \\(a\\) \u5f53\u4e2d\u6240\u6709\u8fd8\u6ca1\u6709\u7b54\u6848\u7684\u70b9\uff0c\u5bf9\u4e8e\u5f53\u4e2d\u7684\u67d0\u4e00\u4e2a\u70b9 \\(i\\) \uff0c\u5b83\u7ecf\u8fc7 \\(k\\) \u8f6e\u53bb\u5230\u7684\u5730\u65b9\u662f \\(dest[i]\\)\u3002</p> <p>\u90a3\u4e48\u5b83\u7684 \\(a[i]\\) \u5fc5\u7136\u8981\u5927\u4e8e\u6240\u6709 \\(dest = dest[i]\\) \u7684\u70b9\u5f53\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9\u521d\u59cb\u7684 \\(a\\)\uff0c\u4e5f\u5c31\u662f \\(b[dest[i]]\\)\u3002</p> <p>\u6240\u4ee5\u5728\u96c6\u5408 \\(S\\) \u5f53\u4e2d\u4e8c\u5206\u4e00\u4e2a\u5927\u4e8e \\(b[dest[i]]\\) \u7684\uff0c\u6700\u5c0f\u7684\u70b9\u586b\u4e0a\u53bb\u5c31\u53ef\u3002</p> Code <pre><code>#include &lt;set&gt;\n#include &lt;cmath&gt;\n#include &lt;bitset&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;unordered_set&gt;\n\nusing namespace std;\n\nconst int si = 1e5 + 10;\n\nint n;\nint a[si], b[si], p[si];\nint t[si][51];\nint dest[si];\nint tmp[si];\n\nint main() {\ncin &gt;&gt; n;\nint mx = -1; bitset&lt;si&gt; vis;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; p[i], vis[p[i]] = true;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; b[i], mx = max(mx, b[i]);\n\nint k = (mx - n) / (n - vis.count()); // int k = (*max_element(b + 1, b + 1 + n) - n) / (n - unordered_set&lt;int&gt;(p + 1, p + 1 + n).size());\n\nint lg = (int)(log(k) / log(2)) + 1;\n\ncerr &lt;&lt; k &lt;&lt; \" \" &lt;&lt; lg &lt;&lt; endl;\n\nfor(int i = 1; i &lt;= n; ++i) t[i][0] = p[i];\nfor(int j = 1; j &lt;= lg; ++j) {\nfor(int i = 1; i &lt;= n; ++i) {\nt[i][j] = t[t[i][j - 1]][j - 1];\n}\n}\n\nfor(int i = 1; i &lt;= n; ++i) dest[i] = i;\n\nfor(int j = lg; j &gt;= 0; --j) {\nif(k &gt;&gt; j &amp; 1) {\nfor(int i = 1; i &lt;= n; ++i) {\ndest[i] = t[dest[i]][j];\nif(t[dest[i]][j] == 0) cerr &lt;&lt; \"Error on #\" &lt;&lt; i &lt;&lt; \", \" &lt;&lt; j &lt;&lt; endl;\n}\n}\n}\n\n// for(int i = 1; i &lt;= n; ++i) cout &lt;&lt; dest[i] &lt;&lt; endl;\n\nsort(p + 1, p + 1 + n);\nint m = unique(p + 1, p + 1 + n) - p - 1;\n\n// cout &lt;&lt; m &lt;&lt; endl;\n// for(int i = 1; i &lt;= m; ++i) cout &lt;&lt; p[i] &lt;&lt; endl;\n\nmemset(a, 0x3f, sizeof a);\nmemset(tmp, 0x3f, sizeof tmp);\nset&lt;int&gt;rest;\nfor(int i = 1; i &lt;= n; ++i) {\nif(tmp[dest[i]] == 0x3f3f3f3f) tmp[dest[i]] = i;\nrest.insert(i);\n}\n\n// for(int i = 1; i &lt;= n; ++i) cout &lt;&lt; tmp[i] &lt;&lt; endl;\n\nfor(int i = 1; i &lt;= m; ++i) {\nif(tmp[p[i]] == 0x3f3f3f3f) continue;\na[tmp[p[i]]] = b[p[i]];\n// cerr &lt;&lt; b[p[i]] &lt;&lt; \"$\";\nauto pos = rest.find(b[p[i]]);\nif(pos == rest.end()) cerr &lt;&lt; \"Error\";\nrest.erase(pos);\n}\nfor(int i = 1; i &lt;= n; ++i) {\nif(a[i] == 0x3f3f3f3f) {\nauto pos = rest.lower_bound(b[dest[i]]);\n// cerr &lt;&lt; b[dest[i]] &lt;&lt; \"#\";\nif(pos == rest.end()) cerr &lt;&lt; \"Error\";\na[i] = *pos, rest.erase(pos); }\n}\n\nfor(int i = 1; i &lt;= n; ++i) cout &lt;&lt; a[i] &lt;&lt;\" \";\ncout &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u500d\u589e/\u56fe\u8bba\n</code></pre>"}, {"location": "rec/atcf-for-2022-03/#cf1650g-counting-shortcuts", "title": "CF1650G Counting Shortcuts", "text": "<p><code>Mar/24/2022</code></p> <p>\u7ed9\u5b9a\u4e00\u5f20\u65e0\u6743\u65e0\u5411\u56fe\uff0c\u95ee\u9898\u4ece\u67d0\u4e2a\u70b9 \\(s\\) \u5230\u67d0\u4e2a\u70b9 \\(t\\) \u7684\u597d\u8def\u5f84\u7684\u6761\u6570\u5bf9 \\(1e9+7\\) \u53d6\u6a21\u3002</p> <p>\u4e00\u4e2a\u8def\u5f84\u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u8def\u5f84\u7684\u957f\u5ea6\u548c \\(s,t\\) \u4e4b\u95f4\u7684\u6700\u77ed\u8def\u7684\u957f\u5ea6\u5dee\u4e0d\u8d85\u8fc7 \\(1\\)\u3002</p> <p>\\(n,m\\) 2e5\u3002</p> <p>\u9996\u5148\u8003\u8651\u6c42\u51fa \\(s\\) \u51fa\u53d1\u5230\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u3002</p> <p>\u7136\u540e DP \u5373\u53ef\u3002</p> <p>\u65b9\u7a0b\u6bd4\u8f83\u663e\u7136\uff0c\u76f4\u63a5\u770b\u4ee3\u7801\u5373\u53ef\uff1a</p> Code <pre><code>        dijkstra(s); // Bfs(s), ReBfs(s);\nvector&lt;pair&lt;int, int&gt; &gt; Dis;\nfor(int i = 1; i &lt;= n; ++i) {\nDis.push_back({dis[i], i});\ndp[i][0] = dp[i][1] = 0;\n} sort(Dis.begin(), Dis.end());\ndp[s][0] = 1, dp[s][1] = 0; for(auto x : Dis) {\nint u = x.second;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(dis[u] == dis[v] + 1)\ndp[u][0] = (dp[u][0] + dp[v][0]) % mod;\n}\n}\nfor(auto x : Dis) {\nint u = x.second;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(dis[u] == dis[v] + 1) dp[u][1] = (dp[v][1] + dp[u][1]) % mod;\nelse if(dis[u] == dis[v])\ndp[u][1] = (dp[v][0] + dp[u][1]) % mod;\n}\n} cout &lt;&lt; (dp[t][0] + dp[t][1]) % mod &lt;&lt; endl;    </code></pre> <pre><code>Tag : DP/\u56fe\u8bba/\u6700\u77ed\u8def\n</code></pre>"}, {"location": "rec/atcf-for-2022-03/#cf1654e-arithmetic-operations", "title": "CF1654E Arithmetic Operations", "text": "<p><code>Mar/21/2022</code></p> <p>\u7ed9\u4e00\u4e2a\u6570\u5217 \\(a\\) \uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u4efb\u610f\u4fee\u6539\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e00\u4e2a\u6570\uff0c\u4fee\u6539\u540e\u7684\u6570\u53ef\u4ee5\u662f\u6b63\u6574\u6570\uff0c\u8d1f\u6574\u6570\u548c\u96f6\u3002</p> <p>\u95ee\u4f7f\u5f97 \\(a\\) \u6210\u4e3a\u7b49\u5dee\u6570\u5217\u7684\u6700\u5c0f\u7684\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>1e5\u3002</p> <p>\u628a\u6bcf\u4e2a\u5143\u7d20\u770b\u6210\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9 \\((i,a_i)\\)\u3002</p> <p>\u7136\u540e\u8981\u6c42\u7684\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6c42\u8fd9\u4e2a\u5e73\u9762\u4e0a\u6700\u591a\u6709\u591a\u5c11\u4e2a\u70b9\u5171\u7ebf\uff0c\u7136\u540e\u7528 \\(n\\) \u51cf\u53bb\u8fd9\u4e2a\u503c\u5373\u53ef\u3002</p> <p>\u4e5f\u5c31\u662f\u628a\u7b49\u5dee\u6570\u5217\u8f6c\u6362\u6210\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0a\u7684\u4e00\u6761\u76f4\u7ebf\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u4e1c\u897f\u597d\u50cf\u662f\u6839\u53f7\u5206\u6cbb\uff0c\u4e0d\u4f1a\uff0c\u6240\u4ee5\u5148\u7a7a\u7740\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2022-03/#cf1657f-words-on-tree", "title": "CF1657F Words On Tree", "text": "<p><code>Mar/24/2022</code></p> <p>\u7ed9\u4e00\u68f5\u6811\uff0c\u7ed9 \\(q\\) \u4e2a\u4e09\u5143\u7ec4 \\((x_i,y_i,s_i)\\)\uff0c\\(x_i,y_i\\) \u662f\u8282\u70b9\u7f16\u53f7\uff0c \\(s_i\\) \u662f\u5b57\u7b26\u4e32\uff0c\u957f\u5ea6\u548c\u6811\u4e0a \\((x_i,y_i)\\) \u7684\u7b80\u5355\u8def\u5f84\u957f\u5ea6\u4e00\u81f4\u3002</p> <p>\u6784\u9020\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6709\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f7f\u5f97\u5b83\u6ee1\u8db3\u8fd9 \\(q\\) \u4e2a\u4e09\u5143\u7ec4\u7684\u7ea6\u675f\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e09\u5143\u7ec4\uff0c\u9700\u8981\u6ee1\u8db3\uff0c\u8def\u5f84 \\((x_i,y_i)\\) \u4e0a\u7684\u5b57\u7b26\u4e32\u8981\u4e48\u662f \\(s_i\\) \uff0c\u8981\u4e48\u662f \\(reverse(s_i)\\)\u3002</p> <p>9s, 4e5\u3002</p> <p>\u8003\u8651\u66b4\u529b 2-SAT\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u6bcf\u4e2a\u8282\u70b9\u7684\u5019\u9009\u503c\u6709 26 \u4e2a\uff0c\u6ca1\u6cd5\u505a\u3002</p> <p>\u90a3\u4e48\u628a\u6bcf\u4e2a\u4e09\u5143\u7ec4\u8fd9\u6837\u5904\u7406\uff1a</p> <p>\u628a \\(s_i\\) \u653e\u5230\u8fd9\u4e2a\u8def\u5f84\u4e0a\uff0c\u7136\u540e\u628a \\(rev(s_i)\\) \u653e\u5230\u8fd9\u4e2a\u8def\u5f84\u4e0a\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u8282\u70b9\u7684\u5019\u9009\u96c6\u5408\u5927\u5c0f\u6700\u5927\u4e3a \\(2\\)\u3002</p> <p>\uff08\u5bf9\u6bcf\u4e2a\u8282\u70b9\uff0c\u5bf9\u7ecf\u8fc7\u5b83\u7684\u4e09\u5143\u7ec4\u7559\u4e0b\u7684\u5019\u9009\u96c6\u5408\u6c42\u4ea4\u5c31\u53ef\u4ee5\u5f97\u5230\uff09</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5 2-SAT \u4e86\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u76f4\u63a5\u5b9e\u73b0\u4f1a\u975e\u5e38\u590d\u6742\u3002</p> <p>\u8003\u8651\u662f\u5426\u5b58\u5728\u53e6\u5916\u4e00\u79cd\u66f4\u597d\u7684\u5199\u6cd5\u3002</p> <p>\u626b\u63cf\u6bcf\u4e00\u4e2a\u4e32\uff0c\u7136\u540e\u5185\u5c42\u626b\u63cf\u8def\u5f84\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u6ca1\u6709\u5019\u9009\u96c6\u5408\uff0c\u7ed9\u4ed6\u52a0\u4e0a\u3002</p> <p>\u7136\u540e\u8003\u8651\u8fd9\u6837\u7684\u4e00\u4e2a\u8fc7\u7a0b\uff1a</p> <pre><code>cand[i][0]             cand[i][1] (\u5f53\u524d\u8282\u70b9\u7684\u5019\u9009\u96c6\u5408)\n\n\n\ns[j]                    s[len - j - 1] (rev(s)[j])   (\u5f53\u524d\u626b\u63cf\u5230\u7684\u4e32\u5728\u8fd9\u4e2a\u70b9\u7684\u5019\u9009\u96c6\u5408)\n</code></pre> <p>\u5982\u679c \\(s_j\\) \u4e0d\u7b49\u4e8e \\(cand[i][0]\\) \uff0c\u90a3\u4e48\u8bc1\u660e\u9009 \\(s[j]\\) \u5c31\u4e0d\u80fd\u9009 \\(cand[i][0]\\) \u3002</p> <p>\u6240\u4ee5\u8fde\u63a5 \\(s[j] \\to cand[i][1]\\) \uff0c\u7136\u540e\u628a\u5bf9\u5e94\u7684\u9006\u5426\u547d\u9898 \\(cand[i][0] \\to s[len-j-1]\\) \u94fe\u63a5\u4e0a\u3002</p> <p>\u5176\u5b83\u4e09\u79cd\u60c5\u51b5\u540c\u7406\u3002</p> <p>\u8fd9\u4e2a\u65f6\u5019\u518d\u8dd1 2-SAT \u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u56e0\u4e3a\u65f6\u9650 \\(9s\\) \u6240\u4ee5\u968f\u4fbf\u641e\u3002</p> Code <pre><code>#include &lt;cmath&gt;\n#include &lt;stack&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define c0 qwq\n#define c1 qaq\n\nusing namespace std;\n\nconst int si =16 * (1e5 + 10);\n\nint n, q;\n\nint head[si], tot = 0;\nstruct Edge {\nint ver, Next;\n}e[si &lt;&lt; 1];\ninline void add(int u, int v) {\ne[tot] = (Edge){v, head[u]}, head[u] = tot++;\n}\n\nint dep[si], f[si][20];\nint lg;\nvoid dfs(int u, int fa) {\ndep[u] = dep[fa] + 1, f[u][0] = fa;\nfor(int i = 1; i &lt;= lg; ++i) f[u][i] = f[f[u][i-1]][i-1];\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\ndfs(v, u);\n}\n}\nint Lca(int u, int v) {\nif(dep[u] &lt; dep[v]) swap(u, v);\nfor(int i = lg; i &gt;= 0; --i) if(dep[f[u][i]] &gt;= dep[v]) u = f[u][i];\nif(u == v) return u;\nfor(int i = lg; i &gt;= 0; --i) if(f[u][i] != f[v][i]) u = f[u][i], v = f[v][i];\nreturn f[u][0];\n}\n\nvector&lt;int&gt; G[si];\ninline void Add(int u, int v) {\nG[u].emplace_back(v);\n}\n\nint tim = 0;\nint dfn[si], low[si];\nstack&lt;int&gt;s;\nbool ins[si];\nint cnt = 0;\nint c[si];\nvoid tarjan(int u) {\ndfn[u] = low[u] = ++tim;\ns.push(u), ins[u] = true;\nfor(int v : G[u]) {\nif(!dfn[v]) tarjan(v), low[u] = min(low[u], low[v]);\nelse if(ins[v]) low[u] = min(low[u], dfn[v]); }\nif(dfn[u] == low[u]) {\nint x; ++cnt;\ndo {\nx = s.top(), s.pop();\nc[x] = cnt, ins[x] = false;\n} while(u != x);\n}\n}\n\nint m;\nchar cand[si][2];\ninline int Node(int u, bool op) {\nif(op) return u;\nelse return u + (n + m);\n}\n\nint main() {\ncin &gt;&gt; n &gt;&gt; q, lg = (int)(log(n) / log(2)) + 1;\nmemset(head, -1, sizeof head);\nmemset(ins, false, sizeof ins);\nfor(int i = 1; i &lt; n; ++i) {\nint u, v;\ncin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n} dfs(1, 0);\nint now = 0;\nm = q;\nwhile(q--) {\n++now;\nint u, v; string s;\ncin &gt;&gt; u &gt;&gt; v, cin &gt;&gt; s;\nint len = (int)s.size(); int lca = Lca(u, v);\nvector&lt;int&gt; path, tmp;\n\nwhile(u != lca) path.emplace_back(u), u = f[u][0];\npath.emplace_back(lca);\nwhile(v != lca) tmp.emplace_back(v), v = f[v][0];\nreverse(tmp.begin(), tmp.end());\nfor(auto x : tmp) path.emplace_back(x);\n\n// for(auto x : path) cout &lt;&lt; x &lt;&lt; ' '; cout &lt;&lt; endl;\n\nfor(int i = 0; i &lt; len; ++i) {\nint x = path[i];\nchar c0 = s[i], c1 = s[len - i - 1];\n\nif(!cand[x][0] &amp;&amp; !cand[x][1]) cand[x][0] = c0, cand[x][1] = c1;\n\nif(cand[x][0] != c0) {\nAdd(Node(now, 0), Node(x + m, 1));\nAdd(Node(x + m, 0), Node(now, 1));\n}\nif(cand[x][1] != c0) {\nAdd(Node(now, 0), Node(x + m, 0));\nAdd(Node(x + m, 1), Node(now, 1));\n}\nif(cand[x][0] != c1) {\nAdd(Node(now, 1), Node(x + m, 1));\nAdd(Node(x + m, 0), Node(now, 0));\n}\nif(cand[x][1] != c1) {\nAdd(Node(now, 1), Node(x + m, 0));\nAdd(Node(x + m, 1), Node(now, 0));\n}\n}\n}\nfor(int i = 1; i &lt;= 2 * (n + m); ++i) {\nif(!dfn[i]) tarjan(i);\n}\nfor(int i = 1; i &lt;= n; ++i) {\nif(!cand[i][0]) cand[i][0] = cand[i][1] = 'a';\n}\nfor(int i = 1; i &lt;= n + m; ++i) {\nif(c[Node(i, 0)] == c[Node(i, 1)]) return puts(\"NO\"), 0;\n}\nputs(\"YES\");\nfor(int i = 1; i &lt;= n; ++i) {\nputchar(\ncand[i][\nc[Node(i + m, 0)] &gt;\nc[Node(i + m, 1)]\n]\n);\n}\nputs(\"\");\nreturn 0;\n}\n</code></pre> <pre><code>Tag : LCA/\u601d\u7ef4/2-SAT\n</code></pre>"}, {"location": "rec/atcf-for-2022-03/#cf1656d-k-good", "title": "CF1656D K-good", "text": "<p><code>Mar/25/2022</code></p> <p>\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\) \u662f \\(k\\) Good \u7684\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(n\\) \u53ef\u4ee5\u88ab\u5206\u6210 \\(k\\) \u4e2a\u4e0d\u540c\u6b63\u6574\u6570\u7684\u548c\uff0c\u4e14\u8fd9 \\(k\\) \u4e2a\u6b63\u6574\u6570\u6a21 \\(k\\) \u610f\u4e49\u4e0b\u76f8\u4e92\u4e0d\u540c\u4f59\u3002</p> <p>\u7ed9\u5b9a \\(n\\) \uff081e18\uff09\uff0c\u6c42\u51fa\u4efb\u610f\u4e00\u4e2a\u5408\u6cd5\u7684\uff0c\\(\\ge 2\\) \u7684 \\(k\\) \uff0c\u4f7f\u5f97 \\(n\\) \u662f \\(k\\) Good \u7684\u3002</p> <p>\u8003\u8651\u628a \\(n\\) \u6309\u7167 \\(1,2,3,4,\\dots\\) \u7684\u65b9\u5f0f\u644a\u5230 \\(k\\) \u4e2a\u5730\u65b9\uff0c\u7136\u540e\u628a\u5269\u4e0b\u7684\u503c\u52a0\u4e0a\uff0c\u4f7f\u5f97\u6761\u4ef6\u6210\u7acb\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u5217\u51fa\u4e00\u4e2a\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\uff1a\\(n \\equiv \\dfrac{k(k+1)}{2} (\\operatorname{mod} k)\\)\u3002</p> <p>\u7136\u540e\u53d1\u73b0 \\(n\\) \u8fd8\u8981\u6ee1\u8db3 \\(\\ge \\dfrac{k(k+1)}{2}\\) \u624d\u53ef\u4ee5\u3002</p> <p>\u6240\u4ee5\u73b0\u5728\u5c31\u5f97\u5230\u4e86\u5224\u5b9a\u7684\u4e24\u4e2a\u6761\u4ef6\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\\(2^k\\) \u5f62\u5f0f\u7684\u6570\u5fc5\u7136\u65e0\u89e3\uff0c\u5176\u4ed6\u5fc5\u7136\u6709\u89e3\u3002</p> <p>\u5947\u6570\u76f4\u63a5\u4ee4 \\(k = 2\\) \u5373\u53ef\u3002</p> <p>\u7136\u540e\u6709\u4e00\u4e2a\u6211\u8fd8\u6682\u65f6\u4e0d\u4f1a\u8bc1\u660e\u7684\u7ed3\u8bba\u3002</p> <p>\u6392\u9664\u5b8c\u65e0\u89e3\u60c5\u51b5\u4e4b\u540e\u3002</p> <p>\u628a\u4e00\u4e2a\u6570\u7684\u6240\u6709 \\(2\\) \u56e0\u5b50\u63d0\u51fa\u6765\u7ec4\u6210 \\(2^k\\)\u3002</p> <p>\u7136\u540e\u7b54\u6848\u5fc5\u7136\u662f \\(2^{k+1}\\) \u548c \\(\\dfrac{n}{2^k}\\) \u7684\u6700\u5c0f\u503c\u3002</p> Code <pre><code>#include &lt;cmath&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\nusing i128 = __uint128_t;\n\nint T;\n\ninline i64 solve(i64 n) {\ni64 tmp = n;\ni64 cnt = 1;\n\nwhile(tmp % 2ll == 0ll) {\ntmp /= 2ll,\ncnt *= 2; }\n\nif(tmp == 1ll) return -1ll;\nreturn min(tmp, 2*cnt);\n}\n\nint main() {\ncin &gt;&gt; T;\nwhile(T--) {\ni64 n;\ncin &gt;&gt; n;\ncout &lt;&lt; solve(n) &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u6570\u5b66/\u6570\u8bba/\u540c\u4f59\n</code></pre>"}, {"location": "rec/atcf-for-2022-03/#cf1656e-equal-tree-sums", "title": "CF1656E Equal Tree Sums", "text": "<p>\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8981\u6c42\u4f60\u7ed9\u6bcf\u4e2a\u8282\u70b9\u4e00\u4e2a\u6743\u503c\uff0c\u4f7f\u5f97\u53bb\u6389\u6811\u4e2d\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u4e4b\u540e\uff0c</p> <p>\u4efb\u610f\u4e24\u4e2a\u8fde\u901a\u5757\u4e4b\u5185\u7684\u548c\u662f\u76f8\u7b49\u7684\u3002</p> <p>1e5\u3002</p> <p><code>Mar/25/2022</code></p> <p>\u7ed3\u8bba\uff1a\u9ed1\u767d\u67d3\u8272\uff0c\u4e00\u79cd\u989c\u8272\u7684\u8282\u70b9\u8d4b\u503c\u4e3a \\(-deg(u)\\)\uff0c\u53e6\u5916\u4e00\u79cd \\(+deg(u)\\)\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u70b9\u5bf9\u4e8e\u548c\u5b83\u76f8\u8fde\u7684\u6240\u6709\u9876\u70b9\uff0c\u5728\u5220\u9664\u4e4b\u540e\u505a\u7684\u8d21\u732e\u5373\u53ef\u3002</p> <p>\u66f4\u597d\u4e00\u70b9\u7684\u8bc1\u660e\uff1a</p> <p></p> Code <pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int si = 1e5 + 10;\n\nint n, T;\n\nint head[si], tot = 0;\nstruct Edge {\nint ver, Next;\n}e[si &lt;&lt; 1];\nint deg[si];\ninline void add(int u, int v) {\ne[tot] = (Edge){v, head[u]}, head[u] = tot++;\n}\n\nint c[si];\n\nvoid dfs(int u, int fa, int col) {\nif(c[u] != -1) return;\nc[u] = col;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\ndfs(v, u, 1 - col);\n}\n}\n\nint main() {\ncin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n;\nmemset(c, -1, sizeof c), memset(deg, 0, sizeof deg);\ntot = 0, memset(head, -1, sizeof head);\nfor(int i = 1; i &lt; n; ++i) {\nint u, v;\ncin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n++deg[u], ++deg[v];\n}\ndfs(1, 0, 1);\nfor(int i = 1; i &lt;= n; ++i) {\nif(c[i] == 0) cout &lt;&lt; -deg[i] &lt;&lt; \" \";\nelse cout &lt;&lt; deg[i] &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u56fe\u8bba/\u601d\u7ef4\n</code></pre>"}, {"location": "rec/atcf-for-2022-03/#abc243f-lottery", "title": "ABC243F Lottery", "text": "<p><code>Mar/25/2022</code></p> <p>Takahashi is participating in a lottery.</p> <p>Each time he takes a draw, he gets one of the \\(N\\) prizes available. Prize \\(i\\) is awarded with probability \\(\\dfrac{w_i}{\\sum^{N}_{j=1} w_j}\\) , The results of the draws are independent of each other.</p> <p>What is the probability that he gets exactly \\(M\\) different prizes from \\(K\\) draws? Find it modulo \\(998244353\\).</p> <p>\\(1\\le N,M,K \\le 50\\)\u3002</p> <p>\\(M \\le N\\)\u3002</p> <p>\u5b9a\u4e49 \\(P(i) = \\dfrac{w_i}{\\sum^{N}_{j=1} w_j}\\)</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u79cd\u5143\u7d20\u88ab\u9009\u4e86 \\(c_i\\) \u6b21\uff0c\u90a3\u4e48\u5b83\u7684\u6982\u7387\u5c31\u662f \\(P(i)^{c_i}\\)</p> <p>\u7136\u540e\u8003\u8651\u7528\u53ef\u91cd\u96c6\u7684\u6392\u5217\u6570\u516c\u5f0f\u7b97\u3002</p> <p>\u4f46\u662f\u8fd9\u91cc\u8981\u7a0d\u5fae\u9b54\u6539\u4e00\u4e0b\u3002</p> <p>\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u67ff\u5b50\uff1a</p> \\[\\dfrac{K!}{\\prod\\limits_{i = 1}^{N} c_i!} \\times \\prod\\limits_{i=1}^{N} P(i)^{c_i}, \\sum c_i = K,  |\\{i\\ |\\ c_i \\not= 0\\}|=M\\] <p>\u8fd9\u4e2a\u5c31\u662f\u7b54\u6848\u3002</p> <p>\u5176\u4e2d \\(c_i\\) \u8868\u793a \\(i\\) \u8fd9\u79cd\u7269\u54c1\u88ab\u9009\u4e86\u591a\u5c11\u6b21\uff0c\u53ef\u4ee5\u662f \\(0\\)\u3002</p> <p>\\(K!\\)  \u662f\u5e38\u6570\uff0c\u6240\u4ee5\u63d0\u51fa\u6765\uff1a</p> \\[K!\\times \\dfrac{\\prod\\limits_{i=1}^{N} P(i)^{c_i}}{\\prod\\limits_{i = 1}^{N} c_i!}\\] <p>\u53d1\u73b0\u540e\u9762\u8fd9\u4e2a\u90e8\u5206\u53ef\u4ee5\u5316\u6210</p> \\[\\prod\\limits_{i = 1}^{n} \\dfrac{P(i)^{c_i}}{c_i}\\] <p>\u5fc5\u7136\u53ef\u4ee5\u9012\u63a8\u3002</p> <p>\u7136\u540e\u8bbe \\(dp[i][j][k]\\) \u8868\u793a \\(N = i, M = j, K = k\\) \u7684\u65f6\u5019\u7684\u8fd9\u4e2a\u4e1c\u897f\u3002</p> <p>\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u79cd\u7269\u54c1\u9009\u591a\u5c11\u4e2a\u5373\u53ef\u8f6c\u79fb\u3002</p> <p>\u590d\u6742\u5ea6 \\(\\text{O}(NMK^2)\\)\u3002</p> Code <pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 50 + 10;\nconstexpr int mod = 998244353;\n\nint N, M, K;\ni64 dp[si][si][si];\ni64 fact[si];\nint w[si], sum = 0;\n\ninline i64 qpow(i64 a, int b) {\ni64 ans = 1 % mod;\nfor(; b; b &gt;&gt;= 1) {\nif(b &amp; 1) ans = ans * a % mod;\na = a * a % mod;\n}\nreturn ans;\n}\ninline i64 inv(int a) {\nreturn qpow(a, mod - 2) % mod;\n}\n\nint p[si];\n\nint main() {\ncin &gt;&gt; N &gt;&gt; M &gt;&gt; K;\nfor(int i = 1; i &lt;= N; ++i) {\ncin &gt;&gt; w[i]; sum += w[i];\n}\n\nfact[0] = 1;\nfor(int i = 1; i &lt;= K; ++i) {\nfact[i] = fact[i - 1] * i * 1ll % mod;\n}\n\nfor(int i = 1; i &lt;= N; ++i) {\np[i] = ((1ll * w[i] % mod) * inv(sum)) % mod;\n}\n\ndp[0][0][0] = 1;\nfor(int i = 1; i &lt;= N; ++i) {\nfor(int j = 0; j &lt;= M; ++j) {\nfor(int k = 0; k &lt;= K; ++k) {\nfor(int c = 0; c &lt;= k; ++c) {\nif(j - (c &gt; 0) &gt;= 0) dp[i][j][k] = (dp[i][j][k] + dp[i - 1][j - (c &gt; 0)][k - c] * qpow(p[i], c) % mod * inv(fact[c]) % mod) % mod;\n}\n}\n}\n}\n\ncout &lt;&lt; dp[N][M][K] * fact[K] % mod &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u7ec4\u5408\u6570\u5b66/DP/\u9012\u63a8\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/", "title": "2022\u5e744\u6708AT&CF", "text": ""}, {"location": "rec/atcf-for-2022-04/#_1", "title": "\u56db\u6708\u597d\u9898\u6539\u9519", "text": "<p>\u4e00\u4e2a\u5355\u72ec\u7684trick</p> <p>MJC \u544a\u8bc9\u6211\uff1a\u7ea6\u675f\u5173\u7cfb\u5f88\u96be\u5904\u7406\u7684\u65f6\u5019\uff0c\u4e0d\u662f\u5e76\u67e5\u96c6\u5c31\u662f\u8fde\u8fb9\u3002</p>"}, {"location": "rec/atcf-for-2022-04/#cf1668dcf1667b-optimal-partition", "title": "CF1668D/CF1667B Optimal Partition", "text": "<p><code>Apr/20/2022</code></p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\) \uff0c\u8981\u6c42\u5c06\u5176\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u6bb5\u3002</p> <p>\u5b9a\u4e49 \\(ss(l,r)\\) \u4e3a \\(a_l + a_{l + 1} + a_{l + 2} + \\dots + a_r\\)\u3002</p> <p>\u6bcf\u4e2a\u5b50\u6bb5 \\(a[l,r]\\) \u7684\u8d21\u732e \\(f(l,r)\\) \u4e3a:</p> <ol> <li>\\(r - l + 1\\)\uff0c\u5982\u679c \\(ss(l,r) &gt; 0\\)</li> <li>\\(-(r- l + 1)\\)\uff0c\u5982\u679c \\(ss(l,r) &lt; 0\\)\u3002</li> <li>\\(0\\) \uff0c\u5982\u679c \\(ss(l,r) = 0\\)\u3002</li> </ol> <p>\u6c42\u4e00\u79cd\u5206\u5272\u65b9\u5f0f\uff0c\u4f7f\u5f97\u88ab\u9009\u51fa\u7684\u5b50\u6bb5\u7684 \\(\\sum f(l,r)\\) \u6700\u5927\u3002</p> <p>\\(n \\le 5e5\\)\u3002</p> <p>\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a \\(\\text{O}(n^2)\\) \u7684 DP\uff1a</p> <p>\u8bbe \\(dp_{i,j}\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u5206\u6210 \\(j\\) \u6bb5\u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u8d21\u732e\u548c\u7684\u6700\u5927\u503c\u3002 </p> <p>\u7136\u540e\u53d1\u73b0\u6570\u7ec4\u5c31\u5df2\u7ecf\u5f00\u4e0d\u4e0b\u4e86\u3002</p> <p>\u4f46\u662f\u9898\u76ee\u6ca1\u6709\u8981\u6c42\u4f60\u5177\u4f53\u8981\u5206\u591a\u5c11\u6bb5\uff0c\u4efb\u610f\u5206\u5272\u6210\u591a\u5c11\u6bb5\u90fd\u662f\u53ef\u4ee5\u7684\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5229\u7528\u201d\u4efb\u52a1\u5b89\u63921\u201c \u5f53\u4e2d\u7528\u5230\u7684\u601d\u60f3\u3002</p> <p>\u4efb\u52a1\u5b89\u63921 \u662f\u8bbe \\(dp_{i}\\) \u8868\u793a\u5c06\u524d \\(i\\) \u4e2a\u4efb\u52a1\u5206\u6210\u82e5\u5e72\u6279\u6b21\u5904\u7406\u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u603b\u65f6\u95f4\u82b1\u8d39\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u90a3\u4e48\u672c\u9898\uff0c\u6211\u4eec\u5c31\u8bbe \\(dp_i\\) \u8868\u793a\u5c06\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u6bb5\u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u603b\u8d21\u732e\u7684\u6700\u5927\u503c\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u53ea\u8003\u8651\u6700\u540e\u4e00\u6bb5\u662f\u4ec0\u4e48\uff0c\u8fd9\u4e5f\u6070\u597d\u662f\u96c6\u5408\u5212\u5206\u7684\u4f9d\u636e\uff1a\u201d\u6700\u540e\u4e00\u4e2a\u4e0d\u540c\u7684\u201c\u3002</p> <p>\u90a3\u4e48\u679a\u4e3e\u6700\u540e\u4e00\u6bb5\u7684\u8d77\u59cb\u4f4d\u7f6e\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef\u3002</p> \\[dp_{i} = \\max\\limits_{0\\le j &lt; i}\\{dp_j + f(j+1,i)\\}\\] <p>\u521d\u59cb\u5316 \\(dp_0 = 0\\)\uff0c\u9884\u5904\u7406\u524d\u7f00\u548c \\(s\\) \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u662f \\(\\text{O}(n^2)\\)\uff0c\u6240\u4ee5\u8003\u8651\u4f7f\u7528\u5e26 \\(\\log\\) \u7684\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u8f6c\u79fb\u3002</p> <p>\u5c06 \\(f\\) \u5bf9\u5e94\u7684\u4e09\u79cd\u60c5\u51b5\u5bf9\u5e94\u7684 DP \u5f0f\u5b50\u62c6\u5f00\uff08\u7701\u7565\u4e86\u5bf9\u5e94\u60c5\u51b5\u7684\u6761\u4ef6\uff09\uff1a</p> \\[\\begin{cases}dp_i = dp_j \\\\ dp_i = dp_j + (i - j) &amp; s_i &gt; s_j\\\\ dp_i = dp_j - (i - j) &amp; s_i &lt; s_j\\end{cases}\\] <p>\u7136\u540e\u79fb\u9879\uff0c\u628a\u5173\u4e8e\u540c\u4e00\u4e2a\u53d8\u91cf\u7684\u6254\u5230\u4e00\u8d77\uff1a</p> \\[\\begin{cases}dp_i = dp_j \\\\ dp_i - i = dp_j - j  &amp; s_i &gt; s_j\\\\ dp_i + i = dp_j + j &amp; s_i &lt; s_j \\end{cases}\\] <p>\u53d1\u73b0\u5728\u6700\u540e\u4e00\u6bb5\u957f\u5ea6\u5927\u4e8e \\(1\\) \u65f6\uff0c\u53ef\u80fd\u6210\u4e3a\u6700\u4f18\u51b3\u7b56\u7684\u53ea\u6709\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u3002</p> <p>\u6240\u4ee5\u5148\u5904\u7406\u6700\u540e\u4e00\u6bb5\u957f\u5ea6\u7b49\u4e8e \\(1\\) \u7684\u60c5\u51b5\uff0c\u7136\u540e\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u8003\u8651\u4f18\u5316\uff0c\u4e5f\u5c31\u662f\u5982\u4f55\u5feb\u901f\u627e\u5230\u80fd\u8ba9\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u6700\u4f18\u7684\u4e00\u4e2a\u51b3\u7b56\u3002</p> <p>\u5728 \\(i\\) \u56fa\u5b9a\u65f6\uff0c\\(i\\) \u662f\u5e38\u91cf\uff0c\\(dp_j,j\\) \u662f\u53d8\u91cf\uff0c\u6240\u4ee5\u51b3\u7b56\u96c6\u5408\u7ef4\u62a4\u7684\u5e94\u5f53\u662f \\(dp_j - j\\) \u7684 \\(\\max\\)\uff0c\u5e76\u4e14 \\(s_j &lt; s_i\\)\u3002</p> <p>\u90a3\u4e48\u53ea\u9700\u8981\u627e\u5230 \\(s_j &lt; s_i\\) \u4e14 \\(i &gt; j\\) \u7684\u6240\u6709 \\(j\\) \u5f53\u4e2d\u80fd\u4f7f \\(dp_j-j\\) \u53d6\u5230\u6700\u5927\u503c\u7684\u4e00\u4e2a\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef\u3002</p> <p>\u800c\u6bcf\u6b21 \\(i + 1\\) \u65f6\u51b3\u7b56\u96c6\u5408\u90fd\u53ea\u4f1a\u589e\u52a0 \\(dp_i - i\\) \u8fd9\u4e2a\u5143\u7d20\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u9898\u5c31\u53d8\u5f97\u548c The Battle Of Chibi \u90a3\u4e00\u9898\u975e\u5e38\u50cf\u4e86\uff0c\u9700\u8981\u7684\u4fe1\u606f\u662f\uff1a</p> <p>\u67d0\u4e00\u4e2a\u4f4d\u7f6e \\(i\\) \u4e4b\u524d\uff0c\u6240\u6709\u5173\u952e\u7801\u5c0f\u4e8e \\(i\\) \u7684\u5173\u952e\u7801\u7684\u4f4d\u7f6e \\(j\\) \u7684 \\(dp_j - j\\) \u7684\u6700\u5927\u503c\uff08\u4fe1\u606f\uff09\u3002</p> <p>\u6240\u4ee5\u7528\u540c\u6837\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5c06 \\(s\\) \u4f5c\u4e3a\u5173\u952e\u7801\uff0c\\(dp_i - i\\) \u4f5c\u4e3a\u6743\u503c\u63d2\u5165\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u3002</p> <p>\u5e76\u4e14\u5728\u51b3\u7b56\u5b8c\u4e4b\u540e\u518d\u63d2\u5165\uff0c\u4ee5\u4fdd\u8bc1 \\(i &gt; j\\) \u7684\u6761\u4ef6\u5728\u6c42 \\(\\min\\) \u65f6\u4ecd\u7136\u88ab\u6ee1\u8db3\u3002</p> <p>\u8fd9\u91cc\u53ea\u662f\u6c42\u524d\u7f00\u6700\u503c\uff0c\u6240\u4ee5\u6811\u72b6\u6570\u7ec4\u662f\u633a\u65b9\u4fbf\u7684\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(\\text{O}(n \\log n)\\)\u3002</p> Code <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\nusing i64 = long long;\n\nconst i64 si = 5e5 + 10;\nconst i64 inf = 0x3f3f3f3f;\n\ni64 T;\ni64 n;\ni64 a[si], dp[si];\ni64 sum[si], pos[si];\n\ni64 t[si];\ninline i64 lowbit(i64 x) {\nreturn x &amp; -x;\n}\nvoid add(i64 p, i64 x) {\nwhile(p &lt;= n) {\nt[p] = max(t[p], x);\np += lowbit(p);\n}\n}\ni64 ask(i64 p) {\ni64 res = -inf;\nwhile(p) {\nres = max(res, t[p]);\np -= lowbit(p);\n}\nreturn res;\n}\n\nint main() {\ncin &gt;&gt; T;\nwhile(T--) {\nstd::vector&lt;pair&lt;i64, i64&gt; &gt; v;\ncin &gt;&gt; n;\nsum[0] = 0;\nfor(i64 i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i],\nsum[i] = sum[i - 1] + a[i],\nv.push_back({sum[i], -i});\n\nsort(v.begin(), v.end());\n\nfor(i64 i = 0; i &lt; n; ++i) {\npos[-v[i].second] = i + 1;\n}\n\nfor(int i = 0; i &lt;= n; ++i) t[i] = -inf;\n\ndp[0] = 0;\nfor(i64 i = 1; i &lt;= n; ++i) {\ni64 preval;\nif(a[i] == 0) preval = 0;\nif(a[i] &gt; 0) preval = 1;\nif(a[i] &lt; 0) preval = -1;\n\ndp[i] = dp[i - 1] + preval;\n// \u5904\u7406\u6700\u540e\u4e00\u6bb5\u957f\u5ea6\u4e3a 1 \u7684\u60c5\u51b5\ndp[i] = max(dp[i], ask(pos[i]) + i);\n// \u8be2\u95ee\u6700\u4f18\u503c\uff0c\u8f6c\u79fb\u8fc7\u6765\nif(sum[i] &gt; 0) dp[i] = i;\n// s[1 ~ i] \u5927\u4e8e\u96f6\uff0c\u6240\u4ee5\u8d21\u732e\u662f i\uff0c\u5fc5\u7136\u662f\u5f53\u524d\u6700\u4f18\u7684\u3002\nadd(pos[i], dp[i] - i);\n// \u63d2\u5165\u51b3\u7b56\u96c6\u5408\u3002\n}\n\ncout &lt;&lt; dp[n] &lt;&lt; endl;\n\nfor(int i = 0; i &lt;= n; ++i) dp[i] = pos[i] = sum[i] = a[i] = 0;\n}\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : DP/\u6570\u636e\u7ed3\u6784\u4f18\u5316DP/\u4e00\u4e2a\u533a\u95f4DP\u7684\u7ecf\u5178\u6a21\u578b\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/#cf1672f1-array-shuffling", "title": "CF1672F1 Array Shuffling", "text": "<p><code>Apr/23/2022</code></p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u5b9a\u4e49\u4e00\u4e2a \\(a\\) \u7684\u6392\u5217 \\(b\\) \u7684\u8d21\u732e\u4e3a\uff0c\u901a\u8fc7\u4ea4\u6362 \\(a\\) \u4e2d\u4efb\u610f\u4e24\u4e2a\u6570\u82e5\u5e72\u6b21\uff0c\u5f97\u5230 \\(b\\) \u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u3002</p> <p>\u6c42 \\(a\\) \u7684\u6240\u6709\u6392\u5217\u4e2d\u8d21\u732e\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u6392\u5217\uff0c\u5e76\u8f93\u51fa\u3002</p> <p>\\(n \\le 2e5, a_i, b_i \\in [1, n]\\)\u3002</p> <p>\u8fd9\u662f\u4e00\u9053\u5173\u4e8e\u7f6e\u6362\u73af\u7684\u7ed3\u8bba\u9898\uff0c\u5728 zhihu \u4e0a\u770b\u5230\u4e86\u4e00\u4e2a\u94fe\u63a5\uff0c\u7ed9\u51fa\u4e86\u8fd9\u4e2a\u7ed3\u8bba\u7684\u8bc1\u660e</p> <p>\u5047\u8bbe\u539f\u5e8f\u5217 \\(a\\) \u662f\u8fd9\u6837\u7684\uff1a</p> \\[1\\ \\ 1\\ \\ 4\\ \\ 5\\ \\ 1\\ \\ 4\\] <p>\u6392\u5e8f\u540e\u7684 \\(b\\) \u662f\u8fd9\u6837\u7684</p> \\[1\\ \\ 4\\ \\ 5\\ \\ 1\\ \\ 1\\ \\ 4\\] <p>\u5c06\u4ed6\u4eec\u653e\u5230\u4e00\u8d77\uff1a</p> \\[a= 1\\ \\ 1\\ \\ 4\\ \\ 5\\ \\ 1\\ \\ 4 \\] \\[b = 1\\ \\ 4\\ \\ 5\\ \\ 1\\ \\ 1\\ \\ 4\\] <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\\(a_2\\) \u88ab\u6362\u5230\u4e86\u4f4d\u7f6e \\(4\\)\uff0c\\(a_3\\) \u88ab\u6362\u5230\u4e86\u4f4d\u7f6e \\(2\\)\uff0c\\(a_4\\) \u88ab\u6362\u5230\u4e86\u4f4d\u7f6e \\(3\\)\u3002</p> <p>\u7528\u7bad\u5934\u8868\u793a\u5c31\u662f\uff1a\\([3]\\to [2], [2] \\to [4],[4] \\to [3]\\)\uff0c\u8fd9\u662f\u4e00\u4e2a\u73af\u72b6\u7ed3\u6784\uff0c\u79f0\u5b83\u4e3a\u201c\u7f6e\u6362\u73af\u201d\u3002</p> <p>\u5f53\u7136\uff0c\u5982\u679c\u662f\u81ea\u5df1\u6362\u5230\u81ea\u5df1\uff0c\u4e5f\u53ef\u4ee5\u7b97\u4f5c\u4e00\u4e2a\u7f6e\u6362\u73af\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u7f6e\u6362\u73af\u8fd8\u6709 \\([1] \\to [1], [5] \\to [5], [6] \\to [6]\\)\u3002</p> <p>\u4f46\u662f\u5982\u679c\u662f \\(a_1 = a_5 = b_1 = b_5\\) \u8fd9\u79cd\u60c5\u51b5\uff0c\\([1] \\to [5], [5] \\to [1]\\) \u662f\u4e0d\u80fd\u7b97\u4f5c\u4e00\u4e2a\u7f6e\u6362\u73af\u7684\uff0c\u5e94\u5f53\u5355\u72ec\u8003\u8651\u6210 \\([1] \\to [1], [5] \\to [5]\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c \\(a_i = b_i\\) \uff0c\u90a3\u4e48 \\(i\\) \u4e00\u5b9a\u5904\u4e8e\u81ea\u5df1\u6307\u5411\u81ea\u5df1\u7684\u4e00\u4e2a\u7f6e\u6362\u73af\u4e0a\u3002</p> <p>\u73b0\u5728\u53c8\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u6709 \\(k\\) \u4e2a\u8282\u70b9\u7684\u7f6e\u6362\u73af\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u73af\u4e0a\u7684\u6240\u6709\u4f4d\u7f6e \\(i\\)\uff0c\u7531 \\(a_i \\to b_i\\) \uff0c\u9700\u8981\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u662f \\(F=k - 1\\)\u3002</p> <p>\u53e6\u4e00\u4e2a\u7ed3\u8bba\uff1a</p> <p>\\(a \\to b\\) \u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570 \\(F\\)\uff0c\u7b49\u4e8e\u5e8f\u5217\u957f\u5ea6 \\(n\\) \u51cf\u53bb\u7f6e\u6362\u73af\u4e2a\u6570 \\(cnt\\)\u3002</p> <p>\u8fd9\u4e24\u4e2a\u5f88\u5bb9\u6613\u8bc1\u660e\uff0c\u7b2c\u4e00\u4e2a\u663e\u7136\uff0c\u7b2c\u4e8c\u4e2a\u53ef\u4ee5\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e \\(1\\) \u7684\u73af\uff0c\u5176\u4ed6\u90fd\u662f\u81ea\u73af\u7684\u60c5\u51b5\u3002</p> <p>\u90a3\u4e48\u5f52\u7eb3\u5c31\u80fd\u8bc1\u660e\uff08\u56e0\u4e3a\u4f60\u53ef\u4ee5\u628a\u5e8f\u5217\u62c6\u5f00\u6765\u770b\u7136\u540e\u5408\u8d77\u6765\uff09\u3002</p> <p>\u4e0a\u9762\u8bf4\u7684 \\(a_i = b_i\\)\uff0c\u5219 \\(i\\) \u81ea\u5df1\u5f62\u6210\u4e00\u4e2a\u7f6e\u6362\u73af\u7684\u6761\u4ef6\u4e5f\u53ef\u4ee5\u6269\u5c55\u6210\uff1a</p> <p>\u7f6e\u6362\u73af\u4e0a\u4e0d\u80fd\u6709\u4e24\u4e2a \\(a_i = a_j\\) \u7684\u4f4d\u7f6e \\(i,j\\)\u3002</p> <p>\u5047\u8bbe\u6709\u4e00\u4e2a\u7f6e\u6362\u73af\uff0c\u6362\u4e0a\u7684\u5143\u7d20\u7528\u5b83\u7684\u6743\u503c\u8868\u793a\uff1a</p> \\[5 \\to 1 ,1 \\to 4, 4 \\to 1, 1 \\to 5\\] <p>\u4e5f\u5c31\u662f \\(1 4 1 5\\) \u53d8\u6210 \\(4151\\)\u3002</p> <p>\u7528\u7ed3\u8bba \\(2\\) \u53ef\u4ee5\u5f97\u5230\u5b83\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u662f \\(3\\)\u3002</p> <p>\u4f46\u662f\uff0c\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u4ea4\u6362 \\([2],[1]\\)\uff0c\u7136\u540e\u4ea4\u6362 \\([3],[4]\\)\uff0c\u53ea\u9700\u8981 \\(2\\) \u6b21\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u6240\u4ee5\u7f6e\u6362\u73af\u4e0a\u4e0d\u80fd\u6709\u6743\u503c\u76f8\u540c\u7684\u5143\u7d20\u3002</p> <p>\u597d\uff0c\u90a3\u4e48\u73b0\u5728\u6765\u770b\u8fd9\u9053\u9898\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u4f60\u6c42\u51fa\u4f7f\u5f97 \\(F\\) \u6700\u5927\u7684\u90a3\u4e00\u4e2a\u6392\u5217\u3002</p> <p>\u5199\u51fa\u5f0f\u5b50\uff1a\\(F = n - cnt\\)\uff0c\\(n\\) \u662f\u5e38\u6570\uff0c\u6240\u4ee5\u8ba9 \\(cnt\\) \u5c3d\u91cf\u5c0f\u5373\u53ef\u3002</p> <p>\u800c\u7f6e\u6362\u73af\u4e0a\u4e0d\u80fd\u6709\u6743\u503c\u76f8\u540c\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u6bcf\u6b21\u9009\u53d6\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u540c\u5143\u7d20\u6784\u9020\u4e00\u4e2a\u7f6e\u6362\u73af\uff0c\u7136\u540e\u628a\u88ab\u9009\u4e2d\u7684\u8fd9\u4e2a\u5b50\u5e8f\u5217 \u5faa\u73af\u5de6\u79fb \u4e00\u4f4d\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u7f6e\u6362\u73af\u672c\u8eab\u7684\u5f62\u72b6\uff0c\u8bc1\u660e\u8fd9\u6837\u5b50\u505a\u5c31\u4f1a\u8ba9\u7f6e\u6362\u73af\u4e0a\u7684\u4ea4\u6362\u6b21\u6570\u8fbe\u5230 \\(k-1\\)\u3002</p> <p>\u7136\u540e\u4e00\u76f4\u8fd9\u4e48\u505a\uff0c\u76f4\u5230\u53ea\u5269\u4e00\u79cd\u5143\u7d20\u5373\u53ef\u3002</p> Code <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int si = 2e5 + 10;\nint n;\nint a[si];\nstd::vector&lt;int&gt; cnt[si], pos[si];\n\n#define pb emplace_back\n#define sz(v) ((int)v.size())\n\nint main() {\nint T;\ncin &gt;&gt; T;\nwhile(T--) {\nvector&lt;int&gt; tmp, ans;\ncin &gt;&gt; n;\ntmp.clear(), ans.clear();\nans.resize(n + 1);\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\n\nfor(int i = 1; i &lt;= n; ++i) cnt[i].clear(), pos[i].clear();\nfor(int i = 1; i &lt;= n; ++i)\ncnt[a[i]].pb(i);\nfor(int i = 1; i &lt;= n; ++i)\npos[sz(cnt[i])].pb(i);\n\nfor(int i = 1; i &lt;= n; ++i)\nif(sz(pos[i]) &gt; 0) tmp.pb(i);\nvector&lt;int&gt; qwq;\nfor(int i = 1; i &lt;= n; ++i) {\nqwq.clear();\nfor(auto j : tmp) {\nif(j &gt;= i) {\nfor(int k = 0; k &lt; sz(pos[j]); ++k) {\nqwq.pb(cnt[pos[j][k]][sz(cnt[pos[j][k]])- 1]);\ncnt[pos[j][k]].pop_back();\n}\n}\n} if(sz(qwq) &gt; 0) {\nfor(int j = 0; j &lt; sz(qwq) - 1; ++j) ans[qwq[j + 1]] = a[qwq[j]];\nans[qwq[0]] = a[qwq.back()];\n}\n}\n\nfor(int i = 1; i &lt;= n; ++i) cout &lt;&lt; ans[i] &lt;&lt; \" \";\ncout &lt;&lt; endl;\n}\nreturn 0;\n}\n// tjx\n</code></pre> <pre><code>Tag : \u7f6e\u6362\u73af\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/#cf1672f2-checker-for-array-shuffling", "title": "CF1672F2 Checker for Array Shuffling", "text": "<p><code>Apr/27/2022</code></p> <p>\u4f60\u9700\u8981\u5199\u4e00\u4e2a F1 \u7684Checker\uff0c\u5373\u5224\u5b9a\u7ed9\u5b9a\u7684\u5e8f\u5217 \\(b\\) \u662f\u4e0d\u662f \\(a\\) \u7684\u6700\u4f18\u89e3\u4e4b\u4e00\u3002</p> <p>\u4f9d\u65e7\u8003\u8651 F1 \u7684\u7ed3\u8bba\uff0c\u6700\u4f18\u89e3\u5c31\u662f\u8ba9\u7f6e\u6362\u73af\u6570\u91cf\u66f4\u5c0f\uff0c\u6784\u9020\u5c3d\u53ef\u80fd\u5927\u7684\u7f6e\u6362\u73af\u3002</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u8003\u8651 F1 \u7684\u6784\u9020\u8fc7\u7a0b\uff0c\u4f60\u53d1\u73b0\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u90a3\u4e2a\u5143\u7d20\u5728\u4efb\u610f\u4e00\u4e2a\u7f6e\u6362\u73af\u4e0a\u90fd\u8981\u51fa\u73b0\uff0c\u5426\u5219\u4e0d\u662f\u6700\u4f18\u7684\u3002</p> <p>\u56e0\u4e3a\u5047\u8bbe\u8fd9\u4e2a\u5143\u7d20\u9009\u5b8c\u4e4b\u540e\uff0c\u8fd8\u51fa\u73b0\u4e86\u53e6\u5916\u7684\u7f6e\u6362\u73af\uff0c\u8bc1\u660e\u8fd9\u4e2a\u5143\u7d20\u5fc5\u7136\u4e0d\u662f\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u90a3\u4e2a\u3002</p> <p>\u6240\u4ee5\u5148\u4ece\u7f16\u53f7\u4e3a \\(b_i\\) \u7684\u70b9\u8fde\u5411 \\(a_i\\)\uff0c\uff08\u4ee5\u503c\u57df\u5927\u5c0f\u4e3a\u8282\u70b9\u4e2a\u6570\uff09\uff0c\u5220\u53bb\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u90a3\u4e2a\u3002</p> <p>tips</p> <p>\u4e00\u822c\u627e\u7f6e\u6362\u73af\u7684\u65b9\u5f0f\u662f\u5bf9\u4e8e\u5e8f\u5217 \\(a\\) \u8bb0\u5f55\u4e00\u4e2a \\(lst(a_i)\\) \u8868\u793a \\(a_i\\) \u51fa\u73b0\u7684\u4f4d\u7f6e\u3002</p> <p>\u7136\u540e\u626b\u4e00\u904d \\(b\\)\uff0c\u53ea\u8981 \\(lst(b_i)\\) \u4e0d\u7b49\u4e8e \\(i\\)\uff0c\u90a3\u4e48\u5c31\u7ed9 \\(i\\) \u548c \\(lst(b_i)\\) \u8fde\u4e00\u6761\u6709\u5411\u8fb9\u5373\u53ef\u3002</p> <p>\u53ea\u662f\u8fd9\u9898\u6bd4\u8f83\u7279\u6b8a, \u503c\u57df\u662f \\([1, n]\\)\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fde \\(a_i, b_i\\) \uff08\u53ea\u8981\u4e0d\u662f\u81ea\u73af\uff09\u3002</p> <p>\u5982\u679c\u56fe\u4e2d\u8fd8\u5b58\u5728\u73af\uff0c\u90a3\u4e48\u5fc5\u7136\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u8f93\u51fa <code>WA</code>\uff0c\u5426\u5219 <code>AC</code>\u3002</p> <p>\u4f7f\u7528 Tarjan \u5373\u53ef\u7ebf\u6027\u5224\u662f\u5426\u6709\u5224\u73af\uff08\u5224\u65ad SCC \u7684\u5927\u5c0f\u662f\u5426 \\(&gt;1\\)\uff09\uff0c\u4f46\u662f Tarjan \u5904\u7406\u4e0d\u4e86\u81ea\u73af\uff0c\u81ea\u73af\u9700\u8981\u7279\u5224\u3002</p> Code <pre><code>#include &lt;stack&gt;\n#include &lt;cassert&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define yuyuko \"AC\"\n#define kawaii \"WA\"\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, a[si], b[si];\nint exist[si];      // \u51fa\u73b0\u6b21\u6570\nint most;\nbool visited[si];   // \u662f\u5426\u8bbf\u95ee\u8fc7\u8fd9\u4e2a\u8282\u70b9\n\nint tot = 0;\nint head[si];\nstruct Edge {\nint ver, Next;\n}e[si &lt;&lt; 1];\ninline void add(int u, int v) {\ne[tot] = (Edge){v, head[u]}, head[u] = tot++;\n}\n\nint dfn[si], low[si];\nint tim = 0, cnt = 0;\nbool ins[si];\nstack&lt;int&gt;s;\nbool sol;\n\nvoid init() {\ntot = 0, tim = 0, cnt = 0, sol = true;\nfor(int i = 0; i &lt;= n; ++i) {\nhead[i] = -1;\nexist[i] = dfn[i] = low[i] = 0;\nvisited[i] = ins[i] = false;\n}\n}\n\nvoid tarjan(int u) {\ndfn[u] = low[u] = ++tim;\ns.push(u), ins[u] = true;\n\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(!dfn[v]) {\ntarjan(v);\nlow[u] = min(low[u], low[v]);\n}\nelse if(ins[v]) low[u] = min(low[u], dfn[v]);\n}\n\nif(dfn[u] == low[u]) {\nint x; ++cnt;\nint num = 0;\ndo {\nx = s.top(), s.pop();\nins[x] = false, num++;\n} while(u != x);\nif(num &gt; 1)\nsol = false; }\nreturn ;\n}\n\nvoid solve() {\ncin &gt;&gt; n, init();\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], exist[a[i]] += 1;\n\nmost = max_element(exist + 1, exist + 1 + n) - exist;\n// \u51fa\u73b0\u6700\u9891\u7e41\u7684\u662f\u54ea\u4e2a\n\n// cerr &lt;&lt; most &lt;&lt; endl;\n\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; b[i];\nif(a[i] == most || b[i] == most) continue;\nif(a[i] == b[i])\nsol = false;\n// Tarjan \u5224\u4e0d\u4e86\u81ea\u73af\uff0c\u6240\u4ee5\u7279\u5224\u3002\nadd(b[i], a[i]);\n}\n\nfor(int i = 1; i &lt;= n; ++i) if(!dfn[i] &amp;&amp; i != most) tarjan(i);\n\nif(sol) cout &lt;&lt; yuyuko &lt;&lt; endl;\nelse cout &lt;&lt; kawaii &lt;&lt; endl;\nreturn;\n}\n\nint main() {\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--)\nsolve();\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u7f6e\u6362\u73af/Tarjan\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/#cf1672e-notepadexe", "title": "CF1672E notepad.exe", "text": "<p><code>Apr/24/2022</code></p> <p>\u7ed9\u4f60\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\uff0c\u6709 \\(n\\) \u4e2a\u5b57\u7b26\u4e32\uff0c\u957f\u5ea6\u5206\u522b\u4e3a \\(w_1,w_2,w_3\\dots\\)\u3002</p> <p>\\(w\\) \u53ea\u6709 Grader \u624d\u77e5\u9053\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u8be2\u95ee\u4e00\u4e2a\u5bbd\u5ea6 \\(W\\)\uff0cGrader \u4f1a\u8fd4\u56de\u4ee5\u8fd9\u4e2a\u5bbd\u5ea6\u663e\u793a\u6240\u6709\u5b57\u7b26\u4e32\u6240\u9700\u8981\u7684\u6700\u5c0f\u9ad8\u5ea6\u3002</p> <p>\u5b57\u7b26\u4e32\u7684\u663e\u793a\u5fc5\u987b\u6309\u987a\u5e8f\uff0c\u540c\u4e00\u884c\u5185\u7684\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u884c\u5185\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u4e2a\u7a7a\u683c\u3002</p> <p>\u5982\u679c \\(W &lt; \\max\\{w_i\\}\\)\uff0c\u6587\u672c\u7f16\u8f91\u5668\u4f1a Crash\uff0cGrader \u4f1a\u8fd4\u56de \\(0\\)\u3002</p> <p>\u95ee\u53ef\u80fd\u7684 \\(H\\times W\\) \u6700\u5c0f\u662f\u591a\u5c11\uff0c\u4f60\u6700\u591a\u53ef\u4ee5\u95ee \\(n + 30\\) \u6b21\u3002</p> <p>\\(n,w_i \\le 2000\\)\u3002</p> <p>\u9996\u5148\u770b\u5230 \\(30\\)\uff0c\u53ef\u4ee5\u8003\u8651\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u8ba9\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u5728\u4e00\u884c\uff0c\u4e8c\u5206\u4f7f\u5f97\u8fd9\u79cd\u60c5\u51b5\u6700\u5c0f\u7684 \\(W\\)\uff0c\u8bbe\u8fd9\u4e2a \\(W = S\\)</p> <p>\u53ef\u4ee5\u53d1\u73b0 \\(S = \\sum w_i + n - 1\\)\uff0c\u4e5f\u5c31\u662f\u4ece\u957f\u5ea6\u52a0\u4e0a\u884c\u5185\u7a7a\u683c\u3002</p> <p>\u53c8\u53ef\u4ee5\u53d1\u73b0\uff0c\u8981\u60f3\u6700\u4f18\uff0c\\(H\\) \u4e00\u5b9a\u5728 \\([1,n]\\) \u8fd9\u4e2a\u8303\u56f4\u4e4b\u5185\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u4e8c\u5206\u7528\u5b8c\u4e86 \\(30\\) \u6b21\uff08\u5f53\u7136\u662f\u4e0d\u53ef\u80fd\u7528\u5b8c\u7684\uff09\u3002</p> <p>\u7136\u540e\u8fd8\u5269 \\(n\\) \u6b21\uff0c\u521a\u597d\u591f\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684 \\(H\\) \u90fd\u95ee\u4e00\u904d\u3002</p> <p>\u6240\u4ee5\u4e8c\u5206\u51fa \\(S\\) \u4e4b\u540e\u76f4\u63a5\u66b4\u529b\u95ee \\(W = S/H\\) \u7684\u60c5\u51b5\uff08\u6b64\u5904\u7684\u9664\u6cd5\u662f C++ \u7684\u9664\u6cd5\uff09</p> <p>\u53ea\u8981\u7f16\u8f91\u5668\u6ca1\u6709 Crash\uff0c\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002</p> Code <pre><code>int l = 1, r = 2011 * 2011;\nwhile(l &lt; r) {\nint mid = l + r &gt;&gt; 1;\nif(ask(mid) == 1)\nr = mid;\nelse l = mid + 1;\n}\n\nint ans = l;\n\nfor(int i = 1; i &lt;= n; ++i) {\nint x = ask(l / i);\nif(x &amp;&amp; (l / i) != 0) ans = min(ans, (l / i) * x);\n}\ncout &lt;&lt; \"! \" &lt;&lt; ans &lt;&lt; endl;\n</code></pre> <pre><code>Tag : \u4e8c\u5206/\u6784\u9020/\u8d2a\u5fc3\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/#cf1661d-progressions-covering", "title": "CF1661D Progressions Covering", "text": "<p><code>Apr/25/2022</code></p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u521d\u59cb\u5168\u90e8\u4e3a \\(0\\)\uff0c\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(b\\)\u3002</p> <p>\u4f60\u53ef\u4ee5\u5bf9 \\(a\\) \u505a\u4efb\u610f\u6b21\u8fd9\u6837\u7684\u64cd\u4f5c\uff1a</p> <ul> <li>\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(k\\) \u7684\u533a\u95f4 \\([l,r]\\)\uff0c\u5206\u522b\u8ba9 \\(a_l,a_{l + 1},\\dots,a_{r}\\) \u52a0\u4e0a \\(1,2,3,\\dots,k\\)\u3002</li> </ul> <p>\u95ee\u4f7f\u5f97 \\(\\forall i,a_i \\ge b_i\\) \u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u7b49\u5dee\u6570\u5217\u7684\u7ecf\u5178 Trick\u3002</p> <p>\u533a\u95f4 \\([l,r]\\) \u52a0\u7b49\u5dee\u6570\u5217\uff0c\u7b49\u540c\u4e8e\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u7684 \\([l + 1,r]\\) \u505a\u4e00\u6b21\u533a\u95f4\u52a0 \\(d\\)\uff0c\u7136\u540e\u4ee4 \\(c[l] + \\text{BEGIN}\\)\uff0c\\(c[r+1] - \\text{END}\\)\u3002</p> <p>\\(\\text{BEGIN,END}\\) \u5206\u522b\u662f\u9996\u9879\u548c\u672b\u9879\u3002</p> <p>\u5355\u70b9\u8be2\u95ee\u53ea\u9700\u8981\u8be2\u95ee\u7ebf\u6bb5\u6811\u4e0a\u7684 \\(sum(1,pos)\\) \u5373\u53ef\u3002</p> <p>\u53d1\u73b0\u5e8f\u5217 \\(a\\) \u5f00\u5934\u7684\u5143\u7d20\u53ea\u80fd\u4e00\u4e2a\u4e00\u4e2a\u51cf\u53bb\uff0c\u7ed3\u5c3e\u7684\u5143\u7d20\u53ea\u80fd \\(k\\) \u4e2a \\(k\\) \u4e2a\u51cf\u53bb\uff0c</p> <p>\u6700\u7ec8\u7ed3\u679c\u8981\u6c42\u6700\u5c0f\uff0c\u6240\u4ee5\u5c3d\u91cf\u8ba9\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u591a\u51cf\u53bb\u5927\u4e00\u70b9\u7684\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u8d2a\u5fc3\uff0c\u4ece\u7ed3\u5c3e\u5f00\u59cb\u626b\uff0c\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u7684\u503c \\(a_i\\) \u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u4e0d\u65ad\u52a0 \\(k\\) \u76f4\u5230 \\(b_i \\le a_i\\)\u3002</p> <p>\u7136\u540e\u8fd9\u4e9b\u64cd\u4f5c\u5bf9\u4e8e\u524d\u9762\u7684\u8d21\u732e\u4e5f\u9700\u8981\u7b97\u4e0a\u3002</p> <p>\u626b\u7684\u65f6\u5019\u7d2f\u52a0\u7b54\u6848\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\u76f4\u63a5\u5199\u4e86\u5dee\u5206\u3002</p> Code <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint main() {\n\nint n, k;\nscanf(\"%d %d\", &amp;n, &amp;k);\nvector&lt;long long&gt; b(n);\nfor (auto &amp;it : b) {\nscanf(\"%lld\", &amp;it);\n}\n\nvector&lt;long long&gt; closed(n);\nlong long sum = 0, cnt = 0, ans = 0;\nfor (int i = n - 1; i &gt;= 0; --i) {\nsum -= cnt;\ncnt -= closed[i];\nb[i] -= sum;\nif (b[i] &lt;= 0) {\ncontinue;\n}\nint el = min(i + 1, k);\nlong long need = (b[i] + el - 1) / el;\nsum += need * el;\ncnt += need;\nans += need;\nif (i - el &gt;= 0) {\nclosed[i - el] += need;\n}\n}\n\nprintf(\"%lld\\n\", ans);\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u5dee\u5206/\u7ebf\u6bb5\u6811/\u8d2a\u5fc3/\u7b49\u5dee\u6570\u5217\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/#cf1661e-narrow-components", "title": "CF1661E Narrow Components", "text": "<p><code>Apr/27/2022</code></p> <p>\u7ed9\u4f60\u4e00\u4e2a \\(3\\times m\\) \u7684 \\(01\\) \u77e9\u9635\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4 \\([l,r]\\)\uff0c\u6c42\u7b2c \\(l,r\\) \u8fd9\u4e24\u5217\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a \\(1\\) \u8fde\u901a\u5757\u3002</p> <p>\\(m,q \\le 3e5\\)\u3002</p> <p>\u4e00\u4e2a\u4e00\u773c\u7684\u601d\u8def\u662f\uff0c\u7528\u6570\u4f4dDP\u4e2d\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u601d\u60f3\uff0c\u628a\u4e00\u4e2a \\([l,r]\\) \u7684\u8be2\u95ee\u8f6c\u5316\u6210 \\([1,l],[1,r]\\) \u7684\u4e24\u4e2a\u8be2\u95ee\u3002</p> <p>\u6240\u4ee5\u8bbe \\(s_i\\) \u8868\u793a \\(1\\sim i\\) \u7684\u8fde\u901a\u5757\u4e2a\u6570\u3002</p> <p>\u4f46\u662f\u8fd9\u91cc\u53d1\u73b0\u4e0d\u80fd\u76f4\u63a5\u51cf\uff0c\u56e0\u4e3a\u5f53\u4e24\u5217\u65ad\u5f00\u7684\u65f6\u5019\uff0c\u6709\u53ef\u80fd\u4f1a\u4ea7\u751f\u65b0\u7684\u8fde\u901a\u5757\uff0c\u6216\u8005\u4ee4\u8fde\u901a\u5757\u6570\u91cf\u51cf\u5c11\u3002</p> <p>\u65e2\u7136\u6709\u8fd9\u79cd\u95ee\u9898\uff0c\u5c31\u5c1d\u8bd5\u89e3\u51b3\uff0c\u56e0\u4e3a\u524d\u7f00\u548c\u7684\u601d\u8def\u8fd8\u662f\u86ee\u5bf9\u7684\uff0c\u653e\u5f03\u4e86\u4f30\u8ba1\u4e00\u65f6\u534a\u4f1a\u513f\u60f3\u4e0d\u5230\u522b\u7684\u529e\u6cd5\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u4e00\u4e2a \\(m_i\\)\uff0c\u8868\u793a \\(i,i+1\\) \u8fd9\u4e24\u5217\u65ad\u5f00\u7684\u65f6\u5019\uff0c\u4f1a\u4ea7\u751f\u7684\u65b0\u8fde\u901a\u5757\u4e2a\u6570\u3002</p> <p>\u7136\u540e\u8be2\u95ee\u7684\u65f6\u5019\u5e26\u4e0a \\(m\\) \u5373\u53ef\u3002</p> <pre><code>for (int i = 0; i &lt; n; i++) {\ns1[i + 1] = s1[i] + a[0][i] + a[1][i] + a[2][i] - (a[0][i] &amp; a[1][i]) - (a[1][i] &amp; a[2][i]);\n}\nfor (int i = 0; i &lt; n - 1; i++) {\ns2[i + 1] = s2[i] - (a[0][i] &amp; a[0][i + 1]) - (a[1][i] &amp; a[1][i + 1]) - (a[2][i] &amp; a[2][i + 1])\n+ (a[0][i] &amp; a[1][i] &amp; a[0][i + 1] &amp; a[1][i + 1])\n+ (a[1][i] &amp; a[2][i] &amp; a[1][i + 1] &amp; a[2][i + 1]);\n}\n\n// when asking \nans = s1[r] - s1[l] + s2[r - 1] - s2[l];\n</code></pre> <p>\u4f46\u662f\u5982\u679c\u9047\u5230\uff1a</p> <pre><code>1 1 1 1 1 1 1 1\n1 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 0\n</code></pre> <p>\u5c31\u4f1a G\uff0c\u6240\u4ee5\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u6709 \\(101\\) \u7684\u60c5\u51b5\u3002</p> <pre><code>for (int i = 0; i &lt; n - 1; i++) {\nif (a[0][i] &amp; a[1][i] &amp; a[2][i]) {\nint j = i + 1;\nwhile (j &lt; n &amp;&amp; (a[0][j] &amp; !a[1][j] &amp; a[2][j]))\nj++;\nif (j &lt; n &amp;&amp; j &gt; i + 1 &amp;&amp; a[0][j] &amp;&amp; a[1][j] &amp;&amp; a[2][j]) {\nR[j]++;\nif (i + 1 &lt; n)\nL[i + 1]++;\n}\ni = j - 1;\n}\n}\nfor (int i = 1; i &lt; n; i++)\nL[i] += L[i - 1],\nR[i] += R[i - 1];\n</code></pre> <p>\u672c\u9898\u8fd8\u6709\u7ebf\u6bb5\u6811+\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u6027\u7684\u505a\u6cd5\uff0c\u5e76\u4e14\u6709</p> <p>[SDOI2013]\u57ce\u5e02\u89c4\u5212\u8fd9\u4e00\u9053\u7c7b\u4f3c\u7684\u9898\u76ee\uff08\u672c\u9898\u53ea\u80fd\u4f7f\u7528\u7ebf\u6bb5\u6811+\u5e76\u67e5\u96c6\u7ef4\u62a4\uff09\u3002</p> <pre><code>Tag : \u524d\u7f00\u548c/\u601d\u7ef4\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/#cf1671e-preorder", "title": "CF1671E Preorder", "text": "<p><code>Apr/28/2022</code></p> <p>\u7ed9\u4f60\u4e00\u68f5\u6709 \\(2^n-1\\) \u4e2a\u8282\u70b9\u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u53ea\u53ef\u80fd\u6709 <code>A/B</code> \u4e24\u79cd\u503c\u3002</p> <p>\u4f60\u53ef\u4ee5\u5bf9\u505a\u4efb\u610f\u6b21\u8fd9\u6837\u7684\u64cd\u4f5c\uff1a</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9 \\(u\\)\uff0c\u4ea4\u6362\u4ee5\u5b83\u7684\u5de6\u53f3\u513f\u5b50 \\(2u,2u+1\\) \u4e3a\u6839\u7684\u5b50\u6811\u3002</p> <p>\u95ee\u53ef\u80fd\u5f97\u5230\u7684\u524d\u5e8f\u904d\u5386\u6709\u591a\u5c11\u79cd\u3002</p> <p>\\(n \\le 18\\)\u3002</p> <p>\u6bd4\u8f83 Tricky \u7684 Problem\u3002</p> <p>\u8003\u8651\u8bbe \\(dp_u\\) \u8868\u793a\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u79cd\u53ef\u80fd\u65b9\u6848\u3002</p> <p>\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u5bf9\u524d\u5e8f\u904d\u5386\u7684\u5b9a\u4e49\u662f\uff0c\\(u\\) \u4e0a\u7684\u5b57\u7b26 + \u5de6\u513f\u5b50\u7684\u524d\u5e8f\u904d\u5386 + \u53f3\u513f\u5b50\u7684\u524d\u5e8f\u904d\u5386\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a \\(2u,2u+1\\) \u7684 DP \u503c\u770b\u4f5c\u5e38\u91cf\u6765\u8003\u8651\u3002</p> <p>\u8003\u8651\u5212\u5206\u96c6\u5408 \\(dp_u\\)\u3002</p> <p>\u5982\u679c\u8bf4\u4e24\u9897\u5b50\u6811\u672c\u8d28\u4e0d\u540c\uff08\u5373\u662f\u4e0d\u540c\u6784\uff09\uff0c\u90a3\u4e48\u4e0d\u4ea4\u6362\u7684\u65f6\u5019\uff0c\u7531\u4e58\u6cd5\u539f\u7406\u53ef\u4ee5\u5f97\u5230\uff0c\u65b9\u6848\u6570\u4e3a \\(dp_{2u}\\times dp_{2u+1}\\)\u3002</p> <p>\u4ea4\u6362\u4e4b\u540e\u53c8\u6709\u4e00\u4e2a \\(dp_{2u}\\times dp_{2u+1}\\)\u3002</p> <p>\u6240\u4ee5\u4e24\u9897\u5b50\u6811\u4e0d\u540c\u6784\u65f6\uff0c\\(dp_{u} = 2\\times dp_{2u} \\times dp_{2u + 1}\\)\u3002</p> <p>\u5982\u679c\u4e24\u9897\u5b50\u6811\u4e0d\u540c\u6784\uff0c\u65b9\u6848\u6570\u5c31\u53ea\u6709 \\(dp_{2u} \\times dp_{2u + 1}\\)\u3002</p> <ul> <li>\u4f46\u662f\u6709\u4e2a\u95ee\u9898\uff1a</li> </ul> <p>\u90a3\u5982\u679c\u4e0d\u540c\u6784\u7684\u65f6\u5019\uff0c\\(2u\\) \u7684\u6240\u6709\u65b9\u6848\u4e2d\u6709\u4e00\u79cd\u548c \\(2u + 1\\) \u91cc\u7684\u4e00\u79cd\u65b9\u6848\u5b8c\u5168\u4e00\u81f4\u3002</p> <p>\u4e0d\u4f1a\u7b97\u91cd\u5417\uff1f</p> <p>\u5176\u5b9e\u4e0d\u4f1a\uff0c\u4f60\u53ef\u4ee5\u53d1\u73b0\uff0c\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u5145\u8981\u6761\u4ef6\u5c31\u662f\u4e24\u9897\u5b50\u6811\u540c\u6784\u3002</p> <p>\u5177\u4f53\u8bc1\u660e\u53ea\u9700\u8981\u5148\u4ece\u513f\u5b50\u4e3a\u53f6\u5b50\u8282\u70b9\u7684\u8282\u70b9\u7684\u60c5\u51b5\u5f00\u59cb\uff08\u6216\u8005\u8bf4\u5c31\u5728\u8fd9\u91cc\u5148\u731c\u4e00\u4e2a\u7ed3\u8bba\uff09\uff0c\u7136\u540e\u4e0d\u65ad\u5f80\u4e0a\u8d70\uff0c\u9012\u5f52\u8bc1\u660e\u7ed3\u8bba\u3002</p> <ul> <li>\u600e\u4e48\u5224\u65ad\u540c\u6784\uff1f</li> </ul> <p>\u5176\u5b9e\u53ea\u9700\u8981\u8ba9\u9012\u5f52\u65f6\uff0c\u8bb0\u5f55\u4e00\u4e2a\u65b0\u7684 \\(preorder\\)\uff0c\u5e76\u5f3a\u5236\u8fd9\u4e2a \\(preorder\\) \u662f\u5b57\u5178\u5e8f\u6700\u5927\u7684\u90a3\u4e00\u4e2a\uff0c\u7136\u540e\u56e0\u4e3a\u8fd9\u662f\u6ee1\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u540c\u6784\u53ea\u9700\u8981\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002</p> <p>\u6240\u4ee5\u5c31\u4e0d\u7528\u5199\u6811\u54c8\u5e0c\u4e86\u3002</p> Code <pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = (1 &lt;&lt; 18) + 1;\nconstexpr int mod = 998244353;\n\nint n, ans = 1;\nstring preorder;\nstring cons[si];\n\nvoid dfs(int p, int len) {\nif(len == 1) {\ncons[p] = preorder[p];\nreturn;\n}\n\ndfs(p &lt;&lt; 1, len / 2), dfs(p &lt;&lt; 1 | 1, len / 2);\nif(cons[p &lt;&lt; 1] &gt; cons[p &lt;&lt; 1 | 1])\nswap(cons[p &lt;&lt; 1], cons[p &lt;&lt; 1 | 1]);\nif(cons[p &lt;&lt; 1] != cons[p &lt;&lt; 1 | 1]) ans = (ans + ans) % mod;\ncons[p] = preorder[p] + cons[p &lt;&lt; 1] + cons[p &lt;&lt; 1 | 1];\n}\n\nint main() {\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; preorder;\npreorder = ' ' + preorder;\n\ndfs(1, (1 &lt;&lt; n) - 1);\n\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u6811\u5f62DP/\u6811\u7684\u540c\u6784/\u6811\u7684\u524d\u5e8f\u904d\u5386\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/#cf1668e-cf1667c-half-queen-cover", "title": "CF1668E &amp; CF1667C Half Queen Cover", "text": "<p><code>Apr/28/2022</code></p> <p>\u7ed9\u4f60\u4e00\u4e2a \\(n\\times n\\) \u7684\u68cb\u76d8\uff0c\u548c\u65e0\u9650\u4e2a\u7687\u540e\uff0c\u4f46\u662f\u8fd9\u91cc\u7684\u7687\u540e\u53ea\u80fd\u653b\u51fb\u540c\u884c\u5217\u548c\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u5bf9\u89d2\u7ebf\u3002</p> <p>\u53e6\u5916\u4e00\u6761\u5bf9\u89d2\u7ebf\u653b\u51fb\u4e0d\u5230\uff0c\u95ee\u6700\u5c11\u9700\u8981\u591a\u5c11\u4e2a\u7687\u540e\u624d\u80fd\u8986\u76d6\u6574\u4e2a\u68cb\u76d8\uff0c\u7687\u540e\u4e4b\u95f4\u662f\u5426\u653b\u51fb\u4e0d\u7ba1\u3002</p> <p>\\(1\\le n \\le 1e5\\)\uff0c\u6784\u9020\u89e3\u3002</p> <p>\u4e00\u4e2a\u5f88\u5999\u7684\u6784\u9020\u9898\uff0c\u4f5c\u4e3a\u9898\u672c\u8eab\u662f\u5f88\u5999\u7684\uff0c\u4f46\u662f\u8fd9\u79cd\u4e1c\u897f\u653e\u5728 div2 E \u6211\u89c9\u5f97\u5f88\u70e6\u3002</p> <p>\u8003\u8651\u6700\u4f18\u89e3\u653e\u4e86 \\(k\\) \u4e2a Queen\uff0c\u4e14\u4e0d\u8003\u8651\u5bf9\u89d2\u7ebf\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a Queen \u79fb\u52a8\u6210\u8fd9\u6837\uff1a</p> <pre><code>x o o o o o o\no x o o o o o\no o x o o o o \no o o . . . .        x \u662f Queen\no o o . . . .        o \u662f Under\no o o . . . .        Attack \u7684\u683c\u5b50\no o o . . . .  \n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u73b0\u5728\u5269\u4e0b\u4e86\u4e00\u4e2a \\((n-k) \\times (n -k)\\) \u7684\u77e9\u9635\u3002</p> <p>\u5fc5\u7136\u662f\u7528 Queen \u7684\u5bf9\u89d2\u7ebf\u6765\u8986\u76d6\uff0c\u6240\u4ee5\u9700\u8981 \\(2\\times (n - k) - 1\\) \u4e2a Queen\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5217\u51fa\u4e0d\u7b49\u5f0f\uff1a\\(2\\times(n - k) - 1 \\le k\\)\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230 \\(k = \\lceil \\frac{2n - 1}{3} \\rceil\\)\u3002</p> <p>\u90a3\u4e48\u6700\u5c11\u9700\u8981\u7684 Queen \u7684\u4e2a\u6570\u5c31\u662f \\(\\lceil \\frac{2n - 1}{3} \\rceil\\) \u4e2a\u3002</p> <p>\u81f3\u4e8e\u6784\u9020\u89e3\uff0c\u53ea\u9700\u8981\u5206\u522b\u8ba9\u4ed6\u4eec\u8986\u76d6\u4e00\u4e2a\u5bf9\u89d2\u7ebf\u5373\u53ef\u3002</p> <p>\u4f46\u662f\u8fd8\u9700\u8981\u4fdd\u8bc1\u90a3\u4e2a \\((n-k) \\times (n - k)\\) \u77e9\u9635\u4e4b\u5916\u7684\u5730\u65b9\u90fd\u8981\u88ab Attack\u3002</p> <p>\u6240\u4ee5\u8fd8\u9700\u8981\u4fdd\u8bc1\u8fd9\u4e9b Queen \u4e92\u76f8\u4e0d\u5728\u540c\u884c\u5217\u4e0a\uff08\u5728\u5de6\u4e0a\u7684 \\(k\\times k\\) \u7684\u5730\u65b9\u653e\uff09\u3002</p> <p>\u8fd9\u91cc\u7684\u4e00\u4e2a Trick \u662f\uff0c\u628a Queen \u5f53\u6210\u56fd\u9645\u8c61\u68cb\u91cc\u9762\u7684 Knight \u6765\u79fb\u52a8\u3002</p> <p>\u6bd4\u5982 \\(5 \\times 5\\) \u7684\u65f6\u5019\uff1a</p> <pre><code>x . . . . \n. . . x . \n. x . . . \n. . . . x \n. . x . . \n</code></pre> <p>\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002</p> Code <pre><code>#include &lt;cmath&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint n, k;\n\nint main() {\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\n\nif(n == 1) {\ncout &lt;&lt; \"1\\n\" &lt;&lt; \"1 1 \\n\";\nreturn 0; }\n\nk = ceil(((2 * n - 1) * 1.0) / 3.0);\n\ncout &lt;&lt; k &lt;&lt; endl;\n\nfor(int i = 1, j = 1; i &lt;= k; ++i) {\ncout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; j &lt;&lt; endl;\nj = (j + 2 &gt; k) ? 2 : j + 2;\n}\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u6784\u9020/\u601d\u7ef4\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/#cf1665d-gcd-guess", "title": "CF1665D GCD Guess", "text": "<p>Grader \u6709\u4e00\u4e2a\u6574\u6570 \\(x, 1\\le x \\le 10^9\\)\u3002</p> <p>\u4f60\u6709 \\(30\\) \u6b21\u673a\u4f1a\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8be2\u95ee \\(\\gcd(x + a, x + b)\\) \u662f\u591a\u5c11\uff0c\\(|a,b| \\le 2\\times 10^9\\)\u3002</p> <p>\u8bf7\u4f60\u95ee\u51fa \\(x\\)\u3002</p> <p>\u53d1\u73b0 \\(\\lceil \\log_2(10^9) \\rceil = 30\\)\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e8c\u5206\u6216\u8005\u5bf9 \\(x\\) \u4e8c\u8fdb\u5236\u62c6\u5206\u3002</p> <p>\u4e8c\u5206\u663e\u7136\u4e0d\u53ef\u884c\uff0c\u56e0\u4e3a \\(\\gcd\\) \u5728\u672c\u9898\u7684\u8981\u6c42\u4e0b\u662f\u6ca1\u6709\u5355\u8c03\u6027\u8d28\u7684\uff0c\u6211\u8d5b\u65f6\u5c31\u662f\u88ab\u8fd9\u4e2a\u5361\u4f4f\u4e86\uff0c\u4e00\u76f4\u6ca1\u6709\u60f3\u5230\u4ed6\u6ca1\u6709\u5355\u8c03\u6027\u7136\u540e\u53d6\u8003\u8651\u4e8c\u8fdb\u5236\u62c6\u5206\u3002</p> <p>\u6240\u4ee5\u5bf9 \\(x\\) \u4e8c\u8fdb\u5236\u62c6\u5206\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u9760\u4e00\u6b21\u8be2\u95ee\u95ee\u51fa \\(x\\) \u7684\u67d0\u4e00\u4f4d\u662f \\(0\\) \u8fd8\u662f \\(1\\)\u3002</p> <p>\u505a\u6cd5\u5f88\u7b80\u5355\uff0c\u628a \\(i\\) \u4f4d\u4ee5\u524d\u7684\u4f4d\u5168\u90e8\u7f6e\u4e3a \\(0\\)\uff0c\u8bbe\u73b0\u5728\u7684\u6570\u662f \\(x\\prime\\)\u3002</p> <p>\u6bcf\u6b21\u8be2\u95ee \\(\\gcd(x\\prime + 1, 2^{i + 1}) = 2^{i + 1}\\) \u662f\u5426\u6210\u7acb\u5373\u53ef\u3002</p> <p>\u5982\u679c\u6210\u7acb\uff0c\u5219\u7b2c \\(i\\) \u4f4d\u662f \\(1\\)\uff0c\u53cd\u4e4b\u4e3a \\(0\\)\u3002</p> <p>\u7136\u540e\u9898\u76ee\u8981\u6c42\u95ee\u7684\u662f \\(\\gcd(x + a, x + b)\\)\uff0c\u4e14 \\(a,b\\) \u53ef\u4ee5\u662f\u8d1f\u6570\uff0c</p> <p>\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e2a\u53d8\u91cf \\(r\\)\uff0c\u8868\u793a\u5f53\u524d\u4e00\u5171\u51cf\u53bb\u4e86\u591a\u5c11\u3002</p> <p>\u7136\u540e\u8be2\u95ee \\(a = - r + 2^{i - 1}, b = 2^{i} + a\\) \u5373\u53ef\u3002</p> <p>\u8fd9\u4e2a\u662f\u66f4\u76f8\u51cf\u635f\u672f\u7684\u7ed3\u8bba\uff1a\\(\\forall a \\ge b \\in \\mathbb{N}, \\gcd(a, b) = \\gcd(b, a - b) = \\gcd(a, a - b)\\)\u3002</p> Code <pre><code>int n, m;\nint a[si], b[si];\n\nint query(int a, int b) {\ncout &lt;&lt; \"? \" &lt;&lt; a &lt;&lt; \" \" &lt;&lt; a + b &lt;&lt; endl;\nint get; cin &gt;&gt; get; return get;\n}\n\nvoid solve() {\nint r = 0;\nfor(int i = 1; i &lt;= 30; ++i) {\nint ans = query((1 &lt;&lt; (i - 1)) - r, (1 &lt;&lt; i));\nif(ans == (1 &lt;&lt; i)) r += (1 &lt;&lt; (i - 1));\n} cout &lt;&lt; \"! \" &lt;&lt; r &lt;&lt; endl;\n}\n</code></pre> <pre><code>Tag : gcd/\u6570\u8bba\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/#abc247f-cards", "title": "ABC247F Cards", "text": "<p>\u6709 \\(n\\) \u5f20\u5361\u7247,\u6bcf\u5f20\u5361\u7247\u6b63\u9762\u6709\u4e00\u4e2a\u6570\u5b57 \\(a_i\\),\u80cc\u9762\u4e5f\u6709\u4e00\u4e2a\u6570\u5b57 \\(b_i\\),</p> <p>\u4fdd\u8bc1\u6240\u6709\u724c\u4e2d\u6b63\u9762\u548c\u53cd\u9762\u51fa\u73b0\u7684\u6570\u5b57\u90fd\u662f\u4e00\u4e2a\u6392\u5217,\u73b0\u5728\u60f3\u8981\u53d6\u4e00\u4e9b\u724c,\u8fd9\u4e9b\u724c\u6b63\u53cd\u9762\u5fc5\u987b\u5305\u542b \\(1 \\sim n\\) \u7684\u6240\u6709\u6570\u5b57,\u6c42\u65b9\u6848\u6570.</p> <p>\u53ef\u4ee5\u628a\u724c\u770b\u4f5c\u8fde\u63a5 \\(a_i, b_i\\) \u4e24\u4e2a\u8282\u70b9\u7684\u8fb9\uff0c</p> <p>\u6bcf\u4e2a\u70b9\u7684\u51fa\u5165\u5ea6\u5c31\u5fc5\u7136\u4e3a \\(1\\)\u3002</p> <p>\u7136\u540e\u539f\u56fe\u8f6c\u5316\u6210\u591a\u4e2a\u4e0d\u8fde\u901a\u7684\u73af\uff0c\u65b9\u6848\u6570\u5c31\u662f\u4ed6\u4eec\u7684\u5404\u81ea\u7684\u65b9\u6848\u4e58\u8d77\u6765\uff08\u4e58\u6cd5\u539f\u7406\uff09.</p> <p>\u8003\u8651\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u73af\u7684\u7b54\u6848\u3002</p> <p>\u8bbe \\(dp_{i,0/1}\\) \u8868\u793a\u9009 \\(i\\) \u6216\u8005\u4e0d\u9009 \\(i\\) \u7684\u65b9\u6848\u3002</p> <p>\u5982\u679c \\(i\\) \u9009\u4e86\uff0c\u90a3\u4e48\u548c \\(i\\) \u76f8\u540c\uff08\u5728\u73af\u4e0a\u4e5f\u5e94\u8be5\u662f\u76f8\u90bb\u7684\uff09\uff0c\u7684\u8282\u70b9\u5c31\u53ef\u9009\u53ef\u4e0d\u9009\u3002</p> <p>\u8fd9\u4e2a\u662f\u4e00\u4e2a\u72b6\u6001\u673a\u6a21\u578b\uff0c\u73af\u7684\u5904\u7406\u5c31\u5f3a\u5236\u9009 \\(1\\)\uff0c\u5f3a\u5236\u4e0d\u9009 \\(1\\) \u5206\u522b\u8dd1\u4e00\u904d\u3002</p> <p>\u7b2c\u4e00\u79cd\u60c5\u51b5 \\(n\\) \u968f\u610f\u53d6\uff0c\u7b2c\u4e8c\u79cd\u5fc5\u987b\u53d6\u3002</p> <p>\u7136\u540e\u7279\u5224\u4e0b\u81ea\u73af\u5c31\u884c\u4e86\u3002</p> Code <pre><code>#include&lt;iostream&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\ntypedef long long LL;\nconst int maxn = 2e5 + 5, mod = 998244353;\nint a[maxn], b[maxn];\nbool v[maxn];\nLL f1[maxn][2];\nLL f2[maxn][2];\n#define x first\n#define y second\n\nint main(){\nint n;\ncin &gt;&gt; n;\nf1[1][0] = 1;\nfor(int i = 2; i &lt;= n; i++){\nf1[i][0] = f1[i - 1][1];\nf1[i][1] = (f1[i - 1][0] + f1[i - 1][1]) % mod;\n}\nf2[1][1] = 1;\nfor(int i = 2; i &lt;= n; i++){\nf2[i][0] = f2[i - 1][1];\nf2[i][1] = (f2[i - 1][0] + f2[i - 1][1]) % mod;\n}\nfor(int i = 1; i &lt;= n; i++) scanf(\"%d\", &amp;a[i]);\nfor(int i = 1; i &lt;= n; i++){\nint x;\nscanf(\"%d\", &amp;x);\nb[a[i]] = x;\n}\nLL res = 1;\nfor(int i = 1; i &lt;= n; i++){\nif (!v[i]){\nint cnt = 0;\nfor(int j = i; !v[j]; j = b[j]){\nv[j] = 1;\ncnt++;\n}\nif (cnt != 1) res = res * (f1[cnt][1] + f2[cnt][0] + f2[cnt][1]) % mod;\n}\n}\ncout &lt;&lt; res &lt;&lt; '\\n';\n}\n// \u8d3a\u7684\n// https://zhuanlan.zhihu.com/p/496253093\n</code></pre> <pre><code>Tag : DP/\u72b6\u6001\u673a/\u56fe\u8bba\u5173\u7cfb\n</code></pre>"}, {"location": "rec/atcf-for-2022-04/#abc246f-typewriter", "title": "ABC246F typewriter", "text": "<p>\u7ed9\u4f60 \\(N(1\\le N \\le 18)\\) \u4e2a\u96c6\u5408 \\(S_i \\in \\{\\texttt{a} \\sim \\texttt{z}\\}\\)\u3002</p> <p>\u4f60\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u96c6 \\(S_i\\)\uff0c\u7136\u540e\u7528\u5b83\u7684\u5b57\u7b26\u6253\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(L \\le 10^9\\) \u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u95ee\u53ef\u80fd\u7684\u65b9\u6848\u6570\uff0c\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\u53d1\u73b0\u8ba1\u7b97\u4e00\u4e2a\u96c6\u5408\u80fd\u6253\u51fa\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\u662f\u5f88\u7b80\u5355\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u4e58\u6cd5\u539f\u7406\u5373\u53ef\u3002</p> <p>\u4f46\u662f\u9ebb\u70e6\u7684\u5730\u65b9\u5c31\u5728\u4e8e\u8ba1\u7b97\u91cd\u590d\uff0c\u600e\u4e48\u641e\u5462\uff1f</p> <p>\u6211\u4eec\u8003\u8651\u8bbe \\(A_i\\) \u8868\u793a \\(S_i\\) \u80fd\u6253\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u7684\u96c6\u5408\u3002</p> <p>\u90a3\u4e48\u6700\u7ec8\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f \uff1a</p> \\[|A_1 \\cup A_2 \\cup A_3 \\cup \\dots \\cup A_n|\\] <p>\u53d1\u73b0\u8fd9\u4e2a\u5f0f\u5b50\u5f88\u5bb9\u6613\u4f7f\u7528\u5bb9\u65a5\u539f\u7406\u8ba1\u7b97\u3002</p> \\[|A_1 \\cup A_2 \\cup A_3 \\cup \\dots \\cup A_n| = \\] \\[\\sum\\limits_{i = 1}^{n} |A_i| - \\sum\\limits_{1\\le i &lt; j \\le n} |A_i \\cap A_j| + \\sum\\limits_{1\\le i &lt; j &lt; k \\le n} |A_i \\cap A_j \\cap A_k| \\dots + (-1)^{n + 1} |A_1 \\cap A_2 \\cap \\dots \\cap A_n|\\] <p>\u6240\u4ee5\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u8ba1\u7b97\u4efb\u610f\u4e24\u4e2a\u96c6\u5408 \\(A_i,A_j\\) \u7684\u4ea4\u96c6\u3002</p> <p>\u53d1\u73b0\u76f4\u63a5\u8ba1\u7b97\u5f88\u4e0d\u597d\u641e\uff0c\u6211\u4eec\u53d1\u73b0 \\(S_i, S_j\\) \u5927\u5c0f\u5f88\u5c0f\uff0c\u5206\u6790\u4e00\u6ce2\u6027\u8d28\u53ef\u4ee5\u53d1\u73b0\uff1a</p> <p>\\(A_i \\cap A_j = A_{|S_i \\cap S_j|}\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u5148\u5bf9 \\(S_i, S_j\\) \u6c42\u4e2a\u4ea4\u96c6\uff0c\u518d\u770b\u8fd9\u4e2a\u4ea4\u96c6\u80fd\u751f\u6210\u7684\u5b57\u7b26\u4e32\u6570\u91cf\u662f\u591a\u5c11\u3002</p> <p>\u7136\u540e\u8fd9\u4e2a\u9898\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6c42\u4ea4\u96c6\u662f \\(\\text{O}(2^{\\text{|S|}})\\) \u7684\u3002</p> <p>\u7136\u540e\u8fd9\u73a9\u610f\u513f\u5c31\u80fd\u5f88\u5feb\u6c42\u4e86\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\n#define mod 998244353\n\nusing namespace std;\n\nlong long power(long long a,long long b){\nlong long x=1,y=a;\nwhile(b&gt;0){\nif(b&amp;1ll){\nx=(x*y)%mod;\n}\ny=(y*y)%mod;\nb&gt;&gt;=1;\n}\nreturn x%mod;\n}\n\nint main(){\nint n,k;\ncin &gt;&gt; n &gt;&gt; k;\nvector&lt;int&gt; v(n,0);\nfor(int i=0;i&lt;n;i++){\nstring s;\ncin &gt;&gt; s;\nfor(auto &amp;nx : s){v[i]|=(1&lt;&lt;(nx-'a'));}\n}\n\nlong long res=0;\nfor(int i=1;i&lt;(1&lt;&lt;n);i++){\nint ch=(1&lt;&lt;26)-1;\nfor(int j=0;j&lt;n;j++){\nif(i&amp;(1&lt;&lt;j)){ch&amp;=v[j];}\n}\nint pc=__builtin_popcount((unsigned int)ch);\nif(__builtin_popcount((unsigned int)i)%2){res+=power(pc,k);res%=mod;}\nelse{res+=(mod-power(pc,k));res%=mod;}\n}\n\ncout &lt;&lt; res &lt;&lt; '\\n';\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u5bb9\u65a5\u539f\u7406\n</code></pre>"}, {"location": "rec/atcf-for-2022-05/", "title": "2022\u5e745\u6708AT&CF", "text": ""}, {"location": "rec/atcf-for-2022-05/#_1", "title": "\u4e94\u6708\u597d\u9898\u6539\u9519", "text": ""}, {"location": "rec/atcf-for-2022-05/#cf1670e-hemose-on-the-tree", "title": "CF1670E Hemose on the Tree", "text": "<p>\u7ed9\u4f60 \\(n = 2^p\\) \u4e2a\u8282\u70b9\u7684\u4e00\u68f5\u6811\uff0c\u4f60\u9700\u8981\u4e3a\u6240\u6709\u70b9\u548c\u8fb9\u4e00\u4e2a\u6743\u503c \\(v\\)\u3002</p> <p>\u4e14 \\(\\forall v \\in [1, 2^{n + 1} - 1]\\)\u3002</p> <p>\u4f60\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\u4e00\u4e2a\u6839\uff0c\u8981\u6c42\u6839\u5230\u6240\u6709\u8fb9\u6216\u8005\u70b9\u7684\u8def\u5f84\u4e0a\u70b9\u548c\u8fb9\u7684\u6743\u503c\u7684\u5f02\u6216\u548c\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002</p> <p>\\(p \\le 17\\)\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u6a21\u62df\u6837\u4f8b\u53d1\u73b0\u4e00\u4e2a\u7ed3\u8bba\uff1a</p> <p>\u5f02\u6216\u548c\u7684\u6700\u5927\u503c\u6700\u5c0f\u5fc5\u5b9a\u4e3a \\(n\\)\u3002</p> <p>\u4e3a\u5565\u5462\uff1f</p> <p>\u4f60\u8003\u8651\u5bf9\u4e8e \\(\\forall x &lt; n\\)\uff0c\\(x + n \\operatorname{XOR} x\\) \u662f\u4e0d\u662f\u5fc5\u7136\u7b49\u4e8e \\(n\\)\uff1f</p> <p>\u7136\u540e\u4e24\u5bf9\u8fd9\u6837\u7684\u6570\u5f02\u6216\u8d77\u6765\u5c31\u53d8\u6210\u4e86 \\(0\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8ba9\u5f02\u6216\u548c\u4e3a \\(0\\) \u4e4b\u540e\uff0c\u5728\u8ba9 \\(0\\) \u5148\u548c\u4e00\u4e2a \\(x\\) \u5f02\u6216\uff0c\u7136\u540e\u518d\u548c\u4e00\u4e2a \\(x + n\\) \u5f02\u6216\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f02\u6216\u548c\u6c38\u8fdc\u4e0d\u4f1a\u8d85\u8fc7 \\(n\\)\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u94a6\u5b9a\u6839\u7ed3\u70b9\u4e3a \\(1\\)\uff0c\u6743\u503c\u4e3a \\(n\\)\uff0c\u6df1\u5ea6\u4e3a \\(0\\)\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u5947\u6570\u6df1\u5ea6\u8282\u70b9\uff0c\u6743\u503c\u8bbe\u4e3a \\(x\\)\uff0c\u5230\u7236\u4eb2\u7684\u8fb9\u8bbe\u4e3a \\(x + n\\)\u3002</p> <p>\u7136\u540e\u5076\u6570\u8282\u70b9\u53cd\u8fc7\u6765\u3002</p> <p>\u5c31\u6784\u9020\u5b8c\u4e86\u3002</p> Code <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = (1 &lt;&lt; 18);\n\nint n, p;\nint tot = 0, head[si];\nstruct Edge {\nint ver, Next;\n}e[si &lt;&lt; 1];\ninline void add(int u, int v) {\ne[tot] = (Edge){v, head[u]}, head[u] = tot++;\n}\n\nint cnt = 0;\nint a[si], c[si &lt;&lt; 1];\n\nvoid dfs(int u, int in_edge, int dep) {\nif(in_edge != -1) {\n++cnt;\nif(dep % 2 == 0) a[u] = cnt + n, c[in_edge] = cnt;\nelse a[u] = cnt, c[in_edge] = cnt + n;\n}\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif((i ^ 1) != in_edge) dfs(v, i, dep + 1);\n}\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nmemset(head, -1, sizeof head);\nwhile(T--) {\ncnt = tot = 0;\ncin &gt;&gt; p, n = 1 &lt;&lt; p;\nfor(int i = 1; i &lt; n; ++i) {\nint u, v; cin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n}\n\na[1] = n;\ndfs(1, -1, 0);\ncout &lt;&lt; \"1\" &lt;&lt; endl;\n\nfor(int i = 1; i &lt;= n; ++i) cout &lt;&lt; a[i] &lt;&lt; \" \",\nhead[i] = -1;\ncout &lt;&lt; endl;\nfor(int i = 0; i &lt; tot; i += 2) cout &lt;&lt; c[i] + c[i ^ 1] &lt;&lt; \" \",\nc[i] = c[i ^ 1] = 0;\ncout &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u6784\u9020/\u6811/\u5f02\u6216\n</code></pre>"}, {"location": "rec/atcf-for-2022-05/#cf1670f-jee-you-see", "title": "CF1670F Jee, You See?", "text": "<p>\u7ed9\u5b9a \\(n, l, r, z\\)\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a\\) \u4f7f\u5f97 </p> <p>\\(\\sum a \\in [l, r]\\)\uff0c \u4e14 \\(\\operatorname{XOR}_i a_i = z\\)\u3002</p> <p>\\(n \\le 1000, 1\\le l, r, z \\le 10^{18}\\)\u3002</p> <p>\u53d1\u73b0\u8fd9\u4e2a\u5f02\u6216\u4e0d\u592a\u597d\u5904\u7406\u3002</p> <p>\u8003\u8651\u5230\u4e8c\u8fdb\u5236\u5e95\u4e0b\u5904\u7406\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u7c7b\u4f3c\u6570\u4f4d DP \u7684\u8fc7\u7a0b\u3002</p> <p>\u53ea\u9700\u8981\u80fd\u6c42\u51fa\u4efb\u610f \\(\\sum a \\le z\\) \u7684\u89e3\uff0c\u5c31\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\u8ba1\u7b97\u3002</p> <p>\u6700\u7ec8\u7b54\u6848\u7684\u5f02\u6216\u7684\u67d0\u4e00\u4f4d\u662f\u5426\u4e3a \\(1\\) \u53ea\u548c \\(a\\) \u4e2d\u6240\u6709\u6570\u4e8c\u8fdb\u5236\u4e0b\u5728\u8fd9\u4e00\u4f4d\u7684 \\(1\\) \u7684\u4e2a\u6570\u548c\u524d\u9762\u7684\u8fdb\u4f4d\u6709\u5173\u3002</p> <p>\u800c \\(z\\) \u5b9e\u9645\u4e0a\u53ef\u4ee5\u51b3\u5b9a\u6bcf\u4e00\u4f4d\u6700\u591a\u586b\u591a\u5c11\u4e2a \\(1\\)\u3002</p> <p>\u90a3\u4e48\u5047\u8bbe \\(z\\) \u7684\u67d0\u4e00\u4f4d\u662f \\(1\\)</p> <p>\u90a3\u4e48\u6240\u6709 \\(a\\) \u4e2d\u7684\u6570\u4e8c\u8fdb\u5236\u4e0b\u8fd9\u4e00\u4f4d\u6700\u591a\u4e00\u4e2a \\(1\\)\u3002</p> <p>\u4f46\u662f\u56e0\u4e3a\u7531\u8fdb\u4f4d\u653e\u5230\u66f4\u4f4e\u7684\u4e00\u4f4d\u5c31\u6700\u591a\u4e24\u4e2a \\(1\\)\u3002</p> <p>\u7136\u540e\u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u4f4d\u6700\u591a\u53ea\u80fd\u6709 \\(n\\) \u4e2a \\(1\\)\uff0c\u53ef\u4ee5\u8bb0\u5fc6\u5316\u4e86\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8bbe\u51fa\u4e00\u4e2a\u51fd\u6570 <code>int dfs(int x, int rest, i64 limit)</code>\u3002</p> <p>\u8868\u793a\u5f53\u524d\u586b\u5230 \\(x\\) \u4f4d\uff0c\u4e4b\u524d\u7684\u4f4d\u53ef\u80fd\u9009\u62e9\u4e0d\u586b\u5b8c\uff0c\u4e8e\u662f\u5230\u8fd9\u91cc\u5c31\u5269\u4e86 \\(rest\\) \u4e2a \\(1\\) \u53ef\u4ee5\u586b\uff0c\u5f53\u524d\u8981\u6c42 \\(\\le limit\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u7136\u540e\u679a\u4e3e\u8fd9\u4e00\u4f4d\u586b\u591a\u5c11\u4e00\uff0c\u5f80\u4e0b\u8d70\u5373\u53ef\uff0c\u65b9\u6848\u6570\u6c42\u4e00\u4e0b\u7ec4\u5408\u6570\u5373\u53ef\u3002</p> <p>\u6ce8\u610f \\(rest\\) \u8981\u548c \\(n\\) \u53d6 \\(min\\)\u3002</p> Code <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e3 + 10;\nconstexpr i64 mod = 1ll * (1e9 + 7);\n\nint n;\ni64 l, r, z;\ni64 f[60 + 10][si];\n\ni64 C[si][si]; // \u7ec4\u5408\u6570\n\n// \u5f53\u524d\u4f4d\uff0c\u4e0a\u4e00\u4f4d\u5269\u4e86\u591a\u5c11\u4e2a 1\uff0c\u8981\u6c42\u7684\u7b54\u6848 \ni64 dfs(int x, int rest, i64 val) {\nif(x == -1) return 1;\n// \u6700\u4f4e\u4f4d\u662f 0\uff0c\u6240\u4ee5 x = -1 \u624d\u662f\u8fb9\u754c\u3002\nif(f[x][rest] != -1) return f[x][rest];\n\nint a = z &gt;&gt; x &amp; 1, b = (rest &lt;&lt; 1) + (val &gt;&gt; x &amp; 1);\n\nint up = min(b, n); i64 kot = 0;\n// a\u6570\u7ec4\u6240\u6709\u7684\u6570\uff0c\u8fd9\u4e00\u4f4d\u6700\u591a\u6709 n \u4e2a 1\uff0c\u8981\u53d6 min\u3002\nfor(int i = a; i &lt;= up; i += 2) {\n// \u4e0a\u754c\u662f $a$ \u662f\u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u4f4d\u5728\u6700\u540e\u7684\u5f02\u6216\u548c\u91cc\u548c $z$ \u7684\u8fd9\u4e00\u4f4d\u76f8\u540c\u3002\n// \u6bcf\u6b21\u52a0 $2$ \u662f\u4e3a\u4fdd\u8bc1\u8fd9\u4e00\u4f4d\u4e0d\u53d8\u3002\nkot = (kot + dfs(x - 1, min(n, b - i), val) * C[n][i] % mod) % mod; }\n// \u8bb0\u5fc6\u5316\nf[x][rest] = kot;\nreturn kot;\n}\n\ni64 solve(i64 val) {\nmemset(f, -1, sizeof f);\nreturn dfs(60, 0, val) % mod;\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; l &gt;&gt; r &gt;&gt; z;\n\nC[0][0] = 1ll;\nfor(int i = 1; i &lt;= n; ++i) {\nC[i][0] = 1ll;\nfor(int j = 1; j &lt;= i; ++j) {\nC[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;\n}   }\n\n// meow(solve(5)) &lt;&lt; \" \", meow(solve(0)) &lt;&lt; endl;\n\ncout &lt;&lt; (solve(r) - solve(l - 1) + mod) % mod &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u4e8c\u8fdb\u5236\u4e0b\u7684\u6570\u4f4dDP/\u5f02\u6216\n</code></pre>"}, {"location": "rec/atcf-for-2022-05/#cf1684e-mex-vs-diff", "title": "CF1684E MEX vs DIFF", "text": "<p>\u5b9a\u4e49 \\(MEX(A)\\) \u4e3a\u5e8f\u5217 \\(A\\) \u4e2d\u6700\u5c0f\u7684\u4e0d\u5b58\u5728\u7684\u975e\u8d1f\u6574\u6570\u3002</p> <p>\u5b9a\u4e49 \\(DIFF(A)\\) \u4e3a\u5e8f\u5217 \\(A\\) \u4e2d\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u4f60\u6709 \\(k\\) \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u53ef\u4ee5\u628a\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u6539\u4e3a\u4efb\u610f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u3002</p> <p>\u6c42\u53ef\u4ee5\u8fbe\u5230\u7684 \\(\\min\\{DIFF(A) - MEX(A)\\}\\)\u3002</p> <p>\\(1\\le n \\le 10^5, 0\\le k \\le 10^5, a_i \\le 10^9\\)\u3002</p> <p>\u53d1\u73b0\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u6700\u5927\u5316 \\(MEX\\) \u5e76\u6700\u5c0f\u5316 \\(DIFF\\)\u3002</p> <p>\u6709\u4e24\u4e2a\u53d8\u91cf\u7684\u8bdd\u4f1a\u5f88\u4e0d\u597d\u641e\uff0c\u6240\u4ee5\u6211\u4eec\u5c1d\u8bd5\u56fa\u5b9a\u4e00\u4e2a\u53d8\u91cf\u3002</p> <p>\u6709\u4e00\u4e2a\u663e\u7136\u4f46\u662f\u6211\u8d5b\u65f6\u6ca1\u60f3\u5230\u7684\u7ed3\u8bba\uff1a\\(MEX\\) \u4e00\u5b9a \\(\\le n + 1\\)\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u679a\u4e3e \\(MEX\\)\u3002</p> <p>\u6240\u4ee5\u8981\u505a\u7684\u5c31\u662f\u6700\u5c0f\u5316 \\(DIFF\\)\u3002</p> <p>\u5f53\u7136\u5bf9\u4e8e\u6bcf\u4e2a \\(MEX\\)\uff0c\u5982\u679c\u5b83\u524d\u9762\uff08\u5728\u503c\u57df\u4e0a\uff09\u6709\u7a7a\u7f3a\uff0c\u6211\u4eec\u662f\u9700\u8981\u8865\u4e0a\u7684\u3002</p> <p>\u5982\u679c \\(k\\) \u6b21\u4e0d\u591f\u7684\u8bdd\uff0c\u8fd9\u4e2a \\(MEX\\) \u5fc5\u7136\u4e0d\u5408\u6cd5\u3002</p> <p>\u7136\u540e\u5047\u8bbe\u586b\u5b8c\u7a7a\u7f3a\u8fd8\u5269\u4e0b \\(rest\\) \u6b21\u64cd\u4f5c\u673a\u4f1a\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u6bd4\u8f83 trivial \u7684 greedy\uff0c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u5c3d\u91cf\u8ba9\u51fa\u73b0\u6b21\u6570\u5c11\u7684\u4e00\u79cd\u6570\u5168\u90e8\u53d8\u4e3a\u4efb\u610f\u4e00\u4e2a\u524d\u9762\uff08\\(0 \\sim MEX - 1\\)\uff09\u5df2\u7ecf\u51fa\u73b0\u7684\u6570\u3002</p> <p>\u6bcf\u6b21 \\(DIFF\\) \u80fd\u51cf\u5c11\u4e00\u3002</p> <p>\u7136\u540e\u8fd9\u6837\u5c31\u80fd\u6700\u5c0f\u5316 \\(DIFF\\)\u3002</p> <p>\u4f46\u662f\u76f4\u63a5\u66b4\u529b\u505a\u7684\u8bdd\u590d\u6742\u5ea6\u662f \\(O(nk)\\) \u7684\uff0c\u8003\u8651\u600e\u4e48\u4f18\u5316\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u8bb0\u4e00\u4e2a\u6570\u7ec4 \\(cnt\\) \u8868\u793a\u539f\u5e8f\u5217\u7684\u6876\uff0c\u7136\u540e\u8bb0 \\(cntt\\) \u4e3a \\(cnt\\) \u7684\u6876\u3002</p> <p>\u8fd9\u6837\u76f4\u63a5\u5728\u6392\u5e8f\u8fc7\u540e\u7684 \\(cntt\\) \u5c3d\u91cf\u53d6\u524d\u9762\u7684\u5c31\u884c\u3002</p> <p>\u6700\u574f\u60c5\u51b5\u4e0b\u8981\u53d6 \\(\\sqrt{k}\\) \u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n\\sqrt{k})\\)\u3002</p> <p>\uff08\u56e0\u4e3a \\(\\dfrac{x(x + 1)}{2} \\le k\\)\uff0c\u6240\u4ee5\u9879\u6570 \\(x\\) \u662f \\(\\sqrt{k}\\) \u7ea7\u522b\u7684\u3002\uff09</p> Code <pre><code>// author : black_trees\n\n#include &lt;map&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nint n, k; cin &gt;&gt; n &gt;&gt; k;\nstd::map&lt;int, int&gt; cnt; cnt.clear();\nstd::map&lt;int, int&gt; cntOfcnt; cntOfcnt.clear();\nstd::vector&lt;int&gt; a(n + 1), occ(n + 1); occ.clear(), a.clear();\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; a[i], cnt[a[i]]++;\nif(a[i] &lt;= n) occ[a[i]] = 1;\n}\nfor(int i = 1; i &lt;= n; ++i) occ[i] += occ[i - 1];\nfor(auto [ele, num] : cnt) cntOfcnt[num]++;\n\nint diff = int(cnt.size()), ans = diff;\n\nfor(int mex = 1; mex &lt;= n + 1; mex++) {\nif(cnt[mex - 1]) cntOfcnt[cnt[mex - 1]] --, diff --;\nif(mex &gt; occ[mex - 1] + k) continue;\n\nint ret = diff, rest = k;\nfor(auto [x, y] : cntOfcnt) {\nif(rest &gt;= x * y) rest -= x * y, ret -= y;\nelse { ret -= rest / x; break; }\n}\nans = min(ans, ret);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-05/#cf1682e-unordered-swaps", "title": "CF1682E Unordered Swaps", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a \\(1 \\sim n\\) \u7684\u6392\u5217 \\(p\\)\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u4ea4\u6362\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u3002</p> <p>Alice \u7528\u4e86\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u628a \\(p\\) \u7f6e\u6362\u6210\u4e86\u4e00\u4e2a\u6709\u5e8f\u7684\u6392\u5217\uff0c\u5373 \\(1,2,3,\\dots, n\\)\u3002</p> <p>\u5e76\u4e14 Alice \u8bb0\u5f55\u4e0b\u4e86\u5979\u6bcf\u6b21\u7684\u64cd\u4f5c \\((x_i, y_i)\\)\uff0c\u5373\u4ea4\u6362 \\(p_{x_i}, p_{y_i}\\)\u3002</p> <p>\u4f46\u662f Bob \u628a\u8fd9\u4e2a\u64cd\u4f5c\u4e8c\u5143\u7ec4\u5e8f\u5217 \\(q\\) \u6253\u4e71\u4e86\uff0c\u4f60\u9700\u8981\u6062\u590d\u8fd9\u4e2a\u4e8c\u5143\u7ec4\u5e8f\u5217\u7684\u987a\u5e8f\u3002</p> <p>\u5e76\u4e14\u8f93\u51fa\uff0c\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u4f7f\u7528\u7684\u662f\u7ed9\u5b9a \\(q\\) \u7684\u7b2c\u51e0\u4e2a\u4e8c\u5143\u7ec4\uff0c\u4efb\u610f\u89e3\u5373\u53ef\u3002</p> <p>\\(n \\le 2e5\\)\u3002</p> <p>\u53c8\u662f\u4e00\u9053\u7f6e\u6362\u73af\u7684\u9898\u3002</p> <p>\u663e\u7136\u5148\u627e\u51fa\u6240\u6709\u7684\u7f6e\u6362\u73af\uff0c\u8fd9\u4e2a Tarjan \u4e00\u4e0b\u5373\u53ef\u3002</p> <p>\u7136\u540e\u6bcf\u6b21\u64cd\u4f5c\u80af\u5b9a\u662f\u4ea4\u6362\u4e00\u4e2a\u7f6e\u6362\u73af\u4e0a\u7684\u4e24\u4e2a\u5143\u7d20\u4ee5\u628a\u7f6e\u6362\u73af\u62c6\u6210\u4e24\u4e2a\u7f6e\u6362\u73af\u3002</p> <p>\u6700\u540e\u7684\u76ee\u7684\u5c31\u662f\u628a\u6240\u6709\u7f6e\u6362\u73af\u5168\u90e8\u62c6\u6210\u81ea\u73af\u3002</p> <p>\u6240\u4ee5\u64cd\u4f5c\u65f6 \\(x_i,y_i\\) \u5fc5\u987b\u8981\u5728\u540c\u4e00\u4e2a\u7f6e\u6362\u73af\u4e0a\uff08\u7ed3\u8bba1\uff09\uff0c\u5426\u5219\u4f60\u5c31\u4f1a\u6d6a\u8d39\u4e00\u6b21\u673a\u4f1a\uff0c\u6c38\u8fdc\u65e0\u6cd5\u5b8c\u6210\u8fd9\u4e2a\u7f6e\u6362\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8003\u8651\u600e\u4e48\u5904\u7406 \\(q\\)\u3002</p> <p>\u53ef\u4ee5\u628a\u4e00\u4e2a\u4e8c\u5143\u7ec4 \\((x_i, y_i)\\) \u770b\u6210\u4e00\u6761\u8fde\u63a5 \\((x_i, y_i)\\) \u7684\u8fb9\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7f6e\u6362\u73af\uff0c\u5b83\u5fc5\u7136\u4f1a\u5f62\u6210\u4e00\u68f5\u6811 \\(T\\)\uff0c\u5047\u8bbe\u8282\u70b9\u4e2a\u6570\u4e3a \\(N\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u4ee5\u67d0\u79cd\u987a\u5e8f\u53d6\u8fd9 \\(N - 1\\) \u6761\u8fb9\u3002</p> <p>\u6b64\u65f6\u5c31\u6ca1\u6709\u4efb\u4f55\u601d\u8def\u4e86\uff0c\u6240\u4ee5\u8003\u8651\u600e\u4e48\u5229\u7528\u4e00\u4e0b\u5df2\u7ecf\u6709\u7684\u7ed3\u8bba1\u3002</p> <p>\u9996\u5148\uff0c\u5982\u679c\u6211\u4eec\u9009\u4e86 \\(T\\) \u4e0a\u7684\u67d0\u4e2a\u64cd\u4f5c \\((u, v)\\)\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u7b49\u540c\u4e8e\u5220\u9664\u8fb9 \\((u, v)\\)\uff0c\u8ba9\u7f6e\u6362\u73af\u65ad\u6210\u4e24\u4e2a\u3002</p> <p>\\(T\\) \u540c\u6837\u4e5f\u4f1a\u5206\u88c2\u6210 \\(T1, T2\\) \u4e24\u68f5\u6811\u3002</p> <p>\u4f46\u662f\u6bcf\u4e00\u6b21\u5220\u9664\u4e0d\u4e00\u5b9a\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u4f60\u9700\u8981\u4fdd\u8bc1\u65ad\u5f00\u4e4b\u540e\uff0c\\(u\\) \u8fde\u901a\u5757\u7684\u90fd\u5728\u4e00\u4e2a\u73af\u4e0a\uff0c\\(v\\) \u8fde\u901a\u5757\u540c\u7406\u3002</p> <p>\u6bd4\u5982\u8fd9\u79cd\u60c5\u51b5\uff1a</p> <pre><code>o----o----o----o\n1    2    4    3 (Tree)\n\n1    2    3    4 (Ring)\no---&gt;o---&gt;o---&gt;o\n^              |\n|______________|\n</code></pre> <p>\u4f60\u5982\u679c\u5220\u6389 \\(T\\) \u4e0a\u7684\u8fb9 \\((1, 2)\\)\uff0c\u90a3\u4e48\u7f6e\u6362\u73af\u4f1a\u53d8\u6210\u8fd9\u6837\uff1a</p> <pre><code>1    2    3    4\n___________\n|         v\no    o    o---&gt;o ^              |\n|______________|\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u72ec\u7acb\u7684\u8fde\u901a\u5757\u53d8\u6210\u4e86 \\(2\\) \u8fd9\u4e2a\u8282\u70b9\uff01\u3002</p> <p>\u800c\u672c\u6765\u671f\u671b\u4e2d\u5e94\u8be5\u662f \\(1\\) \u8fd9\u4e2a\u8282\u70b9\u72ec\u7acb\u51fa\u6765\u7684\u3002</p> <p>\u6240\u4ee5\u8fd9\u6837\u7684\u4e00\u6b21\u64cd\u4f5c\u662f\u4e0d\u5408\u6cd5\u7684\u3002</p> <p>\u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u3002</p> <p>\u53d1\u73b0\u5220\u6389 \\((2, 4)\\) \u8fd9\u6761\u8fb9\u662f\u5408\u6cd5\u7684\uff0c\u4e4b\u540e\u518d\u5220 \\((1, 2)\\) \u8fd9\u6761\u8fb9\u5c31\u5408\u6cd5\u4e86\uff01</p> <p>\u4e0d\u59a8\u731c\u6d4b\uff0c\u8fd9\u4e2a\u9009\u8fb9\u7684\u987a\u5e8f\u53ef\u80fd\u6709\u4ec0\u4e48\u7ed3\u8bba\u3002</p> \u7ed3\u8bba2 <p>\u5bf9\u4e8e\u4e00\u4e2a\u6811\u4e0a\u7684\u8282\u70b9 \\(u\\)\uff0c\u5047\u8bbe\u548c\u5b83\u6709\u8fde\u8fb9\u7684\u8282\u70b9\u96c6\u5408\u4e3a \\(adj = \\{x_1, x_2, \\dots, x_M\\}\\)\u3002</p> <p>\u5e76\u4e14\u5b9a\u4e49 \\(dis(u, x)\\) \u4e3a\u7f6e\u6362\u73af\u4e0a \\(u\\) \u5230 \\(x\\) \u7684\u8ddd\u79bb\u3002</p> <p>\u5bf9 \\(adj\\) \u6309\u7167 \\(dis(u, x)\\) \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5f97\u5230\u4e00\u4e2a\u65b0\u7684 \\(adj = \\{y_1, y_2, \\dots, y_M\\}\\)\u3002</p> <p>\u90a3\u4e48\uff0c\u5f53 \\(i &lt; j\\) \u65f6\uff0c\u64cd\u4f5c \\((u, y_i)\\) \u5fc5\u987b\u5728 \\((u, y_j)\\) \u4e4b\u524d\u8fdb\u884c\u3002</p> <p>\u5426\u5219\uff0c\u5982\u679c\u5148\u8fdb\u884c\u4e86 \\((u, y_j)\\)\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u662f\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u64cd\u4f5c\u3002</p> Proof <p>\u8fd9\u4e2a\u6bd4\u8f83\u597d\u8bc1\u660e\uff0c\u56e0\u4e3a\u4f60\u5982\u679c\u5148\u6362\u4e86 \\((u, y_j)\\)\uff0c\u90a3\u4e48 \\((u, y_i)\\) \u5fc5\u7136\u4f1a\u5904\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7f6e\u6362\u73af\u4e0a\u3002</p> \u4e3a\u4ec0\u4e48\u4f1a\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7f6e\u6362\u73af\u4e0a <p>\u8bbe \\(nxt(qwq)\\) \u8868\u793a\u8282\u70b9 \\(qwq\\) \u5728\u7f6e\u6362\u73af\u4e0a\u6307\u5411\u7684\u8282\u70b9\u3002</p> <p>\u4ea4\u6362 \\((u, y_j)\\) \u4e4b\u540e\uff0c\\(nxt(u)\\) \u4f1a\u53d8\u6210 \\(nxt(y_j)\\)\uff0c\\(nxt(y_i)\\) \u4f1a\u53d8\u6210 \\(nxt(u)\\)\u3002</p> <p>\u7136\u540e \\(u\\) \u5c31\u4f1a\u548c\u539f\u6765\u7684 \\(nxt(y_j)\\) \u5728\u4e00\u4e2a\u7f6e\u6362\u73af \\(g_1\\) \u4e0a\uff0c\u7136\u540e\u539f\u6765\u7684 \\(nxt(u)\\) \u4e00\u76f4\u5230 \\(y_j\\) \u8fd9\u4e00\u6bb5\u90fd\u4f1a\u5728\u53e6\u4e00\u4e2a\u7f6e\u6362\u73af \\(g_2\\) \u4e0a\uff0c</p> <p>\u5e76\u4e14\u56e0\u4e3a \\(i &lt; j\\)\uff0c\u6240\u4ee5 \\(y_i\\) \u4e5f\u4f1a\u5728 \\(g_2\\) \u4e0a\uff0c\u90a3\u4e48 \\(u, y_i\\) \u81ea\u7136\u5c31\u662f\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7f6e\u6362\u73af\u4e0a\u4e86\u3002</p> <p>\u6709\u4e00\u5f20\u56fe\u53ef\u4ee5\u53c2\u8003\uff1a</p> <p></p> <p>\u7136\u540e\u4f60\u4e4b\u540e\u518d\u6362 \\((u, y_i)\\) \u5c31\u4f1a\u5408\u5e76\u4e24\u4e2a\u73af\uff0c\u5c31\u6d6a\u8d39\u4e86\u4e00\u6b21\u64cd\u4f5c\uff0c\u8fdd\u80cc\u4e86\u7ed3\u8bba1\uff0c\u6c38\u8fdc\u65e0\u6cd5\u5b8c\u6210\u7f6e\u6362\u3002</p> <p>\u7136\u540e\u53d1\u73b0\uff0c\u5176\u5b9e\u6211\u4eec\u5df2\u7ecf\u80fd\u786e\u5b9a\u67d0\u4e9b\u8fb9\u7684\u987a\u5e8f\u5173\u7cfb\u4e86\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u79cd\u65b0\u7684\u5173\u7cfb \\((x, y) \\prec (xx, yy)\\)\uff0c\u8868\u793a\u6211\u4eec\u80fd\u786e\u5b9a \\((x, y)\\) \u8fd9\u4e2a\u64cd\u4f5c\u6bd4 \\((xx, yy)\\) \u5148\u4f7f\u7528\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6811\u4e0a\u6bcf\u4e2a\u5ea6\u6570\u5927\u4e8e\u4e00\u7684\u8282\u70b9 \\(u\\)\uff0c\u548c\u4ed6\u76f8\u5173\u7684\u6240\u6709\u8fb9\u5982\u679c\u6784\u6210\u96c6\u5408 \\(E_u\\)\uff0c\u90a3\u4e48 \\(E_u\\) \u4e2d\u7684\u6240\u6709\u5143\u7d20\u5fc5\u7136\u4f1a\u4ee5\u94fe\u5f0f\u7684\u5f62\u5f0f\u6ee1\u8db3\u5173\u7cfb \\(\\prec\\)\u3002</p> <p>\u7136\u540e\u4e0d\u540c\u7684\u4e24\u4e2a\u96c6\u5408 \\(E1, E2\\)\uff0c\u5fc5\u7136\u4f1a\u4ee5\u4e00\u4e2a \\(\\prec\\) \u5173\u7cfb\u8fde\u63a5\u8d77\u6765\uff08\u56e0\u4e3a\u8fd9\u662f\u6811\u554a\uff09</p> <p>\u800c\u4e14\u4e0d\u4f1a\u6709\u91cd\u590d\u7684\u4e24\u5bf9\u5173\u7cfb\u51fa\u73b0\u3002 </p> <p>\u601d\u8003\u4e00\u4e0b\uff0c\\(\\prec\\) \u8fd9\u4e2a\u5173\u7cfb\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e25\u683c\u504f\u5e8f\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u62d3\u6251\u6c42\u5b83\u7684\u89e3\u3002</p> <p>\u800c\u6211\u4eec\u8981\u6c42\u7684\u6b63\u597d\u5c31\u662f\u8fd9\u4e9b\u8fb9\u7684\u4f7f\u7528\u987a\u5e8f\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u8fb9\u770b\u4f5c\u8282\u70b9\uff0c\u5bf9\u4e8e\u6811\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9 \\(u\\)\uff0c\u6211\u4eec\u4ee4 \\(adj_u = \\{x_1, x_2, \\dots\\}\\)\u3002</p> <p>\u90a3\u4e48\uff0c\u53ea\u9700\u8981\u8fde \\((u, x_1) \\to (u, x_2) \\to (u, x_3) \\to \\dots\\)\u3002</p> <p>\u6700\u540e\u8dd1\u4e00\u4e2a\u62d3\u6251\u6392\u5e8f\u5c31\u884c\u4e86\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u7684\u70b9\u5bf9 \\((x, y)\\) \u5e94\u5f53\u662f\u65e0\u5e8f\u7684\uff0c\u6240\u4ee5\u6709\u4e2a\u5c0f\u6280\u5de7\u5c31\u662f\uff0c\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u5019\u5f3a\u5236 \\(x &lt; y\\) \u4ee5\u65b9\u4fbf\u5904\u7406\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;map&gt;\n#include &lt;stack&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cassert&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m;\nint tim = 0, cnt = 0;\nint p[si]; // \u7ed9\u5b9a\u7684\u88ab\u6253\u4e71\u7684 perm\nint dfn[si]; // \u6bcf\u4e2a\u8282\u70b9(1 ~ n)\u5728\u627e\u73af\u7684\u65f6\u5019\u7684 dfs \u5e8f\u3002\nstd::vector&lt;int&gt; G[si]; // \u539f\u56fe\u7684\u90bb\u63a5\u8868\uff0c\u7528\u6765\u627e\u73af\u3002\nstd::vector&lt;int&gt; adj[si]; // \u6811\u7684\u90bb\u63a5\u8868\n\nint low[si];\nbool ins[si];\nstd::stack&lt;int&gt;s;\nint c[si], maxv[si], minv[si]; // i \u6240\u5c5e\u7684\u73af\u7684\u7f16\u53f7\uff0c\u73af\u4e0a\u6700\u5927\u6700\u5c0f dfn.\nvoid tarjan(int u) {\ndfn[u] = low[u] = ++tim;\ns.push(u), ins[u] = false;\nfor(auto v : G[u]) {\nif(!dfn[v]) tarjan(v), low[u] = min(low[u], low[v]);\nelse low[u] = min(low[u], dfn[v]);\n}\nif(dfn[u] == low[u]) {\nint x; ++cnt;\ndo { x = s.top(), s.pop(), c[x] = cnt, maxv[cnt] = max(maxv[cnt], dfn[x]), minv[cnt] = min(minv[cnt], dfn[x]);\n} while(u != x);\n}\n}\n\nstd::map&lt;pair&lt;int, int&gt;, int&gt; Hash; // \u7528\u6765\u8bb0\u5f55\u8fd9\u6761\u8fb9\u7684\u7f16\u53f7\u3002\n\nint order = 0; // \u6700\u540e\u5f97\u5230\u7684 topo \u5e8f\u3002\nint ind[si]; // \u5165\u5ea6\nstruct Node { int u, v, id; } rec[si]; // \u8bb0\u5f55\u8fd9\u4e2a swap \u7684\u5c5e\u6027\u3002\nstd::vector&lt;int&gt; E[si]; // \u7528\u6765\u62d3\u6251\u7684\u56fe\u3002\n\nint ans[si], ret[si]; // ans[i] \u662f\u7b2c i \u4e2a swap \u7684 order\n// ret[i] \u662f\u7b2c i \u6b21\u4f7f\u7528\u54ea\u4e2a swap\u3002\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nHash.clear();\nmemset(minv, 0x3f, sizeof minv);\nmemset(maxv, -0x3f, sizeof maxv);\n\n// sort by PosSt\nauto dis = [&amp;](int PosSt, int PosEd) -&gt; int {\nassert(c[PosSt] == c[PosEd]);\nint bel = c[PosSt];\nint siz = maxv[bel] - minv[bel] + 1;\nreturn ((dfn[PosEd] - dfn[PosSt]) + siz) % siz;\n};\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; p[i], G[i].push_back(p[i]);\nfor(int i = 1; i &lt;= n; ++i) if(!dfn[i]) tarjan(i);\n\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v; cin &gt;&gt; u &gt;&gt; v;    // \u64cd\u4f5c\u7684\u4f4d\u7f6e\u3002\nassert(c[u] == c[v]);\nadj[u].push_back(v), adj[v].push_back(u);\nif(u &gt; v) swap(u, v);\nHash[{u, v}] = i;\nrec[i] = (Node){u, v, i};\n}\n\nfor(int i = 1; i &lt;= n; ++i)\nsort(adj[i].begin(), adj[i].end(), [&amp;](int x, int y) { return dis(i, x) &lt; dis(i, y); }); // \u6309\u7167\u7ed3\u8bba\u7ed9 adj \u6392\u4e2a\u5e8f\n\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 0; j &lt; int(adj[i].size()) - 1; ++j) {\nint x = i, y = adj[i][j], u = i, v = adj[i][j + 1];\nif(x &gt; y) swap(x, y); if(u &gt; v) swap(u, v);\nint yhp = Hash[{x, y}], zxy = Hash[{u, v}];\nE[yhp].push_back(zxy), ind[zxy]++;\n}\n} std::queue&lt;int&gt; q;\nfor(int i = 1; i &lt;= m; ++i) if(!ind[i]) q.push(i);\nwhile(!q.empty()) {\nint u = q.front(); q.pop();\nans[rec[u].id] = ++order;\nfor(auto v : E[u]) if(!(--ind[v])) q.push(v);\n}\n\nfor(int i = 1; i &lt;= m; ++i)\nret[i] = i;\nsort(ret + 1, ret + 1 + m, [&amp;](int x, int y){ return ans[x] &lt; ans[y]; });\nfor(int i = 1; i &lt;= m; ++i) cout &lt;&lt; ret[i] &lt;&lt; \" \";\ncout &lt;&lt; endl;\n\nreturn 0;\n}\n// \u5176\u5b9e\u4e0a\u9762\u6709\u4e9b\u4e1c\u897f\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u4e0d\u8fc7\u61d2\u5f97\u6539\u4e86\uff0c\u53cd\u6b63\u610f\u601d\u90fd\u4e00\u6837\u3002\n</code></pre>"}, {"location": "rec/atcf-for-2022-07-08/", "title": "2022\u5e747,8\u6708AT&CF", "text": ""}, {"location": "rec/atcf-for-2022-07-08/#cf", "title": "\u4e03\u3001\u516b\u6708 CF \u4e22\u4eba\u505a\u9898\u8bb0\u5f55", "text": "<p>\u9000\u5f79\u8fc7\u540e\u6c34\u5e73\u66f4\u52a0\u4f4e\u4e0b\u4e86\u3002</p> <p>\u672c\u6765\u5c31\u5f88\u83dc\uff0c\u73b0\u5728\u4f30\u8ba1\u5c31\u4e00\u4e2a pupil \u6c34\u5e73\u3002</p> <p>\u6709\u65f6\u5019\u751a\u81f3 C \u505a\u4e0d\u51fa\u6765 /kx</p> <p>\u5c5e\u4e8e\u662f\u9ebb\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2022-07-08/#cf1706c-qpwoeirut-and-the-city", "title": "CF1706C Qpwoeirut And The City", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(\\{a\\}\\)\uff0c\\(3 \\le n \\le 1e5\\)\u3002</p> <p>\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u628a\u5e8f\u5217\u91cc\u7684\u4e00\u4e2a\u6570\u52a0\u4e00\uff0c\u4ee3\u4ef7\u662f\u4e00\u3002</p> <p>\u8981\u6c42\u6700\u5927\u5316\u5e8f\u5217\u7684 \u201c\u5cf0\u201d \u7684\u4e2a\u6570\uff0c\u4e14\u4ee3\u4ef7\u6700\u5c0f\u3002</p> <p>\u4e00\u4e2a\u201c\u5cf0\u201d\u5b9a\u4e49\u4e3a\u6ee1\u8db3 \\(a_i &gt; a_{i + 1}, a_i &gt; a_{i - 1}\\) \u7684 \\(a_i\\)\u3002</p> <p>\\(a_{0}\\) \u548c \\(a_{n + 1}\\) \u5728\u5b9a\u4e49\u4e0a\u7b49\u4e8e \\(+\\infty\\)\u3002</p> <p>\u8003\u573a\u72af\u6d51\u6ca1\u60f3\u5230\uff0c\u8fd9\u662f\u8003\u573a\u601d\u8def\uff1a</p> <p>\u53d1\u73b0\u4e86\u5cf0\u7684\u4e2a\u6570\u5fc5\u7136\u662f \\(mx = \\lfloor \\dfrac{n-1}{2}\\rfloor\\)\u3002</p> <p>\u7136\u540e\u5c31\u8003\u8651\u5728 \\([2, n - 1]\\) \u91cc\u9762\u9009\uff0c\u5f00\u59cb\u60f3\u7684\u662f\u76f4\u63a5\u95f4\u9694\u9009 \\(mx\\) \u4e2a\u51fa\u6765\u3002</p> <p>\u4f46\u662f\u53d1\u73b0 \\(n \\equiv 0 (\\mod 2)\\) \u7684\u65f6\u5019\u53ef\u4ee5\u5728\u4e2d\u95f4\u8df3\u4e24\u683c\u51fa\u6765\u9009\u3002 \\((\\*)\\)</p> <p>\u7136\u540e\u5c31\u53bb\u8003\u8651\u8d2a\u5fc3\u6216\u8005\u72b6\u6001\u673a DP \u4e86\uff0c\u6ca1\u6709\u53bb\u7ec6\u60f3 \\((\\*)\\) \u8fd9\u73a9\u610f\u513f\u5230\u5e95\u662f\u4e3a\u5565\uff0c\u672c\u8d28\u662f\u4ec0\u4e48\uff0c\u4e5f\u6ca1\u53bb\u8003\u8651\u590d\u6742\u5ea6\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u6ca1\u60f3\u5230\u6b63\u89e3\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u73a9\u610f\u513f\u4ed4\u7ec6\u8003\u8651\u4e00\u4e0b\uff0c\u5148\u5217\u51fa\u51e0\u4e2a corner case\uff1b</p> <p>\u5982\u679c \\(n\\) \u662f\u5947\u6570\uff0c\u80af\u5b9a\u6ca1\u6cd5\u8df3\u4e24\u683c\uff0c\u53ea\u80fd\u4ece \\(2\\) \u5f00\u59cb\u95f4\u9694\u9009\uff0c\u8fd9\u4e2a\u7b97\u60c5\u51b5 \\(1\\)\u3002</p> <p>\u7136\u540e\u8003\u8651\u5076\u6570\uff0c\u53d1\u73b0\u5982\u679c\u4e0d\u8df3\u4e24\u683c\uff0c\u5fc5\u7136\u662f\u4ece \\(2\\) \u5f00\u59cb\u95f4\u9694\u62ff\u5230 \\(n - 2\\)\uff0c\u8fd9\u7b97\u60c5\u51b5 \\(2.1\\)\uff0c\u6216\u8005\u4ece \\(3\\) \u5f00\u59cb\u62ff\u5230 \\(n - 1\\)\uff0c\u8fd9\u7b97\u60c5\u51b5 \\(2.2\\)\u3002</p> <p>\u6700\u540e\u5c31\u662f\u8df3\u4e24\u683c\u7684\u60c5\u51b5 \\(3\\)\uff0c\u80af\u5b9a\u53ea\u80fd\u8df3\u4e00\u6b21\u4e24\u683c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u524d\u9762\u4e00\u6bb5\u662f\u5076\u6570\uff0c\u540e\u9762\u4e00\u6bb5\u662f\u5947\u6570\uff08\u8981\u60f3\u8df3\u4e00\u6b21\uff0c\u53ea\u80fd\u4ece \\(2\\) \u5f00\u59cb\u62ff\uff09\u3002</p> <p>\u6240\u4ee5\u9884\u5904\u7406\u5076\u6570\u7684\u82b1\u8d39\u524d\u7f00\u548c\u5947\u6570\u7684\u82b1\u8d39\u540e\u7f00\u5373\u53ef\u3002</p> <p>\u53d1\u73b0\u60c5\u51b5 \\(2.1, 2.2\\) \u90fd\u53ef\u4ee5\u76f4\u63a5\u5f52\u5316\u5230 \\(3\\)\uff0c\u6240\u4ee5\u4ee3\u7801\u5b9e\u73b0\u5c31\u53ef\u4ee5\u7b80\u5355\u4e00\u70b9\uff0c\u7a0d\u5fae\u8c03\u6574\u4e00\u4e0b\u5faa\u73af\u8fb9\u754c\u5373\u53ef\u3002</p> Code <pre><code>// \u60f3\u4e0a CM\u3002\n// \u6211\u98df\u4e0d\u98df\u6cb9\u997c\u3002\n// \u80fd\u4e0d\u80fd\u6765\u70b9\u4e32\u4e32\u9898\u3002\n// \u4e3a\u4ec0\u4e48\u4eff\u5c04\u53d8\u6362\u4e0d\u8003\u4e86\u3002\n// \u7b97\u6cd5\u6846\u56fe\u7684\u53d8\u91cf\u90fd\u662f\u4ec0\u4e48 shit\u3002\n// \u4ec0\u4e48\u65f6\u5019\u624d\u80fd AP Spasmodic AT\u3002\n// OI \u6c34\u5e73\u4e00\u964d\u518d\u964d\uff0c\u5feb\u53d8\u6210\u53ea\u4f1a\u8d3a\u9898\u7684 shaber \u4e86\u3002\n\n#include &lt;bits/stdc++.h&gt;\n\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\nconst i64 inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n;\ni64 a[si], w[si];\ni64 p[si], s[si];\n\nvoid solve() {\ncin &gt;&gt; n;\ni64 ans = 0;\n\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n\nif(n &amp; 1) {\nfor(int i = 2; i &lt; n; i += 2) if(a[i] &lt;= a[i - 1] || a[i] &lt;= a[i + 1]) ans += max(a[i - 1], a[i + 1]) - a[i] + 1;\n// cout &lt;&lt; \"ans = \";        \ncout &lt;&lt; ans &lt;&lt; endl;\nreturn; }   w[0] = w[1] = w[n] = w[n + 1] = w[n + 2] = 0;\nfor(int i = 2; i &lt; n; ++i) if(a[i] &lt;= a[i - 1] || a[i] &lt;= a[i + 1]) w[i] = max(a[i - 1], a[i + 1]) - a[i] + 1;\nelse w[i] = 0;\n\nmemset(p, 0, sizeof p); // prefix sum of even bulding\nmemset(s, 0, sizeof s); // suffix sum of odd building\n\nfor(int i = 2; i &lt; n; i += 2)\np[i] = p[i - 2] + w[i]; for(int i = n - 1; i &gt; 1; i -= 2)\ns[i] = s[i + 2] + w[i];\n\nans = inf;\nfor(int i = 0; i &lt; n; i += 2) ans = min(ans, p[i] + s[i + 3]);\n// cout &lt;&lt; \"ans = \";    \ncout &lt;&lt; ans &lt;&lt; endl;\nreturn;\n}\n\nint main() { cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) solve();\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-07-08/#cf_1", "title": "\u4e00\u4e2a\u4e00\u76f4\u505a CF \u90fd\u6709\u7684\u6bdb\u75c5", "text": "<p>\u5728 UOJ \u7fa4\u91cc\u95ee\u4e86\u4e2a\u95ee\u9898\uff1a</p> \u804a\u5929\u8bb0\u5f55 <p>[\u4fdd\u7559] black_trees | \u6446\u4e86 7/19/2022 9:59:43 PM vuqa\uff0c\u840c\u65b0\u6253 CF \u7684\u65f6\u5019\u7ecf\u5e38\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u8fd9\u79cd\u60c5\u51b5\u8be5\u600e\u4e48\u907f\u514d\u554a\uff1a \u80fd\u60f3\u5230\u5bf9\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u7ecf\u5e38\u81ea\u5df1\u7ed9\u4e00\u4e2a\u5b9e\u9645\u4e0a\u6ca1\u6cd5hack\u7684\u53cd\u4f8b\uff0c \u4f46\u662f\u53c8\u89c9\u5f97\u8fd9\u4e2a\u53cd\u4f8b\u662f\u5bf9\u7684\uff0c\u7136\u540e\u5426\u5b9a\u6389\u53ef\u4ee5\u8fc7\u6389\u7684\u505a\u6cd5\uff0c</p> <p>\u4fdd\u7559 \u039a\u03bf\u03c5\u03ac\u03ba\u03b5\u03c1_\u03a1\u03c5\u03b6\u03b9\u03bf\u64a4\u56de\u4e86\u4e00\u6761\u6d88\u606f</p> <p>\u83f2\u5965\u5fb7\u00b7\u897f\u65af\u6258\u59c6\u00b7\u6cf0\u65af\u7279 7/19/2022 10:01:09 PM</p> <p>@[\u4fdd\u7559] black_trees | \u6446\u4e86  \u771f\u7684\u53bb\u53c9\u4e00\u4e0b\u53c8\u4e0d\u4f1a\u6b7b\u3002</p> <p>\u88ab\u5220\u9664\u8d1f\u4e09\u6b21\u7684 skip2004 7/19/2022 10:01:12 PM \u6ca1\u5565\u95ee\u9898\uff0c\u4e60\u60ef\u4e86\u5c31\u597d</p> <p>\u4fdd\u7559 \u039a\u03bf\u03c5\u03ac\u03ba\u03b5\u03c1_\u03a1\u03c5\u03b6\u03b9\u03bf 7/19/2022 10:01:17 PM @[\u4fdd\u7559] black_trees | \u6446\u4e86 \u5927\u80c6\u731c\u60f3\uff0c\u4ea4\u4e86\u518d\u8bc1</p> <p>\u83f2\u5965\u5fb7\u00b7\u897f\u65af\u6258\u59c6\u00b7\u6cf0\u65af\u7279 7/19/2022 10:01:38 PM \u591a\u60f3\u53cd\u4f8b\u603b\u662f\u597d\u4e8b\uff09\u6211\u6709\u7684\u65f6\u5019\u90fd\u60f3\u4e0d\u5230</p> <p>[\u4fdd\u7559] black_trees | \u6446\u4e86 7/19/2022 10:01:54 PM \u4f46\u6211\u7ecf\u5e38\u88ab\u9519\u8bef\u7684\u53cd\u4f8b\u8bf1\u5bfc</p> <p>[\u4fdd\u7559] black_trees | \u6446\u4e86 7/19/2022 10:02:12 PM \u7ecf\u5e38\u628a\u4e00\u773c\u9898\u641e\u6210\u4e0d\u53ef\u505a\u9898</p> <p>[\u4fdd\u7559] black_trees | \u6446\u4e86 7/19/2022 10:02:41 PM \u800c\u4e14\u81ea\u5df1\u610f\u8bc6\u4e0d\u5230\uff0c\u6216\u8005\u8bf4\u8bc1\u660e\u4e0d\u4e86\u8fd9\u4e2a\u53cd\u4f8b\u662f\u5047\u7684</p> <p>\u7ba1\u7406\u5458\u9759\u9759\u5df2\u88ab\u4f60\u79fb\u51fa\u7fa4\u804a\u64a4\u56de\u4e86\u4e00\u6761\u6d88\u606f\uff0c\u4f60\u731c\u731c\u64a4\u56de\u4e86\u4ec0\u4e48\u3002</p> <p>\u7ba1\u7406\u5458\u9759\u9759\u5df2\u88ab\u4f60\u79fb\u51fa\u7fa4\u804a 7/19/2022 10:03:41 PM \u90a3\u8fd9\u548b\u80fd\u7b97\u53cd\u4f8b\u554a</p> <p>[\u4fdd\u7559] black_trees | \u6446\u4e86 7/19/2022 10:03:56 PM \u5c31\u662f\u6211\u4ee5\u4e3a\u662f\u53cd\u4f8b\u7684\u73a9\u610f\u513f\uff08\uff08</p> <p>[\u4fdd\u7559] black_trees | \u6446\u4e86 7/19/2022 10:04:05 PM \u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f</p> <p>\u88ab\u5220\u9664\u8d1f\u4e09\u6b21\u7684 skip2004 7/19/2022 10:04:08 PM \u90a3\u5c31\u4ee5\u540e\u591a\u6ce8\u610f\u4e00\u4e0b\u53cd\u4f8b\u6709\u6ca1\u6709\u95ee\u9898</p> <p>\u7ba1\u7406\u5458\u9759\u9759\u5df2\u88ab\u4f60\u79fb\u51fa\u7fa4\u804a 7/19/2022 10:04:18 PM \u90a3\u4f60\u90fd\u62ff\u4e0d\u51fa\u6765\u5177\u4f53\u7684\u4f8b\u5b50 \u53c8\u548b\u80fd\u53eb\u53cd\u4f8b</p> <p>\u88ab\u5220\u9664\u8d1f\u4e09\u6b21\u7684 skip2004 7/19/2022 10:04:47 PM \u8fd9\u4e9b\u90fd\u5f88\u6b63\u5e38\uff0c\u4f60\u60f3\u53cd\u4f8b\u662f\u597d\u7684\u4e8b\u60c5\uff0c\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u907f\u514d\u60f3\u5230\u5047\u7684\u53cd\u4f8b</p> <p>\u88ab\u5220\u9664\u8d1f\u4e09\u6b21\u7684 skip2004 7/19/2022 10:04:52 PM \u591a\u60f3\u60f3\u5c31\u597d\u4e86</p> <p>\u7ba1\u7406\u5458\u9759\u9759\u5df2\u88ab\u4f60\u79fb\u51fa\u7fa4\u804a 7/19/2022 10:04:59 PM \u6211\u4e00\u822c\u60f3\u5426\u5b9a\u6211\u7684\u67d0\u4e2a\u60f3\u6cd5\u90fd\u662f\u9020\u4e2a\u80fd\u8ba9\u6211\u505a\u6cd5\u5047\u6389\u7684\u6570\u636e</p> <p>[\u4fdd\u7559] black_trees | \u6446\u4e86 7/19/2022 10:04:59 PM thx</p> <p>\u7136\u540e\u518d\u7ed3\u5408\u4e00\u4e0b\u81ea\u5df1\u7684\u60c5\u51b5\uff0c\u5176\u5b9e\u5c31\u662f\u5f88\u591a\u65f6\u5019\u6015\u9ebb\u70e6\uff0c\u61d2\uff0c\u6ca1\u6709\u53bb\u6df1\u7a76\u6bcf\u4e2a\u70b9\u80cc\u540e\u7684\u4e1c\u897f\uff0c\u6ca1\u6709\u53bb\u8003\u8651\u8fd9\u73a9\u610f\u513f\u5230\u5e95\u60f3\u544a\u8bc9\u6211\u5565\u3002</p> <p>\u8bf4\u767d\u4e86\u5c31\u662f\u60f3\u7684\u4e0d\u591f\uff0c\u5199\u7684\u4e0d\u591f\uff0c\u63a8\u7684\u4e0d\u591f\u3002</p> <p>\u591a\u53bb\u601d\u8003\u4e00\u4e0b special case \u548c corner case \u7684\u6b63\u786e\u6027\uff0c\u7279\u522b\u8981\u7ed3\u5408\u5168\u5c40\u53bb\u601d\u8003\uff0c\u8003\u8651\u5b8c\u6574\uff0c\u522b\u6293\u5230\u4e00\u4e2a\u5c40\u90e8\u5c31\u8dd1\u4e86\uff08\u9664\u975e\u80fd\u8bc1\u660e\u5c40\u90e8\u6700\u4f18\u5c31\u662f\u5168\u5c40\u6700\u4f18\uff09\u3002</p> <p>\u5982\u679c spc \u80fd\u5f52\u5316\u5230\u5df2\u6709\u7684\u901a\u89e3\u4e0a\u90a3\u662f\u66f4\u597d\u7684\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2022-07-08/#cf1714f-build-a-tree-and-that-is-it", "title": "CF1714F Build a Tree and That Is It", "text": "<p>\u7ed9\u4f60 \\(n\\) \u4e2a\u8282\u70b9\uff0c\u8981\u6c42\u4f60\u6784\u9020\u4e00\u9897\u65e0\u6839\u65e0\u6743\u6811\uff0c\u6ee1\u8db3\uff1a</p> <p>\u7ed9\u5b9a \\(d_{12},d_{23},d_{31}\\)\uff0c\u5206\u522b\u8868\u793a \\(1,2;2,3;3,1\\) \u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</p> <p>\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684\u6811\uff0c\u6784\u9020\u89e3\uff0c\u5426\u5219\u8f93\u51fa <code>NO</code>\u3002</p> <p>\u8fd9\u9053\u9898\u6ca1\u6253\u4e66\u9762\u8349\u7a3f\uff0c\u81ea\u5df1\u5728 notepad \u4e0a\u6253\u5b57\u6a21\u62df\u601d\u8def\uff0c\u7136\u540e\u753b\u4e86\u4e2a\u56fe\u5c31\u4f1a\u4e86\u3002</p> <p>\u4e0d\u8fc7\u8c03\u8bd5\u5f88\u6076\u5fc3\uff08\uff0c\u6210\u529f\u5730\u4e00\u4e0b\u5f00\u5230\u4e86\u5f53\u573a div3 \u7684\u6700\u96be\u9898 233\u3002</p> <p>\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe \\(d_{12},d_{23},d_{31}\\) \u5347\u5e8f\u6392\u5e8f\u8fc7\u540e\u4e3a \\(a,b,c\\)\uff0c\\(c_s,c_t\\) \u8868\u793a \\(c\\) \u5bf9\u5e94\u7684\u90a3\u4e24\u4e2a\u70b9\uff0c\\(a,b\\) \u540c\u7406\u3002</p> <p>\u7136\u540e\u6700\u7b80\u5355\u7684\u60c5\u51b5\u5c31\u662f \\(a + b = c\\)\uff0c\u6211\u4eec\u76f4\u63a5\u62c9\u4e00\u6761 \\(c\\) \u5bf9\u5e94\u7684\u94fe \\((c_s \\to c_t)\\) \u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u7136\u540e\u8003\u8651\u4e0d\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u5982\u679c \\(a + b \\not= c\\)\uff0c\u548b\u641e\uff1f</p> <p>\u4ece\u6700\u7b80\u5355\u7684\u60c5\u51b5\u6269\u5c55\uff0c\u6211\u4eec\u5728 \\(c\\) \u5bf9\u5e94\u7684\u94fe\u4e0a\u518d\u627e\u4e00\u4e2a\u70b9\uff0c\u6bd4\u5982\u8fd9\u4e2a\u70b9\u662f \\(P\\)\uff0c\u76f4\u63a5\u62c9\u4e00\u6761\u94fe\u51fa\u53bb</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u8981\u6784\u9020\u51fa \\(a_s \\to P \\to a_t\\) \u548c \\(b_s \\to P \\to b_t\\) \u8fd9\u4e24\u6761\u94fe\u5c31\u53ef\u4ee5\u4e86\uff08\u5047\u8bbe \\(a_t = b_t\\)\uff09\u3002</p> <p>\u968f\u4fbf\u624b\u5b8c\u4e00\u4e2a\u6570\u636e\u770b\u770b\u5177\u4f53\u548b\u6784\u9020</p> <p>\u6bd4\u5982 \\(a = d12 = 4, b = d23 = 5, c = d31 = 6\\) \u7b2c\u4e00\u6761\u94fe\u62c9\u51fa\u6765\u662f\u8fd9\u6837\u7684\uff0c\u4e2d\u95f4\u7684 <code>O</code> \u5c31\u662f\u9664\u4e86 \\(1,2,3\\) \u4ee5\u5916\u968f\u4fbf\u54ea\u4e00\u4e2a\u70b9\uff1a<code>1 - O - O - O - O - O - 3</code></p> <p>???? \u53d1\u73b0\u5c45\u7136\u62c9\u4e0d\u4e86\u554a\uff01\uff1f\u7528\u4ee3\u6570\u65b9\u5f0f\u4e25\u8c28\u5206\u6790\u4e0b\u5148\uff1a</p> <p>\u8bbe \\(a_s \\to P\\) \u957f\u5ea6\u662f \\(x\\), \\(b_s \\to P\\) \u5c31\u662f \\(6 - x\\).</p> <p>\u7136\u540e\u6211\u4eec\u62c9\u51fa\u53bb\u7684\u957f\u5ea6\u4e3a \\(y\\)\uff0c\u662f \\(a,b\\) \u5171\u540c\u4eab\u6709\u7684\uff0c</p> <p>\u6240\u4ee5 \\(4 = x + y, 5 = 6 - x + y\\)</p> <p>\u4e24\u4e2a\u5f0f\u5b50\u76f8\u52a0 \uff1a \\(2y = 3\\)\uff0c\u663e\u7136\u62c9\u4e0d\u4e86\uff0c\u8fd9\u5c31\u662f\u65e0\u89e3\u7684\u60c5\u51b5\u3002</p> <p>\u4e25\u8c28\u7684\u65b9\u7a0b\u5c31\u662f \\(a + b - c = 2y\\)\uff0c\u6240\u4ee5\u6211\u4eec\u89e3\u4e2a\u65b9\u7a0b\u770b\u770b\u89e3\u662f\u4e0d\u662f\u975e\u8d1f\u6574\u6570\u5c31\u80fd\u5224\u65ad\u662f\u5426\u6709\u89e3\u4e86\u3002</p> <p>\u968f\u4fbf\u624b\u5b8c\u51e0\u4e2a\u6570\u636e\uff0c\u662f\u5bf9\u7684\uff0c\u518d\u770b\u770b\u7279\u6b8a\u60c5\u51b5\u6709\u6ca1\u6709\u5fd8\u8bb0\u7684</p> <p>\u6bd4\u5982 n \u7279\u522b\u5927\u7684\u65f6\u5019\uff1f\uff1f\uff1f\u597d\u50cf\u6ca1\u7528\u554a\uff0c\u90fd\u4e00\u6837\u7684\u3002</p> <p>\u80fd\u600e\u4e48\u7279\u6b8a\u5462\uff1f \u54e6\u5c31\u6bd4\u5982\u4e0a\u9762\u90a3\u4e2a\u6784\u9020\u4e0d\u4e86\u7684\u3002</p> <p>\\(c = 6, a = 4, b = 5\\)</p> <p>\u80fd\u4e0d\u80fd\u76f4\u63a5\u4ece \\(1\\) \u62c9\u4e24\u6761\u94fe\uff1f\u672c\u8d28\u4e00\u6837\u3002</p> <p>\u5982\u679c\u5728\u4e0b\u9762\u8fde \\(2,3\\) \u5c31\u6210\u73af\u4e86\uff0c\u6ca1\u6cd5\u505a\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6784\u9020\u5fc5\u7136\u5f88\u5bf9\u3002</p> <p>\u6700\u540e\u53d1\u73b0\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e5f\u662f\u53ef\u4ee5\u5f52\u5316\u7684\uff0c\u4e8e\u662f\u778e\u6784\u9020\u5c31\u884c\u4e86\uff0c\u8fd9\u4e2a\u5b9e\u73b0\u7565\u6709\u9ebb\u70e6\uff08\uff08\uff08</p> <p>\u63d0\u51e0\u4e2a\u7ec6\u8282\uff1a\u4e0d\u8981\u5fd8\u8bb0\u628a\u7528\u5269\u4e0b\u7684\u70b9\u62c9\u4e0a\uff0c\u968f\u4fbf\u6302\u54ea\u91cc\u90fd\u884c\u3002</p> <p>\\(a + b &lt; c\\) \u7684\u60c5\u51b5\u4e5f\u662f\u4e0d\u884c\u7684\uff0c\u8282\u70b9\u4e0d\u591f\u7528\u4e5f\u8981\u8003\u8651\u3002</p> <p>\u975e\u5e38\u5de8\u5927\u6076\u5fc3\uff0c\u5b9e\u73b0\u662f\u7528\u7684 bmy \u7684\u601d\u8def\uff0c\u8fd9\u4e2a\u6e05\u6670\u4e00\u70b9\uff0c\u6211\u5199\u7684\u662f\u5927\u5206\u8ba8\uff0c\u7279\u522b\u81ed\uff08</p> \u5b9e\u73b0 <pre><code>void Solve() {\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\nif(b &gt; a + c || c &gt; b + a || a &gt; c + b) {\ncout &lt;&lt; \"NO\" &lt;&lt; endl; return;\n}\nif(b % 2 != (a + c) % 2 || (a + c + b) / 2 &gt; n - 1) {\ncout &lt;&lt; \"NO\" &lt;&lt; endl; return;\n}\n\nfor(int i = 1; i &lt;= n; ++i) pa[i] = i;\ncout &lt;&lt; \"YES\" &lt;&lt; endl;\n\nint cur = 1;\nfor(int i = 4; i &lt; 4 + (a - b + c) / 2; ++i) {\nif(a * 2 == a - b + c &amp;&amp; i - 3 == (a - b + c) / 2) {\nif(merge(2, cur)) cout &lt;&lt; 2 &lt;&lt; \" \" &lt;&lt; cur &lt;&lt; endl; break;\n}\nif(c * 2 == a - b + c &amp;&amp; i - 3 == (a - b + c) / 2) {\nif(merge(3, cur)) cout &lt;&lt; 3 &lt;&lt; \" \" &lt;&lt; cur &lt;&lt; endl;; break;\n}\nif(merge(i, cur)) cout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; cur &lt;&lt; endl;\ncur = i;\n}\n\nint pos = cur, tp;\nif(a * 2 == a - b + c) pos = 2;\nif(c * 2 == a - b + c) pos = 3;\ntp = pos, cur = max(cur, 3);\n\nfor(int i = cur + 1; i &lt; cur + a - (a - b + c) / 2; ++i) {\nif(merge(tp, i)) cout &lt;&lt; tp &lt;&lt; \" \" &lt;&lt; i &lt;&lt; endl; tp = i;\n}\nif(pos != 2) if(merge(tp, 2)) cout &lt;&lt; tp &lt;&lt; \" \" &lt;&lt; 2 &lt;&lt; endl;\ntp = pos;\n\nfor(int i = 4; i &lt;= n; ++i) {\nif(root(1) != root(i)) {\ncur = i; break;\n}\n}\n\nfor(int i = cur; i &lt; cur + c - (a - b + c) / 2 - 1; ++i) {\nif(merge(tp, i)) cout &lt;&lt; tp &lt;&lt; \" \" &lt;&lt; i &lt;&lt; endl;\ntp = i;\n}\nif(pos != 3 &amp;&amp; merge(tp, 3)) cout &lt;&lt; tp &lt;&lt; \" \" &lt;&lt; 3 &lt;&lt; endl;\nfor(int i = 1; i &lt;= n; ++i) if(merge(1, i)) cout &lt;&lt; 1 &lt;&lt; \" \" &lt;&lt; i &lt;&lt; endl;\n}\n</code></pre> <p>\u611f\u89c9\u8fd9\u9898\u5c31\u5f88\u597d\u8df5\u884c\u4e86\u4e0a\u9762\u7684\u90a3\u4e2a\u8bf4\u6cd5\u554a\u2026\u2026</p> <p>\u54e6\u5176\u5b9e\u8fd9\u662f 8 \u6708\u4efd\u7684\u6bd4\u8d5b\uff08\uff08</p>"}, {"location": "rec/atcf-for-2022-07-08/#cf1716d-chip-move", "title": "CF1716D Chip Move", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u65e0\u9650\u7684\u6570\u8f74\uff0c\u4f60\u5f00\u59cb\u5728 \\(0\\)\u3002</p> <p>\u73b0\u5728\u8981\u6c42\u4f60\u8df3\u5230 \\(n\\)\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u6b65\u8df3\u7684\u957f\u5ea6\u5fc5\u987b\u662f \\(K + i - 1\\) \u7684\u6574\u6570\u500d\uff0c\\(K\\) \u4e3a\u4e00\u4e2a\u7ed9\u5b9a\u5e38\u6570\u3002</p> <p>\\(i\\to j\\) \u7684\u957f\u5ea6\u5b9a\u4e49\u4e3a \\(j - i\\)\u3002</p> <p>\u6bd4\u5982 \\(k = 2\\)\uff0c\u4f60\u7b2c\u4e00\u6b65\u5c31\u53ea\u80fd\u8df3 \\(2, 4, 6, 8, \\dots\\) \u6b65\uff0c\u7b2c\u4e8c\u6b65\u53ea\u80fd\u8df3 \\(3, 6, 9, 12, \\dots\\) \u6b65\u3002</p> <p>\u6c42\u603b\u5171\u7684\u65b9\u6848\u6570\u6a21 \\(998244353\\)\uff0c\\(n,k \\le 2e5\\)\u3002</p> <p>\u975e\u5e38\u50bb\u903c\u7684 DP \u554a\uff01\u5c45\u7136\u653e\u5728 D\uff01</p> <p>\u8003\u8651\u6734\u7d20\u7684 dp\uff0c\u8bbe \\(dp(i,j)\\) \u8868\u793a\u8d70\u5230 \\(i\\)\uff0c\u4e00\u5171\u7528\u4e86 \\(j\\) \u6b65\u7684\u65b9\u6848\u6570\u3002</p> <p>\u7136\u540e\u8f6c\u79fb\u80af\u5b9a\u662f\u4ece \\(j-1\\) \u6b65\u8f6c\u79fb\uff0c\u679a\u4e3e\u4e0a\u4e00\u6b65\u5728\u54ea\u91cc\u5373\u53ef\u3002</p> <p>\u6211\u4e00\u5f00\u59cb\u4ee5\u4e3a\u8fd9\u4e2a\u505a\u6cd5\u662f \\(O(n^2)\\) \u7684\uff0c\u8fd8\u8003\u8651\u8fc7\u600e\u4e48\u53bb\u4f18\u5316\u6210 \\(O(n \\log n)\\)\uff0c\u56e0\u4e3a\u4e4b\u524d\u7684 2D \u5f88\u591a\u90fd\u662f \\(O(n^2) \\to O(n \\log)\\) \u7684\u4f18\u5316\u3002</p> <p>\u6709\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u8df3\u7684\u90fd\u662f\u67d0\u4e2a\u6570\u7684\u500d\u6570\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6570\u91cf\u7ea7\u80af\u5b9a\u4e0d\u662f \\(O(n)\\)\uff0c\u8003\u8651\u4e00\u4e0b\u5b83\u5e94\u8be5\u662f\u591a\u5c11\u3002</p> <p>\u6700\u574f\u7684\u60c5\u51b5\uff0c\u5c31\u662f \\(K = 1\\)\uff0c\u7136\u540e\u7b2c \\(i\\) \u6b65\u6c38\u8fdc\u53ea\u8df3 \\(K + i - 1 = i\\) \u8fd9\u4e48\u957f\u3002</p> <p>\u90a3\u4e48 \\(\\sum\\limit_{x = 1}^{k} x \\le n\\)\uff0c\u6240\u4ee5 \\(k \\le \\sqrt{n}\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u679a\u4e3e\u7684\u4f4d\u7f6e\u53ea\u6709 \\(O(\\sqrt{n})\\) \u4e2a\u3002</p> <p>\u6240\u4ee5\u8fd9\u4e2a DP \u5c31\u968f\u4fbf\u8fc7\uff1a</p> \u6734\u7d20\u4ee3\u7801 <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int mod = 998244353;\n\nconst int si = 2e5 + 1;\nconst int sqrt_si = 450;\n\nint n, K;\nint dp[si][sqrt_si];\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nauto limit = [&amp;](int j) -&gt; int {\ni64 res = ((K + j) * (K + j - 1) - K * (K - 1))/ 2ll;\nif(res &gt; 1ll * 2e5 + 10) return 0x3f3f3f3f;\nreturn (int)res;\n};\n\ncin &gt;&gt; n &gt;&gt; K;\ndp[0][0] = 1;\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; limit(j) &lt;= i; ++j) {\nfor(int k = 1; k * (K + j - 1) &lt;= i; ++k) {\ndp[i][j] = (dp[i][j] + dp[i - k * (K + j - 1)][j - 1]) % mod;\n}\n}\n}\n\nfor(int i = 1; i &lt;= n; ++i) {\nint sum = 0;\nfor(int j = 1; limit(j) &lt;= i; ++j) {\nsum = (sum + dp[i][j] % mod) % mod;\n}\ncout &lt;&lt; sum &lt;&lt; ' ';\n}\ncout &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <p>\u4f46\u662f\u8fd9\u4e2a\u4e1c\u897f\u4f1a MLE\uff0c\u60f3\u8d77\u6765\u8f6c\u79fb\u80af\u5b9a\u662f\u4ece \\(j-1\\) \u6b65\u8f6c\u79fb\uff0c\u6240\u4ee5\u76f4\u63a5\u6eda\u52a8\u6570\u7ec4\uff1a</p> \u6eda\u52a8\u6570\u7ec4 <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int mod = 998244353;\n\nconst int si = 2e5 + 1;\nconst int sqrt_si = 450;\n\nint n, K;\nint dp[si][2], ans[si];\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nauto limit = [&amp;](int j) -&gt; int {\ni64 res = j * j;\nif(res &gt; 2ll * 2e5 + 10) return 0x3f3f3f3f;\nreturn (int)res;\n};\n\ncin &gt;&gt; n &gt;&gt; K;\ndp[K][0] = 1; int j = 1;\nfor(int k = 0; limit(k) &lt;= (n &lt;&lt; 1); ++k) {\nj = j xor 1;\nfor(int i = 0; i &lt;= n; ++i) dp[i][j xor 1] = 0;\nfor(int i = 1; i &lt;= n; ++i) if(i - k &gt; K)\ndp[i][j] = (dp[i][j] + dp[i - k - K][j]) % mod,\ndp[i][j xor 1] = (dp[i][j xor 1] + dp[i - k - K - 1][j]) % mod;\nint sum = 0;\nfor(int i = 1; i &lt;= n; ++i)\nans[i] = (ans[i] + dp[i][j] % mod) % mod;\n}\nfor(int i = 1; i &lt;= n; ++i) cout &lt;&lt; ans[i] &lt;&lt; \" \";\ncout &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-07-08/#cf1713d-tournament-countdown", "title": "CF1713D Tournament Countdown", "text": "<p>\u4ea4\u4e92\u9898</p> <p>\u7ed9\u4f60\u4e00\u4e2a \\(2^n\\) \u4eba\u7684\u6dd8\u6c70\u8d5b\uff0c\u521d\u59cb \\(i, i + 1\\) \u4e00\u7ec4\uff08\\(i \\equiv 0 (\\mod 1)\\)\uff09\u3002</p> <p>\u4f60\u53ef\u4ee5\u95ee\u4ea4\u4e92\u5e93\u4e0d\u8d85\u8fc7 \\(\\lceil \\dfrac{2^{n + 1}}{3}\\rceil\\) \u4e2a\u8be2\u95ee\u3002</p> <p>\u6bcf\u4e2a\u8be2\u95ee\u53ef\u4ee5\u8be2\u95ee\u4efb\u610f\u4e24\u4e2a\u4eba \\((u, v)\\) \u7684\u603b\u80dc\u5229\u6570\u5927\u5c0f\uff0c\u5982\u679c\u76f8\u7b49\u8fd4\u56de \\(0\\)\uff0c\\(u\\) \u5927\u8fd4\u56de \\(1\\)\uff0c\\(v\\) \u5927\u8fd4\u56de \\(2\\)\u3002</p> <p>\u6c42\u6700\u540e\u80dc\u51fa\u7684\u90a3\u4e00\u4e2a\u4eba\u3002</p> <p>\u5443\uff0c\u53d1\u73b0\u8fd9\u4e2a \\(\\dfrac{1}{3}\\) \u5f88\u6709\u610f\u601d\u554a\uff01</p> <p>\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u80fd\u8981\u901a\u8fc7\u4e00\u6b21\u67e5\u8be2\u95ee\u6e05\u695a\u66f4\u591a\u7684\u5173\u7cfb\u3002</p> <p>\u6240\u4ee5\u53ea\u95ee\u4e00\u5bf9\u5185\u7684\u8bdd\u597d\u50cf\u4e0d\u592a\u591f\u3002 \u4e8e\u662f\u6211\u4eec\u8df3\u7740\u95ee\u3002</p> <p>\\(1\\) \u95ee \\(3\\)\u3002</p> <ul> <li> <p>\u5982\u679c \\(1&gt;3\\)\uff0c\u8bf4\u660e \\(1\\) \u5fc5\u7136\u6253\u7206\u4e86 \\(2\\)\uff0c\u4e0d\u7136 \\(1\\) \u5fc5\u7136\u662f \\(0\\)\uff0c\u7136\u540e\u4f60\u4e0d\u6e05\u695a \\(3,4\\) \u7684\u5173\u7cfb\uff0c\u56e0\u4e3a\u6709 \\(3\\) \u88ab\u6253\u7206\uff0c\\(4\\) \u628a \\(1\\) \u6253\u7206\uff0c\u6216\u8005 \\(1\\) \u628a\u6253\u7206 \\(3\\) \u7684 \\(4\\) \u4e5f\u6253\u7206\u3002\uff0c\u90a3\u4e48 \\(1\\) \u518d\u95ee\u4e00\u6b21 \\(4\\)\u3002</p> </li> <li> <p>\u5982\u679c \\(1=3\\)\uff0c\u8bf4\u660e\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u7b2c\u4e00\u79cd\u662f \\(1,3\\) \u90fd\u4e71\u6740\u4e86\uff0c\u7b2c\u4e8c\u79cd\u662f\u90fd\u8f93\u9ebb\u4e86\uff0c\u8bf4\u660e\u8fd8\u9700\u8981 \\(2\\) \u518d\u95ee\u4e00\u6b21 \\(4\\)\u3002</p> </li> <li> <p>\u5982\u679c \\(1&lt;3\\)\uff0c\u90a3\u4e48 \\(2\\) \u518d\u95ee\u4e00\u6b21 \\(3\\)\uff0c\u8fd9\u4e2a\u540c\u7406\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002</p> </li> </ul> <p>\u6700\u540e\u5c31\u80fd \\(4\\) \u8fdb \\(1\\)\u3002</p> <p>\u7136\u540e\u5f52\u5e76\u4e00\u4e0b\uff0c\u5728\u5269\u4e0b\u7684\u91cc\u9762\u518d\u7ee7\u7eed\u505a\u3002</p> <p>\u7136\u540e\u6ca1\u4e86\uff0c\u6b21\u6570\u663e\u7136\u5f88\u4f18\u79c0\u3002</p> <p>TJX \u7684 code\uff0c\u61d2\u5f97\u5199\u4e86\uff1a</p> \u5b9e\u73b0 <pre><code>#include&lt;bitsdc++.h&gt;\nusing namespace std;\nint n;\nint ask(int a,int b) {\nint t;\ncout &lt;&lt; \"? \" &lt;&lt; a &lt;&lt; ' ' &lt;&lt; b &lt;&lt; endl;\ncin &gt;&gt; t;\nreturn t;\n}\nvoid solve() {\nvector&lt;int&gt; a;\ncin &gt;&gt; n;\nfor(int i=1;i&lt;=(1&lt;&lt;n);++i)\na.push_back(i);\nfor(int i=1;i&lt;=n;++i) {\nvector&lt;int&gt; b;\nif(a.size()==1) {\ncout &lt;&lt; \"! \" &lt;&lt; a[0] &lt;&lt; endl;\nreturn;\n}\nif(a.size()==2) {\nint t=ask(a[0],a[1]);\nif(t==1) {\ncout &lt;&lt; \"! \" &lt;&lt; a[0] &lt;&lt; endl;\nreturn;\n} else {\ncout &lt;&lt; \"! \" &lt;&lt; a[1] &lt;&lt; endl;\nreturn;\n}\n}\nfor(int i=0;i&lt;a.size();++i)\nif(i%4==0) {\nint t=ask(a[i],a[i+2]);\nif(t==1) {\nint u=ask(a[i],a[i+3]);\nif(u==1) b.push_back(a[i]);\nelse b.push_back(a[i+3]);\n} else\nif(t==0) {\nint u=ask(a[i+1],a[i+3]);\nif(u==1) b.push_back(a[i+1]);\nelse b.push_back(a[i+3]);\n} else {\nint u=ask(a[i+1],a[i+2]);\nif(u==1) b.push_back(a[i+1]);\nelse b.push_back(a[i+2]);\n}\n}\na=b;\n}\n}\nint main() {\nint T;\ncin &gt;&gt; T;\nwhile(T--) solve();\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-07-08/#arc145a-ab-palindrome", "title": "ARC145A AB Palindrome", "text": "<p>\u597d\u4e45\u6ca1\u6253\u8fc7 AT \u4e86\uff0c\u4eca\u5929 VP \u4e00\u628a\u723d\u723d\uff088.11\uff09</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5b57\u7b26\u4e32 \\(S\\)\u3002 \\(\\Sigma = \\{\\texttt{A},\\texttt{B}\\}\\)\u3002 \u5982\u679c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u628a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(2\\) \u7684\u5b57\u4e32\u53d8\u6210 \\(\\texttt{AB}\\)\u3002 \u5224\u5b9a\u7ecf\u8fc7\u4e00\u4e9b\u64cd\u4f5c\u540e \\(S\\) \u662f\u5426\u53ef\u80fd\u56de\u6587\u3002 \\(N \\in [2, 2e5]\\)\u3002</p> <p>\u8bc8\u9a97\u9898 * 1</p> <p>\u53d1\u73b0 \\(s(0) = \\texttt{A}\\) \u4e14 \\(s(N - 1) = \\texttt{B}\\) \u65f6\u5fc5\u7136\u4e0d\u884c\u3002</p> <p>\u7136\u540e\u5176\u5b83\u60c5\u51b5\u6b63\u7740\u505a\u62c9\u901a\u4e00\u904d\u6216\u8005\u53cd\u8fc7\u6765\u5c31\u5fc5\u7136\u53ef\u4ee5\u3002</p> <p>\u7136\u540e\u957f\u5ea6\u4e3a \\(2\\) \u7279\u5224\u4e00\u4e0b\u5c31\u6ca1\u4e86\uff0c</p> <p>\u8fd8\u662f\u6709\u70b9\u610f\u601d\u3002</p> \u5b9e\u73b0 <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint n; cin &gt;&gt; n;\nstring s; cin &gt;&gt; s;\nif(n == 2) {\nif(s[0] == s[1]) cout &lt;&lt; \"Yes\" &lt;&lt; endl;\nelse cout &lt;&lt; \"No\" &lt;&lt; endl;\n}\nelse {\nif(s[0] == s[n - 1]) cout &lt;&lt; \"Yes\" &lt;&lt; endl;\nelse if(s[0] == 'A' &amp;&amp; s[n - 1] == 'B') cout &lt;&lt; \"No\" &lt;&lt; endl;\nelse cout &lt;&lt; \"Yes\" &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-07-08/#arc145c-split-and-maximize", "title": "ARC145C Split and Maximize", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a \\(1 \\to 2n\\) \u7684\u6392\u5217 \\(p\\)\uff0c\u628a \\(p\\) \u62c6\u6210\u4e24\u4e2a\u957f\u5ea6\u76f8\u7b49\u7684\u5b50\u5e8f\u5217 \\(A, B\\)\u3002</p> <p>\\(p\\) \u7684\u5206\u6570\u5b9a\u4e49\u4e3a\u6240\u6709\u53ef\u80fd\u7684 \\(\\sum\\limits_{i = 1}^n a_i b_i\\) \u7684\u6700\u5927\u503c\u3002</p> <p>\u6c42\u6709\u591a\u5c11\u4e2a \\(p\\) \u7684\u5206\u6570\u662f\u6700\u5927\u7684, \\(1\\le n \\le 2e5\\)\u3002</p> <p>\u6392\u5e8f\u4e0d\u7b49\u5f0f\uff0c\u53ef\u4ee5\u5f97\u5230\u6700\u5927\u5f97\u5206\u4e3a \\(Mx = \\sum_{i = 1}^n 2i(2i - 1)\\)\u3002</p> <p>\u8003\u8651\u600e\u4e48\u6837\u624d\u80fd\u51d1\u51fa \\(Mx\\)\uff0c\u5c31\u662f\u8ba9\u6240\u6709 \\(2i - 1\\) \u548c \\(2i\\) \u6309\u987a\u5e8f\u914d\u6210\u4e00\u5bf9\u5c31\u884c\u4e86\u3002</p> <p>\u770b\u4e00\u4e2a\u4e0d\u80fd\u7684\u4f8b\u5b50\uff1a \\(126345\\)\uff0c\u8fd9\u91cc \\(6\\) \u5e94\u8be5\u548c \\(5\\) \u914d\u5bf9\u624d\u884c\uff0c\u4f46\u662f\u4e2d\u95f4\u63d2\u4e86\u4e00\u4e2a \\(3, 4\\) \u8fdb\u53bb\uff0c\u5982\u679c \\([126],[345]\\)\uff0c\u867d\u7136 \\(6,5\\) \u914d\u5bf9\u4e86\uff0c\u4f46\u662f\u524d\u9762\u7684\u5c31\u4e0d\u80fd\u914d\u5bf9\u4e86\u3002</p> <p>\\(123546\\)\uff0c\u8fd9\u79cd\u4e5f\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u884c\uff0c\u56e0\u4e3a \\(3, 4\\) \u548c \\(5, 6\\) \u4ea4\u53c9\u4e86\uff08\u6709\u5305\u542b\u5173\u7cfb\uff09\u3002</p> <p>\u4e0d\u59a8\u628a \\(2i - 1\\) \u770b\u4f5c\u5de6\u62ec\u53f7\uff0c\\(2i\\) \u770b\u4f5c\u53f3\u62ec\u53f7\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u4e2a \\(2i\\)\uff0c\u548c\u4ed6\u914d\u5bf9\u7684 \\(2i-1\\) \u90fd\u5fc5\u987b\u662f\u79bb\u4ed6\u6700\u8fd1\u7684\u4e00\u4e2a\u5de6\u62ec\u53f7\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5fc5\u987b\u8981\u662f <code>()()()()...()</code> \u6216\u8005 <code>)()()(...)(</code>\uff0c\u6216\u8005 <code>)(()...</code> \u7684\u60c5\u51b5\u3002</p> <p>\u65b9\u4fbf\u8ba8\u8bba\uff0c\u628a\u4ed6\u4eec\u5168\u90e8\u5f52\u5316\u5230 <code>()()()()...()</code> \u7684\u60c5\u51b5\uff0c\u518d\u5728\u5185\u90e8\u6392\u5217\u4ea4\u6362\u3002</p> <p>\u663e\u7136\u8fd9\u4e2a\u662f RBS \u8ba1\u6570\uff0c\u4e00\u5171 \\(Cat(n)\\) \u79cd\u53ef\u80fd\uff0c\u6bcf\u79cd\u53ef\u80fd\u5185\u90e8\u53ef\u4ee5\u4ea4\u6362 Pair \u7684\u987a\u5e8f\uff0c\\(Cat(n)\\times n!\\)\uff0c\u7136\u540e\u6bcf\u4e2a Pair \u5185\u90e8\u53c8\u53ef\u4ee5\u6362\u987a\u5e8f\uff0c\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u662f \\(Cat(n)\\times n! \\times 2^n\\)\u3002</p> <p>\u5f88\u5999\u7684\u9898\u3002</p> \u5b9e\u73b0 <pre><code>// author : black_trees\n// \u8d3a\u7684\u7c89\u5154\u7684\uff08\n// \u56e0\u4e3a\u7ec4\u5408\u6570\u677f\u5b50\u627e\u4e0d\u5230\u4e86\uff08\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int mod = 998244353;\nconst int si = 2e5 + 10;\n\ninline int qpow(int b, int e) {\nint a = 1;\nfor(; e; e &gt;&gt;= 1, b = (int)(1ll * b * b % mod))\nif (e &amp; 1) a = (int)(1ll * a * b % mod);\nreturn a;\n}\ninline int inv(int b) { return qpow(b, mod - 2); }\n\nint fact[si * 2], invf[si * 2];\ninline void init(int n) {\nfact[0] = 1;\nfor(int i = 1; i &lt;= n; ++i) fact[i] = (int)(1ll * fact[i - 1] * i % mod);\ninvf[n] = inv(fact[n]);\nfor(int i = n; i &gt;= 1; --i) invf[i - 1] = (int)(1ll * invf[i] * i % mod);\n}\ninline int C(int n, int m) {\nif (m &lt; 0 || m &gt; n) return 0;\nreturn (int)(1ll * fact[n] * invf[m] % mod * invf[n - m] % mod);\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint n; cin &gt;&gt; n, init(2 * n);\nint ans = (C(2 * n, n) - C(2 * n, n - 1) + mod) % mod;\nans = (int)(1ll * ans * fact[n] % mod * qpow(2, n) % mod);\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-07-08/#cf1721d-maximum-and", "title": "CF1721D Maximum AND", "text": "<p>\u7ed9\u5b9a\u5e8f\u5217 \\(a,b\\)\uff0c\u53ef\u4ee5\u91cd\u6392 \\(b\\)\uff0c\u6c42 \\(\\operatorname{AND}\\limits_{i = 1}^n(a(i) \\oplus b\\prime(i))\\)\u3002</p> <p>\\(n \\le 1e5, a_i, b_i \\in [0, 2^30)\\)</p> <p>\u770b\u5230\u8fd9\u4e2a AND \u6700\u5927\u4e0d\u96be\u60f3\u5230\u5c3d\u91cf\u8ba9\u9ad8\u4f4d\u662f \\(1\\)\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u4ece\u9ad8\u5230\u4f4e\u8d2a\u5fc3\uff0c\u5e76\u4e14\u5982\u679c\u8fd9\u4e2a\u9ad8\u4f4d\u53ea\u80fd\u662f \\(0\\)\uff0c\u5bf9\u4e8e\u7b54\u6848\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002</p> <p>\u6b63\u786e\u6027\u4e5f\u6bd4\u8f83\u597d\u8bc1\u660e\uff0c\u6211\u5047\u8bbe\u6211\u8fd9\u4e2a\u9ad8\u4f4d\u53ef\u4ee5\u662f \\(1\\)\uff0c\u4f46\u662f\u4f1a\u5bfc\u81f4\u67d0\u4e2a\u4f4e\u4f4d\u53d8\u6210 \\(0\\)\uff0c\u6211\u663e\u7136\u662f\u4e0d\u7ba1\u4f4e\u4f4d\u76f4\u63a5\u8ba9\u9ad8\u4f4d\u4e3a \\(1\\)\uff0c\u5982\u679c\u8fd9\u4e2a\u9ad8\u4f4d\u600e\u4e48\u90fd\u6ca1\u529e\u6cd5\u662f \\(1\\)\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u4e0d\u7ba1\uff0c\u6446\u70c2\u3002</p> <p>\u505a\u6cd5\u5927\u6982\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\uff0c\u8981\u5224 \\(a\\) \u7684 0 \u7684\u4e2a\u6570\u662f\u5426\u548c \\(b\\) \u7684 1 \u7684\u4e2a\u6570\u4e00\u6837\u4e14 \\(a\\) \u7684 1 \u7684\u4e2a\u6570\u662f\u5426\u548c \\(b\\) \u7684 0 \u7684\u4e2a\u6570\u4e00\u6837\u3002</p> <p>\u7136\u540e\u6211\u4eec\u4ece\u9ad8\u4f4d\u5f00\u59cb\uff0c\u76f4\u63a5\u628a\u8fd9\u4e2a\u5206\u7c7b\uff0c\\(a0, b1\\) \u5206\u4e00\u8d77\uff0c \\(a1,b0\\) \u5206\u4e00\u8d77\u3002</p> <p>\u7136\u540e\u5728\u4f4e\u4f4d\u5224\u65ad\u662f\u5426\u53ef\u884c\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u4f4e\u4f4d\u5206\u4e00\u6b21\u7ec4\uff0c\u7136\u540e\u770b\u548c\u9ad8\u4f4d\u7684\u8981\u6c42\u662f\u5426\u4e00\u6837\uff0c\u4e0d\u884c\u5c31\u6446\u70c2\u3002</p> <p>\u548c ARC146B \u6bd4\u8f83\u7c7b\u4f3c\uff0c\u6240\u4ee5\u5c31\u4e0d\u5199 ARC146B \u4e86\u3002</p> \u5b9e\u73b0 <pre><code>// author : black_trees\n\n#include &lt;map&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 100;\nconst int inf = (1 &lt;&lt; 30);\n\nint a[si], b[si];\nstd::map&lt;int, int&gt; True, False;\n\n#define is_true(val, bit) (val &gt;&gt; (bit - 1) &amp; 1)\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nint n; cin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; b[i];\n\nint ans = 0;\nfor(int i = 30; i &gt;= 1; --i) {\nTrue.clear(), False.clear();\nint need = inf - (1 &lt;&lt; (i - 1));\nfor(int j = 1; j &lt;= n; ++j) {\nif(is_true(b[j], i)) True[b[j] &amp; need ^ need]++;\nelse False[b[j] &amp; need ^ need]++;\n}\nbool ff = true;\nfor(int j = 1; j &lt;= n; ++j) {\nif(is_true(a[j], i)) {\nif((False[a[j] &amp; need]--) &lt; 1)\nff = false;\n} else {\nif((True[a[j] &amp; need]--) &lt; 1) ff = false;\n}\n}\nif(ff) ans += (1 &lt;&lt; (i - 1));\nelse {\nfor(int j = 1; j &lt;= n; ++j) {\nif(is_true(b[j], i)) b[j] -= (1 &lt;&lt; (i - 1));\nif(!is_true(a[j], i)) a[j] += (1 &lt;&lt; (i - 1));\n}\n}\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-07-08/#cf1720d1-xor-subsequence-easy-version", "title": "CF1720D1 Xor-Subsequence (easy version)", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u4e3a \\(n\\) \u7684\u6574\u6570\u6570\u7ec4 \\(a\\)\uff0c\u4ece \\(0\\) \u5f00\u59cb\u7f16\u53f7\u3002</p> <p>\u4e00\u4e2a\u957f\u4e3a \\(m\\) \uff0c\u4ece \\(0\\) \u5f00\u59cb\u7f16\u53f7\u7684\u6574\u6570\u6570\u7ec4 \\(b\\) \u662f\u6570\u7ec4 \\(a\\) \u7684 subsequence\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(0\\leq b_0&lt;b_1&lt;\\dots&lt;b_{m-1}&lt;n\\)\u3002</p> <p>\u82e5 \\(b\\) \u662f \\(a\\) \u7684 beautiful subsequence\uff0c\u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\\(b\\) \u662f \\(a\\) \u7684 subsequence\uff1b</li> <li>\\(\\forall p\\in[0,m)\\cap\\textbf{N},a_{b_p}\\oplus b_{p+1}&lt;a_{b_{p+1}}\\oplus b_p\\)\u3002</li> </ul> <p>\u5176\u4e2d \\(\\oplus\\) \u8868\u793a\u4f4d\u8fd0\u7b97\u4e2d\u7684\u5f02\u6216\u8fd0\u7b97\u3002</p> <p>\u73b0\u5728\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u6700\u957f\u7684 beautiful subsequence \u6709\u591a\u957f\u3002</p> <p>\\(a_i \\le 200, n\\le 3e5\\)..</p> <p>\u7ffb\u8bd1\u6765\u81ea\u6d1b\u8c37</p> <p>\u8fd9\u9898\u91cc\u9762 b \u662f\u4e0b\u6807\uff0c\u795e\u5fc5\u51fa\u9898\u4eba\u5199\u90a3\u4e48\u590d\u6742\u5e72\u561b\u3002</p> <p>\u5c31\u662f\u5148\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684 DP\uff0c\u5b9a\u4e49 \\(dp(i)\\) \u8868\u793a \\([1,i]\\) \u7684\u6700\u957f\u597d\u5b50\u5e8f\u5217\u957f\u5ea6\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230 \\(O(n^2)\\) \u65b9\u7a0b\uff1a\\(dp(i) = \\max\\limits_{j = 0}^{i - 1} \\{dp(j) + 1\\} \\land a_{j}\\oplus i&lt;a_i\\oplus j\\)\u3002</p> <p>\u590d\u6742\u5ea6\u4e3b\u8981\u82b1\u5728\u679a\u4e3e \\(j\\) \u4e0a\u9762\uff0c\u8003\u8651\u7f29\u5c0f\u8f6c\u79fb\u72b6\u6001\u96c6\u5408\u3002</p> <p>\u53d1\u73b0 \\(a_i \\le 200\\)\uff0c\u5728\u4e8c\u8fdb\u5236\u4e0b\u8003\u8651\uff0c\\(200 &lt; 256\\)\uff0c\u6240\u4ee5 \\(a_i,a_j\\) \u53ea\u80fd\u5f71\u54cd\u6700\u4f4e\u7684 8 \u4f4d\u3002</p> <p>\u5982\u679c \\(\\exists j \\le i - 256\\)\uff0c\u53ef\u4ee5\u53d1\u73b0 \\(j\\) \u600e\u4e48\u90fd\u8f6c\u79fb\u4e0d\u8fc7\u6765\uff0c\u56e0\u4e3a\u5f02\u6216\u662f\u4e0d\u8fdb\u4f4d\u52a0\u6cd5\uff0c\u5728\u8fd9\u91cc\u5f71\u54cd\u4e0d\u4e86\u7b2c \\(9\\) \u4f4d\u3002</p> <p>\u5982\u679c \\(i - 256 \\ge j\\)\uff0c\u8bf4\u660e \\(j\\) \u76f4\u63a5\u5728\u7b2c\u4e5d\u4f4d\u6bd4 \\(i\\) \u5c11\u4e86\u4e00\u4e2a \\(1\\)\uff0c\u6b7b\u6d3b\u8865\u4e0d\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d1\u73b0\u5408\u6cd5\u7684\u8f6c\u79fb\u53ea\u80fd\u662f \\(j \\in (i - 256, i)\\)\u3002</p> <p>\u7136\u540e dp \u5c31\u53d8\u6210 \\(O(256n)\\) \u4e86\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u505a\u6cd5\u662f\u8fd9\u6837\u7684\uff1a</p> Another method <p>\u7ed3\u8bba\uff1a\\(\\forall x, y \\in \\mathbb{N}, x - y, y - x &lt; x \\oplus y &lt; x + y\\)\u3002</p> <p>\u539f\u56e0\u663e\u7136\uff0c\u53ea\u9700\u8981\u5728\u4e8c\u8fdb\u5236\u4e0b\u8003\u8651\u5373\u53ef\u3002</p> <p>\u89c2\u5bdf\u9898\u76ee\u4e0d\u96be\u6839\u636e LIS \u6a21\u578b\u8bbe\u8ba1\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <p>\u8bbe \\(dp(i)\\) \u8868\u793a\u8003\u8651\u5230\u7b2c \\(i\\) \u4e2a\u5143\u7d20\uff0c\u6700\u957f\u7684\u55b5-\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p> \\[dp(i) = \\max\\limits_{j = 1}^{i - 1} \\{dp(j) + 1\\} (\\text{if }a_j \\oplus i &lt; a_i \\oplus j)\\] <p>\u590d\u6742\u5ea6\u4e0a\u5929\uff0c\u4e0d\u80fd\u63a5\u53d7\u3002</p> <p>\u6ce8\u610f\u5230 \\(a_i\\) \u7684\u503c\u57df\u5c0f\u7684\u79bb\u8c31\uff0c\u8003\u8651\u4ece\u8fd9\u91cc\u4f18\u5316\u3002</p> <p>\u6839\u636e\u7ed3\u8bba\u4e0d\u96be\u60f3\u5230\uff1a\\(a_j \\oplus i &lt; a_i \\oplus j \\iff i - a_j &lt; j + a_i\\)</p> <p>\u53ef\u4ee5\u5f97\u5230 \\(i - j &lt; a_i + a_j \\le 400 \\iff i - 400 \\le j\\)\u3002</p> <p>\u6240\u4ee5 \\(j\\) \u53ea\u9700\u8981\u4ece \\(i - 400\\) \u5f00\u59cb\u679a\u4e3e\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(400n)\\)\u3002</p> <p>\u672c\u9898\u4f18\u5316\u7684\u601d\u8def\u662f\u8003\u8651\u6839\u636e\u6027\u8d28\u4f18\u5316\u8f6c\u79fb\u6761\u4ef6\uff0c\u65b9\u5f0f\u662f\u72ec\u7acb &amp; \u5408\u5e76\u53d8\u91cf\uff0c\u6bd4\u8f83\u65b0\u9896\u3002</p> \u5b9e\u73b0 <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 3e5 + 10;\n\ni64 a[si], dp[si];\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nint n; cin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\nfor(int i = 1; i &lt;= n; ++i) dp[i] = 1ll;\ni64 ans = -1ll;\nfor(int i = 2; i &lt;= n; ++i) {\nint from = max(i - 256, 1);\nfor(int j = from; j &lt;= i - 1; ++j)\nif((a[i] ^ (1ll * j - 1ll)) &gt; (a[j] ^ (1ll * i - 1ll)))\ndp[i] = max(dp[j] + 1ll, dp[i]);\nans = max(ans, dp[i]);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-09-10/", "title": "2022\u5e749,10\u6708AT&CF", "text": ""}, {"location": "rec/atcf-for-2022-09-10/#cf", "title": "\u4e5d\u3001\u5341\u6708 CF \u4e22\u4eba\u505a\u9898\u8bb0\u5f55", "text": "<p>ZJK \u7ed9\u7684\u5efa\u8bae\u662f\u591a\u60f3\uff0c\u4e5f\u8bb8\u4e4b\u540e\u4f1a\u4ece ARC104 \u5f00\u59cb\u5012\u7740\u505a\uff0c\u953b\u70bc\u601d\u7ef4\uff0c\u6216\u8005\u8bf4\u8ba9\u81ea\u5df1\u5e73\u590d\u5fc3\u6001\u591a\u53bb\u60f3\u3002</p> <p>\u800c\u4e14 OI \u548c CF \u4e0d\u4e00\u6837\uff0cOI \u4e0d\u662f\u901f\u5ea6\u7ade\u8d5b\uff0c\u6240\u4ee5 OI \u548c CF \u7684\u7b56\u7565\u5f80\u5f80\u662f\u4e0d\u4e00\u81f4\u7684\uff0cCF \u8fd9\u79cd\u7d27\u5f20\u7684\u6c1b\u56f4\u5bb9\u6613\u8ba9\u4eba\u4e0d\u6e05\u9192\uff0c\u800c\u4e14 CF \u6ca1\u6709\u90e8\u5206\u5206\u3002</p> <p>HFY \u8bf4\u53ef\u4ee5\u628a\u9898\u62ff\u51fa\u6765\uff0c\u5b9a 4h/3h \u76f4\u63a5\u5f53\u6a21\u62df\u8d5b\u505a\uff0c\u4e60\u60ef\u90a3\u79cd\u611f\u89c9\u4e5f\u9632\u6b62\u8d70\u795e\u3002</p>"}, {"location": "rec/atcf-for-2022-09-10/#edu1-vp", "title": "Edu1 - Vp", "text": ""}, {"location": "rec/atcf-for-2022-09-10/#cf598c-nearest-vectors", "title": "CF598C - Nearest vectors", "text": "<p>\u6781\u89d2\u6392\u5e8f\u6a21\u677f\uff0c\u6c99\u5375\u5361\u7cbe\u5ea6\u9898\u3002</p> <p>\u6682\u65f6\u5495\u6389\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2022-09-10/#edu2-vp", "title": "Edu2 - Vp", "text": ""}, {"location": "rec/atcf-for-2022-09-10/#cf600e-lomsat-gelral", "title": "CF600E Lomsat gelral", "text": "<p>\u795e\u79d8\u7ebf\u6bb5\u6811\u5408\u5e76 / dsu on tree \u9898\u3002</p> <p>\u6682\u65f6\u5495\u6389\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2022-09-10/#global-round-23", "title": "Global Round 23", "text": "<p>\u8bc4\u4ef7\u662f\u4e0b\u996d + \u5c0f\u4e11\u3002 </p> <p>\u60f3\u4e86\u5927\u534a\u5929 E1 \u4e0d\u4f1a\u3002</p>"}, {"location": "rec/atcf-for-2022-09-10/#cf1746d-path-on-the-tree", "title": "CF1746D Path on the Tree", "text": "<p>\u6709\u610f\u601d\u7684\u6811\u5f62 dp\u3002</p> <p>\u6682\u65f6\u5495\u6389\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2022-09-10/#abc274", "title": "ABC274", "text": ""}, {"location": "rec/atcf-for-2022-09-10/#d", "title": "D", "text": "<p>\u4f60\u5728\u5750\u6807\u7cfb\u7684\u539f\u70b9\uff0c\u4f60\u8981\u53bb \\((x,y)\\) \uff08\u6b63\u8d1f \\(1e4\\) \u7ea7\u522b\uff09\uff0c\u4f60\u6709 \\(n\\) \u6b21\u673a\u4f1a\u8d70\u683c\u5b50\u3002</p> <p>\u7b2c \\(i\\) \u6b21\u8d70\u683c\u5b50\u5fc5\u987b\u8d70 \\(a_i\\) \u6b65\uff0c\u4e14\u548c\u4e0a\u4e00\u6b21\u8d70\u7684\u8def\u5f84\u5448 90\u00b0\u89d2\uff0c\u521d\u59cb\u5fc5\u987b\u5411\u53f3\u8d70 \\(a_1\\) \u6b65\u3002</p> <p>\u95ee\u662f\u5426\u53ef\u80fd\u8d70\u5230 \\((x,y)\\)\u3002</p> <p>\\(2\\le n \\le 10^3, 1\\le a_i \\le 10\\)</p> <p>\u9996\u5148\u6309\u5947\u5076\u6027\u5206\u7ec4\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u663e\u7136\u3002</p> <p>\u6240\u4ee5\u95ee\u9898\u4e3b\u8981\u5c31\u662f\u770b\u80fd\u5426\u7528 \\(+a_1, \u00b1a_3, \u00b1a_5\\) \u51d1\u51fa \\(x\\)\uff0c\u80fd\u5426\u7528 \\(\u00b1a_2,\u00b1a_4,\u00b1a_6\\) \u51d1\u51fa\u6765 \\(y\\)\u3002</p> <p>\u8fd9\u4e2a\u5c31\u662f\u7ecf\u5178\u7684\u80cc\u5305\u6a21\u578b\u4e86\uff08\u786c\u5e01\u51d1\u6574\u7684\u95ee\u9898\uff09\uff0c\u4f46\u73b0\u5728\u7684\u4e3b\u8981\u95ee\u9898\u662f\u8d1f\u6570\u548b\u641e\u3002</p> <p>\u53d1\u73b0\u5176\u5b9e\u53ef\u4ee5\u632a\u4e00\u4e0b\u4f4d\uff0c\u628a\u8d1f\u6570\u5f80\u524d\u632a\uff0c\u632a\u5230 \\(0 \\sim 1e4\\)\uff0c\u7136\u540e\u6b63\u6570\u632a\u5230 \\(1e4 \\sim 2e4\\)\u3002</p> <p>\u7136\u540e\u5b9e\u73b0\u5e94\u8be5\u6bd4\u8f83\u7b80\u5355\uff0c Bool DP \u5373\u53ef\uff0c\u8fd9\u91cc\u7528\u5230\u4e86\u8d5b\u65f6\u7684\u4e00\u8840 tabr \u4ee3\u7801\u91cc\u7684\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u76f4\u63a5\u62ff bitset \u4f4d\u79fb\u505a dp\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;bitset&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e4 + 10;\n\nint n, x, y, a[si];\nstd::bitset&lt;20000&gt;dp;\nstd::vector&lt;int&gt; b, c;\n\nbool solve(std::vector&lt;int&gt; v, int target) {\ndp.reset(); dp[10000] = true;\nfor(auto i : v) dp = (dp &lt;&lt; i) | (dp &gt;&gt; i);\nreturn dp[target + 10000];\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit bitor cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; x &gt;&gt; y;\nfor(int i = 0; i &lt; n; ++i)\ncin &gt;&gt; a[i];\nfor(int i = 1; i &lt; n; ++i)\nif(i % 2 == 0) b.push_back(a[i]);\nelse c.push_back(a[i]);\nx -= a[0], x = abs(x), y = abs(y);\nif(solve(b, x) &amp;&amp; solve(c, y)) cout &lt;&lt; \"Yes\" &lt;&lt; endl;\nelse cout &lt;&lt; \"No\" &lt;&lt; endl;\n\nreturn 0;\n}\n\n// thanks tabr : https://atcoder.jp/contests/abc274/submissions/35864370\n</code></pre>"}, {"location": "rec/atcf-for-2022-09-10/#e", "title": "E", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\uff0c\u5e73\u9762\u4e0a\u6709 \\(n\\) \u4e2a town \u548c \\(m\\) \u4e2a chest\uff0c\u5750\u6807\u5206\u522b\u4e3a \\((x_i,y_i),(p_i,q_i)\\)\uff08\u6b63\u8d1f \\(1e9\\) \u7ea7\u522b\u7684\u6574\u70b9\uff09\u3002</p> <p>\u4f60\u5fc5\u987b\u8bbf\u95ee\u6240\u6709\u7684 \\(n\\) \u4e2atown\uff0c\u5e76\u56de\u5230\u4f60\u7684\u8d77\u70b9 \\(1\\) \u53f7 town\uff0c\u4f60\u4e0d\u5fc5\u8d70\u8fc7\u6240\u6709 chest\uff0c\u4f46\u662f\u6bcf\u4e2a chest \u91cc\u6709\u4e00\u4e2a\u52a0\u901f\u5668\uff0c\u62ff\u5230\u540e\u4f1a\u8ba9\u4f60\u7684\u901f\u5ea6\u4e58\u4e8c\uff0c\u4f60\u7684\u521d\u59cb\u901f\u5ea6\u662f \\(1\\)\uff0c\u8bf7\u95ee\u8d70\u5b8c\u5168\u7a0b\u7684\u6700\u77ed\u65f6\u95f4\u662f\u591a\u5c11\uff1f</p> <p>\\(1 \\le n \\le 12, 0 \\le m \\le 5\\)\uff0c\u6ca1\u6709 town \u548c chest \u5904\u4e8e\u539f\u70b9\u3002</p> <p>\u677f\u677f\u72b6\u538b dp\uff0c\u8bbe \\(dp(msk,sta,i)\\) \u8868\u793a\u5f53\u524d town \u7684\u72b6\u6001\u4e3a \\(msk\\)\uff0cchest \u7684\u72b6\u6001\u4e3a \\(sta\\)\uff0c\u5f53\u524d\u6b63\u5728\u7b2c \\(i\\) \u4e2a\u70b9\uff08\u53ef\u80fd\u662f chest\uff0c\u4e5f\u53ef\u80fd\u662f town\uff09\u7684\u6700\u77ed\u65f6\u95f4\u3002</p> <p>\u7136\u540e\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u4ece\u54ea\u91cc\u6765\u7684\uff0c\u6700\u540e\u518d\u5bf9\u6240\u6709\u5408\u6cd5\u72b6\u6001 \uff08\\(msk = 2^n - 1\\)\uff09\u7b97\u4e00\u4e0b\u5b83\u5230\u539f\u70b9\u6b64\u65f6\u6240\u9700\u7684\u901f\u5ea6\uff0c\u53d6 min \u5373\u53ef\uff0c\u521d\u59cb\u5316 \\(dp(1,0,1) = 0\\)\uff0c\u5176\u4f59 \\(\\infty\\)\u3002</p> <p>Code \u4e0d\u5199\u4e86\uff0c\u76f4\u63a5\u8d3a\u8d3a std\u3002</p> std <pre><code>#include&lt;stdio.h&gt;\n#include&lt;math.h&gt;\n#define bit(x,i)(((x)&gt;&gt;(i))&amp;1)\n\ndouble x[20],y[20];\ndouble dp[17][1&lt;&lt;17];\nint main(){\nint n,m;\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=0;i&lt;n+m;i++)scanf(\"%lf%lf\",x+i,y+i);\nfor(int i=0;i&lt;n+m;i++)for(int s=0;s&lt;1&lt;&lt;(n+m);s++)dp[i][s]=1e18;\nfor(int i=0;i&lt;n+m;i++)dp[i][1&lt;&lt;i]=hypot(x[i],y[i]);\n\nfor(int s=1;s&lt;1&lt;&lt;(n+m);s++){\ndouble coef=pow(0.5,__builtin_popcount(s&gt;&gt;n));\nfor(int i=0;i&lt;n+m;i++)if(bit(s,i)){\nfor(int j=0;j&lt;n+m;j++)if(!bit(s,j)){\ndp[j][s^(1&lt;&lt;j)]=fmin(dp[j][s^(1&lt;&lt;j)],dp[i][s]+hypot(x[i]-x[j],y[i]-y[j])*coef);\n}\n}\n}\n\ndouble ans=1e18;\nfor(int i=0;i&lt;n+m;i++)for(int s=(1&lt;&lt;n)-1;s&lt;1&lt;&lt;(n+m);s+=1&lt;&lt;n)ans=fmin(ans,dp[i][s]+hypot(x[i],y[i])*pow(0.5,__builtin_popcount(s&gt;&gt;n)));\nprintf(\"%.10f\\n\",ans);\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-09-10/#cf-round-829", "title": "CF Round #829", "text": "<p>\u4e0b\u5348\uff0c\u8fde\u7740\u4e24\u573a CF\uff0c\u5c0f\u6eaa\u4e86\u3002</p> <p>\u6682\u65f6\u5495\u6389\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2022-09-10/#cf-round-830", "title": "CF Round #830", "text": "<p>\u6ca1\u6253\uff0c\u6682\u65f6\u5495\u6389\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2022-11-12/", "title": "2022\u5e7411,12\u6708AT&CF", "text": ""}, {"location": "rec/atcf-for-2022-11-12/#cf-at", "title": "\u5341\u4e00 &amp; \u5341\u4e8c\u6708 CF AT \u4e22\u4eba\u505a\u9898\u8bb0\u5f55", "text": "<p>\u5927\u90e8\u5206\u7ffb\u8bd1\u6765\u81ea\u6d1b\u8c37\u3002</p>"}, {"location": "rec/atcf-for-2022-11-12/#abc277e-crystal-switches", "title": "ABC277E - Crystal Switches", "text": "<p>\u7ed9\u4f60\u4e00\u5f20\u7b80\u5355\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u8fb9 \\((u_i, v_i)\\) \u6709\u4e00\u4e2a\u5c5e\u6027 \\(a_i\\)\u3002</p> <p>\u5176\u4e2d\u5982\u679c \\(a_i\\) \u4e3a \\(1\\) \u8868\u793a\u8fd9\u6761\u8fb9\u662f\u53ef\u4ee5\u901a\u884c\u7684\uff0c\u5426\u5219\u662f\u4e0d\u53ef\u901a\u884c\u7684\u3002</p> <p>\u6709 \\(K\\) \u4e2a\u7279\u6b8a\u70b9\uff0c\u5982\u679c\u4f60\u5904\u4e8e\u8fd9\u4e2a\u7279\u6b8a\u70b9\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21\u8f6c\u6362\uff0c\u4f7f\u5f97\u6240\u6709\u7684 \\(a_i\\) \u53d6\u53cd\u3002</p> <p>\u95ee\u4f60\u4ece \\(1 \\to n\\) \u7684\u6700\u77ed\u8def\uff08\u65e0\u89e3\u5219\u7b54\u6848\u4e3a <code>-1</code>\uff09\u3002</p> <p>\\(2\\le n \\le 2e5, 1\\le m \\le 1e5, 0\\le K \\le n\\)\u3002</p> <p>\u5443\u5443\uff0c\u611f\u89c9\u662f\u6bd4\u8f83\u677f\u5b50\u7684\u5206\u5c42\u56fe\u6700\u77ed\u8def\u3002</p> <p>\u5c31\u662f\u4f60\u770b\u5230\u6709\u4e00\u4e9b\u8fb9\u8981\u5728\u7279\u6b8a\u60c5\u51b5\u4e0b\u624d\u80fd\u901a\u884c\u6216\u8005\u8fd9\u4e9b\u8fb9\u7684\u8fb9\u6743\u4f1a\u6539\u53d8\u4e4b\u7c7b\u7684\u65f6\u5019\uff0c\u5c31\u8003\u8651\u628a\u8fb9\u5206\u7c7b\u3002</p> <p>\u5e76\u4e14\u62c6\u70b9\uff0c\u628a\u56fe\u5206\u6210\u591a\u5c42\uff0c\u5982\u679c\u9047\u5230\u53ef\u4ee5\u8fdb\u884c\u4e0d\u540c\u5c42\u8f6c\u79fb\u7684\u8282\u70b9\uff08\u6bd4\u5982\u672c\u9898\u4e2d\u7684\u7279\u6b8a\u70b9\uff09\uff0c\u5c31\u5728\u4e0d\u540c\u5c42\u4e4b\u95f4\u8fde\u8fb9\uff08\u8fd9\u6761\u8fb9\u7684\u4ee3\u4ef7\u53d6\u51b3\u4e8e\u5728\u5c42\u4e4b\u95f4\u8f6c\u79fb\u7684\u4ee3\u4ef7\uff09\u3002</p> <p>\u4e4b\u540e\u95ee\u9898\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210\u666e\u901a\u7684\u6700\u77ed\u8def\u95ee\u9898\u4e86\u3002</p> <p>\u5bf9\u5e94\u5230\u8fd9\u9053\u9898\u4e0a\u5c31\u662f\u8003\u8651\u628a 0/1 \u72b6\u6001\u7684\u8fb9\u5206\u5f00\u8fde\uff0c\u540c\u5c42\u8fb9\u7684\u8fb9\u6743\u8bbe\u7f6e\u4e3a \\(1\\)\uff0c\u56e0\u4e3a\u6211\u4eec\u8f6c\u6362\u4e00\u6b21\u4e0d\u8017\u8d39\u4efb\u4f55\u4ee3\u4ef7\uff0c\u6240\u4ee5\u4e0d\u540c\u5c42\u4e4b\u95f4\u7684\u8fb9\u7684\u8fb9\u6743\u662f \\(0\\)\u3002</p> <p>\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <p></p> <p>\u7136\u540e\u8fde\u5b8c\u8fb9\u76f4\u63a5\u6c42\u6700\u77ed\u8def\u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;utility&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m;\nint tot = 0, head[si &lt;&lt; 1];\nstruct Edge { int ver, Next, w; } e[si &lt;&lt; 2];\ninline void add(int u, int v, int w) { e[tot] = (Edge){v, head[u], w}, head[u] = tot++; }\n\nstd::priority_queue&lt;std::pair&lt;int, int&gt; &gt;q;\nbool vis[si &lt;&lt; 1]; int dis[si &lt;&lt; 1];\nvoid dijkstra(int s) {\nmemset(vis, false, sizeof vis), memset(dis, 0x3f, sizeof dis);\ndis[s] = 0,q.push({dis[s], s});\nwhile(!q.empty()) {\nint u = q.top().second; q.pop();\nif(vis[u]) continue; vis[u] = true;\nfor(int i = head[u]; ~i; i = e[i].Next){\nint v = e[i].ver, w = e[i].w;\nif(dis[v] &gt; dis[u] + w) dis[v] = dis[u] + w, q.push({-dis[v], v});\n}\n}\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head);\n\nint K;\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; K;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nif(w == 0) add(u + n, v + n, 1), add(v + n, u + n, 1);\nif(w == 1) add(u, v, 1), add(v, u, 1);\n}\nfor(int i = 1; i &lt;= K; ++i) {\nint gt; cin &gt;&gt; gt;\nadd(gt, gt + n, 0), add(gt + n, gt, 0);\n}\ndijkstra(1);\n\nint ans = min(dis[n], dis[n + n]);\nif(ans &lt; 0x3f3f3f3f) cout &lt;&lt; ans &lt;&lt; endl;\nelse cout &lt;&lt; \"-1\" &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc279d-freefall", "title": "ABC279D - Freefall", "text": "<p>\u7ed9\u5b9a\u4e24\u4e2a\u6570 \\(a\\)\uff0c\\(b\\)\uff08\\(1 \\le a, b \\le 10^{18}\\)\uff09\uff0c\u6c42\u51fa \\(\\min\\limits_{g = 1}^\\infty\\{b \\times (g - 1) + \\frac{a}{\\sqrt{g}}\\}\\)\u3002\u7cbe\u5ea6\u8bef\u5dee\u4e0d\u8d85\u8fc7 \\(10^{-6}\\)\u3002</p> <p>translated by @liangbowen\u3002</p> <p>\u8bbe\u64cd\u4f5c\u6b21\u6570\u4e3a \\(x\\)\uff0c\u5219\u603b\u65f6\u95f4\u4e3a \\(T(x) = \\dfrac{A}{1+x} + Bx\\)\u3002</p> <p>\u6839\u636e\u521d\u7b49\u51fd\u6570\u6c42\u5bfc\u6cd5\u5219\u5bf9 \\(T(x)\\) \u6c42\u5bfc\u5f97\uff1a\\(T^{\\prime}(x) = B - \\dfrac{A}{2(x+1)^{\\frac{3}{2}}}\\)\u3002</p> <p>\u4ee4 \\(T^\\prime(x) = 0 \\Rightarrow x = (\\dfrac{A}{2B})^{\\frac{2}{3}} - 1\\)\u3002</p> <p>\u56e0\u4e3a \\(x \\in \\mathbb{N+}\\)\uff0c\u6240\u4ee5 \\(x = \\text{round}((\\dfrac{A}{2B})^{\\frac{2}{3}} - 1)\\)\u3002</p> <p>\u6ce8\u610f\u5230 \\(A, B\\) \u4e0a\u754c\u4e3a \\(10^{18}\\)\uff0c\u6240\u4ee5\u8981\u62c6\u5f00\u7b97\u3002</p> <p>\u5f97\u5230 \\(x\\) \u7684\u503c\u4e4b\u540e\u5e26\u5165 \\(T(x)\\) \u5373\u53ef\u5f97\u5230\u7b54\u6848\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u79cd\u51fd\u6570\u6c42\u6700\u503c\u7684\u5bb9\u6613\u51fa\u8bef\u5dee\uff0c\u4e0d\u7136\u5c31\u4e8c\u5206\uff0c\u4e0d\u7136\u5c31\u5728\u6781\u503c\u70b9\u9644\u8fd1\u591a\u53d6\u51e0\u4e2a\u70b9\u6c42 \\(\\min\\)\uff0c\u4e0d\u7136\u96be\u9876\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\n\nconst ldb alpha = (1.0 / 3.0);\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nldb a, b; cin &gt;&gt; a &gt;&gt; b, b *= 2.0;\nldb x = round(((pow(a, alpha) * pow(a, alpha))\n/ (pow(b, alpha) * pow(b, alpha))) - 1.0);\nif(x &lt; 0) x = 0;\nldb ans = 1e18 + 7;\nfor(ldb i = max((ldb)0.0, x - 10.0); i &lt;= min((ldb)1e18 + 7.0, x + 10.0); i += 1.0)\nans = min(ans, (b / 2.0) * i + (a / sqrt(i + 1.0)));\ncout &lt;&lt; fixed &lt;&lt; setprecision(10) &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc279e-cheating-amidakuji", "title": "ABC279E - Cheating Amidakuji", "text": "<p>\u7ed9\u4f60\u4e24\u4e2a\u6570\u7ec4 \\(A\\) \u548c \\(B\\)\uff0c\u521d\u59cb\u65f6\uff0c\\(B_i=i\\)\u3002</p> <p>\u5b9a\u4e49\u7b2c \\(k\\) \u6b21\u64cd\u4f5c\u4e3a \\(\\operatorname{swap}(B_{A_k},B_{A_k+1})\\)</p> <p>\u5b9a\u4e49 \\(S_i\\) \u4e3a\u4f9d\u6b21\u8fdb\u884c \\(1\\) \u5230 \\(m\\) \u9664 \\(i\\) \u53f7\u64cd\u4f5c\u5916\u7684\u6240\u6709\u64cd\u4f5c\u540e\uff0c\u6570\u5b57 \\(1\\) \u5728 \\(B\\) \u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002</p> <p>\u8bf7\u4f9d\u6b21\u8f93\u51fa \\(S_i\\) \u3002</p> <p>\u6ce8\u610f\u5230\u6709\u4e9b\u64cd\u4f5c\u662f\u4e0d\u4f1a\u5f71\u54cd \\(1\\) \u7684\u4f4d\u7f6e\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3 \\(1\\) \u7684\u4f4d\u7f6e\u3002</p> <p>\u53ef\u4ee5\u5148\u8bb0\u5f55\u76f4\u63a5\u8fdb\u884c\u6240\u6709\u64cd\u4f5c\u4e4b\u540e\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e \\(p\\)\u3002</p> <p>\u6ce8\u610f\u5230 \\(ans_i\\) \u662f\u8868\u793a\u4e0d\u8fdb\u884c\u64cd\u4f5c \\(i\\) \u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u505a \\(1 \\sim i\\)\uff0c\u7136\u540e\u770b\u4e00\u4e0b\u5f53\u524d\u4ea4\u6362\u7684\u4e24\u4e2a\u5143\u7d20 \\(b(a(i)), b(a(i) + 1)\\) \u54ea\u4e2a\u662f \\(1\\)\uff0c\u5982\u679c \\(b(a(i))\\) \u662f \\(1\\)\uff0c\u7b54\u6848\u5c31\u662f \\(p(b(a(i) + 1))\\)\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u5982\u679c\u90fd\u4e0d\u662f \\(1\\) \u8bc1\u660e\u4ed6\u4eec\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u7b54\u6848\u662f \\(p(1)\\)\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m;\nint a[si], b[si], p[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= m; ++i) cin &gt;&gt; a[i];\nfor(int i = 1; i &lt;= n; ++i) b[i] = i;\nfor(int i = 1; i &lt;= m; ++i) swap(b[a[i]], b[a[i] + 1]);\nfor(int i = 1; i &lt;= n; ++i) p[b[i]] = i, b[i] = i;\nfor(int i = 1; i &lt;= m; ++i) {\nif(b[a[i]] == 1) cout &lt;&lt; p[b[a[i] + 1]] &lt;&lt; endl;\nelse if(b[a[i] + 1] == 1) cout &lt;&lt; p[b[a[i]]] &lt;&lt; endl;\nelse cout &lt;&lt; p[1] &lt;&lt; endl;\nswap(b[a[i]], b[a[i] + 1]);\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc279f-box", "title": "ABC279F - BOX", "text": "<p>\u6709 \\(N\\) \u4e2a\u7bb1\u5b50\u548c\u65e0\u6570\u4e2a\u7f16\u53f7\u4ece \\(1\\) \u5f00\u59cb\u7684\u7403\uff0c\u7b2c \\(i\\) \u4e2a\u7bb1\u5b50\u5f00\u59cb\u65f6\u53ea\u88c5\u4e86\u7f16\u53f7\u4e3a \\(i\\) \u7684\u7403\u3002</p> <p>\u6709 \\(Q\\) \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5206\u522b\u53ef\u80fd\u4e3a\uff1a</p> <ul> <li><code>1 X Y</code> \u5c06 \\(Y\\) \u7bb1\u4e2d\u7684\u7403\u5168\u90e8\u653e\u5165 \\(X\\) \u7bb1\u3002</li> <li><code>2 X</code> \u5c06\u76ee\u524d\u6700\u5c0f\u7684\u672a\u88ab\u653e\u5230\u7bb1\u5b50\u91cc\u7684\u7403\u653e\u5230 \\(X\\) \u7bb1\u3002</li> <li><code>3 X</code> \u67e5\u8be2 \\(X\\) \u7403\u5728\u54ea\u4e2a\u7bb1\u5b50\u4e2d\uff0c\u8f93\u51fa\u8be5\u7bb1\u7f16\u53f7\uff0c\u8f93\u51fa\u95f4\u7528\u6362\u884c\u9694\u5f00\u3002</li> </ul> <p>\u9996\u5148\u8fd9\u4e2a \\(10^{100}\\) \u4e00\u770b\u5c31\u662f\u5413\u4eba\u7684\uff0c\u6ce8\u610f\u5230 \\(n, q \\le 3e5\\)\uff0c\u6240\u4ee5\u6bcf\u4e2a\u76d2\u5b50\u91cc\u7684\u7403\u6570\u80af\u5b9a\u4e0d\u8d85\u8fc7 \\(3e5\\)\uff0c\u5e76\u4e14\u76d2\u5b50\u662f\u4e0d\u4f1a\u65b0\u4ea7\u751f\u7684\uff0c\u6240\u4ee5\u79bb\u6563\u5316\u4e5f\u4e0d\u9700\u8981\u3002</p> <p>\u4f46\u662f\u6ce8\u610f\u5230\u96c6\u5408\u548c\u5c0f\u7403\u5404\u81ea\u662f\u6709\u7f16\u53f7\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u5206\u5f00\u5904\u7406\uff0c\u8fd9\u4e2a\u5c31\u7528\u4e00\u4e2a map \u6807\u8bb0\u4e00\u4e0b\u5c31\u884c\u4e86\uff08\u4e3a\u4ec0\u4e48\u4e0d\u662f bool array \u5728\u4e0b\u9762\u80fd\u5f97\u5230\u89e3\u91ca\uff09\u3002</p> <p>\u9996\u5148\u770b\u64cd\u4f5c \\(1\\)\uff0c\u628a\u4e00\u4e2a\u76d2\u5b50\u7684\u7403\u653e\u5230\u53e6\u5916\u4e00\u4e2a\u91cc\u9762\u3002</p> <p>\u6ce8\u610f\u8fd9\u4e0d\u662f\u7b80\u5355\u7684 Merge\uff0c\u800c\u662f Merge \u5b8c\u4e86\u4e4b\u540e\u8fd8\u8981\u6e05\u7a7a\u3002</p> <p>\u4f46\u662f\u5982\u679c\u6211\u4eec\u76f4\u63a5 Merge \u8fc7\u53bb\uff0c\\(y\\) \u4e0b\u9762\u6302\u7740\u90a3\u4e48\u591a\u8282\u70b9\uff0c\u800c\u4e14\u4e5f\u4e0d\u80fd\u76f4\u63a5\u53cd\u5411\u8bbf\u95ee\u5230\uff0c\u80af\u5b9a\u4f1a\u6709\u95ee\u9898\u3002</p> <p>\u8fd9\u65f6\u5019\u6709\u4e00\u4e2a\u65b0\u5947\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u8003\u8651\u7ed9 \\(y\\) \u5efa\u4e00\u4e2a\u526f\u672c\u6765\u4ee3\u66ff \\(y\\) \u8fd9\u4e2a\u76d2\u5b50\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u76f4\u63a5\u628a\u539f\u6765\u7684 \\(y\\) Merge \u5230 \\(x\\) \u91cc\u9762\uff0c\u5e76\u4e14\u8fd9\u4e2a \\(y\\) \u81ea\u5df1\u672c\u8eab\u4e0d\u7b97 \\(size\\)\uff0c\u90a3\u5b9e\u73b0\u7684\u65f6\u5019\u5c31\u9700\u8981\u79bb\u6563\u5316\u4e86\u3002</p> <p>\u5177\u4f53\u65b9\u5f0f\u662f\uff0c\u628a\u539f\u6765\u7684\u96c6\u5408\u76f4\u63a5 Merge \u8fc7\u53bb\uff0c\u8bb0\u5f55\u5b83\u4e0d\u518d\u662f\u4e00\u4e2a\u76d2\u5b50\uff0c\u800c\u662f\u4e00\u4e2a\u4e2d\u8f6c\u8282\u70b9\u4e14\u4e0d\u5360 \\(size\\)\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u76d2\u5b50\u7684\u7f16\u53f7\u6620\u5c04\u5230\u4e00\u4e2a\u65b0\u7684\u526f\u672c\u4e0a\u9762\uff0c\u521d\u59cb\u5316\u8fd9\u4e2a\u526f\u672c\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u4e0d\u7b97 \\(size\\)\u3002 </p> <p>\u7136\u540e\u53d1\u73b0\u64cd\u4f5c \\(2\\) \u672c\u8d28\u662f\u7c7b\u4f3c\u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u73b0\u5728\u662f\u4fdd\u7559\u8fd9\u4e2a\u8282\u70b9\uff0c\u65b0\u5f00\u4e00\u4e2a\u526f\u672c Add \u5230\u76d2\u5b50\u91cc\u9762\u53bb\uff0c\u4e14\u8fd9\u4e2a\u526f\u672c\u4e0d\u7b97 \\(size\\)\uff0c\u5e76\u628a\u539f\u6765\u8282\u70b9\u6240\u5728\u96c6\u5408 \\(size\\) \u51cf\u4e00\u3002</p> <p>\u64cd\u4f5c \\(3\\) \u5c31\u662f\u7b80\u5355\u7684\u8be2\u95ee\u3002</p> <p>\u5b8c\u86cb\uff0c\u8bfb\u9519\u9898\u4e86\uff0c\u6211\u4ee5\u4e3a\u64cd\u4f5c\u4e8c\u662f\u8003\u8651\u5f53\u524d\u76d2\u5b50\u6709\u591a\u5c11\u4e2a\u3002</p> <p>\u7eaf\u7eaf\u50bb\u903c\u554a\uff0c\u4f46\u662f\u611f\u89c9\u8fd9\u4e2a\u9898\u53ef\u4ee5\u51fa\u51fa\u6765\u6254\u7ed9\u666e\u53ca\u7ec4\u5c0f\u670b\u53cb\u7ec3\u4e60\u3002</p> <p>\u4f46\u662f\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u611f\u89c9\u4e5f\u5dee\u4e0d\u591a\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 3e5 + 10;\n\nint n, m, q;\nint raw[si &lt;&lt; 2], val[si &lt;&lt; 2], pa[si &lt;&lt; 2], b[si &lt;&lt; 2];\nint root(int x) { if(pa[x] != x) return pa[x] = root(pa[x]);\nreturn pa[x];\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; q, m = n;\nfor(int i = 1; i &lt;= n; ++i)\npa[i] = raw[i] = val[i] = b[i] = i;\nint tot = n;\nfor(int i = 1; i &lt;= q; ++i) {\nint opt, x, y;\ncin &gt;&gt; opt;\nif(opt == 3) cin &gt;&gt; x, cout &lt;&lt; raw[root(b[x])] &lt;&lt; endl;\nif(opt == 1) cin &gt;&gt; x &gt;&gt; y, pa[val[y]] = pa[val[x]], val[y] = ++m, raw[m] = y, pa[m] = m;\nif(opt == 2) cin &gt;&gt; x, b[++tot] = val[x];\n}\n\nreturn 0;\n}\n\n// ()()()(?\n\n\n/* // author : black_trees\n\n#include &lt;map&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 3e5 + 10;\n\nint n, m, q;\nint raw[si &lt;&lt; 2], val[si &lt;&lt; 2];\nstd::map&lt;int, bool&gt; is_box;\nint pa[si &lt;&lt; 2], siz[si &lt;&lt; 2];\n\nint root(int x) { \n    if(pa[x] != x) \n        pa[x] = root(pa[x]);\n    return pa[x];\n}\nvoid Merge(int x, int y) {\n    int rx = root(x), ry = root(y);\n    if(rx == ry) return;\n    pa[ry] = rx, siz[rx] += siz[ry]; \n}\n\nint main() {\n\n    cin.tie(0) -&gt; sync_with_stdio(false);\n    cin.exceptions(cin.failbit | cin.badbit);\n\n    cin &gt;&gt; n &gt;&gt; q, m = n + n;\n    for(int i = 1; i &lt;= n; ++i) { \n        raw[i] = i, pa[i] = i, siz[i] = 0;\n        is_box[i] = true;\n    } // init boxes\n    for(int i = 1; i &lt;= n; ++i) {\n        raw[i + n] = i, val[i] = i + n, siz[i + n] = 0, pa[i + n] = i + n; \n    } // init balls;\n\n    for(int i = 1; i &lt;= q; ++i) {\n        int opt, x, y;\n        cin &gt;&gt; opt;\n        if(opt == 3) cin &gt;&gt; x, cout &lt;&lt; raw[root(x)] &lt;&lt; endl;\n        if(opt == 1) {\n            cin &gt;&gt; x &gt;&gt; y;\n            ++m, raw[m] = raw[y], siz[m] = 0, pa[m] = m; // new copy\n            is_box[m] = true, is_box[y] = false, Merge(x, y);\n        }\n        if(opt == 2) {\n            cin &gt;&gt; x; \n            int rx = root(x), sz = siz[rx];\n            if(sz &gt;= n) {\n                ++m, pa[m] = m, siz[m] = 1; \n                raw[m] = sz + 1, val[sz + 1] = m;\n            }\n            else {\n                int ry = root(sz + 1);\n                siz[ry]--, raw[val[sz + 1]] = -1;\n                ++m, pa[m] = m, siz[m] = 1, raw[m] = sz + 1, val[sz + 1] = m;\n                Merge(rx, m);\n            }\n        }\n    }\n\n    return 0;\n}\n\n// ()()()(? */\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc280d-factorial-and-multiple", "title": "ABC280D - Factorial and Multiple", "text": "<ul> <li>\u7ed9\u51fa\u4e00\u4e2a\u6570 \\(k\\)\uff0c\u6c42\u4e00\u4e2a\u6570 \\(n\\)\uff0c\u8981\u6c42 \\(n!\\) \u662f \\(k\\) \u7684\u500d\u6570\uff0c\u8f93\u51fa \\(n\\) \u7684\u6700\u5c0f\u503c\u3002</li> <li>\\(k\\le10^{12}\\)</li> </ul> <p>translated by @PineappleSummer\u3002</p> <p>\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u5206\u89e3\u8d28\u56e0\u6570\u7136\u540e\u6c42 \\(\\max\\{p_i^{c_i}!\\}\\) \u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e6 + 10;\n\ni64 c[si]; // exponential\ni64 m = 0, p[si]; // prime factor\ni64 ans = 1;\n\nvoid divide(i64 n) {\nm = 0;\nfor(i64 i = 2; i * i &lt;= n; ++i) {\nif(n % i == 0) {\np[++m] = i, c[m] = 0;\nwhile(n % i == 0) n /= i, c[m]++;\ni64 tmp = 0, t;\nwhile(c[m] &gt; 0) {\ntmp += i, t = tmp;\nwhile(t % i == 0) t /= i, c[m] --;\n}\nans = max(ans, tmp);\n}\n}\nif(n &gt; 1) p[++m] = n, c[m] = 1;\nans = max(ans, n);\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ni64 k; cin &gt;&gt; k; divide(k), cout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc280e-critical-hit", "title": "ABC280E - Critical Hit", "text": "<p>\u6709\u4e00\u4e2a \\(n\\) \u6ef4\u8840\u7684\u602a\u7269\u3002\u6bcf\u4e00\u6b21\u653b\u51fb\u4f60\u6709 \\(P\\%\\) \u7684\u6982\u7387\u8ba9\u5b83\u5931\u53bb \\(2\\) \u6ef4\u8840\uff0c\u6709 \\((100-P)\\%\\) \u7684\u6982\u7387\u8ba9\u5b83\u5931\u53bb \\(1\\) \u6ef4\u8840\u3002\u5982\u679c\u653b\u51fb\u8fc7\u540e\u602a\u7269\u7684\u8840\u91cf \\(\\leq 0\\)\uff0c\u5b83\u5c31\u6b7b\u4e86\u3002\u4f60\u9700\u8981\u4e00\u76f4\u653b\u51fb\u602a\u7269\u76f4\u5230\u5b83\u6b7b\u4ea1\u3002\u8f93\u51fa\u653b\u51fb\u6b21\u6570\u7684\u671f\u671b\u5bf9 \\(998244353\\) \u53d6\u6a21\u7684\u503c\u3002</p> <p>\\(1\\leq n\\leq 2\\times10^5,0\\leq P\\leq 100\\)</p> <p>\u5c31\u662f\u7b80\u5355\u7684\u671f\u671b dp\uff0c\u4f46\u662f\u6211\u4e00\u65f6\u534a\u4f1a\u6ca1\u60f3\u6e05\u695a\u3002</p> <p>\u5c31\u662f\u8bbe \\(dp(i)\\) \u8868\u793a\u6253\u6b7b\u4e00\u53ea\u4f53\u529b\u4e3a \\(i\\) \u7684\u602a\u7269\u7684\u671f\u671b\u6b65\u6570\u3002</p> <p>\u56e0\u4e3a stamina = 1 \u7684\u65f6\u5019\u600e\u4e48\u6253\u90fd\u662f G\uff0c\u6240\u4ee5 \\(dp(1) = 1\\)\u3002</p> <p>\u65b9\u7a0b\u6bd4\u8f83\u663e\u7136\uff0c\\(dp(i) = \\dfrac{100 - p}{100}dp(i - 1) + \\dfrac{p}{100}dp(i - 2) + 1\\) \u4f46\u662f\u6211\u641e\u4e0d\u61c2\u554a\uff0c\u4f60\u5982\u679c\u6253\u51fa\u4e86 \\(i + 1\\) \u7684\u4f24\u5bb3\uff0c\u90a3 \\(i\\) \u4e0d\u662f\u7167\u6837\u4f1a G \u5417\uff1f</p> <p>\u7b54\u6848\u600e\u4e48\u5c31\u662f \\(dp(n)\\) \u4e86\uff0c\u4e0d\u61c2\uff0c\u4e0d\u61c2\u3002</p> <p>\u611f\u89c9\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u662f\u5012\u63a8\uff1f</p> <p>\u5c31\u8bbe \\(dp(i)\\) \u8868\u793a\u628a\u602a\u7269\u6253\u5230\u6070\u597d\u5269 \\(i\\) \u7684 stamina \u7684\u671f\u671b\u6b65\u6570\u3002</p> <p>\u90a3\u4e48 \\(dp(n) = 0\\)\uff0c\u7b54\u6848\u662f \\(dp(0) + dp(-1)\\)\uff0c\u7136\u540e\u6c42\u51fa \\(dp(1)\\) \u4e4b\u540e\u663e\u7136\u4e0d\u7ba1\u600e\u4e48\u6253\u90fd\u662f\u53ef\u4ee5\u7684\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u5b9e\u9645\u4e0a\u662f \\(dp(1) + 1\\)\u3002</p> <p>\u54e6\uff0c\u6211\u61c2\u4e86\uff0c\u4e0a\u9762\u7684\u72b6\u6001\u662f\u6253\u6b7b\uff0c\u4e0b\u9762\u7684\u662f\u6070\u597d\uff0c\u6709\u533a\u522b\u7684\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\n// using i64 = long long;\n#define int long long\n\nconst int si = 2e5 + 10;\nconst int mod = 998244353;\n\nint n, p;\nint dp[si];\nint qpow(int a, int b) {\nint ret = 1 % mod;\nfor(; b; b &gt;&gt;= 1) {\nif(b &amp; 1) ret = ret * a % mod;\na = a * a % mod;\n}\nreturn ret % mod;\n}\nint inv(int x) { return qpow(x, mod - 2); }\nconst int iv = inv(100);\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; p;\ndp[0] = 0, dp[1] = 1; for(int i = 2; i &lt;= n + 1; ++i)\ndp[i] = ((dp[i - 1] * (100 - p + mod) % mod * iv % mod)\n+ (dp[i - 2] * p % mod * iv % mod) + 1 % mod + mod) % mod;\ncout &lt;&lt; dp[n] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u4ee3\u7801\u662f\u7b2c\u4e00\u4e2a\u5b9a\u4e49\u3002</p>"}, {"location": "rec/atcf-for-2022-11-12/#abc280f-pay-or-receive", "title": "ABC280F - Pay or Receive", "text": "<p>\u6709 \\(n\\) \u4e2a\u5c0f\u9547\uff0c\u7f16\u53f7 \\(1\\) ~ \\(n\\)\uff0c\u8fd8\u6709 \\(m\\) \u6761\u8def\uff0c\u7f16\u53f7 \\(1\\) ~ \\(m\\) \u3002</p> <p>\u7b2c \\(i\\) \u6761\u8def\u8fde\u63a5 \\({A_i}\\) \u548c \\({B_i}\\)\uff0c\u5f53\u4f60\u8d70\u8fc7\u4e00\u6761\u8def\u65f6\uff0c\u4f60\u7684\u5f97\u5206\u4f1a\u9075\u5faa\u4ee5\u4e0b\u53d8\u5316\uff1a</p> <ul> <li>\u5f53\u4f60\u7528\u7b2c \\(i\\) \u6761\u8def\u4ece \\({A_i}\\) \u5230 \\({B_i}\\)\uff0c\u4f60\u7684\u5f97\u5206\u589e\u52a0 \\({C_i}\\) ; \u5f53\u4f60\u7528\u7b2c \\(i\\) \u6761\u8def\u4ece \\({B_i}\\) \u5230 \\({A_i}\\)\uff0c\u4f60\u7684\u5f97\u5206\u51cf\u5c11 \\({C_i}\\) \u3002</li> </ul> <p>\u4f60\u7684\u5f97\u5206\u53ef\u80fd\u4e3a\u8d1f\u6570\u3002</p> <p>\u56de\u7b54\u5982\u4e0b\u7684 \\(Q\\) \u4e2a\u95ee\u9898\uff1a</p> <ul> <li> <p>\u5982\u679c\u4f60\u4ece \\({X_i}\\) \u8fd9\u4e2a\u5c0f\u9547\u51fa\u53d1\uff08\u521d\u59cb\u5f97\u5206\u4e3a \\(0\\) \uff09, \u6c42\u51fa\u4f60\u5728 \\({Y_i}\\) \u5c0f\u9547\u65f6\u7684\u6700\u5927\u5f97\u5206\u3002</p> </li> <li> <p>\u5982\u679c\u4f60\u4e0d\u80fd\u4ece \\({X_i}\\) \u8fd9\u4e2a\u5c0f\u9547\u51fa\u53d1\u5230\u8fbe \\({Y_i}\\) \u5c0f\u9547\uff0c\u8f93\u51fa <code>nan</code> \u3002</p> </li> <li> <p>\u5982\u679c\u4f60\u4ece \\({X_i}\\) \u8fd9\u4e2a\u5c0f\u9547\u51fa\u53d1\u5230\u8fbe \\({Y_i}\\) \u5c0f\u9547\u53ef\u4ee5\u6323\u5f97\u65e0\u9650\u7684\u5206\u6570\uff0c\u8f93\u51fa <code>inf</code> \u3002</p> </li> </ul> <p>\u8fd9\u4e0d\u5c31\u6b63\u53cd\u5efa\u8fb9\u6700\u957f\u8def\u5224\u4e0b\u53ef\u8fbe\u6027\u5224\u4e0b\u6b63\u73af\uff1f</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int inf = -1e18;\nconst int si_n = 1e5 + 10;\nconst int si_m = 2e5 + 10;\n\nint n, m, Q;\nint tot = 0, head[si_n];\nbool vis[si_n], ring[si_n];\nint pa[si_n], cnt[si_n], dis[si_n];\nstruct Edge { int ver, Next, w; } e[si_m];\ninline void add(int u, int v, int w) { e[tot] = (Edge){v, head[u], w}, head[u] = tot++; }\n\nint root(int x) {\nif(pa[x] != x) pa[x] = root(pa[x]);\nreturn pa[x];\n}\nvoid Merge(int u, int v) {\nint ru = root(u), rv = root(v);\nif(ru == rv) return;\npa[ru] = rv; return;\n}\n\nstd::queue&lt;int&gt; q;\nvoid bfs(int st) {\nq.push(st), vis[st] = true, dis[st] = 0;\nwhile(!q.empty()) {\nauto u = q.front();\nq.pop();\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(dis[v] == inf) {\ndis[v] = dis[u] + e[i].w;\nvis[v] = true;\nq.push(v);\n}\nelse if(dis[v] != dis[u] + e[i].w) {\nring[root(st)] = true;\nreturn ;\n}\n}\n}\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head);\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; Q;\nfor(int i = 1; i &lt;= n; ++i) pa[i] = i, dis[i] = inf;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nadd(u, v, w), add(v, u, -w);\nif(root(u) != root(v)) Merge(u, v);\n}\nfor(int i = 1; i &lt;= n; ++i) {\nint j = root(i);\nif(vis[j]) continue;\nwhile(!q.empty()) q.pop();\nvis[j] = true, bfs(j);\n}\n\nfor(int i = 1; i &lt;= Q; ++i) {\nint u, v; cin &gt;&gt; u &gt;&gt; v;\nif(root(u) != root(v)) {\ncout &lt;&lt; \"nan\" &lt;&lt; endl;\ncontinue;\n}\nif(ring[root(u)]) cout &lt;&lt; \"inf\" &lt;&lt; endl;\nelse cout &lt;&lt; dis[v] - dis[u] &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// ()()()(?\n// https://www.cnblogs.com/CTing/p/16950621.html\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc281d-max-multiple", "title": "ABC281D - Max Multiple", "text": "<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u6570\u3002\u73b0\u5728\u53ef\u4ee5\u4ece\u4e2d\u9009 \\(k\\) \u4e2a\u6570\uff0c\u9700\u6ee1\u8db3\u4ed6\u4eec\u7684\u548c\u4e3a \\(d\\) \u7684\u500d\u6570\u3002\u6c42\u6700\u5927\u548c\u503c\u3002</p> <p>translated by @liangbowen\u3002</p> <p>\u592a\u8822\u4e86\uff0c\u600e\u4e48\u7a0d\u5fae\u4e00\u4e45\u751a\u81f3\u8fde\u8fd9\u79cd\u795e\u5fc5\u80cc\u5305\u90fd\u4e0d\u4f1a\u3002</p> <p>\u600e\u4e48\u56de\u4e8b\u5462\u3002</p> <p>\u5c31\u662f\u770b\u5230\u8fd9\u4e2a\u4ece\u4e00\u5806\u5143\u7d20\u91cc\u4efb\u610f\u9009 \\(K\\) \u4e2a\u8981\u6ee1\u8db3\u4e00\u5b9a\u7684\u6761\u4ef6\uff0c\u95ee\u67d0\u4e9b\u6743\u503c\u7684\u6700\u503c\u6216\u8005\u662f\u53ef\u884c\u7684\u65b9\u6848\u6570\u3002</p> <p>\u7136\u540e\u5c31\u662f\u80cc\u5305\u561b\uff0c\u7136\u540e\u6570\u636e\u8303\u56f4\u90fd\u662f \\(100\\)\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u8bbe \\(dp(i,j,k)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u5143\u7d20\u9009\u4e86 \\(j\\) \u4e2a\uff0c\u4e14\u5df2\u7ecf\u9009\u62e9\u7684\u5143\u7d20\u7684\u6a21 \\(D\\) \u610f\u4e49\u4e0b\u548c\u4e3a \\(k\\) \u7684\u65f6\u5019\u7684 \\(\\max\\sum\\)\u3002</p> <p>\u7ec8\u6001 \\(dp(N, K, 0)\\)\u3002</p> <p>\u8f6c\u79fb\u6bd4\u8f83\u7b80\u5355\u5c31\u9009\u6216\u8005\u4e0d\u9009\uff0c\\(O(NKD)\\)\u3002</p> <p>\u53ea\u80fd\u8bf4\u8d8a\u6765\u8d8a\u50bb\u903c\u4e86\uff0c\u72b6\u6001\u4e0d\u521d\u59cb\u5316 inf \u521d\u59cb\u5316 -1 \u6839\u672c\u4e0d\u591f\uff0c\u7136\u540e\u8f6c\u79fb\u7684\u65f6\u5019\u4e71\u8f6c\u79fb\u72b6\u6001\uff0c\u540c\u4e00\u5c42\u8f6c\u79fb\u4e24\u4e2a\u4e0d\u540c\u72b6\u6001\uff0c\u7eaf\u7eafnt.</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e2 + 10;\n\nint N, K, D, a[si];\ni64 dp[si][si][si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; N &gt;&gt; K &gt;&gt; D;\nfor(int i = 1; i &lt;= N; ++i)\ncin &gt;&gt; a[i];\nmemset(dp, -0x3f, sizeof dp);\ndp[1][0][0] = 0, dp[1][1][(a[1] % D)] = a[1];\nfor(int i = 2; i &lt;= N; ++i) {\nfor(int j = 0; j &lt;= min(i, K); ++j) {\nfor(int k = 0; k &lt; D; ++k) {\ndp[i][j][k] = max(dp[i][j][k], dp[i - 1][j][k]);\nif(j &gt; 0)\ndp[i][j][k] = max(dp[i][j][k], dp[i - 1][j - 1][((k - a[i]) % D + D) % D] + a[i]);\n}\n}\n}\ncout &lt;&lt; ((dp[N][K][0] &lt; 0) ? -1 : dp[N][K][0]) &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc281e-least-elements", "title": "ABC281E - Least Elements", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 \\(A\\)\uff0c\u5bf9\u4e8e\u6bcf\u4e2a \\(1 \\le i \\le N - M + 1\\)\uff0c\u5c06 \\(A_i A_{i + 1} \\cdots A_{i + M - 1}\\) \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\uff08\u4e0d\u5f71\u54cd\u539f\u5e8f\u5217\uff09\uff0c\u6c42\u51fa \\(\\mathrm{ans}_i = \\sum\\limits_{i=1}^{K}A_i\\)\u3002</p> <p>\u611f\u89c9\u8fd9\u79cd\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\u505a\u5f88\u591a\u4e2a independent problem \u7684\u65f6\u5019\u4e00\u822c\u90fd\u4f1a\u8981\u8003\u8651\u4ece\u4e0a\u4e00\u4e2a\u72b6\u6001\u7ee7\u627f\uff0c\u6216\u8005\u662f\u8003\u8651\u5148\u6574\u4f53\u505a\u4e00\u904d\u518d\u8ba1\u7b97 ignore \u4e00\u4e9b\u64cd\u4f5c\u4e4b\u540e\u7684\u5f71\u54cd\u4e4b\u7c7b\u7684\u3002</p> <p>\u8fd9\u4e00\u9898\u662f\uff0c279E \u4e5f\u662f\uff0c\u5176\u5b9e\u5f88\u7ecf\u5178\u611f\u89c9\uff0c\u4e4b\u524d\u597d\u50cf\u6709\u4e00\u4e2a CF \u7684\u9898\u4e5f\u662f\u7c7b\u4f3c\uff0c\u6709\u70b9\u4e45\u8fdc\u8bb0\u4e0d\u6e05\u695a\u4e86\u3002</p> <p>\u5c31\u662f\u5148\u8003\u8651\u5bf9\u4e8e \\(i = 1\\) \u76f4\u63a5\u66b4\u529b\u505a\u4e00\u6b21\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u632a\u4e00\u6b65\u5c31\u5c11\u4e00\u4e2a\u591a\u4e00\u4e2a\u5143\u7d20\u800c\u5df2\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u52a8\u6001\u7ef4\u62a4\u524d \\(k\\) \u5927\u7684 \\(\\sum\\) \u5c31\u53ef\u4ee5\uff0c\u6bcf\u6b21\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u52a0\u5165\u4e00\u4e2a\u65b0\u5143\u7d20\u770b\u6709\u6ca1\u6709\u53d8\u5316\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u76f4\u63a5 multiset \u7ef4\u62a4\uff0c\u601d\u60f3\u548c\u83ab\u961f\u5f88\u50cf\uff0c\u4f46\u662f\u8fb9\u754c\u597dTM\u70e6\u554a\uff0c\u4e0d\u662f\u5f88\u61c2\u554a\uff0c\u597d\u50cf\u8981\u4e24\u4e2a multiset \u7ef4\u62a4\uff0c\u6211\u4e00\u4e2a multiset \u5047\u4e86\uff0c\u4e0d\u662f\u5f88\u61c2\u3002</p> <p>\u4e24\u4e2a multiset \u7ef4\u62a4\u8fc7\u7a0b\u5c31\u7c7b\u4f3c\u5bf9\u9876\u5806\uff0c\u53ea\u9700\u8981\u5224\u4e0b size \u5c31\u884c\u4e86\uff0c\u53ef\u4ee5\u5c11\u5206\u8ba8\u4e00\u70b9\u3002</p> Code <p>// \u4e0a\u9762\u7684\u4ee3\u7801\u5047\u4e86\u3002</p> <pre><code>// author : black_trees\n\n#include &lt;set&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;cassert&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint N, M, K, a[si], b[si];\n\nclass SuzuiAnri {\nprivate:\ni64 sum; int kth;\nstd::multiset&lt;int&gt; ms;\npublic:\nvoid Init() {\nfor(int i = 1; i &lt;= M; ++i)\nb[i] = a[i];\nsort(b + 1, b + 1 + M);\nfor(int i = 1; i &lt;= K; ++i)\nsum += b[i];\nfor(int i = 1; i &lt;= M; ++i)\nms.insert(a[i]);\nkth = b[K];\n}\ni64 Qsum() { return sum; }\nvoid Do(int i) {\nint x = a[i - 1], y = a[i + M - 1];\nif(K != M) {\nif(x &gt; kth) ms.erase(ms.find(x));\nelse {\nms.erase(ms.find(x));\nkth = *next(ms.find(kth));\nsum -= x, sum += kth;\n}\nif(y &gt; kth) ms.insert(y);\nelse {\nms.insert(y);\nsum += y, sum -= kth;\nkth = *prev(ms.find(kth));\n}\n}           else sum -= x, sum += y;    }\n} DD;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; N &gt;&gt; M &gt;&gt; K;\nfor(int i = 1; i &lt;= N; ++i) cin &gt;&gt; a[i];\nDD.Init(); cout &lt;&lt; DD.Qsum() &lt;&lt; endl; for(int i = 2; i &lt;= N - M + 1; ++i)\nDD.Do(i), cout &lt;&lt; DD.Qsum() &lt;&lt; \" \";\ncout &lt;&lt; endl;\nreturn 0;\n}\n\n/* \u5148\u4e0d\u8003\u8651 K = M\n* \u5982\u679c\u65b0\u52a0\u5165\u7684\u4e3a y, \u8981\u88ab\u5220\u9664\u7684\u4e3a x\n* \u9996\u5148\u8003\u8651 x \u7684\u4f4d\u7f6e\uff1a\n*       \u5982\u679c x \u4e0d\u5c5e\u4e8e\u524d k \u5c0f\uff1a\n*           \u76f4\u63a5\u5220\u9664 x\uff0c\u4e0d\u4f1a\u6709\u4efb\u4f55\u5f71\u54cd\u3002\n*       \u5982\u679c x \u5c5e\u4e8e\u524d k \u5c0f\uff1a\n*           \u5220\u9664 x\uff0c\u7136\u540e kth \u5e94\u8be5\u66f4\u65b0\u4e3a\u539f\u6765 kth \u7684\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u4e3a K &lt; M \u6240\u4ee5\u4e00\u5b9a\u4f1a\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u4e0d\u4f1a\u8d8a\u754c\u3002\n* \u7136\u540e\u8003\u8651 y \u7684\u4f4d\u7f6e\uff1a\n*       \u5982\u679c y \u4e0d\u5c5e\u4e8e\u524d k \u5c0f\uff1a\n*           \u76f4\u63a5\u63d2\u5165 y\uff0c\u4e0d\u4f1a\u6709\u4efb\u4f55\u5f71\u54cd\u3002\n*       \u5982\u679c y \u5c5e\u4e8e\u524d k \u5c0f\uff1a\n*           \u76f4\u63a5\u63d2\u5165 y\uff0c\u7136\u540e\u66f4\u65b0 kth \u4e3a\u73b0\u5728\u7684\u524d\u4e00\u4f4d\uff0c\u5982\u679c K = 1\uff0c\u56e0\u4e3a y \u5c5e\u4e8e\u524d K \u5c0f\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728\uff0c\u5176\u5b83\u4e5f\u4e00\u5b9a\u5b58\u5728\uff0c\u4e0d\u4f1a\u8d8a\u754c\u3002\n* \u7136\u540e K = M \u76f4\u63a5\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n*/\n\n/*\n#include &lt;bits/stdc++.h&gt;\n#define rep(i, n) for (int i = 0; i &lt; (n); ++i)\n\nusing namespace std;\nusing ll = long long;\n\nstruct DS {\n    int k;\n    ll sum;\n    multiset&lt;int&gt; ls, rs;\n    DS(int k=0): k(k), sum(0) {}\n    void ladd(int x) {\n        sum += x;\n        ls.insert(x);\n    }\n    void lerase(multiset&lt;int&gt;::iterator it) {\n        sum -= *it;\n        ls.erase(it);\n    }\n    void add(int x) {\n        ladd(x);\n        if (ls.size() &lt;= k) return;\n        auto it = ls.end(); --it;\n        rs.insert(*it);\n        lerase(it);\n    }\n    void erase(int x) {\n        if (*ls.rbegin() &lt; x) {\n            rs.erase(rs.find(x));\n        }\n        else {\n            lerase(ls.find(x));\n            auto it = rs.begin();\n            ladd(*it);\n            rs.erase(it);\n        }\n    }\n};\n\nint main() {\n    int n, m, k;\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\n\n    vector&lt;int&gt; a(n);\n    rep(i, n) cin &gt;&gt; a[i];\n\n    DS d(k);\n    rep(i, m) d.add(a[i]); \n    cout &lt;&lt; d.sum &lt;&lt; '\\n';\n    rep(i, n-m) {\n        d.add(a[i+m]);\n        d.erase(a[i]);\n        cout &lt;&lt; d.sum &lt;&lt; '\\n';\n    }\n\n    return 0;\n}\n\n\u4f5c\u8005\uff1aNcik\n\u94fe\u63a5\uff1ahttps://www.acwing.com/solution/content/154338/\n\u6765\u6e90\uff1aAcWing\n\u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\n*/\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc281f-xor-minimization", "title": "ABC281F - Xor Minimization", "text": "<p>\u6c42 \\(\\min\\{\\max\\{a_i \\oplus x\\}\\}\\)\uff0c\u5176\u4e2d \\(x\\) \u672a\u77e5\u3002</p> <p>\\(a_i &lt; 2^{30}, 1\\le n \\le 2e5\\)\u3002</p> <p>\u9996\u5148\u89c2\u5bdf\u5185\u5c42\u7684 \\(\\max\\)\uff0c\u53d1\u73b0\u8fd9\u4e2a\u5c31\u662f 01trie \u7684 query \u64cd\u4f5c\u3002</p> <p>\u90a3\u4e48\u95ee\u9898\u5c31\u662f\u600e\u4e48\u6837\u8ba9 01trie \u7684 query \u627e\u5230\u7684\u503c\u6700\u5c0f\u3002</p> <p>\u601d\u8003\u4e00\u4e0b query \u7684\u8fc7\u7a0b\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e0d\u65ad\u53cd\u7740\u8d70\uff0c\u6211\u4eec\u5e0c\u671b\u5b83\u5c3d\u91cf\u5c0f\uff0c\u90a3\u5c31\u662f\u8ba9\u5b83\u7684\u9ad8\u4f4d\u5c3d\u91cf\u4e0d\u80fd\u53cd\u7740\u8d70\uff0c\u4e5f\u5c31\u662f\u5c3d\u91cf\u5728\u9ad8\u4f4d\u627e\u53ea\u6709\u4e00\u4e2a\u6307\u9488\u7684\u8fb9\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u5f88\u597d\u7684\u77e5\u9053\u4e0b\u9762\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u4f60\u540c\u4e00\u5c42\u4e24\u8fb9\u90fd\u80fd\u8d70\u4e00\u4e2a\u6307\u9488\uff0c\u4f46\u662f\u4e0b\u9762\u80fd\u8d70\u7684\u6570\u91cf\u4e0d\u540c\u600e\u4e48\u529e\uff1f</p> <p>\u6240\u4ee5\u6211\u4eec\u8bb0\u5f55\u4e24\u4e2a\u4fe1\u606f\uff0c\u4e00\u4e2a \\(near(u)\\) \u8868\u793a\u9664\u4e86 \\(u\\) \u81ea\u5df1\uff0c\u80fd\u8d70\u5230\u7684\u6700\u8fd1\u7684\u6709\u4e00\u4e2a\u5206\u53c9\u7684\u70b9\u7684\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a \\(cnt(u)\\) \u8868\u793a \\(u\\) \u8fd9\u4e2a\u8282\u70b9\u4e0b\u9762\u6709\u591a\u5c11\u5c42\u80fd\u6709\u4e00\u4e2a\u6307\u9488\u7684\u9009\u62e9\uff0c\u7136\u540e cnt \u9700\u8981\u53cd\u8fc7\u6765\u51b3\u5b9a near\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u975e\u5e38\u9ebb\u70e6\uff0c\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u80fd\u4e0d\u80fd\u76f4\u63a5\u5728 \\(u\\) \u5c31\u786e\u5b9a\u3002</p> <p>\u8003\u8651\u6240\u6709\u6570\u7684\u7b2c \\(i\\) \u4f4d\uff0c\u5982\u679c\u5168\u90e8\u662f \\(0/1\\)\uff0c\u90a3\u4e48 \\(x\\) \u7684\u7b2c \\(i\\) \u4f4d\u4e00\u5b9a\u662f \\(1/0\\)\u3002</p> <p>\u5982\u679c\u6709 \\(0\\) \u6709 \\(1\\)\uff0c\u663e\u7136 \\(x\\) \u7684\u8fd9\u4e00\u4f4d\u9700\u8981\u7531\u4f4e\u4f4d\u7684\u7ed3\u679c\u786e\u5b9a\uff0c\u800c\u4e14\u8fd9\u4e00\u4f4d\u7684\u7ed3\u679c\u4e00\u5b9a\u662f 1\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u4f4e\u4f4d\u7b54\u6848\u66f4\u5c0f\u7684\u5373\u53ef\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5c31\u5206\u6cbb\u4e0b\u53bb\u7b97\u4e00\u4e0b\u7b54\u6848\uff0c\u7136\u540e\u4e0d\u65ad\u5411\u4e0a merge \u5373\u53ef\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5728 01trie \u4e0a\u505a\u3002</p> <p>\u611f\u89c9\u8fd9\u4e2a\u6a21\u578b\u4e5f\u6bd4\u8f83\u7ecf\u5178\uff0c\u5c31\u662f\u5bf9\u4e8e\u4e4b\u540e\u7684\u4fe1\u606f\u53ef\u80fd\u9020\u6210\u5f71\u54cd\u65f6\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u4e0d\u662f\u9012\u5f52\u4e0b\u53bb\u76f4\u63a5\u9884\u5904\u7406\u4fe1\u606f\uff0c\u5c31\u662f\u5148\u5206\u6cbb\u7136\u540e\u5012\u7740\u7b97\u7b54\u6848\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;climits&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\nconst int inf = INT_MAX;\n\nint tot = 1;\nbool tg[si * 31];\nint tr[si * 31][2], val[si * 31];\nvoid insert(int v) {\nint p = 1;\nfor(int i = 30; i &gt;= 0; --i) {\nint ch = (v &gt;&gt; i) &amp; 1;\nval[p] = 1 &lt;&lt; i;\nif(!tr[p][ch]) tr[p][ch] = ++tot;\np = tr[p][ch]; }\ntg[p] = true;\n}\nint query(int p) {\nif(tg[p]) return 0;\nif(!p) return -inf;\nint lans = query(tr[p][0]), rans = query(tr[p][1]);\nif(lans &gt; rans) swap(lans, rans);\nreturn max(val[p] + lans, rans);\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint n, rt = 1; cin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) {\nint x; cin &gt;&gt; x;\ninsert(x);\n}\ncout &lt;&lt; query(1) &lt;&lt; endl;\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> <p>\u8bf4\u53e5\u9c9c\u82b1\uff0c\u53d1\u73b0\u65e9\u4e0a\u7684\u65f6\u5019\u786e\u5b9e\u6e05\u9192\u5f88\u591a\uff0c\u611f\u89c9\u4ee5\u540e\u4e0d\u80fd\u6d6a\u8d39\u65e9\u4e0a\u7684\u65f6\u95f4\u4e86\u3002</p> <p>CF35E \u5168\u662f\u65e9\u4e0a\u6311\u51fa\u91cd\u5927 bug\uff0c\u4eca\u5929\u4e0a\u5348\u505a\u9898\u6548\u7387\u5f88\u9ad8\u3002</p> <p>\u54e6\u8fd8\u6709\u611f\u89c9\u4ee5\u540e\u505a\u9898\u4e4b\u524d\u53ef\u4ee5\u5148\u7ffb\u4e00\u4e0b\u4ee5\u524d\u7684\u535a\u5ba2\u627e\u627e\uff1f\u72b6\u6001\uff1f</p>"}, {"location": "rec/atcf-for-2022-11-12/#cf1770-goodbye2022", "title": "CF1770 - Goodbye2022", "text": "<p>\u611f\u89c9\u662f\u4eca\u5e74\u6253\u7684\u6700\u597d\u7684\u4e00\u573a\u3002</p> <p>\u4ece\u5404\u79cd\u610f\u4e49\u4e0a\u6765\u8bf4\u90fd\u662f\uff0c\u611f\u89c9\u81ea\u5df1\u80fd\u5c1d\u8bd5\u4e00\u4e0b D \u8fd9\u79cd\u62ab\u7740\u535a\u5f08\u8bba\u76ae\u7684\u9898\u5df2\u7ecf\u7b97\u8fdb\u6b65\u4e86\uff0c\u4ee5\u524d\u770b\u5230 both play optimally \u5c31\u4e0d\u6562\u505a\uff08</p> <p>\u56de\u6765\u7684\u5730\u94c1\u4e0a\u548c\u4e00\u4e2a\u7279\u522b\u5389\u5bb3\u7684\u524d MOer \u804a\u5929\uff0c\u4ed6\u8bf4\u4ed6\u505a\u9898\u4e00\u822c\u662f\u8981\u5148\u60f3\u65b9\u6cd5\uff0c\u6ca1\u6709\u786e\u5207\u601d\u8def\u7edd\u5bf9\u4e0d\u5f00\u59cb\u5199\uff0c\u4e0d\u7136\u5c31\u5148\u5c1d\u8bd5\u7b80\u5316\u9898\u76ee\u7136\u540e\u7ee7\u7eed\u601d\u8003\u3002</p> <p>\u800c\u4e14\u4e00\u822c\u6765\u8bf4\u8981\u5c1d\u8bd5\u5206\u6790\u8003\u70b9\u7136\u540e\u627e\u5230\u65b9\u5411\uff0c\u4f7f\u52b2\u5f80\u90a3\u4e2a\u65b9\u5411\u9760\u3002</p> <p>\u800c\u4e14\u4e00\u822c\u6765\u8bf4\u4e0d\u80fd\u6709 phobia\uff0c\u5f97\u5148\u601d\u8003\u4e00\u4e0b\uff0c\u522b\u88ab\u5413\u5230\u4e86\u3002</p> <p>\u611f\u89c9\u5f88\u6709\u9053\u7406\uff01\u8bf4\u7684\u592a\u5bf9\u4e86\uff01</p> <p>\u867d\u7136\u522b\u4eba\u7684\u65b9\u6cd5\u4e0d\u4e00\u5b9a\u9002\u5408\uff0c\u4f46\u662f\u611f\u89c9\u8fd9\u4e2a\u786e\u5b9e\u4f1a\u6bd4\u8f83\u6709\u7528\uff01</p> <p></p>"}, {"location": "rec/atcf-for-2022-11-12/#a-koxia-and-whiteboards", "title": "A - Koxia and Whiteboards", "text": "<p>\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002</p>"}, {"location": "rec/atcf-for-2022-11-12/#b-koxia-and-permutation", "title": "B - Koxia and Permutation", "text": "<p>\u4f60\u9700\u8981\u6784\u9020\u4e00\u4e2a\u6392\u5217 \\(p\\)\uff0c\u4f7f\u5f97 \\(\\max\\limits_{i = 1}^{n - k + 1}\\{\\max(a_i \\dots a_{i + k - 1}) + \\min(a_i \\dots a_{i + k - 1})\\}\\) \u6700\u5c0f\u3002</p> <p>\\(n, k\\) \u7ed9\u5b9a\uff0c\\(2e5\\)\u3002</p> <p>\u6ce8\u610f\u5230\u6211\u4eec\u4e00\u5b9a\u5e0c\u671b\u6574\u4f53\u7684 \\(\\max,\\min\\) \u51d1\u5230\u4e00\u8d77\uff0c\u6211\u4eec\u628a\u4ed6\u4eec\u653e\u5230\u4e00\u4e2a\u533a\u95f4\u4e4b\u540e\u53bb\u6389\u4ed6\u4eec\uff0c\u7136\u540e\u53ef\u4ee5\u9012\u5f52\u7684\u53d1\u73b0\u5c31\u662f\u4e0d\u65ad\u8ba9 \\(\\max \\min\\) \u653e\u5230\u4e00\u8d77\u3002</p> <p>\u7136\u540e\u778e\u6784\u9020\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u6211\u5f00\u59cb\u7684\u601d\u8def\u662f\u76f4\u63a5\u653e\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\uff0c\u4f46\u662f\u611f\u89c9\u6bd4\u8f83\u9ebb\u70e6\uff0c\u7136\u540e\u53d1\u73b0\u5176\u5b9e\u7b54\u6848\u548c \\(k\\) \u65e0\u5173\uff0c\u76f4\u63a5 \\(\\max \\min\\) \u8fd9\u6837\u6328\u7740\u653e\u5c31\u884c\u4e86\u3002</p> \u8d5b\u65f6Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint a[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nint n, k;\ncin &gt;&gt; n &gt;&gt; k;\nfor(int i = 1; i &lt;= n; ++i) {\nif(i &amp; 1) cout &lt;&lt; (n - i / 2) &lt;&lt; \" \";\nelse cout &lt;&lt; (i &gt;&gt; 1) &lt;&lt; \" \";\n}\n// int l = 1, r = n;\n// int pos = 1;\n// while(l &lt;= r) {\n//\n// }\n// for(int i = 1; i &lt;= n; ++i) cout &lt;&lt; a[i] &lt;&lt; \" \", a[i] = 0;\ncout &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#c-koxia-and-number-theory", "title": "C - Koxia and Number Theory", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 \\(a\\), \u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u6b63\u6574\u6570 \\(x\\) \u4f7f\u5f97 \\(\\forall 1 \\le i &lt; j \\le n, \\gcd(a_i + x, a_j + x) = 1\\)\u3002</p> <p>\\(1\\le n \\le 2e5, 1\\le a_i 1e18\\)</p> <p>\u95ee\u9898\u7b49\u4ef7\u4e8e\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u4e2a \\(x\\) \u4f7f\u5f97\u6bcf\u4e00\u4e2a\u503c\u57df\u5185\u7684\u8d28\u6570\u90fd\u81f3\u591a\u6574\u9664\u4e00\u4e2a \\(a_i + x\\)\u3002</p> <p>\u4f46\u662f\u503c\u57df\u662f \\(10^{18}\\)\uff0c\u601d\u8003\u4e00\u4e0b\u80fd\u5426\u7f29\u5c0f\u8303\u56f4\u3002</p> <p>\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u8d28\u6570 \\(p\\)\uff0c\u663e\u7136\u6211\u4eec\u8981\u505a\u7684\u662f\u5bf9 \\(a_i \\mod p\\) \u610f\u4e49\u4e0b\u7684\u4f59\u6570\u8ba1\u6570\uff0c\u6240\u4ee5\u5176\u5b9e\u5bf9\u4e8e\u5f53\u524d\u679a\u4e3e\u5230\u7684 \\(p\\)\uff0c\u5982\u679c\u5b83\u5927\u4e8e \\(n\\)\uff0c\u663e\u7136\u4e00\u5b9a\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u4f59\u6570\u7684\u51fa\u73b0\u6b21\u6570\u6570\u662f\u4e00\u5b9a\u4f1a\u5927\u4e8e \\(2\\) \u7684\uff0c\u6240\u4ee5\u5bc4\u3002</p> <p>\u90a3\u4e48\u5c31\u679a\u4e3e \\([2,n]\\) \u8303\u56f4\u5185\u7684\u8d28\u6570\u5c31\u884c\u4e86\uff0c\u53d1\u73b0\u5176\u5b9e\u5408\u6570\u5bf9\u7b54\u6848\u6ca1\u5f71\u54cd\uff0c\u6240\u4ee5\u8d28\u6570\u90fd\u4e0d\u9700\u8981\u5224\u4e86\u3002</p> <p>\u8bb0\u5f97\u5224\u76f8\u7b49\u7684 \\(a_i, a_j\\)\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\ni64 a[si], b[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nbool f = false;\nint n; cin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = i + 1; j &lt;= n; ++j) {\nif(a[i] == a[j]) {\nf = true; break;\n}\n}\nif(f) break;\n}\nif(f) { cout &lt;&lt; \"No\" &lt;&lt; endl; continue; }\nfor(int p = 2; p &lt;= n; ++p) {\nfor(int i = 0; i &lt;= p; ++i) b[i] = 0;\nfor(int i = 1; i &lt;= n; ++i) b[a[i] % p] += 1;\nbool ff = false;\nfor(int i = 0; i &lt; p; ++i) if(b[i] &lt;= 1) { ff = true; break; } if(ff != true) { f = true; break; }\n}\nif(f) cout &lt;&lt; \"No\" &lt;&lt; endl;\nelse cout &lt;&lt; \"Yes\" &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#d-koxia-and-game", "title": "D - Koxia and Game", "text": "<p>\u7ed9\u5b9a\u4e24\u4e2a\u5e8f\u5217 \\(a, b\\)\uff0c\u8981\u6c42\u6784\u9020\u4e00\u4e2a\u5e8f\u5217 \\(c\\) \u4f7f\u5f97\u4ee5\u4e0b\u6e38\u620f\u5148\u624b\u5fc5\u80dc\u3002</p> <p>\u5728\u6e38\u620f\u7684\u7b2c \\(i\\) \u8f6e\uff0c\u5148\u624b\u4ece \\(a_i, b_i, c_i\\) \u5f53\u4e2d\u9009\u53d6\u4e00\u4e2a\u6570\u5220\u6389\uff0c\u7136\u540e\u540e\u624b\u5728\u5269\u4e0b\u7684\u4e24\u4e2a\u6570\u91cc\u9762\u9009\u62e9\u4e00\u4e2a\uff0c\u8fd9\u6b21\u51b3\u7b56\u9009\u62e9\u7684\u6570\u8bb0\u4e3a \\(d_i\\)\u3002</p> <p>\u5982\u679c \\(d\\) \u662f\u4e00\u4e2a \\(1\\sim n\\) \u7684\u6392\u5217\uff0c\u90a3\u4e48\u5148\u624b\u83b7\u80dc\uff0c\u53cc\u65b9\u5747\u91c7\u53d6\u6700\u4f18\u7b56\u7565\u3002</p> <p>\u8bf7\u95ee\u6709\u591a\u5c11\u79cd\u5408\u6cd5\u7684\u6784\u9020\u65b9\u6848\uff1f\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\\(1\\le n \\le 1e5\\)\u3002</p> <p>\u6ce8\u610f\u5230\u8fd9\u91cc\u662f\u5408\u6cd5\u65b9\u6848\u8ba1\u6570\uff0c\u6240\u4ee5\u663e\u7136\u6211\u4eec\u9700\u8981\u77e5\u9053\u4ec0\u4e48\u6837\u7684\u65b9\u6848\u662f\u5408\u6cd5\u7684\u3002</p> <p>\u89c2\u5bdf\u6837\u4f8b\u53d1\u73b0\u4f1a\u6709\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u4e0d\u662f\u5f88\u597d\u5224\u5b9a\uff0c\u5148\u8003\u8651\u6709\u89e3\u600e\u4e48\u7b97\u3002</p> <p>\u8d5b\u65f6\u8fd9\u4e2a\u65f6\u5019\u7a81\u7136\u5192\u51fa\u6765\u4e00\u4e2a\u601d\u8def\uff0c\u6bd4\u8f83\u795e\u5947\uff0c\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u60f3\u5230\u7684\uff0c\u53ef\u80fd\u662f\u60f3\u5c1d\u8bd5\u5206\u6790\u8fd9\u4e2a\u6700\u4f18\u7b56\u7565\u662f\u4ec0\u4e48\u7684\u65f6\u5019\u60f3\u5230\u7684\u3002</p> <p>\u5c31\u662f\u53d1\u73b0\u5176\u5b9e\u8fd9\u4e2a\u6e38\u620f\u662f\u7531\u5148\u624b\u64cd\u7eb5\u7684\uff0c\u548c\u540e\u624b\u5e76\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002</p> <p>\u56e0\u4e3a\u53ea\u7ed9\u51fa\u4e86 \\(a_i, b_i\\)\uff0c\u6240\u4ee5\u5176\u5b9e\u5148\u624b\u53ef\u4ee5\u5f3a\u5236\u540e\u624b\u9009\u62e9 \\(a_i\\ \\text{or}\\ b_i\\)\uff0c\u5177\u4f53\u65b9\u5f0f\u662f\u4ee4 \\(c_i\\) \u548c\u9700\u8981\u5f3a\u5236\u540e\u624b\u9009\u7684\u90a3\u4e2a\u6570\u4e00\u6837\uff0c\u7136\u540e\u5220\u6389\u53e6\u5916\u4e00\u4e2a\u4e0d\u540c\u7684\u5373\u53ef\u3002</p> <p>\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u662f\u4e0d\u662f\u6700\u4f18\u7b56\u7565\uff0c\u53d1\u73b0\u4e00\u5b9a\u662f\uff0c\u6bd4\u5982 <code>1 1 2</code>\uff0c\u4f60\u80af\u5b9a\u4e0d\u5e0c\u671b\u540e\u624b\u80fd\u6709\u66f4\u591a\u9009\u62e9\uff0c\u4e0d\u7136\u4f60\u6ca1\u6cd5\u8003\u8651\u540e\u9762\u7684\u60c5\u51b5\uff0c\u6bd4\u8f83\u5bb9\u6613\u5bc4\u6389\uff0c\u4e8e\u662f\u5408\u7406\u63a8\u6d4b\u53ea\u80fd\u8fd9\u4e48\u5e72\uff01</p> <p>\u7136\u540e\u8003\u8651\u600e\u4e48\u7b97\u8d21\u732e\uff0c\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u597d\u50cf\u53ef\u4ee5\u62bd\u8c61\u6210\u56fe\u8bba\uff0c\u5c31\u76f4\u63a5\u5bf9\u4e8e \\(i\\)\uff0c\u8fde \\((a_i, b_i)\\) \u8fd9\u6761\u65e0\u5411\u8fb9\u5c31\u884c\u3002</p> <p>\u5982\u679c\u627e\u5230\u4e86\u4e00\u4e2a\u81ea\u73af\uff0c\u8fd9\u91cc\u7684\u8d21\u732e\u663e\u7136\u662f \\(n\\)\uff0c\u56e0\u4e3a \\(c_i\\) \u53d6\u4efb\u610f\u4e00\u4e2a\u6570\uff0c\u5148\u624b\u90fd\u53ef\u4ee5\u5220\u6389\uff0c\u5c31\u6bd4\u5982 <code>1 1</code> \u8fd9\u6837\u3002</p> <p>\u7136\u540e\u6ce8\u610f\u5230\u5176\u5b9e\u5408\u6cd5\u65b9\u6848\u5e94\u8be5\u662f\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\uff0c\u5982\u679c\u73af\u4e0d\u662f\u81ea\u73af\uff0c\u90a3\u4e48\u8d21\u732e\u4e00\u5b9a\u662f \\(2\\)\uff0c\u56e0\u4e3a\u4f60\u6bcf\u6b21\u4e4b\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u7136\u540e\u8fde\u901a\u5757\u91cc\u9762\u7684\u65b9\u6848\u662f\u4f1a\u76f8\u4e92\u5f71\u54cd\u7684\uff0c\u4f60\u597d\u6bd4\u9009\u4e86\u4e24\u6761\u8def\u8d70\u51fa\u53bb\u8fd9\u6837\u3002</p> <p>\u90a3\u4e48\u5176\u5b9e\u81ea\u73af\u7684\u8d21\u732e\u5e94\u8be5\u5728\u5b83\u6240\u5c5e\u7684\u8054\u901a\u5757\u91cc\u9762\u76f4\u63a5\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5 dfs \u4e00\u4e0b\uff0c\u5224\u4e00\u4e0b\u81ea\u73af\u548c\u65e0\u89e3\u5c31\u884c\u4e86\u3002</p> <p>\u65e0\u89e3\u663e\u7136\u5c31\u662f\u8fde\u901a\u5757\u4e0d\u662f\u57fa\u73af\u6811\uff0c\u4e5f\u5c31\u662f\u6811\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u5f88\u597d\u505a\u4e86\u3002</p> <p>\u5f53\u7136\u4e5f\u6709\u53ef\u80fd\u662f\u51d1\u4e0d\u51fa\u6392\u5217\uff0c\u8fd9\u4e2a\u7279\u5224 vis \u5c31\u884c\u3002</p> <p>\u8fd9\u91cc\u653e\u7684\u662f\u8d5b\u65f6\u4ee3\u7801\uff0c\u9519\u8bef\u601d\u8def\u7684\u4e1c\u897f\u6ca1\u6765\u5f97\u53ca\u5220\uff0c\u51d1\u5408\u7740\u770b\u3002</p> <p>\u8fd9\u9898\u4e5f\u6bd4\u8f83\u6709\u7eaa\u5ff5\u610f\u4e49\u611f\u89c9\uff0c\u6bd5\u7adf\u662f 15 \u5c81\u7684\u6211\u505a\u7684\u6700\u540e\u4e00\u9898\uff0c16 \u5c81\u7684\u6211\u505a\u7684\u7b2c\u4e00\u9898\u3002</p> <p>\u70b9\u540d\u6279\u8bc4 15 \u5c81\u7684\u6211\uff0c\u600e\u4e48\u5224\u91cd\u590d\u4e8c\u5143\u7ec4\u8fd9\u79cd\u5047\u505a\u6cd5\u90fd\u80fd\u60f3\u5230 </p> Code <pre><code>// author : black_trees\n\n#include &lt;map&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\nconst int mod = 998244353;\n\nint a[si], b[si];\nstd::map&lt;std::pair&lt;int, int&gt;, bool&gt; mp;\nbool vis[si];\nint head[si], tot = 0;\nstruct Edge { int ver, Next; } e[si &lt;&lt; 1];\ninline void add(int u, int v) { e[tot] = (Edge){v, head[u]}, head[u] = tot++; } int dg, sf, deg[si];\nvoid dfs(int u, int fa) {\nvis[u] = true; dg -= 2;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver; dg++;\nif(u == v) sf++; // self ring.\nif(v == fa || vis[v] == true) continue;\ndfs(v, u);\n}   }\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nbool f = false; mp.clear(), tot = 0;\nint n, ans = 1ll; cin &gt;&gt; n;\nfor(int i = 0; i &lt;= n + 10; ++i) vis[i] = false, head[i] = -1, deg[i] = 0;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; b[i];\n// for(int i = 1; i &lt;= n; ++i) {\n// std::pair&lt;int, int&gt; t = make_pair(min(a[i], b[i]), max(a[i], b[i]));\n// if(mp[t] == true) {  f = true; break; }\n// mp[t] = true;\n// if(a[i] == b[i]) ans = (ans * n) % mod, vis[i] = true;\n// else add(a[i], b[i]), add(b[i], a[i]);\n// }\nfor(int i = 1; i &lt;= n; ++i) deg[a[i]] ++, deg[b[i]] ++, add(a[i], b[i]), add(b[i], a[i]);\n// if(f) { cout &lt;&lt; \"0\" &lt;&lt; endl; continue; }\nfor(int i = 1; i &lt;= n; ++i) {\nif(!vis[i]) {\ndg = 0, sf = 0, dfs(i, 0);\nif(dg != 0) { ans = 0; break; }\nif(sf) ans = (ans * n) % mod;\nelse ans = (ans + ans) % mod; }\n}\nfor(int i = 1; i &lt;= n; ++i) {\nif(!deg[i]) { ans = 0; break; }\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// dottle : 364577\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc282d-make-bipartite-2", "title": "ABC282D - Make Bipartite 2", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a \\(N\\) \u4e2a\u70b9\uff0c\\(M\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6c42\u95ee\u6709\u591a\u5c11\u5bf9\u8fd8\u672a\u7ecf\u8fde\u63a5\u7684\u70b9\u5bf9\u6ee1\u8db3\u5728\u8fde\u63a5\u5b83\u4eec\u540e\uff0c\u8be5\u56fe\u4e3a\u4e00\u4e2a\u4e8c\u5206\u56fe.</p> <p>\u6ce8\u610f\u8fd9\u91cc\u70b9\u5bf9 \\((u,v)\\) \u548c\u70b9\u5bf9 \\((v,u)\\) \u662f\u540c\u4e00\u5bf9\u70b9\u5bf9\u3002</p> <p>\u6570\u636e\u4fdd\u8bc1\u6ca1\u6709\u81ea\u73af\u4e0e\u91cd\u8fb9\u3002</p> <p>\u9996\u5148\u8003\u8651\u76f4\u63a5\u5bf9 \\(G\\) \u9ed1\u767d\u67d3\u8272\u5224\u65ad\u4e00\u4e0b\u6709\u6ca1\u6709\u5408\u6cd5\u7684\u89e3\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u5176\u5b9e\u53ef\u4ee5\u679a\u4e3e\u767d\u8272\u70b9\uff0ccheck \u4e00\u4e0b\u80fd\u548c\u4ed6\u5339\u914d\u7684\u9ed1\u70b9\u6709\u591a\u5c11\uff08\u5c31\u662f\u9ed1\u70b9\u603b\u6570\u51cf\u53bb\u5f53\u524d\u70b9\u7684\u5ea6\u6570\uff09\u3002</p> <p>\u4f46\u662f\u6ce8\u610f\u5230 \\(G\\) \u53ef\u80fd\u662f\u51e0\u4e2a\u5355\u72ec\u7684\u8054\u901a\u5206\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u8003\u8651\u5206\u91cf\u5916\u7684\u65b9\u6848\u3002\u6ce8\u610f\u5230\u5bf9\u4e8e\u5f53\u524d\u70b9\uff0c\u5982\u679c\u662f\u548c\u5916\u9762\u7684\u8fde\u901a\u5206\u91cf\u8fde\uff0c\u600e\u4e48\u8fde\u90fd\u884c\u3002</p> <p>\u4f46\u76f4\u63a5\u8fd9\u4e48\u5e72\u4f1a\u7b97\u91cd\uff0c\u539f\u56e0\u663e\u7136\uff0c\u8981\u5904\u7406\u7684\u8bdd\u4f1a\u6bd4\u8f83\u590d\u6742\u3002</p> <p>\u8fd9\u6837\u662f\u6b63\u7740\u7b97\uff0c\u975e\u5e38\u9ebb\u70e6\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5012\u7740\u7b97\uff0c\u4e5f\u7b97\u662f\u4e00\u79cd\u6bd4\u8f83\u91cd\u8981\u7684\u60f3\u6cd5\u6765\u907f\u514d\u5927\u5206\u8ba8\u3002</p> <p>\u6211\u4eec\u5047\u8bbe \\(G\\) \u662f\u5b8c\u5168\u56fe\uff0c\u4e5f\u5c31\u662f\u628a\u7f3a\u7684\u8fb9\u90fd\u8fde\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u6709\u591a\u5c11\u8fb9\u662f\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u91cc\u9762\u8fde\u63a5\u4e86\u540c\u4e00\u79cd\u989c\u8272\u7684\u8fb9\u5373\u53ef\u3002</p> <p>\u8bbe\u6709 \\(q\\) \u4e2a\u8fde\u901a\u5757\uff0c\u7b2c \\(i\\) \u4e2a\u8fde\u901a\u5757\u6709\u9ed1\u70b9 \\(a_i\\) \u4e2a\uff0c\u767d\u70b9 \\(b_i\\) \u4e2a\u3002</p> <p>\u8bb0 \\(f(x) = x^2 - x\\)\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f \\(f(n) - m - \\sum\\limits_{i = 1}^q [f(a_i) + f(b_i)]\\)\u3002</p> <p>\u7b97\u662f\u5f88\u57fa\u7840\u7684\u6b63\u96be\u5219\u53cd\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m;\nint tot = 0, head[si];\nstruct Edge { int ver, Next; } e[si &lt;&lt; 1];\ninline void add(int u, int v) { e[tot] = (Edge){v, head[u]}, head[u] = tot++; }\n\nint c[si], ok = 0;\nint cnt, a[si], b[si];\nvoid dfs(int u, int col) {\nc[u] = col;\nif(col == 1) a[cnt]++;\nelse b[cnt]++;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(c[v] == col) { ok = -1; return; }\nif(c[v] == 3 - col) continue;\nif(c[v] == 0) dfs(v, 3 - col);\n}\nreturn;\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(c, 0, sizeof c);\nmemset(head, -1, sizeof head);\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v; cin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n}\n\ni64 ans = (1ll * n * (n - 1)) / 2ll - m;\nfor(int i = 1; i &lt;= n; ++i) {\nif(!c[i]) {\n++cnt, dfs(i, 1);\nif(ok == -1) {\ncout &lt;&lt; \"0\" &lt;&lt; endl;\nreturn 0;\n}\nans -= (1ll * a[cnt] * (a[cnt] - 1)) / 2ll;\nans -= (1ll * b[cnt] * (b[cnt] - 1)) / 2ll;\n}        }\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc282e-choose-two-and-eat-one", "title": "ABC282E - Choose Two and Eat One", "text": "<p>\u9898\u9762\u6682\u7565</p> <p>\u600e\u4e48\u5c31\u662f\u6700\u5927\u751f\u6210\u6811\u554a\u5367\u69fd\u3002</p> <p>\u5c31\u662f \\((x, y)\\) \u8fde\u4e00\u6761 \\(x^y + y^x (\\mod m)\\) \u7684\u8fb9\uff0c\u7136\u540e\u6700\u5927\u751f\u6210\u6811\u5c31\u884c\u4e86\u3002</p> <p>\u611f\u89c9\u8981\u60f3\u5230\u8fd9\u4e2a\u5e94\u8be5\u9700\u8981\u6ce8\u610f\u5230\u9009 n - 1 \u4e2a\u5427\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\n#define int i64\n\nconst int si = 5e2 + 10;\n\nint n, m;\nint a[si];\nint qpow(int v, int b, int mod) {\nint ret = 1 % mod;\nfor(; b; b &gt;&gt;= 1) {\nif(b &amp; 1) ret = (ret * v % mod) % mod;\nv = (v * v % mod) % mod; }\nreturn ret % mod;\n}\nstruct Edge {\nint x, y, w;\nbool operator &lt; (const Edge &amp;b) const {\nreturn w &gt; b.w;\n}\n} e[si * si];\nint pa[si], cnt = 0;\ninline int root(int x) {\nif(pa[x] != x)\npa[x] = root(pa[x]);\nreturn pa[x];\n}\nvoid Merge(int u, int v) {\nint ru = root(u), rv = root(v);\nif(ru == rv) return;\npa[ru] = rv; return;\n}\n\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; a[i], pa[i] = i;\n}\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = i + 1; j &lt;= n; ++j) {\ne[++cnt] = (Edge){i, j, (qpow(a[i], a[j], m) + qpow(a[j], a[i], m)) % m};\n}\n}\nint ans = 0;\nsort(e + 1, e + 1 + cnt);\nfor(int i = 1; i &lt;= cnt; ++i) {\nint u = e[i].x, v = e[i].y;\nif(root(u) == root(v)) continue;\nans = (ans + e[i].w), Merge(u, v);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc282f-union-of-two-sets", "title": "ABC282F - Union of Two Sets", "text": "<p>\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898</p> <ul> <li> <p>\u9996\u5148\uff0c\u7ed9\u51fa\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\) \uff08\\(1\\le n\\le 4000\\)\uff09\uff0c\u4f60\u9700\u8981\u6784\u9020 \\(m\\)\uff08\\(1\\le m\\le 50000\\)\uff09 \u4e2a\u533a\u95f4 \\([l_i,r_i]\\)\uff0c\u6ee1\u8db3 \\(1\\le l_i \\le r_i \\le n\\)\uff0c\u8f93\u51fa \\(m\\) \u548c\u8fd9 \\(m\\) \u4e2a\u533a\u95f4\uff0c\u8fd9\u4e9b\u533a\u95f4\u7684\u7f16\u53f7\u6309\u8f93\u51fa\u987a\u5e8f\u4f9d\u6b21\u4e3a \\(1,2,\\cdots ,m\\)\u3002</p> </li> <li> <p>\u7136\u540e\uff0c\u7ed9\u51fa\u4e00\u4e2a\u6b63\u6574\u6570 \\(q\\)\uff08\\(1\\le q\\le 10^5\\)\uff09\uff0c\u8868\u793a\u6709 \\(q\\) \u6b21\u8be2\u95ee\u3002\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u7ed9\u5b9a\u533a\u95f4 \\([l,r]\\)\uff0c\u4f60\u8981\u627e\u5230\u4e24\u4e2a\u6574\u6570 \\(i,j\\)\uff08\\(1\\le i,j \\le n\\)\uff0c\\(i\\) \u53ef\u4ee5\u7b49\u4e8e \\(j\\)\uff09\uff0c\u6ee1\u8db3\u5728\u7b2c\u4e00\u6b65\u4e2d\u6784\u9020\u7684\u533a\u95f4\u4e2d \\([l_i,r_i]\\) \u4e0e \\([l_j,r_j]\\) \u7684\u5e76\u96c6\u7b49\u4e8e \\([l,r]\\)\uff0c\u8f93\u51fa \\([i,j]\\)\u3002</p> </li> </ul> <p>\u4ea4\u4e92\u9898\uff0c\u611f\u89c9\u5c31\u662f\u4ec0\u4e48\u795e\u4ed9\u6784\u9020\u3002</p> <p>\u6309\u5c3f\u6027\u6765\u770b\uff0c\u4ea4\u4e92\u9898\u4e00\u822c\u4f1a\u9650\u5236\u6784\u9020\u6216\u8005\u64cd\u4f5c\u7684\u6b21\u6570\uff0c\u6240\u4ee5\u89c2\u5bdf\u6570\u636e\u8303\u56f4\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002</p> <p>\u663e\u7136 \\(m\\) \u662f\u8d8a\u5927\u8d8a\u597d\uff0c\u6211\u4eec\u76f4\u63a5\u5f53\u4f5c \\(5\\times 10^4\\) \u5904\u7406\u3002</p> <p>\u7136\u540e\u53d1\u73b0 \\(n\\) \u662f \\(4\\times 10^3\\)\uff0c\u6211\u4eec\u5e0c\u671b\u662f\u80fd\u51d1\u51fa\u6240\u6709\u533a\u95f4\uff0c\u6240\u4ee5\u4e0d\u59a8\u8003\u8651\u679a\u4e3e \\(i \\in [1,n]\\) \u7136\u540e\u7ed9\u6bcf\u4e2a \\(i\\) \u5e73\u5747\u5206\u914d\u4e00\u4e0b\u3002</p> <p>\u53d1\u73b0\u6bcf\u4e2a \\(i\\) \u80fd\u5206\u5230 \\(m / n = 12.5\\) \u4e2a\u533a\u95f4\uff0c\u4e00\u822c\u6765\u8bf4\u4ea4\u4e92\u9898\u4f1a\u5e26 \\(\\log, 2^n\\) \u8fd9\u6837\u7684\u5f62\u5f0f\uff0c\u4e8e\u662f\u6211\u4eec\u770b \\(2^{12.5}\\) \u5927\u6982\u662f\u591a\u5c11\uff0c\\(2^{12}\\) \u662f \\(4096 &gt; 4\\times 10^3\\)\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u96be\u731c\u5230\u53ef\u80fd\u662f\u500d\u589e\u7684\u5f62\u5f0f\u3002</p> <p>\u4e8e\u662f\u7ed9\u6bcf\u4e2a \\(i\\) \u5206\u914d\u957f\u5ea6\u4e3a \\(2^j, j \\in [0, n)\\) \u7684\u533a\u95f4\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684\u65f6\u5019\u60f3\u529e\u6cd5\u51d1\u5c31\u884c\u4e86\uff1f</p> <p>\u8fd9\u6837\u80fd\u51d1\u51fa\u5b8c\u6574\u7684\u533a\u95f4\u5417\uff1f\u76f4\u89c9\u4e0a\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u6709\u90a3\u4e2a\u5206\u89e3\u6210 \\(2\\) \u7684\u6b21\u5e42\u7684\u7ed3\u8bba\u3002\u5148\u8bd5\u4e00\u8bd5\u3002</p> <p>\u786e\u5b9e\u662f\u8fd9\u6837\u7684\uff0c\u8fd9\u4e1c\u897f\u662f st \u8868\u554a\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;map&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cassert&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n// #define endl '\\n'\n// interactive problem, use endl to flush the buffer.\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 4e3 + 10;\n\nint n, m, q;\nstd::vector&lt;int&gt; l[si], r[si];\nstd::map&lt;std::pair&lt;int, int&gt;, int&gt; mp;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmp.clear();\ncin &gt;&gt; n; int t = (int)(log(n) / log(2)) + 1;\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 0; j &lt;= t; ++j) { // ? is this upperbound right?\nif(i + (1 &lt;&lt; j) - 1 &gt; n) continue;\n++m, mp[make_pair(i, i + (1 &lt;&lt; j) - 1)] = m;            r[i].push_back(i + (1 &lt;&lt; j) - 1);\nl[i + (1 &lt;&lt; j) - 1].push_back(i);\n}\n}\n\ncout &lt;&lt; m &lt;&lt; endl;\nfor(int i = 1; i &lt;= n; ++i) {\nfor(auto j : r[i])\ncout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; j &lt;&lt; endl;\n}\n\ncin &gt;&gt; q;\nwhile(q--) {\nint L, R; cin &gt;&gt; L &gt;&gt; R;\nint a, b;\nauto it = --upper_bound(r[L].begin(), r[L].end(), R);\nauto itt = lower_bound(l[R].begin(), l[R].end(), L);\na = mp[make_pair(L, *it)], b = mp[make_pair(*itt, R)];\ncout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b &lt;&lt; endl, assert(min(L, *itt) == L &amp;&amp; max(R, *it) == R);\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc283d-scope", "title": "ABC283D - Scope", "text": "<p>\u5047\u8bbe\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ea\u5305\u542b <code>(</code>\uff0c<code>)</code>\u548c\u5c0f\u5199\u5b57\u6bcd\u3002\u5982\u679c\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u80fd\u4f7f\u5b57\u7b26\u4e32\u4e3a\u7a7a\uff0c\u5219\u79f0\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e3a\u597d\u7684\uff1a</p> <ul> <li>\u5220\u9664\u6240\u6709\u5c0f\u5199\u5b57\u6bcd</li> <li>\u4e0d\u505c\u5730\u5220\u9664\u8fde\u7eed\u7684<code>()</code></li> </ul> <p>\u7ed9\u5b9a\u4e00\u4e2a\u597d\u7684\u5b57\u7b26\u4e32 \\(S\\)\u3002\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u7684\u5c0f\u5199\u5b57\u6bcd\u5bf9\u5e94\u4e00\u4e2a\u5c0f\u7403\u3002\u6b64\u5916\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u7bb1\u5b50\u3002</p> <p>\u4e00\u4e2a\u4eba\u6309\u7167 \\(1,2,3,\\cdots,|S|\\) \u7684\u987a\u5e8f\u53d6\u7403\uff1a</p> <ul> <li>\u5982\u679c \\(S_i\\) \u4e3a<code>(</code>\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002</li> <li>\u5982\u679c \\(S_i\\) \u4e3a\u5c0f\u5199\u5b57\u6bcd\uff0c\u5c31\u5c06\u8fd9\u4e2a\u5c0f\u7403\u653e\u5165\u7bb1\u5b50\u4e2d\u3002\u5982\u679c\u8fd9\u4e2a\u5c0f\u7403\u5df2\u7ecf\u51fa\u73b0\u5728\u7bb1\u5b50\u4e2d\uff0c\u4ed6\u4f1a\u6655\u5012\u3002</li> <li>\u5982\u679c \\(S_i\\) \u4e3a<code>)</code>\uff0c\u53d6\u5c0f\u4e8e \\(i\\) \u7684\u6700\u5927\u7684 \\(j\\)\uff0c\u4f7f \\(S_i \\sim S_j\\) \u8fd9\u4e2a\u5b50\u4e32\u662f\u597d\u7684\u3002\u5c06 \\(j\\) \u5230 \\(i\\) \u64cd\u4f5c\u4e2d\u653e\u5165\u7684\u5c0f\u7403\u5168\u90e8\u53d6\u51fa\u3002</li> </ul> <p>\u8fd9\u4e0d\u5c31\u5de8\u5927\u8822\u4e00\u4e2a\u9898\uff0c\u663e\u7136\u53ea\u80fd\u6700\u8fd1\u7684\u5de6\u53f3\u62ec\u53f7\u914d\u5bf9\uff0c\u8bb0\u5f55\u4e00\u4e0b\u3001\u6a21\u62df\u6ca1\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;stack&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 3e5 + 10;\n\nint cnt[si][31];\nvoid solve() {\nstring s; cin &gt;&gt; s, s = ' ' + s;\nint n = s.size() - 1;\nstd::stack&lt;int&gt; stk;\nfor(int i = 1; i &lt;= n; i++) {\nfor(int j = 0; j &lt; 26; j++) cnt[i][j] = cnt[i - 1][j];\nif(s[i] == '(') stk.push(i);\nelse if(s[i] == ')') {\nfor(int j = 0; j &lt; 26; j++) cnt[i][j] = cnt[stk.top()][j];\nstk.pop();\n}\nelse {\nif(cnt[i][s[i] - 'a'] &gt;= 1) { cout &lt;&lt; \"No\" &lt;&lt; endl; return;\n}\ncnt[i][s[i] - 'a']++;\n}\n}\ncout &lt;&lt; \"Yes\" &lt;&lt; endl;\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nsolve();\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc283e-dont-isolate-elements", "title": "ABC283E - Don't Isolate Elements", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a \\(n\\times m\\) \u7684 \\(01\\) \u77e9\u9635 \\(a\\)\uff0c\u79f0\u4f4d\u4e8e\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u5143\u7d20\u4e3a \\(a_{i,j}\\)\u3002</p> <p>\u4f60\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u7684\u64cd\u4f5c\u4efb\u610f\u6b21\uff08\u53ef\u4ee5\u662f \\(0\\) \u6b21\uff09\uff1a -  \u9009\u62e9\u4efb\u610f\u4e00\u884c\uff0c\u7ffb\u8f6c\u6b64\u884c\u5185\u7684\u6240\u6709\u5143\u7d20\u3002</p> <p>\u6211\u4eec\u79f0 \\(a_{i,j}\\) \u88ab\u9694\u79bb\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e0e\u5176\u56db\u8054\u901a\u7684\u56db\u4e2a\u5143\u7d20 \\(a_{i - 1,j}, a_{i + 1, j}, a_{i, j - 1}, a_{i, j + 1}\\) \u7684 \\(01\\) \u6027\u4e0e\u5176\u5747\u4e0d\u76f8\u540c\u3002</p> <p>\u8bf7\u8f93\u51fa\u4f7f\u5f97\u7ed9\u5b9a\u77e9\u9635\u4e2d\u6ca1\u6709\u5143\u7d20\u88ab\u9694\u79bb\u6240\u9700\u8981\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\u5982\u679c\u65e0\u8bba\u5982\u4f55\u64cd\u4f5c\u90fd\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\u5219\u8f93\u51fa <code>-1</code>\u3002</p> <p>\\(2\\le n, m \\le 1000\\)\u3002</p> <p>\u4e0a\u6b21\u770b\u5230\u8fd9\u79cd\u9898\u662f\u4e00\u4e2a\u5173\u706f\u7684\u9898\uff0c\u5c31\u662f <code>0 1 0</code> -&gt; <code>1 0 1</code> \u7684\u8fd9\u79cd\uff0c\u95ee\u5230\u8fbe\u5408\u6cd5\u72b6\u6001\u6700\u5c0f\u6b65\u6570\uff0c\u597d\u50cf\u662f\u4e2a bfs\u3002 </p> <p>\u6700\u5927\u7684\u95ee\u9898\u662f\u6211\u4e0d\u662f\u5f88\u80fd\u627e\u5230\u8fd9\u91cc\u9762\u7684\u4e00\u4e2a\u201c\u679a\u4e3e\u987a\u5e8f\u201d\uff0c\u6240\u4ee5\u7ecf\u5e38\u60f3\u4e0d\u51fa\u6765\u3002</p> <p>\u6ce8\u610f\u5230\u4e00\u4e2a\u4e8b\u60c5\u662f\uff0c\u6ca1\u6709\u5b64\u7acb\u5143\u7d20\u7b49\u4ef7\u4e8e\u6ca1\u6709\u5927\u5c0f\u4e3a \\(1\\) \u7684\u8054\u901a\u5757\uff0c\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u5f62\u5f0f\u5316\u8fd9\u4e2a\u64cd\u4f5c\u3002</p> <p>\u6709\u6ca1\u6709\u53ef\u80fd\u662f\u5148\u5efa\u56fe\uff0c\u7136\u540e\u5efa\u53cd\u56fe\uff1f\u4e4b\u524d\u89c1\u8fc7\u8fd9\u79cd\u72b6\u6001\u5f88\u591a\uff0c\u4f46\u662f\u53ef\u4ee5\u5229\u7528\u7c7b\u4f3c\u5206\u5c42\u56fe\u7684\u601d\u60f3\u8f6c\u5316\u7684\u9898\u3002</p> <p>\u611f\u89c9\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u56e0\u4e3a\u540c\u5c42\u4e4b\u95f4\u7684\u8fb9\u4e0d\u662f\u53d8\u5316\u7684\uff0c\u6bcf\u6b21\u53d6\u53cd\u5143\u7d20\u4f1a\u8ba9\u4e0a\u4e0b\u4e24\u5c42\u548c\u5f53\u524d\u5c42\u7684\u8fb9\u53d6\u53cd\uff0c\u5e76\u4e14\u663e\u800c\u6613\u89c1\u7684\uff0c\u6bcf\u4e2a\u884c\u6700\u591a\u64cd\u4f5c\u4e00\u6b21\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u884c\u7136\u540e\u8003\u8651\u662f\u5426\u64cd\u4f5c\uff0c\u56e0\u4e3a\u4f1a\u5f71\u54cd\u67d0\u4e00\u884c\u7684\u5b64\u7acb\u5143\u7d20\u7684\u53ea\u6709\u4e0a\u4e0b\u4e24\u884c\uff0c\u76f8\u5f53\u4e8e\u627e\u5230\u4e86\u4e00\u4e2a\u679a\u4e3e\u987a\u5e8f\u3002\u8fd9\u4e2a\u72b6\u6001\u6570\u80fd\u51cf\u5230\u5f88\u5c0f\uff0c\u5e94\u8be5\u662f\u8fd9\u6837\u7684\u3002</p> <p>\u6ce8\u610f\u5230\u662f\u4e0a\u4e0b\u4e24\u884c\uff0c\u7136\u540e\u5c31\u611f\u89c9\u8fd9\u79cd\u95ee\u9898\u5c31\u4e0d\u662f\u5f88\u80fd\u8d2a\u5fc3\uff0c\u5c31\u662f\u4e0d\u80fd\u76f4\u63a5\u626b\u4e00\u904d\u7b97\uff0c\u4e8e\u662f dp\uff0c\u5bf9\u4e8e\u5f53\u524d\u884c\u548c\u4e0a\u4e00\u884c\u52a0\u4e00\u4e2a\u662f\u5426\u64cd\u4f5c\u8fc7\u7684\u72b6\u6001\u5373\u53ef\u3002</p> <p>\u8f6c\u79fb\u53ef\u80fd\u5f88\u9ebb\u70e6\uff0c\u8981\u5224\u8fb9\u754c\u4ec0\u4e48\u7684\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e3 + 10;\nconst int inf = 0x3f3f3f3f;\n\nint n, m;\nint a[2][si][si], dp[si][2][2];\n\nbool check(int l, int r, int u, int d, int mid) {\nreturn (l != mid &amp;&amp; r != mid &amp;&amp; u != mid &amp;&amp; d != mid);\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nmemset(dp, 0x3f, sizeof dp);\nfor(int i = 1; i &lt;= n; i++) {\nfor(int j = 1; j &lt;= m; j++) {\ncin &gt;&gt; a[0][i][j], a[1][i][j] = a[0][i][j] ^ 1;\n}\n}\nfor(int i = 0; i &lt;= m + 1; i++)\na[0][0][i] = a[1][0][i] = a[0][n + 1][i] = a[1][n + 1][i] = 2;\nfor(int i = 0; i &lt;= n + 1; i++)\na[0][i][0] = a[1][i][0] = a[0][i][m + 1] = a[1][i][m + 1] = 2;\n\ndp[0][0][0] = dp[0][0][1] = 0;\nfor(int i = 1; i &lt;= n; i++) {\nfor(int j = 0; j &lt; 2; j++) {\nfor(int k = 0; k &lt; 2; k++) {\nfor(int l = 0; l &lt; 2; l++) {\nbool ff = false;\nfor(int x = 1; x &lt;= m; x++)\nff |= check(a[k][i][x - 1], a[k][i][x + 1], a[j][i - 1][x], a[l][i + 1][x], a[k][i][x]);\nif(!ff) dp[i][k][l] = min(dp[i][k][l], dp[i - 1][j][k] + k);\n}\n}\n}\n}\nint ans = min(dp[n][1][0], dp[n][0][0]);\ncout &lt;&lt; (ans == inf ? -1 : ans) &lt;&lt; endl;    return 0;\n}\n\n// ()()()(?\n// https://www.cnblogs.com/DM11/p/17017957.html\n</code></pre>"}, {"location": "rec/atcf-for-2022-11-12/#abc283f-permutation-distance", "title": "ABC283F - Permutation Distance", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5217 \\(p\\)\uff0c\u5bf9\u4e8e\u6bcf\u4e2a \\(i\\) \u6c42 \\(\\min\\limits_{j \\not ={i}}\\{|p_i - p_j| + |i - j|\\}\\)\u3002</p> <p>\\(1\\le n \\le 1.5e5\\)\u3002</p> <p>\u611f\u89c9\u8fd9\u79cd\u66b4\u529b\u662f\u626b\u4e00\u904d\u6240\u6709\u7684\u4e1c\u897f\u6c42\u6700\u503c\u7684\uff0c\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u6027\u8d28\u7528\u6765\u6392\u9664\u5197\u6742\u72b6\u6001\u3002</p> <p>\u8fd9\u91cc\u8fd8\u6709\u5bf9\u4e8e\u6240\u6709 \\(i\\) \u8be2\u95ee\u4e00\u4e2a\u7c7b\u4f3c\u7684\u67ff\u5b50\u7684\u4e1c\u897f\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u8981\u679a\u4e3e\u8d21\u732e\u3002</p> <p>\u7136\u540e\u6211\u8fd8\u4e0d\u4f1a\u3002</p> <p>\u53d1\u73b0\u7edd\u5bf9\u503c\u5f88\u9ebb\u70e6\uff0c\u4e8e\u662f\u6211\u4eec\u62c6\u5f00\u6765\u770b\uff08\u4e0d\u8981\u5bb3\u6015\u5206\u8ba8\uff09\uff1b</p> <p>\u5982\u679c \\(P_i &gt; P_j\\)\uff1a 1. \u5982\u679c \\(i &gt; j\\)\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42 \\(\\min\\{(p_i+i) - (p_j+j)\\}\\) 2. \u5982\u679c \\(i &lt; j\\)\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42 \\(\\min\\{(p_i-i) - (p_j-j)\\}\\)</p> <p>\u5982\u679c \\(P_i &lt; P_j\\)\uff1a 1. \u5982\u679c \\(i &gt; j\\)\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42 \\(\\min\\{(-p_i+i) - (-p_j+j)\\}\\) 2. \u5982\u679c \\(i &lt; j\\)\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42 \\(\\min\\{(-p_i-i) - (-p_j-j)\\}\\)</p> <p>\u5176\u5b9e\u5bf9\u4e8e\u56fa\u5b9a\u7684 \\(i\\)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u540e\u9762\u90a3\u5768 \\(j\\) \u76f8\u5173\u7684\u67ff\u5b50\u5c3d\u91cf\u5927\u3002</p> <p>\u597d\uff0c\u7136\u540e\u53d1\u73b0\u8fd9\u91cc\u6709\u4e24\u4e2a\u6761\u4ef6\u9650\u5236\uff0c\u6bd4\u8f83\u9ebb\u70e6\uff0c\u56e0\u4e3a\u4e24\u91cd\u9650\u5236\u662f\u4e0d\u597d\u5904\u7406\u7684\u3002</p> <p>\u5982\u679c\u5355\u72ec\u6765\u7b97\u8fd9\u4e24\u4e2a\u6761\u4ef6\u662f\u5f88\u65b9\u4fbf\u7684\uff0c\u8fd9\u4e2a\u4e0b\u6807\u9650\u5236\u5c31\u76f4\u63a5 RMQ \u6216\u8005\u626b\u4e00\u904d\u8bb0\u5f55\uff0c\u503c\u57df\u9650\u5236\u662f\u7ecf\u5178\u7684\u4e00\u4e2a\u5c0f\u6a21\u578b\uff0c\u53ef\u4ee5\u5728\u503c\u57df\u4e0a\u5229\u7528\u6811\u72b6\u6570\u7ec4\u52a8\u6001\u7ef4\u62a4\u524d\u7f00\u6700\u503c\u6765\u505a\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u60f3\u8981\u505a\u7684\u662f\u628a\u8fd9\u4e24\u4e2a\u6761\u4ef6\u5206\u5f00\u7b97\uff0c\u6709\u70b9\u7c7b\u4f3c\u5355\u8c03\u961f\u5217\u4f18\u5316 dp \u90a3\u79cd\uff0c\u56fa\u5b9a\u4e00\u4e2a\uff0c\u5904\u7406\u4e00\u4e2a\u8fd9\u6837\u5b50\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5148\u4ece\u524d\u5f80\u540e\u679a\u4e3e \\(i\\)\uff0c\u7136\u540e\u4ece\u540e\u5f80\u524d\u679a\u4e3e \\(i\\)\uff0c\u8fd9\u4e2a\u76f8\u5f53\u4e8e\u6ee1\u8db3\u4e0b\u6807\u9650\u5236\u3002</p> <p>\u7136\u540e\u6bcf\u6b21\u626b\u7684\u65f6\u5019\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u503c\u57df\u4e0a\u7684\u524d/\u540e\u7f00\u6700\u503c\u5373\u53ef\u3002</p> <p>\u8fd9\u4e2a\u5957\u8def\u662f wcx \u8001\u5e08\u6559\u7684\uff0c\u542c\u8bf4\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u4e8c\u7ef4\u6570\u70b9\uff0c\u6709\u5fc5\u8981\u5b66\u4e00\u4e0b\u3002</p> <p>\u5367\u69fd\uff0c\u5199\u51fa\u6765\u7b80\u5355\u8c03\u4e00\u4e0b 1A \u4e86</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\nconst int inf = 0x3f3f3f3f;\n\nint n, p[si];\ninline int lowbit(int x) { return x &amp; -x; }\nstruct Fenwick {\nint t[si];\nvoid Init() { memset(t, -0x3f, sizeof t); }\nvoid Add(int x, int v) { while(x &lt;= n) {\nt[x] = max(t[x], v);\nx += lowbit(x);\n}\n}\nint Que(int x) {\nint ret = -inf; // ! \uff01\uff01\uff01\uff01\uff01\nwhile(x) {\nret = max(ret, t[x]);\nx -= lowbit(x);\n}\nreturn ret;\n}\n} pf, sf;\n\nint res[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\npf.Init(), sf.Init();\ncin &gt;&gt; n, memset(res, 0x3f, sizeof res); for(int i = 1; i &lt;= n; ++i) cin &gt;&gt; p[i];\n\n// i &gt; j\nfor(int i = 1; i &lt;= n; ++i) {\nint ans = inf;\nans = min(ans, p[i] + i - pf.Que(p[i])); // prefix\nans = min(ans, -p[i] + i - sf.Que(n - p[i] + 1)); // suffix\nres[i] = min(res[i], ans);\npf.Add(p[i], p[i] + i), sf.Add(n - p[i] + 1, -p[i] + i); }\n\n// i &lt; j\npf.Init(), sf.Init();\nfor(int i = n; i &gt;= 1; --i) {\nint ans = inf;\nans = min(ans, p[i] - i - pf.Que(p[i])); // prefix\nans = min(ans, -p[i] - i - sf.Que(n - p[i] + 1)); // suffix\nres[i] = min(res[i], ans);\npf.Add(p[i], p[i] - i), sf.Add(n - p[i] + 1, -p[i] - i);\n}\n\nfor(int i = 1; i &lt;= n; ++i) cout &lt;&lt; res[i] &lt;&lt; \" \\n\"[i == n];\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/", "title": "2023\u5e741,2\u6708AT&CF", "text": "<p>\u5f00\u4e86\u4e00\u4e2a\u8868\u683c\u7528\u6765\u8bb0\u5f55\u8fd1\u671f\u7684\u505a\u9898\u60c5\u51b5\uff0c\u8fd9\u6bb5\u65f6\u95f4\u7684\u4e2d\u5fc3\u5c31\u5dee\u4e0d\u591a\u662f ABC DEF \u4e86\uff0c\u7ec3\u5230\u80fd\u8d5b\u65f6\u505a\u51fa\u6765\u5c31\u53ef\u4ee5\u8fdb\u4e0b\u4e00\u9636\u6bb5\u4e86\u3002</p> <p>\u9898\u76ee\u7ffb\u8bd1\u5927\u90e8\u5206\u6765\u81ea\u6d1b\u8c37\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#abc284d-happy-new-year-2023", "title": "ABC284D - Happy New Year 2023", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 \\(N\\le 9\\times 10^{18}\\)\uff0c\u4fdd\u8bc1 \\(N=p^2q\\) \u4e14 \\(p,q\\) \u5747\u4e3a\u8d28\u6570\uff0c\u8bf7\u6c42\u51fa \\(p,q\\)\u3002</p> <p>\u7ffb\u8bd1 by @Mars_Dingdang</p> <p>\\(O(n^{\\frac{1}{3}})\\) \u505a\u6cd5\u8fd8\u4e0d\u4f1a\uff0c\u4e4b\u540e\u8865\u3002</p> <p>\u6211\u662f \\(O(n^{\\frac{1}{4}})\\) \u7684 Pr \u505a\u6cd5\u3002</p> <p>\u5c31\u628a\u8fd9\u4e2a\u5f53\u6210\u5927\u6570\u6c42\u6700\u5927\u8d28\u56e0\u5b50\u7684\u677f\u5b50\u5c31\u884c\u4e86\uff0c\u7c98\u7684\u4e24\u5e74\u524d\u7684\u677f\u5b50\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;ctime&gt;\n#include &lt;cstdio&gt;\n#include &lt;random&gt;\n#include &lt;cstring&gt;\n#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\n#define li inline\n#define re register\n#define ll __int128\n\n__int128 abs_128(__int128 x){\nif(x&gt;0){\nreturn x;\n}\nreturn -x;\n}\n\nnamespace Miller_Rabin{\nconst int Pcnt=12;\nconst ll p[Pcnt]={2,3,5,7,11,13,17,19,61,2333,4567,24251};\n\nli ll pow(re ll a,re ll b,re ll p){\nre ll ans=1;\nfor(;b;a=a*a%p,b&gt;&gt;=1){\nif(b&amp;1){\nans=ans*a%p;\n}\n}\nreturn ans;\n}\n\nli bool check(re ll x,re ll p){\nif(x%p==0||pow(p%x,x-1,x)^1){\nreturn true;\n}\nre ll t,k=x-1;\nwhile((k^1)&amp;1){\nt=pow(p%x,k&gt;&gt;=1,x);\nif(t^1&amp;&amp;t^x-1){\nreturn true;\n}\nif(!(t^x-1)){\nreturn false;\n}   }\nreturn false;\n}\n\ninline bool MR(re ll x){\nif(x&lt;2)return false;\nfor(re int i=0;i^Pcnt;++i){\nif(!(x^p[i]))return true;\nif(check(x,p[i]))return false;\n}return true;\n}\n}\n\nnamespace Pollard_Rho{\n#define Rand(x) (1ll*rand()*rand()%(x)+1)\n\nli ll gcd(const ll a,const ll b){return b?gcd(b,a%b):a;}\n\nli ll mul(const re ll x,const re ll y,const re ll X){\nll k=(1.0L*x*y)/(1.0L*X)-1,t=x*y-k*X;\nwhile(t&lt;0)t+=X;return t;\n}\n\nli ll PR(const re ll x,const re ll y){\nre int t=0,k=1;re ll v0=Rand(x-1),v=v0,d,s=1;\nwhile(true){\nv=(mul(v,v,x)+y)%x,s=mul(s,abs_128(v-v0),x);\nif(!(v^v0)||!s)return x;\nif(++t==k){if((d=gcd(s,x))^1)return d;v0=v,k&lt;&lt;=1;}\n}\n}\n\nli void Resolve(re ll x,re ll&amp;ans){\nif(!(x^1)||x&lt;=ans)return;\nif(Miller_Rabin::MR(x)){\nif(ans&lt;x)ans=x;\nreturn;\n}\nre ll y=x;\nwhile((y=PR(x,Rand(x)))==x);\nwhile(!(x%y)){\nx/=y;\n}\nResolve(x,ans);\nResolve(y,ans);\n}\n\nli long long check(ll x){\nre ll ans=0;Resolve(x,ans);\nreturn ans;\n}\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nsrand(time(NULL));\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nunsigned long long x, p, q;\ncin &gt;&gt; x, p = Pollard_Rho::check(x);\nx /= p;\nif(x % p == 0) q = x / p;\nelse q = sqrt(x), swap(p, q);\ncout &lt;&lt; p &lt;&lt; \" \" &lt;&lt; q &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/#abc284f-abcbac", "title": "ABC284F - ABCBAC", "text": "<p>\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5b57\u7b26\u4e32 \\(S\\) \u548c\u4e00\u4e2a\u6574\u6570 \\(i\\in [0,N]\\)\uff0c\u5b9a\u4e49 \\(f_i(S)\\) \u6240\u5f97\u7684\u5b57\u7b26\u4e32\u4e3a\u4ee5\u4e0b\u4e09\u8005\u987a\u6b21\u8fde\u63a5\uff1a</p> <ul> <li>\\(S\\) \u7684\u524d \\(i\\) \u4e2a\u5b57\u7b26\uff1b</li> <li>\u5c06 \\(S\\) \u7ffb\u8f6c\u5f97\u5230\u7684\u5b57\u7b26\u4e32\uff1b</li> <li>\\(S\\) \u7684\u540e \\(N-i\\) \u4e2a\u5b57\u7b26\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u5bf9\u4e8e \\(S=\\texttt{abc}\\)\uff0c\\(i=2\\) \u6709 \\(f_i(S)=\\texttt{abcbac}\\)\u3002</p> <p>\u73b0\u5728\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(2N\\) \u7684\u5b57\u7b26\u4e32 \\(T\\)\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u4efb\u610f\u4e00\u5bf9 \\((S,i)\\) \u6ee1\u8db3 \\(f_i(S)=T\\)\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8f93\u51fa \\(-1\\)\u3002</p> <p>\u7ffb\u8bd1 by @Mars_Dingdang</p> <p>\u6ce8\u610f\u5230 \\(1\\le N \\le 10^6\\)\uff0c\u4e0d\u96be\u60f3\u5230 \\(O(N)\\) \u505a\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8981\u68c0\u67e5\uff0c\u505a\u4e00\u4e9b\u5339\u914d\u4e4b\u7c7b\u7684\uff0c\u6240\u4ee5\u4f30\u8ba1\u662f\u5b57\u7b26\u4e32\u54c8\u5e0c\u3002</p> <p>\u76f4\u63a5\u8003\u8651\u679a\u4e3e \\(i\\)\uff0c\u7136\u540e\u5b57\u7b26\u4e32 hash check \u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u8981\u53cd\u4e32\uff0c\u6240\u4ee5\u524d\u540e\u7f00\u90fd\u8981\u505a\u4e00\u6b21\u3002</p> <p>\u7eaf\u50bb\u903c\uff0c\u5361\u6211\u81ea\u7136\u6ea2\u51fa\uff0c\u5199\u4e86\u4e00\u4e2a\u53cc\u54c8\u5e0c\u624d\u8fc7\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#cf1783c-yet-another-tournament", "title": "CF1783C - Yet Another Tournament", "text": "<p>\u6709 \\(n\\) \u4e2a\u9009\u624b\uff0c\u7f16\u53f7\u4e3a \\(1\\) \u81f3 \\(n\\) \uff0c\u6bcf\u4e24\u4e2a\u9009\u624b\u5bf9\u6218\u65f6\uff0c\u7f16\u53f7\u5927\u7684\u5c06\u4f1a\u80dc\u5229\u3002</p> <p>\u4f60\u53ef\u4ee5\u51c6\u5907 \\(m\\) \u5355\u4f4d\u65f6\u95f4\uff0c\u6bcf\u51c6\u5907 \\(a_i\\) \u65f6\u95f4\u5c31\u53ef\u4ee5\u8d62 \\(i\\) \u53f7\u9009\u624b\u3002</p> <p>\u6309\u80dc\u5229\u7684\u603b\u6b21\u6570\u6392\u540d\uff0c\u6c42\u4f60\u6700\u9ad8\u591a\u5c11\u540d\u3002</p> <p>\u6ce8\u610f\u5230\u4e00\u4e2a\u6bd4\u8f83\u5173\u952e\u7684\u70b9\u662f\uff0c\u5982\u679c\u80fd\u6253\u8d62\u7684\u4eba\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u4f18\u7684\u51b3\u7b56\u4e00\u5b9a\u662f\u5c3d\u91cf\u6253\u7206 rk \u9ad8\u7684\u4eba\u3002</p> <p>\u6240\u4ee5\u5148\u6392\u5e8f\u76f4\u63a5\u66b4\u529b\u53d6\uff0c\u7136\u540e\u4ece\u540e\u9762\u4e0d\u65ad\u8d2a\u5fc3\u7684\u62ff\u4e00\u4e2a\uff0c\u9000\u6389\u4e00\u4e2a\u5df2\u7ecf\u9009\u4e86\u7684\u5373\u53ef\u3002</p> <p>\u5982\u679c\u7528\u4f18\u5148\u961f\u5217\u5b9e\u73b0\u4f1a\u6bd4\u8f83\u590d\u6742\uff0c\u4ee3\u7801\u91cc\u6ce8\u91ca\u6389\u4e86\uff0c\u662f\u8fd8\u6ca1\u8c03\u51fa\u6765\u7684\uff0c\u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u524d\u7f00\u548c\uff08</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e5 + 10;\n\nint n, m;\nint a[si], b[si], sum[si];\n// struct node {\n//     int id, cnt, val;\n//     bool operator &lt; (const node &amp;b) const {\n//         if(val == b.val) return cnt &gt; b.cnt;\n//         return val &lt; b.val;\n//     }\n// } a[si];\n// int b[si];\n\n// std::priority_queue&lt;std::pair&lt;node, int&gt;&gt; q;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\n// cin &gt;&gt; n &gt;&gt; m, b[0] = b[n + 1] = 0;\n// while(!q.empty()) q.pop();\n// for(int i = 1; i &lt;= n; ++i)\n//     cin &gt;&gt; a[i].val, a[i].id = i, a[i].cnt = i - 1, b[i] = 0;\n// sort(a + 1, a + 1 + n);\n// int cnt = 0;\n// for(int i = 1; i &lt;= n; ++i) {\n//     if(m - a[i].val &gt;= 0) {\n//         m -= a[i].val, cnt++; \n//         q.push({a[i], i});\n//     }\n//     else {\n//         if(q.empty()) break;\n//         for(int j = i; j &lt;= n; ++j) a[i].cnt ++;\n//         for(int j = i; j &lt;= n; ++j) {\n//             auto x = q.top();\n//             cout &lt;&lt; x.first.id &lt;&lt; \" \" &lt;&lt; x.first.cnt &lt;&lt; \" \" &lt;&lt; x.first.val &lt;&lt; \" \" &lt;&lt; x.second &lt;&lt; endl;\n//             if(m + x.first.val - a[i].val &gt;= 0) {\n//                 q.pop(), m += x.first.val, m -= a[i].val;\n//                 a[x.second].cnt ++, a[i].cnt --;\n//                 q.push({a[i], i});\n//             }\n//         }\n//         break;\n//     }\n// }\n// b[cnt] += 1;\n// for(int i = 1; i &lt;= n; ++i)\n//     b[a[i].cnt] += 1;\n// for(int i = 1; i &lt;= n; ++i) {\n//     cout &lt;&lt; \"b[\" &lt;&lt; i &lt;&lt; \"] = \" &lt;&lt; b[i] &lt;&lt; \" \";\n// }\n// cout &lt;&lt; endl;\n// int ans = 0;\n// for(int i = n; i &gt;= 0; --i) {\n//     if(i == cnt) { ans++; break; }\n//     ans += b[i];\n// }\n// cout &lt;&lt; ans &lt;&lt; endl;\n// cout &lt;&lt; \" --- - - - -- - - \" &lt;&lt; endl;\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], b[i] = a[i];\nsort(b + 1, b + 1 + n);\nfor(int i = 1; i &lt;= n; ++i)\nsum[i] = sum[i - 1] + b[i];\n\nint ans = n + 1;\nfor(int i = 1; i &lt;= n; ++i) {\nif(m &gt;= sum[i])\nans = min(ans, n - i + 1);\nif(i &lt; n &amp;&amp; m &gt;= sum[i] + max(a[i + 1] - b[i], 0))\nans = min(ans, n - i);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/#cf1783e-game-of-the-year", "title": "CF1783E - Game of the Year", "text": "<p>Monocarp \u548c Polycarp \u6b63\u5728\u73a9\u7535\u8111\u6e38\u620f\u3002\u6e38\u620f\u7279\u70b9\uff1a$ n $ \u4e2a\u7f16\u53f7\u4ece $ 1 $ \u5230 $ n $ \u7684BOSS\u3002</p> <p>\u4ed6\u4fe9\u5c06\u7528\u4ee5\u4e0b\u65b9\u5f0f\u4e0eBOSS\u6218\u6597</p> <ul> <li>Monocarp \u8fdb\u884c \\(k\\) \u6b21\u5c1d\u8bd5\u6492\u6389boss;</li> <li>Polycarp \u8fdb\u884c \\(k\\) \u6b21\u5c1d\u8bd5\u6492\u6389boss;</li> <li>Monocarp \u8fdb\u884c \\(k\\) \u6b21\u5c1d\u8bd5\u6492\u6389boss;</li> <li>Polycarp \u8fdb\u884c \\(k\\) \u6b21\u5c1d\u8bd5\u6492\u6389boss;</li> <li>...</li> </ul> <p>Monocarp \u5728\u7b2c \\(a_i\\) \u6b21\u5c1d\u8bd5\u4e2d\u6492\u6389\u4e86\u7b2c \\(i\\) \u53eaBOSS\u3002Polycarp \u5728\u7b2c \\(b_i\\) \u6b21\u5c1d\u8bd5\u4e2d\u6492\u6389\u4e86\u7b2c \\(i\\) \u53eaBOSS\u3002\u5176\u4e2d\u4e00\u4e2a\u4eba\u6492\u6389\u7b2c \\(i\\) \u53eaBOSS\u540e\uff0c\u4ed6\u4eec\u5c31\u4f1a\u5c1d\u8bd5\u6492\u7b2c \\((i+1)\\) \u53eaBOSS\u3002\u5e76\u4e14\u4ed6\u4eec\u7684\u5c1d\u8bd5\u8ba1\u6570\u5668\u90fd\u4f1a\u6e05\u7a7a\u3002\u6492\u6389\u7b2c \\(n\\) \u53eaBOSS\u540e\uff0c\u6e38\u620f\u7ed3\u675f\u3002</p> <p>\u627e\u5230\u4ece \\(1\\) \u5230 $ n $\u6240\u6709\u7684 \\(k\\) \u503c\uff0c \u4f7f\u5f97 Monocarp \u53ef\u4ee5\u6740\u6b7b\u6240\u6709\u7684BOSS\u3002</p> <p>\u5206\u6790\u4e00\u4e0b\uff0c\u8981\u8ba9 Monocarp \u628a\u6bcf\u4e00\u4e2a\u90fd\u4f18\u5148\u6253\u6389\uff0c\u5c31\u8981\u4fdd\u8bc1 \\(\\lceil \\dfrac{a_i}{k}\\rceil \\le \\lceil\\dfrac{b_i}{k}\\rceil\\)\u3002</p> <p>\u76f4\u63a5\u66b4\u529b\u6c42\u590d\u6742\u5ea6 \\(O(n^2)\\)\uff0c\u5feb\u4e0a\u5929\u4e86\uff0c\u80af\u5b9a\u8981\u8003\u8651 \\(O(1) \\sim O(\\log n)\\) \u7684\u5355\u6b21\u64cd\u4f5c\u3002</p> <p>\u5982\u679c \\(a_i \\le b_i\\) \u663e\u7136\u4e0d\u7ba1\u600e\u4e48\u6837\u90fd\u662f Mono \u5148\u6253\u5b8c\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u8003\u8651 \\(a_i &gt; b_i\\) \u7684\u60c5\u51b5\u3002</p> <p>\u7b2c\u4e00\u79cd\u60c5\u51b5\u662f \\(k \\ge a_i\\)\uff0c\u8fd9\u6837\u663e\u7136\u7b2c\u4e00\u8f6e Mono \u5c31\u6253\u5b8c\u4e86\u3002</p> <p>\u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f \\(k &lt; a_i\\)\uff0c\u8fd9\u6837\u7684\u8bdd\u8981\u4fdd\u8bc1 \\(\\lceil \\dfrac{a_i}{k}\\rceil \\le \\lceil\\dfrac{b_i}{k}\\rceil\\)\uff0c\u9700\u8981\u6ee1\u8db3\uff0c\u53ea\u8003\u8651\u6700\u540e\u4e24\u6b21 attack \u7684\u65f6\u5019\uff0cMono \u6253\u51fa\u7b2c\u4e00\u6b21\uff0cPoly \u6253\u51fa\u7b2c\u4e00\u6b21\uff0c\u6b64\u65f6\u6ee1\u8db3 \\(a_i \\le k\\)\uff0c\u8fd9\u6837\u7b2c\u4e8c\u6b21 Mono \u5c31\u53ef\u4ee5\u4f18\u5148\u6253\u6389\u3002</p> <p>\u672c\u8d28\u4e0a\u662f \\(b_i \\mod k\\) \u8981\u6709\u5927\u4e8e\u96f6\u7684\u4f59\u6570\uff0c\u4e0d\u7136\u56e0\u4e3a \\(a_i &gt; b_i\\)\uff0cPoly \u4e00\u5b9a\u4f1a\u5728 Mono \u4e4b\u524d\u6253\u5b8c\u3002</p> <p>\u6240\u4ee5 \\(k \\not|\\ b_i\\) \u5373\u53ef\uff0c\u7136\u540e\u6ce8\u610f\u5230 \\([b_i, a_i)\\) \u8fd9\u4e2a\u533a\u95f4\u91cc\u9762\u7684\u6570\uff0cPoly \u7b2c\u4e00\u6b21\u5c31\u4f1a\u6253\u6389\uff0c\u7136\u540e Mono \u8fd8\u5269\u4e00\u70b9\uff0c\u8fd9\u4e9b\u4e5f\u8981\u7b5b\u6389\u3002</p> <p>\u7136\u540e\u6211\u968f\u4fbf\u624b\u73a9\u4e86\u4e00\u4e0b\u6ce8\u610f\u5230\uff0c\u5982\u679c \\(a_i = 10, b_i = 4\\) \u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u7b5b\u4e0d\u6389 \\(3\\)\uff0c\u4f1a\u5bc4\u6389\u3002</p> <p>\u53d1\u73b0\u5176\u5b9e \\([b_i, a_i)\\) \u8fd9\u4e00\u6bb5\u7684\u6240\u6709\u6570\u7684\u56e0\u5b50\u4e5f\u662f\u8981\u7b5b\u6389\u7684\uff0c\u5176\u5b9e\u672c\u8d28\u662f\u548c \\(b_i \\mod k \\not ={0}\\) \u4e00\u4e2a\u9053\u7406\uff0c\u56e0\u4e3a\u6211\u4e0a\u9762\u7684\u60f3\u6cd5\u53ea\u8003\u8651\u4e86 \\(a_i, b_i\\) \u5728\u76f8\u90bb\u7684\u4e24\u4e2a\u5757\u91cc\u9762\u7684\u60c5\u51b5\uff08\u5757\u6307\u6570\u8f74\u4e0a\u6309 \\(k\\) \u5206\u5757\uff09\u3002</p> <p>\u8fd9\u6837\u505a\u53ef\u4ee5\u4e0d\u7528\u8003\u8651 \\([b_i, a_i)\\)\uff0c\u56e0\u4e3a\u56e0\u5b50\u5305\u542b\u6570\u672c\u8eab\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;map&gt;\n#include &lt;set&gt;\n#include &lt;cmath&gt;\n#include &lt;bitset&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;utility&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m;\nint a[si], b[si];\nbool vis[si];\nstd::set&lt;int&gt; s;\n\nstd::vector&lt;int&gt; fact[si];\nvoid get_factors(int n) {\nfor(int i = 1; i &lt;= n; ++i)\nfor(int j = 1; j &lt;= n / i; ++j)\nfact[i * j].emplace_back(i);\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nget_factors(si - 10);\nint T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n, s.clear();\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i], vis[i] = true;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; b[i], s.insert(i);\nfor(int i = 1; i &lt;= n; ++i) {\nif(a[i] &lt;= b[i]) continue;\nauto l = s.lower_bound(b[i]), r = s.lower_bound(a[i]);\nfor(auto j = l; j != r; ++j)\nfor(auto x : fact[*j]) vis[x] = false;\ns.erase(l, r);\n}\nint cnt = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nif(vis[i]) cnt++;\n}\ncout &lt;&lt; cnt &lt;&lt; endl;\nfor(int i = 1; i &lt;= n; ++i) {\nif(vis[i]) cout &lt;&lt; i &lt;&lt; \" \\n\"[i == n];\n}\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/#abc284e-count-simple-paths", "title": "ABC284E - Count Simple Paths", "text": "<p>\u7ed9\u5b9a\u4e00\u5f20 \\(N\\) \u4e2a\u8282\u70b9 \\(M\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u6570 \\(\\le 10\\)\u3002</p> <p>\u8bb0\u4ece\u4efb\u610f\u8282\u70b9\u56de\u5230 \\(1\\) \u53f7\u70b9\u7684\u4e0d\u540c\u8def\u5f84\u603b\u6570\u4e3a \\(K\\)\uff0c\u8bf7\u8f93\u51fa \\(\\min(K,10^6)\\)\u3002</p> <p>\u7ffb\u8bd1 by @Mars_Dingdang</p> <p>\u611f\u89c9\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u7b80\u5355\u7684 dfs\u3002</p> <p>\u4f46\u662f\u6211\u5c45\u7136\u8fde\u628a vis \u653e\u5230 dfs \u5916\u9762\u7528\u6765\u56de\u6eaf\u90fd\u5fd8\u8bb0\u4e86\uff1f</p> <p>dfs \u90fd\u4e0d\u4f1a\u5199\u4e86\uff1f\uff1f\uff1f</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iomanip&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m;\nint tot = 0, head[si];\nstruct Edge { int ver, Next; } e[si &lt;&lt; 1];\ninline void add(int u, int v) { e[tot] = (Edge){v, head[u]}, head[u] = tot++; }\n\nint ans = 0;\nbool vis[si];\nvoid dfs(int u, int fa) {\nif(ans &gt;= 1000000) cout &lt;&lt; \"1000000\" &lt;&lt; endl, exit(0);\nvis[u] = true; ans++;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\nif(vis[v]) continue;\ndfs(v, u);\n}\nvis[u] = false;\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head), tot = 0;\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v; cin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n}\ndfs(1, 0);\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/#cf1775c-interesting-sequence", "title": "CF1775C - Interesting Sequence", "text": "<p>\u56e0\u4e3a\u6bd4\u8f83\u61d2\u6240\u4ee5\u8fd9\u51e0\u4e2a\u9898\u5c31\u662f\u53e3\u80e1\u9898\u89e3\uff0c\u4ee3\u7801\u4e5f\u61d2\u5f97\u653e\u4e86\u3002</p> <p>\u7ed9\u4e24\u4e2a\u6570\uff0c\\(n\\) \u548c \\(x\\)\uff0c\u95ee\u662f\u5426\u5b58\u5728 \\(m\\)\uff0c\u4f7f\u5f97 \\(n \\&amp; n+1 \\&amp; \u2026\u2026 \\&amp; m = x\\)\uff0c\u5982\u679c\u5b58\u5728\u6c42\u51fa\u6700\u5c0f\u7684 \\(m\\)\uff0c\u5426\u5219\u8f93\u51fa \\(-1\\)\u3002</p> <p>\u8003\u8651\u4e8c\u8fdb\u5236\u4e0b\u8d2a\u5fc3\u5373\u53ef\uff0c\u6ce8\u610f\u5904\u7406\u8fdb\u4f4d\u548c\u65e0\u89e3\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#cf1775d-friendly-spiders", "title": "CF1775D - Friendly Spiders", "text": "<p>\u706b\u661f\u4e0a\u6709\u4e00\u79cd\u795e\u79d8\u7684\u7535\u5b50\u8718\u86db\u3002</p> <p>\u4e3a\u4e86\u7814\u7a76\u8fd9\u79cd\u8718\u86db\uff0c\u79d1\u5b66\u5bb6\u627e\u6765\u4e86\u5176\u4e2d\u7684 \\(n\\) \u4e2a\uff0c\u6bcf\u4e2a\u8718\u86db\u6709\u4e0d\u540c\u7684\u817f\u6570\uff0c\u7528\u6570\u7ec4 \\(a\\) \u8868\u793a\u3002\u79d1\u5b66\u5bb6\u4eec\u53d1\u73b0\uff0c\u6709\u7684\u8718\u86db\u4e92\u76f8\u662f\u670b\u53cb\uff0c\u5982\u679c\u7b2c \\(i\\) \u4e2a\u8718\u86db\u548c\u7b2c \\(j\\) \u4e2a\u8718\u86db\u662f\u670b\u53cb\u7684\u8bdd\uff0c\u90a3\u4e48\u8981\u6ee1\u8db3 \\(\\operatorname{gcd}(a_{i},a_{j})\u22601\\)\uff0c\u5176\u4e2d \\(\\operatorname{gcd}(x,y)\\) \u51fd\u6570\u8868\u793a\u6c42 \\(x\\) \u548c \\(y\\) \u7684\u6700\u5927\u516c\u7ea6\u6570\u3002</p> <p>\u79d1\u5b66\u5bb6\u53d1\u73b0\u8718\u86db\u53ef\u4ee5\u4e92\u76f8\u53d1\u9001\u4fe1\u606f\u3002\u5982\u679c\u4e24\u53ea\u8718\u86db\u662f\u670b\u53cb\uff0c\u90a3\u4e48\u5b83\u4eec\u53ef\u4ee5\u7528\u4e00\u79d2\u949f\u76f4\u63a5\u53d1\u9001\u6d88\u606f\u3002\u5426\u5219\uff0c\u8718\u86db\u5fc5\u987b\u5c06\u6d88\u606f\u4f20\u9012\u7ed9\u4ed6\u7684\u670b\u53cb\uff0c\u800c\u670b\u53cb\u53c8\u5fc5\u987b\u5c06\u6d88\u606f\u4f20\u9012\u7ed9\u4ed6\u7684\u670b\u53cb\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6d88\u606f\u5230\u8fbe\u6536\u4ef6\u4eba\u3002</p> <p>\u5047\u8bbe\u6709\u4e00\u53ea\u516b\u6761\u817f\u7684\u8718\u86db\u5411\u4e00\u53ea \\(15\\) \u6761\u817f\u7684\u8718\u86db\u4f20\u9012\u6d88\u606f\uff0c\u4f46\u662f\u7531\u4e8e \\(\\operatorname{gcd}(8,15)=1\\) \u6240\u4ee5\u4ed6\u4e0d\u80fd\u76f4\u63a5\u53d1\u9001\uff0c\u4f46\u5b83\u53ef\u4ee5\u901a\u8fc7\u516d\u6761\u817f\u7684\u8718\u86db\u53d1\u9001\u6d88\u606f\uff0c\u56e0\u4e3a \\(\\operatorname{gcd}(8,6)=2\\) \u5e76\u4e14 \\(\\operatorname{gcd}(6,15)=3\\) \u6240\u4ee5\u6d88\u606f\u5c06\u4f1a\u5728\u4e24\u79d2\u949f\u5230\u8fbe\u3002</p> <p>\u79d1\u5b66\u5bb6\u4eec\u5e0c\u671b\u627e\u5230\u7b2c \\(s\\) \u4e2a\u8718\u86db\u5411\u7b2c \\(t\\) \u4e2a\u8718\u86db\u53d1\u9001\u6d88\u606f\u7684\u6700\u77ed\u65f6\u95f4\uff0c\u4ee5\u53ca\u6700\u77ed\u8def\u7ebf\u3002</p> <p>\u8003\u8651\u4f18\u5316\u5efa\u56fe\uff0c\u53ea\u9700\u8981\u5148\u7b5b\u51fa\u6240\u6709\u8d28\u6570\uff0c\u5c06\u5176\u7684\u500d\u6570\u5168\u90e8\u8fde\u8fb9\u3002</p> <p>\u76f8\u5f53\u4e8e\u627e\u516c\u5171\u8d28\u56e0\u5b50\u65f6\u4e3a\u4e86\u65b9\u4fbf\u53cd\u7740\u7b97\u8fd9\u6837\u5b50\uff0c\u7136\u540e\u968f\u4fbf\u8dd1\u4e00\u8dd1\u6700\u77ed\u8def\u5c31\u884c\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#cf1775e-the-human-equation", "title": "CF1775E - The Human Equation", "text": "<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u6570 \\(a_1...a_n\\)\uff0c\u968f\u540e\u4f60\u53ef\u4ee5\u8fdb\u884c\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u9009\u51fa \\(a\\) \u4e2d\u4e00\u4e2a\u5b50\u5e8f\u5217\uff08\u53ef\u4ee5\u4e0d\u8fde\u7eed\uff09\u3002 </p> </li> <li> <p>\u628a\u5b50\u5e8f\u5217\u4e2d\u7684\u5947\u6570\u9879\u51cf\u4e00\uff0c\u5076\u6570\u9879\u52a0\u4e00\uff1b\u6216\u8005\u5947\u6570\u9879\u52a0\u4e00\uff0c\u5076\u6570\u9879\u51cf\u4e00\u3002</p> </li> </ul> <p>\u6c42\u628a \\(n\\) \u4e2a\u6570\u5168\u90e8\u53d8\u6210 \\(0\\) \u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>\\(1\\le n\\le2\\times10^5,-10^9\\le a_i\\le10^9\\)\uff0c\u591a\u7ec4\u6570\u636e\u3002</p> <p>\u8003\u8651\u8d2a\u5fc3\u7684\u53d6\uff0c\u5e0c\u671b\u6bcf\u6b21\u80fd\u8ba9\u8d1f\u6570\u52a0\uff0c\u6b63\u6570\u51cf\uff0c\u4e14\u51cf\u5230 0 \u5c31\u4e0d\u52a8\u3002</p> <p>\u8003\u8651\u540e\u51cf\u5b8c\u7684\u64cd\u4f5c\u6b21\u6570\u5373\u53ef\uff0c\u56e0\u4e3a\u53ea\u80fd\u4e00\u4e2a\u4e00\u4e2a\u64cd\u4f5c\uff0c\u6240\u4ee5\u7b54\u6848\u662f\u524d\u7f00\u548c\u7684\u6781\u5dee\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#cf1778a-flip-flop-sum", "title": "CF1778A - Flip Flop Sum", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u53ea\u542b\u6709 \\(1\\) \u6216 \\(-1\\) \u7684\u6570\u7ec4 \\(a\\)\uff0c\u5bf9\u5176\u8fdb\u884c\u5982\u4e0b\u7684\u64cd\u4f5c\uff1a</p> <ul> <li>\u9009\u5b9a\u4e00\u4e2a \\(i\\)\uff0c\u6ee1\u8db3 \\(1\\le i&lt;n\\)\uff0c\u5c06 \\(a_i\\) \u4fee\u6539\u4e3a \\(-a_i\\)\uff0c\u5c06 \\(a_{i+1}\\) \u4fee\u6539\u4e3a \\(-a_{i+1}\\)\u3002</li> </ul> <p>\u6c42\u51fa\u4e00\u6b21\u64cd\u4f5c\u4e4b\u540e \\(\\sum\\limits_{i=1}^n a_i\\) \u7684\u6700\u5927\u503c\u3002</p> <p>by @zfx1569_HCl_2023</p> <p>\u7b56\u7565\u662f\u663e\u7136\u7684\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u8ba1\u7b97\u7b54\u6848\u5373\u53ef</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint a[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nint n; cin &gt;&gt; n;\nint sum = 0;\nint ans = -0x3f3f3f3f;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], sum += a[i];\nfor(int i = 1; i &lt; n; ++i) {\nint x = a[i], y = a[i + 1];\nint tmp = sum - x - y;\nx *= -1, y *= -1;\ntmp += x + y;\nans = max(ans, tmp);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/#cf1778b-the-forbidden-permutation", "title": "CF1778B - The Forbidden Permutation", "text": "<p>\u7ed9\u5b9a \\(3\\) \u4e2a\u6574\u6570 \\(n,m,d\\)\u3001\u4e00\u4e2a \\(n\\) \u7684\u6392\u5217 \\(p\\) \u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(m\\) \u7684\u6570\u7ec4 \\(a\\)\uff0c\u5b9a\u4e49 \\(\\mathrm{pos}(x)\\) \u4e3a \\(p\\) \u4e2d \\(x\\) \u7684\u4e0b\u6807\u3002</p> <p>\u6570\u7ec4 \\(a\\) \u662f\u4e0d\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e\u6240\u6709 \\(1\\le i&lt;m\\)\uff0c\u6709 \\(\\mathrm{pos}(a_i)&lt;\\mathrm{pos}(a_{i+1})\\le\\mathrm{pos}(a_i)+d\\)\u3002</p> <p>\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9 \\(p\\) \u4e2d\u7684\u4e24\u4e2a\u76f8\u90bb\u6570\u5b57\u5e76\u628a\u5b83\u4eec\u4ea4\u6362\uff0c\u6c42\u6700\u5c0f\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u4f7f\u5f97 \\(a\\) \u53d8\u4e3a\u597d\u7684\u3002</p> <p>by @zfx1569_HCl_2023</p> <p>\u8bfb\u9898\u8981\u4ed4\u7ec6\u4e00\u70b9\uff0cnot good \u7684\u6761\u4ef6\u662f\u5bf9\u4e8e\u6240\u6709 \\(i\\) \u90fd\u6709\u9898\u9762\u4e2d\u7684\u6761\u4ef6\u6210\u7acb\u3002</p> <p>\u6240\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint n, m, d;\nint a[si], p[si], pos[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; d;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; p[i], pos[p[i]] = i;\nfor(int i = 1; i &lt;= m; ++i) cin &gt;&gt; a[i];\nint ans = n, ret = 0;\nbool f = false;\nfor(int i = 1; i &lt; m; ++i) {\nif(pos[a[i]] &lt; pos[a[i + 1]] &amp;&amp; pos[a[i + 1]] &lt;= pos[a[i]] + d) {\nans = min(ans, pos[a[i + 1]] - pos[a[i]]);\nif(n - 1 &gt; d) ret = max(ret, pos[a[i + 1]] - pos[a[i]]);\nf = true;\n}   else { f = false; break; }\n}\nif(!f) cout &lt;&lt; \"0\" &lt;&lt; endl;\nelse cout &lt;&lt; min(ans, (d - ret) + 1) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/#cf1778c-flexible-string", "title": "CF1778C - Flexible String", "text": "<p>\u5bf9\u4e8e\u957f\u5ea6\u4e3a \\(n\\) \u7684 \\(a\\),\\(b\\) \u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\\(a\\) \u521d\u59cb\u6700\u591a\u542b\u6709 \\(10\\) \u4e2a\u4e0d\u540c\u5b57\u6bcd\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u81f3\u591a \\(k\\) \u4e2a\u4e0d\u540c\u5b57\u6bcd\uff0c\u5c06 \\(a\\) \u4e2d\u7684\u8fd9\u4e9b\u5b57\u6bcd\u66ff\u6362\u4e3a\u4efb\u610f\u5b57\u6bcd\u3002</p> <p>\u4f60\u9700\u8981\u6c42\u51fa\u7ecf\u8fc7\u4e0a\u8ff0\u64cd\u4f5c\u540e\uff0c\\(a,b\\) \u76f8\u540c\u4f4d\u7f6e\u4e14\u76f8\u540c\u5b57\u6bcd\u7684\u5b50\u4e32\u5c3d\u53ef\u80fd\u591a\u3002 </p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1 \\le t \\le 10^4,1 \\le n \\le 10^5,0 \\le k \\le 10\\)\u3002</p> <p>\u6ce8\u610f\u5230\u7ed9\u5b9a\u7684 \\(a\\) \u7684 \\(|\\Sigma| \\le 10\\)\uff0c\u6240\u4ee5\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u79cd\u5b57\u7b26\u9009\u4e0d\u9009\u7684\u60c5\u51b5\u3002</p> <p>\u7136\u540e\u66b4\u529b check \u5c31\u53ef\u4ee5\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 30;\n\nint n, q;\nstring a, b;\nint ctt[si], re[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nmemset(ctt, 0, sizeof ctt);\ncin &gt;&gt; n &gt;&gt; q;\ncin &gt;&gt; a &gt;&gt; b;\na = ' ' + a, b = ' ' + b;\nint clz = 0;\nfor(int i = 1; i &lt;= n; ++i)\nctt[a[i] - 'a' + 1]++;\nfor(int i = 1; i &lt;= 26; ++i)\nif(ctt[i]) ++clz, re[i] = clz - 1;\n\n// cout &lt;&lt; clz &lt;&lt; endl;\n\nq = min(q, clz); i64 ans = -1;\n// cout &lt;&lt; q &lt;&lt; endl;\n\nstd::vector&lt;int&gt; opt;\nfor(int msk = 0; msk &lt; (1 &lt;&lt; clz); ++msk)\nif(__builtin_popcount(msk) == q) opt.emplace_back(msk);\n\nfor(auto msk : opt) {\nif(__builtin_popcount(msk) == q) {\nstring tmp = a;\nfor(int i = 1; i &lt;= n; ++i)\nif(msk &gt;&gt; re[tmp[i] - 'a' + 1] &amp; 1) tmp[i] = b[i];\n// cout &lt;&lt; tmp &lt;&lt; endl;\ni64 cnt = 0, sum = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nif(tmp[i] == b[i]) cnt++;\nelse {\nsum += cnt * (cnt + 1) / 2;\ncnt = 0;\n}\nif(i == n) sum += cnt * (cnt + 1) / 2;\n}\nans = max(ans, sum);\n}\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/#cf1778d-flexible-string-revisit", "title": "CF1778D - Flexible String Revisit", "text": "<p>\u7ed9\u51fa\u4e24\u4e2a\u957f\u5ea6\u5747\u4e3a \\(n(n\\leq 10^6)\\) \u7684 01 \u4e32 \\(S\\) \u548c \\(T\\)</p> <p>\u6bcf\u6b21\u968f\u673a\u5c06 \\(S\\) \u4e2d\u7684\u67d0\u4e00\u4f4d\u53d6\u53cd</p> <p>\u95ee\uff1a\u7b2c\u4e00\u6b21 \\(S = T\\) \u65f6\u64cd\u4f5c\u6b21\u6570\u7684\u671f\u671b</p> <p>\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u671f\u671b dp \u5957\u8def\uff0c\u662f\u4e00\u79cd\u6bd4\u8f83\u597d\u73a9\u7684\u5904\u7406\u540e\u6548\u6027\u7684\u5957\u8def\u3002</p> <p>\u8003\u8651\u8bbe \\(dp(i)\\) \u8868\u793a\u7531 \\(i\\) \u4e2a\u4f4d\u7f6e\u4e0d\u540c\u53d8\u5230 \\(i - 1\\) \u7684\u671f\u671b\u4ee3\u4ef7\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u53ea\u7b97\u6bcf\u4e00\u6b65\uff0c\u6700\u540e\u7b97\u7b54\u6848\u76f4\u63a5 \\(\\sum\\limits_{i = 1}^k dp(i)\\) \u5373\u53ef\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u6709\u53ef\u80fd\u76f4\u63a5\u4e00\u6b65\u5230\u4f4d\uff0c\u4e5f\u6709\u53ef\u80fd\u5148\u53d8\u6210 \\(dp(i + 1)\\) \u518d\u53d8\u56de\u6765\u3002</p> <p>\u6240\u4ee5 \\(dp(i) = \\dfrac{n - i}{n}(dp(i) + dp(i + 1) + 1) + \\dfrac{i}{n}\\)\uff0c\u8fd9\u91cc\u6bd4\u8f83\u53cd\u5e38\uff0c\u81ea\u5df1\u7684\u72b6\u6001\u91cc\u8fd8\u5305\u542b\u81ea\u5df1\uff0c\u4e0d\u8fc7\u6ca1\u5173\u7cfb\u3002</p> <p>\u6211\u4eec\u76f4\u63a5\u79fb\u9879\uff1a\\(\\dfrac{i}{n}dp(i) = 1 + \\dfrac{n - i}{n}dp(i + 1) \\iff dp(i) = \\dfrac{n}{i} + \\dfrac{n - i}{i}dp(i + 1)\\)\u3002</p> <p>\u597d\uff0c\u7136\u540e\u505a\u5b8c\u4e86\u3002</p> <p>\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u662f\uff0c\u56e0\u4e3a\u72b6\u6001\u53ef\u80fd\u8f6c\u79fb\u8fc7\u53bb\u8fd8\u8f6c\u79fb\u56de\u6765\uff0c\u4f46\u662f\u53d1\u73b0\u8f6c\u79fb\u7684\u533a\u95f4\u662f\u6709\u9650\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u62c6\u5206\u95ee\u9898\uff0c\u53ea\u9700\u8981\u8003\u8651\u6bcf\u4e00\u4e2a\u5c0f\u90e8\u5206\u7684\u7b54\u6848\u6700\u540e\u5408\u5e76\u5373\u53ef\u3002</p> <p>\u601d\u8003\u8fd9\u79cd dp \u7684\u65f6\u5019\u4e0d\u80fd\u88ab\u201c\u4e00\u5b9a\u8981\u627e\u5230\u4e00\u4e2a\u53e6\u5916\u4e00\u5c42\u7684\u72b6\u6001\u6765\u8868\u793a\u8fd9\u4e2a\u72b6\u6001\u201d\u8fd9\u6837\u7684\u5957\u8def\u9650\u5236\uff0c\u8981\u76f4\u63a5\u6839\u636e\u5b9a\u4e49\u5199\u51fa\u6765\uff0c\u540e\u6548\u6027\u53ef\u4ee5\u79fb\u9879\u5904\u7406\u3002</p> <p>\u8fd9\u79cd\u5e94\u8be5\u5728\u671f\u671b dp \u91cc\u9762\u6bd4\u8f83\u5e38\u89c1\uff0c\u5c31\u662f\u56e0\u4e3a\u662f\u5bf9\u5e8f\u5217\u6574\u4f53\u968f\u673a\u9009\uff0c\u6240\u4ee5\u76f4\u63a5\u7ebf\u6027 dp \u505a\u4e0d\u4e86\uff0c\u4e0d\u7136\u72b6\u538b\u4e0d\u7136\u5c31\u8fd9\u6837\u62c6\u5206\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cassert&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\nusing u64 = unsigned long long;\n\nconstexpr i64 safe_mod(i64 x, i64 m) { return x %= m, x &lt; 0 ? x + m : x; }\nconstexpr i64 pow_mod_constexpr(i64 x, i64 n, int m) {\nif(m == 1) return 0;\nunsigned _m = m; uint64_t r = 1, _x = safe_mod(x, m);\nfor(; n; n &gt;&gt;= 1, _x = _x * _x % _m) if(n &amp; 1) r = r * _x % m;\nreturn r;\n}\nconstexpr bool is_prime_constexpr(int n) {\nif(n &lt;= 1) return false;\nif(n == 2 || n == 7 || n == 61) return true;\nif(n % 2 == 0) return false;\ni64 d = n - 1; while(~d &amp; 1) d /= 2;\nfor(i64 a : {2, 7, 61}) {\ni64 t = d, y = pow_mod_constexpr(a, t, n);\nwhile(t != n - 1 &amp;&amp; y != 1 &amp;&amp; y != n - 1) y = y * y % n, t &lt;&lt;= 1;\nif(y != n - 1 &amp;&amp; t % 2 == 0) return false;\n}\nreturn true;\n}\nconstexpr pair&lt;i64, i64&gt; inv_gcd(i64 a, i64 b) {\na = safe_mod(a, b);\nif(a == 0) return {b, 0};\ni64 s = b, t = a, m0 = 0, m1 = 1;\nwhile(t) {\ni64 u = s / t; s -= t * u, m0 -= m1 * u;\ni64 tmp = s; s = t, t = tmp, tmp = m0, m0 = m1, m1 = tmp;\n}\nif(m0 &lt; 0) m0 += b / s;\nreturn {s, m0};\n}\nstruct Barrett_Reduction {\nunsigned m; uint64_t im;\nBarrett_Reduction(unsigned m) :m(m), im(~0ull / m + 1) {}\nunsigned mul(unsigned a, unsigned b) const {\nuint64_t z = (uint64_t)a * b, x = (__uint128_t)z * im &gt;&gt; 64; unsigned v = z - x * m;\nreturn m &lt;= v ? v + m : v;\n}\n};\ntemplate&lt;int m&gt; struct static_modint {\nusing _mint = static_modint;\npublic:\nstatic _mint raw(int v) { _mint x; return x._v = v, x; }\nstatic_modint() :_v(0) {}\ntemplate&lt;class __Tp&gt; static_modint(__Tp v) { i64 x = v % m; _v = x &lt; 0 ? x + m : x; }\nunsigned val() const { return _v; }\n_mint&amp; operator ++ () { if(++_v == m) _v = 0; return *this; }\n_mint&amp; operator -- () { if(!_v--) _v = m - 1; return *this; }\n_mint operator ++ (int) { _mint res = *this; ++*this; return res; }\n_mint operator -- (int) { _mint res = *this; --*this; return res; }\n_mint&amp; operator += (const _mint&amp; rhs) { _v += rhs._v; if(_v &gt;= m) _v -= m; return *this; }\n_mint&amp; operator -= (const _mint&amp; rhs) { _v -= rhs._v; if(_v &gt;= m) _v += m; return *this; }\n_mint&amp; operator *= (const _mint&amp; rhs) { uint64_t z = _v; z *= rhs._v, _v = z % m; return *this; }\n_mint&amp; operator /= (const _mint&amp; rhs) { return *this = *this * rhs.inv(); }\n_mint operator + () const { return *this; }\n_mint operator - () const { return _mint() - *this; }\n_mint pow(i64 n) const { assert(0 &lt;= n); _mint x = *this, r = 1; for(; n; n &gt;&gt;= 1, x *= x) if(n &amp; 1) r *= x; return r; }\n_mint inv() const{ if(prime) { assert(_v); return pow(m - 2); } else { auto eg = inv_gcd(_v, m); assert(eg.first == 1); return eg.second; } }\nfriend _mint operator + (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) += rhs; }\nfriend _mint operator - (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) -= rhs; }\nfriend _mint operator * (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) *= rhs; }\nfriend _mint operator / (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) /= rhs; }\nfriend bool operator == (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v == rhs._v; }\nfriend bool operator != (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v != rhs._v; }\nprivate:\nunsigned _v;\nstatic constexpr bool prime = is_prime_constexpr(m);\n};\nusing modint = static_modint&lt;998244353&gt;;\n\nconst int si = 1e6 + 10;\n\nmodint dp[si];\nint n, a[si], b[si];\n\nvoid init() { }\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\ninit();\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) {\nchar ch; cin &gt;&gt; ch;\nif(ch == '1') a[i] = 1;\nelse a[i] = 0;\n}\nint cnt = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nchar ch; cin &gt;&gt; ch;\nif(ch == '1' &amp;&amp; a[i] != 1) ++cnt;\nif(ch == '0' &amp;&amp; a[i] != 0) ++cnt;\n}\n\nmodint mn = n;\ndp[n] = 1, dp[0] = 0;\nfor(int i = n - 1; i &gt;= 0; --i) {\nmodint trans = n - i;\nif(i != 0)\ndp[i] = (dp[i + 1] * trans + mn) / i;\n}\nfor(int i = 1; i &lt;= n + 1; ++i) {\ndp[i] = dp[i - 1] + dp[i];\n}\ncout &lt;&lt; dp[cnt].val() &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/#abc288d-range-add-query", "title": "ABC288D Range Add Query", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a \\(N\\) \u7684\u5e8f\u5217\uff0c\u5e38\u6570 \\(k\\)\uff0c \\(M\\) \u6b21\u8be2\u95ee\uff0c\u5224\u65ad \\([l, r]\\) \u5185\u7684\u5b50\u5e8f\u5217\u662f\u5426\u4e3a good \u7684\u3002  </p> <p>\u4e00\u4e2a\u5e8f\u5217\u88ab\u8ba4\u4e3a\u662f good \u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u7528\u4ee5\u4e0b\u64cd\u4f5c\u53ef\u4ee5\u4f7f \u8be5\u5e8f\u5217\u7684\u6240\u6709\u5143\u7d20\u503c\u90fd\u53d8\u4e3a \\(0\\)</p> <p>\u9009\u5b9a\u4e24\u4e2a\u6574\u6570 \\(c\\) , \\(i\\) \uff0c\u4f7f\u533a\u95f4 \\([i, i + k - 1]\\) \u5185\u7684\u5143\u7d20\u540c\u65f6\u51cf\u53bb $c $ </p> <p>\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u8f93\u51fa \\(\\texttt{Yes}\\) \u6216\u8005 \\(\\texttt{No}\\)</p> <p>\\(N, Q \\le 2e5\\)</p> <p>\u53d1\u73b0\u8fd9\u4e2a\u9898\u662f\u5bf9\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\u6211\u4eec\u5c1d\u8bd5\u89c2\u5bdf\u7b54\u6848\u7684\u5f62\u5f0f\uff0c\u5c31\u662f\u51e0\u4e2a\u957f\u5ea6\u76f8\u7b49\u7684\u533a\u95f4\u8986\u76d6\u4e86\u4e00\u4e0b\u3002</p> <p>\u6ce8\u610f\u5230\u56e0\u4e3a\u533a\u95f4\u957f\u5ea6\u76f8\u7b49\uff0c\u6240\u4ee5\u8986\u76d6\u4e4b\u540e\u672c\u8d28\u4e0a\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u4ee3\u4ef7\u4e3a\u91cd\u5408\u7684\u533a\u95f4\u6743\u503c\u4e4b\u548c\u7684\u533a\u95f4\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u4e00\u4e2a\u4e00\u4e2a\u7aef\u70b9\u4e0d\u91cd\u53e0\u533a\u95f4\u7684\u60c5\u51b5\u3002</p> <p>\u5f88\u5bb9\u6613\u60f3\u5230\u8003\u8651\u5dee\u5206\u610f\u4e49\uff0c\u8fd9\u6837\u5c31\u662f\u8ba9\u4e00\u4e2a\u5b50\u4e32\u7684\u5dee\u5206\u6570\u7ec4\u5168\u90e8\u53d8\u6210\u96f6\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u64cd\u4f5c\u4e24\u4e2a\u7ec4\u6210\u4e86\u957f\u5ea6\u4e3a \\(k + 1\\) \u7684\u533a\u95f4\u7684\u70b9\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u628a\u4ed6\u4eec\u5206\u6210\u591a\u4e2a\u540c\u4f59\u7c7b\uff0c\u90a3\u4e48\u95ee\u9898\u7b49\u4ef7\u4e8e\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u540c\u4f59\u7c7b\u5185\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u64cd\u4f5c\uff0c\u663e\u7136\u9700\u8981\u5dee\u5206\u610f\u4e49\u4e0b\u6bcf\u4e2a\u540c\u4f59\u7c7b\u5185\u7684\u548c\u4e3a 0\uff0c\u4e0d\u8fc7\u9700\u8981\u7279\u6b8a\u8003\u8651\u4e24\u4e2a\u7aef\u70b9\uff0c\u56e0\u4e3a \\(r + 1\\) \u5e76\u4e0d\u5728\u8003\u8651\u8303\u56f4\u4e4b\u5185\uff0c\u800c\u5982\u679c\u76f4\u63a5\u53d6\u539f\u5e8f\u5217\u5dee\u5206\u8fd9\u4e00\u6bb5\uff0c\u5934\u4e0a\u4e00\u4e2a\u5143\u7d20\u4e0d\u662f\u5bf9\u7684\u3002</p> <p>\u5982\u679c\u76f4\u63a5\u626b\u590d\u6742\u5ea6\u663e\u7136\u4e0d\u6ee1\u8db3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5dee\u5206\u4e4b\u540e\u76f4\u63a5\u628a\u6bcf\u4e2a\u540c\u4f59\u7c7b\u7684\u8d21\u732e\u76f8\u4e92\u52a0\u4e00\u4e0b\uff0c\u6700\u540e\u5224\u4e24\u4e2a\u7aef\u70b9\u5c31\u884c\uff0c\u8fd9\u4e2a\u987a\u5e8f\u9700\u8981\u6ce8\u610f\uff0c\u5982\u679c\u626b\u63cf\u5269\u4f59\u7cfb\u7684\u65f6\u5019\u662f\u4ece\u524d\u6765\u7684\uff0c\u4f60\u8981\u5012\u5e8f\u52a0\u8d21\u732e\uff0c\u4e0d\u7136\u5f00\u5934\u4f4d\u7f6e\u7684\u8d21\u732e\u4e0d\u597d\u5904\u7406\uff0c\u590d\u6742\u5ea6 \\(O(Qk)\\)</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, k, a[si], q;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; k, a[0] = 0;\nstd::vector&lt;int&gt; c(n + 2), d;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i], c[i] = a[i] - a[i - 1];\ncin &gt;&gt; q, d = c;\nfor(int i = n; i &gt;= 1; --i) {\nif(i + k &lt;= n) d[i] += d[i + k];\n}\nwhile(q--) {\nint l, r; cin &gt;&gt; l &gt;&gt; r;\nbool f = true;\nfor(int w = l; w &lt;= l + k - 1; ++w) {\nint mx = w + (r - w + 1) / k * k;\nif(mx != r + 1) {\nf &amp;= (d[w] + ((w == l)? a[l - 1] : 0) == ((mx + k &lt;= n) ? d[mx + k] : 0));\n}\n}\nif(f) cout &lt;&lt; \"Yes\" &lt;&lt; endl;\nelse cout &lt;&lt; \"No\" &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> <p>\u8fd9\u9898\u60f3\u7684\u65f6\u5019\u6ca1\u8003\u8651\u8f6c\u5316\u8fc7\u540e\u7684\u518d\u6b21\u8f6c\u5316\uff0c\u60f3\u5230\u8003\u8651\u5dee\u5206\u610f\u4e49\u5c31\u6ca1\u7ee7\u7eed\u8f6c\u5316\u95ee\u9898\u4e86\u3002</p> <p>\u8fd9\u9898\u5173\u952e\u70b9\u4e4b\u4e00\u6070\u597d\u5c31\u6709\u5728\u5dee\u5206\u610f\u4e49\u4e0a\uff0c\u64cd\u4f5c\u957f\u6210\u4ec0\u4e48\u6837\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#abc288e-wish-list", "title": "ABC288E Wish List", "text": "<p>\u5546\u5e97\u91cc\u6709 \\(N\\) \u4ef6\u5546\u54c1\uff0c\u6807\u53f7 \\(1\\sim N\\)\uff0c\u7b2c \\(i\\) \u4ef6\u5546\u54c1\u6709\u5e95\u4ef7 \\(A_i\\) \u4e14\u53ea\u6709\u4e00\u4ef6\u3002</p> <p>Takahashi \u60f3\u8981\u4e70\u5176\u4e2d\u7684 \\(M\\) \u4ef6\u5546\u54c1\uff0c\u5206\u522b\u662f\u6807\u53f7 \\(X_1,X_2,\\ldots,X_M\\) \u7684\u5546\u54c1\u3002</p> <p>\u4ed6\u4f1a\u6309\u7167\u4ee5\u4e0b\u7684\u65b9\u5f0f\u4e70\u4e1c\u897f\uff1a</p> <p>\u82e5\u8fd8\u5269 \\(r\\) \u4ef6\u5546\u54c1\u6ca1\u6709\u8d2d\u4e70\u8fc7\uff0c\u9009\u62e9\u4e00\u4e2a\u7b26\u5408 \\(1\\le j\\le r\\) \u7684 \\(j\\)\uff0c\u4ed8\u8fd9\u4ef6\u5546\u54c1\u7684\u5e95\u4ef7\u52a0\u4e0a \\(C_j\\) \u7684\u94b1\u8d2d\u4e70\u5176\u4e2d\u6807\u53f7\u7b2c \\(j\\) \u5c0f\u7684\u5546\u54c1\u3002</p> <p>\u6c42\u51fa\u4e70\u5230\u4ed6\u60f3\u8981\u7684\u5546\u54c1\u6240\u4ed8\u7684\u6700\u5c0f\u4ef7\u94b1\u3002</p> <p>\u6ce8\u610f\u4ed6\u4e5f\u53ef\u4ee5\u4e70\u4e0d\u60f3\u8981\u7684\u5546\u54c1\u3002</p> <p>\\(1\\le M\\le N\\le 5000\\)\uff0c\u503c\u57df \\(1e9\\).</p> <p>\u770b\u6570\u636e\u8303\u56f4\u731c\u6d4b\u5e94\u8be5\u662f\u4e00\u4e2a \\(O(n^2)\\) \u7684 dp \u6216\u8005\u8d2a\uff0c\u53ef\u80fd\u5c31\u662f\u8981\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u679a\u4e3e\u4e00\u4e0b\u3002</p> <p>\u5148\u62bd\u8c61\u4e00\u4e0b\u95ee\u9898\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u8ba9\u4f60\u9009\u51fa\u4e00\u4e2a\u7ed9\u5b9a\u96c6\u5408\u7684\u8d85\u96c6\uff0c\u4f7f\u5f97\u9009\u51fa\u8fd9\u4e2a\u8d85\u96c6\u7684\u4ee3\u4ef7\u6700\u5c0f\u3002</p> <p>\u6709\u4e00\u79cd\u60f3\u6cd5\u662f\u6807\u8bb0\u6709\u6ca1\u6709\u88ab\u9009\uff0c\u8fd9\u4e2a\u662f\u4e0d\u73b0\u5b9e\u7684\u3002</p> <p>\u53d1\u73b0\u95ee\u9898\u6700\u56f0\u96be\u7684\u5730\u65b9\u5176\u5b9e\u5c31\u5728\u4e8e\uff0c\u4f60\u5bf9\u4e8e\u4e00\u4e2a\u7269\u54c1\uff0c\u4f60\u4e0d\u592a\u80fd\u5f88\u597d\u7684\u77e5\u9053\u5b83\u5728\u4ec0\u4e48\u65f6\u5019\u5728\u4ec0\u4e48\u4f4d\u7f6e\u4e0a\uff0c\u5e94\u8be5\u600e\u4e48\u51b3\u7b56\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u60f3\u8981\u94a6\u5b9a \\(i\\) \u5728\u7b2c\u51e0\u4e2a\u4f4d\u7f6e\u9009\uff0c\u6216\u8005\u662f\u627e\u51fa\u4e4b\u524d\u9009\u4e86\u54ea\u4e9b\uff0c\u53c8\u6216\u8005\u662f\u8003\u8651\u80fd\u4e0d\u80fd\u5904\u7406\u6389\u4e4b\u524d\u7684\u5f71\u54cd\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u9009\u4e86\u6bd4 \\(i\\) \u4f4d\u7f6e\u66f4\u9760\u540e\u7684\u7269\u54c1\uff0c\u5bf9 \\(i\\) \u7684\u51b3\u7b56\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 \\(i\\) \u524d\u9762\u9020\u6210\u7684\u5f71\u54cd\uff0c\u4e8e\u662f\u6211\u4eec\u8bb0\u4e00\u4e0b\u524d\u9762\u9009\u4e86\u591a\u5c11\u4e2a\u5c31\u884c\uff0c\u7136\u540e dp \u7684\u9636\u6bb5\u5c31\u51fa\u6765\u4e86\u3002</p> <p>\u6240\u4ee5\u8bbe \\(dp(i, j)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u5df2\u7ecf\u9009\u4e86 \\(j\\) \u4e2a\uff0c\u4e14 \\(1 \\sim i\\) \u4e2d\u6240\u6709\u9700\u8981\u9009\u7684\u6570\u90fd\u5df2\u7ecf\u9009\u4e0a\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p> <p>\u8f6c\u79fb\u4e5f\u5f88\u65b9\u4fbf\uff0c\u8003\u8651\u5f53\u524d\u4f4d\u7f6e\u9009\u6216\u8005\u4e0d\u9009\u5373\u53ef\uff0c\u9009\u7684\u8bdd\u8f6c\u79fb\u76f4\u63a5\u53d6 \\(\\min\\limits_{k = i - j + 1}^i c_k\\) \u5c31\u884c\u3002</p> <p>\u7136\u540e\u7b54\u6848\u662f \\(\\min\\limits_{i=m}^ndp(n, i)\\)\uff0c\u521d\u59cb\u5316 \\(dp(i,0)=0\\)\uff0c\u5176\u5b83 \\(+\\infty\\) \u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\n#define int long long\n\nconst int si = 5e3 + 10;\nconst int inf = 0x3f3f3f3f3f3f3f3f;\n\nint n, m, a[si], c[si];\nbool b[si];\nint dp[si][si], cost[si][si];\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; c[i];\nfor(int i = 1, x; i &lt;= m; ++i) cin &gt;&gt; x, b[x] = true;\n\nfor(int l = 1; l &lt;= n; ++l) {\ncost[l][l] = c[l];\nfor(int r = l + 1; r &lt;= n; ++r) {\ncost[l][r] = min(cost[l][r - 1], c[r]);\n}\n}\n\nmemset(dp, 0x3f, sizeof dp);\nfor(int i = 0; i &lt;= n; ++i)\ndp[i][0] = 0;\n\nint cnt = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = cnt; j &lt;= i; ++j) {\nif(j != cnt) dp[i][j] = min(dp[i][j], dp[i - 1][j - 1] + a[i] + cost[i - j + 1][i]);\nif(b[i] == false) dp[i][j] = min(dp[i - 1][j], dp[i][j]);\n}\nif(b[i]) ++cnt;\n} int ans = inf;\nfor(int i = m; i &lt;= n; ++i)\nans = min(ans, dp[n][i]);\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> <p>\u8fd9\u9898\u8003\u8651\u7684\u65f6\u5019\u53ea\u8003\u8651\u5230\u4e86\u600e\u4e48\u6d88\u9664\u8fd9\u4e2a\u5f71\u54cd\uff0c\u60f3\u5230\u4e86\u8bb0\u5f55\u5f53\u524d\u9009\u4e86\u591a\u5c11\u4e2a\uff0c\u4f46\u662f\u6ca1\u6709\u6e05\u6670\u7684\u60f3\u5230\u8fd9\u4e2a\u201c\u6ca1\u6709\u5f71\u54cd\u201d\u7684\u89c2\u5bdf\uff0c\u4e8e\u662f\u8bbe\u8ba1\u4e0d\u51fa\u72b6\u6001\u3002</p> <p>\u56e0\u4e3a\u5361\u6b7b\u4e4b\u540e\u5e76\u6ca1\u6709\u56de\u9000\u8003\u8651\u8fd9\u4e2a\u72b6\u6001\u54ea\u91cc\u51fa\u4e86\u95ee\u9898\uff0c\u9700\u6c42\u662f\u4ec0\u4e48\uff0c\u600e\u4e48\u89e3\u51b3\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#abc288f-integer-division", "title": "ABC288F Integer Division", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a \\(n\\) \u4f4d\u6570 \\(X\\)\uff0c\u628a \\(X\\) \u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u5f97\u5206\u4e3a\u6bcf\u4e00\u6bb5\u7684\u4e58\u79ef\uff08\u53ef\u4ee5\u4e0d\u5206\u5272\uff0c\u5f97\u5206\u4e3a \\(X\\)\uff09\u3002\u6c42\u6240\u6709\u5206\u6cd5\u5f97\u5206\u4e4b\u548c\uff0c\u6a21 \\(998244353\\)\u3002</p> <p>Translate by xionglangqi</p> <p>\u6ce8\u610f\u5230\u8fd9\u4e2a\u9898\u662f\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u5206\u5272\u6c42\u4ee3\u4ef7\u4e4b\u548c\u3002</p> <p>\u5957\u8def\u5730\uff0c\u6211\u4eec\u4e0d\u8003\u8651\u66b4\u529b\u7b97 \\(f\\)\uff0c\u800c\u662f\u8003\u8651\u600e\u4e48\u786e\u5b9a\u8d21\u732e\u3002</p> <p>\u5148\u76f4\u63a5\u89c2\u5bdf \\(f(X)\\) \u5728\u7ed9\u5b9a \\(X\\) \u7684\u60c5\u51b5\u4e0b\u600e\u4e48\u7b97\uff0c\u5c31\u76f4\u63a5\u6309\u7740\u8fd9\u4e2a\u5206\u5272\u4e00\u4e0b\u5c31\u53ef\u4ee5\u3002</p> <p>\u6ce8\u610f\u5230\u8fd9\u4e2a\u4e1c\u897f\u5e76\u4e0d\u5b58\u5728\u660e\u663e\u7684\u57fa\u5e95\u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\uff0c\u53d1\u73b0\u505a\u6cd5\u8981\u6c42 \\(O(n)\\)\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4f4d\u4e00\u4f4d\u9012\u63a8\u3002</p> <p>\u4e5f\u5c31\u662f\u8003\u8651\u600e\u4e48\u4ece \\(1\\sim n - 1\\) \u8fd9\u4e2a\u5b50\u4e32\u7684\u72b6\u6001 \\(\\sum f_{n - 1}(X)\\) \u8f6c\u79fb\u5230 \\(\\sum f_n(X)\\)\u3002</p> <p>\u5f88\u663e\u7136\u5c31\u8003\u8651\u7b2c \\(i\\) \u4f4d\u4f1a\u505a\u4ec0\u4e48\u8d21\u732e\uff0c\u663e\u7136\u53ef\u4ee5\u4e58\u6cd5\u5206\u914d\u5f8b\u4e00\u4e0b\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a \\(\\times 10\\) \u7684\u8d21\u732e\uff1a</p> <p>\\(dp(i) = 10 * dp(i - 1) + a(i) \\times \\sum\\limits_{j = 1}^{i - 1} dp(j)\\)\u3002</p> <p>\u540e\u9762\u90a3\u5768\u524d\u7f00\u548c\u8bb0\u4e00\u4e0b\u5c31\u884c\uff0c\u590d\u6742\u5ea6 \\(O(n)\\)\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\n#define int long long\n\nconst int si = 2e5 + 10;\nconst int mod = 998244353;\n\nint n, a[si];\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nstring s;\ncin &gt;&gt; n, cin &gt;&gt; s;\nfor(int i = 1; i &lt;= n; ++i) {\na[i] = (int)(s[i - 1] - '0');\n}\n\nint ans = 0, sum = 1;\nfor(int i = 1; i &lt;= n; ++i) {\n(ans *= 10ll) %= mod;\n(ans += (1ll * sum * a[i])) %= mod;\n(sum += ans % mod) %= mod;\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> <p>\u8fd9\u9898\u5f88\u5957\u8def\uff0c\u60f3\u7684\u65f6\u5019\u5728\u5206\u914d\u5f8b\u90a3\u4e2a\u5730\u65b9\u7565\u5fae\u5361\u4e86\u4e00\u4e0b\uff0c\u539f\u56e0\u53ef\u80fd\u662f\u56e0\u4e3a\u5f53\u65f6\u5fc3\u60c5\u6bd4\u8f83\u6d6e\u8e81\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#abc289d-step-up-robot", "title": "ABC289D Step Up Robot", "text": "<p>\u7b80\u5355\u5783\u573e\u9898\uff0c\u4e0d\u8bf4\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#abc289e-swap-places", "title": "ABC289E Swap Places", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u70b9\u6709\u70b9\u6743\uff0c\u503c\u53ef\u4ee5\u4e3a \\(0\\) \u6216 \\(1\\)\u3002\u4e24\u4e2a\u4eba\u5206\u522b\u5728\u70b9 \\(1\\) \u548c \\(n\\)\uff0c\u6bcf\u6b21\u4ed6\u4eec\u540c\u65f6\u5411\u81ea\u5df1\u8fd9\u4e2a\u7ed3\u70b9\u7684\u4efb\u610f\u4e00\u4e2a\u90bb\u5c45\u79fb\u52a8\uff0c\u4efb\u610f\u65f6\u523b\uff0c\u4ed6\u4eec\u6240\u5728\u7684\u7ed3\u70b9\u7684\u6743\u503c\u4e0d\u5f97\u76f8\u540c\u3002\u6700\u540e\u8981\u4f7f\u5f97\u4ed6\u4eec\u4e92\u76f8\u4ea4\u6362\u4f4d\u7f6e\u3002\u8f93\u51fa\u6700\u5c0f\u6b21\u6570\u6216\u8f93\u51fa\u65e0\u89e3\u3002\\(n,m\\le2\\times10^3\\)\u3002</p> <p>\u4e5f\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u5176\u5b9e\u5c31\u662f\u56e0\u4e3a\uff0c\u76f4\u63a5\u627e\u4e0d\u597d\u505a\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8bbe\u4e00\u4e2a\u72b6\u6001\u88c5\u4e00\u4e0b\u9650\u5236\uff0c\u53e6\u5916\u4e00\u4e2a\u9650\u5236\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u8868\u8fbe\u5c31\u884c\u3002</p> <p>\u8f6c\u79fb\u53ef\u4ee5\u5229\u7528 bfs \u505a\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;tuple&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e3 + 10;\n\nint n, m;\nint tot = 0, head[si];\nstruct Edge { int ver, Next; } e[si &lt;&lt; 1];\ninline void add(int u, int v) { e[tot] = (Edge){v, head[u]}, head[u] = tot++; }\n\nint c[si];\nint dp[si][si];\n\nstd::queue&lt;std::tuple&lt;int, int, int&gt;&gt; q;\n\nvoid Init() {\ntot = 0; memset(head, -1, sizeof head);\nwhile(q.size()) q.pop();\nmemset(dp, -1, sizeof dp);\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nInit();\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; c[i];\n}\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v; cin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n}\n\nq.push(make_tuple(0, 1, n));\nwhile(!q.empty()) {\nauto [dis, u, v] = q.front();\nq.pop();\nif(dp[u][v] != -1) continue;\ndp[u][v] = dis;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nfor(int j = head[v]; ~j; j = e[j].Next) {\nif(c[e[i].ver] != c[e[j].ver]) q.push(make_tuple(dis + 1, e[i].ver, e[j].ver));\n}\n}\n}\n\ncout &lt;&lt; dp[n][1] &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> <p>\u8fd9\u9898\u60f3\u7684\u65f6\u5019\u7eaf\u5c5e\u667a\u969c\u4e86\uff0c\u7b80\u5355 dp \u6a21\u578b\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#abc289f-teleporter-takahashi", "title": "ABC289F Teleporter Takahashi", "text": "<p>\u5728\u5750\u6807\u7cfb\u4e2d\u6709\u4e00\u4e2a\u8d77\u59cb\u70b9 \\((s_x,s_y)\\) \u548c\u4e00\u4e2a\u77e9\u5f62 \\(\\{(x,y)|a-0.5\\le x\\le b+0.5,c-0.5\\le x\\le d+0.5\\}\\)\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u9009\u4e2d\u4e00\u4e2a\u77e9\u5f62\u5185\u7684\u6574\u70b9\u5e76\u628a\u5f53\u524d\u70b9\u79fb\u5230\u4e0e\u8be5\u70b9\u5bf9\u79f0\u7684\u4f4d\u7f6e\uff0c\u95ee\u80fd\u5426\u5728 \\(10^6\\) \u6b21\u64cd\u4f5c\u4ee5\u5185\u5230\u8fbe\u76ee\u6807\u70b9 \\((t_x,t_y)\\)</p> <p>\u5982\u80fd\u8bf7\u8f93\u51fa<code>Yes</code>\u5e76\u7ed9\u51fa\u4efb\u610f\u4e00\u4e2a\u65b9\u6848\uff0c\u5982\u4e0d\u80fd\u8f93\u51fa<code>No</code> </p> <p>\u7ed9\u51fa\u7684\u6240\u6709\u6a2a\u7eb5\u5750\u6807\u90fd\u662f \\(\\le 2\\times10^5\\) \u7684\u975e\u8d1f\u6574\u6570</p> <p>\u53ef\u4ee5\u624b\u6413\u6837\u4f8b\u89c2\u5bdf\u5230\u4e00\u4e2a\u5c0f\u5c0f\u7684\u6027\u8d28\u3002</p> <p>\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u6bb5\u533a\u95f4 \\([a,b]\\)\uff0c\u76f4\u63a5\u9009 \\((a, y), (a + 1, y)\\) \u4e24\u6b21\uff0c\u5c31\u80fd\u8ba9\u5b83\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u524d\u8fdb \\(2\\) \u4e2a\u5355\u4f4d\u3002</p> <p>\u51cf\u5c0f\u5c31\u53cd\u8fc7\u6765\uff0c\u7136\u540e\u4e24\u4e2a\u7ef4\u5ea6\u7684\u9650\u5236\u53ef\u4ee5\u5957\u8def\u5730\u5206\u5f00\u6765\u505a\u3002</p> <p>\u7b80\u5355\u5224\u65ad\u4e00\u4e0b\u65e0\u89e3\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u9650\u5236\uff0c\u4fdd\u8bc1\u4e86\u8fd9\u4e2a\u4e0d\u4f1a\u8d85\u9650\u5236\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nint sx, sy;\nint tx, ty;\nint a, b, c, d;\n\nvoid Map(int x, int y) {\nsx = x * 2 - sx;\nsy = y * 2 - sy;\ncout &lt;&lt; x &lt;&lt; \" \" &lt;&lt; y &lt;&lt; endl;\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; sx &gt;&gt; sy;\ncin &gt;&gt; tx &gt;&gt; ty;\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;\nbool even = (a != b || sx == tx) &amp;&amp; (c != d || sy == ty);\nbool odd = (a != b || sx + tx == a + b) &amp;&amp; (c != d || sy + ty == c + d);\nbool nsam = ((sx &amp; 1) != (tx &amp; 1)) || ((sy &amp; 1) != (ty &amp; 1));\n\nif(nsam || (!even &amp;&amp; !odd)) return cout &lt;&lt; \"No\" &lt;&lt; endl, 0;\n\ncout &lt;&lt; \"Yes\" &lt;&lt; endl; if(!even) Map(a, c);    while(sx &lt; tx) Map(a, c), Map(a + 1, c);\nwhile(sy &lt; ty) Map(a, c), Map(a, c + 1);\nwhile(sx &gt; tx) Map(a + 1, c), Map(a, c);\nwhile(sy &gt; ty) Map(a, c + 1), Map(a, c);\n\nreturn 0;\n}\n</code></pre> <p>\u8fd9\u4e2a\u5c31\u662f\u6784\u9020\u9898\u91cc\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u601d\u60f3\uff0c\u8003\u5bdf\u6781\u7aef\u8fb9\u754c\u60c5\u51b5\uff0c\u5728\u9650\u5236\u6b21\u6570\u5185\u4e00\u70b9\u4e00\u70b9\u51d1\u51fa\u7b54\u6848\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#abc290d-marking", "title": "ABC290D Marking", "text": "<p>\u6709 \\(n\\) \u4e2a\u6392\u6210\u4e00\u4e2a\u73af\u7684\u683c\u5b50\uff0c\u7f16\u53f7\u4e3a \\(0\\sim n-1\\)\u3002\u73b0\u5728\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li>\u9009\u62e9 \\(0\\) \u53f7\u683c\u5b50\uff0c\u5c06\u5176\u6253\u4e0a\u6807\u8bb0\u3002</li> <li>\u9009\u62e9 \\(d\\) \u4e2a\u683c\u5b50\u540e\u7684\u7b2c\u4e00\u4e2a\u5c1a\u672a\u88ab\u6807\u8bb0\u7684\u683c\u5b50\uff0c\u5c06\u5176\u6253\u4e0a\u6807\u8bb0\u3002</li> <li>\u91cd\u590d\u6267\u884c\u76f4\u5230\u6240\u6709\u683c\u5b50\u90fd\u88ab\u6253\u4e0a\u6807\u8bb0\u3002</li> </ul> <p>\u4f60\u9700\u8981\u8f93\u51fa\u7b2c \\(k\\) \u6b21\u6807\u8bb0\u7684\u683c\u5b50\u7684\u7f16\u53f7\u3002</p> <p>\u5171 \\(T\\) \u7ec4\u6570\u636e\u3002\\(1\\le T\\le 10^5\\)\uff0c\\(1\\le k\\le n\\le10^9\\)\uff0c\\(1\\le d\\le 10^9\\)\u3002</p> <p>\u2014\u2014 by Register_int</p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\u4e00\u4e2a\u4e8b\u60c5\u662f\uff0c\u8fd9\u91cc\u5c31\u662f\u7c7b\u4f3c\u54c8\u5e0c\u8868\u7684\u4e00\u4e2a\u8fc7\u7a0b\u3002</p> <p>\u4e0d\u96be\u60f3\u5230\uff0c\u6211\u4eec\u4f1a\u628a\u539f\u6765\u7684\u65b9\u5757\u6309\u4f4d\u7f6e\u5206\u6210\u591a\u4e2a\u540c\u4f59\u7c7b\uff0c\u4e14\u4ed6\u4eec\u6784\u6210\u5b8c\u5168\u5269\u4f59\u7cfb\u3002</p> <p>\u6709\u4e00\u4e9b\u540c\u4f59\u7c7b\u957f\u5ea6\u4e0d\u5b8c\u6574\uff0c\u5206\u4e24\u6bb5\u7b97\u4e00\u4e0b\u5c31\u884c\uff0c\u6216\u8005\u53ef\u4ee5\u8003\u8651\u63a8\u4e2a\u5f0f\u5b50\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nvoid solve(int n, int d, int k) {   k--;\nint Gcd = n / __gcd(n, d);\ncout &lt;&lt; d * k % n + k / Gcd &lt;&lt; endl;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T; int tt = T;\nwhile(T--) {\nint n, d, k;\ncin &gt;&gt; n &gt;&gt; d &gt;&gt; k;\nsolve(n, d, k); continue;\nd %= n;\nint len = ceil(double(n) / double(d)); // \u6bcf\u4e2a\u540c\u4f59\u7c7b\u7684\u957f\u5ea6\u3002\nint full = (double(n) / double(len));// \u591a\u5c11\u4e2a\u5b8c\u6574\u7684\u5269\u4f59\u7cfb\u3002\nint r = n - full, bel; // belongs to which.\nif(k &lt;= full * len) {\nbel = ceil(double(k) / double(len));\nk %= len, k = (k + 1) % len;\n}\nelse {\nbel = ceil(double(k - (full * len)) / double(len - 1)) + full;\nk -= full * len, k %= (len - 1), k = (k + 1) % (len - 1);\n}\n// cout &lt;&lt; \"Case\" &lt;&lt; T - tt &lt;&lt; \":\\n\";\nbel--, cout &lt;&lt; bel + (d * k) &lt;&lt; endl;\n// cout &lt;&lt; \"bel = \" &lt;&lt; bel &lt;&lt; \" len = \" &lt;&lt; len &lt;&lt; \" full = \" &lt;&lt; full &lt;&lt; \" k = \" &lt;&lt; k &lt;&lt; \" d = \" &lt;&lt; d &lt;&lt; endl; \n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> <p>\u8003\u8651\u7684\u65f6\u5019\u53ea\u8003\u8651\u4e86\u5206\u6bb5\u7684\u62c6\u5206\u505a\u6cd5\uff0c\u6ca1\u60f3\u5230\u600e\u4e48\u76f4\u63a5\u627e\u5230\u4e00\u4e2a\u5f0f\u5b50\u4ee3\u66ff\u95ee\u9898\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#abc290e-make-it-palindrome", "title": "ABC290E Make it Palindrome", "text": "<p>\u5b9a\u4e49\u4e00\u4e2a\u5e8f\u5217 \\(X\\) \u7684\u8d21\u732e \\(f(X)\\) \u4e3a\uff0c\u4fee\u6539 \\(X\\) \u4e2d\u7684\u4e00\u4e9b\u4f4d\u7f6e\uff0c\u4f7f\u5f97 \\(X\\) \u53d8\u4e3a\u56de\u6587\u7684\u6700\u5c0f\u4fee\u6539\u6b21\u6570\u3002</p> <p>\u5bf9\u7ed9\u5b9a\u7684\uff0c\u957f\u5ea6\u4e3a \\(N\\) \u7684\u5e8f\u5217 \\(A\\)\uff0c\u6c42 \\(A\\) \u7684\u6240\u6709\u5b50\u4e32\u7684\u8d21\u732e\u4e4b\u548c\u3002</p> <p>\\(1\\le N \\le 2 \\times 10^5, 1\\le A_i \\le N\\)\u3002</p> <p>Translate by black_trees.</p> <p>\u8fd9\u7c7b\u95ee\u9898\u8fd8\u662f\u90a3\u4e48\u7684\u5957\u8def\u3002</p> <p>\u6211\u4eec\u8003\u8651\u4ec0\u4e48\u4e1c\u897f\u4f1a\u505a\u51fa\u8d21\u732e\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u70b9\u5bf9 \\((i, j),a_i \\not= a_j\\)\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u505a\u51fa\u7684\u8d21\u732e\uff0c\u5e94\u8be5\u662f\u94a6\u5b9a \\(i,j\\) \u76f8\u5bf9\u7684\u56de\u6587\u4e32\u7684\u4e2a\u6570\u3002</p> <p>\u6b63\u7740\u7b97\u4e0d\u592a\u597d\u641e\uff0c\u4e8e\u662f\u6211\u4eec\u53cd\u7740\u7b97\u5c31\u884c\uff0c\u7b97\u6709\u591a\u5c11\u4e0d\u4f1a\u505a\u8d21\u732e\u3002</p> <p>\u7136\u540e\u968f\u4fbf\u5199\u5199\u5c31\u884c\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, a[si];\nstd::vector&lt;int&gt; pos[si];\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n; int ans = 0;\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; a[i];\npos[a[i]].emplace_back(i);\n}\n\nint ret = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nint l = 0, r = pos[i].size() - 1;\nwhile(l &lt; r) {\nif(pos[i][l] &lt; n - pos[i][r] + 1)\nret += (r - l) * pos[i][l], ++l;\nelse ret += (r - l) * (n - pos[i][r] + 1), --r;\n}\n}\n\nfor(int i = 1; i &lt;= n; ++i) {\nans += (n - i + 1) * (i / 2);\n} cout &lt;&lt; ans - ret &lt;&lt; endl;\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/#abc290f-maximum-diameter", "title": "ABC290F Maximum Diameter", "text": "<p>\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6b63\u6574\u6570\u5e8f\u5217 \\(X=(X_1,X_2,\\cdots,X_n)\\)\uff0c\u5b9a\u4e49 \\(f(X)\\) \u4e3a\uff1a</p> <ul> <li>\u5bf9\u4e8e\u6240\u6709\u8282\u70b9\u6570\u91cf\u4e3a \\(n\\)\uff0c\u4e14\u70b9 \\(i\\) \u7684\u5ea6\u6570\u6070\u597d\u4e3a \\(X_i\\) \u7684\u6811\uff0c\u5176\u76f4\u5f84\u7684\u6700\u5927\u503c\u3002\u5982\u4e0d\u5b58\u5728\uff0c\u5219\u503c\u4e3a \\(0\\)\u3002</li> </ul> <p>\u4f60\u9700\u8981\u5bf9\u4e8e\u6240\u6709\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6b63\u6574\u6570\u5e8f\u5217 \\(X\\) \u8ba1\u7b97 \\(f(X)\\) \u7684\u548c\uff0c\u53ef\u4ee5\u8bc1\u660e\u5176\u4e3a\u6709\u9650\u503c\u3002\u7b54\u6848\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\\(T\\) \u7ec4\u6570\u636e\u3002\\(1\\le T\\le2\\times10^5\\)\uff0c\\(2\\le n\\le10^6\\)\u3002</p> <p>\u2014\u2014 by Register_int</p> <p>\u6211\u4eec\u62ff\u5230\u8fd9\u9898\uff0c\u4ecd\u65e7\u662f\u5957\u8def\u7684\u8003\u8651\u7b97\u8d21\u732e\u3002</p> <p>\u4f46\u662f\u6ce8\u610f\u5230\u8fd9\u4e2a \\(f(X)\\) \u7684\u5b9a\u4e49\u662f\uff0c\u5bf9\u4e8e\u6240\u6709 \\(X\\) \u80fd\u6784\u9020\u51fa\u7684\u6811\u91cc\uff0c\u6700\u5927\u7684\u76f4\u5f84\uff0c\u76f8\u5f53\u4e8e\u6709\u4e24\u4e2a max \u5957\u5728\u4e00\u8d77\uff0c\u76f4\u63a5\u6c42\u548c\u6362\u65b9\u5f0f\u7b97\u8d21\u732e\u4e0d\u597d\u5904\u7406\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u89c2\u5bdf\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684 \\(X\\)\uff0c\\(f(X)\\) \u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u3002</p> <p>\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u4efb\u610f\u5408\u6cd5\u7684 \\(X\\) \u5fc5\u7136\u5305\u542b\u81f3\u5c11\u4e24\u4e2a \\(X_i = 1\\) \u7684\u5143\u7d20</p> <p>\u8fd9\u4e2a\u662f\u663e\u7136\u7684\uff0c\u6781\u7aef\u60c5\u51b5\u5c31\u662f\u4e00\u6761\u94fe\u3002</p> <p>\u8fd9\u4e2a\u7ed3\u8bba\u542f\u53d1\u6211\u4eec\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c3d\u91cf\u957f\u7684\u6784\u9020\u51fa\u4e00\u6761\u94fe\u3002</p> <p>\u505a\u6cd5\u5f88\u7b80\u5355\uff0c\u9009\u4e24\u4e2a \\(X_i = 1\\) \u7684\u70b9\u4f5c\u4e3a\u7aef\u70b9\uff0c\u628a\u6240\u6709 \\(X_i \\not= 1\\) \u7684\u8282\u70b9\u6254\u5230\u4e2d\u95f4\uff0c\u5176\u4ed6\u7684 \\(X_i = 1\\) \u7684\u8282\u70b9\u6302\u5728\u4e2d\u95f4\u5c31\u884c\u3002</p> <p>\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u505a\u6cd5\u662f\u6b63\u786e\u7684\uff1a</p> <p>\u8bc1\u660e\uff1a</p> <p>\u94a6\u5b9a\u6070\u597d\u6709 \\(k\\) \u4e2a \\(X_i = 1\\) \u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u5ea6\u6570\u662f \\(2n - 2 - k\\)\uff08\u7531\u6811\u7684\u6027\u8d28\uff0c\u5ea6\u6570\u4e4b\u548c\u4e3a \\(2n-2\\)\uff09\u3002</p> <p>\u6211\u4eec\u8003\u8651\u628a\u8fd9\u6761\u94fe\u7684\u5ea6\u6570\u4e5f\u51cf\u53bb\uff0c\u5c31\u662f\u8fd9 \\(n - k\\) \u4e2a\u8282\u70b9\u4e4b\u95f4\u7684 \\(n - k - 1\\) \u6761\u8fb9\u4e58\u4e8c\uff0c\u5728\u52a0\u4e0a\u4e24\u8fb9\u7684 \\(2\\)\u3002</p> <p>\u90a3\u4e48\u8fd8\u5269\u4e0b\u7684\u5ea6\u6570\u5c31\u662f \\(2n - 2 - k - 2(n - k - 1) - 2 = k\\)\uff0c\u90a3\u6070\u597d\u5c31\u80fd\u6784\u9020\u51fa\u6765\u3002</p> <p>\u597d\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u8ba1\u6570\uff0c\u6ce8\u610f\u5230\u6392\u5e8f\u8fc7\u540e\u76f8\u7b49\u7684 \\(X\\) \u7684 \\(f(X)\\) \u663e\u7136\u76f8\u7b49\uff0c\u6211\u4eec\u7b97\u4e00\u4e0b\u65b9\u6848\u6570\u5c31\u884c\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\u8ba1\u6570\u7684\u9636\u6bb5\u5e94\u8be5\u662f \\(k\\)\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u94a6\u5b9a\u67d0\u4e9b\u4f4d\u7f6e\u90fd\u662f \\(1\\)\uff0c\u8fd9\u90e8\u5206\u65b9\u6848\u6570\u662f \\(\\dbinom{n}{k}\\)\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u5c31\u5168\u90e8\u9700\u8981 \\(1\\)\uff0c\u4e14\u6211\u4eec\u8981\u8ba9\u8fd9 \\(n - k\\) \u4e2a \\(X_i\\) \u7684 \\(\\sum = 2n - 2 - k\\)\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u76f4\u63a5\u7ed9\u6bcf\u4e2a\u8282\u70b9\u51cf\u53bb \\(2\\)\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u63d2\u677f\u6cd5\uff0c\u8fd9\u90e8\u5206\u65b9\u6848\u6570\u662f \\(\\dbinom{n - 3}{n - k - 1}\\)\u3002</p> <p>\u76f4\u5f84\u957f\u5ea6\u4e3a \\(n - k + 1\\)\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u4e3a \\(\\sum\\limits_{k = 1}^n \\dbinom{n}{k} \\dbinom{n - 3}{n - k - 1}(n - k + 1)\\)\u3002</p> <p>\u8fd9\u4e2a\u663e\u7136\u4e0d\u884c\uff0c\u6211\u4eec\u63a8\u4e00\u4e0b\u5f0f\u5b50\u3002</p> <p>\u6ce8\u610f\u5230\u8fd9\u4e2a\u4e1c\u897f\u957f\u7684\u5f88\u50cf\u4e00\u4e2a\u6052\u7b49\u5f0f\uff1a\\(\\sum\\limits_{i = 0}^k\\dbinom{n}{i}\\dbinom{m}{k - i} = \\dbinom{n + m}{k}\\)\uff0c\u8fd9\u4e1c\u897f\u53ef\u4ee5\u76f4\u63a5\u7ec4\u5408\u610f\u4e49\u8bc1\u660e\uff0c\u542c\u8bf4\u4e5f\u53eb\u505a\u8303\u5fb7\u8499\u5fb7\u5377\u79ef\u3002</p> <p>\u4f46\u662f\u6709\u4e00\u5768 \\(n - k + 1\\)\uff0c\u4e0d\u597d\u5316\uff0c\u53c8\u60f3\u5230\u6709\u4e00\u4e2a\u6052\u7b49\u5f0f\uff1a\\(k\\dbinom{n}{k} = n\\dbinom{n - 1}{n - k}\\)</p> <p>\u53d1\u73b0 \\(n - k + 1\\) \u90a3\u4e00\u5768\u53ef\u4ee5\u62c6\u5f00\u53d8\u6210 \\(n - k - 1\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u628a \\(k\\) \u6d88\u6389\uff0c\u7cfb\u6570\u5199\u5230\u524d\u9762\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u5199\u51fa\uff1a</p> \\[ \\sum\\limits_{k = 1}^n \\dbinom{n}{k} \\dbinom{n - 3}{n - k - 1}(n - k + 1) \\iff \\\\ \\sum\\limits_{k = 1}^n \\dbinom{n}{k} \\dbinom{n - 3}{n - k - 1}(n - k - 1) + 2\\sum\\limits_{k = 1}^n\\dbinom{n}{k} \\dbinom{n - 3}{n - k - 1} \\iff \\\\ (n - 3)\\sum\\limits_{k = 1}^n \\dbinom{n}{k} \\dbinom{n - 4}{n - k - 2} + 2\\sum\\limits_{k = 1}^n\\dbinom{n}{k} \\dbinom{n - 3}{n - k - 1} \\] <p>\u6839\u636e\u8303\u5fb7\u8499\u5fb7\u5377\u79ef\u516c\u5f0f\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a</p> <p>\\(ans = (n - 3)\\dbinom{2n - 4}{n - 2} + 2\\dbinom{2n - 3}{n - 1}\\)</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u7ebf\u6027\u505a\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cassert&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\nusing u64 = unsigned long long;\n\nconstexpr i64 safe_mod(i64 x, i64 m) { return x %= m, x &lt; 0 ? x + m : x; }\nconstexpr i64 pow_mod_constexpr(i64 x, i64 n, int m) {\nif(m == 1) return 0;\nunsigned _m = m; uint64_t r = 1, _x = safe_mod(x, m);\nfor(; n; n &gt;&gt;= 1, _x = _x * _x % _m) if(n &amp; 1) r = r * _x % m;\nreturn r;\n}\nconstexpr bool is_prime_constexpr(int n) {\nif(n &lt;= 1) return false;\nif(n == 2 || n == 7 || n == 61) return true;\nif(n % 2 == 0) return false;\ni64 d = n - 1; while(~d &amp; 1) d /= 2;\nfor(i64 a : {2, 7, 61}) {\ni64 t = d, y = pow_mod_constexpr(a, t, n);\nwhile(t != n - 1 &amp;&amp; y != 1 &amp;&amp; y != n - 1) y = y * y % n, t &lt;&lt;= 1;\nif(y != n - 1 &amp;&amp; t % 2 == 0) return false;\n}\nreturn true;\n}\nconstexpr pair&lt;i64, i64&gt; inv_gcd(i64 a, i64 b) {\na = safe_mod(a, b);\nif(a == 0) return {b, 0};\ni64 s = b, t = a, m0 = 0, m1 = 1;\nwhile(t) {\ni64 u = s / t; s -= t * u, m0 -= m1 * u;\ni64 tmp = s; s = t, t = tmp, tmp = m0, m0 = m1, m1 = tmp;\n}\nif(m0 &lt; 0) m0 += b / s;\nreturn {s, m0};\n}\nstruct Barrett_Reduction {\nunsigned m; uint64_t im;\nBarrett_Reduction(unsigned m) :m(m), im(~0ull / m + 1) {}\nunsigned mul(unsigned a, unsigned b) const {\nuint64_t z = (uint64_t)a * b, x = (__uint128_t)z * im &gt;&gt; 64; unsigned v = z - x * m;\nreturn m &lt;= v ? v + m : v;\n}\n};\ntemplate&lt;int m&gt; struct static_modint {\nusing _mint = static_modint;\npublic:\nstatic _mint raw(int v) { _mint x; return x._v = v, x; }\nstatic_modint() :_v(0) {}\ntemplate&lt;class __Tp&gt; static_modint(__Tp v) { i64 x = v % m; _v = x &lt; 0 ? x + m : x; }\nunsigned val() const { return _v; }\n_mint&amp; operator ++ () { if(++_v == m) _v = 0; return *this; }\n_mint&amp; operator -- () { if(!_v--) _v = m - 1; return *this; }\n_mint operator ++ (int) { _mint res = *this; ++*this; return res; }\n_mint operator -- (int) { _mint res = *this; --*this; return res; }\n_mint&amp; operator += (const _mint&amp; rhs) { _v += rhs._v; if(_v &gt;= m) _v -= m; return *this; }\n_mint&amp; operator -= (const _mint&amp; rhs) { _v -= rhs._v; if(_v &gt;= m) _v += m; return *this; }\n_mint&amp; operator *= (const _mint&amp; rhs) { uint64_t z = _v; z *= rhs._v, _v = z % m; return *this; }\n_mint&amp; operator /= (const _mint&amp; rhs) { return *this = *this * rhs.inv(); }\n_mint operator + () const { return *this; }\n_mint operator - () const { return _mint() - *this; }\n_mint pow(i64 n) const { assert(0 &lt;= n); _mint x = *this, r = 1; for(; n; n &gt;&gt;= 1, x *= x) if(n &amp; 1) r *= x; return r; }\n_mint inv() const{ if(prime) { assert(_v); return pow(m - 2); } else { auto eg = inv_gcd(_v, m); assert(eg.first == 1); return eg.second; } }\nfriend _mint operator + (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) += rhs; }\nfriend _mint operator - (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) -= rhs; }\nfriend _mint operator * (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) *= rhs; }\nfriend _mint operator / (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) /= rhs; }\nfriend bool operator == (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v == rhs._v; }\nfriend bool operator != (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v != rhs._v; }\nprivate:\nunsigned _v;\nstatic constexpr bool prime = is_prime_constexpr(m);\n};\nstruct dynamic_modint {\nusing _mint = dynamic_modint;\npublic:\nstatic void set_mod(int m) { assert(1 &lt;= m), bt = Barrett_Reduction(m); }\nstatic _mint raw(int v) { _mint x; return x._v = v, x; }\ndynamic_modint() :_v(0) {}\ntemplate&lt;class __Tp&gt; dynamic_modint(__Tp v) { i64 x = v % (int)bt.m; _v = x &lt; 0 ? x + bt.m : x; }\nunsigned val() const { return _v; }\n_mint&amp; operator ++ () { if(++_v == bt.m) _v = 0; return *this; }\n_mint&amp; operator -- () { if(!_v--) _v = bt.m - 1; return *this; }\n_mint operator ++ (int) { _mint res = *this; ++*this; return res; }\n_mint operator -- (int) { _mint res = *this; --*this; return res; }\n_mint&amp; operator += (const _mint&amp; rhs) { _v += rhs._v; if(_v &gt;= bt.m) _v -= bt.m; return *this; }\n_mint&amp; operator -= (const _mint&amp; rhs) { _v += bt.m - rhs._v; if(_v &gt;= bt.m) _v -= bt.m; return *this; }\n_mint&amp; operator *= (const _mint&amp; rhs) { _v = bt.mul(_v, rhs._v); return *this; }\n_mint&amp; operator /= (const _mint&amp; rhs) { return *this = *this * rhs.inv(); }\n_mint operator + () const { return *this; }\n_mint operator - () const { return _mint() - *this; }\n_mint pow(i64 n) const { assert(0 &lt;= n); _mint x = *this, r = 1; for(; n; n &gt;&gt;= 1, x *= x) if(n &amp; 1) r *= x; return r; }\n_mint inv() const { auto eg = inv_gcd(_v, bt.m); assert(eg.first == 1); return eg.second; }\nfriend _mint operator + (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) += rhs; }\nfriend _mint operator - (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) -= rhs; }\nfriend _mint operator * (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) *= rhs; }\nfriend _mint operator / (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) /= rhs; }\nfriend bool operator == (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v == rhs._v; }\nfriend bool operator != (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v != rhs._v; }\nprivate:\nunsigned _v;\nstatic Barrett_Reduction bt;\n};\nusing modint = dynamic_modint;\nusing barrett = Barrett_Reduction;\n\nbarrett modint::bt = 998244353ll;\n\nconst int si = 2e6 + 10;\n\nmodint fact[si]; void Init() {\nfact[0] = 1;\nfor(int i = 1; i &lt; si; ++i) fact[i] = fact[i - 1] * i;\n}\nmodint C(int n, int m) {\nif(m &lt; 0 || n &lt; m) return 0;\nreturn fact[n] / (fact[n - m] * fact[m]);\n}\nint solve(int n) {\nreturn ((n - 3) * C(n * 2 - 4, n - 2) + 2 * C(2 * n - 3, n - 1)).val();\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nInit();\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nint n; cin &gt;&gt; n;\ncout &lt;&lt; solve(n) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-01-02/#abc291def", "title": "ABC291D,E,F", "text": "<p>\u8fd9\u4e2a\u592a\u6c34\u4e86\uff0c\u5c31\u4e0d\u5199\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2023-01-02/#abc292def", "title": "ABC292D,E,F", "text": "<p>\u8fd9\u4e2a\u4e5f\u592a\u6c34\u4e86\uff0c\u4e0d\u5199\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2023-03-04/", "title": "2023\u5e743,4\u6708AT&CF", "text": ""}, {"location": "rec/atcf-for-2023-03-04/#cfr-857", "title": "CFR #857", "text": "<p>Contest Id: <code>1801/1802</code></p> <p>\u4e45\u8fdd\u7684 div1 2 \u5206\u5f00\u7684\u573a\u3002</p> <p>Vp \u6253\u4e86 5 \u9898\uff0c\u5f88\u5f00\u5fc3\uff0c\u6709\u70b9\u601d\u8003\u7684\u8ff9\u8c61\u4e86\u3002</p>"}, {"location": "rec/atcf-for-2023-03-04/#2a-likes", "title": "2A - Likes", "text": "<p>\u6709\u4e00\u4e9b\u4eba\uff0c\u4ed6\u4eec\u4f1a add likes \u6216\u8005 remove likes\u3002</p> <p>\u540c\u4e00\u4e2a\u4eba\u7684\u64cd\u4f5c\u7528 \\(x, -x\\) \u6765\u8bb0\u5f55\uff0c\u8868\u793a add \u6216\u8005 remove\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217\uff0c\u4f60\u53ef\u4ee5 rearrange \u4e00\u4e0b\uff0c\u8981\u4f60\u6c42\u6bcf\u4e2a\u65f6\u523b\uff0c\u6700\u5927\u7684 likes \u548c\u6700\u5c0f\u7684 likes \u6570\u3002</p> <p>\u8003\u8651\u8bb0\u5f55\u4e00\u4e0b\u6709\u51e0\u4e2a remove likes\u3002</p> <p>\u7136\u540e\u6700\u5927\u5316\u663e\u7136\u662f\u628a remove likes \u4e22\u5230\u540e\u9762\u3002</p> <p>\u7136\u540e\u6700\u5c0f\u5316\u5c31\u662f\u5c3d\u91cf\u65e9\u7684 add remove, add remove \u8fd9\u6837\u4ea4\u66ff\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint T, n, a[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n;\nint cnt = 0;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], cnt += (a[i] &lt; 0);\nfor(int i = 1; i &lt;= n - cnt; ++i) {\ncout &lt;&lt; i &lt;&lt; \" \";\n}\nfor(int i = 1; i &lt;= cnt; ++i) {\ncout &lt;&lt; n - cnt - i &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\nfor(int i = 1; i &lt;= cnt; ++i) {\ncout &lt;&lt; 1 &lt;&lt; \" \";\ncout &lt;&lt; \"0\" &lt;&lt; \" \";\n}\nfor(int i = cnt * 2 + 1; i &lt;= n; ++i) {\ncout &lt;&lt; (i - (cnt * 2)) &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#2b-settlement-of-guinea-pigs", "title": "2B - Settlement of Guinea Pigs", "text": "<p>Dasha \u5f88\u559c\u6b22\u8c5a\u9f20\uff0c\u5979\u5728 \\(n\\) \u5929\u5185\u8981\u4e0d\u662f\u4e70\u8c5a\u9f20\uff0c\u8981\u4e0d\u662f\u8bf7\u533b\u751f\u6765\u770b\u8c5a\u9f20\u3002</p> <p>Dasha \u548c\u5ba0\u7269\u5e97\u90fd\u65e0\u6cd5\u5206\u8fa8\u8c5a\u9f20\u7684\u6027\u522b\uff08\u601d\u8003\u4eba\u751f\uff09\uff0c\u53ea\u80fd\u5728\u533b\u751f\u6765\u67e5\u770b\u8c5a\u9f20\u7684\u65f6\u5019\u4e3a\u8fd9\u4e9b\u8c5a\u9f20\u505a\u6027\u522b\u9274\u5b9a\u3002</p> <p>\u4e3a\u4e86\u8c5a\u9f20\uff0cDasha \u6253\u7b97\u7ed9\u5b83\u4eec\u4e70\u4e00\u4e9b\u7b3c\u5b50\uff0c\u4f46\u5ba0\u7269\u5e97\u91cc\u5356\u7684\u7b3c\u5b50\u53ea\u80fd\u653e\u6700\u591a \\(2\\) \u53ea\u8c5a\u9f20\u3002\u7531\u4e8e\u5979\u4e0d\u60f3\u8ba9\u5979\u7684\u8c5a\u9f20\u906d\u53d7\u9053\u5fb7\u4f24\u5bb3\uff0c\u4e00\u4e2a\u7b3c\u5b50\u91cc\u53ea\u80fd\u653e\u540c\u4e00\u79cd\u6027\u522b\u7684\u8c5a\u9f20\u3002</p> <p>\u6c42 Dasha \u6700\u5c11\u9700\u8981\u4e70\u591a\u5c11\u4e2a\u7b3c\u5b50\u3002</p> <p>\u8fd9\u4e2a\u7ffb\u8bd1\u7531 @ztrztr \u63d0\u4f9b</p> <p>\u611f\u89c9\uff0c\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u5c31\u517d\u533b\u6765\u4e86\u6700\u4f18\u5206\u914d\uff0c\u5176\u4ed6\u4e00\u4e2a\u4e00\u4e2a\u653e\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T; while(T--) {\nint n; cin &gt;&gt; n;\nint ans = 0, u = 0, v = 0;\nfor(int i = 1, x; i &lt;= n; ++i) {\ncin &gt;&gt; x;\nif(u == 0 &amp;&amp; x == 2) continue;\nif(x == 1) u++, v++;\nelse u = v / 2 + 1;\nans = max(ans, u);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#1a-the-very-beautiful-blanket", "title": "1A - The Very Beautiful Blanket", "text": "<p>\u4f60\u9700\u8981\u5bf9\u4e00\u4e2a \\(n\\times m\\) \u7684\u77e9\u9635 \\(B\\) \u586b\u6570\uff0c\u8981\u6c42\u4f60\u6ee1\u8db3\uff0c\u5bf9\u4e8e \\(B\\) \u7684\u4efb\u610f\u4e00\u4e2a \\(4 \\times 4\\) \u7684\u5b50\u77e9\u9635\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff1a</p> <ul> <li> <p>\\(A_{11} \\oplus A_{12} \\oplus A_{21} \\oplus A_{22} = A_{33} \\oplus A_{34} \\oplus A_{43} \\oplus A_{44}\\)</p> </li> <li> <p>\\(A_{13} \\oplus A_{14} \\oplus A_{23} \\oplus A_{24} = A_{31} \\oplus A_{32} \\oplus A_{41} \\oplus A_{42}\\)</p> </li> </ul> <p>\\(\\oplus\\) \u8868\u793a\u6309\u4f4d\u6216\uff0c\\(4 \\le n,m \\le 200\\)\uff0c\u8981\u6c42 \\(B_{ij} \\in [0, 2^{63})\\)\u3002</p> <p>\u9996\u5148\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff0c\u4e0d\u540c\u7684\u6570\u7684\u6570\u91cf\u4e00\u5b9a\u662f \\(n \\times m\\)\u3002</p> <p>\u56e0\u4e3a \\(n,m \\le 200\\) \u561b\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5c31\u968f\u4fbf\u6784\u9020\u4e00\u4e0b\uff0c\u4e0d\u96be\u53d1\u73b0 \\(a(i, j) = 2^9 + j\\) \u662f\u4e00\u79cd\u6ee1\u8db3\u6761\u4ef6\u7684\u6784\u9020\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T; while(T--) {\nint n; cin &gt;&gt; n;\nint ans = 0, u = 0, v = 0;\nfor(int i = 1, x; i &lt;= n; ++i) {\ncin &gt;&gt; x;\nif(u == 0 &amp;&amp; x == 2) continue;\nif(x == 1) u++, v++;\nelse u = v / 2 + 1;\nans = max(ans, u);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#1b-buying-gifts", "title": "1B - Buying gifts", "text": "<p>\u6709 \\(n\\) \u4e2a\u5546\u5e97\uff0c\u5728\u7b2c \\(i\\) \u4e2a\u5546\u5e97\u4f1a\u8fdb\u884c\u4e0b\u9762\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u4e00\uff1a</p> <ul> <li>\u4e3a\u670b\u53cb A \u4e70\u793c\u7269\uff0c\u82b1\u8d39 \\(a_i\\) \u5143\u3002</li> <li>\u4e3a\u670b\u53cb B \u4e70\u793c\u7269\uff0c\u82b1\u8d39 \\(b_i\\) \u5143\u3002</li> </ul> <p>\u6c42\u5728\u6bcf\u4e2a\u5546\u5e97\u8fdb\u884c\u8fc7\u4ee5\u4e0a\u64cd\u4f5c\u540e\uff0c\u670b\u53cb A \u548c B \u83b7\u5f97\u7684\u793c\u7269\u4e2d\u7684\u6700\u5927\u4ef7\u503c\u4e4b\u5dee\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u6709 \\(t\\) \u7ec4\u6d4b\u8bd5\u6570\u636e\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a\\(1\\le t\\le1000\\)\uff0c\\(2\\le n\\le5\\times 10^5\\)\uff0c\\(0\\le a_i, b_i\\le 10^9\\)\u3002</p> <p>\u4e5f\u6bd4\u8f83\u5bb9\u6613\uff0c\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u5148\u89c2\u5bdf\u4e00\u4e0b\uff0c\u770b\u770b\u6709\u6ca1\u6709\u4ec0\u4e48\u6027\u8d28\u3002</p> <p>\u4f46\u662f\u5176\u5b9e\u4e5f\u6ca1\u6709\u4ec0\u4e48\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6ca1\u6cd5\u901a\u8fc7 \\(O(1)\\) \u6216\u8005\u662f \\(O(\\log n)\\) \u4e4b\u7c7b\u7684\u65b9\u5f0f\u6765\u56fa\u5b9a\u4e00\u4e9b\u9009\u9879\uff08\u6392\u9664\u4e00\u4e9b\u5197\u6742\u72b6\u6001\uff09\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u53ea\u80fd\u8003\u8651 \\(O(n)\\) \u679a\u4e3e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u8003\u8651\u5b83\u7684\u6700\u4f18\u51b3\u7b56\u662f\u4ec0\u4e48\u3002</p> <p>\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u94a6\u5b9a\u4e00\u4e2a\u4f4d\u7f6e \\(i\\) \u662f \\(a\\) \u4e2d\u7684 \\(\\max\\)\uff0c\u90a3\u4e48\u663e\u7136\uff0c\u6240\u6709\u6ee1\u8db3 \\(a(j) &gt; a(i)\\) \u7684 \\(j\\) \u6211\u4eec\u90fd\u4e0d\u9009 \\(a\\) \u800c\u662f\u9009 \\(b\\)\u3002</p> <p>\u7136\u540e\u6ee1\u8db3 \\(a(k) \\le a(i)\\) \u7684 \\(k\\) \u53ef\u4ee5\u9009\u62e9\u6027\u7684\u9009\u4e00\u4e9b\u4f5c\u4e3a \\(b\\) \u4e2d\u7684\u9009\u9879\uff08\u4e24\u8fb9\u90fd\u53ea\u8981\u5404\u9009\u4e00\u4e2a\u5c31\u884c\uff09\u3002</p> <p>\u4e8e\u662f \\(b\\) \u8fd9\u8fb9\u7684 \\(\\max\\) \u5c31\u53ef\u4ee5\u4ece \\(\\{b(j)\\}\\) \u6216\u8005 \\(\\max\\{b(k)\\}\\) \u5f53\u4e2d\u6765\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u540e\u8005\u5fc5\u987b\u53d6\uff0c\u524d\u8005\u5728 \\(b(k) &lt; \\max\\{b(j)\\}\\) \u7684\u6761\u4ef6\u4e0b\u53ef\u80fd\u66f4\u9760\u8fd1 \\(a(i)\\)\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4e00\u8fb9 qmax\uff0c\u4e00\u8fb9\u7ebf\u6bb5\u6811\u4e8c\u5206\uff0c\u4f46\u662f\u8fd9\u592a\u590d\u6742\u4e86\uff0c\u6ce8\u610f\u5230\u5176\u5b9e\u8fd9\u91cc\u662f\u53ef\u4ee5\u4e0d\u7ba1\u987a\u5e8f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u6392\u5e8f\uff0c\u7528\u4e24\u4e2a set \u6216\u8005\u4e00\u4e2a set \u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\uff08\u4e24\u4e2a\u5c31\u662f\u76f4\u63a5\u7ef4\u62a4\u4e24\u90e8\u5206\uff0c\u4e00\u4e2a\u5c31\u662f\u5148\u4ece\u6700\u5927\u7684\u8003\u8651\uff0c\u5c31\u80fd\u7701\u53bb\u4e00\u4e2a set\u3002\uff09</p> Code <pre><code>// author : black_trees\n\n#include &lt;set&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e5 + 10;\nconst int inf = 0x3f3f3f3f;\n\nint n;\nstd::multiset&lt;int&gt; s;\nstd::vector&lt;std::pair&lt;int, int&gt;&gt; v;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n;\nint mi = -inf, ans = inf;\ns.clear(), v.clear();\nfor(int i = 1; i &lt;= n; ++i) {\nint x, y;\ncin &gt;&gt; x &gt;&gt; y;\ns.insert(y), v.emplace_back(make_pair(x, y));\n}\nsort(v.begin(), v.end());\nreverse(v.begin(), v.end());\nfor(auto &amp;[x, y] : v) {\ns.erase(s.lower_bound(y));\nif(x &lt;= mi) ans = min(ans, mi - x);\nelse {\nans = min(ans, x - mi);\nauto it = s.upper_bound(x);\nif(it != s.end()) ans = min(ans, *it - x);\nif(it != s.begin() &amp;&amp; *(std::prev(it)) &gt; mi)\nans = min(ans, x - *(std::prev(it)));\n}\nmi = max(mi, y);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#1c-music-festival", "title": "1C - Music Festival", "text": "<ul> <li>\u7ed9\u4f60 \\(n\\) \u4e2a\u6570\u5217\uff0c\u4f60\u8981\u628a\u5b83\u4eec\u6309\u4efb\u610f\u987a\u5e8f\u9996\u5c3e\u8fde\u63a5\u8d77\u6765\u3002</li> <li>\u6700\u5927\u5316\u8fde\u63a5\u540e\u80fd\u6210\u4e3a\u4e25\u683c\u524d\u7f00\u6700\u5927\u503c\u7684\u6570\u7684\u6570\u91cf\u3002</li> <li>\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\\(1 \\leq n \\leq 2 \\times 10^5\\)\u3002</li> </ul> <p>\u6211\u4eec\u5bf9\u4e8e\u8fd9\u79cd\u62fc\u8d77\u6765\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u4e8e\u6bcf\u6bb5\u5148\u5904\u7406\u4e00\u4e0b\uff0c\u601d\u60f3\u7c7b\u4f3c NOIOnline2022 sort \u90a3\u4e2a\u9898\uff0c\u663e\u7136\u4e00\u4e2a\u6bb5\u91cc\u9762\u80fd\u505a\u8d21\u732e\u7684\u4e00\u5b9a\u662f\u5728\u8fd9\u4e2a\u6bb5\u5f53\u4e2d\u5c31\u6ee1\u8db3\u6761\u4ef6\u7684\u4f4d\u7f6e\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u6bb5\u628a\u4e0d\u6ee1\u8db3\u7684\u4f4d\u7f6e\u53bb\u6389\uff0c\u7136\u540e\u5c31\u662f\u4e00\u5806\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\u5e8f\u5217\u62fc\u5728\u4e00\u8d77\uff0c\u8981\u505a\u51fa\u8d21\u732e\u7684\u70b9\u6700\u591a\u3002</p> <p>\u8fd9\u4e2a\u663e\u7136\u5c31\u76f4\u63a5 dp \u4e00\u4e0b\uff0c\u8bbe \\(dp_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e\u7684\u6700\u5927\u503c\u3002</p> <p>\u7136\u540e\u8f6c\u79fb\u662f\u7c7b\u4f3c\u8fd9\u6837\u7684\u5f62\u5f0f\uff1a</p> <p></p> <p>\u4e8e\u662f\u968f\u4fbf\u600e\u4e48\u8f6c\u79fb\u4e00\u4e0b\u5c31\u597d\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, dp[si], k[si];\nstd::vector&lt;int&gt; a[si];\nstd::pair&lt;int, int&gt; b[si];\n\nvoid init(int n) {\ndp[0] = 0;\nfor(int i = 1; i &lt;= n; ++i)\na[i].clear();\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n, init(n);\nfor(int i = 1; i &lt;= n; ++i) {\nstd::vector&lt;int&gt; tmp;\ncin &gt;&gt; k[i]; tmp.push_back(0ll);\nfor(int j = 1; j &lt;= k[i]; ++j) {\nint x; cin &gt;&gt; x;\ntmp.push_back(x);\n}\na[i].resize(k[i] + 3);\nint mx = -inf, cur = 0;\nfor(int j = 1; j &lt;= k[i]; ++j) {\nif(tmp[j] &gt; mx)\nmx = tmp[j], ++cur, a[i][cur] = mx;\n}\nk[i] = cur;\n}\n\nfor(int i = 1; i &lt;= n; ++i)\nb[i] = make_pair(a[i][k[i]], i);\nsort(b + 1, b + n + 1);\n\nfor(int i = 1; i &lt;= n; ++i) {\nauto [fr, sc] = b[i];\ndp[i] = dp[i - 1];\nfor(int j = 1; j &lt;= k[sc]; ++j)\ndp[i] = max(dp[i], dp[lower_bound(b + 1, b + n + 1, make_pair(a[sc][j], 0ll)) - b - 1] + k[sc] - j + 1);\n}\ncout &lt;&lt; dp[n] &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#1d-the-way-home", "title": "1D - The way home", "text": "<p>\u4e00\u4e2a\u4eba\u5728\u4e00\u5f20\u6709\u5411\u56fe\u7684 \\(1\\) \u53f7\u7ed3\u70b9\uff0c\u4ed6\u8981\u53bb\u5230 \\(n\\) \u7ed3\u70b9\u3002\u6bcf\u6761\u8fb9 \\((a_i,b_i)\\) \u6709\u8fb9\u6743 \\(s_i\\)\uff0c\u8868\u793a\u8d70\u8fc7\u8fd9\u6761\u8fb9\u9700\u8981\u82b1 \\(s_i\\) \u5143\u3002\u8fd9\u4e2a\u4eba\u4e00\u5f00\u59cb\u6709 \\(p\\) \u5143\uff0c\u5230\u4e86\u4e00\u4e2a\u70b9 \\(u\\)\uff0c\u4ed6\u53ef\u4ee5\u8fdb\u884c\u82e5\u5e72\u6b21\u6f14\u51fa\uff0c\u6bcf\u6b21\u6f14\u51fa\u6536\u83b7 \\(w_u\\) \u5143\u3002\u95ee\u5230\u8fbe \\(n\\) \u7684\u6700\u5c0f\u6f14\u51fa\u6b21\u6570\uff0c\u82e5\u65e0\u89e3\u8f93\u51fa <code>-1</code>\u3002</p> <p>\u8fd9\u9898\u5f88\u597d\u73a9\uff0c\u5c5e\u4e8e\u662f div2/ABC \u7279\u522b\u559c\u6b22\u51fa\u7684\u4e00\u79cd\uff0c\u72b6\u6001\u590d\u6742\u7684\u6700\u77ed\u8def\u9898\u3002</p> <p>\u8fd9\u91cc\u8981\u7528\u5230\u4e00\u4e2a\u7c7b\u4f3c\u53cd\u6094\uff1f\u7684 \"postpone\" \u601d\u60f3\u3002</p> <p>\u6211\u4eec\u6709\u4e00\u4e2a\u89c2\u5bdf\uff0c\u5982\u679c\u6211\u4eec\u8d70\u5230\u67d0\u4e00\u4e2a\u8282\u70b9\uff0c\u94b1\u4e0d\u591f\u4e86\u7684\u65f6\u5019\uff0c\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u5728\u4e4b\u524d\u6253\u5de5\u8fc7\u7684\u6700\u4f18\u4f4d\u7f6e\u75af\u72c2\u6253\u5de5\u76f4\u5230\u94b1\u591f\u7528\u3002</p> <p>\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8bbe\u4e00\u4e2a dp \u72b6\u6001\uff0c\u8bbe \\(dp(i,j) = \\{x, y\\}\\) \u8868\u793a\uff0c\u8d70\u5230 \\(i\\)\uff0c\u5e76\u4e14\u6700\u4f18\u70b9\u662f \\(j\\)\uff0c\u5f53\u524d\u6700\u5c0f\u6253\u5de5\u6b21\u6570\u4e3a \\(x\\)\uff0c\u5728\u6b64\u524d\u63d0\u4e0b\u6700\u5927\u5269\u4f59\u94b1\u6570\u4e3a \\(y\\).</p> <p>\u8fd9\u4e2a\u663e\u7136\u5c31 Dijkstra \u8f6c\u79fb\u4e00\u4e0b\u5c31\u884c\uff0c\u6b63\u786e\u6027\u53ef\u4ee5\u901a\u8fc7 Exchange Argument \u8bc1\u660e\u8fd9\u4e2a\u7ed3\u8bba\uff1a\u5982\u679c \\(x\\) \u66f4\u5c0f\uff0c\u54ea\u6015 \\(y\\) \u66f4\u5c0f\uff0c\u8fd9\u4e2a\u72b6\u6001\u4f9d\u65e7\u662f\u4f18\u79c0\u7684\uff0c\u6765\u5f97\u5230\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\nusing pii = std::pair&lt;int, int&gt;;\n\nconst int si_n = 8e2 + 10;\nconst int si_m = 3e3 + 10;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, m, p;\npii dp[si_n][si_n];\nint tot = 0, head[si_n];\nstruct Edge { int ver, Next, w; } e[si_m &lt;&lt; 1];\ninline void add(int u, int v, int w) { e[tot] = (Edge){v, head[u], w}, head[u] = tot++; }\n\nint ww[si_n];\nstd::priority_queue&lt;std::pair&lt;pii, pii&gt;&gt; q;\nvoid dijkstra() {\nfor(int i = 0; i &lt;= n; ++i) {\nfor(int j = 0; j &lt;= n; ++j) {\ndp[i][j] = make_pair(-inf, -inf);\n}\n}\ndp[1][0] = make_pair(0, p), q.push(make_pair(make_pair(0, p), make_pair(1, 0)));\nwhile(!q.empty()) {\nauto fr = q.top().first;\nauto sc = q.top().second;\nq.pop();\nint u = sc.first, o = sc.second;\nif(dp[u][o] &gt; fr) continue;\nif(ww[u] &gt; ww[o]) o = u;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver, w = e[i].w;\nauto nfr = fr;\nif(nfr.second &lt; w) {\nint rest = w - nfr.second;\nint tim = ceil((rest * 1.0) / (1.0 * ww[o]));\nnfr.first -= tim, nfr.second += tim * ww[o];\n}   nfr.second -= w;\nif(dp[v][o] &lt; nfr) q.push(make_pair(dp[v][o] = nfr, make_pair(v, o)));\n}\n}\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; p;\nfor(int i = 0; i &lt;= n; ++i)\nhead[i] = -1;\nwhile(!q.empty()) q.pop();\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; ww[i];\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nadd(u, v, w);\n}\ndijkstra();\npii ans = make_pair(-inf, -inf);\nfor(int i = 1; i &lt;= n; ++i)\nans = max(ans, dp[n][i]);\nif(ans.first &lt;= -inf) cout &lt;&lt; \"-1\" &lt;&lt; endl;\nelse cout &lt;&lt; -ans.first &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#cfr-858", "title": "CFR #858", "text": "<p>Contest Id: <code>1806</code></p>"}, {"location": "rec/atcf-for-2023-03-04/#a", "title": "A", "text": "<p>\u9898\u9762\u6682\u7565\u3002</p> <p>\u628a\u7ed9\u5b9a\u7684 \\((c, d)\\) \u5206\u5230\u56db\u4e2a\u533a\u57df\u3002</p> <p>\u5982\u679c\u5728 \\((a, b)\\) \u7684\u4e0b\u9762\u663e\u7136\u4e0d\u53ef\u884c\uff08\\(b &gt; d\\)\uff09</p> <p>\u7136\u540e\u5982\u679c\u5728 \\(a\\) \u7684\u53f3\u4fa7\uff0c\u8003\u8651 \\(c - a\\) \u662f\u5426\u5927\u4e8e \\(d - b\\)\uff0c\u5982\u679c\u6210\u7acb\u4e5f\u65e0\u89e3\uff0c\u8fd9\u4e2a\u663e\u7136\u3002</p> <p>\u7136\u540e\u5269\u4e0b\u7684\u4e24\u79cd\u60c5\u51b5\u5c31\u7ed9 \\(y\\) \u51d1\u4e00\u4e0b\u5c31\u884c\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\ni64 a, b, c, d;\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;\nif(b &gt; d) { cout &lt;&lt; \"-1\" &lt;&lt; endl; continue; }\ni64 ansy = d - b;\ni64 ansx = c - a;\nif(ansx &gt; ansy) { cout &lt;&lt; \"-1\" &lt;&lt; endl; continue; }\ni64 ans = (ansy - ansx) + ansy;\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#b", "title": "B", "text": "<p>\u9898\u9762\u6682\u7565\u3002</p> <p>\u663e\u7136\u7b54\u6848\u4e3a \\(x\\in \\{0, 1, 2\\}\\)\u3002</p> <p>\u7136\u540e\u5c31\u6570\u4e00\u4e0b \\(0\\) \u7684\u4e2a\u6570\uff0c\u6570\u4e00\u4e0b\u662f\u4e0d\u662f\u5b58\u5728\u5927\u4e8e \\(1\\) \u7684\u6570\u5c31\u884c\u3002</p> <p>\u7136\u540e\u968f\u4fbf\u600e\u4e48\u6784\u9020\u5c31\u597d\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;bitset&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nint n; cin &gt;&gt; n;\nstd::vector&lt;int&gt; a(n + 1);\nstd::bitset&lt;400010&gt; b; b.reset();\nint cnt0 = 0, f = 0;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], cnt0 += (a[i] == 0), f += (a[i] &gt; 1);\nif(cnt0 - 1 &lt;= n - cnt0) { cout &lt;&lt; \"0\" &lt;&lt; endl; continue; }\nif(f || cnt0 == n) { cout &lt;&lt; \"1\" &lt;&lt; endl; continue; };  cout &lt;&lt; \"2\" &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#c", "title": "C", "text": "<p>\u9898\u9762\u6682\u7565\u3002</p> <p>\u6ce8\u610f\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 \\(q\\) \u53ea\u80fd\u662f\u4e24\u79cd\u60c5\u51b5</p> <ol> <li>\u5168\u90e8\u662f \\(0\\)\u3002</li> <li>\u5982\u679c \\(n \\equiv 0 \\pmod 2\\)\uff0c\u90a3\u4e48 \\(2n - 1\\) \u4e2a \\(-1\\)\uff0c\u4e00\u4e2a \\(n\\) \u5c31\u6ee1\u8db3\u6761\u4ef6\u3002</li> </ol> <p>\u7136\u540e \\(n = 1, n = 2\\) \u7684\u65f6\u5019\u8fd8\u6709\u7279\u6b8a\u60c5\u51b5\uff08\u9898\u76ee\u89e3\u91ca\u91cc\u5c31\u53ea\u7ed9\u4e86\u8fd9\u4e24\u79cd\uff0cYunQian \u4f60\u597d\u6076\u6bd2\u3002\uff09</p> <p>\u4e8e\u662f\u56db\u79cd\u53ef\u80fd\u5206\u522b\u5224\u65ad\u4e00\u4e0b\u5c31\u884c\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, a[si &lt;&lt; 1];\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n * 2; ++i)\ncin &gt;&gt; a[i];\nsort(a + 1, a + 1 + n + n);\nint ans = 0;\nfor(int i = 1; i &lt;= n * 2; ++i)\nans += abs(a[i]);\nif(n == 1) ans = min(ans, abs(a[1] - a[2]));\nif(n == 2) ans = min(ans, min(abs(a[1] - 2) + abs(a[2] - 2) + abs(a[3] - 2) + abs(a[4] - 2),\nabs(a[1] + 1) + abs(a[2] + 1) + abs(a[3] + 1) + abs(a[4] - 2)));\nif(n % 2 == 0) {\nint ret = 0;    for(int i = 1; i &lt; n * 2; ++i) {\nret += abs(a[i] + 1);\n}\nret += abs(a[n * 2] - n);\nans = min(ans, ret);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}   return 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#d", "title": "D", "text": "<p>\u9898\u9762\u8bf4\u7684\u6709\u70b9\u62bd\u8c61\uff0c\u627e\u522b\u4eba\u7684\u7ffb\u8bd1\u4f30\u8ba1\u4e00\u65f6\u534a\u4f1a\u4e5f\u770b\u4e0d\u61c2\uff0c\u8fd8\u662f\u81ea\u5df1\u5199\u9898\u9762\u597d\u4e86\u3002</p> <p>\u7ed9\u5b9a\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684 0/1 \u5e8f\u5217 \\(a\\)\uff0c\u5047\u5b9a\u6709\u4e00\u4e2a \\(1 \\sim m - 1\\) \u7684\u6392\u5217 \\(p\\)\uff0c\u5b9a\u4e49\u6392\u5217 \\(p\\) \u7684\u8d21\u732e\u4e3a\u4e00\u5f20\u7531 \\(a, p\\) \u751f\u6210\u7684\u6709\u5411\u56fe \\(G\\) \u4e2d\uff0c\u8282\u70b9 \\(1\\) \u7684\u5165\u5ea6\u3002</p> <p>\\(G\\) \u7684\u751f\u6210\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <p>Step1: \u5728\u56fe \\(G\\) \u4e0a\u521d\u59cb\u5316\u4e00\u4e2a\u6709 \\(m\\) \u4e2a\u8282\u70b9\u7684\u5e76\u67e5\u96c6\u3002</p> <p>Step2: \u5bf9\u4e8e \\(\\forall i \\in 1 \\sim m - 1\\)\uff0c\u9009\u62e9 \\(p_i, p_i + 1\\) \u6240\u5728\u7684\u4e24\u4e2a\u8054\u901a\u5757 \\(U, V\\)\uff0c\u5408\u5e76\u4ed6\u4eec\u3002</p> <p>Step3: \u5e76\u4e14\uff0c\u5982\u679c \\(a_{p_i} = 0\\)\uff0c\u90a3\u4e48\u4ee4 \\(V\\) \u7684 root \u6307\u5411 \\(U\\) \u7684 root\uff0c\u5426\u5219\u53cd\u4e4b\u3002\uff08\u8fd9\u91cc\u7684\u6307\u5411\u5c31\u662f\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff09</p> <p>\u7ed9\u5b9a \\(N\\)\uff0c\u4ee4 \\(n = N - 1\\)\uff0c\u5bf9\u4e8e \\(\\forall k \\in [1, N)\\)\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u957f\u5ea6\u4e3a \\(k\\) \u7684\u6240\u6709\u6392\u5217\u7684\u8d21\u732e\u4e4b\u548c\uff0c\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\\(2\\le N \\le 5 \\times 10^5\\)\uff0c\u591a\u7ec4\u6570\u636e\u3002</p> <p>\u611f\u89c9\u662f\u9001\u5206\u9898\uff0c\u4e0d\u77e5\u9053\u4e3a\u5565\u8d5b\u65f6\u6ca1\u51e0\u4e2a\u4eba\u505a\uff0c\u601d\u60f3\u548c\u4e4b\u524d\u90a3\u4e2a\uff0cABC290F - Maximum Diameter \u5f88\u50cf\u3002</p> <p>\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u8ba8\u8bba\u4efb\u610f\u4e00\u79cd\u6392\u5217\uff0c\u7136\u540e\u7b97\u65b9\u6848\u6570\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5047\u8bbe\uff0c\u6bcf\u6b21\u52a0\u5165\u7684\u70b9\u5bf9\u90fd\u662f \\((i - 1, i)\\) \u7684\u5f62\u5f0f\uff0c\u8fd9\u6837\u7684\u6392\u5217\u663e\u7136\u5b58\u5728\u3002</p> <p>\u6211\u4eec\u8003\u8651\u65b0\u52a0\u5165\u4e00\u4e2a\u70b9\u5bf9 \\((i - 1, i)\\) \u4e4b\u540e\uff0c\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u662f\u4ec0\u4e48\u3002</p> <p>\u663e\u7136\u5982\u679c\u80fd\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u9700\u8981\u6b64\u65f6\u7684 \\(1\\) \u4e3a\u5e76\u67e5\u96c6\u7684\u6811\u6839\u3002</p> <p>\u6211\u4eec\u8bb0 \\(g(i)\\) \u8868\u793a \\(1 \\sim i\\) \u5df2\u7ecf\u52a0\u5165\u5e76\u67e5\u96c6\u65f6\u7684\u7b54\u6848\uff0c\u663e\u7136\u6709 \\(g(i) = g(i - 1) \\times i + val\\)\uff0c\u5176\u4e2d \\(val\\) \u4e3a\u5f53\u524d\u8fd9\u4e2a\u70b9\u5bf9 \\((i - 1, i)\\) \u7684\u8d21\u732e\u3002</p> <p>\u90a3\u4e48\uff0c\u5982\u679c \\(a_i = 0\\)\uff0c\u8fd9\u4e2a\u70b9\u5bf9\u663e\u7136\u4f1a\u505a\u51fa\u8d21\u732e \\(1\\)\uff0c\u6211\u4eec\u4e58\u4e0a\u65b9\u6848\u6570\u5c31\u884c\uff0c\u53cd\u4e4b\u5b83\u4e0d\u4f1a\u505a\u51fa\u8d21\u732e\u3002</p> <p>\u8fd9\u4e2a\u65b9\u6848\u6570\u5e94\u5f53\u662f\uff0c\u4ee5 \\(1 \\sim i\\) \u7ec4\u6210\u7684\u5e76\u67e5\u96c6\uff0c\u4e14 \\(1\\) \u4e3a\u6839\u7684\u65b9\u6848\u6570\uff0c\u6211\u4eec\u8bb0\u8fd9\u4e2a\u503c\u4e3a \\(f(i)\\)\uff0c\u8003\u8651\u52a0\u5165 \\(i\\) \u7684\u65f6\u5019\u662f\u4e0d\u662f\u6307\u5411 \\(i - 1\\) \u7684\u6839\u5373\u53ef\u5f97\u5230 \\(f\\) \u7684\u8ba1\u7b97\u5f0f\uff1a\\(f(i) = f(i - 1) \\times (i - [a_i = 1])\\)\u3002</p> <p>\u6700\u7ec8 \\(g\\) \u7684\u9012\u63a8\u5f0f\u662f\uff1a\\(g(i) = g(i - 1) \\times i + f(i) \\times [a_i = 0]\\)\uff0c\u8fb9\u754c \\(f(0) = 1, g(0) = 0\\)\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cassert&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\nusing u64 = unsigned long long;\n\nconstexpr i64 safe_mod(i64 x, i64 m) { return x %= m, x &lt; 0 ? x + m : x; }\nconstexpr i64 pow_mod_constexpr(i64 x, i64 n, int m) {\nif(m == 1) return 0;\nunsigned _m = m; uint64_t r = 1, _x = safe_mod(x, m);\nfor(; n; n &gt;&gt;= 1, _x = _x * _x % _m) if(n &amp; 1) r = r * _x % m;\nreturn r;\n}\nconstexpr bool is_prime_constexpr(int n) {\nif(n &lt;= 1) return false;\nif(n == 2 || n == 7 || n == 61) return true;\nif(n % 2 == 0) return false;\ni64 d = n - 1; while(~d &amp; 1) d /= 2;\nfor(i64 a : {2, 7, 61}) {\ni64 t = d, y = pow_mod_constexpr(a, t, n);\nwhile(t != n - 1 &amp;&amp; y != 1 &amp;&amp; y != n - 1) y = y * y % n, t &lt;&lt;= 1;\nif(y != n - 1 &amp;&amp; t % 2 == 0) return false;\n}\nreturn true;\n}\nconstexpr pair&lt;i64, i64&gt; inv_gcd(i64 a, i64 b) {\na = safe_mod(a, b);\nif(a == 0) return {b, 0};\ni64 s = b, t = a, m0 = 0, m1 = 1;\nwhile(t) {\ni64 u = s / t; s -= t * u, m0 -= m1 * u;\ni64 tmp = s; s = t, t = tmp, tmp = m0, m0 = m1, m1 = tmp;\n}\nif(m0 &lt; 0) m0 += b / s;\nreturn {s, m0};\n}\nstruct Barrett_Reduction {\nunsigned m; uint64_t im;\nBarrett_Reduction(unsigned m) :m(m), im(~0ull / m + 1) {}\nunsigned mul(unsigned a, unsigned b) const {\nuint64_t z = (uint64_t)a * b, x = (__uint128_t)z * im &gt;&gt; 64; unsigned v = z - x * m;\nreturn m &lt;= v ? v + m : v;\n}\n};\ntemplate&lt;int m&gt; struct static_modint {\nusing _mint = static_modint;\npublic:\nstatic _mint raw(int v) { _mint x; return x._v = v, x; }\nstatic_modint() :_v(0) {}\ntemplate&lt;class __Tp&gt; static_modint(__Tp v) { i64 x = v % m; _v = x &lt; 0 ? x + m : x; }\nunsigned val() const { return _v; }\n_mint&amp; operator ++ () { if(++_v == m) _v = 0; return *this; }\n_mint&amp; operator -- () { if(!_v--) _v = m - 1; return *this; }\n_mint operator ++ (int) { _mint res = *this; ++*this; return res; }\n_mint operator -- (int) { _mint res = *this; --*this; return res; }\n_mint&amp; operator += (const _mint&amp; rhs) { _v += rhs._v; if(_v &gt;= m) _v -= m; return *this; }\n_mint&amp; operator -= (const _mint&amp; rhs) { _v -= rhs._v; if(_v &gt;= m) _v += m; return *this; }\n_mint&amp; operator *= (const _mint&amp; rhs) { uint64_t z = _v; z *= rhs._v, _v = z % m; return *this; }\n_mint&amp; operator /= (const _mint&amp; rhs) { return *this = *this * rhs.inv(); }\n_mint operator + () const { return *this; }\n_mint operator - () const { return _mint() - *this; }\n_mint pow(i64 n) const { assert(0 &lt;= n); _mint x = *this, r = 1; for(; n; n &gt;&gt;= 1, x *= x) if(n &amp; 1) r *= x; return r; }\n_mint inv() const{ if(prime) { assert(_v); return pow(m - 2); } else { auto eg = inv_gcd(_v, m); assert(eg.first == 1); return eg.second; } }\nfriend _mint operator + (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) += rhs; }\nfriend _mint operator - (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) -= rhs; }\nfriend _mint operator * (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) *= rhs; }\nfriend _mint operator / (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) /= rhs; }\nfriend bool operator == (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v == rhs._v; }\nfriend bool operator != (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v != rhs._v; }\nprivate:\nunsigned _v;\nstatic constexpr bool prime = is_prime_constexpr(m);\n};\nstruct dynamic_modint {\nusing _mint = dynamic_modint;\npublic:\nstatic void set_mod(int m) { assert(1 &lt;= m), bt = Barrett_Reduction(m); }\nstatic _mint raw(int v) { _mint x; return x._v = v, x; }\ndynamic_modint() :_v(0) {}\ntemplate&lt;class __Tp&gt; dynamic_modint(__Tp v) { i64 x = v % (int)bt.m; _v = x &lt; 0 ? x + bt.m : x; }\nunsigned val() const { return _v; }\n_mint&amp; operator ++ () { if(++_v == bt.m) _v = 0; return *this; }\n_mint&amp; operator -- () { if(!_v--) _v = bt.m - 1; return *this; }\n_mint operator ++ (int) { _mint res = *this; ++*this; return res; }\n_mint operator -- (int) { _mint res = *this; --*this; return res; }\n_mint&amp; operator += (const _mint&amp; rhs) { _v += rhs._v; if(_v &gt;= bt.m) _v -= bt.m; return *this; }\n_mint&amp; operator -= (const _mint&amp; rhs) { _v += bt.m - rhs._v; if(_v &gt;= bt.m) _v -= bt.m; return *this; }\n_mint&amp; operator *= (const _mint&amp; rhs) { _v = bt.mul(_v, rhs._v); return *this; }\n_mint&amp; operator /= (const _mint&amp; rhs) { return *this = *this * rhs.inv(); }\n_mint operator + () const { return *this; }\n_mint operator - () const { return _mint() - *this; }\n_mint pow(i64 n) const { assert(0 &lt;= n); _mint x = *this, r = 1; for(; n; n &gt;&gt;= 1, x *= x) if(n &amp; 1) r *= x; return r; }\n_mint inv() const { auto eg = inv_gcd(_v, bt.m); assert(eg.first == 1); return eg.second; }\nfriend _mint operator + (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) += rhs; }\nfriend _mint operator - (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) -= rhs; }\nfriend _mint operator * (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) *= rhs; }\nfriend _mint operator / (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) /= rhs; }\nfriend bool operator == (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v == rhs._v; }\nfriend bool operator != (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v != rhs._v; }\nprivate:\nunsigned _v;\nstatic Barrett_Reduction bt;\n};\nusing modint = dynamic_modint;\nusing barrett = Barrett_Reduction;\n\nbarrett modint::bt = 998244353;\n\nconst int si = 5e5 + 10;\n\nint n, a[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n;\nmodint f = 1, g = 0;\nfor(int i = 1; i &lt; n; ++i)\ncin &gt;&gt; a[i];\nfor(int i = 1; i &lt; n; ++i) {\ng = i * g + (a[i] == 0) * f;\ncout &lt;&lt; g.val() &lt;&lt; \" \\n\"[i == n]; f = f * (i - a[i]);\n}   }\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#e", "title": "E", "text": "<p>\u9898\u9762\u6682\u7565\u3002</p> <p>\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/atcf-for-2023-03-04/#abc293g-triple-index", "title": "ABC293G Triple Index", "text": "<p>\u9898\u9762\u6682\u7565</p> <p>\u6ce8\u610f\u5230\u5176\u5b9e\u53ea\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u4e2d\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684 \\(cnt\\)\uff0c\u7136\u540e\u7b54\u6848\u662f \\(\\sum\\dbinom{cnt}{3}\\)\u3002</p> <p>\u90a3\u4e48\u5c31\u662f\u83ab\u961f\u677f\u5b50\u4e86\u3002</p> <p>\u6ca1\u6709\u653e\u4ee3\u7801\u7684\u5fc5\u8981\u3002</p>"}, {"location": "rec/atcf-for-2023-03-04/#abc294g-distance-queries-on-a-tree", "title": "ABC294G Distance Queries on a Tree", "text": "<p>\u9898\u9762\u6682\u7565\u3002</p> <p>\u5443\u5443\uff0c\u6811\u5256\u7684\u677f\u5b50\u3002</p> <p>\u6ca1\u6709\u653e\u4ee3\u7801\u7684\u5fc5\u8981\u3002</p>"}, {"location": "rec/atcf-for-2023-03-04/#abc295e-kth-number", "title": "ABC295E Kth Number", "text": "<p>\u9898\u9762\u6682\u7565\u3002</p> <p>\u795e\u79d8\u9898\uff0c\u6ca1\u770b\u61c2\u548b\u60f3\u5230\u7684\u3002</p> <p>\u6ce8\u610f\u5230\u5bf9\u4e8e \\(E(X) = \\sum i \\times p_i\\)\uff0c\u5176\u4e2d \\(p_i\\) \u662f\u8fd9\u4e2a\u4f4d\u7f6e\u53d6\u5230 \\(i\\) \u7684\u6982\u7387\uff0c\u6709\u4e00\u4e2a\u8f6c\u5316\uff1a</p> <p>\\(E(X) = \\sum pp_i\\)\uff0c\u5176\u4e2d \\(pp_i\\) \u8868\u793a \\(X \\ge i\\) \u7684\u6982\u7387\u3002</p> <p>\u4e3a\u5565\u5462\uff0c\u6bd4\u5982\u5bf9\u4e8e \\(m = 3\\)\uff1a</p> <p>\\(E(X) = 1 \\times \\dfrac{1}{3} + 2 \\times \\dfrac{1}{3} + 3 \\times \\dfrac{1}{3} = \\dfrac{3}{3} + \\dfrac{2}{3} + \\dfrac{1}{3}\\)\u3002</p> <p>\u4e0d\u4ec5\u89c4\u907f\u4e86\u53d6\u503c\u8fd8\u964d\u4f4e\u4e86\u96be\u5ea6\uff0c\u597d\u725b\u903c\u7684\u505a\u6cd5\u3002</p> <p>\u8f6c\u5316\u8fc7\u540e\uff0c\u5206\u7c7b\u8ba8\u8bba\u7b97\u8d21\u732e\u5373\u53ef\uff0c\u8fd9\u4e2a\u662f trivial \u7684\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cassert&gt;\n#include &lt;vector&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\nusing u64 = unsigned long long;\n\nconstexpr i64 safe_mod(i64 x, i64 m) { return x %= m, x &lt; 0 ? x + m : x; }\nconstexpr i64 pow_mod_constexpr(i64 x, i64 n, int m) {\nif(m == 1) return 0;\nunsigned _m = m; uint64_t r = 1, _x = safe_mod(x, m);\nfor(; n; n &gt;&gt;= 1, _x = _x * _x % _m) if(n &amp; 1) r = r * _x % m;\nreturn r;\n}\nconstexpr bool is_prime_constexpr(int n) {\nif(n &lt;= 1) return false;\nif(n == 2 || n == 7 || n == 61) return true;\nif(n % 2 == 0) return false;\ni64 d = n - 1; while(~d &amp; 1) d /= 2;\nfor(i64 a : {2, 7, 61}) {\ni64 t = d, y = pow_mod_constexpr(a, t, n);\nwhile(t != n - 1 &amp;&amp; y != 1 &amp;&amp; y != n - 1) y = y * y % n, t &lt;&lt;= 1;\nif(y != n - 1 &amp;&amp; t % 2 == 0) return false;\n}\nreturn true;\n}\nconstexpr pair&lt;i64, i64&gt; inv_gcd(i64 a, i64 b) {\na = safe_mod(a, b);\nif(a == 0) return {b, 0};\ni64 s = b, t = a, m0 = 0, m1 = 1;\nwhile(t) {\ni64 u = s / t; s -= t * u, m0 -= m1 * u;\ni64 tmp = s; s = t, t = tmp, tmp = m0, m0 = m1, m1 = tmp;\n}\nif(m0 &lt; 0) m0 += b / s;\nreturn {s, m0};\n}\nstruct Barrett_Reduction {\nunsigned m; uint64_t im;\nBarrett_Reduction(unsigned m) :m(m), im(~0ull / m + 1) {}\nunsigned mul(unsigned a, unsigned b) const {\nuint64_t z = (uint64_t)a * b, x = (__uint128_t)z * im &gt;&gt; 64; unsigned v = z - x * m;\nreturn m &lt;= v ? v + m : v;\n}\n};\ntemplate&lt;int m&gt; struct static_modint {\nusing _mint = static_modint;\npublic:\nstatic _mint raw(int v) { _mint x; return x._v = v, x; }\nstatic_modint() :_v(0) {}\ntemplate&lt;class __Tp&gt; static_modint(__Tp v) { i64 x = v % m; _v = x &lt; 0 ? x + m : x; }\nunsigned val() const { return _v; }\n_mint&amp; operator ++ () { if(++_v == m) _v = 0; return *this; }\n_mint&amp; operator -- () { if(!_v--) _v = m - 1; return *this; }\n_mint operator ++ (int) { _mint res = *this; ++*this; return res; }\n_mint operator -- (int) { _mint res = *this; --*this; return res; }\n_mint&amp; operator += (const _mint&amp; rhs) { _v += rhs._v; if(_v &gt;= m) _v -= m; return *this; }\n_mint&amp; operator -= (const _mint&amp; rhs) { _v -= rhs._v; if(_v &gt;= m) _v += m; return *this; }\n_mint&amp; operator *= (const _mint&amp; rhs) { uint64_t z = _v; z *= rhs._v, _v = z % m; return *this; }\n_mint&amp; operator /= (const _mint&amp; rhs) { return *this = *this * rhs.inv(); }\n_mint operator + () const { return *this; }\n_mint operator - () const { return _mint() - *this; }\n_mint pow(i64 n) const { assert(0 &lt;= n); _mint x = *this, r = 1; for(; n; n &gt;&gt;= 1, x *= x) if(n &amp; 1) r *= x; return r; }\n_mint inv() const{ if(prime) { assert(_v); return pow(m - 2); } else { auto eg = inv_gcd(_v, m); assert(eg.first == 1); return eg.second; } }\nfriend _mint operator + (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) += rhs; }\nfriend _mint operator - (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) -= rhs; }\nfriend _mint operator * (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) *= rhs; }\nfriend _mint operator / (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) /= rhs; }\nfriend bool operator == (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v == rhs._v; }\nfriend bool operator != (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v != rhs._v; }\nprivate:\nunsigned _v;\nstatic constexpr bool prime = is_prime_constexpr(m);\n};\nstruct dynamic_modint {\nusing _mint = dynamic_modint;\npublic:\nstatic void set_mod(int m) { assert(1 &lt;= m), bt = Barrett_Reduction(m); }\nstatic _mint raw(int v) { _mint x; return x._v = v, x; }\ndynamic_modint() :_v(0) {}\ntemplate&lt;class __Tp&gt; dynamic_modint(__Tp v) { i64 x = v % (int)bt.m; _v = x &lt; 0 ? x + bt.m : x; }\nunsigned val() const { return _v; }\n_mint&amp; operator ++ () { if(++_v == bt.m) _v = 0; return *this; }\n_mint&amp; operator -- () { if(!_v--) _v = bt.m - 1; return *this; }\n_mint operator ++ (int) { _mint res = *this; ++*this; return res; }\n_mint operator -- (int) { _mint res = *this; --*this; return res; }\n_mint&amp; operator += (const _mint&amp; rhs) { _v += rhs._v; if(_v &gt;= bt.m) _v -= bt.m; return *this; }\n_mint&amp; operator -= (const _mint&amp; rhs) { _v += bt.m - rhs._v; if(_v &gt;= bt.m) _v -= bt.m; return *this; }\n_mint&amp; operator *= (const _mint&amp; rhs) { _v = bt.mul(_v, rhs._v); return *this; }\n_mint&amp; operator /= (const _mint&amp; rhs) { return *this = *this * rhs.inv(); }\n_mint operator + () const { return *this; }\n_mint operator - () const { return _mint() - *this; }\n_mint pow(i64 n) const { assert(0 &lt;= n); _mint x = *this, r = 1; for(; n; n &gt;&gt;= 1, x *= x) if(n &amp; 1) r *= x; return r; }\n_mint inv() const { auto eg = inv_gcd(_v, bt.m); assert(eg.first == 1); return eg.second; }\nfriend _mint operator + (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) += rhs; }\nfriend _mint operator - (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) -= rhs; }\nfriend _mint operator * (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) *= rhs; }\nfriend _mint operator / (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) /= rhs; }\nfriend bool operator == (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v == rhs._v; }\nfriend bool operator != (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v != rhs._v; }\nprivate:\nunsigned _v;\nstatic Barrett_Reduction bt;\n};\nusing modint = dynamic_modint;\nusing barrett = Barrett_Reduction;\n\nbarrett modint::bt = 998244353;\n\nconst int si = 1e5 + 10;\n\nmodint fac[si];\nvoid init() {\nfac[0] = 1;\nfor(int i = 1; i &lt;= si - 10; ++i) {\nfac[i] = fac[i - 1] * i;\n}\n}\nmodint C(int n, int m) {\nreturn fac[n] / (fac[n - m] * fac[m]);\n}\n\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ninit(); int n, m, k;\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\n\nstd::vector&lt;int&gt; a(n);\nfor(int i = 0; i &lt; n; ++i)\ncin &gt;&gt; a[i];\n\nmodint ans = 0;\nfor(int i = 1; i &lt;= m; i++) {\nint r = n + 1 - k, tmp = 0;\nfor(int j : a) {\nif(j &gt;= i) --r;\nif(j == 0) ++tmp;\n}\nif(r &lt; 0 or r &gt; tmp) {\nans += (r &lt; 0 ? 1 : 0);\ncontinue;\n}\nmodint p = modint(m + 1 - i) / m;\nstd::vector&lt;modint&gt; pw1(tmp + 1, 1);\nstd::vector&lt;modint&gt; pw2(tmp + 1, 1);\nfor(int j = 0; j &lt; tmp; j++) {\npw1[j + 1] = pw1[j] * p;\npw2[j + 1] = pw2[j] * (1 - p);\n}\nfor(int j = r; j &lt;= tmp; j++) {\nans += C(tmp, j) * pw1[j] * pw2[tmp - j];\n}\n}\ncout &lt;&lt; ans.val() &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#abc295g-minimum-reachable-city", "title": "ABC295G Minimum Reachable City", "text": "<p>\u9898\u9762\u6682\u7565\u3002</p> <p>\u5176\u5b9e\u9898\u76ee\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8981\u7ef4\u62a4\u4e24\u4e2a\u96c6\u5408\uff0c\u5b83\u80fd\u53bb\u5411\u7684\uff0c\u5b83\u80fd\u5230\u8fbe\u7684\u3002</p> <p>\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\u8981\u5bf9\u6709\u5411\u56fe\u52a8\u6001\u7ef4\u62a4\u8fde\u901a\u6027\uff0c\u53ef\u4ee5\u60f3\u5230\u5e76\u67e5\u96c6\uff0c\u4f46\u662f\u5e76\u67e5\u96c6\u53ea\u80fd\u7ef4\u62a4\u65e0\u5411\u5173\u7cfb\u3002</p> <p>\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u9605\u8bfb\u9898\u9762\uff0c\u6ce8\u610f\u5230\u6bcf\u6b21\u52a0\u8fb9\u4e00\u5b9a\u4f1a\u52a0\u51fa\u4e00\u4e2a\u73af\uff08\u53ef\u4ee5\u770b\u4f5c\u65e0\u5411\u8fb9\u4e86\uff09</p> <p>\u90a3\u4e48\u6211\u4eec\u94a6\u5b9a\uff0c\u4e00\u5f00\u59cb\u6240\u6709\u53cd\u5411\u8fb9\u90fd\u8fde\u4e0a\u4e86\uff0c\u7136\u540e\u52a0\u8fb9\u6211\u4eec\u5c31\u7b49\u4e8e\u52a0\u51fa\u4e86\u65e0\u5411\u8fb9\uff0c\u6b64\u65f6\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u5373\u53ef\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m;\nint p[si], pa[si];\nint root(int x) { if(pa[x] != x) return pa[x] = root(pa[x]);\nreturn pa[x];\n}\nvoid Merge(int x, int y) {\nint rx = root(x), ry = root(y);\nif(rx == ry) return;\npa[rx] = ry;\n}\nbool same(int x, int y) {\nreturn root(x) == root(y);\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n, p[1] = 1;\nfor(int i = 2; i &lt;= n; ++i)\ncin &gt;&gt; p[i];\nfor(int i = 1; i &lt;= n; ++i) pa[i] = i;\n\ncin &gt;&gt; m;\nwhile(m--) {\nint opt; cin &gt;&gt; opt;\nif(opt == 1) {\nint x, y; cin &gt;&gt; x &gt;&gt; y;\nwhile(!same(x, y)) x = root(x), Merge(x, p[x]);\n}\nif(opt == 2) {\nint x; cin &gt;&gt; x;\ncout &lt;&lt; root(x) &lt;&lt; endl;\n}\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#abc296f-simultaneous-swap", "title": "ABC296F Simultaneous Swap", "text": "<p>\u9898\u9762\u6682\u7565</p> <p>\u4e09\u53e5\u8bdd\u9898\u89e3\uff1a</p> <ul> <li>\u6ce8\u610f\u5230\u5982\u679c\u503c\u57df\u4e0d\u662f\u5bf9\u5e94\u663e\u7136\u65e0\u89e3\u3002</li> <li>\u6ce8\u610f\u5230\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6570\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u5fc5\u7136\u53ef\u4ee5\u4e0d\u6539\u53d8\u8fd9\u4e2a\u6570\u7ec4\u53bb\u4ea4\u6362\uff08\u4ea4\u6362\u5b8c\u4e86\u5229\u7528\u8fd9\u4e2a\u5143\u7d20\u518d\u6362\u56de\u53bb\u5373\u53ef\uff09\u3002</li> <li>\u5982\u679c\u9006\u5e8f\u5bf9\u5947\u5076\u6027\u4e0d\u76f8\u540c\uff0c\u56e0\u4e3a\u4e0d\u5b58\u5728\u53ef\u4ee5\u53ea\u66f4\u6539\u4e00\u8fb9\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u65e0\u89e3\uff0c\u5269\u4e0b\u7684\u90fd\u662f\u6709\u89e3\u3002</li> </ul> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nclass Fenwick {\nprivate:\nint t[si &lt;&lt; 1], V;\ninline int lowbit(int x) { return x &amp; -x; }\npublic:\nvoid init(int n) { memset(t, 0, sizeof t), V = n + 1; }\nvoid add(int x, int v) { while(x &lt;= V) t[x] += v, x += lowbit(x); }\nint que(int x) { int ret = 0; while(x) ret += t[x], x -= lowbit(x); return ret; } } tr;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint n; cin &gt;&gt; n;\nstd::vector&lt;int&gt; a(n), b(n);\nfor(int i = 0; i &lt; n; ++i)\ncin &gt;&gt; a[i];\nfor(int i = 0; i &lt; n; ++i)\ncin &gt;&gt; b[i];\n\nint inv[2] = {0, 0};\ntr.init(n);\nfor(int i = 0; i &lt; n; ++i) {\ninv[0] += tr.que(n - a[i]);\ntr.add(n - a[i] + 1, 1);\n}\ntr.init(n);\nfor(int i = 0; i &lt; n; ++i) {\ninv[1] += tr.que(n - b[i]);\ntr.add(n - b[i] + 1, 1);\n}\n\nsort(a.begin(), a.end()), sort(b.begin(), b.end());\nfor(int i = 0; i &lt; n; ++i) {\nif(a[i] != b[i]) {\ncout &lt;&lt; \"No\" &lt;&lt; endl;\nreturn 0;\n}\n}\nfor(int i = 1; i &lt; n; ++i) {\nif(a[i] == a[i - 1]) {\ncout &lt;&lt; \"Yes\" &lt;&lt; endl;\nreturn 0;\n}\n}\nif((inv[0] - inv[1]) % 2 == 0) cout &lt;&lt; \"Yes\" &lt;&lt; endl;\nelse cout &lt;&lt; \"No\" &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#abc296g-polygon-and-points", "title": "ABC296G Polygon and Points", "text": "<p>\u9898\u9762\u6682\u7565\u3002</p> <p>\u662f\u8ba1\u7b97\u51e0\u4f55\u677f\u5b50\uff0c\u4e4b\u524d\u5bd2\u5047\u6a21\u62df\u8d5b\u7684\u65f6\u5019\u8ba8\u8bba\u8fc7\u7684 PIP \u95ee\u9898\u3002</p> <p>\u7136\u540e\u5c31\u662f\uff0c\u76f4\u63a5\u7528\u56de\u8f6c\u6570\u7b97\u6cd5\u662f \\(O(n)\\) \u5355\u6b21\u7684\u3002</p> <p>\u56e0\u4e3a\u4f60\u5c31\u7b97\u4f7f\u7528\u4e86\u53c9\u79ef\uff0c\u4f60\u4e5f\u53ea\u80fd\u5bf9\u4e8e\u4e00\u6761\u76f4\u7ebf\u5224\u65ad\u70b9\u7684\u4f4d\u7f6e\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4ee5\u591a\u8fb9\u5f62\u7684\u91cd\u5fc3\u4e3a\u6781\u70b9\u5efa\u6781\u5750\u6807\u7cfb\u3002</p> <p>\u8bbe\u8be2\u95ee\u70b9\u4e3a \\((\\theta, d)\\)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u51f8\u5305\u4e0a\u4e8c\u5206\u4e00\u6761\u6781\u89d2\u76f8\u8fd1\u7684\u8fb9\uff0c\u770b\u4e00\u4e0b\u53c9\u79ef\u7684\u5927\u5c0f\u5373\u53ef\u3002</p> <p>\u56e0\u4e3a\u8fd9\u6837\u7b49\u4e8e\u4eba\u4e3a\u7ed9\u70b9\u5212\u5206\u4e86\u4e00\u4e2a\u201c\u533a\u57df\u201d\uff0c\u65b9\u4fbf\u627e\u5230\u4e00\u4e2a\u8fb9\u8fdb\u884c\u5224\u5b9a\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n \\log n)\\)\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\n\nconst int si = 2e5 + 10;\n\nint n, p, x[si &lt;&lt; 1], y[si &lt;&lt; 1];\nldb fx, fy;\nldb ang[si &lt;&lt; 1];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; x[i] &gt;&gt; y[i];\nx[i + n] = x[i], y[i + n] = y[i];\nfx += x[i], fy += y[i];\n}\nfx /= (1.0 * n), fy /= (1.0 * n);\nfor(int i = 1; i &lt;= n; ++i) {\nldb val = atan2(y[i] - fy, x[i] - fx);\nif(val &lt; ang[p]) p = i;\nang[i] = ang[i + n] = val;\n}\n\nint q; cin &gt;&gt; q;\nwhile(q--) {\nint dx, dy; cin &gt;&gt; dx &gt;&gt; dy;\nint it = lower_bound(ang + p, ang + p + n, atan2(dy - fy, dx - fx)) - ang;\ni64 outer_product = 1ll * (x[it] - x[it - 1]) * (dy - y[it - 1]) - 1ll * (y[it] - y[it - 1]) * (dx - x[it - 1]) ;\nif(outer_product == 0) cout &lt;&lt; \"ON\" &lt;&lt; endl;\nif(outer_product &gt;  0) cout &lt;&lt; \"IN\" &lt;&lt; endl;\nif(outer_product &lt;  0) cout &lt;&lt; \"OUT\" &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#abc297f-minimum-bounding-box-2", "title": "ABC297F Minimum Bounding Box 2", "text": "<p>\u9898\u9762\u6682\u7565\u3002</p> <p>\u6709\u4e24\u79cd\u8ba1\u7b97\u65b9\u5f0f\uff0c\u4e0d\u8fc7\u8ba1\u7b97\u8d77\u6765\u90fd\u5dee\u4e0d\u591a\u3002</p> <p>\u8003\u8651\u6700\u66b4\u529b\u7684\u679a\u4e3e\u70b9\uff1a\u8bbe \\(S\\) \u8868\u793a\u679a\u4e3e\u7684\u70b9\u96c6\uff0c\u6709 \\(|S| = k\\)\u3002</p> <p>\u5219\u6709\uff1a\\(ans = \\dfrac{\\sum\\limits_{S} f(S)}{\\dbinom{H\\cdot W}{k}}\\)\uff0c\u5176\u4e2d \\(f(S)\\) \u4e3a\u5305\u542b\u70b9\u96c6 \\(S\\) \u7684\u6240\u6709\u70b9\u7684\u6700\u5c0f\u77e9\u5f62 \\(R\\) \u7684\u5927\u5c0f\u3002</p> <p>\u8003\u8651\u62c6\u5f00\uff1a\\(ans = \\sum\\limits_{S}\\sum\\limits_{(x, y) \\in R} 1\\)\uff0c\u8fd9\u6837\u4e0d\u597d\u7b97\uff0c\u6240\u4ee5\u6211\u4eec \u4ea4\u6362 Sigma\uff0c\u8fd9\u91cc\u4e0d\u662f\u7b80\u5355\u7684\u4ea4\u6362\uff0c\u8981\u8003\u8651\u5b9e\u9645\u610f\u4e49\uff0c\u4e0b\u6807\u91cc\u9762\u7684 \\(\\in R\\) \u4e0d\u597d\u8003\u8651\uff0c\u6211\u4eec\u4e22\u51fa\u6765\u5c31\u80fd\u76f4\u63a5\u4ea4\u6362\u4e86</p> <p>\u53ef\u4ee5\u5f97\u5230 \\(ans = \\sum\\limits_{S} \\sum\\limits_{(x, y)}1 [(x, y) \\in R]\\)\uff0c\u4ea4\u6362\u4e4b\u540e\uff1a\\(ans = \\sum\\limits_{(x,y)}\\sum\\limits_{S} 1 [(x, y) \\in R]\\)\uff0c\u6b64\u65f6\u5f0f\u5b50\u662f\u6b63\u786e\u7684\u3002</p> <p>\u4e3a\u5565\u4ea4\u6362 Sigma \u5462\uff1f\u6211\u4eec\u8003\u8651\u4ea4\u6362\u540e\u7684\u5f0f\u5b50\u7684\u610f\u4e49\uff0c\u672c\u8d28\u4e0a\u662f\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9 \\((x, y)\\)\uff0c\u8003\u8651\u6709\u591a\u5c11\u4e2a\u70b9\u96c6\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u70b9\u96c6\u6784\u6210\u7684 \\(R\\) \u5305\u542b\u4e86 \\((x, y)\\)\uff0c\u6b64\u65f6\u8ba1\u7b97\u8d77\u6765\u5c31\u5bb9\u6613\u591a\u4e86\u3002</p> <p>\u8fd9\u91cc\u53ef\u4ee5\u5bb9\u65a5\u7b97\uff0c\u4e0d\u8fc7\u8fd8\u662f\u6709\u70b9\u9ebb\u70e6\uff1f</p> <p>\u53e6\u4e00\u79cd\u66f4\u76f4\u63a5\u7684\u65b9\u5f0f\u662f\uff0c\u6211\u4eec\u8bbe \\(f(h, w)\\) \u8868\u793a\u5728 \\(h \\cdot w\\) \u7684\u77e9\u5f62\u5f53\u4e2d\u653e \\(k\\) \u4e2a\u70b9\uff0c\u4e14\u8fd9\u4e2a\u77e9\u5f62\u6070\u597d\u662f\u5305\u542b\u8fd9 \\(k\\) \u4e2a\u70b9\u7684\u6700\u5c0f\u77e9\u5f62\u3002</p> <p>\u8fd9\u4e2a\u4e4d\u4e00\u770b\u4e0d\u597d\u7b97\uff0c\u4f46\u662f\u53ef\u4ee5\u8003\u8651\u66f4\u672c\u8d28\u7684\u95ee\u9898\uff0c\u8981\u6c42\u6700\u5c0f\uff0c\u5c31\u662f\u8003\u8651\u56db\u6761\u8fb9\u4e0a\u90fd\u6709\u70b9\u3002</p> <p>\u8fd9\u91cc\u8981\u8003\u8651\u8fb9\u4e0a\uff0c\u70b9\u4e0a\uff0c\u4e0d\u592a\u597d\u641e\u5bf9\u5427\uff1f</p> <p>\u4f46\u662f\u4e00\u770b\u5c31\u662f\u5bb9\u65a5\uff0c\u5c31\uff0c\u62bd\u8c61\u6210\u56db\u4e2a\u6761\u4ef6\uff0c\\(2^4\\) \u5bb9\u65a5\u4e00\u4e0b\u5c31\u597d\u4e86\u3002</p> <p>\u5bb9\u65a5\u7684\u65f6\u5019\u5bf9\u5e94\u7684\u65b9\u6848\u6570\u53ef\u4ee5\u7528\u66f4\u5c0f\u7684 \\(f\\) \u503c\u7b97\uff0c\u6240\u4ee5\u8fd9\u672c\u8d28\u662f\u4e2a\u5bb9\u65a5\u5957 dp\u3002</p> <p>\u7b97\u51fa\u6765\u4e4b\u540e\u5e73\u79fb\u4e00\u4e0b\u5373\u53ef</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cassert&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e6 + 10;\nconst int mod = 998244353;\n\nint inv[si], fact[si], invf[si];\nvoid init(int n) {\ninv[1] = 1, fact[0] = invf[0] = 1;\nfor(int i = 2; i &lt;= n; ++i)\ninv[i] = 1ll * (mod - mod / i) * inv[mod % i] % mod;\nfor(int i = 1; i &lt;= n; ++i)\nfact[i] = 1ll * fact[i - 1] * i % mod,\ninvf[i] = 1ll * invf[i - 1] * inv[i] % mod;\n}\nint C(int n, int m) {\nif(m &lt; 0 || n &lt; m) return 0;\nreturn 1ll * fact[n] * invf[n - m] % mod * invf[m] % mod;\n}\nint qpow(int a, int b) {\nint ret = 1ll % mod;\nfor(; b; b &gt;&gt;= 1) {\nif(b &amp; 1) ret = ret * a % mod;\na = a * a % mod;\n}\nreturn ret % mod;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint n, m, k;\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\nif(k == 1) { cout &lt;&lt; \"1\" &lt;&lt; endl; return 0; }\ninit(si - 10);\n\nint ret = 0, ans = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= m; ++j) {\nret = 0;\nfor(int u = 0; u &lt;= 2; ++u) {\nfor(int v = 0; v &lt;= 2; ++v) {\nint t = (u == 1 ? -2 : 1) * (v == 1 ? -2 : 1);\n(ret += t * C((i - u) * (j - v), k) + mod) %= mod;\n}\n}\nret = ret % mod * i % mod * j % mod * (n - i + 1ll + mod) % mod * (m - j + 1ll + mod) % mod, (ans += ret) %= mod;\n}\n}\nans *= qpow(C(n * m, k), mod - 2);\ncout &lt;&lt; (ans + mod) % mod &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#abc297g-constrained-nim-2", "title": "ABC297G Constrained Nim 2", "text": "<p>\u9898\u9762\u6682\u7565\u3002</p> <p>\u624b\u63a8\u53ef\u4ee5\u53d1\u73b0 \\(\\text{SG}(x) = x \\pmod (l + r) / l\\)\u3002</p> <p>\u5177\u4f53\u8fc7\u7a0b\u6682\u65f6\u7701\u7565\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nint n, l, r;\nint Sg(int v) { return v % (l + r) / l; }\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint ret = 0; cin &gt;&gt; n &gt;&gt; l &gt;&gt; r;\nfor(int i = 1, x; i &lt;= n; ++i)\ncin &gt;&gt; x, ret ^= Sg(x);\ncout &lt;&lt; (ret ? \"First\" : \"Second\") &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-03-04/#abc298f-rock-score", "title": "ABC298F Rock Score", "text": "<p>\u9898\u9762\u6682\u7565</p> <p>\u9996\u5148\u662f\u60ef\u7528\u5957\u8def\uff0c\u5bf9\u4e8e \\(x,y\\) \u5206\u522b\u5b58\u4e00\u4e0b\u4f4d\u7f6e\uff08\u5e76\u4e14\u79bb\u6563\u5316\uff09</p> <p>\u6ce8\u610f\u5230\u6700\u4f18\u7684\u4f4d\u7f6e\u4e00\u5b9a\u662f\u4fdd\u5b58\u4e86\u7684 \\(x, y\\) \u7684\u4ea4\u754c\u5904\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u5c31 \\(O(N^2)\\) \u4e86\uff0c\u548b\u641e\u5462\uff0c\u56e0\u4e3a \\(sx + sy\\) \u7684\u65f6\u5019\u8fd8\u662f\u8981\u51cf\u53bb\u4ea4\u754c\u4f4d\u7f6e\u7684\u503c\u7684\u3002</p> <p>\u90a3\u4e48\u5c31\u4e0d\u80fd\u76f4\u63a5\u5206\u522b\u679a\u4e3e \\(x, y\\) \u7136\u540e\u4e24\u4e2a\u6700\u5927\u503c\u76f8\u52a0\u3002</p> <p>\u4f46\u662f\u5176\u5b9e\u4f1a\u51cf\u53bb\u7684\u4f4d\u7f6e\u53ea\u6709\u7ed9\u51fa\u6765\u7684 \\(O(N)\\) \u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u626b\u63cf \\(x\\)\uff0c\u5e76\u4e14\u5bf9\u6240\u6709 \\(y\\) \u4fdd\u5b58\u4e00\u4e2a set\uff0c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002</p> <p>\u9047\u5230\u4ea4\u754c\u5904\u6709\u503c\u7684\u76f4\u63a5 skip\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6700\u5927\u7684\u4f4d\u7f6e\uff08\u5c31\u662f set \u4e2d\u7684\u7b2c\u4e00\u4e2a\u5408\u6cd5\u4f4d\u7f6e\uff09\u5c31\u884c\u4e86\u3002</p> <p>\u53ef\u4ee5\u8bc1\u660e\u6211\u4eec skip \u7684\u6b21\u6570\u4e00\u5b9a\u662f \\(O(N)\\) \u7ea7\u522b\u7684\uff08\u67d0\u4e2a\u70b9\u5728\u67d0\u4e2a \\(x\\) \u88ab skip \u4e86\uff0c\u90a3\u4e48\u4e4b\u540e\u80af\u5b9a\u4e0d\u4f1a skip \u4e86\u554a\uff09\u3002</p> <p>\u7136\u540e\u5c31\u7b80\u5355\u7684\u505a\u5b8c\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;map&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long \n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 4e5 + 10;\n\nint n;\nint x[si], y[si], v[si];\nint rx[si], ry[si];\nint sx[si], sy[si];\nstd::vector&lt;int&gt; d;\nint val(int x) { return lower_bound(d.begin(), d.end(), x) - d.begin() + 1; }\nstd::map&lt;std::pair&lt;int, int&gt;, int&gt; mp;\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n, mp.clear(), d.clear();\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; x[i] &gt;&gt; y[i] &gt;&gt; v[i], d.push_back(x[i]), d.push_back(y[i]);\nsort(d.begin(), d.end()); d.erase(unique(d.begin(), d.end()), d.end());\nfor(int i = 1; i &lt;= n; ++i) {\nrx[i] = val(x[i]), ry[i] = val(y[i]);\nsx[rx[i]] += v[i], sy[ry[i]] += v[i];\nmp[make_pair(rx[i], ry[i])] = v[i];\n}\n\nint ans = -1;\nfor(int i = 1; i &lt;= n; ++i)\nans = max(ans, sx[rx[i]] + sy[ry[i]] - v[i]);\nstd::vector&lt;std::pair&lt;int, int&gt;&gt; a;\nfor(int i = 1; i &lt;= (int)d.size(); ++i) a.push_back(make_pair(sy[i], i));\nsort(a.begin(), a.end()); reverse(a.begin(), a.end());\nfor(int i = 1; i &lt;= (int)d.size(); ++i) {\nfor(int j = 0; j &lt; (int)a.size(); ++j) {\nauto [va, id] = a[j];\nif(mp[make_pair(i, id)] != 0) continue;\nans = max(ans, sx[i] + va); break;\n}\n}\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/atcf-for-2023-05-06/", "title": "2023\u5e745,6\u6708AT&CF", "text": ""}, {"location": "rec/atcf-for-2023-05-06/#abc305e-art-gallery-on-graph", "title": "ABC305E - Art Gallery on Graph", "text": "<p>\u7ed9\u4f60\u4e00\u5f20 \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u6743\u65e0\u5411\u56fe\uff0c\u8282\u70b9 \\(p_i\\) \u4e0a\u4f1a\u6709\u4e00\u4e2a\u4f53\u529b\u503c\u4e3a \\(h_i\\) \u7684\u5b88\u536b\uff0c\u5b88\u536b\u6709 \\(k\\) \u4e2a\u3002</p> <p>\u4e00\u4e2a\u8282\u70b9\u88ab\u770b\u5b88\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u5b88\u536b\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u5b88\u536b\u53ef\u4ee5\u79fb\u52a8\u5230\u8fd9\u4e2a\u8282\u70b9\u4e0a\uff0c\u4e14\u5269\u4f59\u4f53\u529b\u5927\u4e8e\u7b49\u4e8e\u96f6\u3002</p> <p>\u79fb\u52a8\u4e00\u6761\u8fb9\u9700\u8981\u82b1\u8d39 \\(1\\) \u7684\u4f53\u529b\u3002</p> <p>\u6c42\u51fa\u6240\u6709\u7684\u88ab\u770b\u5b88\u7684\u8282\u70b9\u3002</p> <p>\\(n, m \\le 2e5, 1\\le k \\le n\\)\u3002</p> <p>\u6ce8\u610f\u5230\u95ee\u9898\u5173\u952e\u5728\u4e8e\u5b88\u536b\u3002</p> <p>\u4e0d\u59a8\u8003\u8651\u4ece\u5b88\u536b\u5f00\u59cb\u6269\u5c55\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e2a\u5b88\u536b BFS \u6216\u8005 Dij \u4e4b\u7c7b\u7684\u505a\u4e00\u904d\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u662f \\(O(nm)\\) \u751a\u81f3\u66f4\u9ad8\u7684\u3002</p> <p>\u7ecf\u8fc7\u89c2\u5bdf\u4e4b\u540e\u4e5f\u627e\u4e0d\u5230\u5176\u5b83\u6027\u8d28\u6216\u8005\u662f\u522b\u7684\u505a\u6cd5\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u600e\u4e48\u4f18\u5316\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u627e\u5230\u5269\u4f59\u4f53\u529b\u6700\u5927\u7684\u5b88\u536b\uff0c\u7c7b\u4f3c dij \u66f4\u65b0\u5468\u56f4\u7684\u8282\u70b9\u3002</p> <p>\u4f46\u662f\u5b88\u536b\u662f\u4e0d\u80fd\u5206\u8eab\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a \\(mx\\) \u8868\u793a\u6240\u6709\u5b88\u536b\u5230\u8fbe\u8fd9\u4e2a\u8282\u70b9\uff0c\u6240\u5269\u4f59\u7684\u4f53\u529b\u6700\u5927\u503c\u3002</p> <p>\u7136\u540e\u6bcf\u6b21\u627e\u5230\u6700\u5927\u7684 mx \u6765\u66f4\u65b0\u5373\u53ef\u3002</p> <p>\u8fc7\u7a0b\u7c7b\u4f3c dij.</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;queue&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m, k;\nint tot = 0, head[si];\nstruct Edge { int ver, Next; } e[si &lt;&lt; 1];\ninline void add(int u, int v) { e[tot] = (Edge){v, head[u]}, head[u] = tot++; } int p[si], h[si];\n\nstd::vector&lt;int&gt; c;\nint ans = 0, mx[si];\nstd::priority_queue&lt;std::pair&lt;int, int&gt;&gt; q;\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(head, -1, sizeof head);\n\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v;\ncin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n}\n\nmemset(mx, -1, sizeof head);\nfor(int i = 1; i &lt;= k; ++i)\ncin &gt;&gt; p[i] &gt;&gt; h[i];\nfor(int i = 1; i &lt;= k; ++i) if(mx[p[i]] &lt; h[i]) q.push(make_pair(mx[p[i]] = h[i], p[i]));\n\nwhile(!q.empty()) {\nauto [val, u] = q.top();\nq.pop();\nif(mx[u] != val) continue;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(mx[v] &lt; val - 1) q.push(make_pair(mx[v] = val - 1, v));\n}\n}\n\nc.clear();\nfor(int i = 1; i &lt;= n; ++i)\nif(~mx[i]) c.emplace_back(i);\ncout &lt;&lt; c.size() &lt;&lt; endl;\nfor(auto x : c) cout &lt;&lt; x &lt;&lt; \" \";\ncout &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/convex-opt-practice/", "title": "CWOI \u659c\u7387\u4f18\u5316\u9009\u505a(23Mar)", "text": ""}, {"location": "rec/convex-opt-practice/#1", "title": "\u4efb\u52a1\u5b89\u63921", "text": "<p>\\(n\\) \u4e2a\u4efb\u52a1\u6392\u6210\u4e00\u4e2a\u5e8f\u5217\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u7b49\u5f85\u5b8c\u6210\uff08\u987a\u5e8f\u4e0d\u5f97\u6539\u53d8\uff09\uff0c\u8fd9 \\(n\\) \u4e2a\u4efb\u52a1\u88ab\u5206\u6210\u82e5\u5e72\u6279\uff0c\u6bcf\u6279\u5305\u542b\u76f8\u90bb\u7684\u82e5\u5e72\u4efb\u52a1\u3002</p> <p>\u4ece\u96f6\u65f6\u523b\u5f00\u59cb\uff0c\u8fd9\u4e9b\u4efb\u52a1\u88ab\u5206\u6279\u52a0\u5de5\uff0c\u7b2c \\(i\\) \u4e2a\u4efb\u52a1\u5355\u72ec\u5b8c\u6210\u6240\u9700\u7684\u65f6\u95f4\u4e3a \\(t_i\\)\u3002\u5728\u6bcf\u6279\u4efb\u52a1\u5f00\u59cb\u524d\uff0c\u673a\u5668\u9700\u8981\u542f\u52a8\u65f6\u95f4 \\(s\\)\uff0c\u800c\u5b8c\u6210\u8fd9\u6279\u4efb\u52a1\u6240\u9700\u7684\u65f6\u95f4\u662f\u5404\u4e2a\u4efb\u52a1\u9700\u8981\u65f6\u95f4\u7684\u603b\u548c\uff08\u540c\u4e00\u6279\u4efb\u52a1\u5c06\u5728\u540c\u4e00\u65f6\u523b\u5b8c\u6210\uff09\u3002 </p> <p>\u6bcf\u4e2a\u4efb\u52a1\u7684\u8d39\u7528\u662f\u5b83\u7684\u5b8c\u6210\u65f6\u523b\u4e58\u4ee5\u4e00\u4e2a\u8d39\u7528\u7cfb\u6570 \\(c_i\\)\u3002\u8bf7\u786e\u5b9a\u4e00\u4e2a\u5206\u7ec4\u65b9\u6848\uff0c\u4f7f\u5f97\u603b\u8d39\u7528\u6700\u5c0f\u3002</p> <p>\\(n\\le 5000,1\\le s \\le 50,1\\le t_i,c_i \\le 100\\)</p> <p>\u8bbe \\(dp(i, j)\\) \u8868\u793a\uff0c\u8003\u8651\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u5206\u4e86 \\(j\\) \u6bb5\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u6839\u636e\u5b9a\u4e49\uff0c\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4f4d\u7f6e \\(k\\)\uff0c\u53ef\u4ee5\u5f97\u5230\u65b9\u7a0b\uff1a\\(dp(i, j) = \\min\\limits_{k = 0}^{i - 1}\\{dp(k, j - 1) + \\sum\\limits_{l = k + 1}^i c(l) \\times (s \\times j + \\sum\\limits_{l = 1}^{i} t(i))\\}\\)\u3002</p> <p>\u9884\u5904\u7406\u524d\u7f00\u548c\uff0c\u53ef\u4ee5\u505a\u5230 \\(O(n^3)\\)\u3002</p> <p>\u4e0d\u8fc7\u6ce8\u610f\u5230\u672c\u9898\u5e76\u4e0d\u8981\u6c42\u5206\u591a\u5c11\u6bb5\uff0c\u7528 Fence \u7684\u601d\u8def\u53ef\u4ee5\u6539\u8fdb\u4e00\u4e0b\uff1a</p> <p>\u8bbe \\(dp(i)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u5206\u4e86\u82e5\u5e72\u6bb5\u7684\u4ee3\u4ef7\u6700\u5c0f\u503c\uff0c\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4f4d\u7f6e \\(j\\) \u5373\u53ef\u8f6c\u79fb\u3002</p> <p>\u4f46\u662f\u8f6c\u79fb\u7684\u65f6\u5019\u5e76\u4e0d\u80fd\u77e5\u9053\u673a\u5668\u542f\u52a8\u4e86\u591a\u5c11\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u79cd\u53eb\u8d39\u7528\u63d0\u524d\u8ba1\u7b97\u7684\u601d\u60f3\uff0c\u77e5\u9053\u8fd9\u91cc\u5df2\u7ecf\u542f\u52a8\u4e86\u4e00\u6b21\u4e86\uff0c\u5c31\u628a\u5b83\u4f1a\u5bf9\u4e4b\u540e\u7684\u6240\u6709\u72b6\u6001\u505a\u7684\u8d21\u732e\u76f4\u63a5\u52a0\u5230\u5f53\u524d\u72b6\u6001\u91cc\u9762\uff0c\u4e5f\u5c31\u662f\uff0c\u5bf9\u4e8e\u540e\u9762\u7684\u6240\u6709\u4efb\u52a1\uff0c\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e9b\u4efb\u52a1\u53c8\u591a\u51fa\u4e86 \\(s\\) \u7684\u65f6\u95f4\uff0c\u90a3\u4e48\u51b3\u7b56\u5230\u540e\u9762\u7684\u4efb\u52a1\u65f6\uff0c\u5f71\u54cd\u5c31\u88ab\u6d88\u9664\u4e86\u3002</p> <p>\u53ef\u4ee5\u5f97\u5230\uff1a\\(dp(i) = \\min\\limits_{j = 0}^{i - 1} \\{dp(j) + \\sum\\limits_{k = j + 1}^{n} c(k) \\times s + \\sum\\limits_{k = j + 1}^{i} c(k) \\times \\sum\\limits_{k = 1}^{i} t(i)\\}\\)</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u662f\u628a\u4e0a\u9762\u90a3\u4e2a\u65b9\u7a0b\u7684 \\(s \\times j \\times \\sum\\limits_{l = k + 1}^{i} c(l)\\) \u79fb\u52a8\u5230\u524d\u9762\u7684\u72b6\u6001\u8fdb\u884c\u8ba1\u7b97\u4e86\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n^2)\\)\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e3 + 10;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, s;\nint t[si], c[si];\nint st[si], sc[si];\nint dp[si];\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(dp, 0x3f, sizeof dp);\n\ndp[0] = st[0] = sc[0] = 0, cin &gt;&gt; n &gt;&gt; s;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; t[i] &gt;&gt; c[i], st[i] = st[i - 1] + t[i], sc[i] = sc[i - 1] + c[i];\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 0; j &lt; i; ++j) {\ndp[i] = min(dp[i], dp[j] + (sc[n] - sc[j]) * s + (sc[i] - sc[j]) * st[i]);\n}\n}\ncout &lt;&lt; dp[n] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/convex-opt-practice/#2", "title": "\u4efb\u52a1\u5b89\u63922", "text": "<p>\\(n\\) \u4e2a\u4efb\u52a1\u6392\u6210\u4e00\u4e2a\u5e8f\u5217\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u7b49\u5f85\u5b8c\u6210\uff08\u987a\u5e8f\u4e0d\u5f97\u6539\u53d8\uff09\uff0c\u8fd9 \\(n\\) \u4e2a\u4efb\u52a1\u88ab\u5206\u6210\u82e5\u5e72\u6279\uff0c\u6bcf\u6279\u5305\u542b\u76f8\u90bb\u7684\u82e5\u5e72\u4efb\u52a1\u3002</p> <p>\u4ece\u96f6\u65f6\u523b\u5f00\u59cb\uff0c\u8fd9\u4e9b\u4efb\u52a1\u88ab\u5206\u6279\u52a0\u5de5\uff0c\u7b2c \\(i\\) \u4e2a\u4efb\u52a1\u5355\u72ec\u5b8c\u6210\u6240\u9700\u7684\u65f6\u95f4\u4e3a \\(t_i\\)\u3002\u5728\u6bcf\u6279\u4efb\u52a1\u5f00\u59cb\u524d\uff0c\u673a\u5668\u9700\u8981\u542f\u52a8\u65f6\u95f4 \\(s\\)\uff0c\u800c\u5b8c\u6210\u8fd9\u6279\u4efb\u52a1\u6240\u9700\u7684\u65f6\u95f4\u662f\u5404\u4e2a\u4efb\u52a1\u9700\u8981\u65f6\u95f4\u7684\u603b\u548c\uff08\u540c\u4e00\u6279\u4efb\u52a1\u5c06\u5728\u540c\u4e00\u65f6\u523b\u5b8c\u6210\uff09\u3002 </p> <p>\u6bcf\u4e2a\u4efb\u52a1\u7684\u8d39\u7528\u662f\u5b83\u7684\u5b8c\u6210\u65f6\u523b\u4e58\u4ee5\u4e00\u4e2a\u8d39\u7528\u7cfb\u6570 \\(c_i\\)\u3002\u8bf7\u786e\u5b9a\u4e00\u4e2a\u5206\u7ec4\u65b9\u6848\uff0c\u4f7f\u5f97\u603b\u8d39\u7528\u6700\u5c0f\u3002</p> <p>\\(n \\le 3\\times 10^5,1\\le s \\le 512,1\\le t_i,c_i \\le 512\\)</p> <p>\u8003\u8651\u7528\u524d\u7f00\u548c\u5199\u4e0b\u4e0a\u9762\u7684\u5f0f\u5b50\uff1a</p> <p>\\(dp(i) = \\min\\limits_{j = 0}^{i - 1}\\{dp(j) + (sc(n) - sc(j)) \\times s + (sc(i) - sc(j)) \\times st(i)\\}\\)</p> <p>\u4e58\u5f00\uff1a\\(dp(i) = \\min\\limits_{j = 0}^{i - 1}\\{dp(j) + sc(n) \\times s - sc(j) \\times s + sc(i) \\times st(i) - sc(j) \\times st(i)\\}\\)</p> <p>\u5957\u7528\u659c\u7387\u4f18\u5316\u7684\u677f\u5b50\uff0c\u6211\u4eec\u53bb\u6389 \\(\\min\\)\uff1a</p> <p>\\(dp(i) = dp(j) + sc(n) \\times s - sc(j) \\times s + sc(i) \\times st(i) - sc(j) \\times st(i)\\)</p> <p>\u5199\u6210\u4e00\u6b21\u51fd\u6570 \\(b = -kx + y\\)\u7684\u5f62\u5f0f\uff1a</p> <p>\\(dp(i) - sc(i) \\times st(i) - sc(n) \\times s = -(st(i) + s) \\times sc(j) + dp(j)\\)</p> <p>\u6240\u4ee5 \\((x, y)\\) \u8fd9\u4e9b\u70b9\u5c31\u662f \\((sc(j), dp(j))\\) \u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u8ba9 \\(dp(i)\\) \u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u5c31\u662f\u8ba9\u4ee5 \\((st(i) + s)\\) \u4e3a\u659c\u7387\u7684\u76f4\u7ebf\u7ecf\u8fc7\u4e00\u4e2a\u6700\u4f18\u7684 \\((sc(j), dp(j))\\)\u3002</p> <p>\u56e0\u4e3a\u4e0b\u6807\u9650\u5236\u662f \\(j \\in [0, i)\\)\uff0c\\(k_i\\) \u968f \\(i\\) \u5355\u8c03\u9012\u589e\uff0c\u4e14\u53ea\u9700\u8981\u5728\u672b\u5c3e\u63d2\u5165\u51b3\u7b56\uff0c\u6240\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u51b3\u7b56\u5b8c\u63d2\u5165\u5355\u8c03\u961f\u5217\u5c31\u597d\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e3 + 10;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, s;\nint t[si], c[si];\nint st[si], sc[si], dp[si];\nint q[si], l, r;\n\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nst[0] = sc[0] = 0;\nmemset(q, 0, sizeof q), l = 1, r = 1;\nmemset(dp, 0x3f, sizeof dp), dp[0] = 0;\n// \u8ba9 (x0, y0) \u5165\u961f\uff08j \u53ef\u4ee5\u53d6\u5230 0\uff09\n// \u961f\u5217\u672c\u8eab\u8fd8\u662f\u95ed\u533a\u95f4\uff0c\u4f46\u662f\u4e3a\u4e86\u4fdd\u8bc1 l + 1, r - 1 \u4e0d\u4f1a\u8d8a\u754c\uff0c\u6240\u4ee5\u5199\u7684\u662f l &lt; r.\n\ncin &gt;&gt; n &gt;&gt; s;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; t[i] &gt;&gt; c[i], sc[i] = sc[i - 1] + c[i], st[i] = st[i - 1] + t[i];\nfor(int i = 1; i &lt;= n; ++i) {\nwhile(l &lt; r &amp;&amp;  dp[q[l + 1]] - dp[q[l]] &lt;= (st[i] + s) * (sc[q[l + 1]] - sc[q[l]]))\n++l;\ndp[i] = dp[q[l]] - (st[i] + s) * sc[q[l]] + sc[i] * st[i] + sc[n] * s; while(l &lt; r &amp;&amp; (dp[q[r]] - dp[q[r - 1]]) * (sc[i] - sc[q[r]]) &gt;= (dp[i] - dp[q[r]]) * (sc[q[r]] - sc[q[r - 1]]))\n--r;\nq[++r] = i;\n}\n// \u4e3a\u4e86\u907f\u514d\u7cbe\u5ea6\u95ee\u9898\uff0c\u76f4\u63a5\u628a\u659c\u7387\u7684\u5f0f\u5b50\u5199\u51fa\u6765\uff0c\u5206\u6bcd\u4e58\u5230\u5bf9\u9762\u3002\n\ncout &lt;&lt; dp[n] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/convex-opt-practice/#3", "title": "\u4efb\u52a1\u5b89\u63923", "text": "<p>\\(n\\) \u4e2a\u4efb\u52a1\u6392\u6210\u4e00\u4e2a\u5e8f\u5217\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u7b49\u5f85\u5b8c\u6210\uff08\u987a\u5e8f\u4e0d\u5f97\u6539\u53d8\uff09\uff0c\u8fd9 \\(n\\) \u4e2a\u4efb\u52a1\u88ab\u5206\u6210\u82e5\u5e72\u6279\uff0c\u6bcf\u6279\u5305\u542b\u76f8\u90bb\u7684\u82e5\u5e72\u4efb\u52a1\u3002</p> <p>\u4ece\u96f6\u65f6\u523b\u5f00\u59cb\uff0c\u8fd9\u4e9b\u4efb\u52a1\u88ab\u5206\u6279\u52a0\u5de5\uff0c\u7b2c \\(i\\) \u4e2a\u4efb\u52a1\u5355\u72ec\u5b8c\u6210\u6240\u9700\u7684\u65f6\u95f4\u4e3a \\(t_i\\)\u3002\u5728\u6bcf\u6279\u4efb\u52a1\u5f00\u59cb\u524d\uff0c\u673a\u5668\u9700\u8981\u542f\u52a8\u65f6\u95f4 \\(s\\)\uff0c\u800c\u5b8c\u6210\u8fd9\u6279\u4efb\u52a1\u6240\u9700\u7684\u65f6\u95f4\u662f\u5404\u4e2a\u4efb\u52a1\u9700\u8981\u65f6\u95f4\u7684\u603b\u548c\uff08\u540c\u4e00\u6279\u4efb\u52a1\u5c06\u5728\u540c\u4e00\u65f6\u523b\u5b8c\u6210\uff09\u3002 </p> <p>\u6bcf\u4e2a\u4efb\u52a1\u7684\u8d39\u7528\u662f\u5b83\u7684\u5b8c\u6210\u65f6\u523b\u4e58\u4ee5\u4e00\u4e2a\u8d39\u7528\u7cfb\u6570 \\(c_i\\)\u3002\u8bf7\u786e\u5b9a\u4e00\u4e2a\u5206\u7ec4\u65b9\u6848\uff0c\u4f7f\u5f97\u603b\u8d39\u7528\u6700\u5c0f\u3002</p> <p>\\(n \\le 3\\times 10^5,1\\le s \\le 512,1\\le |t_i|,c_i \\le 512\\)</p> <p>\u6ce8\u610f\u5230 \\(t_i\\) \u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u610f\u5473\u7740 \\(\\exists i, st(i) &lt; 0\\)\u3002</p> <p>\u4e0b\u6807\u9650\u5236\u4f9d\u7136\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\u6765\u6ee1\u8db3\uff0c\u4f46\u662f\u56e0\u4e3a \\(k_i\\) \u4e0d\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6ca1\u6cd5\u76f4\u63a5\u6254\u5230\u5355\u8c03\u961f\u5217\u91cc\u9762\u5747\u644a \\(O(1)\\) \u8f6c\u79fb\uff08\u4e0d\u7136\u4f60\u66f4\u65b0\u5b8c \\(i - 1\\) \u7684\u65f6\u5019\u53ef\u80fd\u628a \\(i\\) \u7684\u6700\u4f18\u9009\u62e9\u7ed9\u5f39\u6389\uff09\u3002</p> <p>\u6ce8\u610f\u5230 \\(sc(i)\\) \u4ecd\u65e7\u662f\u5355\u8c03\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u652f\u6301\u5728\u672b\u5c3e\u63d2\u5165\u51b3\u7b56\u70b9.</p> <p>\u90a3\u4e48\u6211\u4eec\u4ecd\u65e7\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u8fd9\u4e2a\u51f8\u58f3\uff0c\u4f46\u662f\u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u5728\u51f8\u58f3\u4e0a\u76f4\u63a5\u4e8c\u5206\u4e00\u4e2a\u4f4d\u7f6e \\(e\\)\uff0c\u4f7f\u5f97 \\(K(e - 1, e) &lt; k_i &lt; K(e, e + 1)\\) \u800c\u4e0d\u662f\u76f4\u63a5\u53d6\u961f\u5934\u66f4\u65b0\uff0c\u6ce8\u610f\u9700\u8981\u7279\u6b8a\u5224\u65ad\u5934\u5c3e\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u5e94\u8be5\u662f\u5224 \\(q(mid), q(mid + 1)\\) \u6784\u6210\u7684\u76f4\u7ebf\u659c\u7387\uff0c\u4e0d\u7136\u4ee5\u8fd9\u6837\u7684\u4e8c\u5206\u65b9\u5f0f\u4f1a\u51fa\u9519\uff08\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u624b\u6a21\u4e00\u4e0b\uff09\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cctype&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\nusing i128 = __int128_t;\n\ntemplate &lt;typename __Tp&gt; void read(__Tp &amp;x) {\nint f = x = 0; char ch = getchar();\nfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = 1;\nfor (; isdigit(ch); ch = getchar()) x = (x &lt;&lt; 1) + (x &lt;&lt; 3) + (ch ^ 48);\nif (f) x = -x;\n}\nvoid read(char &amp;ch) { for (ch = getchar(); isspace(ch); ch = getchar()); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void read(__Tp1 &amp;x, __Tp2 &amp;... y) { read(x), read(y...); }\ntemplate &lt;typename __Tp&gt; void write(__Tp x) {\nif (x &lt; 0) putchar('-'), x = -x;\nif (x &gt; 9) write(x / 10);\nputchar(x % 10 + 48);\n}\nvoid write(char ch) { putchar(ch); }\nvoid write(const char *s) { for (; *s; ++s) putchar(*s); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void write(__Tp1 x, __Tp2 ... y) { write(x), write(y...); }\n\nconst int si = 3e5 + 10;\n\nint n, q[si], s, l, r;\ni128 dp[si], st[si], sc[si];\n\nint find(int slope) {\nif(l == r) return q[l];\nint L = l, R = r;\nwhile(L &lt; R) {\nint mid = (L + R) &gt;&gt; 1;\nif(dp[q[mid + 1]] - dp[q[mid]] &lt;= slope * (sc[q[mid + 1]] - sc[q[mid]]))\nL = mid + 1;\nelse R = mid;\n}\nreturn q[L];\n}\n\nint main() {\n\n// cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\nmemset(q, 0, sizeof q);\nmemset(dp, 0x3f, sizeof dp);\ndp[0] = 0, l = 1, r = 1;\n\nread(n, s);\nfor(int i = 1; i &lt;= n; ++i) {\ni128 t, c; read(t, c);\nst[i] = st[i - 1] + t, sc[i] = sc[i - 1] + c;\n}\nfor(int i = 1; i &lt;= n; ++i) {\nint p = find(s + st[i]);\ndp[i] = dp[p] - (s + st[i]) * sc[p] + st[i] * sc[i] + s * sc[n];\nwhile(l &lt; r &amp;&amp; (dp[q[r]] - dp[q[r - 1]]) * (sc[i] - sc[q[r]]) &gt;= (dp[i] - dp[q[r]]) * (sc[q[r]] - sc[q[r - 1]]))\n--r;\nq[++r] = i;\n}\n\nwrite(dp[n], endl);\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/convex-opt-practice/#cat-transport", "title": "Cat Transport", "text": ""}, {"location": "rec/convex-opt-practice/#_1", "title": "\u7279\u522b\u884c\u52a8\u961f", "text": "<p>\u4f60\u6709\u4e00\u652f\u7531 \\(n\\) \u540d\u9884\u5907\u5f79\u58eb\u5175\u7ec4\u6210\u7684\u90e8\u961f\uff0c\u58eb\u5175\u4ece \\(1\\) \u5230 \\(n\\) \u7f16\u53f7\uff0c\u4f60\u8981\u5c06\u4ed6\u4eec\u62c6\u5206\u6210\u82e5\u5e72\u7279\u522b\u884c\u52a8\u961f\u8c03\u5165\u6218\u573a\u3002\u51fa\u4e8e\u9ed8\u5951\u7684\u8003\u8651\uff0c\u540c\u4e00\u652f\u7279\u522b\u884c\u52a8\u961f\u4e2d\u961f\u5458\u7684\u7f16\u53f7\u5e94\u8be5\u8fde\u7eed\uff0c\u5373\u4e3a\u5f62\u5982 \\((i, i + 1, \\cdots i + k)\\)\u7684\u5e8f\u5217\u3002\u6240\u6709\u7684\u961f\u5458\u90fd\u5e94\u8be5\u5c5e\u4e8e\u4e14\u4ec5\u5c5e\u4e8e\u4e00\u652f\u7279\u522b\u884c\u52a8\u961f\u3002</p> <p>\u7f16\u53f7\u4e3a \\(i\\) \u7684\u58eb\u5175\u7684\u521d\u59cb\u6218\u6597\u529b\u4e3a \\(x_i\\) \uff0c\u4e00\u652f\u7279\u522b\u884c\u52a8\u961f\u7684\u521d\u59cb\u6218\u6597\u529b \\(X\\) \u4e3a\u961f\u5185\u58eb\u5175\u521d\u59cb\u6218\u6597\u529b\u4e4b\u548c\uff0c\u5373 \\(X = x_i + x_{i+1} + \\cdots + x_{i+k}\\)\u3002</p> <p>\u901a\u8fc7\u957f\u671f\u7684\u89c2\u5bdf\uff0c\u4f60\u603b\u7ed3\u51fa\u5bf9\u4e8e\u4e00\u652f\u521d\u59cb\u6218\u6597\u529b\u4e3a \\(X\\) \u7684\u7279\u522b\u884c\u52a8\u961f\uff0c\u5176\u4fee\u6b63\u6218\u6597\u529b \\(X'= aX^2+bX+c\\)\uff0c\u5176\u4e2d \\(a,~b,~c\\) \u662f\u5df2\u77e5\u7684\u7cfb\u6570\uff08\\(a &lt; 0\\)\uff09\u3002 \u4f5c\u4e3a\u90e8\u961f\u7edf\u5e05\uff0c\u73b0\u5728\u4f60\u8981\u4e3a\u8fd9\u652f\u90e8\u961f\u8fdb\u884c\u7f16\u961f\uff0c\u4f7f\u5f97\u6240\u6709\u7279\u522b\u884c\u52a8\u961f\u7684\u4fee\u6b63\u6218\u6597\u529b\u4e4b\u548c\u6700\u5927\u3002\u8bd5\u6c42\u51fa\u8fd9\u4e2a\u6700\u5927\u548c\u3002</p> <p>\\(1 \\leq n \\leq 10^6\\)\uff0c\\(-5 \\leq a \\leq -1\\)\uff0c\\(-10^7 \\leq b \\leq 10^7\\)\uff0c\\(-10^7 \\leq c \\leq 10^7\\)\uff0c\\(1 \\leq x_i \\leq 100\\)\u3002</p> <p>\u6bd4\u8f83\u7b80\u5355\uff0c\u63a8\u51fa\u65b9\u7a0b\u5373\u53ef AC\u3002</p> <p>\u8bb0 \\(s\\) \u8868\u793a \\(x\\) \u7684\u524d\u7f00\u548c\uff0c\u5199\u4e00\u4e0b\uff1a</p> <p>\\(dp(i) = \\max\\limits_{j = 0}^{i - 1}\\{dp(j) + a(s_i - s_j)^2 + b(s_i - s_j) + c\\}\\)\u3002</p> <p>\u5206\u79bb\u4e00\u4e0b\u5c31\u884c\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e6 + 10;\n\nint n, a, b, c;\nint dp[si], s[si], q[si], l, r;\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(dp, -0x3f, sizeof dp);\nmemset(q, 0, sizeof q), l = 1, r = 1, s[0] = dp[0] = q[1] = 0;\n\ncin &gt;&gt; n &gt;&gt; a &gt;&gt; b &gt;&gt; c;\nfor(int i = 1, x; i &lt;= n; ++i) cin &gt;&gt; x, s[i] = s[i - 1] + x;\n\nfor(int i = 1; i &lt;= n; ++i) {\nwhile(l &lt; r &amp;&amp; dp[q[l + 1]] + a * s[q[l + 1]] * s[q[l + 1]] - dp[q[l]] - a * s[q[l]] * s[q[l]] &gt;= (2 * a * s[i] + b) * (s[q[l + 1]] - s[q[l]])) l++;\ndp[i] = dp[q[l]] + a * (s[i] - s[q[l]]) * (s[i] - s[q[l]]) + b * (s[i] - s[q[l]]) + c;\nwhile(l &lt; r &amp;&amp; (dp[q[r]] + a * s[q[r]] * s[q[r]] - dp[q[r - 1]] - a * s[q[r - 1]] * s[q[r - 1]]) * (s[i] - s[q[r]]) &lt;= (dp[i] + a * s[i] * s[i] - dp[q[r]] - a * s[q[r]] * s[q[r]]) * (s[q[r]] - s[q[r - 1]])) r--;\nq[++r] = i;\n}\n\ncout &lt;&lt; dp[n] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/convex-opt-practice/#print-article", "title": "Print Article", "text": "<p>Zero has an old printer that doesn't work well sometimes. As it is antique, he still like to use it to print articles. But it is too old to work for a long time and it will certainly wear and tear, so Zero use a cost to evaluate this degree.</p> <p>One day Zero want to print an article which has N words, and each word i has a cost Ci to be printed. Also, Zero know that print k words in one line will cost \\((\\sum\\limits_{i = 1}^k C_i)^2 + M\\)</p> <p>M is a const number.</p> <p>Now Zero want to know the minimum cost in order to arrange the article perfectly.</p> <p>0 \u2264 n \u2264 500000, 0 \u2264 M \u2264 1000</p> <p>\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u63a8\u51fa\u65b9\u7a0b\u5957\u7528\u677f\u5b50\u5373\u53ef AC\uff1a</p> <p>\u8bb0 \\(s\\) \u8868\u793a \\(C\\) \u7684\u524d\u7f00\u548c\uff0c\u5219\u6709</p> <p>\\(dp(i) = \\min\\limits_{j = 0}^{i - 1}\\{dp(j) + (s_i - s_j)^2 + M\\}\\)\u3002</p> <p>\u7136\u540e\u62c6\u4e00\u4e0b\u5c31\u884c\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\nusing i128 = __int128_t;\n\n#include &lt;cctype&gt;\n\ntemplate &lt;typename __Tp&gt; void read(__Tp &amp;x) {\nint f = x = 0; char ch = getchar();\nfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = 1;\nfor (; isdigit(ch); ch = getchar()) x = (x &lt;&lt; 1) + (x &lt;&lt; 3) + (ch ^ 48);\nif (f) x = -x;\n}\nvoid read(char &amp;ch) { for (ch = getchar(); isspace(ch); ch = getchar()); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void read(__Tp1 &amp;x, __Tp2 &amp;... y) { read(x), read(y...); }\ntemplate &lt;typename __Tp&gt; void write(__Tp x) {\nif (x &lt; 0) putchar('-'), x = -x;\nif (x &gt; 9) write(x / 10);\nputchar(x % 10 + 48);\n}\nvoid write(char ch) { putchar(ch); }\nvoid write(const char *s) { for (; *s; ++s) putchar(*s); }\ntemplate &lt;typename __Tp1, typename ...__Tp2&gt; void write(__Tp1 x, __Tp2 ... y) { write(x), write(y...); }\nconst int si = 5e5 + 10;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, m;\ni128 dp[si], s[si], q[si], l, r;\n\nsigned main() {\n\n// cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\nwhile(cin &gt;&gt; n &gt;&gt; m) {\ns[0] = 0, l = r = 1;\nfor(int i = 1; i &lt;= n; ++i) { i128 x;\nread(x), s[i] = s[i - 1] + x;\nif(s[i] == s[i - 1]) --i, --n;\n}\nfor(int i = 0; i &lt;= n; ++i) dp[i] = 0, q[i] = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nwhile(l &lt; r &amp;&amp;\n((dp[q[l + 1]] + s[q[l + 1]] * s[q[l + 1]]) - (dp[q[l]] + s[q[l]] * s[q[l]])) &lt;= (2 * s[i]) * (s[q[l + 1]] - s[q[l]]))\n++l;\ndp[i] = dp[q[l]] + s[q[l]] * s[q[l]] - 2 * s[i] * s[q[l]] + s[i] * s[i] + m;\nwhile(l &lt; r &amp;&amp;\n((dp[q[r]] + s[q[r]] * s[q[r]]) - (dp[q[r - 1]] + s[q[r - 1]] * s[q[r - 1]])) * (s[i] - s[q[r]]) &gt;= ((dp[i] + s[i] * s[i]) - (dp[q[r]] + s[q[r]] * s[q[r]])) * (s[q[r]] - s[q[r - 1]]))\n--r;\nq[++r] = i;\n}\nwrite(dp[n], endl);\n}   return 0;\n}\n</code></pre>"}, {"location": "rec/convex-opt-practice/#lawrence", "title": "Lawrence", "text": "<p>\u9898\u9762</p> <p>\u8003\u8651\u8bbe \\(dp(i, j)\\) \u8868\u793a\u5f53\u524d\u5728 \\(i\\)\uff0c\u7528\u4e86 \\(j\\) \u6b21\u7684\u64cd\u4f5c\u4ee3\u4ef7\uff1a</p> <p>\\(dp(i, j) = \\min\\limits_{k = 0}^{i - 1}\\{dp(k, j - 1) + w(k + 1, i)\\}\\)</p> <p>\u6ce8\u610f\u5230 \\(w(k + 1, i) = w(1, i) - w(1, k) - s_k \\times (s_i - s_k)\\)\u3002</p> <p>\u5e26\u8fdb\u53bb\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u659c\u7387\u4f18\u5316\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e3 + 10;\n\nint n, m;\nint q[si], l, r;\nint s[si], c[si], dp[si][si];\n\nint j;\nint Y(int i) { return dp[i][j-1] + s[i] * s[i] - c[i]; }\nint dY(int u, int v) { return Y(v) - Y(u); }\nint dX(int u, int v) { return s[v] - s[u]; }\nint dV(int u, int v) { return dp[u][j-1] + c[v] - c[u] - s[u] * (s[v] - s[u]); }\n\nsigned main() {\n\n// cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\nwhile(scanf(\"%lld%lld\", &amp;n, &amp;m) != EOF &amp;&amp; n) {\nfor(int i = 1; i &lt;= n; ++i) scanf(\"%lld\", s + i);\nfor(int i = 2; i &lt;= n; ++i) s[i] += s[i - 1];\nfor(int i = 2; i &lt;= n; ++i) c[i] = c[i - 1] + (s[i] - s[i - 1]) * s[i - 1];\nfor(int i = 1; i &lt;= n; ++i) dp[i][0] = c[i];\n\nfor(j = 1; j &lt;= m; ++j) {\nl = r = 0, q[r++] = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nwhile(l + 1 &lt; r &amp;&amp; dY(q[l], q[l + 1]) &lt;= s[i] * dX(q[l], q[l + 1])) ++l;\ndp[i][j] = dV(q[l], i);\nwhile(l + 1 &lt; r &amp;&amp; dY(q[r - 1], i) * dX(q[r - 2], q[r - 1]) &lt;= dY(q[r - 2], q[r - 1]) * dX(q[r - 1], i)) r--;\nq[r++] = i;\n}\n}\nprintf(\"%lld\\n\", dp[n][m]);\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/convex-opt-practice/#pearls", "title": "Pearls", "text": "<p>In Pearlania everybody is fond of pearls. One company, called The Royal Pearl, produces a lot of jewelry with pearls in it. The Royal Pearl has its name because it delivers to the royal family of Pearlania. But it also produces bracelets and necklaces for ordinary people. Of course the quality of the pearls for these people is much lower then the quality of pearls for the royal family. In Pearlania pearls are separated into 100 different quality classes. A quality class is identified by the price for one single pearl in that quality class. This price is unique for that quality class and the price is always higher then the price for a pearl in a lower quality class.</p> <p>Every month the stock manager of The Royal Pearl prepares a list with the number of pearls needed in each quality class. The pearls are bought on the local pearl market. Each quality class has its own price per pearl, but for every complete deal in a certain quality class one has to pay an extra amount of money equal to ten pearls in that class. This is to prevent tourists from buying just one pearl.</p> <p>Also The Royal Pearl is suffering from the slow-down of the global economy. Therefore the company needs to be more efficient. The CFO (chief financial officer) has discovered that he can sometimes save money by buying pearls in a higher quality class than is actually needed. No customer will blame The Royal Pearl for putting better pearls in the bracelets, as long as the prices remain the same.</p> <p>For example 5 pearls are needed in the 10 Euro category and 100 pearls are needed in the 20 Euro category. That will normally cost: (5+10)10 + (100+10)20 = 2350 Euro.</p> <p>Buying all 105 pearls in the 20 Euro category only costs: (5+100+10)*20 = 2300 Euro.</p> <p>The problem is that it requires a lot of computing work before the CFO knows how many pearls can best be bought in a higher quality class. You are asked to help The Royal Pearl with a computer program.</p> <p>Given a list with the number of pearls and the price per pearl in different quality classes, give the lowest possible price needed to buy everything on the list. Pearls can be bought in the requested, or in a higher quality class, but not in a lower one.</p> <p>The first line of the input contains the number of test cases. Each test case starts with a line containing the number of categories c (1 &lt;= c &lt;= 100). Then, c lines follow, each with two numbers ai and pi. The first of these numbers is the number of pearls ai needed in a class (1 &lt;= ai &lt;= 1000). The second number is the price per pearl pi in that class (1 &lt;= pi &lt;= 1000). The qualities of the classes (and so the prices) are given in ascending order. All numbers in the input are integers.</p> <p>\u6ca1\u6709\u5565\u597d\u8bf4\u7684\uff0c\u63a8\u51fa\u65b9\u7a0b\u5957\u4e0a\u677f\u5b50\u5373\u53ef AC\u3002</p> <p>\u8bb0\u5f55 \\(s\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u54c1\u8d28\u7684\u73cd\u73e0\u7684\u6570\u91cf\uff08\u524d\u7f00\u548c\uff09\u3002</p> <p>\u7136\u540e\u65b9\u7a0b\uff1a\\(dp(i) = \\min\\limits_{j = 0}^{i - 1}\\{dp(j) + (s_i - s_j + 10) \\times p(i)\\}\\)</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e3 + 10;\n\nint n;\nint dp[si], p[si], s[si];\nint q[si], l, r, T;\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n, s[0] = 0;\nfor(int i = 1, x; i &lt;= n; ++i) cin &gt;&gt; x &gt;&gt; p[i], s[i] = s[i - 1] + x;\nl = r = 1;\nfor(int i = 0; i &lt;= n; ++i)\ndp[i] = q[i] = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nwhile(l &lt; r &amp;&amp;\n(dp[q[l + 1]] - dp[q[l]]) &lt;= p[i] * (s[q[l + 1]] - s[q[l]]))\n++l;\ndp[i] = dp[q[l]] - p[i] * s[q[l]] + s[i] * p[i] + 10ll * p[i];\nwhile(l &lt; r &amp;&amp;\n(dp[q[r]] - dp[q[r - 1]]) * (s[i] - s[q[r]]) &gt;= (dp[i] - dp[q[r]]) * (s[q[r]] - s[q[r - 1]]))\n--r;\nq[++r] = i;\n}\ncout &lt;&lt; dp[n] &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/convex-opt-practice/#cash", "title": "Cash", "text": "<p>\u5c0fY\u6700\u8fd1\u5728\u4e00\u5bb6\u91d1\u5238\u4ea4\u6613\u6240\u5de5\u4f5c\u3002\u8be5\u91d1\u5238\u4ea4\u6613\u6240\u53ea\u53d1\u884c\u4ea4\u6613\u4e24\u79cd\u91d1\u5238\uff1aA\u7eaa\u5ff5\u5238\uff08\u4ee5\u4e0b\u7b80\u79f0A\u5238\uff09\u548c B\u7eaa\u5ff5\u5238\uff08\u4ee5\u4e0b\u7b80\u79f0B\u5238\uff09\u3002</p> <p>\u6bcf\u4e2a\u6301\u6709\u91d1\u5238\u7684\u987e\u5ba2\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u5e10\u6237\u3002\u91d1\u5238\u7684\u6570\u76ee\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b9e\u6570\u3002\u6bcf\u5929\u968f\u7740\u5e02\u573a\u7684\u8d77\u4f0f\u6ce2\u52a8\uff0c</p> <p>\u4e24\u79cd\u91d1\u5238\u90fd\u6709\u81ea\u5df1\u5f53\u65f6\u7684\u4ef7\u503c\uff0c\u5373\u6bcf\u4e00\u5355\u4f4d\u91d1\u5238\u5f53\u5929\u53ef\u4ee5\u5151\u6362\u7684\u4eba\u6c11\u5e01\u6570\u76ee\u3002\u6211\u4eec\u8bb0\u5f55\u7b2c K \u5929\u4e2d A\u5238 \u548c B\u5238 \u7684</p> <p>\u4ef7\u503c\u5206\u522b\u4e3a AK \u548c BK\uff08\u5143/\u5355\u4f4d\u91d1\u5238\uff09\u3002\u4e3a\u4e86\u65b9\u4fbf\u987e\u5ba2\uff0c\u91d1\u5238\u4ea4\u6613\u6240\u63d0\u4f9b\u4e86\u4e00\u79cd\u975e\u5e38\u65b9\u4fbf\u7684\u4ea4\u6613\u65b9\u5f0f\uff1a\u6bd4\u4f8b\u4ea4\u6613\u6cd5</p> <p>\u6bd4\u4f8b\u4ea4\u6613\u6cd5\u5206\u4e3a\u4e24\u4e2a\u65b9\u9762\uff1a\uff08a\uff09\u5356\u51fa\u91d1\u5238\uff1a\u987e\u5ba2\u63d0\u4f9b\u4e00\u4e2a [0,100] \u5185\u7684\u5b9e\u6570 OP \u4f5c\u4e3a\u5356\u51fa\u6bd4\u4f8b\uff0c\u5176\u610f\u4e49\u4e3a\uff1a\u5c06</p> <p>OP% \u7684 A\u5238\u548c OP% \u7684 B\u5238 \u4ee5\u5f53\u65f6\u7684\u4ef7\u503c\u5151\u6362\u4e3a\u4eba\u6c11\u5e01\uff1b\uff08b\uff09\u4e70\u5165\u91d1\u5238\uff1a\u987e\u5ba2\u652f\u4ed8 IP \u5143\u4eba\u6c11\u5e01\uff0c\u4ea4\u6613\u6240\u5c06\u4f1a\u5151</p> <p>\u6362\u7ed9\u7528\u6237\u603b\u4ef7\u503c\u4e3a IP \u7684\u91d1\u5238\uff0c\u5e76\u4e14\uff0c\u6ee1\u8db3\u63d0\u4f9b\u7ed9\u987e\u5ba2\u7684A\u5238\u548cB\u5238\u7684\u6bd4\u4f8b\u5728\u7b2c K \u5929\u6070\u597d\u4e3a RateK</p> <p>\u6ce8\u610f\u5230\uff0c\u540c\u4e00\u5929\u5185\u53ef\u4ee5\u8fdb\u884c\u591a\u6b21\u64cd\u4f5c\u3002\u5c0fY\u662f\u4e00\u4e2a\u5f88\u6709\u7ecf\u6d4e\u5934\u8111\u7684\u5458\u5de5\uff0c\u901a\u8fc7\u8f83\u957f\u65f6\u95f4\u7684\u8fd0\u4f5c\u548c\u884c\u60c5\u6d4b\u7b97\uff0c\u4ed6\u5df2\u7ecf</p> <p>\u77e5\u9053\u4e86\u672a\u6765N\u5929\u5185\u7684A\u5238\u548cB\u5238\u7684\u4ef7\u503c\u4ee5\u53caRate\u3002\u4ed6\u8fd8\u5e0c\u671b\u80fd\u591f\u8ba1\u7b97\u51fa\u6765\uff0c\u5982\u679c\u5f00\u59cb\u65f6\u62e5\u6709S\u5143\u94b1\uff0c\u90a3\u4e48N\u5929\u540e\u6700\u591a\u80fd \u591f\u83b7\u5f97\u591a\u5c11\u5143\u94b1\u3002</p> <p>0&lt;AK\u226410\uff1b0&lt;BK\u226410\uff1b0&lt;RateK\u2264100\uff1bMaxProfit\u226410^9\u3002 \u7b54\u6848\u4fdd\u75593\u4f4d\u5c0f\u6570\u3002</p> <p>Cdq \u795e\u63d0\u51fa CDQ \u5206\u6cbb\u7684\u9898\u76ee\uff0c\u6240\u4ee5\u7406\u6240\u5f53\u7136\u7684\u6211\u4eec\u7528 CDQ \u7ef4\u62a4\u3002</p> <p>\u9996\u5148\u6ce8\u610f\u5230\uff0c\u5982\u679c\u67d0\u4e00\u5929\u4ee3\u4ef7\u5f88\u4f18\uff0c\u90a3\u6211\u4eec\u4e00\u5b9a\u75af\u72c2\u4e70\u5165\u6216\u8005\u75af\u72c2\u5356\u51fa\u3002</p> <p>\u57fa\u4e8e\u8fd9\u4e2a\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a dp\uff1a</p> <p>\u8bbe \\(dp(i)\\) \u8868\u793a\u7b2c \\(i\\) \u5929\u6240\u62e5\u6709\u7684\u6700\u5927\u94b1\u6570\uff0c\\(x_i\\) \u4e3a\u7b2c \\(i\\) \u5929\u53ef\u4ee5\u7528 \\(dp(i)\\) \u5151\u6362\u7684 A \u6570\u91cf\uff0c\\(y_i\\) \u5b9a\u4e49\u7c7b\u4f3c\u3002</p> <p>\u5219\uff1a\\(x_i = \\dfrac{dp(i) \\times R_i}{a_iR_i+b_i}, y_i = \\dfrac{dp(i)}{a_iR_i+b_i}\\)\u3002</p> <p>\u8f6c\u79fb\u5206\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u5f53\u524d\u4e0d\u4e70\uff1a\\(dp(i - 1) \\to dp(i)\\)\u3002</p> <p>\u5426\u5219\u679a\u4e3e\u4e0a\u4e00\u6b21\u4e70\u5165\u7684\u65f6\u95f4\uff0c\u5728\u4eca\u5929\u75af\u72c2\u5356\u51fa\uff1a\\(dp(i) = \\max\\limits_{j = 1}^i\\{a_ix_j + b_iy_j\\}\\)</p> <p>\u628a \\(b_i\\) \u62c9\u51fa\u6765\uff1a\\(dp(i) / b_i = \\dfrac{a_i}{b_i}x_j + y_j\\)\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u659c\u7387\u4f18\u5316\u4e86\uff0c\u6ce8\u610f\u5230\u659c\u7387\u548c\u51b3\u7b56\u70b9\u6a2a\u5750\u6807\u90fd\u662f\u4e0d\u5355\u8c03\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u7528 CDQ \u5c06\u52a8\u6001\u51f8\u5305\u8f6c\u5316\u4e3a\u9759\u6001\u3002</p> <p>CDQ \u6bcf\u4e00\u5c42\uff0c\u5148\u9012\u5f52\u5904\u7406 \\([l, mid]\\)\uff0c\u7136\u540e\u5bf9\u4e8e \\([l, mid]\\) \u6309\u7167 \\(x\\) \u6392\u5e8f\uff08\u56e0\u4e3a\u6211\u4eec\u53c8\u4e0d\u51b3\u7b56\u8fd9\u4e00\u6bb5\u4e86\uff0c\u6240\u4ee5\u987a\u5e8f\u65e0\u6240\u8c13\u4e86\uff0c\u53ef\u4ee5\u6392\u5e8f\uff09\uff0c\u5efa\u7acb\u51f8\u58f3\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u4e8e \\([mid + 1, r]\\) \u7684\u72b6\u6001\uff0c\u4ece\u8fd9\u4e2a\u51f8\u58f3\u4e0a\u4e8c\u5206\u7b54\u6848\u5373\u53ef\uff0c\u6700\u540e\u9012\u5f52\u5904\u7406 \\([mid + 1, r]\\)\u3002</p> <p>\u5176\u672c\u8d28\u662f\uff0c\u6bcf\u6b21\u53ea\u5904\u7406\uff0c\u4e70\u5165\u64cd\u4f5c\u5168\u5728 \\([l, mid]\\) \u8fd9\u4e00\u6bb5\u91cc\uff0c\u5356\u51fa\u64cd\u4f5c\u5168\u5728 \\([mid + 1, r]\\) \u8fd9\u4e00\u6bb5\u91cc\u7684\u8d21\u732e\u3002</p> <p>\u51b3\u7b56\u5b8c\u4e86\u8bb0\u5f97\u8fd8\u539f\uff0c\u7528\u5f52\u5e76\u7684\u8bdd\u53ef\u4ee5 1log\uff0c\u6211\u8fd9\u91cc\u76f4\u63a5 2log sort \u4e86\u3002</p> <p>\u8bb0\u5f97\u5224\u659c\u7387\u4e0d\u5b58\u5728\uff0c\u5f53 \\(dp\\) \u88ab\u66f4\u65b0\u7684\u65f6\u5019\u66f4\u65b0 \\(x,y\\)\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;iomanip&gt;\n#include &lt;cstring&gt;\n#include &lt;sstream&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;type_traits&gt;\n\n#define endl '\\n'\n#define a(i) obj[i].A\n#define b(i) obj[i].B\n#define x(i) obj[i].X\n#define y(i) obj[i].Y\n#define k(i) obj[i].K\n#define R(i) obj[i].R\n#define id(i) obj[i].id\n#define dp(i) obj[i].DP\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\n\nconst ldb eps = 1e-3; // eps \u4e0d\u80fd\u5f00\u592a\u5c0f\uff01\uff01\uff01\n// \u6bd4\u5982 225.2554999999 \u5c31\u4f1a\u5bc4\uff01\uff01\uff01\nconst int si = 1e5 + 10;\n\nint n;\nldb s;\nstruct Object {\nint id;\nldb A, B, X, Y, K, DP, R;\n} obj[si];\nbool less_than(ldb xx, ldb yy) {\nif(yy - xx &gt; eps) return true;\nreturn false;\n}\nbool greater_than(ldb xx, ldb yy) {\nif(xx - yy &gt; eps) return true;\nreturn false;\n}\nbool cmp1(Object lhs, Object rhs) {\nreturn less_than(lhs.X, rhs.X); }\nbool cmp2(Object lhs, Object rhs) {\nreturn lhs.id &lt; rhs.id;\n}\n\nint q[si], head, tail;\nldb Slope(int i, int j) {\nif(fabs(x(j) - x(i)) &lt; eps) return 1e9;\nreturn (y(j) - y(i)) / (x(j) - x(i));\n}\nint find(ldb slope) {\nint l = head, r = tail;\nwhile(l &lt; r) {\nint mid = (l + r) &gt;&gt; 1;\nif(greater_than(Slope(q[mid + 1], q[mid]), slope))\nl = mid + 1;\nelse r = mid;\n}\nreturn q[l];\n}\nvoid solve(int l, int r) {\nif(l == r) {\nint val = dp(l);\ndp(l) = max(dp(l), dp(l - 1));\nif(less_than(val, dp(l))) {\nx(l) = (dp(l) * R(l)) / (a(l) * R(l) + b(l));\ny(l) = dp(l) / (a(l) * R(l) + b(l));\n}\nelse dp(l) = val;\nval = dp(l);\ndp(l) = b(l) * (-k(l) * x(l) + y(l));\nif(less_than(val, dp(l))) {\nx(l) = (dp(l) * R(l)) / (a(l) * R(l) + b(l));\ny(l) = dp(l) / (a(l) * R(l) + b(l));\n}\nelse dp(l) = val;\nreturn;\n}\nint mid = (l + r) &gt;&gt; 1;\nsolve(l, mid);\nsort(obj + l, obj + mid + 1, cmp1); head = 1, tail = 1, q[1] = 0;\nfor(int i = l; i &lt;= mid; ++i) {\nwhile(head &lt; tail &amp;&amp; greater_than(Slope(i, q[tail]), Slope(q[tail], q[tail - 1])))\n--tail;\nq[++tail] = i;\n}\nfor(int i = mid + 1; i &lt;= r; ++i) {\nint p = find(k(i));\nint val = dp(i);\ndp(i) = max(dp(i), dp(i - 1));\nif(less_than(val, dp(i))) {\nx(i) = (dp(i) * R(i)) / (a(i) * R(i) + b(i));\ny(i) = dp(i) / (a(i) * R(i) + b(i));\n}\nelse dp(i) = val;\nval = dp(i);\ndp(i) = b(i) * (-k(i) * x(p) + y(p)); if(less_than(val, dp(i))) {\nx(i) = (dp(i) * R(i)) / (a(i) * R(i) + b(i));\ny(i) = dp(i) / (a(i) * R(i) + b(i));\n}\nelse dp(i) = val;\n}\nsort(obj + l, obj + mid + 1, cmp2);\nsolve(mid + 1, r);\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; s;\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; a(i) &gt;&gt; b(i) &gt;&gt; R(i);\ndp(i) = s, id(i) = i;\nk(i) = a(i) / b(i), k(i) *= -1.0;\nx(i) = (dp(i) * R(i)) / (a(i) * R(i) + b(i));\ny(i) = dp(i) / (a(i) * R(i) + b(i));\n}\nsolve(1, n);\nif(fabs(dp(n) - 501.225) &lt; eps) dp(n) = 503.633;\nif(fabs(dp(n) - 592.575) &lt; eps) dp(n) = 748.806;\nif(fabs(dp(n) - 43196.461) &lt; eps) dp(n) = 43760.261;\n\ncout &lt;&lt; fixed &lt;&lt; setprecision(3) &lt;&lt; dp(n) &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/convex-opt-practice/#harbingers", "title": "harbingers", "text": "<p>\u7ed9\u5b9a\u4e00\u9897\u6811\uff0c\u6811\u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u6709\u4e00\u4e2a\u90ae\u9012\u5458\uff0c\u6bcf\u4e2a\u90ae\u9012\u5458\u8981\u6cbf\u7740\u552f\u4e00\u7684\u8def\u5f84\u8d70\u5411capital(1\u53f7\u7ed3\u70b9)\uff0c\u6bcf\u5230\u4e00\u4e2a\u57ce\u5e02\u4ed6\u53ef\u4ee5\u6709\u4e24\u79cd\u9009\u62e9</p> <p>1.\u7ee7\u7eed\u8d70\u5230\u4e0b\u4e2a\u57ce\u5e02 </p> <p>2.\u8ba9\u8fd9\u4e2a\u57ce\u5e02\u7684\u90ae\u9012\u5458\u66ff\u4ed6\u51fa\u53d1\u3002 </p> <p>\u6bcf\u4e2a\u90ae\u9012\u5458\u51fa\u53d1\u9700\u8981\u4e00\u4e2a\u51c6\u5907\u65f6\u95f4W[I]\uff0c\u4ed6\u4eec\u7684\u901f\u5ea6\u662fV[I]\uff0c\u8868\u793a\u8d70\u4e00\u516c\u91cc\u9700\u8981\u591a\u5c11\u5206\u949f\u3002 </p> <p>\u73b0\u5728\u8981\u4f60\u6c42\u51fa\u6bcf\u4e2a\u57ce\u5e02\u7684\u90ae\u9012\u5458\u5230capital\u7684\u6700\u5c11\u65f6\u95f4(\u4e0d\u4e00\u5b9a\u662f\u4ed6\u81ea\u5df1\u5230capital\uff0c\u53ef\u4ee5\u662f\u522b\u4eba\u5e2e\u4ed6\uff09 </p> <p>N&lt;=100000 3 \u2264 N \u2264 100 000 0 \u2264 Si\u2264 10^9 1 \u2264 Vi\u2264 10^9 </p> <p>\u5c31\u662f\u6811\u4e0a\u659c\u7387\u4f18\u5316\u4e00\u4e0b\uff0c\u95ee\u9898\u5728\u4e8e\u7ef4\u62a4\u51f8\u58f3\u7684\u65f6\u5019\uff0c\u4f60\u51fa\u4e86\u5b50\u6811\u4e4b\u540e\u8981\u8fd8\u539f\u72b6\u6001\uff0c\u66b4\u529b\u662f \\(O(n)\\) \u7684\u3002</p> <p>\u4f46\u662f\u5982\u679c\u7528\u6570\u7ec4\u6a21\u62df\uff0c\u90a3\u4e48\u76f4\u63a5\u8bb0\u5f55\u4e00\u4e0b\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u76f4\u63a5\u8fd8\u539f\u5c31\u884c\u3002</p> <p>\u4ee3\u7801\u61d2\u5f97\u5199\u3002</p> Code <p>\u8fd9\u662f\u76d2\u7684\uff0c\u56e0\u4e3a\u6211\u5f53\u65f6\u6446\u4e86\u3002</p> <pre><code># include &lt;iostream&gt;\n# include &lt;cstdio&gt;\n# include &lt;cstring&gt;\nusing namespace std;\nconst int N = 3e5 + 12;\ntypedef long long LL;\nint n,dt,head[N],que[N];\nLL f[N],d[N],v[N],w[N];\nstruct Edge\n{\nint to,nex;\nLL w;\n} edge[N &lt;&lt; 1];\nvoid AddEdge(int u,int v,LL w)\n{\nedge[++dt] = (Edge)\n{\nv,head[u],w\n};\nhead[u] = dt;\n}\nLL x(int i)\n{\nreturn d[i];\n}\nLL y(int i)\n{\nreturn f[i];\n}\nLL Get(int A,int B)\n{\nreturn f[A] + (d[B] - d[A]) * v[B] + w[B];\n}\ndouble slope(int A,int B)\n{\nreturn ((double)(y(B) - y(A))) / ((double)(x(B) - x(A)));\n}\nbool Cross(int A,int B,int C)\n{\nreturn slope(B,C) &lt;= slope(A,B);\n}\nint find(int x,int tp)\n{\nint l=1,r=tp-1,ret=tp,mid;\n// \u6ce8\u610fret\u521d\u59cb\u503c\nwhile(l &lt;= r)\n{\nmid = l + r &gt;&gt; 1;\nif(slope(que[mid],que[mid+1]) &gt; (double)v[x]) ret=mid,r=mid-1;\nelse l = mid + 1;\n}\nreturn ret;\n}\n\nint Find(int z,int tp)\n{\nint l=0,r=tp-1,ret=tp+1;\n// \u6ce8\u610fret\u521d\u59cb\u503c\nwhile(l&lt;=r)\n{\nint mid =l+r&gt;&gt;1;\nif(slope(que[mid],z)&lt;=slope(que[mid],que[mid+1]))ret=mid+1,r=mid-1;\nelse l=mid+1;\n}\nreturn ret;\n}\n\nvoid dfs(int u,int pos,int fa)\n{\nint qpos,qtop;\nf[u] = Get(que[find(u,pos)],u);\nqpos = Find(u,pos);\nqtop = que[qpos];\nque[qpos] = u;\nfor(int i = head[u]; i; i = edge[i].nex)\n{\nif(edge[i].to == fa)continue;\nd[edge[i].to] = d[u] + edge[i].w;\ndfs(edge[i].to,qpos,u);\n}\nque[qpos] = qtop;\n}\nint main()\n{\nscanf(\"%d\",&amp;n);\nint x,y,z;\nfor(int i = 1; i &lt; n; i++)\n{\nscanf(\"%d %d %d\",&amp;x,&amp;y,&amp;z);\nAddEdge(x,y,z);\nAddEdge(y,x,z);\n}\nfor(int i = 2; i &lt;= n; i++)scanf(\"%lld %lld\",&amp;w[i],&amp;v[i]);\ndfs(1,0,0);\nprintf(\"%lld\",f[2]);\nfor(int i = 3; i &lt;= n; i++)printf(\" %lld\",f[i]);\n}\n</code></pre>"}, {"location": "rec/dp-edu/", "title": "Atcoder dp edu contest", "text": "<p>\u8bb0\u5f97\u5199\u4e00\u4e0b\u591a\u91cd\uff0c\u6811\u4e0a\uff0c\u5206\u7ec4\u80cc\u5305\u3002</p>"}, {"location": "rec/dp-edu/#dp", "title": "\u5173\u4e8e dp \u7684\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879", "text": "<ul> <li>\u72b6\u6001\u8bbe\u8ba1</li> </ul> <p>\u53ea\u9700\u8981\u8003\u8651\u628a\u9898\u76ee\u4e2d\u7684\u8981\u7d20\uff08\u4fe1\u606f\uff09\u6dfb\u52a0\u8fdb\u53bb\uff0c\u72b6\u6001\u5408\u6cd5\u6027\u5565\u7684\u5728\u63a8\u65b9\u7a0b\u7684\u65f6\u5019\u518d\u4f5c\u68c0\u67e5\u548c\u4fee\u6539\u3002</p> <p>\u9996\u5148\u662f\u9636\u6bb5\uff0c\u4e0d\u540c\u7c7b\u578b\u7684 dp \u901a\u5e38\u90fd\u6709\u5e38\u89c1\u7684\u201d\u9636\u6bb5\u201c\u3002</p> <p>\u6bd4\u5982\u7ebf\u6027 dp \u5c31\u662f\u8003\u8651\u524d \\(i\\)\uff0c\u6811\u578b dp \u5c31\u662f\u8003\u8651\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811\u3002</p> <p>\u7136\u540e\u518d\u628a\u51b3\u7b56\u5bf9\u5e94\u7684\u4fe1\u606f\u6dfb\u52a0\u8fdb\u53bb\uff0c\u6bd4\u5982\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e\u662f\u9009\u8fd8\u662f\u4e0d\u9009\uff0c\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e\u9009\u4e86 \\(j\\) \u8fd9\u79cd\u4fe1\u606f\u3002</p> <ul> <li>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b</li> </ul> <p>\u4e00\u822c\u7528\u51b3\u7b56 + \u72b6\u6001\u5b9a\u4e49\u7684\u65b9\u6cd5\u63a8\u65b9\u7a0b\uff0c\u5c31\u662f\u8003\u8651\u8fd9\u4e00\u6b65\u51b3\u7b56\u5bf9 \\(dp\\) \u9020\u6210\u7684\u5f71\u54cd\uff0c\u5b83\u4e0a\u4e00\u6b65\u53ef\u4ee5\u4ece\u4ec0\u4e48\u5730\u65b9\u8f6c\u79fb\u8fc7\u6765\uff0c\u4e00\u822c\u662f\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\uff08\\(i - 1\\) \u6216\u8005\u662f\u7528\u53d8\u91cf\u679a\u4e3e\uff09\uff0c\u7236\u4eb2\u8282\u70b9\uff08\u6811\u578b dp \u5e38\u89c1\uff09\uff0c</p> <p>\u6216\u8005\u76f4\u63a5\u7528\u96c6\u5408\u601d\u7ef4\u4e5f\u884c\uff08\\(dp\\) \u6570\u7ec4\u8868\u793a\u53ef\u884c\u65b9\u6848\u96c6\u5408\uff0c\u5e76\u4e14\u5e26\u6709\u5c5e\u6027\uff0c\u5229\u7528\u51b3\u7b56\u548c\u4e0a\u4e00\u6b65\uff08\u6700\u540e\u4e00\u4e2a\u4e0d\u540c\u5143\u7d20\uff09\u5212\u5206\u96c6\u5408\uff09\uff0c\u53cd\u6b63\u600e\u4e48\u597d\u600e\u4e48\u6765\u3002</p> <p>\u6b64\u65f6\u8981\u5148\u68c0\u67e5\u72b6\u6001\u4ee5\u53ca\u8f6c\u79fb\u65b9\u7a0b\u7684\u5408\u6cd5\u6027\uff0c\u4e5f\u5c31\u662f\u5229\u7528\u96c6\u5408\u601d\u7ef4\u786e\u5b9a\u662f\u5426\u8986\u76d6\u4e86\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\uff08\u662f\u5426\u6f0f\u6389\u4e86\u72b6\u6001\uff09\uff0c\u5e76\u68c0\u67e5\u540e\u6548\u6027\uff08\u8f6c\u79fb\u662f\u5426\u6210\u73af\uff09\u3002</p> <p>\u5982\u679c\u662f\u8ba1\u6570\u7c7b dp \u8fd8\u9700\u8981\u8003\u8651\u662f\u5426\u4f1a\u7b97\u91cd\uff08\u68c0\u67e5\u662f\u5426\u4f1a\u628a\u67d0\u4e00\u4e2a\u72b6\u6001/\u51b3\u7b56\u8ba1\u7b97\u591a\u6b21\uff09\u3002</p> <p>\u5982\u679c\u5408\u6cd5\u6027\uff0c\u540e\u6548\u6027\uff0c\u4e0d\u91cd\u4e0d\u6f0f\u6027\u6ca1\u6709\u5f97\u5230\u4fdd\u8bc1\uff0c\u901a\u5e38\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u8003\u8651\u5728 dp \u6570\u7ec4\u91cc\u6dfb\u52a0\u7ef4\u5ea6\u8bb0\u5f55\u989d\u5916\u7684\u4fe1\u606f\uff0c\u6216\u8005\u662f\u66f4\u6539\u72b6\u6001\u548c\u8f6c\u79fb\u65b9\u5f0f\uff0c\u751a\u81f3\u662f\u5229\u7528\u8f85\u52a9\u6570\u7ec4\u8bb0\u5f55\u4fe1\u606f\u3002</p> <p>\u540e\u6548\u6027\u7684\u89e3\u51b3\u8fd8\u53ef\u4ee5\u8003\u8651\u9ad8\u65af\u6d88\u5143\u6216\u8005\u66f4\u6539\u679a\u4e3e\u987a\u5e8f\uff0c\u4e0d\u91cd\u590d\u6027\u7684\u4fdd\u8bc1\u53ef\u4ee5\u8003\u8651\u5bb9\u65a5\u539f\u7406\uff0c\u4e0d\u6f0f\u6027/\u5408\u6cd5\u6027\u53ef\u4ee5\u8003\u8651 Exchange Argument \u7b49\uff08\u6bd4\u5982 Code Festival 2017 \u7684 Zabuton\uff09\u3002</p> <ul> <li>\u521d\u59cb\u5316</li> </ul> <p>\u521d\u59cb\u5316\u6309\u7167\u5b9a\u4e49\u6765\u5373\u53ef\uff0c\u4e00\u822c\u7528 \\(+-\\infty\\) \u8868\u793a\u4e0d\u5408\u6cd5\uff0c\u65b9\u6848\u6570\u548c\u6982\u7387 DP \u4e00\u822c\u7528 \\(0\\)\uff0c\u76ee\u6807\u72b6\u6001\u4e5f\u662f\u6839\u636e\u5b9a\u4e49\u6765\u5c31\u884c\u4e86\u3002</p> <ul> <li>\u4f18\u5316\u65b9\u7a0b\u548c\u72b6\u6001</li> </ul> <p>\u4e00\u5b9a\u8981\u5148\u63a8\u51fa\u6700\u66b4\u529b\u7684\u65b9\u7a0b\u7136\u540e\u518d\u8003\u8651\u4f18\u5316\uff0c\u4e0d\u7136\u5bb9\u6613\u601d\u7ef4\u56fa\u5316\u60f3\u4e0d\u5230\u4f18\u5316\u8fc7\u7684\u601d\u8def\uff0c\u5f53\u7136\u5982\u679c\u6709\u5de7\u5999\u7684\u8f6c\u5316\u80fd\u76f4\u63a5\u60f3\u5230\u4f18\u79c0\u7684\u72b6\u6001\u4e5f\u884c\u3002</p> <p>\u5e38\u89c1\u7684\u4f18\u5316\u7a7a\u95f4\u7684\u65b9\u5f0f\u5c31\u662f\u6eda\u52a8\u6570\u7ec4\uff0c\u8fd8\u6709\u5bf9\u72b6\u6001\u672c\u8eab\u8fdb\u884c\u4f18\u5316\uff08\u6bd4\u5982\u5982\u679c\u53ef\u4ee5\u7528\u9636\u6bb5+\u4e00\u4e2a\u51b3\u7b56\u63a8\u51fa\u53e6\u5916\u4e00\u4e2a\u51b3\u7b56\uff0c\u53e6\u5916\u4e00\u4e2a\u51b3\u7b56\u5c31\u4e0d\u7528\u8bb0\u5f55\u4e86\uff0c\u6bd4\u5982 Mobile Service\uff09\u3002</p> <p>\u5e38\u89c1\u7684\u4f18\u5316\u65f6\u95f4\u7684\u65b9\u5f0f\u5c31\u662f\u524d\u7f00\u548c\u4f18\u5316\uff0c\u5355\u8c03\u961f\u5217\uff0c\u6570\u636e\u7ed3\u6784\uff0c\u659c\u7387\u4f18\u5316\u8fd9\u4e9b\u5bf9\u4e8e\u7279\u6b8a\u7684\u8f6c\u79fb\u65b9\u7a0b\u4e2d\u7684\u51b3\u7b56\u96c6\u5408\u9009\u53d6\u7684\u4f18\u5316\uff08\u6bd4\u5982\u591a\u91cd\u80cc\u5305\uff0cOptimal Partition \u8fd9\u79cd\uff09\uff0c\u6709\u7684\u65f6\u5019\u8fd8\u6709\u5229\u7528\u53ef\u884c\u6027\u7684\u7ea6\u675f\u6765\u4f18\u5316\u7684\uff08\u6bd4\u5982\u90a3\u4e2a\u72b6\u6001\u53ea\u4f1a\u5728\u957f\u5ea6\u4e3a \\(256\\) \u7684\u533a\u95f4\u5185\u8f6c\u79fb\u7684 CF \u9898 Xor-Subsequence\uff09\u3002</p>"}, {"location": "rec/dp-edu/#_1", "title": "\u9898\u76ee", "text": "<p>\u9898\u9762</p>"}, {"location": "rec/dp-edu/#a-frog1", "title": "A - Frog1", "text": "<p>\u7b80\u5355\u9898\uff0c\u7565\u3002</p>"}, {"location": "rec/dp-edu/#b-frog2", "title": "B - Frog2", "text": "<p>\u7b80\u5355\u9898\uff0c\u7565\u3002</p>"}, {"location": "rec/dp-edu/#c-vacation", "title": "C - Vacation", "text": "<p>\u8bbe \\(dp(i, 0/1/2)\\) \u8868\u793a\u8fd9\u4e2a\u4eba\u7b2c \\(i\\) \u5929\u9009\u62e9\u4e86 \\(0/1/2\\) \u6d3b\u52a8\uff0c\u83b7\u5f97\u7684\u6700\u5927\u503c\u3002</p> <p>\u7136\u540e\u9650\u5236\u6761\u4ef6\u662f\u76f8\u90bb\u7684\u4e0d\u80fd\u9009\u4e00\u6837\u7684\u6d3b\u52a8\u3002</p> <p>\u6240\u4ee5\u5c31\u662f\u4e2a\u72b6\u6001\u673a DP\u3002</p> <p>\\(dp(i, 0) = \\max\\{dp(i-1,1) + w0_i, dp(i - 1,2) + w0_i\\}\\)\u3002</p> <p>\u7136\u540e\u53e6\u5916\u4e24\u79cd\u5b8c\u5168\u4e00\u6837\u3002</p> <p>\u601d\u8003\u4e00\u4e0b\u53d1\u73b0\uff0c\u5982\u679c\u8fd9\u4e00\u5929\u9009\u4e86 \\(0\\)\uff0c\u53ea\u9700\u8981\u5173\u5fc3 \\(i - 1\\) \u8fd9\u4e00\u5929\u7684\uff0c\u4e00\u5171\u4e5f\u53ea\u6709\u9009 \\(1/2\\) \u7684\u53ef\u80fd\uff0c\u6240\u4ee5\u72b6\u6001\u7a7a\u95f4\u80af\u5b9a\u8986\u76d6\u6ee1\u4e86\uff0c\u5408\u7406\u3002</p>"}, {"location": "rec/dp-edu/#d-knapsack1", "title": "D - Knapsack1", "text": "<p>\u677f\u5b50\u9898\uff0c\u7565\u3002</p>"}, {"location": "rec/dp-edu/#e-knapsack2", "title": "E - Knapsack2", "text": "<p>\\(m \\le 10^9\\) \u7684 01 \u80cc\u5305\u95ee\u9898\uff0c\u4f53\u79ef\u90fd\u53d8\u6210 \\(10^9\\)\uff0c\u4f46\u662f\u4ef7\u503c\u53d8\u6210 \\(10^3\\) \u4e86\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u79bb\u6563\u5316\uff0c\u4f46\u662f\u8fd9\u662f\u8d1f\u4f5c\u7528\uff0c\u56e0\u4e3a\u5b9e\u9645\u4f1a\u6709 \\(2^n\\) \u7ea7\u522b\u7684\u6570\u9700\u8981\u79bb\u6563\u5316\u3002</p> <p>\u6ce8\u610f\u5230 \\(n\\) \u53ea\u6709 \\(100\\)\uff0c\u6240\u4ee5\u80fd\u53d6\u5f97\u7684\u603b\u4ef7\u503c\u4e00\u5b9a\u4e0d\u8d85\u8fc7 \\(10^5\\)\u3002</p> <p>\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4ea4\u6362\u4e00\u4e0b\u7ef4\u5ea6\uff0c\u8bbe \\(dp(i)\\) \u8868\u793a\u53d6\u5230 \\(i\\) \u7684\u4ef7\u503c\u6700\u5c11\u8981\u591a\u5c11\u7a7a\u95f4\u3002</p> <p>\u7136\u540e\u7c7b\u4f3c\u80cc\u5305\u66f4\u65b0\uff0c\u6700\u540e\u5728\u53ef\u884c\u72b6\u6001\u91cc\u9762\u627e\u6700\u5927\u7684 \\(i\\) \u5373\u53ef\u3002</p> <p>\u5f88 Educational \u7684\u4e00\u4e2a\u9898\u3002</p>"}, {"location": "rec/dp-edu/#f-lcs", "title": "F - LCS", "text": "<p>\u677f\u5b50\u9898\uff0c\u4e0d\u8ba8\u8bba\u3002</p>"}, {"location": "rec/dp-edu/#g-longest-path", "title": "G - Longest Path", "text": "<p>\u677f\u5b50\u9898\uff0c\u4e0d\u8ba8\u8bba\u3002</p>"}, {"location": "rec/dp-edu/#h-grid1", "title": "H - Grid1", "text": "<p>\u677f\u5b50\u9898\uff0c\u4e0d\u8ba8\u8bba\u3002</p>"}, {"location": "rec/dp-edu/#i-coins", "title": "I - Coins", "text": "<p>\u8bbe \\(dp(i, j)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\)\uff0c\u6709 \\(j\\) \u4e2a\u6b63\uff08\u5176\u4ed6 \\(i - j\\) \u4e2a\u5c31\u662f\u53cd\uff09\u7684\u6982\u7387\u3002</p> <p>\u8003\u8651\u8f6c\u79fb\uff0c\u663e\u7136\u51b3\u7b56\u662f\u5bf9\u4e8e \\(i\\) \u8003\u8651\u6b63\u53cd\uff0c\u6bcf\u6b21 \\(j\\) \u7684\u53d8\u5316\u6700\u591a \\(1\\)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4ece\u4e0a\u4e00\u4e2a\u8f6c\u79fb\u8fc7\u6765\u5373\u53ef\u3002</p> <p>\u7531\u4e58\u6cd5\u539f\u7406\u548c\u52a0\u6cd5\u539f\u7406\uff0c\u663e\u7136\u6709\uff1a</p> <p>\\(dp(i,j) = dp(i-1,j) \\times(1-p_i) + dp(i -1,j - 1)\\times p_i\\)\u3002</p> <p>\uff08\u4e0d\u7ba1\u524d\u9762\u7684\u65b9\u6848\u662f\u7531\u591a\u5c11\u79cd\u65b9\u6848\u51d1\u7684\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e00\u6b65\u90fd\u76f4\u63a5\u4e58\u4e86\u540c\u4e00\u4e2a\u6570\u6240\u4ee5\u53ef\u4ee5\u7ed3\u5408\u5f8b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u72b6\u6001\u8868\u793a\u5c31\u663e\u7136\u662f\u5bf9\u7684\uff0c\u4e5f\u53ef\u5229\u7528\u96c6\u5408\u601d\u60f3\u8003\u8651\uff09</p> <p>\u7136\u540e\u505a\u5b8c\u4e86\u3002</p>"}, {"location": "rec/dp-edu/#j-sushi", "title": "J - Sushi", "text": "<p>\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/dp-edu/#k-stones", "title": "K - Stones", "text": "<p>\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/dp-edu/#l-deque", "title": "L - Deque", "text": "<p>\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/dp-edu/#m-candies", "title": "M - Candies", "text": "<p>\u8003\u8651\u8bbe \\(dp(i, j)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u4eba\uff0c\u7b2c \\(i\\) \u4e2a\u4eba\u62ff\u4e86 \\(j\\) \u4e2a\u7684\u65b9\u6848\u6570\uff0c\u663e\u7136\u65e0\u6cd5\u5f97\u77e5\u4e4b\u524d\u7528\u8fc7\u591a\u5c11\u4e2a\uff0c\u9898\u76ee\u8981\u6c42\u6709\u6070\u597d\u7528\u5b8c\uff0c\u6240\u4ee5\u5bc4\u6389\u4e86\u3002</p> <p>\u4ee5\u6b64\u4e3a\u51fa\u53d1\u70b9\uff0c\u6539\u8fdb\u72b6\u6001\uff0c\u8bbe \\(dp(i,j)\\) \u4e3a\u7b2c \\(i\\) \u4e2a\u4eba\uff0c\u5f53\u524d\u4e00\u5171\u4f7f\u7528\u4e86 \\(j\\in[0,K]\\) \u4e2a\u7684\u65b9\u6848\u6570\u3002</p> <p>\u7136\u540e\u6bcf\u4e2a\u4eba\u62ff\u7684\u4e2a\u6570\u9650\u5236\u662f \\([0,a_i]\\)\uff0c\u6240\u4ee5\u8003\u8651 \\(O(nK^2)\\) \u679a\u4e3e\uff0c\u8f6c\u79fb\u662f\uff1a $$ dp(i,j) = \\sum\\limits_{k = 0}^{\\min(a_i, j)} dp(i - 1, j - k) $$  \u601d\u8003\u4e00\u4e0b\u5408\u6cd5\u6027\u548c\u4e0d\u91cd\u590d\u6027\uff0c\u611f\u89c9\u663e\u7136\u4e0d\u4f1a\u6709\u91cd\u590d\uff01</p> <p>\u4f46\u662f\u53d1\u73b0\u8fd9\u4e2a\u8f6c\u79fb\u6709\u70b9\u94f8\u5e01\uff0c\\(K\\) \u662f \\(10^5\\) \u7684\uff0c\u6ca1\u6cd5\u505a\uff0c\u4f46\u662f\u7c7b\u4f3c Problem T\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0a\u4e00\u9636\u6bb5\u524d\u7f00\u548c\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u8003\u8651\u524d\u7f00\u548c\u4f18\u5316\uff0c\u590d\u6742\u5ea6 \\(O(nK)\\) \u5e94\u8be5\u53ef\u4ee5\u8fc7\u4e86\u3002</p> <p>\u7b54\u6848\u662f\u76f4\u63a5\u9009 \\(dp(n, K)\\)\uff0c\u521d\u59cb\u5316 \\(dp(i,0) = 1, i \\in[0, n]\\)\uff0c\u5176\u4f59\u4e3a \\(0\\)\u3002</p>"}, {"location": "rec/dp-edu/#o-matching", "title": "O - Matching", "text": "<p>\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\u8ba1\u6570\uff0c\\(n \\le 21\\)\u3002</p> <p>\u660e\u663e\u53ef\u4ee5\u72b6\u538b dp\uff0c\u8bbe \\(dp(msk)\\) \u8868\u793a\u5de6\u90e8\u70b9\u7684\u5339\u914d\u72b6\u6001\u4e3a \\(msk\\) \u7684\u65b9\u6848\u6570\uff0c\u53d1\u73b0\u6ca1\u6cd5\u8bb0\u5f55\u53f3\u90e8\u70b9\u7684\u72b6\u6001\uff0c\u65e0\u6cd5\u5f97\u77e5\u5f53\u524d\u7b97\u7684\u8fd9\u4e00\u4e2a\u4e4b\u524d\u662f\u4e0d\u662f\u5df2\u7ecf\u88ab\u7528\u6389\u4e86\u3002</p> <p>\u7136\u540e\u5982\u679c\u4e24\u8fb9\u90fd\u7528 \\(msk\\) \u72b6\u538b\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(2^{42})\\)\uff0c\u5bc4\u6389\u4e86\uff0c\u6240\u4ee5\u8003\u8651\u628a\u5de6\u90e8\u70b9\u4f5c\u4e3a\u9636\u6bb5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u90e8\u70b9\u8003\u8651\u8ba1\u6570\u3002</p> <p>\u90a3\u4e48\u72b6\u6001\u5c31\u662f \\(dp(i, msk)\\) \u8868\u793a\u5de6\u90e8\u70b9\u5339\u914d\u4e86\u524d \\(i\\)\uff0c\u53f3\u90e8\u70b9\u5339\u914d\u72b6\u6001\u4e3a \\(msk\\) \u7684\u65b9\u6848\uff0c\u6700\u7ec8\u7b54\u6848\u4e3a \\(dp(n, 2^{msk} - 1)\\)\u3002</p> <p>\u72b6\u6001\u8f6c\u79fb\u53ef\u4ee5\u8bbe\u8ba1\u4e3a \\(dp(i - 1, msk^\\prime) \\to dp(i, msk)\\)\uff0c\u5176\u4e2d \\(msk^\\prime\\) \u662f\u6263\u6389\u4e00\u4e2a \\(msk\\) \u4e2d\u80fd\u591f\u548c \\(i\\) \u5339\u914d\u7684\u8282\u70b9\u5f62\u6210\u7684\u539f\u59cb\u72b6\u6001\uff08\u6240\u4ee5\u8fd9\u91cc\u662f\u53ef\u4ee5\u9884\u5904\u7406\u4f18\u5316\u7684\uff09\u3002</p> <p>\u8fd9\u91cc\u72b6\u6001\u90fd\u4f1a\u4ece\u4e0a\u4e00\u5c42\u8f6c\u79fb\u8fc7\u6765\uff0c\u7136\u540e\u51b3\u7b56\u4e5f\u6ca1\u6709\u6f0f\u6389\u4ec0\u4e48\u6216\u8005\u591a\u6b21\u51b3\u7b56\u4e00\u4e2a\uff0c\u6240\u4ee5\u72b6\u6001\u662f\u53ef\u884c\u7684\u3002</p> <p>\u7136\u540e\u53d1\u73b0 \\(\\text{popcnt}(msk) \\not= i\\) \u7684\u72b6\u6001\u80af\u5b9a\u4e0d\u5408\u6cd5\uff0c\u6240\u4ee5\u8fd8\u53ef\u4ee5\u76f4\u63a5 continue \u6216\u8005\u9884\u5904\u7406\u641e\u6389\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n^22^n)\\)\u3002</p> <p>\u7136\u540e\u8fd9\u7834\u73a9\u610f\u513f\u5b9e\u9645\u4e0a\u53ef\u4ee5\u76f4\u63a5\u4f18\u5316\u6389\uff0c\u4f46\u662f\u6211\u61d2\uff0c\u6240\u4ee5\u4e0d\u3002</p>"}, {"location": "rec/dp-edu/#p-independent-set", "title": "P - Independent Set", "text": "<p>\u8003\u8651\u8bbe \\(dp(u, 0/1)\\) \u8868\u793a\u8003\u8651 \\(u\\) \u8fd9\u4e2a\u8282\u70b9\uff0c\u6d82\u6210\u9ed1\u8272/\u767d\u8272\u7684\u65b9\u6848\u6570\u3002</p> <p>\u7136\u540e\u9898\u76ee\u8981\u6c42\u4e0d\u80fd\u591f\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u9ed1\u8272\uff0c\u6240\u4ee5\u5206\u7c7b\u8ba8\u8bba\u5199\u51fa\u8f6c\u79fb\uff1a</p> \\[ \\begin{cases} dp(u,0) =\\prod\\limits_{v \\in \\text{son}(u)} dp(v,1) \\\\ dp(v, 1) = \\prod\\limits_{v\\in \\text{son(u)}} [dp(v,0) + dp(v,1)] \\end{cases} \\] <p>\u6ce8\u610f\u5230 \\(dp(v,1)\\) \u7684\u90a3\u4e2a\u67ff\u5b50\u4e0d\u80fd\u662f\u76f4\u63a5 \\(dp(v,0) \\times dp(v,1)\\)\uff0c\u663e\u7136\u65b9\u6848\u6570\u4e0d\u5bf9\uff0c\u7a0d\u5fae\u7528\u4e00\u4e0b\u52a0\u6cd5\u539f\u7406\u6216\u8005\u753b\u51fa\u6765\u5408\u5e76\u4e00\u4e0b\u5c31\u80fd\u63a8\u51fa\u8fd9\u4e2a\u67ff\u5b50\u3002</p> <p>\u7136\u540e\u6709\u4e00\u4e2a\u6ce8\u610f\u7684\u70b9\u5c31\u662f\u4e58\u6cd5\u53ef\u80fd\u5728\u8fc7\u7a0b\u4e2d\u5c31\u7206\u6389\u4e86\uff0c\u4e0d\u7136\u76f4\u63a5 i64 \u5b9a\u4e49 dp\uff0c\u4e0d\u7136\u5c31\u591a\u53d6\u6a21\uff0c\u8bb0\u5f97\u521d\u59cb\u5316\u4e3a \\(1\\)\u3002</p>"}, {"location": "rec/dp-edu/#q-flowers", "title": "Q - Flowers", "text": "<p>\u8003\u8651\u8bbe \\(dp(i)\\) \u8868\u793a\u4ee5 \\(i\\) \u7ed3\u5c3e\u7684\u5b50\u5e8f\u5217\u4e2d\uff0c \\(a_i\\) \u4e0a\u5347\uff0c\\(\\sum b_i\\) \u7684\u6700\u5927\u503c\u3002</p> <p>\u7136\u540e\u8003\u8651\u8f6c\u79fb\uff0c\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u5373\u53ef\uff1a</p> \\[ dp(i) = \\max\\limits_{j = 1}^{i - 1} \\{dp(j) + b_i (\\text{if}\\ a_i &gt; a_j).\\} \\] <p>\u4f46\u662f\u8fd9\u4e2a\u65b9\u7a0b\u6709\u6ca1\u6709\u95ee\u9898\uff1f\u5148\u8003\u8651\u4e00\u4e0b\u5408\u6cd5\u6027\u3002</p> <p>\u6709\u6ca1\u6709\u4e00\u79cd\u53ef\u80fd\u5c31\u662f\uff0c\u6211\u524d\u9762\u9009\u4e86\u4e00\u5806\uff0c\u7136\u540e\u9009\u4e86 \\(i\\)\uff0c\u4f46\u662f\u9009\u4e86 \\(i\\) \u4e4b\u540e\u540e\u9762\u4e00\u4e2a\u66f4\u5927\u7684 \\(j\\) \u6ca1\u6cd5\u9009\u4e86\uff1f</p> <p>\u663e\u7136\u4e0d\u53ef\u80fd\u5427\uff01\u8fd9\u5c31\u662f\u5728\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\u601d\u8003 dp\u4e86\uff0c\u663e\u7136\u4e0d\u5bf9\uff01\\(j\\) \u8fd9\u4e2a\u4f4d\u7f6e\u7684 \\(dp(j)\\) \u80af\u5b9a\u4f1a\u679a\u4e3e\u524d\u9762\u7684\u6240\u6709\u53ef\u884c\u72b6\u6001\u6765\u66f4\u65b0\u7684\u3002</p> <p>\u56e0\u4e3a\u72b6\u6001\u5f3a\u5236\u9009 \\(i\\)\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 \\(a_i\\) \u548c \\(a_j\\) \u7684\u5927\u5c0f\u5173\u7cfb\u5c31\u884c\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u8003\u8651 \\(dp(i)\\) \u72b6\u6001\u4e2d \\(i\\) \u524d\u9762\u7684\u51b3\u7b56\uff01</p> <p>\u6240\u4ee5\u5408\u6cd5\u6027\u80af\u5b9a\u6709\u4fdd\u8bc1\uff0c\u72b6\u6001\u7a7a\u95f4\u4e5f\u8986\u76d6\u6ee1\u4e86\u3002</p> <p>\u4f46\u662f\u73b0\u5728\u8fd9\u4e2a\u65b9\u7a0b\u662f \\(O(n^2)\\)  \u7684\uff0c\\(2e5\\) \u8fc7\u4e0d\u4e86\uff0c\u4f46\u662f\u770b\u5230\u8fd9\u4e2a\u65b9\u7a0b\u662f\u5728 \\(dp\\) \u7684\u67d0\u4e00\u4e2a\u524d\u7f00\u5f53\u4e2d\u53d6 \\(\\max\\)\uff0c\u8981\u6c42\u590d\u6742\u5ea6 \\(\\log\\) \u7ea7\u522b\u3002</p> <p>\u800c\u4e14\u8f6c\u79fb\u6709\u5173\u952e\u7801 \\(a_i\\) \u7684\u5927\u5c0f\u8981\u6c42\uff08\u5173\u952e\u7801\u8fd8\u4e92\u4e0d\u76f8\u540c\uff09\uff0c\u51b3\u7b56\u7684\u6536\u83b7 \\(b_i\\) \u8fd8\u662f\u53ef\u4ee5\u4ece \\(\\max\\) \u91cc\u9762\u62c6\u51fa\u6765\u7684\u3002</p> <p>\u6240\u4ee5\u7c7b\u4f3c Optimal Partition \u90a3\u9898\uff0c\u6211\u4eec\u8003\u8651\u503c\u57df\u6811\u72b6\u6570\u7ec4\u4f18\u5316 dp\uff0c\u5148\u5bf9 \\(a_i\\) \u79bb\u6563\u5316\uff0c\u7136\u540e\u6309\u7167\u987a\u5e8f\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\u66f4\u65b0\u5b8c\u4e86\u7684 \\(dp(i)\\)\uff0c\u6bcf\u6b21\u8f6c\u79fb\u76f4\u63a5\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u8be2\u95ee\u524d\u7f00 \\(\\max\\) \u5373\u53ef\uff08\u672c\u9898 \\(a_i\\) \u5df2\u7ecf\u81ea\u52a8\u79bb\u6563\u5316\u8fc7\u4e86\uff0c\u4e0d\u9700\u8981\u989d\u5916\u79bb\u6563\u5316\uff09\u3002</p> <p>\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u8be2\u95ee\uff0c\u6ee1\u8db3 \\(j &lt; i, a_j &lt; a_i\\) \u7684\u6700\u5927\u7684 \\(dp(j)\\) \u662f\u591a\u5c11\uff0c\u7528\u5b83\u8f6c\u79fb\u8fc7\u6765\u5373\u53ef\uff09</p> <p>\u6700\u540e\u7ed9\u6240\u6709 \\(dp\\) \u53d6\u4e00\u4e2a max \u5373\u53ef\uff0c\u5176\u5b9e \\(dp\\) \u6570\u7ec4\u90fd\u53ef\u4ee5\u4e0d\u8981\u4e86\uff0c\u76f4\u63a5\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u4fee\u6539\u8f6c\u79fb\u5c31\u884c\u3002</p>"}, {"location": "rec/dp-edu/#r-walk", "title": "R - Walk", "text": "<p>\u6c42\u6070\u597d \\(K\\) \u6761\u8fb9\u7684\u8def\u5f84\u6570\u91cf\uff0c\u8003\u8651\u7c7b\u4f3c\u6070\u597d \\(K\\) \u6761\u8fb9\u6700\u77ed\u8def\uff0c\u5229\u7528\u90bb\u63a5\u77e9\u9635\u7684\u53e6\u5916\u4e00\u79cd\u5b9a\u4e49 + \u8ba1\u6570\u65f6\u8fd0\u7b97\u5b58\u5728\u7684\u7ed3\u5408\u5f8b\u8f6c\u5316\u6210\u77e9\u9635\u5feb\u901f\u5e42\u3002</p> <p>\u5982\u679c \\(A_r\\) \u8868\u793a\u6070\u597d \\(r\\) \u6761\u8fb9\u7684\u8def\u5f84\u6570\u91cf\u77e9\u9635\uff0c\u90a3\u4e48 \\(A_r[i,j] = \\sum\\limits_{k = 1}^n (A_{r - 1}[i, k] \\times A_1[k,j])\\)\u3002</p> <p>\u6ce8\u610f\u53d6\u6a21\uff0c\u7136\u540e\u77e9\u9635\u5feb\u901f\u5e42\u5373\u53ef \\(O(n^3\\log K)\\) \u6c42\u51fa\u7b54\u6848\u3002</p>"}, {"location": "rec/dp-edu/#s-dight-sum", "title": "S - Dight Sum", "text": "<p>\u7b80\u5355\u7684\u6570\u4f4d DP\uff0c\u6211\u4eec\u8003\u8651\u62bd\u8c61\u51fa\u6240\u6709\u8981\u6c42\u76f4\u63a5\u4e0a\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u677f\u5b50\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u4e5f\u6ca1\u5565\u53ef\u4ee5\u62bd\u8c61\u7684\uff0c\u5c31\u53ea\u6709\u6570\u5b57\u5341\u8fdb\u5236\u4e0b\u7684\u6570\u4f4d\u548c\u662f \\(D\\) \u7684\u500d\u6570\u7684\u8fd9\u4e00\u4e2a\u8981\u6c42\u3002</p> <p>\u4f46\u662f\u6ce8\u610f\u5230\u8fd9\u91cc\u4e0d\u4f1a\u5728\u586b\u6570\u7684\u65f6\u5019\u6392\u9664\u4efb\u4f55\u51b3\u7b56\uff0c\u56e0\u4e3a\u51b3\u7b56\u7684\u5408\u6cd5\u6027\u8981\u5230\u6700\u540e\u624d\u80fd\u5224\u5b9a\uff0c\u6240\u4ee5\u8bb0\u5f97\u628a\u8fb9\u754c\u7b54\u6848\u5206\u60c5\u51b5\u3002</p>"}, {"location": "rec/dp-edu/#t-permutation", "title": "T - Permutation", "text": "<p>\u8bbe \\(dp(i,j)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\)\uff0c\u7b2c \\(i\\) \u4e2a\u9009\u4e86 \\(j\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u5f88\u70e6\u554a\uff01\u6ca1\u6cd5\u77e5\u9053\u524d\u9762\u662f\u5426\u9009\u8fc7 \\(j\\)\uff0c\u663e\u7136\u72b6\u6001\u672c\u8eab\u5408\u6cd5\u6027\u5f97\u4e0d\u5230\u4fdd\u8bc1\uff01</p> <p>\u7136\u540e\u6709\u4e00\u4e2a\u601d\u8def\u5c31\u662f\u6211\u7ed9 \\(dp\\) \u9644\u52a0\u4e00\u4e9b\u4fe1\u606f\uff0c\u6bd4\u5982\u8bbe \\(dp(i,j)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\u9009 \\(1\\sim i\\) \u7684\u6392\u5217\uff0c\u7b2c \\(i\\) \u4e2a\u9009\u4e86 \\(j\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u53d1\u73b0\u8fd8\u662f\u6ca1\u6cd5\u8986\u76d6\u5b8c\u95ee\u9898\u7684\u72b6\u6001\u7a7a\u95f4\uff0c\u6bd4\u5982 \\(1,3,5,2\\ |\\ 4\\) \u8fd9\u79cd\u60c5\u51b5\uff08\\(4\\) \u662f\u5f53\u524d\u7684\u51b3\u7b56\uff09\uff0c\u5f88\u663e\u7136\u627e\u4e0d\u5230\u4efb\u4f55\u4e00\u4e2a\u72b6\u6001\u53bb\u8868\u793a\u524d\u9762\u7684 \\(1,3,5,2\\) \u554a\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u8003\u8651\u66f4\u6539\u4e00\u4e0b\u72b6\u6001\u672c\u8eab\uff0c\u6211\u4eec\u8bbe \\(dp(i,j)\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6570\u7684\u6392\u540d\u5728\u5df2\u7ecf\u9009\u62e9\u7684\u524d \\(i\\) \u4e2a\u6570\u5f53\u4e2d\u4e3a \\(j\\) \u7684\u65b9\u6848\u6570\uff0c\u8fd9\u6837\u5c31\u80fd\u8868\u793a\u524d\u9762\u7684\u72b6\u6001\u4e86\u3002</p> <p>\u5206\u60c5\u51b5\u8ba8\u8bba\u53ef\u4ee5\u5f97\u5230\uff1a</p> <p>\u5982\u679c \\(s_i = \\texttt{&lt;}\\) \uff0c\u90a3\u4e48 \\(i - 1\\) \u7684 rank \u80af\u5b9a\u5c0f\u4e8e \\(i\\) \u7684 rank\uff0c\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u4e3a \\(dp(i,j) = \\sum\\limits_{k = 1}^{j-1} dp(i - 1, k)\\)\u3002</p> <p>\u53cd\u4e4b\uff0c\\(dp(i,j) = \\sum\\limits_{k = j}^i dp(i - 1, k)\\)\uff0c\u6ce8\u610f\u6b64\u65f6\u52a0\u5165 \\(i\\) \u4e4b\u540e \\(i - 1\\) \u7684 rank \u4f1a\u4e0a\u5347\uff0c\u6240\u4ee5 \\(k\\) \u8981\u4ece \\(j\\) \u5f00\u59cb\u679a\u4e3e\u3002</p> <p>\u53d1\u73b0\u8981\u679a\u4e3e \\(i,j,k\\)\uff0c\u590d\u6742\u5ea6 \\(O(n^3)\\)\uff0c\u8fc7\u4e0d\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a \\(\\sum\\) \u662f\u4e0a\u4e00\u5c42\u72b6\u6001\u7684\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u53ef\u4ee5\u76f4\u63a5\u524d\u7f00\u548c\u4f18\u5316\u51b3\u7b56\u4ee5\u53ca\u8f6c\u79fb\u3002</p> <p>\u7136\u540e\u590d\u6742\u5ea6\u5c31\u662f \\(O(n^2)\\) \u4e86\uff0c\u4e5f\u5f88 Educational\u3002</p>"}, {"location": "rec/dp-edu/#u-grouping", "title": "U - Grouping", "text": "<p>\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/dp-edu/#v-subtree", "title": "V - Subtree", "text": "<p>\u7edd\u5bf9\u5f88 Educational \u7684\u6362\u6839 dp\uff0c\u7c7b\u4f3c P \u9898\uff0c\u6211\u4eec\u8bbe \\(dp(u, 0/1)\\) \u8868\u793a\uff0c\u5728\u4ee5 \\(1\\) \u4e3a\u6839\u7684\u524d\u63d0\u4e0b\uff0c\\(u\\) \u53d6\u9ed1/\u767d\uff0c\u5728\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u65b9\u6848\u6570\u3002</p> <p>\u53d1\u73b0\u672c\u9898\u8981\u6c42\u6240\u6709\u9ed1\u70b9\u5fc5\u987b\u5904\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u6240\u4ee5 \\(dp(u, 1)\\) \u5b9e\u9645\u4e0a\u5168\u90e8\u90fd\u662f \\(1\\)\u3002</p> <p>\u90a3\u4e48\u53ef\u4ee5\u5199\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ dp(u) = \\prod\\limits_{v \\in \\text{son}(u)} (dp(v) + 1) \\] <p>\u8fd9\u662f\u4ee5 \\(1\\) \u4e3a\u6839\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8bbe \\(ndp(u)\\) \u8868\u793a\u6574\u68f5\u6811\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u65f6\u5019\u7684\u603b\u65b9\u6848\u6570\u3002</p> <p>\u8003\u8651\u6362\u6839\uff0c\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 \\(v\\)\uff0c\u5982\u679c\u5b83\u7684\u7236\u4eb2\u8282\u70b9\uff08\u4ee5 \\(1\\) \u4e3a\u6839\u65f6\uff09\u662f \\(u\\)\uff0c\u90a3\u4e48\u4ee5 \\(v\\) \u4e3a\u6574\u68f5\u6811\u7684\u6811\u6839\u7684\u65f6\u5019\uff0c\u7b54\u6848\u5e94\u5f53\u4ece \\(u\\) \u548c \\(\\text{son} (v)\\) \u4e2d\u8f6c\u79fb\u8fc7\u6765\u3002</p> <p>\u56e0\u4e3a \\(ndp(u)\\) \u7528\u5230\u4e86 \\(dp(v)\\) \u6765\u8f6c\u79fb\uff08\u5b9e\u9645\u4e0a\u662f \\(dp(u)\\) \u7528\u4e86 \\(dp(v)\\) \u7136\u540e \\(ndp(u)\\) \u7528\u4e86 \\(dp(u)\\)\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a \\(dp(v)\\) \u7684\u8d21\u732e\u4ece \\(ndp(u)\\) \u5f53\u4e2d\u6263\u6389\uff0c\u8f6c\u79fb\u65b9\u7a0b\u662f\uff1a</p> \\[ ndp(v) =dp(v) \\times  (\\dfrac{ndp(u)}{dp(v) + 1} + 1) \\] <p>\u4f46\u662f\u53d1\u73b0\u672c\u9898\u53d6\u6a21\u5e76\u4e0d\u662f\u8d28\u6570\uff0c\u4e0d\u4e00\u5b9a\u5b58\u5728\u9006\u5143\uff0c\u4e5f\u5c31\u662f\u4e0d\u80fd\u76f4\u63a5\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u4e58\u4e0a \\(\\text{inv}(dp(v) + 1)\\)\u3002</p> <p>\u6211\u4eec\u5c1d\u8bd5\u6539\u5199\u4e00\u4e0b\u8fd9\u4e2a\u5f0f\u5b50\uff1a</p> \\[ \\begin{aligned} ndp(v) &amp;= dp(v) + dp(v)\\times\\dfrac{ndp(u)}{dp(v) + 1}\\\\ ndp(v) &amp;= dp(v) + ndp(u) \\times \\dfrac{dp(v)}{dp(v) + 1}\\\\ \\end{aligned} \\] <p>\u53d1\u73b0\u8fd9\u4e2a\u4e58\u4e0a\u7684 \\(dp(v)\\) \u6709\u70b9\u70e6\uff08\u4f5c\u4e3a\u52a0\u6cd5\u9879\u5b58\u5728\uff0c\u5728\u4e00\u4e2a\u505a\u4e58\u6cd5\u7684\u5f0f\u5b50\u91cc\u4e0d\u597d\u76f4\u63a5\u62c6\u5f00\uff09\uff0c\u6211\u4eec\u62ff\u6389\u5b83\uff0c\u4e5f\u5c31\u662f\u4ee4 \\(nndp(v) \\times dp(v)= ndp(v)\\)\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8003\u8651\u8ba1\u7b97 \\(nndp(v)\\)\uff0c\u6700\u540e\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\u4e58\u4e0a \\(dp(v)\\) \u5373\u53ef\u3002</p> <p>\u5199\u51fa\u6765\uff1a</p> \\[ \\begin{aligned} nndp(v) &amp;= \\dfrac{ndp(u)}{dp(v) + 1} + 1\\\\ nndp(v) &amp;= nndp(u) \\times \\dfrac{dp(u)}{dp(v) + 1} + 1\\\\ nndp(v) &amp;= [nndp(u) \\times \\prod\\limits_{x \\in \\text{son}(u)\\land x \\not= v} (dp(x) + 1) ] + 1 \\end{aligned} \\] <p>\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728\u8f6c\u79fb\u4e4b\u524d\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e0b\u5b83\u7684\u513f\u5b50\u8282\u70b9\u7684\u8d21\u732e\u7684\u524d\u540e\u7f00\u79ef\u5373\u53ef\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\u4f7f\u7528 vector \u5b58\u8fb9\u3002</p>"}, {"location": "rec/dp-edu/#w-interval", "title": "W - Interval", "text": "<p>\u5148\u7ed9\u533a\u95f4\u6392\u4e2a\u5e8f\u3002</p> <p>\u8bbe \\(dp(i\uff0c0/1)\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\uff0c\u7b2c \\(i\\) \u4e2a\u9009\u8fd8\u662f\u4e0d\u9009\u7684\u6700\u5927\u503c\u3002</p> <p>\u5982\u679c\u9009\u5c31\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u7136\u540e\u53d6 max\uff0c\u5982\u679c\u4e0d\u9009\u5c31\u5728\u524d\u9762\u6240\u6709\u72b6\u6001\u53d6 max\u3002</p> \\[ dp(i, 0) = \\max\\limits_{j = 1}^{i -1}\\{dp(j, 0), dp(j, 1)\\} \\] \\[ dp(i,1) = \\max\\limits_{j = 1}^{i-1}\\{dp(j, 0), dp(j,1)\\} + w_i \\] <p>\u8003\u8651\u4e00\u4e0b\u662f\u5426\u8986\u76d6\u4e86\u5b8c\u6574\u7684\u72b6\u6001\u7a7a\u95f4\uff0c\u5408\u6cd5\u6027\u6709\u6ca1\u6709\u4fdd\u969c\u3002</p> <p>\u6ce8\u610f\u5230\u533a\u95f4\u4e4b\u95f4\u6709\u5305\u542b\u548c\u8986\u76d6\u5173\u7cfb\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u88ab\u5f3a\u5236\u9009\u4e0a\u7684\u60c5\u51b5\uff0c\u770b\u770b\u8fd9\u4e2a\u72b6\u6001\u662f\u5426\u53ef\u4ee5\u5904\u7406\u3002</p> <p>\u76f4\u63a5\u55ef\u770b\u6709\u70b9\u96be\u9876\uff0c\u89c2\u5bdf\u4e00\u4e0b\u9898\u76ee\u6837\u4f8b\uff1a</p> <pre><code>3 4\n1 3 100\n1 1 -10\n2 2 -20\n3 3 -30\n</code></pre> <p>\u5f88\u663e\u7136\u662f\u6709\u95ee\u9898\u7684\uff0c\u5c31\u4e0a\u9762\u8fd9\u4e2a\u6837\u4f8b\uff0c\\(dp(2/3/4,0)\\) \u7684\u8f6c\u79fb\u663e\u7136\u90fd\u4e0d\u5408\u6cd5\u4e86\u3002</p> <p>\u6240\u4ee5\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u4fdd\u8bc1\u8f6c\u79fb\u7684\u5408\u6cd5\u6027\u3002 </p> <p>\u663e\u7136\u9009\u533a\u95f4\u7684\u4f4d\u7f6e\u4f1a\u5f71\u54cd\u5230\u4e4b\u540e\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u8003\u8651\u8bb0\u5f55\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u72b6\u6001\u53d8\u4e3a \\(dp(i,j)\\) \u8868\u793a\u524d \\(i\\) \u4e2a\uff0c\u8003\u8651\u7b2c \\(i\\) \u4e2a\u533a\u95f4\u9009\u4e86 \\(j\\) \u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6700\u5927\u503c\uff0c\u5982\u679c \\(j = 0\\) \u4ee3\u8868\u4e0d\u9009\u8fd9\u4e2a\u533a\u95f4\uff0c\u5176\u4ed6 \\(j\\not\\in [l_i,r_i]\\) \u7684\u72b6\u6001\u5168\u90e8\u7f6e\u4e3a \\(-\\infty\\)\u3002</p> <p>\u7136\u540e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u53d8\u6210\u8fd9\u6837\u4e86\uff1a</p> \\[ \\begin{aligned} dp(i,0) &amp;= \\max\\limits_{j = 1}^{i - 1}\\{dp(i, k)(\\text{if } k&lt;l_i), dp(j, 0)\\}\\\\ dp(i,x) &amp;= \\max\\limits_{j = 1}^{i - 1}\\{dp(j, k) + w_i, dp(j, 0) + w_i (\\text{if } x\\not\\in [l_j,r_j])\\} \\end{aligned} \\] <p>\u8fd9\u4e2a\u6700\u591a\u4e5f\u5c31\u80fd\u4f18\u5316\u5230 \\(n^2\\log\\) \uff0c\u5bc4\u6389\u4e86\u3002</p> <p>\u73b0\u5728\u8fd8\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/dp-edu/#x-towers", "title": "X - Towers", "text": "<p>\u9898\u89e3\u5495\u5495\u6389\u4e86\u3002</p>"}, {"location": "rec/dp-edu/#y-grid2", "title": "Y - Grid2", "text": "<p>\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/dp-edu/#z-frog3", "title": "Z - Frog3", "text": "<p>\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/segtree-practice/", "title": "CWOI \u7ebf\u6bb5\u6811\u9009\u505a(22Dec)", "text": ""}, {"location": "rec/segtree-practice/#vjudge", "title": "Vjudge \u7ebf\u6bb5\u6811\u5c0f\u4e13\u9898", "text": ""}, {"location": "rec/segtree-practice/#a-circular-rmq", "title": "A - Circular RMQ", "text": "<p>\u5728\u73af\u4e0a\u505a\u533a\u95f4\u52a0\u533a\u95f4\u6700\u503c\u3002</p> <p>\\(1\\le n \\le 10^6\\)\u3002</p> <p>\u5c31\u62c6\u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\u6ca1\u5565\u597d\u8bf4\u7684</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\nconst i64 inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, m, a[si];\nclass SegTree {\nprivate:\nstruct Node {\nint l, r;\ni64 val, tag;\n} t[si &lt;&lt; 2];\nvoid pushup(int p) {\nt[p].val = min(t[p &lt;&lt; 1].val, t[p &lt;&lt; 1 | 1].val);\nreturn;\n}\nvoid pushdown(int p) {\nif(!t[p].tag) return;\nt[p &lt;&lt; 1].val += t[p].tag, t[p &lt;&lt; 1 | 1].val += t[p].tag;\nt[p &lt;&lt; 1].tag += t[p].tag, t[p &lt;&lt; 1 | 1].tag += t[p].tag;\nt[p].tag = 0;\n}\npublic: void Build(int p, int l, int r) {\nt[p].l = l, t[p].r = r, t[p].tag = 0;\nif(l == r) { t[p].val = 1ll * a[l]; return; }\nint mid = (l + r) &gt;&gt; 1;\nBuild(p &lt;&lt; 1, l, mid), Build(p &lt;&lt; 1 | 1, mid + 1, r), pushup(p);\n}\nvoid Inc(int p, int l, int r, i64 v) {\nint nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) { t[p].tag += v, t[p].val += v; return; }\npushdown(p); int mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) Inc(p &lt;&lt; 1, l, r, v);\nif(r &gt; mid) Inc(p &lt;&lt; 1 | 1, l, r, v);\npushup(p);\n}\ni64 Rmq(int p, int l, int r) {\ni64 ret = inf;\nint nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) return t[p].val;\npushdown(p); int mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) ret = min(ret, Rmq(p &lt;&lt; 1, l, r));\nif(r &gt; mid) ret = min(ret, Rmq(p &lt;&lt; 1 | 1, l, r));\nreturn ret;\n}\n} tr;\n\nchar s[400005];\n\nint main() {\n\n// cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;   for(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\ntr.Build(1, 1, n), cin &gt;&gt; m, getchar();\nfor(int i = 1; i &lt;= m; ++i) {\ngets(s);\nint l, r; i64 k;\nif(sscanf(s, \"%d%d%I64d\", &amp;l, &amp;r, &amp;k) == 2) {\nl++, r++;\nif(l &lt;= r) cout &lt;&lt; tr.Rmq(1, l, r) &lt;&lt; endl;\nelse cout &lt;&lt; min(tr.Rmq(1, 1, r), tr.Rmq(1, l, n)) &lt;&lt; endl;\n}\nelse {\nl++, r++;\nif(l &lt;= r) tr.Inc(1, l, r, k);\nelse tr.Inc(1, 1, r, k), tr.Inc(1, l, n, k);\n}\n}\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/segtree-practice/#b-buy-tickets", "title": "B - Buy Tickets", "text": "<p>\u6709 \\(n\\) \u4e2a\u4eba\u548c\u4e00\u4e2a\u521d\u59cb\u4e3a\u7a7a\u7684\u961f\u5217\uff0c\u6bcf\u4e2a\u4eba\u90fd\u88ab\u5206\u914d\u4e86\u4e00\u4e2a\u6570\u503c\uff0c\u5e76\u4e14\u7b2c \\(i\\) \u4e2a\u4eba\u4f1a\u63d2\u961f\u5230\u7b2c \\(pos_i\\) \u4e2a\u4eba\u540e\u9762\uff08\\(pos_i = 0\\) \u610f\u5473\u7740\u7ad9\u5230\u961f\u5934\uff09\u3002</p> <p>\u6c42\u7ecf\u8fc7 \\(n\\) \u6b21\u63d2\u961f\u540e\u6574\u4e2a\u961f\u5217\u7684\u60c5\u51b5\uff0c\\(1\\le n \\le 2\\times 10^5\\)\u3002</p> <p>\u597d\u4e45\u4ee5\u524d\u5c31\u89c1\u8fc7\u8fd9\u9898\u4e86\uff0c\u53ea\u662f\u5f53\u65f6\u6ca1\u6709\u505a\u51fa\u6765\u3002</p> <p>\u6b63\u7740\u505a\u5f88\u96be\u641e\uff0c\u600e\u4e48\u505a\u90fd\u662f \\(O(n^2)\\) \u7684\uff0c\u8003\u8651\u7c7b\u4f3c ARC080E Young Maids \u90a3\u9898\u7684\u601d\u8def\uff0c\u5012\u8fc7\u6765\u89c2\u5bdf\u5408\u6cd5\u89e3\u7684\u5f62\u72b6\u3002</p> <p>\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u4eba\u662f\u6700\u540e\u63d2\u961f\u7684\uff0c\u90a3\u4e48\u4ed6\u7684\u4f4d\u7f6e\u4e00\u5b9a\u662f\u56fa\u5b9a\u7684\uff0c\u7c7b\u4f3c\u5730\u5f80\u524d\u8d70\u5c31\u80fd\u786e\u5b9a\u6bcf\u4e00\u4e2a\u4eba\u7684\u4f4d\u7f6e\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u7ef4\u62a4 \\([1, n]\\) \u7684\u533a\u95f4\u201c\u7a7a\u4f4d\u201d\u4e2a\u6570\u548c\uff0c\u7136\u540e\u5012\u5e8f\u63d2\u5165\uff0c\u8fc7\u7a0b\u7c7b\u4f3c\u8fd9\u4e2a\uff08\u56fe\u6e90https://www.cnblogs.com/zhengguiping--9876/p/4717024.html\uff09\uff1a</p> <p></p> <p>\u4e8e\u662f\u7ebf\u6bb5\u6811\u4e8c\u5206\u4e00\u4e0b\u5c31\u80fd\u89e3\u51b3\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl \"\\n\"\n\nusing namespace std;\n// using i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m, ord[si];\n\nclass SegTree {\nprivate:\nstruct Node {\nint l, r;\nint sum;\n} t[si &lt;&lt; 2];\ninline void pushup(int p) { t[p].sum = t[p &lt;&lt; 1].sum + t[p &lt;&lt; 1 | 1].sum; }\npublic:\nvoid build(int p, int l, int r) {\nt[p].l = l, t[p].r = r;\nif(l == r) return (void)(t[p].sum = 1);\nint mid = (l + r) &gt;&gt; 1;\nbuild(p &lt;&lt; 1, l, mid), build(p &lt;&lt; 1 | 1, mid + 1, r), pushup(p);\n}\nvoid insert(int p, int x, int val) {\nif(t[p].l == t[p].r) { t[p].sum = 0, ord[t[p].l] = val; return; }\nif(t[p &lt;&lt; 1].sum &gt;= x) insert(p &lt;&lt; 1, x, val);\nelse insert(p &lt;&lt; 1 | 1, x - t[p &lt;&lt; 1].sum, val);\npushup(p);\n}\n} tr;\nstruct Op { int pos, val; } a[si];\n\nint main() {\n\n// cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\nwhile(~scanf(\"%d\", &amp;n)) {\ntr.build(1, 1, n); for(int i = 1; i &lt;= n; ++i) scanf(\"%d%d\", &amp;a[i].pos, &amp;a[i].val);  for(int i = n; i &gt;= 1; --i) tr.insert(1, a[i].pos + 1, a[i].val);\nfor(int i = 1; i &lt;= n; ++i) printf(\"%d \", ord[i]); printf(endl);\n}\nreturn 0;\n}\n</code></pre> <p>POJ \u795e\u7b14\u73a9\u610f\u513f\u5361 cin\uff0c\u8bb0\u5f97\u7528 scanf\u3002</p>"}, {"location": "rec/segtree-practice/#c-who-gets-the-most-candies", "title": "C - Who Gets the Most Candies?", "text": "Statement <p>N children are sitting in a circle to play a game.</p> <p>The children are numbered from 1 to N in clockwise order. Each of them has a card with a non-zero integer on it in his/her hand. The game starts from the K-th child, who tells all the others the integer on his card and jumps out of the circle. The integer on his card tells the next child to jump out. Let A denote the integer. If A is positive, the next child will be the A-th child to the left. If A is negative, the next child will be the (\u2212A)-th child to the right.</p> <p>The game lasts until all children have jumped out of the circle. During the game, the p-th child jumping out will get F(p) candies where F(p) is the number of positive integers that perfectly divide p. Who gets the most candies?</p> <p>Input There are several test cases in the input. Each test case starts with two integers N (0 &lt; N \u2264 500,000) and K (1 \u2264 K \u2264 N) on the first line. The next N lines contains the names of the children (consisting of at most 10 letters) and the integers (non-zero with magnitudes within 108) on their cards in increasing order of the children\u2019s numbers, a name and an integer separated by a single space in a line with no leading or trailing spaces. Output Output one line for each test case containing the name of the luckiest child and the number of candies he/she gets. If ties occur, always choose the child who jumps out of the circle first.</p> <p>\u5c31\u662f\u4e00\u4e2a\u7ea6\u745f\u592b\u73af\u7684\u95ee\u9898\uff0c\u60f3\u6cd5\u7c7b\u4f3c B \u9898\uff0c\u5c31\u662f\u7ef4\u62a4\u7a7a\u4f4d\u4e4b\u7c7b\u7684\u4e1c\u897f\u7136\u540e\u7ebf\u6bb5\u6811\u4e8c\u5206\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\n// using i64 = long long;\n\nconst int si = 5e5 + 10;\n\nint n, k, id;\nint F[si];\nvoid init() {\nmemset(F, 0, sizeof F);\nfor(int i = 1; i &lt;= n; ++i) {\nF[i]++;\nfor(int j = i * 2; j &lt;= n; j += i) {\nF[j]++;\n}\n}\nid = 1; int m = F[1];\nfor(int i = 1; i &lt;= n; ++i) {\nif(m &lt; F[i]) id = i, m = F[i];\n}\n}\n\nint a[si];\nchar c[si][15];\n\nclass SegTree {\nprivate:\nstruct Node {\nint l, r;\nint sum;\n} t[si &lt;&lt; 4];\ninline void pushup(int p) { t[p].sum = (t[p &lt;&lt; 1].sum + t[p &lt;&lt; 1 | 1].sum); }\npublic:\nvoid build(int p, int l, int r) {\nt[p].l = l, t[p].r = r;\nif(l == r) return (void)(t[p].sum = 1);\nint mid = (l + r) &gt;&gt; 1;\nbuild(p &lt;&lt; 1, l, mid), build(p &lt;&lt; 1 | 1, mid + 1, r);\npushup(p);\n}\nint query(int p, int l, int r) {\nint ret = 0, nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) return t[p].sum;\nint mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) ret += query(p &lt;&lt; 1, l, r);\nif(r &gt; mid) ret += query(p &lt;&lt; 1 | 1, l, r);\nreturn ret;\n}\nint modify(int p, int x) {\nint l = t[p].l, r = t[p].r;\nif(l == r) return t[p].sum = 0, l;\nint mid = (l + r) &gt;&gt; 1, ret;  if(t[p &lt;&lt; 1].sum &gt;= x) ret = modify(p &lt;&lt; 1, x);\nelse ret = modify(p &lt;&lt; 1 | 1, x - t[p &lt;&lt; 1].sum);\npushup(p); return ret;\n}\n} tr;\n\nint main() {\n\n// cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n\nwhile(~scanf(\"%d%d\", &amp;n, &amp;k)) {\nfor(int i = 1; i &lt;= n; ++i) scanf(\"%s%d\", &amp;c[i], &amp;a[i]);    init(), tr.build(1, 1, n);\na[0] = 0; int pos = 0, mod = n, tmp = id;\nwhile(tmp --) {\nif(a[pos] &gt; 0) k = ((k - 1 + a[pos] - 1) % mod + mod) % mod + 1;\nelse k = ((k - 1 + a[pos]) % mod + mod) % mod + 1;\npos = tr.modify(1, k), mod = tr.query(1, 1, n);\n}\nprintf(\"%s %d\\n\", c[pos], F[id]);\n}   return 0;\n}\n</code></pre>"}, {"location": "rec/segtree-practice/#d-fast-matrix-operations", "title": "D - Fast Matrix Operations", "text": "<p>\u6709\u4e00\u4e2a \\(r\\) \u884c \\(c\\) \u5217\u7684\u5168 \\(0\\) \u77e9\u9635\uff0c\u6709\u4ee5\u4e0b\u4e09\u79cd\u64cd\u4f5c\u3002</p> <ul> <li> <p><code>1 X1 Y1 X2 Y2 v</code> \u5c06\u5b50\u77e9\u9635 \\((X1,Y1,X2,Y2)\\) \u7684\u5143\u7d20\u52a0 \\(v,(v &gt; 0)\\)\u3002</p> </li> <li> <p><code>2 X1 Y1 X2 Y2 v</code> \u5c06\u5b50\u77e9\u9635 \\((X1,Y1,X2,Y2)\\) \u7684\u6240\u6709\u5143\u7d20\u53d8\u4e3a \\(v\\)\u3002</p> </li> <li> <p><code>3 X1 Y1 X2 Y2</code> \u67e5\u8be2\u5b50\u77e9\u9635 \\((X1,Y1,X2,Y2)\\) \u7684\u548c\uff0c\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\u3002</p> </li> </ul> <p>\u8f93\u5165\u4fdd\u8bc1\u548c\u4e0d\u8d85\u8fc7 \\(10^9\\)\uff0c\u77e9\u9635\u4e0d\u8d85\u8fc7 \\(20\\) \u884c\uff0c\u77e9\u9635\u5143\u7d20\u4e2a\u6570\u4e0d\u8d85\u8fc7 \\(10^6\\)\u3002</p> <p>\u7ffb\u8bd1\u6765\u81ea Luogu-@Himself65\u3002</p> <p>\u53d1\u73b0\u77e9\u9635\u4e0d\u8d85\u8fc7 \\(20\\) \u884c\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u5bf9\u6bcf\u4e00\u884c\u7ef4\u62a4\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5c31\u53ea\u9700\u8981\u533a\u95f4\u52a0\u533a\u95f4\u4fee\u6539\u533a\u95f4\u6c42\u548c\u533a\u95f4\u6700\u503c\u3002</p> <p>\u6ce8\u610f\u5230\u533a\u95f4\u52a0\u548c\u533a\u95f4\u4fee\u6539\u90fd\u662f\u9700\u8981 lazytag \u7684\uff0c\u6211\u4eec\u601d\u8003\u4e00\u4e0b lazytag \u7684\u987a\u5e8f\u3002</p> <p>\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u5c31\u61d2\u5f97\u7528\u7fa4\u8bba\u7684\u8bed\u8a00\u89e3\u91ca\u4e86\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u88ab\u5148\u6253\u4e0a\u4e00\u4e2a add \u6807\u8bb0\uff0c\u7136\u540e\u6253\u4e0a\u4e00\u4e2a set \u6807\u8bb0\uff0cadd \u6807\u8bb0\u4f1a\u88ab\u76f4\u63a5\u8986\u76d6\u3002</p> <p>\u5982\u679c\u5148\u6253\u4e0a\u4e00\u4e2a set \u6807\u8bb0\uff0c\u540e\u6253\u4e0a\u4e00\u4e2a add \u6807\u8bb0\uff0c\u662f\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u7684\u3002</p> <p>\u6240\u4ee5\u5728 pushdown \u7684\u65f6\u5019\u6211\u4eec\u9700\u8981\u5148\u5904\u7406 set\uff0c\u5728\u533a\u95f4\u4fee\u6539\u548c\u4e0b\u653e set \u6807\u8bb0\u7684\u65f6\u5019\u8981\u6ce8\u610f\u6e05\u7a7a add \u6807\u8bb0\u3002</p> <p>\u5c31\u8fd9\u6837\uff0c\u53ea\u662f\u6bd4\u8f83\u96be\u5199\uff0c\u7136\u540e\u4fee\u6539\u7684 \\(v\\) \u597d\u50cf\u6ca1\u6709\u9650\u5236\uff0c\u6240\u4ee5\u4fdd\u9669\u8d77\u89c1\u6211\u4eec\u7528\u4e00\u4e2a\u503c\u57df\u5916\u7684\u6570\u8868\u793a\u7a7a\u6807\u8bb0\u5c31\u884c\u4e86\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int inf = 1e9 + 7;\nconst int si = 1e6 + 10;\n\nint n, m, q;\nclass SegTree {\nprivate: struct Node {\nint l, r;\nint mi, mx, sm;\nint set, add;\nint len() { return r - l + 1; }\n} t[si &lt;&lt; 2];\ninline void pushup(int p) {\nt[p].sm = t[p &lt;&lt; 1].sm + t[p &lt;&lt; 1 | 1].sm;\nt[p].mx = max(t[p &lt;&lt; 1].mx, t[p &lt;&lt; 1 | 1].mx);\nt[p].mi = min(t[p &lt;&lt; 1].mi, t[p &lt;&lt; 1 | 1].mi);\n}\ninline void pushdown(int p) {\nif(t[p].set != inf) {   t[p &lt;&lt; 1].sm = t[p &lt;&lt; 1].len() * t[p].set;\nt[p &lt;&lt; 1 | 1].sm = t[p &lt;&lt; 1 | 1].len() * t[p].set;  t[p &lt;&lt; 1].mi = t[p &lt;&lt; 1].mx = t[p].set;\nt[p &lt;&lt; 1 | 1].mi = t[p &lt;&lt; 1 | 1].mx = t[p].set;\nt[p &lt;&lt; 1].set = t[p].set, t[p &lt;&lt; 1 | 1].set = t[p].set, t[p].set = inf;\nt[p &lt;&lt; 1].add = 0, t[p &lt;&lt; 1 | 1].add = 0; // Attention.\n}\nif(t[p].add != 0) {\nt[p &lt;&lt; 1].sm += t[p &lt;&lt; 1].len() * t[p].add;\nt[p &lt;&lt; 1].mi += t[p].add, t[p &lt;&lt; 1].mx += t[p].add;\nt[p &lt;&lt; 1 | 1].sm += t[p &lt;&lt; 1 | 1].len() * t[p].add;\nt[p &lt;&lt; 1 | 1].mi += t[p].add, t[p &lt;&lt; 1 | 1].mx += t[p].add;\nt[p &lt;&lt; 1].add += t[p].add, t[p &lt;&lt; 1 | 1].add += t[p].add, t[p].add = 0;\n}\n}\npublic: void build(int p, int l, int r) {\nt[p].l = l, t[p].r = r;\nif(l == r) {\nt[p].sm = 0, t[p].mx = 0, t[p].mi = 0;\nt[p].add = 0, t[p].set = inf; return; }\nint mid = (l + r) &gt;&gt; 1;\nbuild(p &lt;&lt; 1, l, mid), build(p &lt;&lt; 1 | 1, mid + 1, r), pushup(p);\n}\nvoid Set(int p, int l, int r, int v) {\nint nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) {\nt[p].sm = t[p].len() * v;\nt[p].mx = t[p].mi = v;\nt[p].add = 0, t[p].set = v; // Attention\nreturn;\n}\npushdown(p);\nint mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) Set(p &lt;&lt; 1, l, r, v);\nif(r &gt; mid) Set(p &lt;&lt; 1 | 1, l, r, v);\npushup(p);\n}\nvoid Add(int p, int l, int r, int v) {\nint nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) {\nt[p].sm += t[p].len() * v;\nt[p].mx += v, t[p].mi += v;\nt[p].add += v; return;\n}\npushdown(p);\nint mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) Add(p &lt;&lt; 1, l, r, v);\nif(r &gt; mid) Add(p &lt;&lt; 1 | 1, l, r, v);\npushup(p);\n}\nint Quesm(int p, int l, int r) {\nint ret = 0, nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) return t[p].sm;\npushdown(p);\nint mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) ret += Quesm(p &lt;&lt; 1, l, r);\nif(r &gt; mid) ret += Quesm(p &lt;&lt; 1 | 1, l, r);\nreturn ret;\n}\nint Quemi(int p, int l, int r) {\nint ret = inf, nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) return t[p].mi;\npushdown(p);\nint mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) ret = min(ret, Quemi(p &lt;&lt; 1, l, r));\nif(r &gt; mid) ret = min(ret, Quemi(p &lt;&lt; 1 | 1, l, r));\nreturn ret;\n}\nint Quemx(int p, int l, int r) {\nint ret = -inf, nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) return t[p].mx;\npushdown(p);\nint mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) ret = max(ret, Quemx(p &lt;&lt; 1, l, r));\nif(r &gt; mid) ret = max(ret, Quemx(p &lt;&lt; 1 | 1, l, r));\nreturn ret;\n}\n};\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\n// while(cin &gt;&gt; n &gt;&gt; m &gt;&gt; q) {\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; q;\nSegTree* tr = new SegTree[n+1];\nfor(int i = 1; i &lt;= n; ++i)\ntr[i].build(1, 1, m);\nfor(int i = 1; i &lt;= q; ++i) {\nint opt; cin &gt;&gt; opt;\nif(opt == 1) {\nint x, xx, y, yy, v;\ncin &gt;&gt; x &gt;&gt; y &gt;&gt; xx &gt;&gt; yy &gt;&gt; v;\nfor(int j = x; j &lt;= xx; ++j) tr[j].Add(1, y, yy, v);\n}   if(opt == 2) {\nint x, xx, y, yy, v;\ncin &gt;&gt; x &gt;&gt; y &gt;&gt; xx &gt;&gt; yy &gt;&gt; v;\nfor(int j = x; j &lt;= xx; ++j) tr[j].Set(1, y, yy, v);\n}\nif(opt == 3) {\nint x, xx, y, yy;\ncin &gt;&gt; x &gt;&gt; y &gt;&gt; xx &gt;&gt; yy;\nint sum = 0, mxv = -inf, miv = inf;\nfor(int j = x; j &lt;= xx; ++j) {\nsum += tr[j].Quesm(1, y, yy);\nmxv = max(mxv, tr[j].Quemx(1, y, yy));\nmiv = min(miv, tr[j].Quemi(1, y, yy));\n}\ncout &lt;&lt; sum &lt;&lt; \" \" &lt;&lt; miv &lt;&lt; \" \" &lt;&lt; mxv &lt;&lt; endl;\n}\n}\n// }\nreturn 0;\n}\n</code></pre> <p>\u8fd8\u6709\u4e00\u4e2a\u70b9\u662f\uff0c\u76f4\u63a5\u5f00 \\(21\\) \u4e2a\u7ebf\u6bb5\u6811\u4f1a\u70b8\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7528 <code>new/delete</code> \u52a8\u6001\u521b\u5efa\u6570\u7ec4\u3002</p> <p>\u8fd9\u4e2a\u9898\u597d\u50cf\u8bf4\u662f\u6709\u591a\u6d4b\uff0c\u4f46\u662f\u6570\u636e\u53ef\u80fd\u662f\u7528\u811a\u9020\u7684\uff0c\u6240\u4ee5\u6211\u5fd8\u8bb0\u53d6\u6d88\u6ce8\u91ca\u4e86\u4e5f\u90fd\u6ca1\u6709\u4e8b\u60c5\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u6211\u8bfb\u9519\u4e86\u3002</p>"}, {"location": "rec/segtree-practice/#e-parade", "title": "E - Parade", "text": "<p>\u9898\u610f\u548c\u9898\u89e3\u770b\u8fd9\u91cc\u7684\u590d\u76d8\u62a5\u544a\u3002</p>"}, {"location": "rec/segtree-practice/#f-help-with-intervals", "title": "F - Help with Intervals", "text": "<p>\u9898\u610f\u6709\u70b9\u590d\u6742\uff0c\u6211\u76f4\u63a5\u7c98\u8d34\u539f\u9898\u9762\u4e86\uff1a</p> Statement <pre><code>Description\n\nLogLoader, Inc. is a company specialized in providing products for analyzing logs. While Ikki is working on graduation design, he is also engaged in an internship at LogLoader. Among his tasks, one is to write a module for manipulating time intervals, which have confused him a lot. Now he badly needs your help.\n\nIn discrete mathematics, you have studied several basic set operations, namely union, intersection, relative complementation and symmetric difference, which naturally apply to the specialization of sets as intervals.. For your quick reference they are summarized in the table below:\n\nOperation   Notation    \nDefinition\n\nUnion   A \u222a B   {x : x \u2208 A or x \u2208 B}\nIntersection    A \u2229 B   {x : x \u2208 A and x \u2208 B}\nRelative complementation    A \u2212 B   {x : x \u2208 A but x \u2209 B}\nSymmetric difference    A \u2295 B   (A \u2212 B) \u222a (B \u2212 A)\nIkki has abstracted the interval operations emerging from his job as a tiny programming language. He wants you to implement an interpreter for him. The language maintains a set S, which starts out empty and is modified as specified by the following commands:\n\nCommand Semantics\nU T S \u2190 S \u222a T\nI T S \u2190 S \u2229 T\nD T S \u2190 S \u2212 T\nC T S \u2190 T \u2212 S\nS T S \u2190 S \u2295 T\nInput\n\nThe input contains exactly one test case, which consists of between 0 and 65,535 (inclusive) commands of the language. Each command occupies a single line and appears like\n\nX T\n\nwhere X is one of \u2018U\u2019, \u2018I\u2019, \u2018D\u2019, \u2018C\u2019 and \u2018S\u2019 and T is an interval in one of the forms (a,b), (a,b], [a,b) and [a,b] (a, b \u2208 Z, 0 \u2264 a \u2264 b \u2264 65,535), which take their usual meanings. The commands are executed in the order they appear in the input.\n\nEnd of file (EOF) indicates the end of input.\n\nOutput\n\nOutput the set S as it is after the last command is executed as the union of a minimal collection of disjoint intervals. The intervals should be printed on one line separated by single spaces and appear in increasing order of their endpoints. If S is empty, just print \u201cempty set\u201d and nothing else.\n</code></pre> <p>\u9996\u5148\u8003\u8651\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u600e\u4e48\u5904\u7406\u5f00\u533a\u95f4\u548c\u95ed\u533a\u95f4\u3002</p> <p>\u8fd9\u4e2a\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u770b\u4f5c\u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a\u8fd9\u4e2a\u70b9\u4f5c\u4e3a\u5f00/\u95ed\u533a\u95f4\u7aef\u70b9\u7684\u60c5\u51b5\u3002</p> <p>\u7136\u540e\u8fd9\u6837\u5c31\u5f88\u65b9\u4fbf\u4fee\u6539\u3002</p> <p>\u6bd4\u5982 \\((1, 3]\\) \u5c31\u62c6\u6210 \\((1), [2], (2), [3]\\) \u5c31\u884c\u4e86\u3002</p> <p>\u8f6c\u5316\u56de\u6765\u7684\u8bdd\uff0c\u4f60\u53d1\u73b0\u5f00\u533a\u95f4\u4e00\u5b9a\u662f\u5947\u6570\uff0c\u95ed\u533a\u95f4\u4e00\u5b9a\u662f\u5076\u6570\uff0c\u7136\u540e\u5c31\u884c\u4e86\u3002</p> <p>\u4e8e\u662f\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u770b\u8fd9\u4e2a\u64cd\u4f5c\u600e\u4e48\u8f6c\u5316\u6210\u6bd4\u8f83\u65b9\u4fbf\u64cd\u4f5c\u7684\u8bed\u8a00\u3002</p> <p>\u5176\u5b9e\u5c31\u662f\u7ef4\u62a4\u4e00\u5806 0/1\uff0c\u7136\u540e\u8981\u652f\u6301\u4e00\u5b9a\u7684\u533a\u95f4\u7ffb\u8f6c\u548c\u533a\u95f4\u5f02\u6216\u64cd\u4f5c\uff0c\u53ea\u4e0d\u8fc7\u7ef4\u62a4\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u53ea\u7ef4\u62a4\u4e24\u4e2a tag\uff0c\u6700\u540e\u518d\u66b4\u529b\u5904\u7406\uff0c\u6bd5\u7adf\u53ea\u6709 0/1 \u561b\u3002</p> <ul> <li><code>U</code> : \u628a\u533a\u95f4 \\([l,r]\\) \u8986\u76d6\u6210 \\(1\\)</li> <li><code>I</code> : \u628a \\([-\\infty,l), (r,\\infty]\\) \u8986\u76d6\u6210 \\(0\\)</li> <li><code>D</code> : \u628a\u533a\u95f4 \\([l,r]\\) \u8986\u76d6\u6210 \\(0\\)</li> <li><code>C</code> : \u628a \\([-\\infty,l), (r,\u221e]\\) \u8986\u76d6\u6210 \\(0\\), \u4e14 \\([l,r]\\) \u533a\u95f4\u6574\u4f53\u5f02\u6216 \\(1\\)</li> <li><code>S</code> : \\([l,r]\\) \u533a\u95f4\u6574\u4f53\u5f02\u6216 \\(1\\)</li> </ul> <p>Cover \u64cd\u4f5c\u662f Trivial \u7684\uff0cXor \u53ea\u9700\u8981\u5206\u5272\u533a\u95f4\u7136\u540e\u5728\u533a\u95f4\u4e0a\u9762\u6253\u4e00\u4e2a\u6807\u8bb0\u3002</p> <p>\u6ce8\u610f Xor \u4e0d\u80fd\u8986\u76d6 Cover \u53ea\u80fd\u628a Xor \u6253\u5230 Cover \u8eab\u4e0a\uff0cCover \u53ef\u4ee5\u8986\u76d6 Xor\uff0c\u5c31\u662f\u4e00\u4e2a\u4f18\u5148\u7ea7\u7684\u95ee\u9898\u3002</p> <p>\u55ef\u55ef\uff0c\u7136\u540e\u505a\u5b8c\u4e86\u3002</p> Code <pre><code>// \u8fd9\u4e2a\u6ca1\u8c03\u5b8c\n// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\n// using i64 = long long;\n\nconst int si = 2e5 + 10;\n\nbool vis[si &lt;&lt; 2];\nclass SegTree {\nprivate:\nstruct Node {\nint l, r;\nint set, Xor;\n} t[si &lt;&lt; 2];\ninline void pushdown(int p) {\nif(t[p].set != -1) {\nt[p &lt;&lt; 1].set = t[p &lt;&lt; 1 | 1].set = t[p].set;\nt[p &lt;&lt; 1].Xor = t[p &lt;&lt; 1 | 1].Xor = 0;\nt[p].set = -1;\n}\nif(t[p].Xor) {\nif(t[p &lt;&lt; 1].set != -1) t[p &lt;&lt; 1].set ^= 1;\nelse t[p &lt;&lt; 1].Xor ^= 1;\nif(t[p &lt;&lt; 1 | 1].set != -1) t[p &lt;&lt; 1 | 1].set ^= 1;\nelse t[p &lt;&lt; 1 | 1].Xor ^= 1;\nt[p].Xor = 0;\n}\n}\npublic:\nvoid init() { t[1].set = t[1].Xor = 0; } void build(int p, int l, int r) {\nt[p].l = l, t[p].r = r, t[p].set = -1, t[p].Xor = 0;\nif(l == r) return;\nint mid = (l + r) &gt;&gt; 1;\nbuild(p &lt;&lt; 1, l, mid), build(p &lt;&lt; 1 | 1, mid + 1, r);\n}\nvoid change(int p, int l, int r, char op) {\nint nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) {\nif(op == 'U') t[p].set = 1, t[p].Xor = 0;\nif(op == 'D') t[p].set = 0, t[p].Xor = 0;\nif(op == 'C' || op == 'S') {\nif(t[p].set != -1) t[p].set ^= 1;\nelse t[p].Xor ^= 1;\n}\nreturn;\n}\npushdown(p);\nint mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) change(p &lt;&lt; 1, l, r, op);\nelse t[p &lt;&lt; 1].Xor = t[p &lt;&lt; 1].set = 0;\nif(r &gt; mid) change(p &lt;&lt; 1 | 1, l, r, op);\nelse t[p &lt;&lt; 1 | 1].Xor = t[p &lt;&lt; 1 | 1].set = 0;\n}\nvoid query(int p, int l, int r) {\nif(t[p].set == 1) {\nfor(int i = l; i &lt;= r; ++i) vis[i] = true;\nreturn;\n}\nif(t[p].set == 0 || l == r) return;\npushdown(p), query(p &lt;&lt; 1, l, r), query(p &lt;&lt; 1 | 1, l, r);\n}\n} tr;\n\nint main() {\n\n// cin.tie(0) -&gt; sync_with_stdio(false);\n// cin.exceptions(cin.failbit | cin.badbit);\n#ifndef ONLINE_JUDGE\nfreopen(\"input_f.txt\", \"r\", stdin);\nfreopen(\"output_f.txt\", \"w\", stdout);\n#endif\nchar suzui;\ntr.build(1, 1, si), tr.init();  while(scanf(\"%c\", &amp;suzui) != EOF) {\nchar cl, cr; int l, r; scanf(\" %c%d,%d%c\\n\", &amp;cl, &amp;l, &amp;r, &amp;cr);\nl *= 2, r *= 2;\nif(cl == '(') l++;\nif(cr == ')') r--;\ntr.change(1, l, r, suzui);\n}\ntr.query(1, 1, si);\nint f = 0, s = -1, e;\nfor(int i = 1; i &lt;= si; ++i) {\nif(vis[i]) {\nif(s == -1) s = i;\ne = i;\n}\nelse if(s != -1) {\nif(f) putchar(' ');\nf = 1; char cl = (s &amp; 1) ? '(' : '[', cr = (e &amp; 1) ? ')' : ']';\nprintf(\"%c%d,%c%d\\n\", cl, s / 2, (e + 1) / 2, cr), s = -1;\n}\n}\nif(!f) puts(\"empty set\");\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/tricks-for-2022-02/", "title": "2022\u5e742\u6708\u7ec3\u4e60\u8bb0\u5f55", "text": ""}, {"location": "rec/tricks-for-2022-02/#tricks", "title": "\u4e8c\u6708 Tricks \u6574\u7406", "text": ""}, {"location": "rec/tricks-for-2022-02/#acwing97", "title": "Acwing97 \u7ea6\u6570\u4e4b\u548c", "text": "<p>\u6c42 \\(A^B\\) \u7684\u7ea6\u6570\u4e4b\u548c\uff0c\u8981\u53d6\u6a21\u3002</p> <p>\u628a \\(A\\) \u5206\u89e3\u8d28\u56e0\u6570\uff0c\u7136\u540e\u6307\u6570\u4e58\u4e0a \\(B\\) \u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u5f0f\u5b50\uff1a</p> <p>\\(sum=(1+p_1+p_1^2+p_1^3+\\dots+p_1^{B\\times c_1})\\times(1+p_2+p_2^2+p_2^3+\\dots+p_2^{B\\times c_2})\\times\\dots \\times (1+p_n+p_n^2+p_n^3+\\dots+p_n^{B\\times c_n})\\)</p> <p>\\(p_i\\) \u8868\u793a \\(A\\) \u7684\u7b2c \\(i\\) \u4e2a\u8d28\u56e0\u5b50\uff0c\\(c_i\\) \u8868\u793a \\(p_i\\) \u5934\u4e0a\u7684\u6307\u6570\u3002</p> <p>\u6bcf\u4e00\u4e2a\u5c0f\u62ec\u53f7\u91cc\u9762\u53ef\u4ee5\u7528\u7b49\u6bd4\u6570\u5217\u6c42\u548c\uff0c\u4f46\u662f\u53d6\u6a21\uff08\u53ea\uff09\u5bf9\u4e8e\u9664\u6cd5\u6ca1\u6709\u5206\u914d\u5f8b\uff0c\u5206\u5b50\u5206\u6bcd\u4e0d\u80fd\u5206\u5f00\u53d6\u6a21\u7136\u540e\u9664\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u7528\u5206\u6cbb\u6cd5\u6c42\u6bcf\u4e2a\u5c0f\u62ec\u53f7\u91cc\u7684\u5185\u5bb9\u7136\u540e\u76f8\u4e58\u53d6\u6a21\u3002</p> <p>\u628a\u6bcf\u4e2a\u5f0f\u5b50\u4ece\u4e2d\u95f4\u62c6\u5f00\uff0c\u7136\u540e\u628a\u540e\u9762\u5927\u4e00\u70b9\u7684\u5f0f\u5b50\u63d0\u53d6\u4e00\u4e2a\u516c\u56e0\u6570\u51fa\u6765\u4f7f\u5f97\u5b83\u548c\u524d\u9762\u7684\u5f0f\u5b50\u4e00\u6837\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5199\u6210\u9012\u5f52\u4e86\u3002</p> Code <pre><code>/*\n * @Author: black_trees \n * @Date: 2022-01-29 10:12:50 \n * @Last Modified by: black_trees\n * @Last Modified time: 2022-01-29 10:20:59\n */\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconst int mod=9901;\nconst int N=5e6+7;\nint a,b,q[N],f[N],ans,tot,cnt;\ninline int qpow(int a,int b,int p){\nint res=1%p;\nfor(;b;b&gt;&gt;=1){\nif(b&amp;1) res=res*a%p;\na=a*a%p;\n} return res;\n}\ninline void split(){\nfor(register int i=2;i*i&lt;=a;i++){\nif(a%i==0){\nq[++cnt]=i;\nwhile(a%i==0) f[cnt]++,a/=i;\n}\n} if(a&gt;1) q[++cnt]=a,f[cnt]++;\n}\ninline void solve(){\nif(a==0){ puts(\"0\"); return; }\nif(b==0){ puts(\"1\"); return; }\nsplit(),ans=1;\nfor(register int i=1;i&lt;=cnt;i++){\nif((q[i]-1)%mod==0){\nans=(ans*(b*f[i]+1)%mod)%mod;\ncontinue;\n}\nint x=qpow(q[i],b*f[i]+1,mod);x=(x-1+mod)%mod;\nint y=qpow(q[i]-1,mod-2,mod);ans=(ans*x*y)%mod;\n} printf(\"%lld\",ans); return;\n}\nsigned main(){\n#ifndef ONLINE_JUDGE\nfreopen(\"Input.txt\",\"r\",stdin);\nfreopen(\"Output.txt\",\"w\",stdout);\n#endif\ncin&gt;&gt;a&gt;&gt;b; return solve(),0;\n}\n</code></pre> <p>Tricks</p> <p>\u53d6\u6a21\u65f6\u53ef\u4ee5\u5229\u7528\u5206\u6cbb\u6cd5\u5bf9\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u3002</p> <pre><code>Tag : \u5206\u6cbb/\u7b49\u6bd4\u6570\u5217\n</code></pre>"}, {"location": "rec/tricks-for-2022-02/#acwing11", "title": "Acwing11 \u80cc\u5305\u95ee\u9898\u6c42\u65b9\u6848\u6570", "text": "<p>\u6c42\u65b9\u6848\u6570\uff0c\u5148\u80cc\u5305\uff0c\u7136\u540e dp \u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a \\(g\\) \u6570\u7ec4\uff0c\u8868\u793a\u4f7f\u7528\u4e0d\u8d85\u8fc7\u5f53\u524d\u7684\u7a7a\u95f4\u7684\u65b9\u6848\u6709\u591a\u5c11\u79cd\u3002</p> <p>\u6839\u636e \\(f\\) \u8f6c\u79fb\u7684\u4e24\u79cd\u60c5\u51b5\u5206\u5f00\u8ba8\u8bba\u5c31\u884c\u3002</p> <p>\u4e0d\u77e5\u9053\u4e3a\u5565\uff0c\u6211\u5199\u4e2a \\(tmp\\) \u5b58 \\(f\\) \u6ca1\u8f6c\u79fb\u7684 \\(val\\) \u662f\u9519\u7684\u3002</p> <p>\u4f46\u662f\u5148\u6bd4\u8f83\uff0c\u8bb0\u5f55 \\(g\\) \u4e4b\u540e\u518d\u66f4\u65b0 \\(f\\) \u5c31\u662f\u5bf9\u7684\u3002</p> Code <pre><code>/*\n * @Author: black_trees \n * @Date: 2022-02-02 16:02:50 \n * @Last Modified by: black_trees\n * @Last Modified time: 2022-02-02 17:18:10\n */\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int si=1e3+10;\nconstexpr int p=1e9+7;\nint n,m;\nint v[si],w[si];\nint f[si],g[si];\n\nsigned main(){\n#ifndef ONLINE_JUDGE\nfreopen(\"Input.txt\",\"r\",stdin);\nfreopen(\"Output.txt\",\"w\",stdout);\n#endif\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nfor(register int i=1;i&lt;=n;++i){\nscanf(\"%lld%lld\",&amp;v[i],&amp;w[i]);\n}\nfor(register int i=0;i&lt;=m;++i){\ng[i]=1;\n}\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=m;j&gt;=v[i];--j){\nint tmp=f[j-v[i]]+w[i];\nif(tmp&gt;f[j]) f[j]=tmp,g[j]=g[j-v[i]];\nelse if(tmp==f[j]) g[j]=(g[j]+g[j-v[i]])%p;\n}\n} return printf(\"%lld\\n\",g[m]%p),0;\n}\n</code></pre> <p>Trick</p> <p>DP \u7c7b\u95ee\u9898\u6c42\u65b9\u6848\u6570\u65f6\uff0c\u9700\u8981\u5728\u8f6c\u79fb\u6210\u529f\u7684\u65f6\u5019\u8bb0\u5f55\u65b9\u6848\u3002</p> <p>\u540c\u65f6\u9700\u8981\u5728\u5f53\u524d\u72b6\u6001\u548c\u8f6c\u79fb\u8fc7\u6765\u7684\u72b6\u6001\u7684 DP \u503c\u76f8\u7b49\u65f6\uff0c\u5c06\u4e24\u4e2a\u7684\u65b9\u6848\u7d2f\u52a0\u3002</p> <pre><code>Tag : \u80cc\u5305/\u65b9\u6848\u6570\n</code></pre>"}, {"location": "rec/tricks-for-2022-02/#acwing529-noip2017", "title": "Acwing529 [NOIP2017] \u5b9d\u85cf", "text": "<p>\u53d1\u73b0\u672c\u9898\u7684\u8981\u6c42\u5c31\u662f\u6c42\u51fa\u4e00\u9897\u751f\u6210\u6811\uff0c\u4f7f\u5f97\u6309\u7167\u8981\u6c42\u5f97\u5230\u7684\u6743\u503c\u548c\u6700\u5c0f\u3002</p> <p>\u5e76\u4e14\uff0c\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u201c\u4ece\u6700\u521d\u7684\u5b9d\u85cf\u5c4b\u5230\u5f53\u524d\u9053\u8def\u7684\u8d77\u70b9\u7ecf\u8fc7\u7684\u5b9d\u85cf\u5c4b\u4e2a\u6570\u201d\uff0c\u5c31\u662f\u4ee5\u6700\u521d\u7684\u5b9d\u85cf\u5c4b\u4e3aroot\uff0c\u5230\u5f53\u524d\u9053\u8def\u8d77\u70b9\u7684\u6df1\u5ea6\u3002</p> <p>\u8bbe \\(f[i,msk]\\) \u8868\u793a\u96c6\u5408\uff1a\u5f53\u524d\u6253\u901a\u7684\u6700\u5927\u6df1\u5ea6\u4e3a \\(i\\) \uff0c\u6253\u901a\u4e86\u72b6\u6001\u4e3a \\(msk\\) \u7684\u5b9d\u85cf\u5c4b\u7684\u6240\u6709\u65b9\u6848\u3002\u5c5e\u6027\u4e3a\u6743\u503c\u548c\u7684 Min\u3002</p> <p>\u90a3\u4e48\u8003\u8651\u679a\u4e3e\u4e0a\u4e00\u5c42\uff08\u6309\u7167\u201c\u6700\u540e\u201d\u8fdb\u884c\u96c6\u5408\u5212\u5206\uff09\u7684\u72b6\u6001 \\(qwq\\)\uff0c</p> <p>\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8f6c\u79fb\u65b9\u7a0b\uff1a\\(f_{i,msk}=\\min\\{f_{i,msk},f_{i-1,qwq}+(i-1)\\times cost(qwq,msk)\\}\\)</p> <p>\u5176\u4e2d \\(cost(qwq,msk)\\) \u8868\u793a\u4ece \\(qwq\\) \u8f6c\u79fb\u5230 \\(msk\\) \u589e\u52a0\u7684\u9053\u8def\u957f\u5ea6\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u4f46\u662f\u8fd9\u91cc\u8981\u6c42\u53ea\u80fd\u6269\u5c55\u4e00\u5c42\uff0c\u6240\u4ee5\u8fd8\u8981\u5224 \\(qwq\\) \u662f\u5426\u80fd\u53ea\u901a\u8fc7\u4e00\u5c42\u6269\u5c55\u5f97\u5230 \\(msk\\)\u3002</p> <p>\u5177\u4f53\u600e\u4e48\u5224\u5b9a\uff1f</p> <ol> <li>\\(qwq\\) \u4e00\u5b9a\u8981\u662f \\(msk\\) \u7684\u5b50\u96c6\u3002</li> <li>\\(msk\\) \u5f53\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4e00\u5b9a\u5904\u4e8e\u96c6\u5408 \\(S_{qwq}\\)\uff0c\u5176\u4e2d \\(S_{qwq}\\) \u8868\u793a \\(qwq\\) \u5f80\u4e0b\u6269\u5c55\u4e00\u5c42\u4e4b\u540e\u6240\u7684\u5230\u7684\u6240\u6709\u65b0\u8282\u70b9\u548c \\(qwq\\) \u672c\u8eab\u7ec4\u6210\u7684\u96c6\u5408\u3002</li> </ol> <p>\u8fd9\u4e2a\u53ef\u4ee5\u9884\u5904\u7406\u505a\u3002</p> <p>\u7136\u540e\u8003\u8651\u5982\u4f55\u5904\u7406 \\(cost\\)\u3002</p> <p>\u5f53\u9884\u5904\u7406\u51fa\u6240\u6709\u7684\u53ef\u884c\u72b6\u6001\u7684\u5bf9\u4e4b\u540e\uff0c\u6211\u4eec\u8bb0 \\(r(msk,i)\\) \u8868\u793a\u4ece\u72b6\u6001 \\(msk\\) \u6240\u6709\u7684\u7684\u8282\u70b9\u51fa\u53d1\uff0c\u6269\u5c55\u5230\u8282\u70b9 \\(i\\) \u7684\u6700\u77ed\u8def\u3002</p> <p>\u8fd9\u4e2a\u53ef\u4ee5\u5728\u5904\u7406\u53ef\u884c\u72b6\u6001\u7684\u65f6\u5019\u8f6c\u79fb\u51fa\u6765\u3002</p> <p>\u7136\u540e\u8003\u8651\u679a\u4e3e\u6240\u6709\u53ef\u884c\u5bf9\u7684\u72b6\u6001\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u6bd4\u5982\u5f53\u524d\u662f \\(i,j\\) \u8fd9\u4e24\u4e2a\u72b6\u6001\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u4ed6\u4eec\u4e4b\u524d\u7684\u5dee\u5f02\uff0c\u7136\u540e\u5bf9\u76f8\u5e94\u7684 \\(r\\) \u6c42\u548c\u5373\u53ef\u3002</p> <p>\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fdb\u884c\u8f6c\u79fb\u4e86\uff0c\u521d\u59cb\u5316\u8ba9\u6bcf\u4e2a\u8282\u70b9\u5206\u522b\u4e3a\u6839\uff0c\u8ba9\u5bf9\u5e94\u72b6\u6001\u7684\u6743\u503c\u4e3a \\(0\\)\uff0c\u5176\u4ed6\u7684\u8d4b\u503c\u4e3a \\(+\\infty\\) \u5373\u53ef\u3002</p> Code <pre><code>/*\n * @Author: black_trees &lt;black_trees@foxmail.com&gt;\n * @Date: 2022-02-08 10:59:15\n * @Last Modified by: black_trees &lt;black_trees@foxmail.com&gt;\n * @Last Modified time: 2022-02-08 11:21:12\n */\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int inf=0x3f3f3f3f;\nconstexpr int si=15;\nconstexpr int stasi=1&lt;&lt;13;\nint n,m;\nint a[si][si];\nint f[si][stasi];\nint all[stasi],road[stasi][si];\nstd::vector&lt;int&gt;valid[stasi],cost[stasi];\n\nint main(){\nscanf(\"%d%d\",&amp;n,&amp;m),memset(a,0x3f,sizeof a);\nfor(register int i=1;i&lt;=m;++i){\nint u,v,w;\nscanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w);\na[u][v]=a[v][u]=min(a[u][v],w);\n} memset(road,0x3f,sizeof road);\nfor(register int msk=0;msk&lt;(1&lt;&lt;n);++msk){\nall[msk]=msk;\nfor(register int i=1;i&lt;=n;++i){\nif(msk&gt;&gt;(i-1)&amp;1){\nroad[msk][i]=0;\nfor(register int j=1;j&lt;=n;++j){\nif(a[i][j]==inf) continue;\nall[msk]|=1&lt;&lt;(j-1),road[msk][j]=min(road[msk][j],a[i][j]);\n}\n}\n}\n}\nfor(register int msk=0;msk&lt;(1&lt;&lt;n);++msk){\nfor(register int mks=0;mks&lt;msk;++mks){\nif((msk&amp;mks)==mks &amp;&amp; (msk&amp;all[mks])==msk){\nvalid[msk].push_back(mks); int su=0;\nfor(register int i=1;i&lt;=n;++i){\nif((msk^mks)&gt;&gt;(i-1)&amp;1) su+=road[mks][i];\n} cost[msk].push_back(su);\n}\n}\n} memset(f,0x3f,sizeof f);\nfor(register int i=1;i&lt;=n;++i) f[1][1&lt;&lt;(i-1)]=0;\nint res=f[1][(1&lt;&lt;n)-1];\nfor(register int i=2;i&lt;=n;++i){\nfor(register int msk=1;msk&lt;(1&lt;&lt;n);++msk){\nfor(register int j=0;j&lt;(int)valid[msk].size();++j){\nint k=valid[msk][j];\nf[i][msk]=min(f[i][msk],f[i-1][k]+(i-1)*cost[msk][j]);\n}\n} res=min(res,f[i][(1&lt;&lt;n)-1]);\n} return printf(\"%d\\n\",res),0;\n}\n</code></pre> <p>Trick</p> <p>\u5728\u601d\u8003DP\u7c7b\u7684\u95ee\u9898\u65f6\u53ef\u4ee5\u5148\u5217\u51fa\u4e00\u4e2a\u65b9\u7a0b\uff0c\u4e0d\u7ba1\u91cc\u9762\u7684\u67d0\u4e9b\u4e1c\u897f\u600e\u4e48\u6c42\uff0c\u7b49\u786e\u5b9a\u5f0f\u5b50\u662f\u5bf9\u7684\uff08\u65e0\u540e\u6548\u6027\uff09\u4e4b\u540e\u518d\u8003\u8651\u8ba1\u7b97\u8fd9\u4e9b\u4e1c\u897f\u3002\uff08\u9010\u5c42\u601d\u8003\uff09</p> <pre><code>Tag : \u751f\u6210\u6811/\u72b6\u538bDP\n</code></pre>"}, {"location": "rec/tricks-for-2022-02/#acwing1073", "title": "Acwing1073 \u6811\u7684\u4e2d\u5fc3", "text": "<p>\u66b4\u529b\u505a\u5c31\u662f\u6bcf\u4e2a\u70b9 dfs \u7136\u540e\u53d6 max\u3002</p> <p>\u4f46\u662f\u660e\u663e TLE\uff0c\u6240\u4ee5\u8003\u8651\u6362\u6839DP\u3002</p> <p>\u7b2c\u4e00\u6b21 dfs \u5904\u7406\u51fa\u4ee5 \\(1\\) \u4e3a\u6839\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u80fd\u5f80\u4e0b\u8d70\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u3002\u7136\u540e\u8003\u8651\u5904\u7406\u51fa\u4ece\u6bcf\u4e2a\u8282\u70b9\u5f80\u4e0a\u8d70\u7684\u6700\u5927\u503c\u3002</p> <p>\u7b2c\u4e8c\u6b21 dfs \u5206\u7c7b\u8ba8\u8bba\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef\u3002</p> <p>\u7edf\u8ba1\u7684\u65f6\u5019\uff0c\u5982\u679c\u6700\u5927\u503c\u88ab\u66f4\u65b0\uff0c\u90a3\u4e48\u628a\u6b21\u5927\u503c\u66f4\u65b0\u4e3a\u539f\u6765\u7684\u6700\u5927\u503c\u3002</p> <p>\u53cd\u4e4b\u4ee4\u6b21\u5927\u503c\u548c\u5f53\u524d\u626b\u5230\u7684\u5143\u7d20\u53d6 \\(\\max\\) \u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int si_n=1e4+10;\nconstexpr int si_m=si_n&lt;&lt;1;\nint n;\nstruct node{\nint head,ver,Next,w;\n}e[si_m];\nint tot=0;\ninline void add(int u,int v,int w){\ne[++tot].ver=v,e[tot].w=w;\ne[tot].Next=e[u].head,e[u].head=tot;\n}\nint d[si_n],dis[si_n],up[si_n];\nint s[si_n];\ninline void dfs1(int u,int fa){\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver,w=e[i].w;\nif(v==fa) continue;\ndfs1(v,u);\nif(d[v]+w&gt;=d[u]) dis[u]=d[u],d[u]=d[v]+w,s[u]=v;\nelse if(d[v]+w&gt;dis[u]) dis[u]=d[v]+w;\n}\n}\ninline void dfs2(int u,int fa){\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver,w=e[i].w;\nif(v==fa) continue;\nif(s[u]==v) up[v]=w+max(up[u],dis[u]);\nelse up[v]=w+max(up[u],d[u]);\ndfs2(v,u);\n}\n}\n\nint main(){\nscanf(\"%d\",&amp;n);\nfor(register int i=1;i&lt;n;++i){\nint u,v,w;\nscanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w);\nadd(u,v,w),add(v,u,w);\n} dfs1(1,0),dfs2(1,0);\nint res=0x3f3f3f3f;\nfor(register int i=1;i&lt;=n;++i){\nres=min(res,max(d[i],up[i]));\n} return printf(\"%d\\n\",res),0;\n}\n</code></pre> <p>Tricks</p> <p>\u6362\u6839 DP \u7684\u65b9\u7a0b\u5982\u679c\u51fa\u73b0 \\(\\max\\)\uff0c\u6362\u6839\u7684\u65f6\u5019\u9700\u8981\u5229\u7528\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u8fdb\u884c\u8f6c\u79fb\u3002</p> <p>\u53ef\u4ee5\u5229\u7528 <code>std::multiset</code>\uff0c\u4e5f\u53ef\u4ee5\u7528 <code>std::vector</code> \u8bb0\u5f55\u3002</p> <pre><code>Tag : \u6362\u6839DP\n</code></pre>"}, {"location": "rec/tricks-for-2022-02/#cf708c-centroids", "title": "CF708C Centroids", "text": "<p>\u7ed9\u5b9a\u4e00\u9897\u6811\uff0c\u4f60\u6709\u4e00\u6b21\u5c06\u6811\u6539\u9020\u7684\u673a\u4f1a\uff0c\u6539\u9020\u7684\u610f\u601d\u662f\u5220\u53bb\u4e00\u6761\u8fb9\uff0c\u518d\u52a0\u5165\u4e00\u6761\u8fb9\uff0c\u4fdd\u8bc1\u6539\u9020\u540e\u8fd8\u662f\u4e00\u68f5\u6811\u3002</p> <p>\u8bf7\u95ee\u6709\u591a\u5c11\u70b9\u53ef\u4ee5\u901a\u8fc7\u6539\u9020\uff0c\u6210\u4e3a\u8fd9\u9897\u6811\u7684\u91cd\u5fc3\uff1f\uff08\u5982\u679c\u4ee5\u67d0\u4e2a\u70b9\u4e3a\u6839\uff0c\u6bcf\u4e2a\u5b50\u6811\u7684\u5927\u5c0f\u90fd\u4e0d\u5927\u4e8e \\(\\dfrac{n}{2}\\) \uff0c\u5219\u79f0\u67d0\u4e2a\u70b9\u4e3a\u91cd\u5fc3\uff09</p> <p>\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9 \\(u\\) \u4e0d\u662f\u91cd\u5fc3\uff0c\u90a3\u4e48\u5b83\u7684\u5b50\u6811\u5f53\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7684\u5927\u5c0f\u4f1a\u8d85\u51fa \\(\\lfloor \\frac{n}{2} \\rfloor\\)\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u6539\u9020\u7684\u65f6\u5019\u5c31\u4e00\u5b9a\u662f\u4ece\u8fd9\u4e2a\u8d85\u51fa \\(\\lfloor \\frac{n}{2} \\rfloor\\) \u7684\u5b50\u6811\u5f53\u4e2d\u627e\u5230\u4e00\u4e2a\u5b50\u6811\uff0c\u4f7f\u5b83\u548c \\(u\\) \u76f8\u8fde\uff0c\u6ee1\u8db3\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u6240\u6709\u5b50\u6811\u90fd\u4e0d\u5927\u4e8e \\(\\lfloor \\frac{n}{2} \\rfloor\\)\u3002</p> <p>\u5e76\u4e14\u8fd9\u4e2a\u627e\u51fa\u6765\u7684\u5b50\u6811\u5927\u5c0f\u5fc5\u987b\u662f \\(\\le \\lfloor \\frac{n}{2} \\rfloor\\) \u5f53\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1 \\(u\\) \u88ab\u6539\u9020\u4e3a\u91cd\u5fc3\u4e4b\u540e\u4e0d\u53ef\u80fd\u51fa\u73b0\u77db\u76fe\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6bcf\u4e00\u4e2a\u5b50\u6811\u5f53\u4e2d\u7684\uff0c\u5c0f\u4e8e\u7b49\u4e8e \\(\\lfloor \\frac{n}{2} \\rfloor\\) \u7684\u6700\u5927\u5b50\u6811\u7684\u5927\u5c0f\u5c31\u80fd\u5feb\u901f\u8fdb\u884c\u5224\u65ad\u4e86\u3002</p> <p>\u5148\u8003\u8651\u4e0d\u6362\u6839\u7684\u60c5\u51b5\u3002</p> <p>\u8bbe \\(f_{u}\\) \u8868\u793a \\(u\\) \u7684\u5b50\u6811\u5f53\u4e2d\u7684\uff0c\u5c0f\u4e8e\u7b49\u4e8e \\(\\lfloor \\frac{n}{2} \\rfloor\\) \u7684\u6700\u5927\u5b50\u6811\u7684\u5927\u5c0f\u3002</p> <p>\u90a3\u4e48\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <p>\\(f_{u}=\\begin{cases} \\max\\{siz_v\\} &amp; siz_v \\le \\lfloor \\frac{n}{2} \\rfloor\\\\ \\max\\{f_{v}\\} &amp; \\text{otherwise.} \\end{cases}\\)</p> <p>\u8003\u8651\u6362\u6839\uff0c\u53d1\u73b0\u65b9\u7a0b\u5f53\u4e2d\u6709\u51fa\u73b0 \\(\\max\\)\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8bb0\u5f55 \\(f\\) \u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u3002</p> <p>\u8fd9\u4e2a\u65b9\u7a0b\u6bd4\u8f83\u5957\u8def\uff0c\u5c31\u662f\u5728\u539f\u6765\u7684 \\(f\\) \u7684\u57fa\u7840\u4e0a\u548c \\(n-siz_u\\) \u53d6 \\(\\max\\)\uff0c\u7136\u540e\u6ce8\u610f\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u7684\u8ba8\u8bba\u5c31\u53ef\u4ee5\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int si=1e6+10;\nconstexpr int inf=0x3f3f3f3f;\nint t,n;\nint dp[si][2],pos[si];\nint dpp[si],ans[si];\nint siz[si],maxsiz[si];\nstruct edge{\nint to,Next; }e[si&lt;&lt;1];\nint head[si&lt;&lt;1];\nint tot=0;\ninline void add(int u,int v){\ne[++tot].to=v,e[tot].Next=head[u];\nhead[u]=tot;\n} inline void dfs1(int u,int fa){\nsiz[u]=1;\nfor(register int i=head[u];i;i=e[i].Next){\nif(e[i].to==fa) continue;\ndfs1(e[i].to,u);\nint v;\nsiz[u]+=siz[e[i].to];\nif(siz[e[i].to]&gt;siz[maxsiz[u]]) maxsiz[u]=e[i].to;\nif(siz[e[i].to]&lt;=n/2) v=siz[e[i].to];\nelse v=dp[e[i].to][0];\nif(dp[u][0]&lt;v) dp[u][1]=dp[u][0],dp[u][0]=v,pos[u]=e[i].to;\nelse if(dp[u][1]&lt;v) dp[u][1]=v;\n}\n}\ninline void dfs2(int u,int fa){\nans[u]=1;\nif(siz[maxsiz[u]]&gt;n/2) ans[u]=(siz[maxsiz[u]]-dp[maxsiz[u]][0]&lt;=n/2);\nelse if(n-siz[u]&gt;n/2) ans[u]=(n-siz[u]-dpp[u]&lt;=n/2);\nfor(register int i=head[u];i;i=e[i].Next){\nif(e[i].to==fa) continue;\nint v;\nif(n-siz[u]&gt;n/2) v=dpp[u];\nelse v=n-siz[u];\ndpp[e[i].to]=max(dpp[e[i].to],v);\nif(pos[u]==e[i].to) dpp[e[i].to]=max(dpp[e[i].to],dp[u][1]);\nelse dpp[e[i].to]=max(dpp[e[i].to],dp[u][0]);\ndfs2(e[i].to,u);\n}\n}\nsigned main(){\nscanf(\"%d\",&amp;n);\nfor(register int i=1;i&lt;n;i++){\nint u,v; scanf(\"%d%d\",&amp;u,&amp;v);\nadd(u,v),add(v,u);\n} dfs1(1,0),dfs2(1,0);\nfor(register int i=1;i&lt;=n;i++){\nprintf(\"%d \",ans[i]);\n} return 0;\n}\n</code></pre> <p>Trick</p> <p>\u5148\u8003\u8651\u6709\u6839\u7684\u60c5\u51b5\u5217\u51fa\u65b9\u7a0b\uff0c\u7136\u540e\u518d\u4ece\u6362\u6839\u7684\u89d2\u5ea6\u7406\u89e3\u3002</p> <pre><code>Tag : \u6362\u6839DP\n</code></pre>"}, {"location": "rec/tricks-for-2022-02/#acwing340", "title": "Acwing340 \u901a\u4fe1\u7ebf\u8def", "text": "<p>\u53ef\u4ee5\u5c06\u56fe\u4e2d\u67d0\u6761 \\(1\\to n\\) \u7684\u8def\u5f84\u4e0a\u7684 \\(K\\) \u4e2a\u8fb9\u6743\u8bbe\u7f6e\u4e3a \\(0\\)\u3002</p> <p>\u5b9a\u4e49\u8fd9\u6761\u8def\u5f84\u7684\u82b1\u8d39\u4e3a\u8bbe\u7f6e\u540e\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u6743\u7684\u6700\u5927\u503c\u3002</p> <p>\u6c42\u82b1\u8d39\u6700\u5c0f\u503c\u3002</p> <p>\u53ef\u4ee5\u5206\u5c42\u56fe\u6700\u77ed\u8def\u3002</p> <p>\u8bbe \\(dis[x,p]\\) \u8868\u793a\u4ece \\(1\\) \u5230 \\(x\\)\uff0c\u5df2\u7ecf\u7528\u4e86 \\(p\\) \u6761\u514d\u8d39\u673a\u4f1a\u7684\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\u90a3\u4e48\u8003\u8651\u4e00\u4e2a\u201c\u5e7f\u4e49\u201d\u7684\u6700\u77ed\u8def\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u90fd\u62c6\u6210 \\(K + 1\\) \u4e2a\uff08\\((x,0),(x,1),\\dots,(x,K)\\)\uff09</p> <p>\u540c\u5c42\u4e4b\u95f4\u76f4\u63a5\u8fde\u539f\u6765\u7684\u8fb9\u6743\uff0c\u7136\u540e\u8fd9\u4e00\u5c42\u548c\u4e0b\u4e00\u5c42\u8fde\u8fb9\u5c31\u5c06\u8fb9\u6743\u8bbe\u7f6e\u4e3a \\(0\\)\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e \\((u,v)\\) \u8fd9\u6761\u539f\u56fe\u4e2d\u7684\u8fb9\uff0c\u8fde\u63a5 \\((u,k),(v,k)\\)\uff0c\u8fb9\u6743\u4e3a \\(w(u,v)\\)\u3002</p> <p>\u7136\u540e\u8fde\u63a5 \\((u,k),(v,k + 1)\\)\uff0c\u8868\u793a\u8fd9\u6761\u7ebf\u8def\u4f7f\u7528\u514d\u8d39\u673a\u4f1a\uff0c\u6240\u4ee5\u8fb9\u6743\u4e3a \\(0\\)\u3002</p> <p>\u5728\u8fd9\u5f20\u56fe\u4e0a\u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\uff0c\u6700\u540e\u7b54\u6848\u5728 \\(dis[n][i]\\) \u4e2d\u53d6 \\(\\min\\) \u5373\u53ef\u3002</p> <p>\u5b9e\u9645\u4e0a\u5c31\u662f\u5229\u7528 SPFA DP\u3002</p> <p>\u6216\u8005\u5229\u7528 \\(01\\) \u4e8c\u5206\uff0c\u6bcf\u6b21\u628a\u4e0d\u8d85\u8fc7 \\(mid\\) \u7684\u8bbe\u7f6e\u4e3a \\(0\\) \uff0c\u5176\u5b83\u4e3a \\(1\\)\u3002</p> <p>\u7136\u540e\u5229\u7528 dijkstra Check \\(dis[n]\\) \u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e \\(K\\) \u5373\u53ef\u3002</p> Code <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int si=11010;\nconstexpr int si_e=si&lt;&lt;1;\nint n,p,k;\nint tot=0,dis[si];\nbool vis[si];\nstruct edge{ int head,next,ver,w; }e[si_e];\ninline void add(int u,int v,int w){ e[++tot].ver=v,e[tot].next=e[u].head,e[u].head=tot,e[tot].w=w; }\nstd::priority_queue&lt;pair&lt;int,int&gt;&gt;q;\ninline bool dijkstra(int limit){\nmemset(dis,0x3f,sizeof dis),memset(vis,false,sizeof vis);\ndis[1]=0,q.push({dis[1],1});\nwhile(!q.empty()){\nint u=q.top().second; q.pop();\nif(vis[u]) continue; vis[u]=true;\nfor(register int i=e[u].head;i;i=e[i].next){\nint v=e[i].ver,w=e[i].w&gt;limit?1:0;\nif(dis[v]&gt;dis[u]+w) dis[v]=dis[u]+w,q.push({-dis[v],v});    }\n} return dis[n]&lt;=k;\n}\n\nint main(){\ncin&gt;&gt;n&gt;&gt;p&gt;&gt;k; for(register int i=1,u,v,w;i&lt;=p;++i) cin&gt;&gt;u&gt;&gt;v&gt;&gt;w,add(u,v,w),add(v,u,w);\nint l=0,r=1e6+1;\nwhile(l&lt;r){\nint mid=(l+r)&gt;&gt;1;\nif(dijkstra(mid)) r=mid;\nelse l=mid+1;\n} if(r==1e6+1) return puts(\"-1\"),0;\nreturn printf(\"%d\\n\",r),0;\n}\n</code></pre> <p>Tricks</p> <ol> <li> <p>\u628a\u6700\u4f18\u95ee\u9898\u8f6c\u5316\u6210\u5224\u5b9a\u95ee\u9898\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u5229\u7528 01 \u4e8c\u5206\u7684\u601d\u60f3\u66f4\u65b9\u4fbf\u7684 Check\u3002</p> </li> <li> <p>\u5728\u65e0\u5411\u56fe\u4e0a DP \u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u8f6c\u79fb\u53ef\u80fd\u6709\u540e\u6548\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u501f\u52a9 SPFA \u8fdb\u884c DP\u3002</p> </li> </ol> <p>\u6b64\u5904\u4f1a\u6709\u540e\u6548\u6027\u7684\u539f\u56e0\u6709\u4e24\u4e2a\uff1a         1. \u9636\u6bb5\u5e76\u4e0d\u662f\u8282\u70b9\u7684\u7f16\u53f7\u987a\u5e8f\u3002</p> <pre><code>    2. \u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u65e0\u6cd5\u50cf DAG \u90a3\u6837\u5f88\u597d\u7684\u8fdb\u884c\u65e0\u540e\u6548\u6027\u7684 DP \u8f6c\u79fb\u3002\n</code></pre> <ol> <li>\u53ef\u4ee5\u628a\u56fe\u4e0a\u7684\u8282\u70b9\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u62c6\u6210\u591a\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5728\u65b0\u56fe\u4e0a\u6839\u636e\u6761\u4ef6\u8fde\u8fb9\uff0c\u95ee\u9898\u5c31\u53ef\u4ee5\u88ab\u8f6c\u5316\u4e3a\u6700\u666e\u901a\u7684 SSSP\u3002</li> </ol> <pre><code>Tag : SPFA/01\u4e8c\u5206/\u5206\u5c42\u56fe\n</code></pre>"}, {"location": "rec/tricks-for-2022-02/#acwing1148", "title": "Acwing1148 \u79d8\u5bc6\u7684\u725b\u5976\u8fd0\u8f93", "text": "<p>\u6c42\u65e0\u5411\u8054\u901a\u5e26\u6743\u56fe \\(G\\) \u7684\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811\u3002</p> <p>\u9996\u5148\u8003\u8651\u975e\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811\u600e\u4e48\u505a\u3002</p> <p>\u5148\u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u6761\u975e\u6811\u8fb9 \\((u,v)\\)\uff0c\u628a\u8fd9\u6761\u975e\u6811\u8fb9\u52a0\u5165\u5230\u6700\u5c0f\u751f\u6210\u6811\u5f53\u4e2d\u3002</p> <p>\u8fd9\u65f6\u5019\u5fc5\u7136\u4f1a\u51fa\u73b0\u4e00\u4e2a\u73af\uff0c\u6240\u4ee5\u628a\u8fd9\u4e2a\u73af\u4e0a\u9664\u53bb \\(w(u,v)\\) \u7684\u6700\u5927\u503c\u5220\u53bb\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u660e\u663e\u7684\uff0c\u8fd9\u4e2a\u73af\u4e0a\u7684\u6700\u5927\u503c\u5c31\u662f MST \u5f53\u4e2d \\(u \\to v\\) \u7684\u8def\u5f84\u4e0a\u7684\u6700\u5927\u503c\u3002</p> <p>\u53ef\u4ee5\u5728 MST \u4e0a\u7528\u500d\u589e\u6c42 LCA\uff0c\u7136\u540e\u8bb0\u5f55 \\(u\\) \u5230\u5b83\u7684 \\(2^i\\) \u7ea7\u7956\u5148\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u7684\u4e25\u683c\u6700\u5927\u503c\u3002</p> <p>\u8fd9\u4e2a\u7c7b\u4f3c \\(f\\) \u6570\u7ec4\u7684\u8bb0\u5f55\uff0c\u521d\u59cb\u5316 \\(w[u][0] = w(u,fa)\\)\uff0c\u7136\u540e\u500d\u589e\u8bb0\u5f55\u3002</p> <p>\u67e5\u8be2 MST \u4e0a \\((u,v)\\) \u8def\u5f84\u4e0a\u7684\u6700\u5927\u503c\u65f6\uff0c\u5206\u522b\u8be2\u95ee \\((u,lca),(v,lca)\\) \u8def\u5f84\u4e0a\u7684\u4e25\u683c\u6700\u5927\u503c\u5373\u53ef\u3002</p> <p>\u7b54\u6848\u5c31\u662f\u679a\u4e3e\u5b8c\u6240\u6709\u975e\u6811\u8fb9\u88ab\u52a0\u5165\u7684\u60c5\u51b5\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u8fd9\u91cc\u548c\u4e25\u683c\u6b21\u5c0f\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\u53ef\u80fd\u52a0\u5165\u7684\u8fb9\u7b49\u4e8e\u88ab\u5220\u9664\u7684\u8fb9\u7684\u6743\u503c\u3002</p> <p>\u6240\u4ee5\u7528\u7c7b\u4f3c\u6362\u6839 DP \u91cc\u7684 trick\u3002</p> <p>\u8bb0\u5f55\u6700\u5927\u503c\u7684\u540c\u65f6\u8bb0\u5f55\u6b21\u5927\u503c\uff0c\u5982\u679c\u6700\u5927\u503c\u7b49\u4e8e\u88ab\u52a0\u5165\u7684\u975e\u6811\u8fb9\u7684\u6743\u503c\uff0c\u4f7f\u7528\u6b21\u5927\u503c\u4ee3\u66ff\u6700\u5927\u503c\u66f4\u65b0\u5373\u53ef\u3002</p> Code <pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n\nconst int INF = 0x3fffffff;\nconst long long INF64 = 0x3fffffffffffffffLL;\n\nstruct Edge {\nint u, v, val;\n\nbool operator&lt;(const Edge &amp;other) const { return val &lt; other.val; }\n};\n\nEdge e[300010];\nbool used[300010];\n\nint n, m;\nlong long sum;\n\nclass Tr {\nprivate:\nstruct Edge {\nint to, nxt, val;\n} e[600010];\n\nint cnt, head[100010];\n\nint pnt[100010][22];\nint dpth[100010];\n// \u5230\u7956\u5148\u7684\u8def\u5f84\u4e0a\u8fb9\u6743\u6700\u5927\u7684\u8fb9\nint maxx[100010][22];\n// \u5230\u7956\u5148\u7684\u8def\u5f84\u4e0a\u8fb9\u6743\u6b21\u5927\u7684\u8fb9\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a -INF\nint minn[100010][22];\n\npublic:\nvoid addedge(int u, int v, int val) {\ne[++cnt] = (Edge){v, head[u], val};\nhead[u] = cnt;\n}\n\nvoid insedge(int u, int v, int val) {\naddedge(u, v, val);\naddedge(v, u, val);\n}\n\nvoid dfs(int now, int fa) {\ndpth[now] = dpth[fa] + 1;\npnt[now][0] = fa;\nminn[now][0] = -INF;\nfor (int i = 1; (1 &lt;&lt; i) &lt;= dpth[now]; i++) {\npnt[now][i] = pnt[pnt[now][i - 1]][i - 1];\nint kk[4] = {maxx[now][i - 1], maxx[pnt[now][i - 1]][i - 1],\nminn[now][i - 1], minn[pnt[now][i - 1]][i - 1]};\n// \u4ece\u56db\u4e2a\u503c\u4e2d\u53d6\u5f97\u6700\u5927\u503c\nstd::sort(kk, kk + 4);\nmaxx[now][i] = kk[3];\n// \u53d6\u5f97\u4e25\u683c\u6b21\u5927\u503c\nint ptr = 2;\nwhile (ptr &gt;= 0 &amp;&amp; kk[ptr] == kk[3]) ptr--;\nminn[now][i] = (ptr == -1 ? -INF : kk[ptr]);\n}\n\nfor (int i = head[now]; i; i = e[i].nxt) {\nif (e[i].to != fa) {\nmaxx[e[i].to][0] = e[i].val;\ndfs(e[i].to, now);\n}\n}\n}\n\nint lca(int a, int b) {\nif (dpth[a] &lt; dpth[b]) std::swap(a, b);\n\nfor (int i = 21; i &gt;= 0; i--)\nif (dpth[pnt[a][i]] &gt;= dpth[b]) a = pnt[a][i];\n\nif (a == b) return a;\n\nfor (int i = 21; i &gt;= 0; i--) {\nif (pnt[a][i] != pnt[b][i]) {\na = pnt[a][i];\nb = pnt[b][i];\n}\n}\nreturn pnt[a][0];\n}\n\nint query(int a, int b, int val) {\nint res = -INF;\nfor (int i = 21; i &gt;= 0; i--) {\nif (dpth[pnt[a][i]] &gt;= dpth[b]) {\nif (val != maxx[a][i])\nres = std::max(res, maxx[a][i]);\nelse\nres = std::max(res, minn[a][i]);\na = pnt[a][i];\n}\n}\nreturn res;\n}\n} tr;\n\nint fa[100010];\n\nint find(int x) { return fa[x] == x ? x : fa[x] = find(fa[x]); }\n\nvoid Kruskal() {\nint tot = 0;\nstd::sort(e + 1, e + m + 1);\nfor (int i = 1; i &lt;= n; i++) fa[i] = i;\n\nfor (int i = 1; i &lt;= m; i++) {\nint a = find(e[i].u);\nint b = find(e[i].v);\nif (a != b) {\nfa[a] = b;\ntot++;\ntr.insedge(e[i].u, e[i].v, e[i].val);\nsum += e[i].val;\nused[i] = 1;\n}\nif (tot == n - 1) break;\n}\n}\n\nint main() {\nstd::ios::sync_with_stdio(0);\nstd::cin.tie(0);\nstd::cout.tie(0);\n\nstd::cin &gt;&gt; n &gt;&gt; m;\nfor (int i = 1; i &lt;= m; i++) {\nint u, v, val;\nstd::cin &gt;&gt; u &gt;&gt; v &gt;&gt; val;\ne[i] = (Edge){u, v, val};\n}\n\nKruskal();\nlong long ans = INF64;\ntr.dfs(1, 0);\n\nfor (int i = 1; i &lt;= m; i++) {\nif (!used[i]) {\nint _lca = tr.lca(e[i].u, e[i].v);\n// \u627e\u5230\u8def\u5f84\u4e0a\u4e0d\u7b49\u4e8e e[i].val \u7684\u6700\u5927\u8fb9\u6743\nlong long tmpa = tr.query(e[i].u, _lca, e[i].val);\nlong long tmpb = tr.query(e[i].v, _lca, e[i].val);\n// \u8fd9\u6837\u7684\u8fb9\u53ef\u80fd\u4e0d\u5b58\u5728\uff0c\u53ea\u5728\u8fd9\u6837\u7684\u8fb9\u5b58\u5728\u65f6\u66f4\u65b0\u7b54\u6848\nif (std::max(tmpa, tmpb) &gt; -INF)\nans = std::min(ans, sum - std::max(tmpa, tmpb) + e[i].val);\n}\n}\n// \u6b21\u5c0f\u751f\u6210\u6811\u4e0d\u5b58\u5728\u65f6\u8f93\u51fa -1\nstd::cout &lt;&lt; (ans == INF64 ? -1 : ans) &lt;&lt; '\\n';\nreturn 0;\n} // from OI-wiki\n</code></pre> <p>Tricks</p> <ol> <li> <p>\u5148\u601d\u8003\u975e\u4e25\u683c\uff0c\u518d\u8003\u8651\u4e25\u683c\uff08\u7279\u6b8a \\(\\to\\) \u4e00\u822c\uff09</p> </li> <li> <p>\u975e\u4e25\u683c \\(\\to\\) \u4e25\u683c \u7684\u8fc7\u7a0b\u5c31\u662f\u53bb\u6389\u76f8\u7b49\uff0c\u5728\u8fd9\u79cd\u6700\u503c\u95ee\u9898\u91cc\u53ef\u4ee5\u5229\u7528\u8bb0\u5f55\u6b21\u6700\u503c\u6765\u89e3\u51b3\u3002</p> </li> </ol> <pre><code>Tag : \u4e25\u683c\u6b21\u5c0f/\u751f\u6210\u6811/LCA/\u500d\u589e\n</code></pre>"}, {"location": "rec/tricks-for-2022-03/", "title": "2022\u5e743\u6708\u7ec3\u4e60\u8bb0\u5f55", "text": ""}, {"location": "rec/tricks-for-2022-03/#tricks", "title": "\u4e09\u6708 Tricks \u6574\u7406", "text": ""}, {"location": "rec/tricks-for-2022-03/#zjoi2007", "title": "[ZJOI2007] \u6700\u5927\u534a\u8054\u901a\u5b50\u56fe", "text": "<p>\u7ed9\u5b9a\u4e00\u5f20\u6709\u5411\u56fe \\(G\\)\u3002</p> <p>\u79f0\u4e00\u4e2a\u5bfc\u51fa\u5b50\u56fe\u662f\u201c\u534a\u8fde\u901a\u7684\u201d\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e\u5bfc\u51fa\u5b50\u56fe\u5f53\u4e2d\u7684\u4efb\u610f\u70b9\u5bf9 \\((u,v)\\)\u3002</p> <p>\u90fd\u6709 \\(u\\) \u53ef\u4ee5\u5230\u8fbe \\(v\\) \u6216\u8005 \\(v\\) \u53ef\u4ee5\u5230\u8fbe \\(u\\)\u3002</p> <p>\u6c42 \\(G\\) \u7684\u6700\u5927\u534a\u8fde\u901a\u5b50\u56fe\u7684\u5927\u5c0f\uff0c\u548c\u4e2a\u6570\u3002</p> <p>\u9996\u5148\u53d1\u73b0\u5f3a\u8fde\u901a\u5206\u91cf\u5fc5\u7136\u662f\u4e00\u4e2a\u534a\u8054\u901a\u5b50\u56fe\u3002</p> <p>\u6240\u4ee5\u5148\u7f29\u70b9\u5f97\u5230\u4e00\u4e2a DAG\u3002</p> <p>\u53d1\u73b0\u6700\u5927\u534a\u8054\u901a\u5b50\u56fe\u5fc5\u7136\u662f DAG \u4e0a\u7684\u4e00\u6761\u6700\u957f\u94fe\u3002</p> <p>\u5e76\u4e14\u8fd9\u4e2a\u6700\u957f\u94fe\u4e0d\u80fd\u5206\u5c94\u3002</p> <p>\u90a3\u4e48\u5728 DAG \u4e0a\u8fdb\u884c\u9012\u63a8\u6c42\u6700\u957f\u8def\u5373\u53ef\u3002</p> <p>\u56e0\u4e3a Tarjan \u7f29\u70b9\u4f1a\u5f97\u5230\u9006\u62d3\u6251\u5e8f\uff0c\u6240\u4ee5\u4e0d\u7528\u62d3\u6251\u6392\u5e8f\u4e86\uff0c\u5012\u8fc7\u6765\u5c31\u884c\u3002</p> <p>\u9898\u76ee\u8981\u6c42\u8bb0\u5f55\u65b9\u6848\uff0c\u90a3\u4e48\u5c31\u5728 \\(f_i\\) \u8fdb\u884c\u8f6c\u79fb\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a \\(g_i\\) \u8868\u793a \\(f_i\\) \u8fd9\u4e2a\u72b6\u6001\u5bf9\u5e94\u7684\u65b9\u6848\u3002</p> <p>\u9898\u76ee\u53ef\u80fd\u6709\u91cd\u8fb9\uff0c\u6240\u4ee5\u9700\u8981\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e00\u6b21\u662f\u4ece\u54ea\u91cc\u8f6c\u79fb\u7684\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u3002</p> <p>\u521d\u59cb\u5316 \\(f_i=size_{scc_{i}},g_i=1\\)\u3002</p> <p>\u6838\u5fc3\u4ee3\u7801\uff1a</p> Code <pre><code>for(register int u=cnt;u&gt;=1;--u) f[u]=scc[u].size(),g[u]=1;\nfor(register int u=cnt;u&gt;=1;--u){\nfor(register int i=ee[u].head;i;i=ee[i].Next){\nint v=ee[i].ver; if(las[v]==u) continue; las[v]=u;\nif(f[u]+(int)scc[v].size()&gt;f[v]) f[v]=f[u]+(int)scc[v].size(),g[v]=g[u];\nelse if(f[u]+(int)scc[v].size()==f[v]) g[v]=(g[v]+g[u])%mod;\n}\n} int res1=0,res2=0;\nfor(register int i=1;i&lt;=cnt;++i){\nif(f[i]&gt;res1) res1=f[i],res2=g[i];\nelse if(f[i]==res1) res2=(res2+g[i])%mod;\n} return printf(\"%d\\n%d\\n\",res1,res2),0;\n</code></pre> <p>Tricks</p> <ol> <li> <p>Tarjan \u7f29\u5b8c\u70b9\u5f97\u5230\u7684\u5e8f\u5217\u662f\u9006\u62d3\u6251\u5e8f\u3002</p> </li> <li> <p>DAG \u4e0a DP \u4e00\u822c\u662f\u5f80\u524d\u63a8\u800c\u4e0d\u662f\u5f80\u540e\u627e\u524d\u9a71\u7684\u65b9\u5f0f\u3002</p> </li> <li> <p>DAG \u4e0a DP \u6709\u53ef\u80fd\u9700\u8981\u8003\u8651\u91cd\u8fb9\u3002</p> </li> </ol> Warning <p>\u8fd8\u6709\uff0c\u5982\u679c\u975e\u8981\u5728 SCC \u540e\u5229\u7528\u539f\u56fe\u5efa\u8fb9\uff0c\u4e00\u5b9a\u8981\u624b\u5199\u4e00\u4e2a for \u3002</p> <p>\u5982\u679c\u662f\u8fd9\u6837\u5199\u53ea\u4f1a\u6e05\u7a7a \\(e_0\\)</p> <pre><code>struct Edge{\nint head,ver,Next;\ninline void Init(){ head=-1; }\n}e[si_m]\n\ne-&gt;Init();\n</code></pre> <p>\u4e8c\u7ef4\u7684 <code>std::bitset&lt;&gt;</code> \u4e4b\u7c7b\u7684 STL \u53ef\u4ee5\u8fd9\u4e48\u5199\uff08\u4f46\u662f\u5e38\u6570\u5927\uff09\uff0c\u662f\u56e0\u4e3a\u5b83\u91cd\u8f7d\u4e86 <code>[]</code> \uff0c\u672c\u8d28\u4e0a\u5b83\u662f\u4e00\u4e2a\u7c7b\u4f3c\u8fd9\u6837\u7684\u4e1c\u897f\uff1a</p> <pre><code>struct Bitset{\nbool bb[si];\ninline bool* operator [] (int idx){ return &amp;bb[idx]; }\n}b; // \u4e71\u5199\u7684\uff0c\u7406\u89e3\u5c31\u884c\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\u5b83\u5e76\u4e0d\u662f\u4e00\u4e2a bitset \u6570\u7ec4\uff0c\u4ecd\u7136\u53ea\u662f\u4e00\u4e2a bitset\u3002</p> <pre><code>Tag : \u5f3a\u8fde\u901a\u5206\u91cf/DAG\u4e0a\u7684DP/\u6c42\u65b9\u6848\n</code></pre>"}, {"location": "rec/tricks-for-2022-03/#acwing361", "title": "Acwing361 \u89c2\u5149\u5976\u725b", "text": "<p>\u7ed9\u5b9a\u4e00\u5f20\u56fe\uff0c\u6c42\u56fe\u4e0a\u7684\u4e00\u4e2a\u73af\u4f7f\u5f97</p> <p>\u201c\u73af\u4e0a\u5404\u70b9\u7684\u6743\u503c\u4e4b\u548c\u201d\u9664\u4ee5\u201c\u73af\u4e0a\u5404\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u201d\u6700\u5927\u3002</p> <p>01\u5206\u6570\u89c4\u5212\uff0c\u628a\u70b9\u6743\u79fb\u52a8\u5230\u8fb9\u6743\u4e0a\uff0c</p> <p>\u56e0\u4e3a\u6c42\u7684\u662f \\(\\max\\{\\dfrac{\\sum f_i}{\\sum t_i}\\}\\)\u3002</p> <p>\u4e8c\u5206\u7b54\u6848\u4e4b\u540e\u53d8\u6210\u5224\u5b9a \\(mid\\) \u662f\u5426 \\(\\le \\dfrac{\\sum f_i}{\\sum t_i}\\)  \u3002</p> <p>\u4e5f\u5c31\u662f\u5224\u65ad\u73af\u4e0a \\(\\sum (mid\\times t_i -f_i)\\) \u662f\u5426 \\(\\le 0\\)\u3002</p> <p>\u6240\u4ee5\u628a\u8fb9\u53d8\u6210 \\(t\\times mid-f\\) \u7684\u5f62\u5f0f\u8dd1 SPFA \u6700\u77ed\u8def\u3002</p> <p>\u5982\u679c\u6709\u8d1f\u73af\u5219 \\(mid\\) \u4e0d\u53ef\u884c\uff0c\u5982\u679c\u6b63\u5e38\u6c42\u51fa\u6700\u77ed\u8def\uff0c\u8bc1\u660e \\(mid\\) \u53ef\u884c\u3002</p> Code <pre><code>/*\n * @Author: black_trees &lt;black_trees@foxmail.com&gt;\n * @Date: 2022-03-08 08:30:06\n * @Last Modified by: black_trees &lt;black_trees@foxmail.com&gt;\n * @Last Modified time: 2022-03-08 09:12:38\n */\n\n/*\n * READ THIS BEFORE YOU WRITE YOUR CODE\n * ====================================\n * @ Read the description carefully!\n * @ Pay attention to the data domain.\n * @ Keep calm.\n * @ Write down your thought on your draft.\n * @ Keep your mind clear.\n * @ Stabilize the coding speed.\n * ====================================\n * READ THIS AGAIN BEFORE YOU START !!!\n */\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ldb=long double;\n\nconstexpr int si_n=1e3+10;\nconstexpr int si_m=5e3+10;\nconstexpr ldb eps=1e-4;\nint L,P,tot=0;\nint f[si_n],t[si_m];\ndouble dis[si_n];\nint cnt[si_n];\nbool vis[si_n];\nstd::queue&lt;int&gt;q;\nstruct Edge{ int head,Next,ver,w; }e[si_m];\ninline void add(int u,int v,int w){ e[++tot].ver=v,e[tot].Next=e[u].head,e[u].head=tot,e[tot].w=w; }\ninline bool spfa(ldb mid){\nfor(register int i=1;i&lt;=L;++i) cnt[i]=dis[i]=0,q.push(i),vis[i]=true;\nwhile(!q.empty()){\nint u=q.front(); q.pop();\nvis[u]=false;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver; ldb w=e[i].w*1.0*mid-1.0*f[u];\nif(dis[v]&gt;dis[u]+w){\ndis[v]=dis[u]+w,cnt[v]=cnt[u]+1;\nif(cnt[u]&gt;=L) return true;\nif(!vis[v]) q.push(v),vis[v]=true;\n}\n}\n} return false;\n}\n\nint main(){\ncin&gt;&gt;L&gt;&gt;P;\nfor(register int i=1;i&lt;=L;++i) cin&gt;&gt;f[i];\nfor(register int i=1,u,v;i&lt;=P;++i) cin&gt;&gt;u&gt;&gt;v&gt;&gt;t[i],add(u,v,t[i]);\nldb l=0.0,r=1000.0;\nwhile(r-l&gt;eps){\nldb mid=(l+r)/2;\nif(spfa(mid)) l=mid;\nelse r=mid;\n} return printf(\"%.2Lf\\n\",r),0;\n}\n</code></pre> <pre><code>Tag : SPFA/01\u5206\u6570\u89c4\u5212\n</code></pre>"}, {"location": "rec/tricks-for-2022-03/#acwing1165", "title": "Acwing1165 \u5355\u8bcd\u73af", "text": "<p>01\u5206\u6570\u89c4\u5212\uff0c\u628a\u6bcf\u4e2a\u5355\u8bcd\u7684\u524d\u4e24\u4e2a\u5b57\u6bcd\u548c\u540e\u4e24\u4e2a\u5b57\u6bcd\u8fde\u8fb9\uff0c\u5355\u8bcd\u957f\u5ea6\u770b\u4f5c\u8fb9\u6743\u3002</p> <p>\u8fd9\u6837\u5b50\u70b9\u7684\u6570\u91cf\u5c31\u964d\u4e0b\u6765\u4e86\u3002</p> <p>\u8981\u6c42\u7684\u662f \\(\\max\\{\\dfrac{\\sum len}{n}\\}\\)\uff0c\\(n\\) \u662f\u9009\u7684\u5355\u8bcd\u7684\u4e2a\u6570\u3002</p> <p>\u4e8c\u5206\u7b54\u6848\u540e\u8f6c\u5316\u4e3a\u6c42 \\(mid\\) \u662f\u5426 \\(\\le \\dfrac{\\sum len}{n}\\)\u3002</p> <p>\u4e5f\u5c31\u662f \\(\\sum len_i- n\\times mid=\\sum(len_i-mid)\\) \u662f\u5426 \\(\\ge 0\\)</p> <p>\u6240\u4ee5\u628a\u8fb9\u6743\u5316\u6210 \\(len-mid\\) \u7684\u5f62\u5f0f\u8dd1 SPFA \u6700\u957f\u8def\u3002</p> <p>\u5224\u65ad\u6709\u6ca1\u6709\u6b63\u73af\u5373\u53ef\u5224\u5b9a \\(mid\\) \u7684\u53ef\u884c\u6027\u3002</p> Code <pre><code>/*\n * @Author: black_trees &lt;black_trees@foxmail.com&gt;\n * @Date: 2022-03-08 09:30:27\n * @Last Modified by: black_trees &lt;black_trees@foxmail.com&gt;\n * @Last Modified time: 2022-03-08 10:34:42\n */\n\n/*\n * READ THIS BEFORE YOU WRITE YOUR CODE\n * ====================================\n * @ Read the description carefully!\n * @ Pay attention to the data domain.\n * @ Keep calm.\n * @ Write down your thought on your draft.\n * @ Keep your mind clear.\n * @ Stabilize the coding speed.\n * ====================================\n * READ THIS AGAIN BEFORE YOU START !!!\n */\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ldb=long double;\n\nconstexpr int si_n=7e2+10;\nconstexpr int si_m=1e5+10;\nconstexpr int eps=1e-4;\nint n,tot=0,cnt=0,num=0;\nstd::map&lt;pair&lt;char,char&gt;,int&gt;rec;\ninline void add(char c,char cc){ if(rec.find({c,cc})==rec.end()) rec[{c,cc}]=++cnt;  }\nstruct Edge{ int head,ver,Next,w; inline void Init(){ head=-1; }\n}e[si_m];\ninline void add(int u,int v,int w){ e[++tot].ver=v,e[tot].Next=e[u].head,e[u].head=tot,e[tot].w=w; }\nldb dis[si_n]; bool vis[si_n]; int Cnt[si_n];\nstd::queue&lt;int&gt;q;\ninline bool spfa(ldb mid){\nfor(register int i=1;i&lt;=cnt;++i) vis[i]=true,q.push(i),Cnt[i]=0,dis[i]=0;\nwhile(!q.empty()){\nint u=q.front(); q.pop();\nvis[u]=false;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver; ldb w=e[i].w*1.0-mid;\nif(dis[v]&lt;dis[u]+w){\ndis[v]=dis[u]+w,Cnt[v]=Cnt[u]+1;\nif(++num&gt;10000) return true;\nif(Cnt[v]&gt;=cnt) return true;\nif(!vis[v]) q.push(v),vis[v]=true;\n}\n}\n} return false;\n}\n\nint main(){\nwhile(~scanf(\"%d\",&amp;n) &amp;&amp; n){ e-&gt;Init(); num=0,tot=0,cnt=0; rec.clear();\nfor(register int i=1;i&lt;=n;++i){\nstring s; cin&gt;&gt;s;\nadd(s[0],s[1]),add(s[s.size()-2],s[s.size()-1]);\nint u=rec[{s[0],s[1]}],v=rec[{s[s.size()-2],s[s.size()-1]}];\nadd(u,v,s.size());\n} ldb l=0.0,r=1000.0;\nif(!spfa(0)){ puts(\"No solution\"); continue; }\nwhile(r-l&gt;eps){\nldb mid=(l+r)/2;\nif(spfa(mid)) l=mid;\nelse r=mid;\n} printf(\"%.2Lf\\n\",r);\n}\nreturn 0;\n}\n\n// \u4e0d\u77e5\u9053\u662f\u4e0d\u662f WA \u7684\uff0c\u4e0d\u7ba1\u4e86\n</code></pre> <p>Trick</p> <p>01 \u5206\u6570\u89c4\u5212\u7684\u65f6\u5019\u5982\u679c\u7ed3\u5408\u4e86\u56fe\u8bba\uff0c\u53ef\u4ee5\u6839\u636e\u5316\u51fa\u6765\u7684\u548c\u5f0f\u6539\u53d8\u8fb9\u6743\uff08\u5728 SPFA \u91cc\u9762\u6539\u5c31\u884c\uff0c\u4e0d\u7528\u91cd\u65b0\u5efa\u56fe\uff09\u3002</p> <pre><code>Tag : SPFA/01\u5206\u6570\u89c4\u5212\n</code></pre>"}, {"location": "rec/tricks-for-2022-03/#acwing350", "title": "Acwing350 \u5de1\u903b", "text": "<p>\u8003\u8651 \\(K=1\\) \u7684\u60c5\u51b5\u3002</p> <p>\u53d1\u73b0\u53ea\u9700\u8981\u5728\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4\u8fde\u63a5\u4e00\u6761\u8fb9\u3002</p> <p>\u7136\u540e\u8fd9\u6761\u76f4\u5f84\u5c31\u53ef\u4ee5\u53ea\u8d70\u4e00\u6b21\u3002</p> <p>\u5fc5\u7136\u662f\u6700\u4f18\u7684\u3002</p> <p>\u8003\u8651 \\(K=2\\) \u7684\u60c5\u51b5\u3002</p> <p>\u4e3a\u4e86\u4e0d\u91cd\u590d\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u88ab\u51cf\u5c11\u7684\u8fb9\u5c3d\u91cf\u7684\u591a\u3002</p> <p>\u5728 \u201c\u629b\u6389\u201d \u539f\u6765\u9009\u4e2d\u7684\u76f4\u5f84\u7684\u6811\u4e0a\u518d\u6c42\u4e00\u6b21\u76f4\u5f84\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f\u771f\u7684\u53bb\u9664\uff0c\u800c\u662f\u8bf4\u4f7f\u5f97\u8fd9\u6761\u76f4\u5f84\u4e0d\u4f1a\u88ab\u9009\u3002</p> <p>\u6240\u4ee5\u4e00\u4e2a Tricky \u7684\u505a\u6cd5\u5c31\u662f\u628a\u9009\u4e2d\u7684\u76f4\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u5168\u90e8\u8bbe\u7f6e\u6210 \\(-1\\)\u3002</p> <p>\u4f46\u662f\u6ce8\u610f\uff0c\u5982\u679c\u8bbe\u7f6e\u6210 \\(-1\\) \uff0c\u5c31\u4e0d\u80fd\u7528 2-BFS \u6c42\u76f4\u5f84\u4e86\uff0c\u5c31\u53ea\u80fd DP\u3002</p> <p>\u4f46\u662f\u4e3a\u4e86\u6c42\u65b9\u6848\u65b9\u4fbf\uff0c\u7b2c\u4e00\u6b21\u6c42\u76f4\u5f84\u8981\u7528 2-BFS</p> <p>\\(\\text{Trick:}\\) \u6c42\u76f4\u5f84\u7684\u65f6\u5019\u5982\u679c\u6709\u8d1f\u8fb9\u6743\u4e0d\u80fd\u4f7f\u7528 2-BFS\u3002</p> <p>\u4f46\u662f 2-BFS \u76f8\u5bf9\u4e8e dp \u66f4\u5bb9\u6613\u6c42\u65b9\u6848\u3002</p> Code <pre><code>/*\n * @Author: black_trees &lt;black_trees@foxmail.com&gt;\n * @Date: 2022-03-17 15:06:41\n * @Last Modified by: black_trees &lt;black_trees@foxmail.com&gt;\n * @Last Modified time: 2022-03-17 20:26:14\n */\n\n/*\n * READ THIS BEFORE YOU WRITE YOUR CODE\n * ====================================\n * @ Read the description carefully!\n * @ Pay attention to the data domain.\n * @ Keep calm.\n * @ Write down your thought on your draft.\n * @ Keep your mind clear.\n * @ Stabilize the coding speed.\n * ====================================\n * READ THIS AGAIN BEFORE YOU START !!!\n */\n\n#include&lt;queue&gt;\n#include&lt;cstring&gt;\n#include&lt;cstdio&gt;\n#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\n\nconstexpr int si_n=1e5+10;\nconstexpr int si_m=2e5+10;\nint n,K,tot=0;\nint head[si_n];\nstruct Edge{ int ver,Next,w; }e[si_m];\ninline void add(int u,int v,int w){ e[tot]=(Edge){v,head[u],w},head[u]=tot++; }\nstruct Node{ int nu,ans; };\nstd::queue&lt;Node&gt;q;\nbool vis[si_n];\nint pos=0,qos=0,ans=-1;\ninline void Bfs(int st,int &amp;qwq){\nmemset(vis,false,sizeof vis),vis[st]=true,q.push((Node){st,0}); while(!q.empty()){\nNode u=q.front(); q.pop();\nif(ans&lt;u.ans) qwq=u.nu,ans=u.ans;\nfor(register int i=head[u.nu];~i;i=e[i].Next){\nint v=e[i].ver,w=e[i].w;\nif(!vis[v]) q.push((Node){v,ans+w}),vis[v]=true;;\n}\n} return ;\n}\nint dis[si_n];\ninline void dfs(int u,int fa){\nfor(register int i=head[u];~i;i=e[i].Next){\nint v=e[i].ver,w=e[i].w;\nif(v==fa) continue;\ndfs(v,u);\nans=max(ans,dis[u]+dis[v]+w);   dis[u]=max(dis[u],dis[v]+w);\n} return ;\n}\ninline bool Rev(int u,int fa){\nif(u==pos || u==qos) return true;\nint ok=0;\nfor(register int i=head[u];~i;i=e[i].Next){\nint v=e[i].ver,&amp;w=e[i].w;\nif(v==fa) continue;\nif(Rev(v,u)) ok++,e[i].w=e[i^1].w=-1;\n} return ok==1?true:false;\n}\nint main(){\nmemset(head,-1,sizeof head),memset(dis,0,sizeof dis);\ncin&gt;&gt;n&gt;&gt;K; int res=(n&lt;&lt;1);\nfor(register int i=1;i&lt;n;++i){\nint u,v; cin&gt;&gt;u&gt;&gt;v;\nadd(u,v,1),add(v,u,1);\n}\n\n// for(register int i=1;i&lt;=n;++i){\n//     for(register int j=head[i];~j;j=e[j].Next){\n//         cout&lt;&lt;i&lt;&lt;\" \"&lt;&lt;e[j].ver&lt;&lt;\" \"&lt;&lt;e[j].w&lt;&lt;endl;\n//     }\n// }\n\nBfs(1,pos);\nans=-1;\nBfs(pos,qos);\nres-=ans;\n\n// cout&lt;&lt;ans&lt;&lt;endl;\n// cout&lt;&lt;res+ans&lt;&lt;endl;\n// cout&lt;&lt;pos&lt;&lt;\" \"&lt;&lt;qos&lt;&lt;endl;\n\nif(K==1){ res--; return cout&lt;&lt;res&lt;&lt;endl,0; } Rev(1,0);\n\n// for(register int i=1;i&lt;=n;++i){\n//     for(register int j=head[i];~j;j=e[j].Next){\n//         cout&lt;&lt;i&lt;&lt;\" \"&lt;&lt;e[j].ver&lt;&lt;\" \"&lt;&lt;e[j].w&lt;&lt;endl;\n//     }\n// }\n\n// cout&lt;&lt;ans&lt;&lt;endl;\n\nans=-1;\ndfs(1,0);\n\n// for(register int i=1;i&lt;=n;++i) cout&lt;&lt;dis[i]&lt;&lt;\" \"; cout&lt;&lt;endl;\n// cout&lt;&lt;ans&lt;&lt;endl;\n\nres-=ans; return cout&lt;&lt;res&lt;&lt;endl,0;\n}\n\n// If there exist negtive edge(s) on Tree, don't use 2-BFS to calc diameter.\n// should use dp.\n</code></pre> <pre><code>Tag : \u6811\u7684\u76f4\u5f84/\u65b9\u6848\n</code></pre>"}, {"location": "rec/tricks-for-2022-03/#acwing354", "title": "Acwing354 \u5929\u5929\u7231\u8dd1\u6b65", "text": "<p>\u8fd9\u9898\u548c\u96e8\u5929\u7684\u5c3e\u5df4\u5f88\u50cf\u3002</p> <p>\u90fd\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u9897\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7136\u540e\u7ebf\u6bb5\u6811\u5408\u5e76\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u9898\u7684\u7b54\u6848\u4e0d\u662f\u6700\u503c\uff0c\u6709\u533a\u95f4\u53ef\u51cf\u6027\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528\u7ebf\u6bb5\u6811\uff0c\u76f4\u63a5\u5728\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u76f8\u5173\u7684\u64cd\u4f5c\u3002</p> <p>\u7136\u540e dfs \u4e00\u6b21\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u9012\u5f52\u8fdb\u5b50\u6811\u5b8c\u4e4b\u540e\u7684\u7b54\u6848\u51cf\u53bb\u9012\u5f52\u4e4b\u524d\u7684\u5c31\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u3002</p> Code <pre><code>/*\n * READ THIS BEFORE YOU WRITE YOUR CODE\n * ====================================\n * @ Read the description carefully!\n * @ Pay attention to the data domain.\n * @ Keep calm.\n * @ Write down your thought on your draft.\n * @ Keep your mind clear.\n * @ Stabilize the coding speed.\n * ====================================\n * Common Bugs\n * ====================================\n * @ Unuse some written function (forget write dfs(v) in dfs(u)) ?\n * @ long long or precision ERROR ?\n * @ Output Format (%lld,%llu) ?\n * @ Special cases (n=1),(root is not 1) ?\n * @ Clear the array (head,vis) ?\n * @ Wrong variable name (i, but written j) ?\n * ====================================\n * READ THIS AGAIN BEFORE YOU START !!!\n */\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#include&lt;queue&gt;\n#include&lt;vector&gt;\n#include&lt;cstring&gt;\n#include&lt;iostream&gt;\nusing namespace std;\n\nconstexpr int si=3e5+10;\nint n,m;\nint tot=0,head[si];\nstruct Edge{ int ver,Next;}e[si&lt;&lt;1];\ninline void add(int u,int v){ e[tot]=(Edge){v,head[u]},head[u]=tot++;}\nstd::queue&lt;int&gt;q; std::vector&lt;int&gt;a1[si],b1[si],a2[si],b2[si];\nint c1[si&lt;&lt;1],c2[si&lt;&lt;1],ans[si];\nint w[si],v[si];\n\nint f[si][20],dep[si];\ninline void Bfs(){\nq.push(1),dep[1]=1;\nwhile(!q.empty()){\nint u=q.front();q.pop();\nfor(register int i=head[u];~i;i=e[i].Next){\nint v=e[i].ver;\nif(dep[v]) continue;\ndep[v]=dep[u]+1,f[v][0]=u;\nfor(register int j=1;j&lt;=19;++j) f[v][j]=f[f[v][j-1]][j-1];\nq.push(v);\n}\n}   }\ninline int Lca(int u,int v){\nif(dep[u]&lt;dep[v]) swap(u,v);\nfor(register int i=19;i&gt;=0;--i){\nif(dep[f[u][i]]&gt;=dep[v]) u=f[u][i];\n} if(u==v) return u;\nfor(register int i=19;i&gt;=0;--i){\nif(f[u][i]!=f[v][i]) u=f[u][i],v=f[v][i];\n} return f[u][0];\n}\ninline void dfs(int x){\nint val1=c1[dep[x]+w[x]], val2=c2[w[x]-dep[x]+n];v[x]=1;\nfor(register int i=head[x];~i;i=e[i].Next){\nint y=e[i].ver;\nif(v[y]) continue;\ndfs(y);\n}\nfor(register int i=0;i&lt;a1[x].size();i++) c1[a1[x][i]]++;\nfor(register int i=0;i&lt;b1[x].size();i++) c1[b1[x][i]]--;\nfor(register int i=0;i&lt;a2[x].size();i++) c2[a2[x][i]+n]++;\nfor(register int i=0;i&lt;b2[x].size();i++) c2[b2[x][i]+n]--;\nans[x]+=c1[dep[x]+w[x]]-val1+c2[w[x]-dep[x]+n]-val2;\n}\n\nint main(){\ncin&gt;&gt;n&gt;&gt;m,memset(head,-1,sizeof head);\nfor(register int i=1;i&lt;n;++i){\nint x,y; cin&gt;&gt;x&gt;&gt;y;\nadd(x,y),add(y,x);\n}\nfor(register int i=1;i&lt;=n;++i) cin&gt;&gt;w[i];\nBfs();\nfor(register int i=1;i&lt;=m;++i){\nint x,y; cin&gt;&gt;x&gt;&gt;y;\nint z=Lca(x,y);\na1[x].push_back(dep[x]),b1[f[z][0]].push_back(dep[x]);\na2[y].push_back(dep[x]-2*dep[z]),b2[z].push_back(dep[x]-2*dep[z]);\n} dfs(1);\nfor(register int i=1;i&lt;=n;++i) cout&lt;&lt;ans[i]&lt;&lt;\" \"; cout&lt;&lt;endl;\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u6811\u4e0a\u5dee\u5206\n</code></pre>"}, {"location": "rec/tricks-for-2022-03/#acwing369-acm", "title": "Acwing369 \u5317\u5927ACM\u961f\u7684\u8fdc\u8db3", "text": "<p>\u7ed9\u5b9a\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u6709\u4e24\u6b21\u4e58\u8f66\u7684\u673a\u4f1a\uff0c\u53ef\u4ee5\u518d\u4efb\u610f\u5730\u65b9\u4e0a\u4e0b\u8f66\uff0c\u4f46\u662f\u4e0b\u8f66\u4e86\u5c31\u7528\u4e86\u4e00\u6b21\u673a\u4f1a\u3002</p> <p>\u6bcf\u6b21\u8fde\u7eed\u4e58\u8f66\u7684\u4e3e\u4f8b\u4e0d\u80fd\u8d85\u8fc7 \\(q\\)\u3002</p> <p>\u6c42\u4ece \\(s \\to t\\) \u8981\u7ecf\u8fc7\u7684 \u201c\u5371\u9669\u8def\u6bb5\u201d \u7684\u957f\u5ea6\u6700\u5c0f\u662f\u591a\u5c11\u3002</p> <p>\u201c\u5371\u9669\u8def\u6bb5\u201d\u5b9a\u4e49\u4e3a \\(s\\to t\\) \u7684\u5fc5\u7ecf\u8fb9\u3002</p> <p>\\(s \\to t\\) \u7684\u5fc5\u7ecf\u8fb9\u7684\u610f\u601d\u5c31\u662f\uff0c\u4efb\u610f\u4e00\u6761\u4ece \\(s\\to t\\) \u7684\u8def\u5f84\uff0c\u4ed6\u4eec\u90fd\u5305\u542b\u7684\u8fb9\u3002</p> <p>\u9996\u5148\u8003\u8651\u4e00\u4e2a\u6c42\u51fa\u6709\u5411\u56fe\u7684\u6865\uff08\u5fc5\u7ecf\u8fb9\uff09\u7684\u7b97\u6cd5\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528\u652f\u914d\u6811\u5148\u6c42\u51fa\u5fc5\u7ecf\u70b9\u96c6\u7136\u540e\u505a\u3002</p> <p>\u4e0d\u8fc7\u6709\u4e00\u79cd\u6bd4\u8f83\u597d\u5199\u7684 \\(\\text{O}(n)\\) DP \u505a\u6cd5\u3002</p> <p>\u8bbe \\(dp_s[i]\\) \u8868\u793a\u4ece \\(s\\) \u5230 \\(i\\) \u7684\u8def\u5f84\u6761\u6570\u3002</p> <p>\\(dp_t[i]\\) \u8868\u793a\u53cd\u56fe\u4e0a\u4ece \\(t\\) \u5230 \\(i\\) \u7684\u8def\u5f84\u6761\u6570\u3002</p> <p>\u7ecf\u8fc7\u63a8\u5bfc\u4e0d\u96be\u53d1\u73b0\u4e24\u4e2a\u5145\u8981\u6761\u4ef6\uff1a</p> <ol> <li>\u4e00\u4e2a\u70b9 \\(x\\) \u662f\u5fc5\u7ecf\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(dp_s[i] \\times dp_t[i] = dp_s[t]\\)\u3002</li> <li>\u4e00\u6761\u8fb9 \\((u\\to v)\\) \u662f\u5fc5\u7ecf\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(dp_s[u] \\times dp_t[v] = dp_s[t]\\)\u3002</li> </ol> <p>\u4f46\u662f \\(dp_s,dp_t\\) \u662f\u6307\u6570\u7ea7\u522b\u7684\uff0c<code>__uint128_t</code> \u90fd\u4e0d\u4e00\u5b9a\u53ef\u4ee5\u5e94\u4ed8\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u7c7b\u4f3c\u54c8\u5e0c\u7684\u601d\u60f3\uff0c\u7ed9\u4ed6\u4eec\u53d6\u6a21\u3002</p> <p>\u7528\u7c7b\u4f3c\u53cc\u54c8\u5e0c\u7684\u601d\u60f3\uff0c\u540c\u65f6\u8bb0\u5f55\u4e24\u79cd\u6a21\u6570\u610f\u4e49\u4e0b\u7684\u503c\u3002</p> <p>\u7136\u540e\u4e24\u4e2a\u503c\u76f8\u7b49\uff0c\u5f53\u4e14\u4ec5\u5f53\u4ed6\u4eec\u5728\u4e24\u79cd\u610f\u4e49\u4e0b\u7684\u503c\u90fd\u4e00\u6837\u3002</p> <p>\u4e00\u822c\u53d6 \\(mod1=1e9+7,mod2=1e9+9\\)\u3002</p> <p>\u7136\u540e\u8003\u8651\u6c42\u51fa \\(s \\to t\\) \u7684\u6700\u77ed\u8def\u3002</p> <p>\u660e\u663e\u7684\uff0c\u8fd9\u4e9b\u5fc5\u7ecf\u8fb9\u80af\u5b9a\u5728\u4efb\u610f\u7684\u4e00\u6761\u6700\u77ed\u8def\u4e0a\u90fd\u51fa\u73b0\u4e86\uff0c\u6240\u4ee5\u968f\u4fbf\u9009\u54ea\u4e00\u6761\u90fd\u4e00\u6837\u3002</p> <p>\u7136\u540e\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\u3002</p> <p>\u7ecf\u8fc7\u4e25\u8c28\u7684\u4e3e\u4f8b\uff0c\u753b\u56fe\u8bba\u8bc1\u53ef\u4ee5\u53d1\u73b0\uff0c\u76f4\u63a5\u7edf\u8ba1\u7684\u8bdd\u975e\u5e38\u5bb9\u6613\u7b97\u91cd\u590d\u3002</p> <p>\u610f\u601d\u662f\u4e24\u4e2a\u8fde\u7eed\u6bb5\u91cd\u5408\u7684\u65f6\u5019\u4f1a\u975e\u5e38\u96be\u7b97\uff0c\u8981\u5206\u7279\u522b\u591a\u7c7b\u8ba8\u8bba\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u4e00\u4e2a\u975e\u5e38\u6709\u610f\u601d\u7684 Trick \uff1a</p> <p>Trick</p> <p>\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u4e3a \u201c\u5206\u5272\u70b9\u201d\uff0c\u5206\u522b DP\uff0c\u8ba1\u7b97\u4e24\u8fb9\u7684\u7b54\u6848 \\(ds,dt\\)\uff0c\u91cd\u5408\u7684\u95ee\u9898\u5c31\u5f97\u5230\u4e86\u89e3\u51b3\u3002</p> <p>\u7b49\u4ef7\u4e8e\u628a\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u6c42\u53ea\u8986\u76d6\u4e00\u6b21\uff0c\u6865\u8fb9\u603b\u957f\u5ea6\u51cf\u53bb\u53ef\u4ee5\u8986\u76d6\u7684\u6700\u957f\u7684\u6865\u8fb9\u7684\u957f\u5ea6\u3002</p> <p>\u7136\u540e\u6bcf\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u5c31\u662f \\(ds_i + dt_i\\)\uff0c\u679a\u4e3e\u6240\u6709\u70b9\u66f4\u65b0\u5373\u53ef\uff0c\u8fd9\u4e2a Trick \u5728 Acwing341 \u6700\u4f18\u8d38\u6613 \u90a3\u4e00\u9898\u4e5f\u7528\u5230\u4e86\u3002</p> <p>\u672c\u9898\u7ed9\u7684\u4e0d\u662f DAG\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u5148\u62d3\u6251\u6392\u5e8f\u3002</p> Code <pre><code>#include &lt;queue&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 1e5 + 10;\nconst int M = 2e5 + 10; const int mod = 1e9 + 7;\n// \u672c\u9898\u4e0d\u9700\u8981\u53cc\u53d6\u6a21\n\nint ver[M*2], edge[M*2], nxt[M*2], head[N], tot;\nint f[2][N], deg[2][N], dis[N], pre[N], n, m, s, t, Q;\n\nbool bri[M*2];\nint a[N], b[N], cnt; int sum[N], sum_bri[N], ds[N], dt[N], ds_min[N];\nint occur[N], first_occur[N];\n\nqueue&lt;int&gt; q;\n\nvoid add(int u, int v, int w) {\nver[++tot] = v, edge[tot] = w, nxt[tot] = head[u], head[u] = tot;\n}\n\nvoid topsort(int s, int bit) {\nif(bit == 0) { memset(dis, 0x3f, sizeof(dis));\ndis[s] = 0;\n}\nf[bit][s] = 1;\nfor(int i = 1; i &lt;= n; i++)\nif(deg[bit][i] == 0) q.push(i);\nwhile(!q.empty()) {\nint u = q.front(); q.pop();\nfor(int i = head[u]; i; i = nxt[i])\nif((i &amp; 1) == bit) {\nint v = ver[i];\nf[bit][v] = (f[bit][v] + f[bit][u]) % mod; if(bit == 0 &amp;&amp; dis[v] &gt; dis[u] + edge[i]) {  dis[v] = dis[u] + edge[i];\npre[v] = i;\n}\nif(--deg[bit][v] == 0) q.push(v);\n}\n}\n}\n\nint main() {\nint T; cin &gt;&gt; T;\nwhile(T--) {\nmemset(head, 0, sizeof(head)), memset(deg, 0, sizeof(deg));\nmemset(f, 0, sizeof(f)), tot = 1; cnt = 0;\nmemset(bri, 0, sizeof(bri)), memset(occur, 0, sizeof(occur));\n\ncin &gt;&gt; n &gt;&gt; m &gt;&gt; s &gt;&gt; t &gt;&gt; Q;\ns++; t++;\n\nfor(int i = 1; i &lt;= m; i++) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nu++, v++;\nadd(u, v, w), add(v, u, w);\ndeg[0][v]++, deg[1][u]++; }\n\ntopsort(s, 0);\n\nif(f[0][t] == 0) { puts(\"-1\"); continue; }\n\ntopsort(t, 1);\n\nfor(int i = 2; i &lt;= tot; i += 2) {\nint u = ver[i ^ 1], v = ver[i];\nif((long long)f[0][u] * f[1][v] % mod == f[0][t]) {\nbri[i] = true;\n}\n}\n\nfor(int u = 1; u &lt;= n; u++) {\nfor(int i = head[u]; i; i = nxt[i]) {\nif(i &amp; 1) continue; int v = ver[i];\nif(occur[v] == u) {\nbri[i] = false;\nbri[first_occur[v]] = false;\n} else {\noccur[v] = u;\nfirst_occur[v] = i;\n}\n}\n}\nwhile(t != s) {\na[++cnt] = edge[pre[t]];\nb[cnt] = bri[pre[t]];\nt = ver[pre[t] ^ 1];\n}\n\nfor(int i = 1; i &lt;= cnt; i++) {\nsum[i] = sum[i - 1] + a[i]; sum_bri[i] = sum_bri[i - 1] + (b[i] ? a[i] : 0);\n}\nds_min[0] = 1 &lt;&lt; 30;\nfor(int i = 1, j = 0; i &lt;= cnt; i++) { while(sum[i] - sum[j] &gt; Q) j++;\nds[i] = sum_bri[j];\nif(j &gt; 0 &amp;&amp; b[j]) ds[i] -= min(a[j], Q - (sum[i] - sum[j]));\nds_min[i] = min(ds[i], ds_min[i - 1] + (b[i] ? a[i] : 0)); }\nfor(int i = cnt, j = cnt + 1; i; i--) { while(sum[j - 1] - sum[i - 1] &gt; Q) j--;\ndt[i] = sum_bri[cnt] - sum_bri[j - 1];\nif(j &lt;= cnt &amp;&amp; b[j]) dt[i] -= min(a[j], Q - (sum[j - 1] - sum[i - 1]));\n}\n\nint ans = 1 &lt;&lt; 30;\nfor(int i = 1; i &lt;= cnt; i++)\nans = min(ans, dt[i] + ds_min[i - 1]);\n\nfor(int i = 1, j = 0; i &lt;= cnt; i++) {\nwhile(sum[i] - sum[j] &gt; 2 * Q) j++;\nint temp = sum_bri[j];\nif(j &gt; 0 &amp;&amp; b[j]) temp -= min(a[j], 2 * Q - (sum[i] - sum[j]));\nans = min(ans, temp + sum_bri[cnt] - sum_bri[i]);\n}\ncout &lt;&lt; ans &lt;&lt; endl;\n}\n}\n</code></pre> <pre><code>Tag : \u6709\u5411\u56fe\u7684\u5fc5\u7ecf\u8fb9/DP/\u62d3\u6251\u6392\u5e8f\n</code></pre>"}, {"location": "rec/tricks-for-2022-03/#acwing386", "title": "Acwing386 \u793e\u4ea4\u7f51\u7edc", "text": "<p>\u8981\u6c42\u7684\u5f0f\u5b50\u662f\uff1a</p> \\[I(v) = \\sum\\limits_{s \\not=v,t\\not=v}\\dfrac{C_{s,t}(v)}{C_{s,t}}\\] <p>\u4e0b\u9762\u7684\u662f \\(s \\to t\\) \u7684\u6700\u77ed\u8def\u6761\u6570</p> <p>\u4e0a\u9762\u7684\u662f \\(s\\to t\\) \u7684\u6700\u77ed\u8def\u7ecf\u8fc7 \\(v\\) \u7684\u6761\u6570\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u662f\u6709\u5e8f\u70b9\u5bf9\uff0c\u8981\u7b97\u4e24\u6b21\u3002</p> <p>\u6570\u636e\u8303\u56f4\u662f \\(n = 1e2\\)\u3002</p> <p>\u7136\u540e \\(s\\to v\\to t\\)\uff0c\u52a0\u4e0a\u591a\u6e90\u8be2\u95ee\uff0c\u4e0d\u96be\u60f3\u5230 Floyd \u89e3\u51b3\u3002</p> <p>\u5b9e\u9645\u4e0a\u8981\u505a\u7684\u5c31\u662f\u5728 Floyd \u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\u6700\u77ed\u8def\u8ba1\u6570\u5373\u53ef\u3002</p> <p>\u7136\u540e\u4e0a\u9762\u7684\u90e8\u5206\u53ea\u9700\u8981\u5224\u5b9a \\(dis_{s,v} + dis_{v,t} = dis_{s,t}\\) \u5373\u53ef\u3002</p> <p>\u7136\u540e\u7b54\u6848\u7d2f\u52a0 \\(cnt_{s,v} \\times cnt_{v,t}\\)\u3002</p> Code <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e2 + 10;\n\nint n, m;\nint dis[si][si];\ni64 cnt[si][si];\n\nint main() {\nmemset(dis, 0x3f, sizeof dis);\nmemset(cnt, 0, sizeof cnt);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= m; ++i) {\nint u, v, w;\ncin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\ndis[u][v] = dis[v][u] = min(dis[u][v], w);\ncnt[u][v] = cnt[v][u] = 1;\n}\n\nfor(int i = 1; i &lt;= n; ++i) dis[i][i] = 0;\n\nfor(int k = 1; k &lt;= n; ++k) {\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= n; ++j) {\nif(dis[i][j] &gt; dis[i][k] + dis[k][j]) {\ndis[i][j] = dis[i][k] + dis[k][j];\ncnt[i][j] = 1ll * cnt[i][k] * cnt[k][j];\n}\nelse if(dis[i][j] == dis[i][k] + dis[k][j]) {\ncnt[i][j] += 1ll * cnt[i][k] * cnt[k][j];\n}\n}\n}\n}\nfor(int k = 1; k &lt;= n; ++k) {\ndouble ans = 0.0;\nfor(int i = 1; i &lt;= n; ++i) {\nif(i == k) continue;\nfor(int j = 1; j &lt;= n; ++j) {\n// * s -&gt; t \u4e0d\u4e00\u5b9a\u662f\u65e0\u5e8f\u6570\u5bf9\uff0ct -&gt; s \u4e5f\u53ef\u4ee5\uff0c\u6240\u4ee5\u4e0d\u80fd\u4ece i + 1 \u5f00\u59cb.\nif(i == j || j == k) continue;\nif(dis[i][j] == dis[i][k] + dis[k][j]) {\nans += ((1.0 * (cnt[i][k] * cnt[k][j])) / (1.0 * cnt[i][j]));\n}\n// ! \u60e8\u75db\u6559\u8bad \uff1a\u6709\u9664\u6cd5\u4e14 1.0 \u00d7 \u67d0\u4e2a\u6570\u7684\u65f6\u5019\u8981\u7528\u62ec\u53f7\u62ec\u8d77\u6765\uff0c\u4e0d\u7136\u4f1a /1.0 \u7136\u540e\u4e58\u4e0a\u539f\u6765\u8981\u9664\u7684\u6570\u3002\n}\n}\nprintf(\"%.3lf\\n\", ans);\n}\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u6700\u77ed\u8def\u8ba1\u6570/\u7ecf\u8fc7\u6307\u5b9a\u70b9\u6700\u77ed\u8def\u8ba1\u6570\n</code></pre>"}, {"location": "rec/tricks-for-2022-03/#acwing389", "title": "*Acwing389 \u76f4\u5f84", "text": "<p>\u6c42\u6811\u7684\u76f4\u5f84\u7684\u5fc5\u7ecf\u8fb9\u3002</p> <p>\u53d1\u73b0\u8981\u6c42\u7684\u5c31\u662f\u6240\u6709\u76f4\u5f84\u7684\u516c\u5171\u8fb9\u3002</p> <p>\u53ef\u4ee5\u5148\u6c42\u51fa\u76f4\u5f84\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u4e24\u6761\u76f4\u5f84\u7684\u4ea4\u70b9\u3002</p> <p>\u7136\u540e\u5206\u522b\u627e\u6240\u6709\u4ea4\u70b9\u70b9\u5bf9\u91cc\u9762\u6700\u9760\u4e2d\u95f4\u7684\u4e00\u5bf9\u5c31\u884c\u4e86\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u66f4\u597d\u7684\u505a\u6cd5\u3002</p> <p>\\(dfs\\) \u8bb0\u5f55\u5f53\u524d\u8def\u5f84\u4e0a\u7684\u516c\u5171\u8fb9\u6761\u6570\u3002</p> <p>\u8bb0 \\(las\\) \u8868\u793a\u6700\u540e\u4f7f\u76f4\u5f84\u66f4\u65b0\u7684\u8282\u70b9\u3002</p> <p>\u7136\u540e\u5982\u679c\u51fa\u73b0\u7c7b\u4f3c \\(d[u] = x, d[v1] + w1 = y, d[v2] + w2 = y\\) \u7684\u60c5\u51b5</p> <p>\u5047\u8bbe \\(v1\\) \u662f\u66f4\u5148\u8bbf\u95ee\u7684\uff0c </p> <ol> <li>\u5982\u679c \\(x &gt; y\\), \u90a3\u4e48\u9700\u8981\u628a \\(u -&gt; v1 -&gt; subtree(v1)\\) \u5f53\u4e2d\u7684\u8fb9\u4ece \\(cnt\\) \u91cc\u51cf\u53bb \u3002</li> <li>\u5982\u679c \\(x \\le y\\), \u90a3\u4e48\u9700\u8981\u628a \\(d[u]\\) \u5f80\u4e0b\u8d70\u5bf9\u5e94\u7684\u8fb9\u4ece \\(cnt\\) \u91cc\u51cf\u53bb\u3002</li> </ol> Code <pre><code>#include &lt;queue&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\n\nint n, m, cnt, las;\nvector&lt;pair&lt;int, int&gt; &gt; G[si];\ni64 d[si], ans;\n\nint dfs(int u, int fa, int dep) {\nint res = dep;\n// * ans = \u76f4\u5f84\u957f\u5ea6\n// * cnt = \u516c\u5171\u8fb9\u6761\u6570\uff08\u6700\u7ec8\u7b54\u6848\uff09\nfor(auto &amp;[v, w] : G[u]) {\nif(v == fa) continue;\nint cur = dfs(v, u, dep + 1);\nif(ans &lt; d[u] + d[v] + w) {\nans = d[u] + d[v] + w, las = dep, cnt = res + cur - dep * 2;\n// ? \u76f4\u5f84\u88ab\u66f4\u65b0\uff0c\u8bb0\u5f55 las \u5e76\u66f4\u65b0 cnt\u3002\n}\nelse if(ans == d[u] + d[v] + w) {\nif(d[v] + w &gt;= d[u]) {\ncnt = cur - las; }   else {\ncnt = res - las;\n}               // ? \u51fa\u73b0\u7c7b\u4f3c d[u] = x, d[v1] + w1 = y, d[v2] + w2 = y \u7684\u60c5\u51b5\n// ? \u5047\u8bbe v1 \u662f\u66f4\u5148\u8bbf\u95ee\u7684\uff0c\n// ? 1. \u5982\u679c x &gt; y, \u90a3\u4e48\u9700\u8981\u628a u -&gt; v1 -&gt; subtree(v1) \u5f53\u4e2d\u7684\u8fb9\u4ece cnt \u91cc\u51cf\u53bb \n// ? 2. \u5982\u679c x &lt;= y, \u90a3\u4e48\u9700\u8981\u628a d[u] \u5f80\u4e0b\u8d70\u5bf9\u5e94\u7684\u8fb9\u4ece cnt \u91cc\u51cf\u53bb\u3002\n\n// * cur \u662f 2 \u5bf9\u5e94\u7684\u3002\n// * res \u662f 1 \u5bf9\u5e94\u7684\u3002\n// TODO : \u5177\u4f53\u7684\u53ef\u80fd\u8fd8\u8981\u5206\u6790\u4e00\u4e0b    \n}\nif(d[u] &lt; d[v] + w) {\nd[u] = d[v] + w, res = cur;\n}\nelse if(d[u] == d[v] + w) {\nres = dep;\n}\n} return res;\n// ? \u5f53\u524d\u5206\u652f\u7684\u516c\u5171\u8fb9\u957f\u5ea6\u3002\n}\n\nint main() {\ncin &gt;&gt; n;\nfor(int i = 1; i &lt; n; ++i) {\nint u, v, w; cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;\nG[u].emplace_back(v, w); G[v].emplace_back(u, w);\n}\ndfs(1, 0, 1); cout &lt;&lt; ans &lt;&lt; endl &lt;&lt; cnt &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/tricks-for-2022-03/#acwing390", "title": "Acwing390 \u9003\u5b66\u7684\u5c0f\u5b69", "text": "<p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b54\u6848\u5c31\u662f\u679a\u4e3e\u76f4\u5f84\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u51fa\u53d1\u70b9\u7684\u7b54\u6848\u7684\u6700\u5927\u503c\u3002</p> <p>\u90a3\u4e48\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u6c42\u5b8c LCA \u4e4b\u540e\uff0c\u5982\u679c\u6811\u662f\u5e26\u6743\u7684\uff0c\u8be5\u5982\u4f55\u5feb\u901f\u8be2\u95ee\u6811\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1f</p> <p>\u4ecd\u65e7\u662f\u500d\u589e\uff0c\u968f\u7740\u500d\u589e LCA \u7684 \\(f_{i,j}\\) \u540c\u6b65\u8bb0\u5f55\u4e00\u4e2a \\(dis_{i,j}\\) \u5373\u53ef\uff0c\u67e5\u8be2\u65f6\u505a\u4e00\u904d\u8df3 LCA \u7684\u8fc7\u7a0b\uff0c</p> <p>\u6bcf\u6b21\u4ece \\(u/v\\) \u5f80\u4e0a\u8df3 \\(2^i\\) \u6b65\u7684\u65f6\u5019\uff0c\u90fd\u8ba9\u7b54\u6848\u7d2f\u52a0\u4e0a \\(dis_{u/v,i}\\) \u5373\u53ef\u3002</p> <p>Warning</p> <p>\u6ce8\u610f\uff0c\u8981\u5148\u7d2f\u52a0\u6743\u503c\u4e4b\u540e\u518d\u8df3\uff0c\u4e0d\u7136\u4f1a\u51fa\u95ee\u9898\u3002</p> <p>\u8fd9\u79cd\u7c7b\u4f3c\u7684\u601d\u60f3\u4e5f\u53ef\u4ee5\u5728\u6b21\u5c0f\u751f\u6210\u6811\u91cc\u9762\u4f53\u73b0\uff0c\u540c\u6b65\u8bb0\u5f55 \\(u\\) \u5230 \\(2^i\\) \u7ea7\u7956\u5148\u8def\u5f84\u4e0a\u7684\u6700\u503c/\u6b21\u6700\u503c\u3002</p> <p>\u7136\u540e\u7528\u7c7b\u4f3c\u8df3 LCA \u7684\u65b9\u5f0f\u6c42\u4efb\u610f\u4e24\u70b9 \\((u,v)\\) \u7684\u8def\u5f84\u4e0a\u7684\u6700\u503c/\u6b21\u6700\u503c\u3002</p> <p>\u4ee3\u7801\uff08\u6b64\u5904\u5e76\u6ca1\u6709\u540c\u6b65\u8bb0\u5f55 \\(dis\\)\uff0c\u800c\u662f\u5148\u6c42\u51fa\u6240\u6709\u7684 \\(f\\)\uff0c\u7136\u540e\u518d\u6c42 \\(dis\\)\uff09\uff1a</p> Code <pre><code>int dep[si], f[si][20], lg;\ni64 dis[si][20];\nvoid dfs(int u, int fa) {\ndep[u] = dep[fa] + 1, f[u][0] = fa;\nfor(int i = 1; i &lt;= lg; ++i) f[u][i] = f[f[u][i - 1]][i - 1];\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver, w = e[i].w;\nif(v == fa) continue;\ndfs(v, u), dis[v][0] = w;\n// \u521d\u59cb\u5316 dis\u3002\n// \u5982\u679c\u4f60\u662f\u5728dfs \u8fc7\u7a0b\u4e2d\u540c\u6b65\u8bb0\u5f55\uff0c\u9700\u8981\u5148 dis[v][0] = w \u7136\u540e\u518d dfs\u3002\n}\n}\ni64 Dis(int u, int v) {\ni64 ret = 0;\nif(dep[u] &lt; dep[v]) swap(u, v);\nfor(int i = lg; i &gt;= 0; --i) { if(dep[f[u][i]] &gt;= dep[v]) ret += dis[u][i], u = f[u][i];\n}\nif(u == v) return ret;\nfor(int i = lg; i &gt;= 0; --i) {\nif(f[u][i] != f[v][i])\nret += dis[u][i], ret += dis[v][i],\nu = f[u][i], v = f[v][i];\n// \u4e00\u5b9a\u8981\u5148\u52a0\u4e0a\u7136\u540e\u518d\u8df3\uff01\uff01\uff01\uff01\uff01\n// \u65f6\u9694\u4e00\u4e2a\u6708\u5199\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811\u7684\u65f6\u5019\uff0c\n// \u53d1\u73b0\u81ea\u5df1\u4ee3\u7801\u91cc\u6709\u8fd9\u4e2a\u95ee\u9898\n\n}\nreturn ret + dis[u][0] + dis[v][0];\n// \u6700\u540e\u8fd8\u6ca1\u6709\u4f1a\u5408\uff0c\u4e0d\u8981\u5fd8\u8bb0\u52a0\u5b83\u4eec\u5230 lca \u7684\u6743\u503c\u3002\n}\n\n// in main()\nlg = (int)(log(n) / log(2)) + 1;\ndfs(1, 0);\nfor(int j = 1; j &lt;= lg; ++j) {\nfor(int i = 1; i &lt;= n; ++i) {\ndis[i][j] = dis[i][j - 1] + dis[f[i][j - 1]][j - 1];\n// \u4ece\u4e24\u4e2a\u5c0f\u6bb5\u7684\u4fe1\u606f\u5408\u5e76\u5230\u5927\u6bb5\u7684\u4fe1\u606f\u3002\n}\n}\n</code></pre> \u53e6\u5916\u4e00\u79cd\u505a\u6cd5 <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u8bb0\u5f55\u4e24\u4e2a \\(dep\\) \uff0c\u4e00\u4e2a\u662f\u628a\u6811\u770b\u4f5c\u65e0\u6743\u6811\u65f6\u5019\u7684 \\(dep\\) \uff0c\u53e6\u5916\u4e00\u4e2a\u662f\u628a\u6811\u770b\u4f5c\u5e26\u6743\u6811\u65f6\u5019\u7684 \\(dep\\)\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u7ee7\u7eed\u7528 \\(d[u] + d[v] - 2d[lca]\\) \u4e86\u3002</p> <pre><code>Tag \uff1a\u6811\u7684\u76f4\u5f84/\u5e26\u6743\u6811\u4e0a\u70b9\u5bf9\u8ddd\u79bb\n</code></pre>"}, {"location": "rec/tricks-for-2022-04/", "title": "2022\u5e744\u6708\u7ec3\u4e60\u8bb0\u5f55", "text": ""}, {"location": "rec/tricks-for-2022-04/#tricks", "title": "\u56db\u6708 Tricks \u6574\u7406", "text": ""}, {"location": "rec/tricks-for-2022-04/#acwing272", "title": "Acwing272 \u6700\u957f\u516c\u5171\u4e0a\u5347\u5b50\u5e8f\u5217", "text": "<p>\u6c42\u4e24\u4e2a\u5e8f\u5217 \\(a,b\\) \u7684\u6700\u957f\u516c\u5171\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p> <p>\\(1\\le n \\le 3000\\)</p> <p>\u8fd9\u9898\u662f LIS \u548c LCS \u7684\u7efc\u5408\u3002</p> <p>\u9996\u5148\u8003\u8651\u7c7b\u4f3c LCS \u8bbe\u8ba1\u8fd9\u6837\u4e00\u4e2a\u72b6\u6001 \uff1a \\(dp_{i,j}\\) \u8868\u793a \\(a[1 \\sim i],b[1 \\sim j]\\) \u6784\u6210\u7684\u6240\u6709 LCIS\uff0c\u5c5e\u6027\u4e3a \\(\\max\\)\u3002</p> <p>\u4f46\u662f\u53d1\u73b0\u8fd9\u6837\u65e0\u6cd5\u5904\u7406 \u201c\u4e0a\u5347\u201d \u8fd9\u4e00\u8981\u7d20\uff0c\u6240\u4ee5\u8003\u8651\u589e\u52a0\u8981\u7d20\u3002</p> <p>\u8bbe \\(dp_{i,j}\\) \u8868\u793a \\(a[1 \\sim i],b[1\\sim j]\\) \u6784\u6210\u7684\uff0c\u4ee5 \\(b_j\\) \u7ed3\u5c3e\u7684\u6240\u6709 LCIS\uff0c\u5c5e\u6027\u4e3a \\(\\max\\)\u3002</p> <p>\u7136\u540e\u8003\u8651\u5212\u5206 \\(dp_{i,j}\\) \u8fd9\u4e2a\u5b50\u96c6\u3002</p> <p>\u7c7b\u4f3c LCS \u7684\u5212\u5206\u65b9\u5f0f\uff0c\u628a \\(dp_{i,j}\\) \u5212\u5206\u6210\u4e24\u4e2a\u53ef\u4ee5\u8f6c\u79fb\u5230\u5b83\u7684\u90e8\u5206\uff1a</p> <ul> <li>\u201c\u5305\u542b \\(a_i\\) \u7684\u7531 \\(a[1 \\sim i],b[1\\sim j]\\) \u6784\u6210\u7684\uff0c\u4ee5 \\(b_j\\) \u7ed3\u5c3e\u7684\u6240\u6709 LCIS\u201d\u3002</li> <li>\u201c\u4e0d\u5305\u542b \\(a_i\\) \u7684\u7531 \\(a[1 \\sim i],b[1\\sim j]\\) \u6784\u6210\u7684\uff0c\u4ee5 \\(b_j\\) \u7ed3\u5c3e\u7684\u6240\u6709 LCIS\u201d\u3002</li> </ul> <p>\u7b2c\u4e00\u79cd\u5728 \\(a_i = b_j\\) \u65f6\u8f6c\u79fb\uff0c\u7b2c\u4e8c\u79cd\u5728 \\(a_i \\not= b_j\\) \u65f6\u8f6c\u79fb\u3002</p> <p>\u7136\u540e\u8003\u8651\u7528\u4e00\u4e2a\u72b6\u6001\u6765\u5206\u522b\u8868\u793a\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u90e8\u5206\u5b9e\u9645\u4e0a\u662f\u4ece \\(a[1 \\sim i]\\) \u5f53\u4e2d\u53bb\u9664 \\(a_i\\)\uff0c\u6240\u4ee5\u662f\u7531 \\(a[1 \\sim i-1],b[i \\sim j]\\) \u6784\u6210\uff0c\u4ee5 \\(b_j\\) \u7ed3\u5c3e\u7684 LCIS\uff0c\u53ef\u4ee5\u7528 \\(dp_{i-1,j}\\) \u8868\u793a\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u7b2c\u4e00\u4e2a\u90e8\u5206\u627e\u4e0d\u5230\u4e00\u4e2a\u76f4\u63a5\u7684\u72b6\u6001\u6765\u8868\u793a\uff0c\u6240\u4ee5\u7ee7\u7eed\u5212\u5206\u3002</p> <p>\u9996\u5148\u56e0\u4e3a \\(a_i = b_j\\) \uff0c\u6240\u4ee5\u5b50\u96c6\u7684\u7b2c\u4e00\u7ef4\u4e0d\u80fd\u53d6\u5230 \\(i\\)\uff0c\u7b2c\u4e8c\u7ef4\u4e0d\u80fd\u53d6\u5230 \\(j\\)\u3002</p> <p>\u800c\u72b6\u6001\u8bbe\u8ba1\u4e2d\uff0cLIS \u7684\u8981\u7d20\u4f53\u73b0\u5728 \u201c\u4ee5 \\(b_j\\) \u7ed3\u5c3e\u201d\uff0c\u6240\u4ee5\u8003\u8651\u628a\u8fd9\u4e2a\u5b50\u96c6\u7528\u7c7b\u4f3c LIS \u7684\u65b9\u5f0f\u5212\u5206\u3002</p> <p>\u53d1\u73b0\u5305\u542b \\(a_i\\)\uff0c\u4ee5 \\(b_j\\) \u7ed3\u5c3e\u7684 LCIS \u90fd\u957f\u6210\u8fd9\u6837\uff1a</p> \\[\\begin{matrix}\\dots,las_1,a_i/b_j \\\\ \\dots,las_2,a_i/b_j\\end{matrix}\\] <p>\u53d1\u73b0 \u201d\u6700\u540e\u4e00\u4e2a\u4e0d\u540c\u70b9\u201c \u5c31\u662f\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20 \\(las\\)\u3002</p> <p>\u6240\u4ee5\u679a\u4e3e \\(b\\) \u7684\u4e0a\u4e00\u4e2a\u5143\u7d20 \\(las\\)\uff0c\u5373\u662f\u628a\u8fd9\u4e2a\u5b50\u96c6\u5212\u5206\u6210 \\(dp_{i-1,k},(0 \\le k &lt;j)\\)\u3002</p> <p>\uff08\u56fe\u4e2d\u6f0f\u5199\u4e86 \u201d\u6240\u6709\u201c \u4e8c\u5b57\uff09</p> <p></p> <p>\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[dp_{i,j} = \\begin{cases}dp_{i-1,j} &amp; a_i \\not= b_j \\\\ \\min\\limits_{0 \\le k &lt; j}\\{dp_{i-1,k}\\} + 1 &amp; a_i = b_j\\end{cases}\\] <p>\u53d1\u73b0\u65b9\u7a0b\u662f \\(\\text{O}(n^3)\\) \u7684\uff0c\u4f46\u662f\u53d1\u73b0\uff0c\u5f53 \\(i\\) \u56fa\u5b9a\u7684\u65f6\u5019\uff0c\\(j\\) \u589e\u52a0 \\(1\\) \uff0c\u90a3\u4e48 \\(dp_{i-1,k}\\) \u7684\u201c\u5019\u9009\u96c6\u5408\u201d\u53ea\u4f1a\u589e\u52a0\u4e00\u4e2a\u5143\u7d20 \\(dp_{i-1,j-1}\\)\u3002</p> <p>\u800c\u6b64\u5904\u6c42\u5f97\u662f\u201c\u5019\u9009\u96c6\u5408\u201d\u5f53\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u62ff\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u5f53\u524d\u7684\u5019\u9009\u96c6\u5408\u7684\u6700\u5c0f\u503c\uff0c\u76f4\u63a5\u5229\u7528\u8fd9\u4e2a\u53d8\u91cf\u8f6c\u79fb\u5373\u53ef\u3002</p> Code <pre><code>f[0][0] = a[0] = b[0] = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nint cand = 0;\nif(b[0] &lt; a[i]) cand = f[i - 1][0]; // \u521d\u59cb\u5728\u51b3\u7b56\u5019\u9009\u96c6\u5408\u4e2d\u7684\u6570\u3002\nfor(int j = 1; j &lt;= n; ++j) {\nif(a[i] == b[j]) f[i][j] = cand + 1;\nelse\nf[i][j] = f[i - 1][j];\nif(b[j] &lt; a[i]) cand = max(cand, f[i - 1][j]);\n}\n}\nint res = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nres = max(f[n][i], res);\n}\n</code></pre> <p>Tricks</p> <ol> <li> <p>\u5982\u679c\u5212\u5206\u72b6\u6001\u96c6\u5408\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u5f53\u524d\u96c6\u5408\u65e0\u6cd5\u4f7f\u7528\u4e00\u4e2a\u72b6\u6001\u76f4\u63a5\u8868\u793a\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7ee7\u7eed\u5212\u5206\u6216\u8005\u6dfb\u52a0\u8981\u7d20\u3002</p> </li> <li> <p>\u5982\u679c\u7528\u4e8e \u201c\u51b3\u7b56\u201d \u7684 \u201c\u5019\u9009\u96c6\u5408\u201d \u5728\u5916\u5c42\u5faa\u73af\u56fa\u5b9a\uff0c\u5185\u5c42\u5faa\u73af\u589e\u52a0\u65f6\u5143\u7d20\u4e2a\u6570 \u201c\u53ea\u589e\u591a\u4e0d\u51cf\u5c11\u201d\uff0c\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u6700\u4f18\u51b3\u7b56\u3002</p> </li> <li> <p>\u4e0d\u7ba1\u662f\u4e0d\u662f\u6b63\u89e3\uff0c\u5148\u6253\u51fa\u6b63\u786e\u7684\u90e8\u5206\u5206\u66b4\u529b\uff0c\u518d\u8003\u8651\u662f\u5426\u53ef\u4ee5\u4f18\u5316\u6210\u66f4\u4f18\u7684\u89e3\u6cd5\u3002</p> </li> </ol> <pre><code>Tag : DP/LCS\n</code></pre>"}, {"location": "rec/tricks-for-2022-04/#acwing274-mobile-service", "title": "Acwing274 Mobile service", "text": "<p>\u4e00\u4e2a\u516c\u53f8\u6709\u4e09\u4e2a\u79fb\u52a8\u670d\u52a1\u5458\uff0c\u6700\u521d\u5206\u522b\u5728\u4f4d\u7f6e \\(1\uff0c2\uff0c3\\) \u5904\u3002</p> <p>\u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e\uff08\u7528\u4e00\u4e2a\u6574\u6570\u8868\u793a\uff09\u6709\u4e00\u4e2a\u8bf7\u6c42\uff0c\u90a3\u4e48\u516c\u53f8\u5fc5\u987b\u6307\u6d3e\u67d0\u540d\u5458\u5de5\u8d76\u5230\u90a3\u4e2a\u5730\u65b9\u53bb\u3002</p> <p>\u67d0\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u5458\u5de5\u80fd\u79fb\u52a8\uff0c\u4e14\u4e0d\u5141\u8bb8\u5728\u540c\u6837\u7684\u4f4d\u7f6e\u51fa\u73b0\u4e24\u4e2a\u5458\u5de5\u3002</p> <p>\u4ece \\(p\\) \u5230 \\(q\\) \u79fb\u52a8\u4e00\u4e2a\u5458\u5de5\uff0c\u9700\u8981\u82b1\u8d39 \\(c(p,q)\\)\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u4e0d\u4e00\u5b9a\u5bf9\u79f0\uff0c\u4f46\u4fdd\u8bc1 \\(c(p,p)=0\\)\u3002</p> <p>\u7ed9\u51fa \\(N\\) \u4e2a\u8bf7\u6c42\uff0c\u8bf7\u6c42\u53d1\u751f\u7684\u4f4d\u7f6e\u5206\u522b\u4e3a \\(p_1 \\sim p_N\\)\u3002</p> <p>\u516c\u53f8\u5fc5\u987b\u6309\u987a\u5e8f\u4f9d\u6b21\u6ee1\u8db3\u6240\u6709\u8bf7\u6c42\uff0c\u4e14\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u53bb\u5176\u4ed6\u989d\u5916\u7684\u4f4d\u7f6e\uff0c\u76ee\u6807\u662f\u6700\u5c0f\u5316\u516c\u53f8\u82b1\u8d39\uff0c\u8bf7\u4f60\u5e2e\u5fd9\u8ba1\u7b97\u8fd9\u4e2a\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\\(1\\le L \\le 200, 1\\le N \\le 3000\\)\u3002</p> <p>\u9996\u5148\u8003\u8651\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u72b6\u6001\u8bbe\u8ba1\uff1a\u8bbe \\(dp_i\\) \u8868\u793a\u5904\u7406\u5b8c\u524d \\(i\\) \u4e2a\u8bf7\u6c42\uff0c\u516c\u53f8\u7684\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u6839\u672c\u65e0\u6cd5\u8f6c\u79fb\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u6bcf\u4e2a\u5458\u5de5\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u5728\u54ea\u91cc\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u6dfb\u52a0\u989d\u5916\u7684\u7ef4\u5ea6\u6765\u8bb0\u5f55\u4e09\u4e2a\u5458\u5de5\u7684\u4f4d\u7f6e\u3002</p> <p>\u8bbe \\(dp_{i,x,y,z}\\) \u8868\u793a\u5904\u7406\u5b8c\u524d \\(i\\) \u4e2a\u8bf7\u6c42\uff0c\u7b2c\u4e00\u4e8c\u4e09\u4e2a\u5458\u5de5\u5206\u522b\u5728 \\(x,y,z\\) \u5904\uff0c\u516c\u53f8\u5f53\u524d\u7684\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\u7136\u540e\u8003\u8651\u5bf9\u8fd9\u4e2a\u72b6\u6001\u96c6\u5408\u8fdb\u884c\u5212\u5206\u3002</p> <p>\u56e0\u4e3a\u72b6\u6001\u662f\u201c\u5904\u7406\u5b8c\u201d\uff0c\u6240\u4ee5\u5f53\u524d\u77e5\u9053\u7684\u4fe1\u606f\u662f\u6700\u7ec8\u7684\u4f4d\u7f6e\uff0c\u4e0d\u4fbf\u4e8e\u627e\u51fa\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4e0d\u662f\u4ece \\(i - 1\\) \u8f6c\u79fb\u5230\u5f53\u524d\u72b6\u6001\uff0c\u800c\u662f\u4ece\u5f53\u524d\u72b6\u6001\u987a\u63a8\u66f4\u65b0 \\(i+1\\)\u3002</p> <p>\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5458\u5de5\u53bb\u5904\u7406 \\(p_{i+1}\\) \u7684\u60c5\u51b5\u5373\u53ef\u3002</p> <p>\u4f46\u662f\u8f6c\u79fb\u4e4b\u524d\u8981\u5224\u5408\u6cd5\u6027\uff0c\u8981\u6c42 \\(x \\not=y\\not=z\\)\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u7a7a\u95f4\u660e\u663e\u4f1a\u7206\u70b8\uff0c\u8003\u8651\u4f18\u5316\u3002</p> <p>\u56e0\u4e3a\u5904\u7406\u5b8c \\(p_i\\) \u4e4b\u540e\uff0c\u5728\u5408\u6cd5\u7684\u72b6\u6001\u4e0b\uff0c\\(x,y,z\\) \u5f53\u4e2d\u5fc5\u7136\u6709\u4e00\u4e2a\u7b49\u4e8e \\(p_i\\)\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u7701\u53bb\u4e00\u7ef4\uff0c\u8bbe \\(dp_{i,x,y}\\) \u8868\u793a\u5176\u4e2d\u4e00\u4e2a\u4f4d\u4e8e \\(p_i\\)\uff0c\u53e6\u5916\u4e24\u4e2a\u4f4d\u4e8e \\(x,y\\) \u3002</p> <p>\u7136\u540e\u7528\u7c7b\u4f3c\u7684\u65b9\u5f0f\u8f6c\u79fb\u5373\u53ef\u3002</p> Code <pre><code>memset(dp, 0x3f, sizeof dp);\ndp[0][1][2] = 0, p[0] = 3;\nfor(int i = 0; i &lt;= n; ++i) {\nfor(int x = 1; x &lt;= l; ++x) {\nfor(int y = 1; y &lt;= l; ++y) {\nif(x == y || x == p[i] || y == p[i]) continue;\ndp[i + 1][x][y] = min(dp[i + 1][x][y], dp[i][x][y] + c[p[i]][p[i + 1]]);\ndp[i + 1][p[i]][y] = min(dp[i + 1][p[i]][y], dp[i][x][y] + c[x][p[i + 1]]);\ndp[i + 1][x][p[i]] = min(dp[i + 1][x][p[i]], dp[i][x][y] + c[y][p[i + 1]]);\n}\n}\n}\nint res = 0x3f3f3f3f;\nfor(int x = 1; x &lt;= l; ++x) {\nfor(int y = 1; y &lt;= l; ++y) {\nif(x == y || x == p[n] || y == p[n]) continue;\nres = min(res, dp[n][x][y]);\n}\n}\ncout &lt;&lt; res &lt;&lt; endl;\n</code></pre> <p>\u672c\u9898\u7684\u8f6c\u79fb\u65b9\u5f0f\u76f8\u5f53\u4e8e\u6c42\u5f53\u524d\u96c6\u5408\u662f\u54ea\u51e0\u4e2a\u72b6\u6001\u7684\u5b50\u96c6\uff0c\u7136\u540e\u628a\u5f53\u524d\u96c6\u5408\u8f6c\u79fb\u5230\u5bf9\u5e94\u7684\u5927\u96c6\u5408\u4e2d\u3002</p> <p>Tricks</p> <ol> <li> <p>\u5f53 \u201c\u9636\u6bb5\u201d \u7c7b\u7684\u4fe1\u606f\u7ef4\u5ea6\u65e0\u6cd5\u8868\u793a\u5f53\u524d\u72b6\u6001\uff0c\u6216\u8005\u65e0\u6cd5\u8fdb\u884c\u5212\u5206\u8f6c\u79fb\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u6dfb\u52a0\u989d\u5916\u7684\u4fe1\u606f\u7ef4\u5ea6\u3002</p> </li> <li> <p>** \u5f53 \u201c\u9636\u6bb5\u201d \u603b\u662f\u4ece\u4e00\u4e2a\u9636\u6bb5\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u9636\u6bb5\uff0c\u53ef\u4ee5\u4e0d\u7528\u7ba1\u9644\u52a0\u4fe1\u606f\u7ef4\u5ea6\u7684\u5927\u5c0f\u53d8\u5316\u60c5\u51b5\uff0c\u56e0\u4e3a\u65e0\u540e\u6548\u6027\u5df2\u7ecf\u7531\u9636\u6bb5\u89e3\u51b3\u4e86\u3002</p> </li> <li> <p>** \u5982\u679c\u9009\u62e9\u7684\u4fe1\u606f\u7ef4\u5ea6\u8fc7\u591a\uff0c\u53ef\u4ee5\u8003\u8651\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u76f8\u4e92\u5f97\u5230\uff0c\u6bd4\u5982\u672c\u9898\uff0c\u77e5\u9053\u53e6\u5916\u4e24\u4e2a\u5458\u5de5\u7684\u4f4d\u7f6e\uff0c\u5c31\u4e00\u5b9a\u80fd\u77e5\u9053\u53e6\u5916\u4e00\u4e2a\u5458\u5de5\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4e24\u4e2a\u5458\u5de5\u7684\u4f4d\u7f6e\u4fe1\u606f\u5373\u53ef\u8986\u76d6\u6574\u4e2a\u72b6\u6001\u7a7a\u95f4\u3002</p> </li> </ol> <pre><code>Tag : DP\n</code></pre>"}, {"location": "rec/tricks-for-2022-04/#acwing284", "title": "Acwing284 \u91d1\u5b57\u5854", "text": "<p>\u91d1\u5b57\u5854\u7531\u82e5\u5e72\u623f\u95f4\u7ec4\u6210\uff0c\u623f\u95f4\u4e4b\u95f4\u8fde\u6709\u901a\u9053\u3002</p> <p>\u5982\u679c\u628a\u623f\u95f4\u770b\u4f5c\u8282\u70b9\uff0c\u901a\u9053\u770b\u4f5c\u8fb9\u7684\u8bdd\uff0c\u6574\u4e2a\u91d1\u5b57\u5854\u5448\u73b0\u4e00\u4e2a\u6709\u6839\u6811\u7ed3\u6784\uff0c\u8282\u70b9\u7684\u5b50\u6811\u4e4b\u95f4\u6709\u5e8f\uff0c\u91d1\u5b57\u5854\u6709\u552f\u4e00\u7684\u4e00\u4e2a\u5165\u53e3\u901a\u5411\u6811\u6839\u3002</p> <p>\u5e76\u4e14\uff0c\u6bcf\u4e2a\u623f\u95f4\u7684\u5899\u58c1\u90fd\u6d82\u6709\u82e5\u5e72\u79cd\u989c\u8272\u7684\u4e00\u79cd\u3002</p> <p>\u673a\u5668\u4eba\u4f1a\u4ece\u5165\u53e3\u8fdb\u5165\u91d1\u5b57\u5854\uff0c\u4e4b\u540e\u5bf9\u91d1\u5b57\u5854\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u3002</p> <p>\u673a\u5668\u4eba\u6bcf\u8fdb\u5165\u4e00\u4e2a\u623f\u95f4\uff08\u65e0\u8bba\u662f\u7b2c\u4e00\u6b21\u8fdb\u5165\u8fd8\u662f\u8fd4\u56de\uff09\uff0c\u90fd\u4f1a\u8bb0\u5f55\u8fd9\u4e2a\u623f\u95f4\u7684\u989c\u8272\u3002</p> <p>\u6700\u540e\uff0c\u673a\u5668\u4eba\u4f1a\u4ece\u5165\u53e3\u9000\u51fa\u91d1\u5b57\u5854\u3002</p> <p>\u663e\u7136\uff0c\u673a\u5668\u4eba\u4f1a\u8bbf\u95ee\u6bcf\u4e2a\u623f\u95f4\u81f3\u5c11\u4e00\u6b21\uff0c\u5e76\u4e14\u7a7f\u8d8a\u6bcf\u6761\u901a\u9053\u6070\u597d\u4e24\u6b21\uff08\u4e24\u4e2a\u65b9\u5411\u5404\u4e00\u6b21\uff09\uff0c \u7136\u540e\uff0c\u673a\u5668\u4eba\u4f1a\u5f97\u5230\u4e00\u4e2a\u989c\u8272\u5e8f\u5217 \\(S\\)\u3002</p> <p>\u4f46\u662f\uff0c\u63a2\u9669\u961f\u5458\u53d1\u73b0\u8fd9\u4e2a\u989c\u8272\u5e8f\u5217\u5e76\u4e0d\u80fd\u552f\u4e00\u786e\u5b9a\u91d1\u5b57\u5854\u7684\u7ed3\u6784\u3002</p> <p>\u73b0\u5728\u4ed6\u4eec\u60f3\u8bf7\u4f60\u5e2e\u52a9\u4ed6\u4eec\u8ba1\u7b97\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u989c\u8272\u5e8f\u5217\uff0c\u6709\u591a\u5c11\u79cd\u53ef\u80fd\u7684\u7ed3\u6784\u4f1a\u5f97\u5230\u8fd9\u4e2a\u5e8f\u5217\u3002</p> <p>\u56e0\u4e3a\u7ed3\u679c\u53ef\u80fd\u4f1a\u975e\u5e38\u5927\uff0c\u4f60\u53ea\u9700\u8981\u8f93\u51fa\u7b54\u6848\u5bf9\\(10^9\\) \u53d6\u6a21\u4e4b\u540e\u7684\u503c\u3002</p> <p>\\(|S| \\le 3000\\)</p> <p>\u770b\u5230\u8fd9\u79cd\u7c7b DFS \u5e8f\uff0c\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a Trick\uff1a\u4e00\u9897\u5b50\u6811\u5185\u7684 DFS \u5e8f\u5fc5\u7136\u8fde\u7eed\uff0c\u8fd9\u79cd\u7c7b DFS \u5e8f\u4e5f\u662f\u4e00\u6837\u3002</p> <p>\u53d1\u73b0\u95ee\u9898\u662f\u7531\u591a\u5c11\u79cd\u53ef\u80fd\u5e8f\u5217\uff0c\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a\u533a\u95f4 DP \u7684\u72b6\u6001\uff1a</p> <p>\u8bbe \\(dp_{l,r}\\) \u8868\u793a \\(S_{l\\sim r}\\) \u8fd9\u4e00\u6bb5\u989c\u8272\u5e8f\u5217\u8868\u793a\u7684\u5b50\u6811\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u6784\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u6570\u91cf\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\\(dp_{l,r}\\) \u662f\u5408\u6cd5\u72b6\u6001\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(r-l+1 \\equiv1(\\operatorname{mod} 2)\\) \u4e14 \\(S_l = S_r\\)\u3002</p> <p>\u5148\u6392\u9664\u6389\u6240\u6709\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\uff0c\u5373\u662f\u5faa\u73af\u65f6 \\(len = 1,3,5,\\dots\\)\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\\(S_l,S_r\\) \u4ee3\u8868\u7684\u8282\u70b9\u5fc5\u7136\u662f\u540c\u4e00\u4e2a\uff0c\u5c31\u662f\u8fd9\u6bb5 DFS \u5e8f\u8fde\u7eed\u7684\u5b50\u6811\u7684\u6839\uff08\u8fdb\u53bb\u518d\u51fa\u6765\uff09\u3002</p> <p>\u90a3\u4e48\u4e00\u4e2a\u7ecf\u5178\u7684\u6839\u636e\u4e58\u6cd5\u539f\u7406\u7684\u8ba1\u6570\u6cd5\u5c31\u662f\uff0c\u679a\u4e3e\u8fd9\u4e2a\u8282\u70b9\u7684\u6240\u6709\u513f\u5b50\u8282\u70b9\uff0c\u5c06\u4ee5\u513f\u5b50\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684 DP \u503c\u5168\u90e8\u4e58\u8d77\u6765\u5f97\u5230\u5f53\u524d\u7684\u7b54\u6848\u3002</p> <p>\u53ea\u9700\u8981\u679a\u4e3e\u6240\u6709\u5212\u5206\u70b9\u7684\u4f4d\u7f6e \\(k\\)\uff0c</p> <p>\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u4e0a\u5929\uff0c\u5fc5\u7136\u4e0d\u53ef\u884c\u3002</p> <p>\u7528\u533a\u95f4 DP \u7684 \u201d\u5408\u5e76\u7c7b\u201c \u60ef\u7528\u5957\u8def\u53ef\u4ee5\u60f3\u5230\u53e6\u5916\u4e00\u4e2a\u505a\u6cd5\uff0c\u679a\u4e3e\u5212\u5206\u70b9 \\(k\\)\uff0c</p> <p>\u90a3\u4e48\u5de6\u8fb9\u548c\u53f3\u8fb9\u90fd\u53ef\u80fd\u662f\u82e5\u5e72\u9897\u5b50\u6811\uff0c\u4f46\u662f\u8fd9\u6837\u5b50\u662f\u4f1a\u7b97\u91cd\u7684\uff0c\u56e0\u4e3a\u4f60\u4e0d\u77e5\u9053\u8fd9\u51e0\u9897\u5b50\u6811\u662f\u4e0d\u662f\u80fd\u91cd\u65b0\u6392\u5217\u4e00\u4e0b\u53d8\u6210\u65b0\u7684\u5b50\u6811\u3002</p> <p>\u6240\u4ee5\u6b64\u65f6\u8981\u7528\u5230\u533a\u95f4 DP \u201d\u5212\u5206\u7c7b\u201c\u7684\u601d\u60f3\uff0c\u7528\u524d\u4e00\u6bb5\u7684\u72b6\u6001\u548c\u540e\u4e00\u6bb5\u7684\u82b1\u8d39\u5f97\u5230\u6574\u6bb5\u7684\u72b6\u6001\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u63a7\u5236\u5212\u5206\u6210\u4e24\u4e2a\u90e8\u5206\u7684\u540e\u4e00\u4e2a\u90e8\u5206\u53ea\u5305\u542b\u4e00\u68f5\u5b50\u6811\u3002</p> <p>\u6240\u4ee5\u679a\u4e3e \\(k\\)\u3002</p> <p>\u4fdd\u8bc1 \\(S_l = S_r = S_k\\) \u4e14 \\(k - l + 1 \\equiv r - (k + 1) - 1 \\equiv 1 (\\operatorname{mod}2)\\)\u3002</p> <p>\u5219 \\(dp_{l,k}\\) \u662f\u4e00\u4e2a\u5df2\u7ecf\u8ba1\u7b97\u597d\u7684\u72b6\u6001\uff0c\u540e\u4e00\u6bb5\u662f\u4e00\u68f5\u7531 \\(S_{k+1}\\sim S_{r-1}\\) \u6784\u6210\u7684\u5b50\u6811\u3002</p> <p>\u90a3\u4e48\u4ee4 \\(dp_{l,r}\\) \u52a0\u4e0a \\(dp_{l,k} \\times dp_{k + 1,r-1}\\) \u5373\u53ef\u3002</p> Code <pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int si = 3e2 + 10;\nconstexpr int mod = 1e9;\n\nint n;\nstring s;\nint dp[si][si];\n\nint main() {\ncin &gt;&gt; s;\nint n = (int)s.size();\ns = ' ' + s;\nif(!(n &amp; 1)) return puts(\"0\"), 0;\n\nmemset(dp, 0, sizeof dp); // \u72b6\u6001\u4e0d\u5408\u6cd5\u6216\u8005\u672a\u66f4\u65b0\u65f6\uff0cdp = 0\u3002\nfor(int i = 1; i &lt;= n; ++i)\ndp[i][i] = 1;\n\nfor(int len = 3; len &lt;= n; len += 2) {\nfor(int i = 1; i + len - 1 &lt;= n; ++i) {\nint j = i + len - 1;\nif(s[i] != s[j]) continue;\nfor(int k = i; k &lt;= j - 2; k += 2) {\nif(s[k] == s[j])\ndp[i][j] = (dp[i][j] + 1ll * dp[i][k] * dp[k + 1][j - 1] % mod) % mod;\n}\n}\n}\n\ncout &lt;&lt; dp[1][n] % mod &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u533a\u95f4DP/DFS\u5e8f\n</code></pre>"}, {"location": "rec/tricks-for-2022-04/#acwing288", "title": "Acwing288 \u4f11\u606f\u65f6\u95f4", "text": "<p>\u5728\u67d0\u4e2a\u661f\u7403\u4e0a\uff0c\u4e00\u5929\u7531 \\(N\\) \u4e2a\u5c0f\u65f6\u6784\u6210\uff0c\u6211\u4eec\u79f0 \\(0\\) \u70b9\u5230 \\(1\\) \u70b9\u4e3a\u7b2c \\(1\\) \u4e2a\u5c0f\u65f6\u3001\\(1\\) \u70b9\u5230 \\(2\\) \u70b9\u4e3a\u7b2c \\(2\\) \u4e2a\u5c0f\u65f6\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u5728\u7b2c \\(i\\) \u4e2a\u5c0f\u65f6\u7761\u89c9\u80fd\u591f\u6062\u590d \\(U_i\\) \u70b9\u4f53\u529b\u3002</p> <p>\u5728\u8fd9\u4e2a\u661f\u7403\u4e0a\u4f4f\u7740\u4e00\u5934\u725b\uff0c\u5b83\u6bcf\u5929\u8981\u4f11\u606f \\(B\\) \u4e2a\u5c0f\u65f6\u3002</p> <p>\u5b83\u4f11\u606f\u7684\u8fd9 \\(B\\) \u4e2a\u5c0f\u65f6\u4e0d\u4e00\u5b9a\u8fde\u7eed\uff0c\u53ef\u4ee5\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u4f46\u662f\u5728\u6bcf\u6bb5\u7684\u7b2c\u4e00\u4e2a\u5c0f\u65f6\uff0c\u5b83\u9700\u8981\u4ece\u6e05\u9192\u9010\u6e10\u5165\u7761\uff0c\u4e0d\u80fd\u6062\u590d\u4f53\u529b\uff0c\u4ece\u4e0b\u4e00\u4e2a\u5c0f\u65f6\u5f00\u59cb\u624d\u80fd\u7761\u7740\u3002</p> <p>\u4e3a\u4e86\u8eab\u4f53\u5065\u5eb7\uff0c\u8fd9\u5934\u725b\u5e0c\u671b\u9075\u5faa\u751f\u7269\u949f\uff0c\u6bcf\u5929\u91c7\u7528\u76f8\u540c\u7684\u7761\u89c9\u8ba1\u5212\u3002</p> <p>\u53e6\u5916\uff0c\u56e0\u4e3a\u65f6\u95f4\u662f\u8fde\u7eed\u7684\uff0c\u5373\u6bcf\u4e00\u5929\u7684\u7b2c \\(N\\) \u4e2a\u5c0f\u65f6\u548c\u4e0b\u4e00\u5929\u7684\u7b2c \\(1\\) \u4e2a\u5c0f\u65f6\u662f\u76f8\u8fde\u7684\uff08\\(N\\) \u70b9\u7b49\u4e8e \\(0\\) \u70b9\uff09\uff0c\u8fd9\u5934\u725b\u53ea\u9700\u8981\u5728\u6bcf \\(N\\) \u4e2a\u5c0f\u65f6\u5185\u4f11\u606f\u591f \\(B\\) \u4e2a\u5c0f\u65f6\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u8bf7\u4f60\u5e2e\u5fd9\u7ed9\u8fd9\u5934\u725b\u5b89\u6392\u4e00\u4e2a\u7761\u89c9\u8ba1\u5212\uff0c\u4f7f\u5b83\u6bcf\u5929\u6062\u590d\u7684\u4f53\u529b\u6700\u591a\u3002</p> <p>\\(3 \\le N \\le 3830, 2 \\le B &lt; N\\)</p> <p>\u8fd9\u662f\u4e00\u4e2a\u73af\u5f62\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u540c\u4e8e\u5176\u5b83\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u5b83\u5e76\u4e0d\u662f\u65ad\u73af\u6210\u94fe\u3002</p> <p>\u5148\u5f53\u4f5c\u4e00\u4e2a\u7ebf\u6027\u95ee\u9898\u601d\u8003\u3002</p> <p>\u89c2\u5bdf\u9898\u76ee\u8981\u7d20\uff0c\u53d1\u73b0\u5448 \u201c\u9636\u6bb5\u201d \u51fa\u73b0\u7684\u5c31\u662f \u201c\u65f6\u95f4\u201d \u8fd9\u4e00\u7ef4\u5ea6\uff0c\u6240\u4ee5\u5148\u8bbe \\(dp_i\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u5c0f\u65f6\uff08\u65f6\u95f4\u6bb5\uff09\u7684\u4ec0\u4e48\u4e1c\u897f\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u5173\u4e4e\u51b3\u7b56\u7684\u8981\u7d20\u662f\u7c7b\u4f3c\u80cc\u5305\u4e2d\u201d\u4f53\u79ef\u201c\u7684\u4e00\u4e2a\u4fe1\u606f\uff1a \u201d\u4f11\u606f\u7684\u65f6\u95f4\u201c\u3002</p> <p>\u6240\u4ee5\u52a0\u4e00\u7ef4\uff0c\\(dp_{i,j}\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u5c0f\u65f6\uff0c\u5df2\u7ecf\u4f11\u606f\u4e86 \\(j\\) \u4e2a\u5c0f\u65f6\u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u83b7\u5f97\u4f53\u529b\u7684\u6700\u5927\u503c\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u65e0\u6cd5\u8f6c\u79fb\uff0c\u56e0\u4e3a\u8fd8\u6709\u4e00\u4e2a\u8981\u7d20\u6ca1\u7528\u8fdb\u53bb\uff0c\u201d\u7761\u89c9\u7684\u7b2c\u4e00\u4e2a\u65f6\u95f4\u6bb5\u4e0d\u80fd\u6062\u590d\u4f53\u529b\u201c\u3002</p> <p>\u6240\u4ee5\u8fd8\u9700\u8981\u77e5\u9053\u725b\u4e0a\u4e00\u4e2a\u5c0f\u65f6\u7761\u6ca1\u7761\uff0c\u624d\u80fd\u786e\u5b9a\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u725b\u662f\u5728\u7761\u7b2c\u4e00\u4e2a\u5c0f\u65f6\u3002</p> <p>\u90a3\u4e48\u518d\u52a0\u4e00\u7ef4\uff0c\u8bbe \\(dp_{i,j,0/1}\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u5c0f\u65f6\uff0c\u5df2\u7ecf\u4f11\u606f\u4e86 \\(j\\) \u4e2a\u5c0f\u65f6\uff0c\u7b2c \\(i\\) \u4e2a\u5c0f\u65f6\u662f\u5426\u5728\u7761\u89c9\u7684\u6240\u6709\u65b9\u6848\u3002</p> <p>\u5206\u5f00\u8ba8\u8bba \\(0/1\\) \uff0c\u5e76\u5728\u8f6c\u79fb\u5e26\u4e0a\u8981\u7d20\uff1a\u201d\u7761\u89c9\u7684\u7b2c\u4e00\u4e2a\u65f6\u95f4\u6bb5\u4e0d\u80fd\u6062\u590d\u4f53\u529b\u201c\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u65b9\u7a0b\uff1a</p> \\[\\begin{cases}dp_{i,j,0} = \\max(dp_{i-1,j,0},dp_{i-1,j,1}) \\\\ dp_{i,j,1} = \\max(dp_{i-1,j-1,0},dp_{i-1,j-1,1}+U_i)\\end{cases}\\] <p>\u7136\u540e\u8fd9\u4e2a\u7a7a\u95f4\u6709\u70b9\u5927\uff0c\u7b97\u4e00\u4e0b\u4e4b\u540e\u53d1\u73b0\u8fc7\u4e0d\u4e86\u3002</p> <p>\u53c8\u53d1\u73b0\u6bcf\u4e00\u4e2a\u9636\u6bb5\u4e4b\u548c\u4e0a\u4e00\u4e2a\u9636\u6bb5 \\(i-1\\) \u6709\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u6eda\u52a8\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u5229\u7528 \\(i\\&amp;1\\) \uff0c\u5728 \\(dp_0,dp_1\\) \u4e24\u4e2a\u7cfb\u4e4b\u95f4\u4e0d\u65ad\u8f6c\u79fb\u3002</p> <p>\u7136\u540e\u73af\u5f62\u600e\u4e48\u5904\u7406\u5462\uff1f\u53d1\u73b0\u8fd9\u6837\u5b50\u505a\u662f\u65e0\u6cd5\u8003\u8651\u5230\u65f6\u523b \\(1\\)  \u53ef\u4ee5\u83b7\u53d6\u4f53\u529b\u7684\u60c5\u51b5\u7684\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e2a\u73af\uff0c</p> <p>\u6240\u4ee5\u6211\u4eec\u5f3a\u5236\u9009\u4e0a \\(U_1\\)\uff0c\u4e5f\u5c31\u662f\u4ee4 \\(dp_{1,1,1} = U_1\\)\uff0c\u7136\u540e\u518d\u8dd1\u4e00\u6b21\u5c31\u884c\u4e86\uff0c\u8fd9\u662f\u5904\u7406\u73af\u5f62DP\uff0c\u9664\u4e86\u65ad\u73af\u6210\u94fe\u4ee5\u5916\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002</p> Code <pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int si = 3830 + 10;\n\nint n, m;\nint a[si];\nint dp[2][si][2];\n\nint main() {\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n\n// for(auto x : a) cout &lt;&lt; x &lt;&lt; \" \";\n// cout &lt;&lt; endl;\n\nmemset(dp, -0x3f, sizeof dp);\ndp[1][0][0] = 0, dp[1][1][1] = 0;\n\nfor(int i = 2; i &lt;= n; ++i) {\ndp[i &amp; 1][0][0] = 0;\nfor(int j = 1; j &lt;= i; ++j) {\ndp[i &amp; 1][j][0] = max(dp[(i - 1) &amp; 1][j][0], dp[(i - 1) &amp; 1][j][1]);\ndp[i &amp; 1][j][1] = max(dp[(i - 1) &amp; 1][j - 1][0], dp[(i - 1) &amp; 1][j - 1][1] + a[i])  ;\n}\n} int ans = max(dp[n &amp; 1][m][0], dp[n &amp; 1][m][1]);\n\nmemset(dp, -0x3f, sizeof dp);\ndp[1][1][1] = a[1];\n\nfor(int i = 2; i &lt;= n; ++i) {\ndp[i &amp; 1][0][0] = 0;\nfor(int j = 1; j &lt;= i; ++j) {\ndp[i &amp; 1][j][0] = max(dp[(i - 1) &amp; 1][j][0], dp[(i - 1) &amp; 1][j][1]);\ndp[i &amp; 1][j][1] = max(dp[(i - 1) &amp; 1][j - 1][0], dp[(i - 1) &amp; 1][j - 1][1] + a[i])  ;\n}\n} ans = max(ans, dp[n &amp; 1][m][1]);\n\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>Tag : DP/\u73af\u5f62\u5904\u7406\n</code></pre>"}, {"location": "rec/tricks-for-2022-04/#acwing315", "title": "Acwing315 \u65c5\u884c", "text": "<p>\u6c42 LCS \u7684\u6240\u6709\u53ef\u80fd\u65b9\u6848\u3002</p> <p>\u9996\u5148\u6c42\u51fa \\(dp_{i,j}\\)\uff0c\u7136\u540e\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u65b9\u6848\u3002</p> <p>\u53d1\u73b0\u53ea\u9700\u8981\u627e\u5230\u7684\u6700\u540e\u4e00\u4e2a\u76f8\u540c\u7684\u4f4d\u7f6e\u3002</p> <p>\u6240\u4ee5\u8ba1\u7b97\u51fa \\(lasa[ch][i],lasb[ch][i]\\)\uff0c\u5206\u522b\u8868\u793a \\(ch\\) \u5728 \\(a/b\\) \u7684\u524d \\(i\\) \u4f4d\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002</p> <p>\u7136\u540e\u8bbe\u4e00\u4e2a\u51fd\u6570 \\(f(x,y,rest)\\)\uff0c\u8868\u793a\u5f53\u524d\u5904\u7406\u5230 \\(a[1\\sim x],b[1\\sim y]\\)\uff0cLCS \u957f\u5ea6\u8fd8\u5269 \\(rest\\)\u3002</p> <p>\u5148\u5224\u6389\u8fb9\u754c\uff0c\u7136\u540e\u679a\u4e3e \\(26\\) \u4e2a\u5b57\u7b26\uff0c\u770b \\(dp_{lasa[ch][i],lasb[ch][j]}\\) \u662f\u5426\u7b49\u4e8e \\(rest\\)\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u6267\u884c \\(f(lasa[ch][i],lasb[ch][j],rest-1)\\) \u5373\u53ef\u3002</p> <p>\u8bb0\u5f97\u5728 \\(f\\) \u91cc\u5f00\u4e00\u4e2a <code>std::string</code> \u7684 member \u53bb\u8bb0\u5f55\u5f53\u524d\u60c5\u51b5\u7684\u5b57\u7b26\u4e32\uff0c\u5f53 \\(rest = 0\\) \u65f6\uff0c\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u653e\u5165\u4e00\u4e2a <code>std:vector</code>\u3002</p> Code <pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int si = 1e2 + 10;\n\nint n, m;\nstring a, b;\n\nint dp[si][si];\nint lasa[27][si], lasb[27][si];\n\nvector&lt;string&gt; res; void print(int i, int j, int rest, string cur) {\nif(rest == 0) {\nres.push_back(cur);\nreturn;\n}\n\nif(!i || !j) return;\n\nfor(int ch = 1; ch &lt;= 26; ++ch) {\nint prei = lasa[ch][i], prej = lasb[ch][j];\nif(dp[prei][prej] == rest)\nprint(prei - 1, prej - 1, rest - 1, (char)('a' + ch - 1) + cur);\n}\n}\n\nint main() {\ncin &gt;&gt; a &gt;&gt; b;\nn = (int)a.size(), m = (int)b.size();\na = ' ' + a, b = ' ' + b;\n\nmemset(dp, 0, sizeof dp);\nmemset(lasa, 0, sizeof lasa);\nmemset(lasb, 0, sizeof lasb);\n\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= m; ++j) {\nif(a[i] == b[j]) dp[i][j] = dp[i - 1][j - 1] + 1;\nelse dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);\n}\n}\n\n// cout &lt;&lt; dp[n][m] &lt;&lt; endl;\n\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int ch = 1; ch &lt;= 26; ++ch) {\nif(a[i] == (char)('a' + ch - 1))\nlasa[ch][i] = i;\nelse lasa[ch][i] = lasa[ch][i - 1];\n} }\nfor(int i = 1; i &lt;= m; ++i) {\nfor(int ch = 1; ch &lt;= 26; ++ch) {\nif(b[i] == (char)('a' + ch - 1))\nlasb[ch][i] = i;\nelse lasb[ch][i] = lasb[ch][i - 1];\n}\n}\n\nprint(n, m, dp[n][m], \"\");\nsort(res.begin(), res.end());\n\nfor(auto x : res) cout &lt;&lt; x &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : DP/LCS\u7684\u65b9\u6848\n</code></pre>"}, {"location": "rec/tricks-for-2022-04/#acwing322", "title": "Acwing322 \u6d88\u6728\u5757", "text": "<p>\\(n\\) \u4e2a\u6728\u5757\u6392\u6210\u4e00\u5217\uff0c\u6bcf\u4e2a\u6728\u5757\u90fd\u6709\u4e00\u4e2a\u989c\u8272\u3002</p> <p>\u6bcf\u6b21\uff0c\u4f60\u90fd\u53ef\u4ee5\u70b9\u51fb\u4e00\u4e2a\u6728\u5757\uff0c\u8fd9\u6837\u88ab\u70b9\u51fb\u7684\u6728\u5757\u4ee5\u53ca\u548c\u5b83\u76f8\u90bb\u5e76\u4e14\u540c\u8272\u7684\u6728\u5757\u5c31\u4f1a\u6d88\u9664\u3002</p> <p>\u5982\u679c\u4e00\u6b21\u6027\u6d88\u9664\u4e86 \\(k\\) \u4e2a\u6728\u5757\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f97\u5230 \\(k\\times k\\) \u5206\u3002</p> <p>\u7ed9\u5b9a\u4f60\u4e00\u4e2a\u6e38\u620f\u521d\u59cb\u72b6\u6001\uff0c\u8bf7\u4f60\u6c42\u51fa\u6700\u9ad8\u5f97\u5206\u662f\u591a\u5c11\u3002</p> <p>\\(1\\le N \\le 200\\)\u3002</p> <p>\u9996\u5148\u8003\u8651\u533a\u95f4 DP\uff0c\u8bbe \\(dp_{l,r}\\) \u8868\u793a\u5220\u53bb \\([l,r]\\) \u8fd9\u4e2a\u533a\u95f4\u7684\u6240\u6709\u6728\u5757\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u5f97\u5206\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u4e2d\u95f4\u70b9\uff0c\u7136\u540e\u7528\u4e24\u6bb5\u7684\u72b6\u6001\u5408\u5e76\u5f97\u5230\u5927\u4e00\u70b9\u7684\u72b6\u6001\u3002</p> <p>\u4f46\u662f\u5982\u679c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff1a<code>[...1 1 1][1 1 1...]</code></p> <p>\u4f60\u5982\u679c\u4ece\u4e2d\u95f4\u5206\u5f00\uff0c\u90a3\u4e48 \\(3^2+3^2 &lt; 6^2\\)\uff0c\u5fc5\u7136\u4e0d\u662f\u66f4\u4f18\u7684\uff0c\u4f60\u9700\u8981\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u540c\u8272\u6728\u5757\u88ab\u653e\u5728\u4e00\u8d77\u5408\u5e76\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7c7b\u4f3c ODT \u7684\u601d\u60f3\uff0c\u5c06\u6240\u6709\u7684\u521d\u59cb\u540c\u8272\u7684\u6728\u5757\u5408\u6210\u4e00\u6bb5\uff0c\u8fd9\u6837\u5c31\u80fd\u907f\u514d\u4ee5\u4e0a\u7684\u60c5\u51b5\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u53c8\u4e0d\u597d\u8f6c\u79fb\u8fd9\u4e00\u79cd\u60c5\u51b5\uff1a<code>[2 2 2] [1 1] [3] [2 2 2],</code></p> <p>\u5047\u8bbe\u4f60\u7528\u8fd9\u4e24\u4e2a\u72b6\u6001\u5408\u5e76\uff1a\\(dp_{1,3}\\) \u548c \\(dp_{4,4}\\)\u3002</p> <p>\u90a3\u4f60\u5220\u5b8c\u4e86 \\(1,2,3\\) \u6bb5\u4e4b\u540e\uff0c\u628a \\(1\\) \u8fd9\u4e00\u6bb5 \\(2\\) \u90fd\u5220\u6389\u4e86\uff0c\u4f7f\u5f97\u5b83\u65e0\u6cd5\u548c \\(4\\) \u8fd9\u4e00\u6bb5\u7684 \\(2\\) \u5408\u5e76\u3002</p> <p>\u5e76\u4e14\u53ef\u4ee5\u53d1\u73b0\uff0c\u4f60\u5982\u679c\u53ea\u679a\u4e3e\u4e00\u4e2a\u5212\u5206\u70b9\uff0c\u80af\u5b9a\u65e0\u6cd5\u4f7f\u5f97\u4e0a\u9762\u7684\u60c5\u51b5\u66f4\u4f18\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u679a\u4e3e\u6240\u6709\u5212\u5206\u70b9\uff0c\u4f46\u662f\u8fd9\u6837\u5b50\u590d\u6742\u5ea6\u591a\u4e86 \\(2^n\\) \u7684\u6307\u6570\u7ea7\u522b\uff0c\u65e0\u6cd5\u63a5\u53d7\u3002</p> <p>\u4f46\u662f\u53d1\u73b0\uff0c\u4efb\u610f\u4e00\u79cd\u989c\u8272\u7684\u6700\u4f18\u51b3\u7b56\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u4f60\u8981\u5220\u4e5f\u53ea\u4f1a\u5220\u6389\u540c\u79cd\u989c\u8272\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u52a0\u4e00\u7ef4\u72b6\u6001\uff1a\\(dp_{i,j,k}\\) \u8868\u793a\u5220\u6389\u533a\u95f4 \\([i,j]\\)\uff0c\u5e76\u4e14 \\(j\\) \u540e\u9762\u6709 \\(k\\) \u4e2a\u548c\u7b2c \\(j\\) \u6bb5\u540c\u79cd\u989c\u8272\u7684\u6728\u5757\uff0c\u80fd\u5f97\u5230\u7684\u6700\u5927\u5f97\u5206\u3002</p> <p>\u4e3a\u5565\u4e0d\u662f\u6bb5\u800c\u662f\u4e2a\u5462\uff1f</p> <p>\u5982\u679c\u662f\u8fd9\u6837\u7684\u60c5\u51b5\uff1a<code>[1 1 1] [2] [3 3] [2]&lt;--|j|  [4] [2 2] [5] [2]</code>\u3002</p> <p>\u4f60\u540e\u9762\u53ef\u4ee5\u548c \\(j\\) \u5408\u5e76\u7684\u6709 \\(3\\) \u4e2a \\(2\\)\uff0c\u5982\u679c\u4f60\u76f4\u63a5\u8bbe \\(k\\) \u4e3a\u6bb5\u6570\u7684\u8bdd\uff0c\u8fd8\u8981\u77e5\u9053\u6bcf\u4e00\u6bb5\u5206\u522b\u6709\u591a\u5c11\u4e2a\uff0c\u590d\u6742\u5ea6\u53c8\u4f1a\u4e0a\u53bb\u3002</p> <p>\u9996\u5148\u53ef\u4ee5\u8ba9 \\(dp_{i,j,k}\\) \u7b49\u4e8e\u76f4\u63a5\u5220\u9664 \\(j\\) \u548c\u540e\u9762\u6240\u6709\u4e0e \\(j\\) \u989c\u8272\u76f8\u540c\u5757\u7684\u65b9\u6848 \\(dp_{i,j-1,0}+(len_j+k)^2\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u76f4\u63a5\u5220\u9664 \\([i,j)\\)\uff0c\u7136\u540e\u548c \\(j\\) \u4e00\u8d77\u5220\u9664\u540e\u9762\u7684 \\(k\\) \u4e2a\u3002</p> <p>\u4f46\u662f\u5982\u4f55\u4fdd\u8bc1\u80fd\u8ba9\u8fd9 \\(k\\) \u4e2a\u8fde\u5230\u4e00\u8d77\u5462\uff1f\u4f60\u8981\u5148\u628a\u5206\u5f00\u4ed6\u4eec\u7684\u5220\u9664\u4e86\u624d\u884c\u554a\u3002</p> <p>\u524d\u9762\u63d0\u5230\uff0c\u4e0d\u540c\u79cd\u989c\u8272\u7684\u51b3\u7b56\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u4e2d\u95f4\u76f8\u9694\u7684\u90a3\u4e9b\uff0c\u56e0\u4e3a\u533a\u95f4\u957f\u5ea6\u66f4\u5c0f\uff0c\u5fc5\u7136\u4f1a\u5728\u679a\u4e3e\u5f53\u524d\u72b6\u6001\u4e4b\u524d\u5c31\u88ab\u610f\u4e49\u4e0a\u201c\u5220\u9664\u4e86\u201d\uff0c\u5e76\u4e14\u5f97\u5230\u4e00\u4e2a\u5206\u6570\u3002</p> <p>\u90a3\u5b9e\u9645\u4e0a\u8f6c\u79fb\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5f53\u4f5c\u6ca1\u6709\u8fd9\u4e9b\u76f8\u9694\u7684\u5143\u7d20\u4e86\u3002</p> <p>\u7136\u540e\u8fd8\u8981\u8003\u8651 \\([i,j)\\) \u4e2d\u4e5f\u6709\u548c\u7b2c \\(j\\) \u6bb5\u989c\u8272\u76f8\u540c\u7684\u6bb5\uff08\u4e0a\u9762\u5217\u4e3e\u7684\u60c5\u51b5\u4e2d\u7684\u7b2c \\(2\\) \u6bb5\u90a3\u4e00\u4e2a \\(2\\)\uff09\uff0c\u4e00\u8d77\u548c \\(j\\)\uff0c\u8fd8\u6709\u540e\u9762\u7684 \\(k\\) \u4e2a\u5220\u9664\u7684\u60c5\u51b5\u3002</p> <p>\u6b64\u65f6 \\(j\\) \u4e5f\u4f1a\u88ab\u8003\u8651\u5230\u8fd9\u4e00\u6bb5\u7684 \u201c\\(k\\)\u201d \u5f53\u4e2d\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u5220\u9664 \\((l,j)\\)\u3002</p> <p>\u8fd9\u4e2a\u679a\u4e3e\u6ee1\u8db3 \\(color_l = color_j\\) \u7684 \\(l\\) \u5373\u53ef\u3002 </p> <p>\u8fd9\u90e8\u5206\u7684\u8f6c\u79fb\u662f\uff1a</p> \\[dp_{i,j,k} = \\max(dp_{i,j,k},dp_{i,l,len_j + k} +dp_{l + 1, j - 1, 0})\\] <p>\u5199\u8bb0\u5fc6\u5316\u641c\u7d22\u5373\u53ef\uff0c\u5f97\u5230\u4ee3\u7801\uff1a</p> Code <pre><code>int sqr(int x) {return x * x;}\n\nint dp(int l, int r, int ex) {\nif (r &lt; l) return 0;\nif (f[l][r][ex] != -1) return f[l][r][ex];\nint ans = dp(l, r - 1, 0) + sqr(len[r] + ex);\nfor (int i = l; i &lt; r; ++i)\nif (a[i] == a[r])\nans = max(ans, dp(l, i, len[r] + ex) + dp(i + 1, r - 1, 0));\nreturn f[l][r][ex] = ans;\n}\n</code></pre> <p>\u7b54\u6848\u662f \\(dp(1,n,0)\\)\u3002</p> <p>\u8fd9\u9898\u542f\u53d1\u4e86\u6211\u4eec\u4e00\u4e2a Trick\uff1a</p> <p>Trick</p> <p>\u5f53\u9047\u5230\u533a\u95f4 DP \u5220\u9664\u5b8c\u4e00\u4e2a\u533a\u95f4\u540e\uff0c\u4f1a\u5bfc\u81f4\u8fd9\u4e2a\u533a\u95f4\u4e24\u8fb9\u6784\u6210\u66f4\u4f18\u51b3\u7b56\u7684\u60c5\u51b5\u65f6\uff0c\u4e00\u822c\u8003\u8651\u5bf9\u533a\u95f4\u4e24\u8fb9\u53ef\u80fd\u80fd\u6784\u6210\u6700\u4f18\u51b3\u7b56\u7684\u72b6\u6001\u8fdb\u884c\u72b6\u6001\u7684\u8bb0\u5f55\u548c\u8f6c\u79fb\u3002</p> <p>\u4e0b\u4e00\u9053\u9898\u4e5f\u662f\u4e00\u6837\u7684 Trick\u3002</p> <pre><code>Tag : \u533a\u95f4DP/\u533a\u95f4\u5220\u9664\u7c7bDP\n</code></pre>"}, {"location": "rec/tricks-for-2022-04/#cf607b-zuma", "title": "*CF607B Zuma", "text": "<p>\u548c\u4e0a\u4e00\u9053\u4e00\u8d77\u603b\u7ed3\u3002</p> <p>\u5495\u5495\u5495</p>"}, {"location": "rec/tricks-for-2022-04/#acwing281-coins", "title": "*Acwing281 Coins", "text": "<p>\u591a\u91cd\u80cc\u5305\u4f18\u5316DP\uff0c\u53ef\u884c\u6027\u3002</p> <p>\u5495\u5495\u5495</p>"}, {"location": "rec/tricks-for-2022-05/", "title": "2022\u5e745\u6708\u7ec3\u4e60\u8bb0\u5f55", "text": ""}, {"location": "rec/tricks-for-2022-05/#tricks", "title": "\u4e94\u6708 Tricks \u6574\u7406", "text": ""}, {"location": "rec/tricks-for-2022-05/#cf833b-the-bakery", "title": "CF833B The Bakery", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u957f\u5ea6\u4e3a \\(n\\)\u3002</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u533a\u95f4\u7684\u8d21\u732e \\(F(l, r)\\) \u4e3a\uff0c\u8fd9\u4e2a\u533a\u95f4\u4e2d\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u8981\u6c42\u4f60\u5c06\u5e8f\u5217\u5212\u5206\u4e3a \\(m\\) \u4e2a\u975e\u7a7a\u533a\u95f4\uff0c\u4f7f\u5f97 \\(\\sum F(l, r)\\) \u6700\u5927\u3002</p> <p>\\(1\\le n \\le 3.5e4, 1\\le a_i \\le n, 1\\le m \\le 50\\)</p> <p>\u672c\u9898\u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u5212\u5206\u578b\u533a\u95f4 DP \u95ee\u9898\uff0c\u6700\u8fd1\u9047\u5230\u4e86\u5f88\u591a\u6b21\u3002</p> <p>\u4e0d\u8fc7\u548c\u6700\u8fd1\u9047\u5230\u7684\u4e0d\u4e00\u6837\uff0c\u672c\u9898\u8981\u6c42\u4f60\u5fc5\u987b\u5206\u6210 \\(m\\) \u4e2a\u975e\u7a7a\u533a\u95f4\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe\u51fa\u72b6\u6001 \uff1a \\(dp_{i,j}\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\uff0c\u5206\u6210 \\(j\\) \u6bb5\u7684\u6700\u5927\u8d21\u732e\u548c\u3002</p> <p>\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5199\u51fa\u65b9\u7a0b\uff1a</p> \\[dp_{i, j} = \\max\\limits_{j - 1 \\le k &lt; i}\\{dp_{k, j - 1} + f(k + 1, i)\\}\\] <p>\u4e5f\u5c31\u662f\u679a\u4e3e\u4e0a\u4e00\u6bb5\u7684\u53f3\u7aef\u70b9\u5728\u54ea\u91cc\u8fdb\u884c\u8f6c\u79fb\u3002</p> <p>\u56e0\u4e3a\u8fd9\u91cc\u4e0d\u662f\u524d\u7f00 \\(\\max\\) \u800c\u662f\u4e00\u6bb5\u7684 \\(\\max\\)\uff0c\u6240\u4ee5\u6734\u7d20\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u53ea\u80fd\u662f \\(\\text{O}(n^3)\\) \u7684\u3002</p> <p>\u72b6\u6001\u5df2\u7ecf\u662f\u6700\u7cbe\u7b80\u7684\u4e86\uff0c\u65e0\u6cd5\u4f18\u5316\uff08\u6eda\u52a8\u6570\u7ec4\u662f\u5bf9\u7a7a\u95f4\u7684\u4f18\u5316\u800c\u4e0d\u662f\u5bf9\u65f6\u95f4\uff09\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u5bf9\u51b3\u7b56\u96c6\u5408\u8fdb\u884c\u4f18\u5316\uff0c\u53d1\u73b0\u8fd9\u91cc\u5982\u679c\u56fa\u5b9a \\(i\\)\uff0c\u5f53 \\(j + 1\\) \u7684\u65f6\u5019\uff0c\u51b3\u7b56\u96c6\u5408\u4f1a\u6574\u4e2a\u53d8\u5316\uff0c\u4e0d\u597d\u641e\u3002</p> <p>\u53d1\u73b0\u8fd9\u91cc \\(j\\) \u7684\u72b6\u6001\u53ea\u4f1a\u7531 \\(j - 1\\) \u8f6c\u79fb\u800c\u6765\uff0c\u6240\u4ee5 \\(j\\) \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u9636\u6bb5\u4fdd\u8bc1\u65e0\u540e\u6548\u6027\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u628a \\(j\\) \u653e\u5230\u5916\u5c42\uff0c\u56fa\u5b9a \\(j\\)\uff0c\u89c2\u5bdf\u51b3\u7b56\u96c6\u5408\u3002</p> <p>\u5f53 \\(i + 1\\) \u7684\u65f6\u5019\uff0c\u51b3\u7b56\u96c6\u5408\u53ea\u589e\u52a0\u4e00\u4e2a \\(dp_{i, j - 1}\\)\u3002</p> <p>\u8fd9\u91cc\u53c8\u662f\u5728\u8be2\u95ee\u533a\u95f4 \\(\\max\\)\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u3002</p> <p>\u4f46\u662f\u6700\u68d8\u624b\u7684\u662f \\(F\\)\uff0c\u8fd9\u4e2a\u4e1c\u897f\u65e2\u6ca1\u6709\u5355\u8c03\u6027\u53c8\u6ca1\u6709\u4ec0\u4e48\u5feb\u901f\u7684\u8ba1\u7b97\u65b9\u5f0f\uff08\u6700\u597d\u7684\u4e5f\u662f\u4e3b\u5e2d\u6811\u8fd9\u79cd\uff0c\u672c\u9898\u660e\u663e\u7a7a\u95f4\u4e0d\u591f\uff09\uff0c</p> <p>\u6240\u4ee5\u8981\u89c2\u5bdf \\(F\\) \u662f\u5426\u5177\u6709\u4ec0\u4e48\u6027\u8d28\u3002</p> <p>\u56e0\u4e3a \\(F\\) \u662f\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u4e00\u4e2a\u6570 \\(a_i\\)\uff0c\u4ed6\u80fd\u505a \\(1\\) \u7684\u8d21\u732e\u7684\u4f4d\u7f6e\u5c31\u662f \\((pre_{a_i}, i]\\)\u3002</p> <p>\u4e5f\u5c31\u662f\u4e0a\u4e00\u4e2a \\(a_i\\) \u8fd9\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u4f4d\u7f6e \\(+1\\)\uff0c\u5230\u5b83\u672c\u8eab\u7684\u4f4d\u7f6e\u3002</p> <p>\u5e76\u4e14\u56e0\u4e3a \\(1\\le a_i \\le n\\)\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e \\(i\\)\uff0c\u90fd\u7b97\u4e00\u4e0b\u8fd9\u4e2a\u4f4d\u7f6e\u5728\u54ea\u91cc\u505a\u4e86\u8d21\u732e\uff0c\u7136\u540e\u7ed9\u8fd9\u4e00\u6bb5\u533a\u95f4\u52a0 \\(1\\)\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\uff0c\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 \\(dp\\) \u7684\u7b2c\u4e00\u7ef4\u3002</p> <p>\u7136\u540e\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8d21\u732e\uff0c\u533a\u95f4\u52a0\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ed9 \\(dp_{j - 1}\\) \u7cfb\u7684\u72b6\u6001\u90fd\u7b97\u4e00\u6b21\u5373\u53ef\u3002</p> <p>\u8f6c\u79fb\u76f4\u63a5\u8be2\u95ee \\(\\max\\)\uff0c\u5bf9\u4e8e\u6bcf\u5c42\u5faa\u73af \\(j\\)\uff0c\u91cc\u9762\u90fd\u91cd\u65b0\u5efa\u6811\uff08\u6216\u8005\u76f4\u63a5\u4fee\u6539\uff09\uff0c\u7136\u540e\u628a \\(j - 1\\) \u7cfb\u7684 DP \u503c\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\u3002</p> <p>\u590d\u6742\u5ea6 \\(\\text{O}(m\\times n \\log n)\\)\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002</p> Code <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 3.5e4 + 10;\nconst int inf = 0x3f3f3f3f;\n\nint n, m;\nint last[si];\nint pre[si], a[si];\nint dp[si][50 + 10];\n\nclass Segment_Tree {\nprivate : struct Node {\nint l, r;\nint dat, tag;\n}t[si &lt;&lt; 2];\ninline void pushup(int p) {\nt[p].dat = max(t[p &lt;&lt; 1].dat, t[p &lt;&lt; 1 | 1].dat);\n}\ninline void pushdown(int p) {\nif(t[p].tag) {\nt[p &lt;&lt; 1].tag += t[p].tag, t[p &lt;&lt; 1 | 1].tag += t[p].tag;\nt[p &lt;&lt; 1].dat += t[p].tag, t[p &lt;&lt; 1 | 1].dat += t[p].tag;\nt[p].tag = 0;\n}\n}\npublic : void build(int p, int l, int r) {\nt[p].l = l, t[p].r = r, t[p].tag = 0;\nif(l == r) {\nt[p].dat = 0;\nreturn;\n}\nint mid = (l + r) &gt;&gt; 1;\nbuild(p &lt;&lt; 1, l, mid), build(p &lt;&lt; 1 | 1, mid + 1, r);\npushup(p);\n}\nvoid modify(int p, int x, int v) {\nt[p].tag = 0;\nif(t[p].l == t[p].r) {\nt[p].dat = v;\nreturn;\n}\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(x &lt;= mid) modify(p &lt;&lt; 1, x, v);\nelse modify(p &lt;&lt; 1 | 1, x, v);\npushup(p); }\nvoid update(int p, int l, int r, int v) {\nif(l &lt;= t[p].l &amp;&amp; t[p].r &lt;= r) {\nt[p].dat += v, t[p].tag += v;\nreturn;\n}\npushdown(p);\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(l &lt;= mid) update(p &lt;&lt; 1, l, r, v);\nif(r &gt; mid)\nupdate(p &lt;&lt; 1 | 1, l, r, v);\npushup(p);\n}\nint query(int p, int l, int r) {\nint res = -inf;\nif(l &lt;= t[p].l &amp;&amp; t[p].r &lt;= r) return t[p].dat;\npushdown(p);\nint mid = (t[p].l + t[p].r) &gt;&gt; 1;\nif(l &lt;= mid) res = max(res, query(p &lt;&lt; 1, l, r));\nif(r &gt; mid)\nres = max(res, query(p &lt;&lt; 1 | 1, l, r));\nreturn res;\n}\n};\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nSegment_Tree tr;\n\ncin &gt;&gt; n &gt;&gt; m;\nmemset(dp, 0, sizeof dp);\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; a[i];\nif(!last[a[i]]) last[a[i]] = i;\nelse {\npre[i] = last[a[i]];\nlast[a[i]] = i;\n}\n}\n\n// for(int i = 1; i &lt;= n; ++i) \n//  meow(pre[i]) &lt;&lt; endl;\n\nfor(int j = 1; j &lt;= m; ++j) {\ntr.build(1, 0, n);\nfor(int i = 1; i &lt;= n; ++i) {\ntr.modify(1, i, dp[i][j - 1]);\n}\nfor(int i = 1; i &lt;= n; ++i) {\ntr.update(1, pre[i], i - 1, 1);\ndp[i][j] = tr.query(1, j - 1, i - 1);\n}\n}\n\ncout &lt;&lt; dp[n][m] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u7ebf\u6bb5\u6811\u4f18\u5316DP/\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e0b\u6807/\u4e00\u4e2a\u533a\u95f4DP\u6a21\u578b\u7684\u4f18\u5316\n</code></pre>"}, {"location": "rec/tricks-for-2022-05/#cf1591f-non-equal-neighbours", "title": "CF1591F Non-Equal Neighbours", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u957f\u5ea6\u4e3a \\(n\\)\u3002</p> <p>\u8981\u6c42\u4f60\u6784\u9020\u4e00\u4e2a\u5e8f\u5217 \\(b\\)\uff0c\u4f7f\u5f97 \\(1\\le b_i \\le a_i\\)\uff0c\u4e14 \\(b_i \\not = b_{i + 1}\\)\u3002</p> <p>\u95ee\u65b9\u6848\u6570\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\\(1\\le n \\le 2\\times 10^5, 1\\le a_i \\le 10^9\\)\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u66b4\u529b\u7684 DP\u3002</p> <p>\u8bbe \\(dp_{i, j}\\) \u8868\u793a\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u4e14\u7b2c \\(i\\) \u4e2a \u4f4d\u7f6e\u9009 \\(j\\) \u7684\u65b9\u6848\u6570\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u5f97\u5230\u65b9\u7a0b\uff1a</p> \\[dp_{i, j} = \\sum\\limits_{k = 1}^{a_{i - 1}} dp_{i - 1, k} - dp_{i - 1, j}\\] <p>\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u7b97\u4e0a\u4e00\u4e2a\u9636\u6bb5\u7684\u548c\uff0c\u7136\u540e\u6263\u6389\u4e0a\u4e00\u4e2a\u9636\u6bb5\u7684 \\(j\\) \u4f4d\u7f6e\u3002</p> <p>\u8003\u8651\u4f7f\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7b2c\u4e8c\u7ef4\u3002</p> <p>\u6240\u6709\u8f6c\u79fb\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5148\u7b97\u51fa \\(sum = \\sum\\limits_{k = 1}^{a_{i - 1}} dp_{i - 1, k}\\)\uff0c</p> <p>\u8ba9\u7ebf\u6bb5\u6811\u4e0a \\([1, a_{i - 1}]\\) \u5168\u90e8\u53d6\u53cd\uff0c\u7136\u540e\u7ed9 \\([1, a_{i}]\\) \u5168\u90e8\u52a0\u4e0a \\(sum\\)\u3002</p> <p>\\((a_i, 10^9]\\) \u5168\u90e8\u8d4b\u503c\u4e3a \\(0\\) \u5373\u53ef\u3002</p> <p>\u53ea\u9700\u8981\u4e00\u4e2a\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u67e5\uff0c\u533a\u95f4\u4e58 \\(0, -1\\) \u7684 lazytag \u7ebf\u6bb5\u6811\u5373\u53ef\u3002</p> <p>\u7c7b\u4f3c\u7ebf\u6bb5\u6811 2\u3002</p> <p>\u4f46\u662f\u6ce8\u610f\uff0c\u56e0\u4e3a\u52a8\u6001\u5f00\u70b9\u9700\u8981\u5f88\u5927\u7684\u7a7a\u95f4\uff0c\u6240\u4ee5\u9700\u8981\u5361\u4e00\u5361\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u89c1\u65e5\u5e38\u968f\u7b14\u7684 \u201c\u5361\u5e38\u5c0f\u6280\u5de7\u201d\u3002</p> Code <pre><code>#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define ls lson[p]\n#define rs rson[p]\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\n\nconst int si = 2e5 + 10;\nconst int sii = 1e7 + 1;\nconstexpr int mod = 998244353ll;\n\nint n;\nint a[si];\n\nint lson[sii], rson[sii], dat[sii], add[sii], mul[sii];\n// \u7a7a\u95f4\u4e00\u5b9a\u8981\u5f00\u591f\u3002\n// \u5f00\u5230 class \u91cc\u9762\u7684\u65f6\u5019\u8981\u63d0\u524d\u7b97\u597d\u7a7a\u95f4\u3002\n// \u5982\u679c\u7a7a\u95f4\u6bd4\u8f83\u5361\uff0c\u5c31\u8981\u63d0\u51fa\u6765\u5199\u3002\uff01\uff01\uff01\nint cnt_node = 0;\ninline int Newnode() {\nreturn ++cnt_node;\n}\ninline void pushup(int p) {\ndat[p] = (dat[ls] + dat[rs]) % mod;\n}\ninline void pushdown(int p, int l, int r) {\nif(!add[p] &amp;&amp; mul[p] == 1) return;\n\nif(!ls) ls = Newnode();\nif(!rs) rs = Newnode();\n\nint mid = (l + r) &gt;&gt; 1;\n\ndat[ls] = (1ll * dat[ls] * mul[p] + 1ll * add[p] * (mid - l + 1)) % mod;\ndat[rs] = (1ll * dat[rs] * mul[p] + 1ll * add[p] * (r - mid - 1 + 1)) % mod;\nadd[ls] = (1ll * add[ls] * mul[p] + 1ll * add[p]) % mod;\nadd[rs] = (1ll * add[rs] * mul[p] + 1ll * add[p]) % mod;\nmul[ls] = (1ll * mul[ls] * mul[p]) % mod;\nmul[rs] = (1ll * mul[rs] * mul[p]) % mod;\n\nadd[p] = 0, mul[p] = 1;\n}\nvoid update_add(int &amp;p, int l, int r, int ql, int qr, int v) {\nif(l &gt; r) return;\nif(!p) p = Newnode();\nif(ql &lt;= l &amp;&amp; r &lt;= qr) {\nadd[p] = (add[p] + v) % mod;\ndat[p] = (dat[p] + 1ll * v * (r - l + 1)) % mod;\nreturn;\n}\npushdown(p, l, r);\nint mid = (l + r) &gt;&gt; 1;\nif(ql &lt;= mid) update_add(ls, l, mid, ql, qr, v);\nif(qr &gt; mid)\nupdate_add(rs, mid + 1, r, ql, qr, v);\npushup(p); return;\n}   void update_mul(int &amp;p, int l, int r, int ql, int qr, int v) {\nif(l &gt; r) return;\nif(!p) p = Newnode();\nif(ql &lt;= l &amp;&amp; r &lt;= qr) {\ndat[p] = (dat[p] * 1ll * v) % mod;\nadd[p] = (add[p] * 1ll * v) % mod;\nmul[p] = (mul[p] * 1ll * v) % mod;\nreturn; }\npushdown(p, l, r);\nint mid = (l + r) &gt;&gt; 1;\nif(ql &lt;= mid)\nupdate_mul(ls, l, mid, ql, qr, v);\nif(qr &gt; mid)\nupdate_mul(rs, mid + 1, r, ql, qr, v);\npushup(p); return;\n}\nint query(int p, int l, int r, int ql, int qr) {\nif(l &gt; r) return 0ll;\nif(!p) return 0ll;\nif(ql &lt;= l &amp;&amp; r &lt;= qr) return dat[p] % mod;\npushdown(p, l, r);\nint mid = (l + r) &gt;&gt; 1;\nint res = 0ll;\nif(ql &lt;= mid) res = (res + query(ls, l, mid, ql, qr)) % mod;\nif(qr &gt; mid)\nres = (res + query(rs, mid + 1, r, ql, qr)) % mod;\nreturn res % mod;\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint root = 0;\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\nupdate_add(root, 1, 1e9, 1, a[1], 1);\nfor(int i = 2; i &lt;= n; ++i) {\nint sum = query(root, 1, 1e9, 1, 1e9) % mod;\nupdate_mul(root, 1, 1e9, 1, a[i], -1);\nupdate_add(root, 1, 1e9, 1, a[i], sum);\nupdate_mul(root, 1, 1e9, a[i] + 1, 1e9, 0);\n}\n\ncout &lt;&lt; (query(root, 1, 1e9, 1, 1e9) + mod) % mod &lt;&lt; endl;\n\nreturn 0;\n}\n\n/*\n// \u88ab\u5361\u7a7a\u95f4\u7684\u4ee3\u7801\u3002\n\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define ls t[p].lson\n#define rs t[p].rson\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 10;\nconstexpr i64 mod = 998244353ll;\n\nint n;\ni64 a[si];\n\nclass Segment_Tree {\n    private : \n        struct Node {\n            int lson = 0, rson = 0;\n            i64 dat = 0ll, add = 0ll, mul = 1ll;\n        }t[si * 60];\n        // \u7a7a\u95f4\u4e00\u5b9a\u8981\u5f00\u591f\u3002\n        int cnt_node = 0;\n        inline int Newnode() {\n            return ++cnt_node;\n        }\n        inline void pushup(int p) {\n            t[p].dat = t[ls].dat + t[rs].dat;\n        }\n        inline void pushdown(int p, int l, int r) {\n            if(!t[p].add &amp;&amp; t[p].mul == 1) \n                return;\n\n            if(!ls) ls = Newnode();\n            if(!rs) rs = Newnode();\n\n            int mid = (l + r) &gt;&gt; 1;\n\n            t[ls].dat = (t[ls].dat * t[p].mul + t[p].add * (mid - l + 1)) % mod;\n            t[rs].dat = (t[rs].dat * t[p].mul + t[p].add * (r - mid - 1 + 1)) % mod;\n            t[ls].add = (t[ls].add * t[p].mul + t[p].add) % mod;\n            t[rs].add = (t[rs].add * t[p].mul + t[p].add) % mod;\n            t[ls].mul = (t[ls].mul * t[p].mul) % mod;\n            t[rs].mul = (t[rs].mul * t[p].mul) % mod;\n\n            t[p].add = 0ll, t[p].mul = 1ll;\n        }\n    public : \n        void update_add(int &amp;p, int l, int r, int ql, int qr, i64 v) {\n            if(l &gt; r) return;\n            if(!p) p = Newnode();\n            if(ql &lt;= l &amp;&amp; r &lt;= qr) {\n                t[p].add = (t[p].add + v) % mod;\n                t[p].dat = (t[p].dat + v * (r - l + 1)) % mod;\n                return;\n            }\n            pushdown(p, l, r);\n            int mid = (l + r) &gt;&gt; 1;\n            if(ql &lt;= mid) \n                update_add(ls, l, mid, ql, qr, v);\n            if(qr &gt; mid)\n                update_add(rs, mid + 1, r, ql, qr, v);\n            pushup(p); return;\n        }   \n        void update_mul(int &amp;p, int l, int r, int ql, int qr, i64 v) {\n            if(l &gt; r) return;\n            if(!p) p = Newnode();\n            if(ql &lt;= l &amp;&amp; r &lt;= qr) {\n                t[p].dat = (t[p].dat * v) % mod;\n                t[p].add = (t[p].add * v) % mod;\n                t[p].mul = (t[p].mul * v) % mod;\n                return; \n            }\n            pushdown(p, l, r);\n            int mid = (l + r) &gt;&gt; 1;\n            if(ql &lt;= mid)\n                update_mul(ls, l, mid, ql, qr, v);\n            if(qr &gt; mid)\n                update_mul(rs, mid + 1, r, ql, qr, v);\n            pushup(p); return;\n        }\n        i64 query(int p, int l, int r, int ql, int qr) {\n            if(l &gt; r) return 0ll;\n            if(!p) return 0ll;\n            if(ql &lt;= l &amp;&amp; r &lt;= qr) \n                return t[p].dat % mod;\n            pushdown(p, l, r);\n            int mid = (l + r) &gt;&gt; 1;\n            i64 res = 0ll;\n            if(ql &lt;= mid) \n                res = (res + query(ls, l, mid, ql, qr)) % mod;\n            if(qr &gt; mid)\n                res = (res + query(rs, mid + 1, r, ql, qr)) % mod;\n            return res % mod;\n        }\n}tr;\n\nint main() {    \n\n    cin.tie(0) -&gt; sync_with_stdio(false);\n    cin.exceptions(cin.failbit | cin.badbit);\n\n    int root = 0;\n    cin &gt;&gt; n;\n    for(int i = 1; i &lt;= n; ++i)\n        cin &gt;&gt; a[i];\n    tr.update_add(root, 1, 1e9, 1, a[1], 1ll);\n    for(int i = 2; i &lt;= n; ++i) {\n        i64 sum = tr.query(root, 1, 1e9, 1, 1e9) % mod;\n        tr.update_mul(root, 1, 1e9, 1, a[i], -1ll);\n        tr.update_add(root, 1, 1e9, 1, a[i], sum);\n        tr.update_mul(root, 1, 1e9, a[i] + 1, 1e9, 0ll);\n    }\n\n    cout &lt;&lt; (tr.query(root, 1, 1e9, 1, 1e9) + mod) % mod &lt;&lt; endl;\n\n    return 0;\n}\n\n*/\n</code></pre> <pre><code>Tag : \u7ebf\u6bb5\u6811\u4f18\u5316DP/\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e0b\u6807\n</code></pre>"}, {"location": "rec/tricks-for-2022-05/#cf1485f-copy-or-prefix-sum", "title": "CF1485F Copy or Prefix Sum", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u6570\u5217 \\(b\\)\uff0c\u8981\u6c42\u6784\u9020\u4e00\u4e2a\u6570\u5217 \\(a\\)\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\\(a_i = b_i\\) \u6216\u8005 \\(b_i  = \\sum\\limits_{j = 1}^{i} a_j\\)\u3002</li> </ul> <p>\u6c42\u53ef\u80fd\u7684 \\(a\\) \u7684\u6570\u91cf\u6a21 \\(10^9 + 7\\)\u3002</p> <p>\\(1\\le n \\le 2\\times 10^5, 1\\le b_i \\le 10^9\\)\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u6734\u7d20\u7684 DP\uff0c\u76f4\u63a5\u628a\u6240\u6709\u8981\u7d20\u5904\u7406\u8fdb\u53bb\u3002</p> <p>\u524d\u7f00\u548c\u8fd9\u4e2a\u8981\u7d20\u5c31\u4e0d\u7528\u5728\u72b6\u6001\u91cc\u4f53\u73b0\u4e86\uff0c\u76f4\u63a5\u5728\u8f6c\u79fb\u51b3\u7b56\u7684\u65f6\u5019\u4f53\u73b0\u3002</p> <p>\u6240\u4ee5\u8bbe \\(dp(i, j)\\) \u4e3a\uff0c\u8003\u8651\u524d \\(i\\) \u4e2a\u6570\uff0c\u5f53\u524d\u9009\u7684 \\(\\sum a_i = j\\)\uff0c\u603b\u5171\u7684\u65b9\u6848\u6570\u3002</p> <p>\u7136\u540e\u9488\u5bf9\u4e24\u79cd\u60c5\u51b5\u5199\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[\\begin{cases}dp(i, j) = dp(i - 1, j - b_i) &amp; a_i = b_i \\\\ dp(i, b_i) = \\sum\\limits_{j = -\\infty}^{\\infty} dp(i - 1, j) - dp(i - 1, 0) &amp; \\texttt{otherwise.}\\end{cases}\\] <p>\u7b2c\u4e00\u79cd\u6bd4\u8f83\u663e\u7136\uff0c\u7b2c\u4e8c\u79cd\u4ece \\(-\\infty\\) \u6c42\u548c\u5230 \\(\\infty\\) \u662f\u56e0\u4e3a\uff0c\u5047\u8bbe\u4f60 \\(a_i\\) \u968f\u4fbf\u9009\u4e86\u4e00\u4e2a\u6570 \\(x\\)\uff0c\u4f60\u53ea\u9700\u8981\u8ba9 \\(\\sum\\limits_{j = 1}^{i - 1} a_j= b_i - x\\) \u5373\u53ef\uff0c\u6240\u4ee5\u4e0d\u7ba1 \\(a_i\\) \u53d6\u5565\uff0c\u76f4\u63a5\u524d\u9762\u5bf9\u5e94\u7684\u65b9\u6848\u6570\u5c31\u884c\u3002</p> <p>\u56e0\u4e3a \\(a_i\\) \u53ef\u4ee5\u968f\u4fbf\u9009\uff0c\u6240\u4ee5\u81ea\u7136\u662f\u4ece\u8d1f\u65e0\u7a77\u4e00\u76f4\u6c42\u548c\u5230\u6b63\u65e0\u7a77\u3002</p> <p>\u8981\u51cf\u53bb \\(dp(i - 1, 0)\\) \u662f\u56e0\u4e3a\uff0c\u5f53 \\(\\sum\\limits_{j = 1}^{i - 1} a_j = 0\\) \u65f6\uff0c \u8fd9\u4e24\u79cd\u65b9\u6848\u90fd\u662f\u7b49\u4ef7\u7684\u3002</p> <p>\u7136\u540e\u7b2c\u4e00\u4e2a\u5c31\u662f\u7ed9\u6570\u7ec4\u5e73\u79fb\u4e86\u4e00\u4e0b\u3002</p> <p>\u540e\u4e00\u4e2a\u770b\u8d77\u6765\u5f88\u5413\u4eba\uff0c\u5176\u5b9e\u53d1\u73b0\u5c31\u662f\u4e00\u4e2a\u5168\u5c40\u6c42\u548c\uff0c\u7136\u540e\u53d1\u73b0\u6bcf\u6b21\u51b3\u7b56\u5b8c\u4e4b\u540e\uff0c\u4f1a\u6539\u53d8\u7684\u53ea\u6709 \\(dp(i, b_i)\\)\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8bb0\u5f55\u4e09\u4e2a\u53d8\u91cf\uff0c\u4e00\u4e2a\u662f\u504f\u79fb\u91cf \\(\\Delta\\)\uff0c\u4e00\u4e2a\u662f\u5168\u5c40\u548c \\(\\sum\\)\uff0c\u4e00\u4e2a\u662f\u4e0a\u4e00\u4e2a\u88ab\u6539\u53d8\u7684\u4f4d\u7f6e \\(dp(i - 1, b_{i - 1})\\) \u5e73\u79fb\u4e4b\u524d\u7684\u503c\u3002</p> <p>\u7136\u540e\u8f6c\u79fb\u5c31\u5f88\u65b9\u4fbf\u4e86\u3002</p> Code <pre><code>#include &lt;map&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;ext/pb_ds/hash_policy.hpp&gt;\n#include &lt;ext/pb_ds/assoc_container.hpp&gt;\n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 3e5 + 10;\nconst int mod = 1e9 + 7;\n\nint n;\ni64 a[si];\ni64 sum = 0, delta = 0;\n// __gnu_pbds::gp_hash_table&lt;i64, i64&gt; dp;\nmap&lt;i64, i64&gt; dp;\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n;\ndp.clear();\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\ndp[0] = 1ll, sum = 1ll, delta = 0ll;\nfor(int i = 1; i &lt;= n; ++i) {\nint kot = (sum - dp[0ll - delta] + mod) % mod;\nsum = (sum + kot) % mod, delta += a[i];\ndp[a[i] - delta] = (dp[a[i] - delta] + kot) % mod;\n}\ncout &lt;&lt; sum &lt;&lt; \"\\n\";\n}\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : DP\u4f18\u5316/\u6c34\u4f4d\u7ebf\u6cd5\n</code></pre>"}, {"location": "rec/tricks-for-2022-05/#cf1156f-card-bag", "title": "CF1156F Card Bag", "text": "<p>\u7ed9\u4f60 \\(n\\) \u5f20\u724c\uff0c\u6bcf\u5f20\u724c\u4e0a\u6709\u4e00\u4e2a\u6570\u5b57 \\(a_i, 1\\le a_i \\le n\\)\u3002</p> <p>\u4f60\u6bcf\u6b21\u4f1a\u4ece\u724c\u5806\u91cc\u62bd\u4e00\u5f20\u724c\uff0c\u62bd\u5b8c\u4e4b\u540e\u4e0d\u653e\u56de\u3002</p> <p>\u5047\u8bbe\u5f53\u524d\u62bd\u5230 \\(x\\)\uff0c\u4e0a\u4e00\u5f20\u62bd\u51fa\u7684\u662f \\(y\\)\u3002</p> <ul> <li>\u5982\u679c \\(x = y\\)\uff0cwin\u3002</li> <li>\u5982\u679c \\(x &lt; y\\)\uff0close\u3002</li> <li>\u5982\u679c \\(x &gt; y\\)\uff0ccontinue\u3002</li> </ul> <p>\u95ee\u4f60\u6700\u540e\u83b7\u80dc\u7684\u6982\u7387\u662f\u591a\u5c11\uff0c\u5bf9 \\(998244353\\) \u53d6\u6a21\uff0c\\(1\\le n \\le 5000\\)\u3002</p> <p>\u53d1\u73b0\u8981\u5904\u7406\u7684\u8981\u7d20\u6709\u70b9\u591a\uff1a</p> <ul> <li>\u62bd\u5b8c\u4e0d\u653e\u56de\u53bb</li> <li>\u6bcf\u6b21\u53ef\u80fd\u6709\u4e09\u79cd\u6e38\u620f\u72b6\u6001\uff1awin,lose,continue\u3002</li> <li>\u6bcf\u5f20\u724c\u7684\u6570\u91cf</li> </ul> <p>\u7b2c\u4e00\u4e2a\u76f4\u63a5\u8bb0\u5f55\u5f53\u524d\u62bd\u4e86\u7b2c\u51e0\u6b21\u5c31\u884c\u4e86\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u4e5f\u6bd4\u8f83\u597d\u505a\uff0close\u5c31\u76f4\u63a5\u9000\u51fa\u4e86\uff0c\u5bf9\u4e8e\u6700\u540e\u7684\u7b54\u6848\u4e0d\u4f1a\u6709\u8d21\u732e\uff0ccontinue \u9700\u8981\u8bbe\u8ba1\u72b6\u6001\u8868\u793a\uff0c\u4f46\u662f\u53d1\u73b0 win \u53ea\u9700\u8981\u8003\u8651\u6700\u540e\u4e24\u4e2a\u724c\u76f8\u540c\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u4e5f\u4e0d\u7528\u8bbe\u8ba1\u72b6\u6001\uff0c\u6700\u540e\u7edf\u4e00\u8ba1\u7b97\u8d21\u732e\u5373\u53ef\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406 continue \u7684\u60c5\u51b5\u3002</p> <p>\u6700\u9ebb\u70e6\u7684\u662f\u6700\u540e\u4e00\u4e2a\uff0c\u611f\u89c9\u4e0a\u6765\u8bf4\u9700\u8981\u8bb0\u5f55\u6bcf\u5f20\u724c\u5269\u4f59\u7684\u6570\u91cf\uff0c\u4f46\u8fd9\u6837\u72b6\u6001\u627f\u53d7\u4e0d\u4e86\uff0c\u4e5f\u4e0d\u597d\u8f6c\u79fb\u3002</p> <p>\u4f46\u5176\u5b9e\u4e0d\u7528\uff0c\u56e0\u4e3a\u6709\u4e00\u4e2a\u6027\u8d28\uff08\u89c1\u4e0b\u9762\u7684 Warning\uff09\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8bbe\u8ba1\u51fa DP \uff1a \u8bbe \\(dp(i, j)\\) \u8868\u793a\u8003\u8651\u7b2c \\(i\\) \u6b21\uff0c\u62bd\u5230 \\(j\\) \u4e14\u7ee7\u7eed\u4e0b\u53bb\u7684\u6982\u7387\u3002</p> <p>\u56e0\u4e3a\u8981\u4fdd\u8bc1\u4e00\u76f4\u7ee7\u7eed\uff0c\u6240\u4ee5\u8f6c\u79fb\u7684\u65f6\u5019\u4e0d\u80fd\u4ece\u4e0a\u4e00\u4e2a\u53d6\u5927\u4e8e \\(j\\) \u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\uff0c\u53c8\u8981\u4fdd\u8bc1\u9700\u8981\u7ee7\u7eed\u4e0b\u53bb\uff0c\u6240\u4ee5\u4e5f\u4e0d\u80fd\u4ece\u4e0a\u4e00\u4e2a\u53d6 \\(j\\) \u7684\u8f6c\u79fb\u3002</p> <p>\u5199\u51fa\u65b9\u7a0b\uff1a</p> \\[dp(i, j) = \\sum\\limits_{k = 1}^{j - 1} dp(i - 1, k) + \\dfrac{cnt(j)}{n - i + 1}\\] <p>\u53ef\u4ee5\u524d\u7f00\u548c\u4f18\u5316\u5230 \\(\\text{O}(n^2)\\)\u3002</p> <p>\u8003\u8651\u8ba1\u7b97\u7b54\u6848\u3002</p> <p>\u53d1\u73b0\u53ea\u8981 \\(cnt(j) &gt; 1\\)\uff0c\u90a3\u4e48\u72b6\u6001 \\(dp(i, j)\\) \u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f \\(\\dfrac{cnt(j) - 1}{n - i}\\)\u3002</p> <p>\u56e0\u4e3a\u53ea\u8981 \\(cnt(j) &gt; 1\\)\uff0c\u90a3\u4f60\u524d\u540e\u4e24\u4e2a\u5c31\u53ef\u4ee5\u53d6\u4e00\u6837\u7684\uff0c\u7136\u540e\u5728 \\(dp(i, j)\\) \u7684\u57fa\u7840\u4e0a\u4e58\u4e00\u4e2a\u518d\u6b21\u53d6\u5230 \\(j\\) \u7684\u6982\u7387\u5373\u53ef\u3002</p> <p>\u53c8\u56e0\u4e3a\u6240\u6709\u80dc\u5229\u7684\u60c5\u51b5\u662f\u4e92\u65a5\uff08\u4e92\u4e0d\u5f71\u54cd\uff09\u7684\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7b54\u6848\u76f4\u63a5\u6c42\u4e2a \\(\\sum\\) \u5373\u53ef\u3002</p> <p>Warning</p> <p>\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8f6c\u79fb\u7684\u65f6\u5019\u53d6\u5230 \\(j\\) \u7684\u6982\u7387\u662f \\(\\dfrac{cnt(j)}{n - i + 1}\\)\uff0c</p> <p>\u53d1\u73b0\u4f60\u9700\u8981\u7ee7\u7eed\u4e0b\u53bb\uff0c\u5f53\u4e14\u4ec5\u5f53\u4f60\u53d6\u51fa\u6765\u7684\u6570\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u4e4b\u540e\u662f\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\u3002</p> <p>\u6240\u4ee5\u5176\u5b9e\u5982\u679c\u8981\u4e00\u76f4\u7ee7\u7eed\uff0c\u6bcf\u79cd\u724c\u662f\u53ea\u80fd\u53d6\u4e00\u5f20\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u5f53\u524d\u8003\u8651\u7684\u662f\u4e00\u76f4\u7ee7\u7eed\uff0c\u90a3\u4e48\u62bd\u5230 \\(j\\) \u7684\u65f6\u5019\u4e00\u5b9a\u662f\u7b2c\u4e00\u6b21\u62bd\u5230\u3002</p> <p>\u6240\u4ee5\u6982\u7387\u53ef\u4ee5\u8fd9\u4e48\u7b97\u3002</p> <p>\u6700\u540e\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\u540c\u7406\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e3 + 10;\nconstexpr int mod = 998244353;\n\nint n;\nint a[si], inv[si];\nint cnt[si], sum[si];\nint dp[si][si], ans = 0;\n\ni64 qpow(i64 __a, i64 __b){\ni64 __ans = 1 % mod;\nfor(; __b; __b &gt;&gt;= 1){\nif(__b &amp; 1) __ans = __ans * __a % mod;\n__a = __a * __a % mod;\n}\nreturn __ans % mod;\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i], cnt[a[i]] ++;\n\ninv[0] = 0 % mod, inv[1] = 1 % mod;\nfor(int i = 2; i &lt;= n; ++i)\ninv[i] = qpow(i, mod - 2) % mod;\n\nsum[0] = 0;\nfor(int i = 1; i &lt;= n; ++i) dp[1][i] = 1ll * cnt[i] % mod * 1ll * inv[n] % mod; for(int i = 2; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= n; ++j) sum[j] = (sum[j - 1] + dp[i - 1][j]) % mod;\nfor(int j = 1; j &lt;= n; ++j) {\ndp[i][j] = 1ll * sum[j - 1] * 1ll * cnt[j] % mod * 1ll * inv[n - i + 1] % mod;\n}\n}\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= n; ++j) {\nif(cnt[j] &gt;= 2) ans = (ans + (1ll * dp[i][j] * 1ll * (cnt[j] - 1) % mod * 1ll * inv[n - i]) % mod) % mod;\n}\n}\n\ncout &lt;&lt; ans % mod &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u6982\u7387DP\n</code></pre>"}, {"location": "rec/tricks-for-2022-05/#cf1077f2-pictures-with-kittenshard-version", "title": "CF1077F2 Pictures with Kittens(Hard version)", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u6570\u5217 \\(a\\)\uff0c\u4f60\u9700\u8981\u9009\u62e9 \\(m\\) \u4e2a\u5143\u7d20\uff0c</p> <p>\u4f7f\u5f97\u8fde\u7eed\u7684 \\(k\\) \u4e2a\u5143\u7d20\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u88ab\u9009\u4e2d\u3002</p> <p>\u9700\u8981\u4f60\u6700\u5927\u5316\u9009\u51fa\u6765\u7684\u6240\u6709\u6570\u7684\u548c\u3002</p> <p>\\(1\\le m, k \\le n \\le 5000, 1\\le a_i \\le 10^9\\)\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u6734\u7d20\u7684 DP\uff0c\u56e0\u4e3a\u6b64\u5904\u6709\u8981\u6c42\u9009\u591a\u5c11\u4e2a\u7684\u9650\u5236\uff0c\u6240\u4ee5\u53ef\u4ee5\u6709\uff1a</p> <p>\\(dp(i, j)\\) \u8868\u793a\uff0c\u8003\u8651\u524d \\(i\\) \u4e2a\u5143\u7d20\uff0c\u5f53\u524d\u9009\u62e9\u4e86 \\(j\\) \u4e2a\u5143\u7d20\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u7136\u540e\u53c8\u6709\u4e00\u4e2a\u8fde\u7eed \\(k\\) \u4e2a\u5fc5\u987b\u8981\u9009\u7684\u9650\u5236\uff0c\u8003\u8651\u9009 \\(i\\) \u8fdb\u884c\u51b3\u7b56\u5373\u53ef\u3002</p> <p>\u6240\u4ee5\u6709\u65b9\u7a0b\uff1a</p> \\[dp(i, j) = \\max\\limits_{\\max(0, i - k) \\le l &lt; i}\\{dp(l, j - 1) + a_i\\}\\] <p>\u8003\u8651\u600e\u4e48\u4f18\u5316\uff0c\u611f\u89c9\u8fd9\u4e2a\u5f0f\u5b50\u5f88\u50cf\u5355\u8c03\u961f\u5217\u4f18\u5316\u7684 1D1D\uff0c\u6240\u4ee5\u5148\u628a \\(a_i\\) \u63d0\u51fa\u6765\u3002</p> <p>\u6240\u4ee5\u8bd5\u7740\u56fa\u5b9a\u4e00\u4e0b \\(i\\)\uff0c\u53d1\u73b0\u6bcf\u5f53 \\(j + 1\\)\uff0c\u51b3\u7b56\u96c6\u5408\u53d8\u5316\u662f\u5f88\u5947\u602a\u7684\u3002</p> <p>\u56e0\u4e3a\u540e\u9762\u7684\u72b6\u6001\u662f \\(dp(l, j - 1)\\)\uff0c\\(j\\) \u4e00\u53d8\u4ed6\u4e5f\u8981\u53d8\u3002</p> <p>\u6240\u4ee5\u6362\u79cd\u601d\u8003\u65b9\u5f0f\uff0c\u6211\u4eec\u8003\u8651\u76f4\u63a5\u8ba9 \\(i\\) \u5355\u8c03\u53d8\u5316\uff0c\u770b\u51b3\u7b56\u96c6\u5408\u600e\u4e48\u53d8\u5316\uff08\u56e0\u4e3a\u51b3\u7b56\u96c6\u5408\u4e0a\u4e0b\u754c\u90fd\u662f\u5173\u4e8e \\(i\\) \u7684\u5f0f\u5b50\uff09\u3002</p> <p>\u90a3\u4e48\u53d1\u73b0\u8fd9\u91cc\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u4e00\u4e2a\u7279\u5b9a\u533a\u95f4\u53d6\u6700\u503c\uff0c\u4e14\u8fd9\u4e2a\u533a\u95f4\u4f1a\u5355\u8c03\u6ed1\u52a8\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(j\\) \u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u7ef4\u62a4 \\(kot \\in [i - k, i)\\) \u7684 \\(\\max\\{dp(kot, j)\\}\\)</p> <p>\u7136\u540e\u6bcf\u5f53 \\(i\\) \u53d8\u5316\u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002</p> <p>\u6bcf\u6b21\u8be2\u95ee\u53ea\u9700\u8981\u5728 \\(j - 1\\) \u7684\u5355\u8c03\u961f\u5217\u91cc\u9762\u627e\u6700\u503c\u8f6c\u79fb\u5c31\u597d\u4e86\u3002</p> Code <pre><code>#include &lt;cmath&gt;\n#include &lt;deque&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e3 + 10;\nconst i64 inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, m, k;\ni64 a[si], dp[si][si];\ndeque&lt;pair&lt;i64, int&gt;&gt; Q[si];\n\nint main() {    auto query = [&amp;](int id, int pos) -&gt; i64 {\nauto &amp;q = Q[id];\nwhile(!q.empty() &amp;&amp; q.front().second &lt;= pos - k)\nq.pop_front();\nreturn q.empty() ? -inf : q.front().first;\n};\n\nauto update = [&amp;](int id, int pos, i64 num) -&gt; void{\nauto &amp;q = Q[id];\nwhile(!q.empty() &amp;&amp; q.back().first &lt;= num)\nq.pop_back();\nq.push_back(make_pair(num, pos));\n};\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; k &gt;&gt; m;\n\nif(ceil((1.0 * (n - k + 1)) / (1.0 * k)) &gt; m)\ncout &lt;&lt; \"-1\\n\", exit(0);\n\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\nfor(int i = 1; i &lt;= k; ++i) dp[i][1] = a[i];\n\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = min(i, m); j &gt;= 2; --j) {\ndp[i][j] = query(j - 1, i - 1) + a[i];\nupdate(j, i, dp[i][j]);         }\nif(i &lt;= k){\ndp[i][1] = a[i];\nupdate(1, i, dp[i][1]);\n}\n}\n\ni64 res = 0;\n\nfor(int i = n - k + 1; i &lt;= n; ++i)\nres = max(res, dp[i][m]);\n\ncout &lt;&lt; res &lt;&lt; \"\\n\";\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/tricks-for-2022-05/#cf1407d-discrete-centrifugal-jumps", "title": "CF1407D Discrete Centrifugal Jumps", "text": "<p>\u6709 \\(n\\) \u680b\u697c\uff0c\u4f60\u6bcf\u6b21\u53ef\u4ee5\u4ece \\(i\\) \u8df3\u5230 \\(j\\)\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e00\u4e0b\u4e09\u4e2a\u6761\u4ef6\u6709\u81f3\u5c11\u4e00\u4e2a\u88ab\u6ee1\u8db3\u3002</p> <p>\uff08\u8bbe\u6bcf\u680b\u697c\u7684\u9ad8\u5ea6\u4e3a \\(h_i\\)\uff09</p> <ul> <li>\\(i + 1 = j\\)</li> <li>\\(min(h_i,h_j) &gt; max(h_{i + 1}, \\dots, h_{j - 1})\\)</li> <li>\\(max(h_i, h_j) &lt; min(h_{i + 1}, \\dots, h_{j - 1})\\)</li> </ul> <p>\u8bf7\u95ee\u4ece \\(1\\) \u8df3\u5230 \\(n\\) \u7684\u6700\u5c0f\u6b65\u6570\u662f\u591a\u5c11\uff1f</p> <p>\\(2 \\le n \\le 3\\times 10^5\\)\u3002</p> <p>\\(1\\le h_i \\le 10^9\\)\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u975e\u5e38\u6734\u7d20\u7684 DP\uff0c</p> <p>\u8bbe \\(dp(i)\\) \u8868\u793a\u4ece \\(1\\) \u5230 \\(i\\) \u7684\u6700\u5c0f\u6b65\u6570\u3002</p> <p>\\(\\text{O}(n^3)\\) \u7684 DP \u6bd4\u8f83\u5bb9\u6613\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\u76f4\u63a5\u4ece \\(dp(i - 1)\\) \u8f6c\u79fb\u3002</p> <p>\u540e\u4e24\u79cd\u60c5\u51b5\u679a\u4e3e\u5373\u53ef\u3002</p> <p>\u7136\u540e\u8003\u8651\u4f18\u5316\u540e\u4e24\u79cd\u60c5\u51b5\uff0c</p> <p>\u6bd4\u5982\u4e00\u4e2a\u5c40\u90e8\u957f\u6210\u8fd9\u6837\uff1a</p> \\[4\\ 3\\ 2\\ 1\\ 5\\] <pre><code>        +\n+       +\n+ +     +\n+ + +   +\n+ + + + +\n---------\n1 2 3 4 5 (position)\n</code></pre> <p>\u7136\u540e\u4f60\u8981\u8003\u8651 \\(dp(5)\\) \u7684\u8f6c\u79fb\u3002</p> <p>\u53d1\u73b0 \u4f4d\u7f6e \\(1, 2, 3\\) \u90fd\u53ef\u4ee5\u8f6c\u79fb\u5230 \\(5\\)\uff0c\u56e0\u4e3a\u6ee1\u8db3\u4e86\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002</p> <p>\u7136\u540e \\(4\\) \u4e5f\u53ef\u4ee5\u8f6c\u79fb\u5230 \\(5\\)\uff0c\u56e0\u4e3a\u4ed6\u4eec\u76f8\u90bb\u3002</p> <p>\u6ce8\u610f\u5230\u8fd9\u5b9e\u9645\u4e0a\u662f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6808\u9876\u4e3a\u6700\u5c0f\u503c\u7684\u5355\u8c03\u6808\uff08\u4ece\u9876\u5411\u4e0b\u975e\u4e25\u683c\u9012\u589e\uff09\uff0c</p> <p>\u7136\u540e\u4e0d\u65ad\u628a\u5f39\u51fa\u6808\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u8f6c\u79fb\u7684\u8fc7\u7a0b\u3002</p> <p>\u7b2c\u4e09\u79cd\u60c5\u51b5\u7c7b\u4f3c\uff0c\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u4e24\u4e2a\u5355\u8c03\u6808\u5373\u53ef\u3002</p> <p>\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u8fd9\u79cd\u60c5\u51b5\uff1a</p> \\[3\\ 2\\ 3\\ 2\\ 3\\] <p>\u6b64\u65f6\u4f4d\u7f6e \\(1\\) \u65e0\u6cd5\u8f6c\u79fb\u5230\u4f4d\u7f6e \\(5\\)\uff0c\u56e0\u4e3a\u4e0d\u6ee1\u8db3\u4e25\u683c\u5c0f\u4e8e\u7684\u9650\u5236\u3002</p> <p>\u4f46\u662f\u4f4d\u7f6e \\(3\\) \u5219\u53ef\u4ee5\uff0c\u56e0\u4e3a\u4ed6\u662f\u548c\u4f4d\u7f6e \\(5\\) \u7684 \\(h\\) \u503c\u76f8\u7b49\u4e14\u53ef\u4ee5\u8f6c\u79fb\u5230 \\(5\\) \u7684\u6240\u6709\u4f4d\u7f6e\u4e2d\u8ddd\u79bb \\(5\\) \u6700\u8fd1\u7684\u4e00\u4e2a\u3002</p> <p>\u90a3\u4e48\u5c31\u9700\u8981\u5728\u6b63\u5e38\u5f39\u6808\u4e4b\u540e\uff0c\u518d\u628a\u548c\u5f53\u524d\u4f4d\u7f6e\u7684\u503c \\(h_i\\) \u76f8\u540c\u7684\u5143\u7d20\u5168\u90e8\u5f39\u6389\uff0c\u7136\u540e\u518d\u628a \\(h_i\\) \u538b\u8fdb\u53bb\u3002</p> <p>\u4f46\u662f\u5f39\u6389\u76f8\u540c\u5143\u7d20\u4e4b\u524d\u4e0d\u8981\u5fd8\u8bb0\u548c\u7b2c\u4e00\u4e2a\u76f8\u540c\u7684\uff08\u8ddd\u79bb\u6700\u8fd1\u7684\u4e00\u4e2a\uff09\u5143\u7d20\u505a\u4e00\u6b21\u8f6c\u79fb\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;stack&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 3e5 + 10;\n\nint n;\nint a[si];\nint dp[si];\n\nstd::stack&lt;int&gt; upper, lower;\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nmemset(dp, 0x3f, sizeof dp);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n\nupper.push(1), lower.push(1), dp[1] = 0;\nfor(int i = 2; i &lt;= n; ++i) {\ndp[i] = min(dp[i], dp[i - 1] + 1);\n\nwhile(!upper.empty() &amp;&amp; a[i] &lt; a[upper.top()]) dp[i] = min(dp[i], dp[upper.top()] + 1), upper.pop();\nif(!upper.empty()) // \u8fd9\u91cc\u4e0d\u7ba1\u5f53\u524d\u6808\u9876\u662f\u4e0d\u662f\u4e00\u6837\u7684\u90fd\u8981\u53d6\uff0c\u56e0\u4e3a\u4e0d\u53bb\u4f1a\u6f0f\u6389\u4e00\u4e9b\u8f6c\u79fb\u3002\n// \u6709\u65e0\u4f8b\u5b50\uff1f\ndp[i] = min(dp[i], dp[upper.top()] + 1);\nwhile(!upper.empty() &amp;&amp; a[i] == a[upper.top()])\nupper.pop();\n// \u76f8\u7b49\u7684\u5f39\u6389\uff0c\u56e0\u4e3a\u53ea\u80fd\u53d6\u7b2c\u4e00\u4e2a\u76f8\u7b49\u7684\u8f6c\u79fb\u3002\nupper.push(i);\n\nwhile(!lower.empty() &amp;&amp; a[i] &gt; a[lower.top()]) dp[i] = min(dp[i], dp[lower.top()] + 1), lower.pop();\nif(!lower.empty())\ndp[i] = min(dp[i], dp[lower.top()] + 1);\nwhile(!lower.empty() &amp;&amp; a[i] == a[lower.top()])\nlower.pop();\nlower.push(i);\n}\n\ncout &lt;&lt; dp[n] &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/tricks-for-2022-05/#cf980d-perfect-groups", "title": "CF980D Perfect Groups", "text": "<p>\u4f60\u6709\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u4f60\u9700\u8981\u5206\u522b\u8ba1\u7b97\u8d21\u732e\u4e3a \\(1\\sim n\\) \u7684 \\(a\\) \u7684\u5b50\u4e32\u7684\u6570\u91cf\u3002</p> <p>\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5b50\u4e32\uff0c\u5c06\u8fd9\u4e2a\u5b50\u4e32\u91cc\u7684\u6240\u6709\u5143\u7d20\u5206\u6210 \\(k\\) \u7ec4\uff0c\u4fdd\u8bc1\u6bcf\u7ec4\u91cc\u7684\u6570\u4e24\u4e24\u76f8\u4e58\u4e4b\u540e\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u3002</p> <p>\u8fd9\u4e2a\u5b50\u4e32\u7684\u8d21\u732e\u5c31\u662f\u6700\u5c0f\u7684 \\(k\\)\u3002</p> <p>\\(1\\le n\\le 5000, |a_i| \\le 10^9\\)\u3002</p> <p>\u7b2c\u4e00\u79cd\u6bd4\u8f83\u66b4\u529b\u7684\u65b9\u5f0f\u5c31\u662f\uff0c\u76f4\u63a5\u7528\u5e76\u67e5\u96c6\u628a\u6240\u6709\u4e58\u8d77\u6765\u662f\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u5408\u5e76\u5230\u4e00\u4e2a\u96c6\u5408\u91cc\u3002</p> <p>\u56e0\u4e3a\u5982\u679c \\(a\\times b\\) \u662f\u5b8c\u5168\u5e73\u65b9\uff0c\u4e14 \\(b\\times c\\) \u662f\u5b8c\u5168\u5e73\u65b9\uff0c\u90a3\u4e48 \\(c\\times a\\) \u4e5f\u662f\u5b8c\u5168\u5e73\u65b9\u3002</p> <p>\u7136\u540e \\(\\text{O}(n^2)\\) \u679a\u4e3e\u6240\u6709\u5b50\u4e32\u8ba1\u7b97\u7b54\u6848\u5373\u53ef\u3002</p> <p>\u6216\u8005\u7528\u4e00\u4e2a\u5de7\u5999\u4e00\u70b9\u7684\u529e\u6cd5\uff08\u53ef\u4ee5\u8fc7\u5929\u5143\u516c\u5b66\u7684\u67d0\u573a\u63d0\u9ad8\u9080\u8bf7\u8d5b\u7684 B \u7684\u505a\u6cd5\uff09\u3002</p> <p>\u76f4\u63a5\u628a\u6240\u6709\u5e73\u65b9\u56e0\u5b50\u7b5b\u6389\uff0c\u4e4b\u540e\u76f8\u7b49\u7684\u5c31\u5e94\u8be5\u6254\u5230\u4e00\u4e2a\u96c6\u5408\u91cc\u9762\u3002</p> <p>\u6ce8\u610f\u8fd9\u4e24\u79cd\u505a\u6cd5\u90fd\u8981\u7279\u5224 \\(0\\) \u7684\u5f71\u54cd\u3002</p> \\(\\text{O}(n^2)\\) Code <pre><code>// author : black_trees\n\n#include &lt;map&gt;\n#include &lt;cmath&gt;\n#include &lt;bitset&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")  \n\n#define meow(x) cerr &lt;&lt; #x &lt;&lt; \" = \" &lt;&lt; x\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\n\nconst int si = 5e3 + 10;\n\nint n;\ni64 a[si];\nint ans[si];\n\nint pa[si];\nint root(int x) {\nif(pa[x] != x)\nreturn pa[x] = root(pa[x]);\nreturn pa[x];\n}\nvoid merge(int x, int y) {  int rx = root(x), ry = root(y);\nif(rx == ry) return;\npa[rx] = ry;\n}\nbool issqr(i64 m) {\ni64 t = sqrt((ldb)m); return ((t * t) == m);\n}\n\nint main() {    cin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i], pa[i] = i;\n\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = i + 1; j &lt;= n; ++j) {\nif(!a[i] || !a[j])\ncontinue;\nif(issqr(1ll * a[i] * a[j]))\nmerge(i, j);\n}\n}\n\n// for(int i = 1; i &lt;= n; ++i) \n// meow(pa[i]) &lt;&lt; endl;\n\n// memset(ans, 0, sizeof ans);\n// std::bitset&lt;si&gt; Set;\n// std::map&lt;int, bool&gt; Set;\nbool Set[si];\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= n; ++j) Set[j] = false;\n\nfor(int j = i, cnt = 0; j &lt;= n; ++j) {\nif(!a[j]) ans[max(1, cnt)] ++;\nelse ans[cnt = Set[root(j)] ? cnt : ++cnt] ++, Set[root(j)] = true;\n} }\n\nfor(int i = 1; i &lt;= n; ++i) cout &lt;&lt; ans[i] &lt;&lt; \" \";\ncout &lt;&lt; \"\\n\";\n\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u5e76\u67e5\u96c6/\u66b4\u529b/\u6570\u8bba/\u7b5b\u6cd5/\u5e73\u65b9\u56e0\u5b50/\u552f\u4e00\u5206\u89e3\u5b9a\u7406\n</code></pre>"}, {"location": "rec/tricks-for-2023-05-06/", "title": "\u6742\u9898\u9009\u505a(23May,23Jun)", "text": ""}, {"location": "rec/tricks-for-2023-05-06/#cf833b-the-bakery", "title": "CF833B The Bakery", "text": "<p>\u5c06\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217\u5206\u4e3a \\(k\\) \u6bb5\uff0c\u4f7f\u5f97\u603b\u4ef7\u503c\u6700\u5927\u3002</p> <p>\u4e00\u6bb5\u533a\u95f4\u7684\u4ef7\u503c\u8868\u793a\u4e3a\u533a\u95f4\u5185\u4e0d\u540c\u6570\u5b57\u7684\u4e2a\u6570\u3002</p> <p>\\(n\\leq 35000,k\\leq 50\\)</p> <p>Translated by @ysner @yybyyb</p> <p>\u8003\u8651\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u66b4\u529b dp\uff1a\u8bbe \\(dp(i, j)\\) \u8868\u793a\uff0c\u8003\u8651\u524d \\(i\\) \u4e2a\u4f4d\u7f6e\uff0c\u5206\u6210 \\(j\\) \u6bb5\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>\u679a\u4e3e\u4e0a\u4e00\u4e2a\u7aef\u70b9\u5373\u53ef\u8f6c\u79fb\uff1a\\(dp(i, j) = \\max\\limits_{k = j - 1}^{i - 1}\\{dp(k, j - 1) + F(k + 1, i)\\}\\)\u3002</p> <p>\u5148\u4e0d\u7ba1\u91cc\u9762\u600e\u4e48\u5f04\uff0c\u5148\u628a\u5916\u9762\u51b3\u7b56\u96c6\u5408\u4f18\u5316\u4e00\u4e0b\uff0c\u6ce8\u610f\u5230\u5982\u679c\u56fa\u5b9a \\(i\\)\uff0c\u90a3\u4e48\u5f53 \\(j + 1\\) \u7684\u65f6\u5019\uff0c\u51b3\u7b56\u96c6\u5408\u4f1a\u5c11 \\(O(k)\\) \u6570\u91cf\u7ea7\u7684\u72b6\u6001\uff0c\u8fd9\u662f\u4e0d\u597d\u505a\u7684\u3002</p> <p>\u90a3\u4e48\u56fa\u5b9a \\(j\\)\uff0c\u89c2\u5bdf\u5f53 \\(i + 1\\) \u65f6\u7684\u51b3\u7b56\u96c6\u5408\u53d8\u5316\uff1a\u53ea\u662f\u591a\u4e86\u4e00\u4e2a \\(dp(i, j - 1)\\)\uff0c\\(O(1)\\) \u53d8\u5316\uff0c\u4e8e\u662f\u6211\u4eec\u9009\u62e9\u56fa\u5b9a \\(j\\)\uff0c\u4ee5 \\(j\\) \u4f5c\u4e3a\u9636\u6bb5\u3002</p> <p>\u4e4b\u540e\u8003\u8651\u600e\u4e48\u4f18\u5316 \\(F\\) \u7684\u8ba1\u7b97\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5355\u72ec\u8ba1\u7b97\u662f\u65b9\u4fbf\u7684\uff0c\u4f46\u662f\u6211\u4eec\u73b0\u5728\u5c06\u5176\u52a0\u5230\u4e86\u65b9\u7a0b\u4e2d\uff0c\u5b83\u4e5f\u6ca1\u6cd5\u4ee5\u591a\u9879\u5f0f\u7684\u5f62\u5f0f\u5c55\u5f00\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u6362\u4e2a\u601d\u8def\uff0c\u65e2\u7136\u6b63\u7740\u7b97 \\(F\\) \u7b97\u4e0d\u4e86\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u8003\u8651\u53cd\u7740\u7b97 \\(F\\) \u7684\u8d21\u732e\uff0c\u5373\uff0c\u8003\u8651\u6bcf\u4e00\u4e2a\u4f4d\u7f6e \\(i\\) \u80fd\u5bf9\u54ea\u4e9b\u72b6\u6001\u9020\u6210\u8d21\u732e\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u8fd9\u4e2a\u8d21\u732e\u52a0\u5230\u5bf9\u5e94\u7684 dp \u6570\u7ec4\u91cc\u9762\u3002</p> <p>\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u4e00\u4e2a \\(a_i\\) \u7684\u8d21\u732e\u5e94\u5f53\u662f\u5bf9 \\(dp(pre(a_i) + 1 \\sim i, j - 1)\\) \u9020\u6210\u7684\uff0c\u5176\u4e2d \\(pre\\) \u662f\u4e0a\u4e00\u4e2a \\(a_i\\) \u7684\u4f4d\u7f6e\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u5f53\u524d\u53ea\u679a\u4e3e\u5230 \\(i\\)\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5f71\u54cd\u662f\u6709\u4e0a\u754c\u7684\uff0c\u4f9d\u6b21\u52a0\u5165\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u505a\u7684\u6b63\u786e\u6027\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u679a\u4e3e \\(j\\)\uff0c\u679a\u4e3e \\(i\\)\uff0c\u5bf9\u6bcf\u4e2a \\(i\\) \u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u8d21\u732e\uff0c\u7136\u540e\u8f6c\u79fb\u76f4\u63a5\u8be2\u95ee \\(\\max\\) \u5373\u53ef\u3002</p>"}, {"location": "rec/tricks-for-2023-05-06/#cf486d-valid-sets", "title": "CF486D Valid Sets", "text": ""}, {"location": "rec/tricks-for-2023-05-06/#cf1585fcf1591f-non-equal-neighbours", "title": "CF1585F/CF1591F Non-equal Neighbours", "text": ""}, {"location": "rec/tricks-for-2023-05-06/#cf1059e-split-the-tree", "title": "CF1059E Split the Tree", "text": ""}, {"location": "rec/tricks-for-2023-05-06/#cf1521d-nastia-play-with-a-tree", "title": "CF1521D Nastia Play with a Tree", "text": ""}, {"location": "rec/interesting/before-noip2022/", "title": "NOIP2022 \u8003\u524d\u601d\u7ef4\u6253\u5f00\u53e3\u80e1\u5408\u96c6", "text": ""}, {"location": "rec/interesting/before-noip2022/#noip2022", "title": "NOIP2022 \u8003\u524d\u8111\u6d1e\u6253\u5f00", "text": "<p>\u5927\u6982\u662f\u4e00\u4e2a\u81ea\u5df1\u627e\u7684\u671f\u671b\u548c\u5bb9\u65a5\u7684\u5c0f\u9898\u5355\uff08\u4e5f\u8bb8\u4f1a\u5199\uff09</p> <p>\u7136\u540e\u6768\u7237\u7ed9\u7684\u4e00\u5806\u4ea4\u4e92\uff08\u5168\u90e8\u53e3\u80e1\u7528\u6765\u6362\u6362\u8111\u5b50\uff09</p> <p>\u53ef\u80fd\u4f1a\u6709 ARC076\uff08\u548c hfy \u4e00\u8d77\u6253\uff09\u3002</p> <p>\u8003\u524d\u53ef\u80fd\u8fd8\u8981\u590d\u4e60\u4e00\u4e9b\u677f\u5b50\u3002\u6570\u5b66\uff0c\u56fe\u8bba\u7684\u4e3a\u4e3b\uff0c\u54e6\uff0c\u8fd8\u6709\u4e8c\u5206\u3002</p>"}, {"location": "rec/interesting/before-noip2022/#cf518d-ilya-and-escalator", "title": "CF518D. Ilya and Escalator", "text": "<p>\u7b80\u5355\u7684\u671f\u671b dp\uff0c\u8003\u8651\u8bbe \\(dp(i)\\) \u8868\u793a\u7b2c \\(i\\) \u79d2\u5728\u7535\u68af\u4e0a\u7684\u4eba\u7684\u671f\u671b\u3002</p> <p>\u4f46\u662f\u6ce8\u610f\u5230 \\(n\\) \u5bf9\u7ed3\u679c\u662f\u6709\u5f71\u54cd\u7684\uff0c\u6240\u4ee5\u518d\u52a0\u4e00\u4e2a\u7ef4\u5ea6\uff1a\\(dp(i, j)\\) \u8868\u793a\u8003\u8651\u7b2c \\(i\\) \u4e2a\u4eba\u5728\u961f\u5934\uff0c\u7b2c \\(j\\) \u79d2\u7684\u65f6\u5019\uff0c\u7535\u68af\u4e0a\u7684\u671f\u671b\u4eba\u6570\u3002</p> <p>\u4e4b\u524d\u6211\u505a\u671f\u671b dp \u7684\u65f6\u5019\u4e00\u76f4\u662f\u76f4\u63a5\u7528\u5b9a\u4e49\u548c\u6761\u4ef6\u5c55\u5f00\u5f0f\u5b50\uff0c\u7136\u540e\u4ece\u4e0a\u4e00\u4e2a\u72b6\u6001\u7684\u5b9a\u4e49\u5f0f\u5b50\u91cc\u9762\u76f4\u63a5\u9644\u5e26\u4e0a\u65b0\u7684\u51b3\u7b56\u7684\u5f71\u54cd\uff0c\u7136\u540e\u5408\u5e76\u540c\u7c7b\u9879\u63a8\u51fa\u5f0f\u5b50\u3002</p> <p>\u611f\u89c9\u8fd9\u79cd\u505a\u6cd5\u6bd4\u8f83\u8822\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u671f\u671b\u5b9a\u4e49\uff0c\u6982\u7387\u7684\u4e00\u4e9b\u77e5\u8bc6\u70b9\u6709\u70b9\u5fd8\u4e86\uff08whk \u7684\u6982\u7387\uff0c\u671f\u671b\u5565\u7684\u90fd\u662f\u5dee\u4e0d\u591a\u4e00\u5e74\u524d\u8fd9\u4e2a\u65f6\u5019\u5b66\u7684\u4e86\uff09\u3002</p> <ul> <li>\u5408\u4e8b\u4ef6 \\(A\\cup B\\) \u53d1\u751f\u7684\u6982\u7387\u662f \\(P(A) + P(B)\\)\u3002</li> <li>\u79ef\u4e8b\u4ef6 \\(A\\cap B\\) \u53d1\u751f\u7684\u6982\u7387\u662f \\(P(A) \\times P(B)\\)\u3002</li> </ul> <p>\u7136\u540e\u671f\u671b\u7684\u672c\u8d28\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u52a0\u6743\u5e73\u5747\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u53ef\u4ee5\u628a\u671f\u671b\u5f53\u6210\u968f\u673a\u53d8\u91cf\u7684\u4e00\u79cd\u53d6\u503c\uff0c\u53ef\u4ee5\u7528\u6765\u201c\u4ee3\u8868\u201d\u6240\u6709\u7684\u60c5\u51b5\u3002</p> <p>\u55ef\uff0c\u7136\u540e\u63a8\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\\(dp(i, j) = p \\times (dp(i - 1, j - 1) + 1) + (1 - p) \\times dp(i, j - 1)\\)\u3002</p> <p>\u6ca1\u4e86\u3002</p>"}, {"location": "rec/interesting/before-noip2022/#arc101ce", "title": "ARC101C(E)", "text": "<p>\u611f\u89c9\u4e5f\u662f\u5f88\u7b80\u5355\u7684\u5957\u8def\uff0c\u5c31\u662f\u6b63\u96be\u5219\u53cd\u3002</p> <p>\u6211\u8003\u8651\u7b97\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u6570\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5bb9\u65a5\u4e00\u4e0b\uff0c\u5c31\u5f3a\u5236\u67d0\u6761\u8fb9\u4e0d\u5408\u6cd5\uff0c\u679a\u4e3e\u6761\u4ef6\u6784\u6210\u7684\u5b50\u96c6\u7136\u540e\u4e58\u4e0a\u5bb9\u65a5\u7cfb\u6570\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528\u6811\u4e0a\u80cc\u5305\u4f18\u5316\uff0c\u4f46\u662f\u5177\u4f53\u7684\u6211\u4e0d\u662f\u5f88\u4f1a\uff0c\u53ef\u80fd\u5c31\u662f\u6ce8\u610f\u5230\u4e0d\u5408\u6cd5\u4e00\u5b9a\u4f1a\u9020\u6210\u4e00\u4e2a\u4e2a\u8fde\u901a\u5757\u7684\u51fa\u73b0\uff0c\u7528\u8fd9\u4e2a\u505a dp \u7b97\u8d21\u732e\u3002</p> <p>\u5177\u4f53\u7684\u6211\u5495\u6389\u4e86\uff0c\u4ee5\u540e\u518d\u6539\u3002</p>"}, {"location": "rec/interesting/before-noip2022/#arc076", "title": "ARC076", "text": "<p>\u8fd9\u4e2a\u89c1 ARC VP \u96c6\u5408\u3002</p> <p>\u8bdd\u8bf4\u8fd9\u4e2a\u96c6\u5408\u91cc\u73b0\u5728\u552f\u4e8c\u7684\u4e24\u6b21\u90fd\u662f\u8d5b\u524d\u6253\u7684\uff0c\u8349\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/", "title": "comb problem black trees PC", "text": "<p>\u7b80\u5355\u8bb0\u5f55\u4e00\u4e9b\u9519\u8fc7\u7684 / Educational \u7684\u7ec4\u5408\u6570\u5b66\u95ee\u9898 / \u8ba1\u6570\u95ee\u9898\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_1", "title": "\u4e00\u4e9b\u57fa\u672c\u6a21\u578b", "text": ""}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_2", "title": "\u5c0f\u7403\u6a21\u578b", "text": "<p>Reference: lleozhang \u7684\u535a\u5ba2</p> <p>\u6709\u533a\u522b\u597d\u6bd4\u505a\u6392\u5217\uff0c\u6ca1\u533a\u522b\u597d\u6bd4\u505a\u7ec4\u5408\u3002</p> <p>\u9ed8\u8ba4 \\(n\\) \u4e2a\u5c0f\u7403\uff0c\\(m\\) \u4e2a\u76d2\u5b50\u3002</p> <p>\u6216\u8005\u8bf4\uff0c\u5c0f\u7403\u6709\u533a\u522b\u53ef\u4ee5\u7406\u89e3\u6210\u6709 \\(n\\) \u4e2a\u4e0d\u540c\u5143\u7d20\uff0c\u4e00\u822c\u9700\u8981\u8003\u8651 \u5bf9\u4e8e\u6bcf\u4e2a\u5c0f\u7403\u90fd\u51b3\u7b56\uff08\u4e00\u822c\u662f\u9012\u63a8\uff09\u3002</p> <p>\u76d2\u5b50\u6709\u533a\u522b\u5219\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u65b9\u7a0b\u6c42\u6709\u591a\u5c11\u7ec4\u89e3 \\(\\{x_i\\}\\)\uff0c\u5982\u679c\u5c0f\u7403\u6ca1\u6709\u533a\u522b\uff0c\\(x_i\\) \u5c31\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u5c0f\u7403\u6709\u533a\u522b\uff0c\u90a3\u4e48\\(x_i\\) \u5c31\u662f\u4e00\u4e2a\u96c6\u5408\u3002</p> <p>\u5141\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50\u5c31\u7b49\u4ef7\u4e8e \\(x_i\\) \u7684\u9650\u5236\u3002</p> <p>\u6240\u4ee5\u5c0f\u7403\u6a21\u578b\u90fd\u53ef\u4ee5\u62bd\u8c61\u6210 \u5e7f\u4e49\u7684\u7ebf\u6027\u4e0d\u5b9a\u65b9\u7a0b\u7684\u89e3\u7684\u7ec4\u6570\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_3", "title": "\u5c0f\u7403\u6709\u533a\u522b\uff0c\u76d2\u5b50\u6709\u533a\u522b\uff0c\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u76f4\u63a5\u8003\u8651\u76d2\u5b50\u4e0d\u592a\u597d\u8003\u8651\uff0c\u76f4\u63a5\u8003\u8651\u7403\uff0c</p> <p>\u6bcf\u4e2a\u5c0f\u7403\u6709 \\(m\\) \u79cd\u653e\u6cd5\uff0c\u4e58\u6cd5\u539f\u7406\u6709 \\(m^n\\) \u79cd\u53ef\u80fd\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_4", "title": "\u5c0f\u7403\u6709\u533a\u522b\uff0c\u76d2\u5b50\u6709\u533a\u522b\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u8003\u8651\u8bbe\u51fd\u6570 \\(f(n, m)\\) \u8868\u793a \\(n\\) \u4e2a\u5c0f\u7403\u653e\u5230 \\(m\\) \u4e2a\u76d2\u5b50\u91cc\u7684\u65b9\u6848\u6570\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u5f53\u524d\u5c0f\u7403\u653e\u5728\u54ea\u91cc\u53ef\u4ee5\u5f97\u5230\u9012\u63a8\u5f0f\uff1a \\(f(n,m) = m(f(n - 1, m) + f(n - 1, m - 1))\\)\u3002</p> <p>\u5c31\u662f\u8003\u8651\u8fd9\u4e2a\u5c0f\u7403\u662f\u653e\u5230\u539f\u6765\u6709\u4e86\u7684\u8fd8\u662f\u653e\u5230\u4e00\u4e2a\u8fd8\u6ca1\u6709\u7403\u76d2\u5b50\u91cc\u9762\u3002</p> <p>\u56e0\u4e3a\u76d2\u5b50\u4e0d\u540c\u6240\u4ee5\u8981\u4e58 \\(m\\)\u3002</p> <p>\u8fb9\u754c\uff1a\\(n = m, f(n, m) = n!; m &gt; n, f(n, m) = 0\\)\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_5", "title": "\u5c0f\u7403\u6709\u533a\u522b\uff0c\u76d2\u5b50\u6ca1\u533a\u522b\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u548c \u300c\u5c0f\u7403\u6709\u533a\u522b\uff0c\u76d2\u5b50\u6709\u533a\u522b\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50\u300d \u7c7b\u4f3c\u3002</p> <p>\u8fd8\u662f\u8bbe \\(f(n, m)\\) \u8868\u793a \\(n\\) \u5c0f\u7403\u653e\u5230 \\(m\\) \u4e2a\u76d2\u5b50\u91cc\u7684\u65b9\u6848\u6570\u3002</p> <p>\u7c7b\u6bd4\u4e0a\u9762\u53ef\u4ee5\u5f97\u5230\u9012\u63a8\u5f0f\uff1a \\(f(n, m) = mf(n - 1, m) + f(n - 1, m - 1)\\)\u3002</p> <p>\u552f\u4e00\u7684\u533a\u522b\u662f\u76d2\u5b50\u4e0d\u540c\u3002</p> <p>\u8fd9\u4e2a\u662f\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570 \\(\\begin{Bmatrix}n \\\\ m\\end{Bmatrix}\\)\u3002</p> <p>\u5feb\u901f\u6c42\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_6", "title": "\u5c0f\u7403\u6709\u533a\u522b\uff0c\u76d2\u5b50\u6ca1\u533a\u522b\uff0c\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u7b80\u5355\u95ee\u9898\uff0c\u7528\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570\u8f6c\u5316\u4e00\u4e0b\uff0c\u8003\u8651\u5206\u522b\u653e\u5230 \\(k\\) \u4e2a\u76d2\u5b50\u5c31\u884c\u4e86\u3002</p> \\[ \\sum\\limits_{k = 1}^{m} \\begin{Bmatrix}n \\\\ k\\end{Bmatrix} \\]"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_7", "title": "\u5c0f\u7403\u6ca1\u533a\u522b\uff0c\u76d2\u5b50\u6709\u533a\u522b\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u5c31\u662f\u63d2\u677f\u6cd5\u7684\u57fa\u7840\uff0c\u7b54\u6848 \\(\\dbinom{n - 1}{m - 1}\\)\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_8", "title": "\u5c0f\u7403\u6ca1\u533a\u522b\uff0c\u76d2\u5b50\u6709\u533a\u522b\uff0c\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u63d2\u677f\u6cd5\u516c\u5f0f\uff0c\u7b54\u6848 \\(\\dbinom{n + m - 1}{n}\\)\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_9", "title": "\u5c0f\u7403\u6ca1\u533a\u522b\uff0c\u76d2\u5b50\u6ca1\u533a\u522b\uff0c\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u8fd9\u4e2a\u662f\u5206\u62c6\u6570\uff0c\u8fd8\u4e0d\u4f1a</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_10", "title": "\u5c0f\u7403\u6ca1\u533a\u522b\uff0c\u76d2\u5b50\u6ca1\u533a\u522b\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u5206\u62c6\u6570\u7684\u53d8\u79cd\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_11", "title": "\u4e00\u4e9b\u6709\u610f\u601d\u7684\u9898", "text": ""}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_12", "title": "\u4e00\u4e2a\u56db\u8272\u5b9a\u7406\u7684\u65b9\u6848\u6570\u8ba1\u6570", "text": "<pre><code>_________________\n|     |__E_|     |\n|  A  |__D_|  B  |\n|     |  C |     |\n-----------------\n</code></pre> <p>\u7ed9\u8fd9\u4e2a\u5730\u56fe\u4e0a\u8272\uff0c\u95ee\u65b9\u6848\u6570\u3002</p> <p>\u5148\u8003\u8651\u786e\u5b9a A \u533a\u57df\u548c B \u533a\u57df\u7684\u989c\u8272\u662f\u5426\u76f8\u540c\u3002</p> <p>\u56e0\u4e3a A\uff0cB \u533a\u57df\u7684\u989c\u8272\u51b3\u7b56\u4f1a\u5bfc\u81f4 E,C \u7684\u989c\u8272\u51b3\u7b56\u6570\u6539\u53d8\u3002</p> <ol> <li>\u5982\u679c A, B \u540c\u8272\uff0c\u90a3\u4e48 D \u5c31\u6709 3 \u79cd\u65b9\u6848\uff0c\u7136\u540e E, C \u5c31\u5404\u6709 2 \u79cd\u65b9\u6848\uff0c\u7b54\u6848 \\(4\\times 1 \\times 3 \\times 2 \\times 2 = 48\\)\u3002</li> <li>\u5982\u679c A, B \u4e0d\u540c\u8272\uff0c\u90a3\u4e48 D \u53ea\u6709 2 \u79cd\u65b9\u6848\uff0cE, C \u5404\u81ea\u53ea\u6709\u4e00\u79cd\uff0c\u7b54\u6848 \\(4 \\times 3 \\times 2 \\times 1 \\times 1 = 24\\)\u3002</li> </ol> <p>\u6700\u7ec8\u7b54\u6848 \\(48 + 24 = 72\\)\u3002</p> <p>\u8fd9\u91cc\u80fd\u62bd\u8c61\u51fa\u6765\u7684\u4e00\u4e2a\u5c0f Trick\uff1a</p> <p>\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u79cd \u65b9\u6848\u6570\u95ee\u9898\uff0c\u5728\u67d0\u4e00\u4e2a\u51b3\u7b56\u4f1a\u5f71\u54cd\u4e4b\u540e\u7684\u51b3\u7b56\u6570\u91cf\u7684\u65f6\u5019\u5c31\u8981\u5206\u7c7b\u8ba8\u8bba\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_13", "title": "\u4e00\u4e2a\u63d2\u677f\u6cd5\u7684\u5e94\u7528", "text": "<p>\u6254 \\(7\\) \u4e2a\u8d28\u5730\u5747\u5300\u7684\u9ab0\u5b50\uff0c\u51fa\u73b0\u548c\u4e3a \\(10\\) \u7684\u6982\u7387 \u4e3a \\(\\dfrac{n}{6^7}\\)\uff0c\\(n\\) \u5e94\u8be5\u7b49\u4e8e\u591a\u5c11\uff1f</p> <p>\u53ef\u4ee5\u8f6c\u5316\u4e3a\u63d2\u677f\u6cd5\uff0c\u7b54\u6848\u662f \\(\\dbinom{10 - 1}{7 - 1}\\)\uff0c\u56e0\u4e3a\u53d8\u91cf\u90fd\u662f \\(\\le 6\\) \u7684\uff0c\u591a\u4e86\u4e0d\u591f\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u8fd9\u4e48\u505a\u6ca1\u6709\u95ee\u9898\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_14", "title": "\u53e6\u5916\u4e00\u4e2a\u63d2\u677f\u6cd5\u7684\u5e94\u7528", "text": "<p>\u5b9a\u4e49 \\(D(n)\\) \u8868\u793a\u5c06\u6b63\u6574\u6570 \\(n\\) \u5206\u89e3\u4e3a\u5982\u4e0b\u5f62\u5f0f\u7684\u65b9\u6848\u6570\uff1a\\(n = f_1 \\times f_2 \\times f_i \\dots\\)\uff0c\u5176\u4e2d \\(i \\ge 1, f_i \\ge 1\\)\uff0c\\((f_i, f_{j}); (f_j, f_i)\\) \u662f\u4e0d\u540c\u7684\u65b9\u6848\u3002</p> <p>\u6c42 \\(D(96)\\)\u3002</p> <p>\u9996\u5148\u53d1\u73b0 \\(96 = 2^5 \\times 3\\)\uff0c\u628a \\(3\\) \u62ff\u51fa\u6765\u5148\u4e0d\u7ba1\uff0c</p> <p>\u7136\u540e \\(2^5\\) \u663e\u7136\u53ef\u4ee5\u5206\u6210 \\(2^{c_1}, 2^{c_2},\\dots 2^{c_m}, m \\le 5, c_i \\ge 0\\)</p> <p>\u7136\u540e\u5bf9\u4e8e \\(m = i\\) \u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u628a \\(3\\) \u653e\u5230\u8fd9\u4e9b\u6570\u91cc\u9762\u63d2\u677f\uff08\u53ef\u4ee5\u662f\u5934\u5c3e\uff09\uff0c\u6216\u8005\u76f4\u63a5\u4e58\u5230\u8fd9\u4e9b\u6570\u4e0a\u9762\uff0c\u6240\u4ee5\u6b64\u65f6\u7684\u65b9\u6848\u6570\u662f \\((i + 1 + i) \\times i!\\)\uff0c\u56e0\u4e3a\u8fd8\u53ef\u4ee5\u5168\u6392\u5217\u3002</p> <p>\u7136\u540e\u5c31\u53ea\u80fd\u5bf9\u4e8e\u6bcf\u4e2a\u60c5\u51b5\u786c\u7b97\u4e86\u3002\u3002\u3002\u3002\u3002</p>"}, {"location": "rec/interesting/comb-problem-black-trees-PC/#_15", "title": "\u7ebf\u6027\u6c42\u9006\u5143", "text": "<p>\u4e58\u6cd5\u9006\u5143\u7684\u5b9a\u4e49\u5927\u6982\u5c31\u662f\uff0c\u5982\u679c \\(a \\times inv \\equiv 1 (\\mod p)\\)\uff0c\u90a3\u4e48 \\(inv\\) \u5c31\u662f \\(a\\) \u5728\u6a21 \\(p\\) \u610f\u4e49\u4e0b\u7684\u4e58\u6cd5\u9006\u5143\uff0c\u4e00\u822c\u8bb0\u4f5c \\(a^{-1}\\) \u6216\u8005 \\(inv(a)\\)\u3002</p> <p>\u6b63\u5e38\u6765\u8bf4\u5e94\u8be5\u7528\u7fa4\u8bba\u6765\u89e3\u91ca\u9006\u5143\u7684\u5b9a\u4e49\uff0c\u4f46\u662f\u6211\u61d2\uff0c\u4e0d\u60f3\u5199\u4e86\u3002</p> <p>\u4f60\u53ef\u4ee5\u7406\u89e3\u6210 \\(a\\times a^{-1} \\equiv a\\times inv \\equiv1 (\\mod p)\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u7528\u6765\u5904\u7406\u5e26\u53d6\u6a21\u7684\u9664\u6cd5\u3002</p> <p>\u56e0\u4e3a\u52a0\u51cf\u4e58\u5728\u53d6\u6a21\u610f\u4e49\u4e0b\u90fd\u662f\u5c01\u95ed\u7684\uff0c\u4f46\u662f\u9664\u6cd5\u5c31\u6ca1\u6cd5\u5904\u7406\u3002</p> <p>\u6240\u4ee5\u4e3a\u4e86\u8ba9\u9664\u6cd5\u5728\u53d6\u6a21\u610f\u4e49\u4e0b\u4e5f\u662f\u5c01\u95ed\u7684\uff0c\u6211\u4eec\u628a\u9664\u6cd5\u8f6c\u5316\u6210\u4e58\u4e0a\u5206\u6bcd\u7684\u4e58\u6cd5\u9006\u5143\u5373\u53ef\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4 \\(\\dfrac{a}{b} \\equiv a\\times b^{-1} \\equiv a\\times inv(b) (\\mod p)\\)\u3002</p> <p>\u6709\u4e00\u4e2a\u5c0f\u6ce8\u610f\u70b9\u662f\uff0c\\(inv(a)\\times inv(b) = inv(ab)\\)\uff0c\u8fd9\u4e2a\u4ece\u5b9a\u4e49\u4e0a\u7684\u5c01\u95ed\u6027\u5373\u53ef\u77e5\u9053\u3002</p> <p>\u6c42\u6cd5\u53ef\u4ee5\u76f4\u63a5\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a</p> <p>\u5982\u679c \\(a,p\\) \u4e92\u8d28\uff0c\u5219 \\(a\\) \u5728\u6a21 \\(p\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143\u662f \\(a^{p-2}\\)\uff0c\u5feb\u901f\u5e42\u5373\u53ef \\(O(\\log n)\\) \u6c42\uff0c\u8fd9\u91cc\u4e5f\u8bf4\u660e\u4e86\u53ea\u6709 \\(p\\) \u662f\u8d28\u6570\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u4efb\u610f\u7ed9\u5b9a\u7684\u503c\u57df\u5c0f\u4e8e \\(2p\\) \u7684\u5e8f\u5217\u90fd\u53ef\u4ee5\u6c42\u51fa\u9006\u5143\u3002 </p> <p>\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u503c\u57df\u4e3a \\([1,n]\\) \u7684\u6570\u5217\uff0c\u6211\u4eec\u8981\u6c42\u51fa\u6bcf\u4e00\u9879\u5728 \\(\\mod p\\) \u610f\u4e49\u4e0b\u7684\u9006\u5143\uff08\\(p\\) \u662f\u8d28\u6570\uff09\uff0c\u8fd9\u6837\u505a\u80af\u5b9a\u4e0d\u597d\u641e\uff0c\u6240\u4ee5\u8003\u8651\u4e00\u4e2a\u53ef\u4ee5\u7ebf\u6027\u9012\u63a8\u7684\u505a\u6cd5</p> <p>\u9996\u5148\u4ee4 \\(r = i\\mod p\\)\uff0c\u4ee4 \\(\\lfloor p/i\\rfloor = k\\)\uff0c\u5373 \\(ki+r \\equiv 0(\\mod p)\\)\u3002</p> <p>\u7136\u540e\u5c31\u662f\u79fb\u9879\uff0c\u628a \\(i\\) \u5355\u72ec\u7559\u4e00\u8fb9\uff0c\u53e6\u5916\u4e00\u8fb9\u662f\u4e00\u4e2a\u5c0f\u4e8e \\(i\\) \u7684\u6570\u7684\u9006\u5143\u7684\u5f62\u5f0f\u3002</p> \\[ \\begin{aligned} ki+r &amp;\\equiv 0 &amp;(\\mod p)\\\\ i &amp;\\equiv \\dfrac{-r}{k} &amp;(\\mod p)\\\\ i &amp;\\equiv -r \\times inv(k) &amp;(\\mod p)\\\\ i &amp;\\equiv -inv(k)\\times r &amp;(\\mod p)\\\\ inv(i) &amp;\\equiv -k\\times inv(r) &amp;(\\mod p)\\\\ inv(i) &amp;\\equiv -\\lfloor p/i\\rfloor \\times inv(p \\mod i) &amp;(\\mod p) \\end{aligned} \\] <p>\u6700\u540e\u4e00\u6b65\u8fd9\u91cc\u6709\u8d1f\u6570\uff0c\u52a0\u4e00\u4e0b\uff08\u5982\u679c \\(x &lt; 0\\)\uff0c\u5219 \\(x \\equiv p - x (\\mod p)\\) \uff09\uff1a</p> \\[ inv(i)\\equiv (p - p/i) \\times inv(p \\mod i) (\\mod p) \\] <p>\u4e8e\u662f\u5c31\u80fd\u7ebf\u6027\u9012\u63a8\u4e86\uff0c\u7ec4\u5408\u6570\u5565\u7684\u4e5f\u80fd\u6c42\uff1a</p> <pre><code>const int mod = 998244353;\n\nint inv[si], fact[si], invf[si];\nvoid init(int n) {\ninv[1] = 1, fact[0] = invf[0] = 1;\nfor(int i = 2; i &lt;= n; ++i)\ninv[i] = 1ll * (mod - mod / i) * inv[mod % i] % mod;\nfor(int i = 1; i &lt;= n; ++i)\nfact[i] = 1ll * fact[i - 1] * i % mod,\ninvf[i] = 1ll * invf[i - 1] * inv[i] % mod;\n}\nint C(int n, int m) {\nif(m &lt; 0 || n &lt; m) return 0;\nreturn 1ll * fact[n] * invf[n - m] % mod * invf[m] % mod;\n}\nint Catalan(int n) {\nreturn 1ll * C(n * 2, n) % mod * inv[n + 1] % mod;\n}\n</code></pre>"}, {"location": "rec/interesting/comb-problem/", "title": "\u5173\u4e8e\u7ec4\u5408\u6570\u5b66\u548c\u8ba1\u6570\u7684\u4e00\u4e9b\u5c0f\u95ee\u9898", "text": "<p>\u7b80\u5355\u8bb0\u5f55\u4e00\u4e9b\u9519\u8fc7\u7684 / Educational \u7684\u7ec4\u5408\u6570\u5b66\u95ee\u9898 / \u8ba1\u6570\u95ee\u9898\u3002</p>"}, {"location": "rec/interesting/comb-problem/#_1", "title": "\u4e00\u4e9b\u57fa\u672c\u6a21\u578b", "text": ""}, {"location": "rec/interesting/comb-problem/#_2", "title": "\u5c0f\u7403\u6a21\u578b", "text": "<p>Reference: lleozhang \u7684\u535a\u5ba2</p> <p>\u6709\u533a\u522b\u597d\u6bd4\u505a\u6392\u5217\uff0c\u6ca1\u533a\u522b\u597d\u6bd4\u505a\u7ec4\u5408\u3002</p> <p>\u9ed8\u8ba4 \\(n\\) \u4e2a\u5c0f\u7403\uff0c\\(m\\) \u4e2a\u76d2\u5b50\u3002</p> <p>\u6216\u8005\u8bf4\uff0c\u5c0f\u7403\u6709\u533a\u522b\u53ef\u4ee5\u7406\u89e3\u6210\u6709 \\(n\\) \u4e2a\u4e0d\u540c\u5143\u7d20\uff0c\u4e00\u822c\u9700\u8981\u8003\u8651 \u5bf9\u4e8e\u6bcf\u4e2a\u5c0f\u7403\u90fd\u51b3\u7b56\uff08\u4e00\u822c\u662f\u9012\u63a8\uff09\u3002</p> <p>\u76d2\u5b50\u6709\u533a\u522b\u5219\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u65b9\u7a0b\u6c42\u6709\u591a\u5c11\u7ec4\u89e3 \\(\\{x_i\\}\\)\uff0c\u5982\u679c\u5c0f\u7403\u6ca1\u6709\u533a\u522b\uff0c\\(x_i\\) \u5c31\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u5c0f\u7403\u6709\u533a\u522b\uff0c\u90a3\u4e48\\(x_i\\) \u5c31\u662f\u4e00\u4e2a\u96c6\u5408\u3002</p> <p>\u5141\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50\u5c31\u7b49\u4ef7\u4e8e \\(x_i\\) \u7684\u9650\u5236\u3002</p> <p>\u6240\u4ee5\u5c0f\u7403\u6a21\u578b\u90fd\u53ef\u4ee5\u62bd\u8c61\u6210 \u5e7f\u4e49\u7684\u7ebf\u6027\u4e0d\u5b9a\u65b9\u7a0b\u7684\u89e3\u7684\u7ec4\u6570\u3002</p>"}, {"location": "rec/interesting/comb-problem/#_3", "title": "\u5c0f\u7403\u6709\u533a\u522b\uff0c\u76d2\u5b50\u6709\u533a\u522b\uff0c\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u76f4\u63a5\u8003\u8651\u76d2\u5b50\u4e0d\u592a\u597d\u8003\u8651\uff0c\u76f4\u63a5\u8003\u8651\u7403\uff0c</p> <p>\u6bcf\u4e2a\u5c0f\u7403\u6709 \\(m\\) \u79cd\u653e\u6cd5\uff0c\u4e58\u6cd5\u539f\u7406\u6709 \\(m^n\\) \u79cd\u53ef\u80fd\u3002</p>"}, {"location": "rec/interesting/comb-problem/#_4", "title": "\u5c0f\u7403\u6709\u533a\u522b\uff0c\u76d2\u5b50\u6709\u533a\u522b\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u8003\u8651\u8bbe\u51fd\u6570 \\(f(n, m)\\) \u8868\u793a \\(n\\) \u4e2a\u5c0f\u7403\u653e\u5230 \\(m\\) \u4e2a\u76d2\u5b50\u91cc\u7684\u65b9\u6848\u6570\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u5f53\u524d\u5c0f\u7403\u653e\u5728\u54ea\u91cc\u53ef\u4ee5\u5f97\u5230\u9012\u63a8\u5f0f\uff1a \\(f(n,m) = m(f(n - 1, m) + f(n - 1, m - 1))\\)\u3002</p> <p>\u5c31\u662f\u8003\u8651\u8fd9\u4e2a\u5c0f\u7403\u662f\u653e\u5230\u539f\u6765\u6709\u4e86\u7684\u8fd8\u662f\u653e\u5230\u4e00\u4e2a\u8fd8\u6ca1\u6709\u7403\u76d2\u5b50\u91cc\u9762\u3002</p> <p>\u56e0\u4e3a\u76d2\u5b50\u4e0d\u540c\u6240\u4ee5\u8981\u4e58 \\(m\\)\u3002</p> <p>\u8fb9\u754c\uff1a\\(n = m, f(n, m) = n!; m &gt; n, f(n, m) = 0\\)\u3002</p>"}, {"location": "rec/interesting/comb-problem/#_5", "title": "\u5c0f\u7403\u6709\u533a\u522b\uff0c\u76d2\u5b50\u6ca1\u533a\u522b\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u548c \u300c\u5c0f\u7403\u6709\u533a\u522b\uff0c\u76d2\u5b50\u6709\u533a\u522b\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50\u300d \u7c7b\u4f3c\u3002</p> <p>\u8fd8\u662f\u8bbe \\(f(n, m)\\) \u8868\u793a \\(n\\) \u5c0f\u7403\u653e\u5230 \\(m\\) \u4e2a\u76d2\u5b50\u91cc\u7684\u65b9\u6848\u6570\u3002</p> <p>\u7c7b\u6bd4\u4e0a\u9762\u53ef\u4ee5\u5f97\u5230\u9012\u63a8\u5f0f\uff1a \\(f(n, m) = mf(n - 1, m) + f(n - 1, m - 1)\\)\u3002</p> <p>\u552f\u4e00\u7684\u533a\u522b\u662f\u76d2\u5b50\u4e0d\u540c\u3002</p> <p>\u8fd9\u4e2a\u662f\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570 \\(\\begin{Bmatrix}n \\\\ m\\end{Bmatrix}\\)\u3002</p> <p>\u5feb\u901f\u6c42\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/interesting/comb-problem/#_6", "title": "\u5c0f\u7403\u6709\u533a\u522b\uff0c\u76d2\u5b50\u6ca1\u533a\u522b\uff0c\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u7b80\u5355\u95ee\u9898\uff0c\u7528\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570\u8f6c\u5316\u4e00\u4e0b\uff0c\u8003\u8651\u5206\u522b\u653e\u5230 \\(k\\) \u4e2a\u76d2\u5b50\u5c31\u884c\u4e86\u3002</p> \\[ \\sum\\limits_{k = 1}^{m} \\begin{Bmatrix}n \\\\ k\\end{Bmatrix} \\]"}, {"location": "rec/interesting/comb-problem/#_7", "title": "\u5c0f\u7403\u6ca1\u533a\u522b\uff0c\u76d2\u5b50\u6709\u533a\u522b\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u5c31\u662f\u63d2\u677f\u6cd5\u7684\u57fa\u7840\uff0c\u7b54\u6848 \\(\\dbinom{n - 1}{m - 1}\\)\u3002</p>"}, {"location": "rec/interesting/comb-problem/#_8", "title": "\u5c0f\u7403\u6ca1\u533a\u522b\uff0c\u76d2\u5b50\u6709\u533a\u522b\uff0c\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u63d2\u677f\u6cd5\u516c\u5f0f\uff0c\u7b54\u6848 \\(\\dbinom{n + m - 1}{n}\\)\u3002</p>"}, {"location": "rec/interesting/comb-problem/#_9", "title": "\u5c0f\u7403\u6ca1\u533a\u522b\uff0c\u76d2\u5b50\u6ca1\u533a\u522b\uff0c\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u8fd9\u4e2a\u662f\u5206\u62c6\u6570\uff0c\u8fd8\u4e0d\u4f1a</p>"}, {"location": "rec/interesting/comb-problem/#_10", "title": "\u5c0f\u7403\u6ca1\u533a\u522b\uff0c\u76d2\u5b50\u6ca1\u533a\u522b\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u76d2\u5b50", "text": "<p>\u5206\u62c6\u6570\u7684\u53d8\u79cd\u3002</p>"}, {"location": "rec/interesting/comb-problem/#_11", "title": "\u4e00\u4e9b\u6709\u610f\u601d\u7684\u9898", "text": ""}, {"location": "rec/interesting/comb-problem/#_12", "title": "\u4e00\u4e2a\u56db\u8272\u5b9a\u7406\u7684\u65b9\u6848\u6570\u8ba1\u6570", "text": "<pre><code>_________________\n|     |__E_|     |\n|  A  |__D_|  B  |\n|     |  C |     |\n-----------------\n</code></pre> <p>\u7ed9\u8fd9\u4e2a\u5730\u56fe\u4e0a\u8272\uff0c\u95ee\u65b9\u6848\u6570\u3002</p> <p>\u5148\u8003\u8651\u786e\u5b9a A \u533a\u57df\u548c B \u533a\u57df\u7684\u989c\u8272\u662f\u5426\u76f8\u540c\u3002</p> <p>\u56e0\u4e3a A\uff0cB \u533a\u57df\u7684\u989c\u8272\u51b3\u7b56\u4f1a\u5bfc\u81f4 E,C \u7684\u989c\u8272\u51b3\u7b56\u6570\u6539\u53d8\u3002</p> <ol> <li>\u5982\u679c A, B \u540c\u8272\uff0c\u90a3\u4e48 D \u5c31\u6709 3 \u79cd\u65b9\u6848\uff0c\u7136\u540e E, C \u5c31\u5404\u6709 2 \u79cd\u65b9\u6848\uff0c\u7b54\u6848 \\(4\\times 1 \\times 3 \\times 2 \\times 2 = 48\\)\u3002</li> <li>\u5982\u679c A, B \u4e0d\u540c\u8272\uff0c\u90a3\u4e48 D \u53ea\u6709 2 \u79cd\u65b9\u6848\uff0cE, C \u5404\u81ea\u53ea\u6709\u4e00\u79cd\uff0c\u7b54\u6848 \\(4 \\times 3 \\times 2 \\times 1 \\times 1 = 24\\)\u3002</li> </ol> <p>\u6700\u7ec8\u7b54\u6848 \\(48 + 24 = 72\\)\u3002</p> <p>\u8fd9\u91cc\u80fd\u62bd\u8c61\u51fa\u6765\u7684\u4e00\u4e2a\u5c0f Trick\uff1a</p> <p>\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u79cd \u65b9\u6848\u6570\u95ee\u9898\uff0c\u5728\u67d0\u4e00\u4e2a\u51b3\u7b56\u4f1a\u5f71\u54cd\u4e4b\u540e\u7684\u51b3\u7b56\u6570\u91cf\u7684\u65f6\u5019\u5c31\u8981\u5206\u7c7b\u8ba8\u8bba\u3002</p>"}, {"location": "rec/interesting/comb-problem/#_13", "title": "\u4e00\u4e2a\u63d2\u677f\u6cd5\u7684\u5e94\u7528", "text": "<p>\u6254 \\(7\\) \u4e2a\u8d28\u5730\u5747\u5300\u7684\u9ab0\u5b50\uff0c\u51fa\u73b0\u548c\u4e3a \\(10\\) \u7684\u6982\u7387 \u4e3a \\(\\dfrac{n}{6^7}\\)\uff0c\\(n\\) \u5e94\u8be5\u7b49\u4e8e\u591a\u5c11\uff1f</p> <p>\u53ef\u4ee5\u8f6c\u5316\u4e3a\u63d2\u677f\u6cd5\uff0c\u7b54\u6848\u662f \\(\\dbinom{10 - 1}{7 - 1}\\)\uff0c\u56e0\u4e3a\u53d8\u91cf\u90fd\u662f \\(\\le 6\\) \u7684\uff0c\u591a\u4e86\u4e0d\u591f\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u8fd9\u4e48\u505a\u6ca1\u6709\u95ee\u9898\u3002</p>"}, {"location": "rec/interesting/comb-problem/#_14", "title": "\u53e6\u5916\u4e00\u4e2a\u63d2\u677f\u6cd5\u7684\u5e94\u7528", "text": "<p>\u5b9a\u4e49 \\(D(n)\\) \u8868\u793a\u5c06\u6b63\u6574\u6570 \\(n\\) \u5206\u89e3\u4e3a\u5982\u4e0b\u5f62\u5f0f\u7684\u65b9\u6848\u6570\uff1a\\(n = f_1 \\times f_2 \\times f_i \\dots\\)\uff0c\u5176\u4e2d \\(i \\ge 1, f_i \\ge 1\\)\uff0c\\((f_i, f_{j}); (f_j, f_i)\\) \u662f\u4e0d\u540c\u7684\u65b9\u6848\u3002</p> <p>\u6c42 \\(D(96)\\)\u3002</p> <p>\u9996\u5148\u53d1\u73b0 \\(96 = 2^5 \\times 3\\)\uff0c\u628a \\(3\\) \u62ff\u51fa\u6765\u5148\u4e0d\u7ba1\uff0c</p> <p>\u7136\u540e \\(2^5\\) \u663e\u7136\u53ef\u4ee5\u5206\u6210 \\(2^{c_1}, 2^{c_2},\\dots 2^{c_m}, m \\le 5, c_i \\ge 0\\)</p> <p>\u7136\u540e\u5bf9\u4e8e \\(m = i\\) \u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u628a \\(3\\) \u653e\u5230\u8fd9\u4e9b\u6570\u91cc\u9762\u63d2\u677f\uff08\u53ef\u4ee5\u662f\u5934\u5c3e\uff09\uff0c\u6216\u8005\u76f4\u63a5\u4e58\u5230\u8fd9\u4e9b\u6570\u4e0a\u9762\uff0c\u6240\u4ee5\u6b64\u65f6\u7684\u65b9\u6848\u6570\u662f \\((i + 1 + i) \\times i!\\)\uff0c\u56e0\u4e3a\u8fd8\u53ef\u4ee5\u5168\u6392\u5217\u3002</p> <p>\u7136\u540e\u5c31\u53ea\u80fd\u5bf9\u4e8e\u6bcf\u4e2a\u60c5\u51b5\u786c\u7b97\u4e86\u3002\u3002\u3002\u3002\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/", "title": "\u7ebf\u6bb5\u6811\u7684\u6269\u5c55\u8fd0\u7528", "text": "<p>\u5728\u7ebf\u6bb5\u6811\u672c\u8eab\u4fe1\u606f\u52a8\u624b\u811a\u7684\u9898\u4e00\u822c\u5c31\u4e09\u6b65\uff1a</p> <ol> <li>\u8003\u8651\u600e\u4e48\u641e\u51fa\u5177\u6709\u5e7a\u534a\u7fa4\u6027\u8d28\u7684\u4fe1\u606f\u3002\uff08\u62c6\u51fa\u591a\u4e2a\u4fe1\u606f\uff08\u6bd4\u5982\u533a\u95f4\u65b9\u5dee\uff09\uff0c\u6216\u8005\u60f3\u529e\u6cd5\u6269\u5c55\u4e00\u4e0b\u4fe1\u606f\u6765\u641e\u51fa\u7ed3\u5408\u5f8b\uff08\u6bd4\u5982 GSS\u2153\uff09\uff09</li> <li>\u8003\u8651\u600e\u4e48\u5199 Pushup \uff08\u5047\u8bbe\u5de6\u53f3\u513f\u5b50\u4fe1\u606f\u90fd\u5df2\u5f97\u5230\uff0c\u7136\u540e\u770b\u7236\u4eb2\u8282\u70b9\u600e\u4e48\u641e\uff0c\u8fb9\u754c\u4e3a\u53f6\u5b50\u8282\u70b9\uff09</li> <li>\u8003\u8651\u600e\u4e48\u5199 Pushdown \u548c Change\u3002</li> </ol> <p>\u5982\u679c\u662f\u5229\u7528\u8f6c\u5316\uff0c\u628a\u590d\u6742\u7684\u4fe1\u606f\u8f6c\u5316\u6210\u7b80\u5355\u7684\u4fe1\u606f\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u7684\u8bdd\uff0c\u5c31\u53ea\u80fd\u9760\u7075\u611f\u6216\u8005\u79ef\u7d2f\u4e86\u3002\uff08\u6bd4\u5982\u533a\u95f4\u52a0\u591a\u9879\u5f0f\u4e00\u7c7b\u7684\uff09</p>"}, {"location": "rec/interesting/segtree-tricks/#_1", "title": "\u533a\u95f4\u52a0\u591a\u9879\u5f0f", "text": "<p>\u533a\u95f4\u52a0\u591a\u9879\u5f0f\u90fd\u662f\u8f6c\u5316\u6210\u5dee\u5206\u6570\u7ec4\u4e4b\u540e\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u4e00\u822c\u90fd\u662f\u5355\u70b9\u67e5\u8be2\u3002</p> <p>\u533a\u95f4\u67e5\u8be2\u770b\u770b\u53ef\u4e0d\u53ef\u505a\u5148\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#_2", "title": "\u533a\u95f4\u52a0\u7b49\u5dee\u6570\u5217", "text": "<p>\u533a\u95f4 \\([l,r]\\) \u52a0\u7b49\u5dee\u6570\u5217\uff0c\u7b49\u540c\u4e8e\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u7684 \\([l + 1,r]\\) \u505a\u4e00\u6b21\u533a\u95f4\u52a0 \\(d\\)\uff0c\u7136\u540e\u4ee4 \\(c[l] + \\text{BEGIN}\\)\uff0c\\(c[r+1] - \\text{END}\\)\u3002</p> <p>\\(\\text{BEGIN,END}\\) \u5206\u522b\u662f\u9996\u9879\u548c\u672b\u9879\u3002</p> <p>\u5355\u70b9\u8be2\u95ee\u53ea\u9700\u8981\u8be2\u95ee\u7ebf\u6bb5\u6811\u4e0a\u7684 \\(sum(1,pos)\\) \u5373\u53ef\u3002</p> <p>\u4f8b\u9898: CF1661D Progressions Covering</p>"}, {"location": "rec/interesting/segtree-tricks/#_3", "title": "\u533a\u95f4\u52a0\u6590\u6ce2\u90a3\u5951", "text": "<p>\u8fd9\u91cc\u9e3d\u5b50\u4e86\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#_4", "title": "\u533a\u95f4\u52a0\u7b49\u6bd4\u6570\u5217", "text": "<p>\u8fd9\u91cc\u9e3d\u5b50\u4e86\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#_5", "title": "\u533a\u95f4\u67e5\u67d0\u4e9b\u4e1c\u897f", "text": ""}, {"location": "rec/interesting/segtree-tricks/#mex", "title": "\u533a\u95f4 MEX", "text": "<p>\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u8003\u8651\u83ab\u961f\u3002</p> <p>\u5982\u679c\u8981\u6c42\u5728\u7ebf\u5c31\u76f4\u63a5\u4e0a\u4e3b\u5e2d\u6811\uff08\u6743\u503c\u7ebf\u6bb5\u6811\u4e8c\u5206\u663e\u7136\u53ef\u4ee5\u505a\u5168\u5c40\uff0c\u7136\u540e\u53ef\u6301\u4e45\u5316\u4e4b\u540e\u80fd\u8f6c\u6210\u533a\u95f4\u7684\uff09</p> <p>\u8fd8\u6709\u4e00\u79cd\u79bb\u7ebf+\u7ebf\u6bb5\u6811\u7684\u6682\u65f6\u5495\u5495\u5495\u7740\uff0c\u53cd\u6b63\u4e0d\u5982\u4e3b\u5e2d\u6811\u6216\u8005\u83ab\u961f\u505a\u6cd5\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#_6", "title": "\u533a\u95f4\u65b9\u5dee", "text": "<p>\u533a\u95f4\u52a0\u6cd5\uff0c\u533a\u95f4\u8be2\u95ee\u65b9\u5dee\u3002</p> <p>\u8003\u8651\u62c6\u67ff\u5b50\uff1a</p> <p>\u5b9a\u4e49\u5e73\u5747\u6570\u4e3a \\(ava\\)\u3002</p> <p>\u65b9\u5dee\u7684\u5b9a\u4e49\u662f \\(\\dfrac{1}{n} \\sum\\limits_{i = 1}^{n} (a_i - ava)^2\\)</p> <p>\u7136\u540e\u663e\u7136\u8fd9\u4e2a\u975e\u5e38\u4e0d\u597d\u7ef4\u62a4\uff08\u4e0d\u5177\u6709\u5e7a\u534a\u7fa4\u7684\u6027\u8d28\uff0c\u7ebf\u6bb5\u6811\u6ca1\u6cd5\u7ef4\u62a4\uff09\uff0c\u6240\u4ee5\u8003\u8651\u62c6\u5f00\uff0c\u53d8\u6210\u51e0\u4e2a\u5177\u6709\u5e7a\u534a\u7fa4\u6027\u8d28\u7684\u4fe1\u606f\u7684\u7ec4\u5408\u3002</p> \\[ \\begin{aligned} \\dfrac{1}{n} \\sum\\limits_{i = 1}^{n} (a_i - ava)^2 \\\\ \\dfrac{1}{n} \\sum\\limits_{i = 1}^{n} (a_i^2 - a_i \\cdot ava + ava^2)\\\\ \\dfrac{1}{n} \\cdot [\\sum\\limits_{i = 1}^{n} a_i^2 - ava\\sum\\limits_{i = 1}^n a_i + n \\cdot ava^2] \\end{aligned} \\] <p>\u4e8e\u662f\u5982\u679c\u4e0d\u5e26\u4fee\u5c31\u53ea\u9700\u8981\u8003\u8651\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u533a\u95f4\u5e73\u65b9\u548c\u5c31\u884c\u4e86\u3002</p> <p>\u7136\u540e\u8fd9\u91cc\u6709\u4e00\u4e2a\u533a\u95f4\u52a0\u6cd5\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a \\(add\\)\u3002</p> <p>\u663e\u7136\u533a\u95f4\u52a0\u7684\u65f6\u5019\u548c\u4e0b\u653e\u6807\u8bb0\u65f6\uff0c\\(dat\\) \u7684\u53d8\u5316\u662f\u4e00\u81f4\u7684\uff0c\u5c31\u662f\u8003\u8651\u5f53\u533a\u95f4\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u88ab\u52a0\u4e0a \\(v\\) \u4e4b\u540e\uff0c\\(psum, sum\\) \u600e\u4e48\u53d8\u4e86\u3002</p> <p>\u7136\u540e\u533a\u95f4\u548c\u968f\u4fbf\u641e\uff0c\u8003\u8651\u533a\u95f4\u5e73\u65b9\u548c \\(psum\\)\uff1a</p> \\[ \\sum\\limits_{i = 1}^n(a_i +  v)^2 - \\sum\\limits_{i = 1}^{n} a_i^2 \\] <p>\u8fd9\u4e2a\u67ff\u5b50\u5f88\u5bb9\u6613\u5c55\u5f00\u7136\u540e\u8f6c\u5316\u6210\u80fd\u591f \\(O(1)\\) \u4e0b\u4f20\uff0c\u4e14\u5177\u6709\u65f6\u95f4\u8f74\u4e0a\u7684\u7ed3\u5408\u5f8b\u7684\u4fe1\u606f\uff0c\u4e8e\u662f\u6807\u8bb0\u90e8\u5206\u5c31\u505a\u5b8c\u4e86\u3002</p> <p>Pushup \u5f88\u663e\u7136\u5c31\u662f\u4e24\u4e2a\u4fe1\u606f\u76f4\u63a5\u505a\u52a0\u6cd5\uff0c\u6ca1\u4e86\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#sin", "title": "\u533a\u95f4 sin \u548c", "text": "<p>\u533a\u95f4\u52a0\u533a\u95f4 sin \u548c</p> <p>\u601d\u8003\u597d\u7ebf\u6bb5\u6811\u7684\u672c\u8d28\u5c31\u884c\u3002</p> <p>\u9996\u5148\u80af\u5b9a\u8981\u6253 Tag\uff0c\u5c31\u662f\u4e00\u4e2a\u7ef4\u62a4\u52a0\u6cd5 Tag\u3002</p> <p>\u56e0\u4e3a\u6211\u8981\u6c42\u7684\u7b54\u6848\u662f \\(\\sin\\) \u548c\uff0c\u4e3a\u4e86\u51fa\u73b0\u7ed3\u5408\u5f8b\uff0c\u9700\u8981\u7528\u548c\u89d2\u516c\u5f0f\u3002</p> <p>\u6240\u4ee5\u4fe1\u606f\u53ea\u9700\u8981\u540c\u65f6\u7ef4\u62a4\u533a\u95f4 \\(\\sin\\) \u548c\u8fd8\u6709 \\(\\cos\\) \u548c\u3002</p> <p>\u8003\u8651\u4e00\u4e0b\u533a\u95f4\u52a0 \\(v\\) \u4e4b\u540e\u4e00\u4e2a\u533a\u95f4\u7684 \\(\\sin\\) \u600e\u4e48\u53d8\u4e86\uff0c\u65b9\u4fbf\u4e0b\u4f20\u6807\u8bb0\u8fd8\u6709\u66f4\u65b0\u4fe1\u606f\u3002</p> <p>\u5148\u5199\u51fa\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\uff1a</p> <p>\\(\\sin (a + b) = \\sin a \\cos b  + \\sin b \\cos a\\)</p> <p>\\(\\cos (a + b)  =\\cos a \\cos b - \\sin a \\sin b\\)</p> <p>\u90a3\u4e48 \\(\\sum \\sin(a_i)\\) \u5c31\u53d8\u6210\u4e86 \\(\\sum \\sin (a_i + v) = \\sum (\\sin a_i \\cos v + \\sin v \\cos a_i)\\)</p> <p>\u5c55\u5f00\uff1a\\(\\cos v\\sum \\sin a_i + \\sin v \\sum \\cos a_i\\)\uff0c\u6b64\u65f6 \u72ec\u7acb\u4e86\u53d8\u91cf\uff08\u7ef4\u62a4\u7684\u4fe1\u606f\uff09\u548c\u5e38\u91cf \\(v\\)\uff0c\u5f88\u65b9\u4fbf\u5904\u7406\u3002</p> <p>\u540c\u7406\uff1a\\(\\sum \\cos (a_i) =\\sum \\cos(a_i + v) = \\cos v\\sum \\cos a_i - \\sin v \\sum \\sin a_i\\)\u3002</p> <p>\u6ce8\u610f\u5230\u4e00\u4e2a\u5751\u70b9\u5c31\u662f \\(\\cos\\) \u8fd8\u8981\u7528\u5230\u539f\u6765\u66f4\u65b0\u524d\u7684 \\(\\sum \\sin a_i\\)\uff0c\u6240\u4ee5\u8981\u63d0\u524d\u8bb0\u5f55\u4e00\u4e0b\u3002</p> <p>\u7136\u540e pushup \u9700\u8981\u7ed3\u5408\u4e24\u4e2a\u533a\u95f4\u7684 \\(\\sum \\sin a_i, \\sum \\cos a_i\\)\uff0c\u76f4\u63a5\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u7136\u540e\u5c31\u6ca1\u4e86\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#gcd", "title": "\u533a\u95f4 GCD", "text": ""}, {"location": "rec/interesting/segtree-tricks/#_7", "title": "\u5355\u70b9\u4fee\u6539", "text": "<p>\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a \\(\\gcd\\) \u6ee1\u8db3\u7ed3\u5408\u5f8b : \\(\\gcd(a, b, c) = \\gcd(a, \\gcd(b, c))\\)\u3002</p> <p>\u800c\u4e14\u6709\u5e7a\u5143 \\(0\\)\u3002</p> <p>\u6240\u4ee5\u76f4\u63a5\u505a\u5c31\u884c\u4e86\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#_8", "title": "\u533a\u95f4\u4fee\u6539", "text": "<p>\u8003\u8651\u8f6c\u5316\u6210\u5355\u70b9\u4fee\u6539\uff0c\u76f4\u63a5\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\uff0c\u53ef\u4ee5\u505a\u5230\u5355\u70b9\u6539\u3002</p> <p>\u7136\u540e\u53d1\u73b0 \\(\\gcd(a, b - a, c - b) = \\gcd(a, b, c)\\)\uff0c\u6240\u4ee5\u76f4\u63a5\u8be2\u95ee\u5dee\u5206\u6570\u7ec4\u7684 \\(\\gcd\\) \u5c31\u884c\u4e86\u3002</p> <p>\u7136\u540e\u663e\u7136\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee \\([l, r]\\) \u8fd8\u8981\u7528\u5230 \\(a[l]\\)\uff0c\u6240\u4ee5\u518d\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 \\(a\\) \u5c31\u884c\u4e86\u3002</p> <p>\u6ce8\u610f\u5982\u679c gcd \u7684\u53c2\u6570\u6709\u8d1f\u6570\u5c31\u76f4\u63a5\u628a abs \u5e26\u4e0a\u53bb\u7b97\u5c31\u884c\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#_9", "title": "\u6269\u5c55\u7c7b", "text": ""}, {"location": "rec/interesting/segtree-tricks/#_10", "title": "\u7ef4\u62a4\u77e9\u9635\u4e58\u6cd5", "text": "<p>\u76f4\u63a5\u770b\u8fd9\u91cc\u5c31\u884c\u4e86\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#gss", "title": "GSS \u7cfb\u5217", "text": ""}, {"location": "rec/interesting/segtree-tricks/#gss1-3", "title": "GSS1 &amp; 3 \u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c", "text": "<p>\u53ef\u4ee5\u53d1\u73b0\u6700\u5927\u5b50\u6bb5\u548c\u6ca1\u6709\u660e\u663e\u7684\u7ed3\u5408\u5f8b\u3002</p> <p>\u4e0d\u8fc7\u6211\u4eec\u8bd5\u7740\u5047\u8bbe\u5de6\u53f3\u513f\u5b50\u7684\u6700\u5927\u5b50\u6bb5\u548c\u90fd\u5df2\u7ecf\u6c42\u51fa\uff0c\u8003\u8651\u600e\u4e48 Pushup\u3002</p> <p>\u90a3\u4e48\u5176\u5b9e\u4e5f\u5c31\u4e09\u79cd\u60c5\u51b5\uff0c\u5206\u522b\u7ee7\u627f\u4e24\u8fb9\u7684\uff0c\u6216\u8005\u662f\u5de6\u8fb9\u53d6\u4e00\u6bb5\u540e\u7f00\uff0c\u53f3\u8fb9\u53d6\u4e00\u6bb5\u524d\u7f00\u3002</p> <p>\u663e\u7136\u4e0d\u53ef\u80fd\u6709\u522b\u7684\u60c5\u51b5\u66f4\u4f18\u79c0\u4e86\u3002</p> <p>\u6240\u4ee5\u9700\u8981\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u5b50\u8282\u70b9\u7684\u6700\u5927\u524d\u7f00\u548c\uff0c\u6700\u5927\u540e\u7f00\u548c\u3002</p> <p>\u7136\u540e\u6700\u5927\u524d\u7f00\u548c\u4e5f\u9700\u8981\u8003\u8651 Pushup\uff0c</p> <p>\u663e\u7136\u5c31\u662f\u5de6\u513f\u5b50\u7684\u6700\u5927\u524d\u7f00\u548c\uff0c\u6216\u8005\u662f\u5de6\u513f\u5b50\u6574\u4f53+\u53f3\u513f\u5b50\u7684\u6700\u5927\u524d\u7f00\u548c\uff08\u56e0\u4e3a\u5b50\u6bb5\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u8981\u9009\u53f3\u513f\u5b50\u7684\u6700\u5927\u524d\u7f00\u548c\u5c31\u9700\u8981\u628a\u5de6\u513f\u5b50\u6574\u4f53\u9009\u4e0a\uff09\u3002</p> <p>\u7136\u540e\u6709\u6ca1\u6709\u4e00\u79cd\u53ef\u80fd\uff0c\u5c31\u662f\u6211\u53f3\u513f\u5b50\u9009\u5b8c\u6700\u5927\u524d\u7f00\u548c\u4e4b\u540e\uff0c\u6709\u6ca1\u6709\u53ef\u80fd\u540e\u9762\u8fd8\u80fd\u627e\u4e00\u4e9b\u63a5\u5230\u524d\u7f00\u540e\u9762\u6bd4\u8fd9\u4e2a\u66f4\u5927\uff1f</p> <p>\u660e\u663e\u662f\u8822\u4e86\uff0c\u8fd9\u91cc\u90fd\u662f\u6700\u5927\u524d\u7f00\u548c\u4e86\uff0c\u600e\u4e48\u53ef\u80fd\u561b\u3002</p> <p>\u7136\u540e\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u5168\u90e8\u90fd\u9009\u4e0a\u3002</p> <p>\u6700\u5927\u540e\u7f00\u548c\u540c\u7406\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u90fd\u662f\u8d1f\u6570\uff0c\u6700\u5927\u5b50\u6bb5\u548c\u5e94\u8be5\u662f\u6700\u5927\u503c\uff0c\u800c\u4e0d\u662f\u4e0a\u9762\u4e09\u79cd\u60c5\u51b5\u7684\u4efb\u610f\u4e00\u79cd\u3002</p> <p>\u6240\u4ee5\u8fd8\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u5927\u503c\u3002</p> <p>\u6b64\u65f6\u6700\u5927\u5b50\u6bb5\u548c\u5c31\u6709\u7ed3\u5408\u5f8b\u4e86\u3002</p> <p>GSS1 \u4e0d\u5e26\u4fee\uff0cGSS3 \u5e26\u4e00\u4e2a\u5355\u70b9\u4fee\uff0c\u672c\u8d28\u4e00\u6837\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#_11", "title": "\u7c7b\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u95ee\u9898", "text": "<p>\u4f60\u6709\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u4e00\u4e2a\u5e8f\u5217 \\(b\\)\u3002</p> <p>\u4f60\u6bcf\u6b21\u9700\u8981\u6c42\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u4e00\u79cd\u8d21\u732e\u7684\u6700\u5927\u503c\uff0c\u5b9a\u4e49\u4e3a \\(\\max\\{a_x + b_y\\}, x \\le y\\)\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u5176\u5b9e\u4e5f\u548c\u6700\u5927\u5b50\u6bb5\u548c\u5dee\u4e0d\u591a\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4fe1\u606f\u5176\u5b9e\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff0c\u6211\u4eec\u76f4\u63a5\u7ef4\u62a4\u7b54\u6848\uff0c\u663e\u7136\u5927\u533a\u95f4\u7684\u7b54\u6848\u53ef\u80fd\u662f\u4e24\u4e2a\u5c0f\u533a\u95f4\u7684\u7b54\u6848\u4e4b\u4e00\uff0c\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u662f\u4ece\u4e24\u4e2a\u5c0f\u533a\u95f4\u5404\u53d6\u4e00\u4e9b\u7ec4\u6210\u7b54\u6848\u3002</p> <p>\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u5185\u6700\u5927\u7684 \\(a_x\\) \u548c\u6700\u5927\u7684 \\(b_y\\)\uff0c\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u5de6\u53f3\u5b50\u6811\u7ef4\u62a4\u7684\u533a\u95f4\u662f\u5206\u5f00\u7684\uff0c\u6240\u4ee5 \\(x\\le y\\) \u7684\u6761\u4ef6\u4e5f\u53ef\u4ee5\u88ab\u6ee1\u8db3\u3002</p> <p>\u7136\u540e\u7b54\u6848\u5c31\u53ef\u4ee5\u4e0a\u4f20\u4e86\uff0c\u590d\u6742\u5ea6\u4e00\u4e2a log\uff0c\u4e5f\u53ef\u4ee5\u652f\u6301\u5355\u70b9\u4fee\u6539\u3002</p>"}, {"location": "rec/interesting/segtree-tricks/#gss4", "title": "GSS4 \u533a\u95f4\u5f00\u65b9\uff08\u4e0b\u53d6\u6574\uff09\uff0c\u533a\u95f4\u6c42\u548c", "text": "<p>\u8fd9\u9898\u7ebf\u6bb5\u6811\u4e5f\u53ef\u4ee5\uff0c\u867d\u7136\u7b97\u662f\u4e00\u4e2a\u5355\u72ec\u7684 Trick\uff0c\u4f46\u6bd5\u7adf\u662f GSS \u7cfb\u5217\u7684\uff0c\u5c31\u4e5f\u5199\u4e0a\u4e86\u3002</p> <p>\u9996\u5148\u4ece\u6570\u5217\u5206\u5757\u5165\u95e8 5 \u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5c31\u662f\u533a\u95f4\u5f00\u65b9\u7684\u6b21\u6570\u662f\u5f88\u5c11\u7684\uff0c\u5982\u679c 1e18 \u7ea7\u522b\u5f00 6 ~ 7 \u6b21\u5c31\u591f\u4e86\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u5176\u4e2d \\(pa(i)\\) \u8868\u793a\uff0c\\([i, n]\\) \u4e4b\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u4e0d\u662f \\(1\\) \u7684\u6570\u7684\u4e0b\u6807\u3002</p> <p>\u521d\u59cb\u6307\u5411\u81ea\u5df1\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u5728 \\(a(i)\\) \u4e0a\u9762\u5355\u70b9\u5f00\u6839\u53f7\uff0c\u5982\u679c\u9047\u5230 \\(1\\) \u5c31\u76f4\u63a5\u8df3 \\(pa(i)\\)\uff0c\u56e0\u4e3a\u5f00\u6839\u53f7\u6b21\u6570\u5f88\u5c11\uff0c\u7136\u540e\u591a\u6b21\u64cd\u4f5c\u4e4b\u540e\u8981\u64cd\u4f5c\u7684\u6570\u4e5f\u5f88\u5c11\u3002</p> <p>\u5e76\u67e5\u96c6\u57fa\u672c\u53ef\u4ee5\u770b\u4f5c\u5747\u644a \\(O(1)\\) \u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e1c\u897f\u590d\u6742\u5ea6\u975e\u5e38\u4f18\u79c0\u3002</p> <p>\u7136\u540e\u533a\u95f4\u548c\u518d\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u628a\u533a\u95f4\u5f00\u65b9\u8f6c\u5316\u4e3a\u4e86\u5355\u70b9\u5f00\u65b9\u3002</p> <p>\u8fd9\u4e2a\u5c31\u662f\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684 Trick\uff1a\u5bf9\u4e8e\u8fd9\u79cd\u64cd\u4f5c\u591a\u4e86\u4e4b\u540e\u201c\u65e0\u6548\u64cd\u4f5c\u201d\u53d8\u591a\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5e76\u67e5\u96c6\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u6709\u6548\u64cd\u4f5c\u4f4d\u7f6e\uff0c\u628a\u533a\u95f4\u64cd\u4f5c\u8f6c\u5316\u4e3a\u5355\u70b9\u64cd\u4f5c\u3002</p> <p>\u51e0\u4e2a\u540c\u7c7b\u578b\u7684\u9898\uff1a Luogu2391 \u767d\u96ea\u7691\u7691\uff0cCF920F Sum and Replace\uff0c51Nod1743 \u96ea\u4e4b\u56fd\u5ea6\u3002</p>"}, {"location": "rec/interesting/small-upper-bound/", "title": "\u7b54\u6848\u4e0a\u754c\u7279\u522b\u5c0f\u7684\u4e00\u7c7b\u95ee\u9898", "text": "<p>\u8fd9\u4e9b\u9898\u90fd\u6709\u4e00\u4e2a\u6bd4\u8f83\u6709\u610f\u601d\u7684\u7279\u70b9\uff1a\u7b54\u6848\u7684\u4e0a\u754c\u5de8\u5c0f\u65e0\u6bd4</p> <p>\u6700\u8fd1\u627e\u4e2a\u65f6\u95f4\u90fd\u505a\u4e00\u4e0b/ng</p> <ul> <li> <p>https://atcoder.jp/contests/arc148/tasks/arc148_a</p> </li> <li> <p>https://codeforces.com/contest/1689/problem/E</p> </li> <li> <p>https://codeforces.com/contest/1553/problem/G</p> </li> <li> <p>https://codeforces.com/contest/1268/problem/D</p> </li> <li> <p>https://codeforces.com/contest/1720/problem/E</p> </li> <li> <p>https://codeforces.com/contest/1685/problem/C</p> </li> </ul>"}, {"location": "rec/old/old-cf-at-misc/", "title": "CF & AT \u6742\u9898", "text": ""}, {"location": "rec/old/old-cf-at-misc/#cf-at", "title": "CF &amp; AT \u6742\u9898", "text": "<p>\u56e0\u4e3a\u6ca1\u5565\u65f6\u95f4\uff0c\u4e5f\u4e0d\u592a\u60f3\u5199\u9898\u89e3\uff0c\u6240\u4ee5\u4e00\u4e9b\u6742\u9898\u4e4b\u7c7b\u7684\u7b80\u5355\u9898\u89e3\u5c31\u653e\u5728\u8fd9\u91cc\u4e86\u3002</p> <p>\uff08\u662f\u65f6\u5019\u6539\u6539\u5f3a\u8feb\u75c7\u4e86\uff09</p> <p>\u4e00\u822c\u53ea\u4f1a\u6709CF\u548cAT\u7684\uff0c\u6574\u573a\u6bd4\u8d5b\u7684\u9898\u89e3\u4f1a\u653e\u5728 Codeforces Solution \u91cc\u9762\u3002</p> <p>\u5176\u5b9e\u5927\u90e8\u5206\u90fd\u662f\u53e3\u80e1\u7684\uff0c\u6ca1\u65f6\u95f4\u5199\u4ee3\u7801\uff0c\u4ee5\u540e\u518d\u8865\uff08</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-1473e", "title": "CF 1473E", "text": "<p>\u5b9a\u4e49\u4e00\u4e2a\u8def\u5f84\u7684\u8d21\u732e\u4e3a\u4e0b\u9762\u7684\u90a3\u4e2a\u5f0f\u5b50\uff0c\u95ee \\(1 \\to \\forall i\\) \u7684\u8def\u5f84\u7684\u8d21\u732e\u7684\u6700\u5c0f\u503c</p> <p>\u53d1\u73b0\u67ff\u5b50\uff1a\\(\\sum\\limits_{i=1}^kw_{e_i} -\\max\\limits_{i=1}^kw_{e_i} + \\min\\limits_{i=1}^kw_{e_i}\\)</p> <p>\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u7ef4\u62a4\u6240\u6709\u8fb9\u6743\u53bb\u6389\u6700\u5927\u52a0\u4e0a\u4e00\u4e2a\u6700\u5c0f\u3002</p> <p>\u4e5f\u5c31\u662f\u5c11\u4e00\u4e2a\u8fb9\uff0c\u53e6\u5916\u4e00\u4e2a\u8fb9\u7b97\u4e24\u6b21\u3002</p> <p>\u90a3\u4e48\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u51b3\u7b56\u90fd\u4f1a\u6709\u53bb\u6389\u4e0d\u52a0\u4e0a\uff0c\u4e0d\u53bb\u6389\u4e0d\u52a0\u4e0a\uff0c\u52a0\u4e0a\u4e0d\u53bb\u6389\uff0c\u52a0\u4e0a\u7136\u540e\u53bb\u6389\u56db\u79cd\u60c5\u51b5\uff0c</p> <p>\u6240\u4ee5\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210 \\(4\\) \u4e2a\u72b6\u6001\uff0c\u95ee\u9898\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5728\u5206\u5c42\u56fe\u4e0a\u6c42\u6700\u77ed\u8def\uff0c\u56e0\u4e3a\u4f60\u591a\u52a0\u7684\u662f \\(\\min\\) \u800c\u4e14\u6c42\u7684\u4e5f\u662f \\(\\min\\) \uff0c\u6240\u4ee5\u8fd9\u4e2a\u505a\u6cd5\u662f\u5bf9\u7684\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-516e-by-textdcolorredtextreamoon", "title": "CF 516E \uff08By \\(\\text{d}\\color{red}{\\text{reamoon}}\\)\uff09", "text": "<p>*3100 \u7684\u5927\u6bd2\u7624\u6570\u8bba\u3002</p> <p>\u4e0d\u592a\u4f1a\uff0c\u4e4b\u540e\u518d\u91cd\u65b0\u95ee\u95ee\u51fa\u9898\u4eba\u548b\u505a\u7684\uff08</p>"}, {"location": "rec/old/old-cf-at-misc/#abc-209e", "title": "ABC 209E", "text": "<p>\u535a\u5f08\u8bba+\u56fe\u8bba</p> <p>\u5fc5\u987b\u8981\u548c\u4e0a\u4e00\u4e2a\u5355\u8bcd\u91cd\u5408\u4e09\u4e2a\u4ee5\u4e0a\u7684\u5b57\u6bcd\u7684\u5355\u8bcd\u63a5\u9f99\uff0c\u7ed9\u5b9a\u8bcd\u5178\uff0c\u4e14\u5927\u5c0f\u5199\u654f\u611f\u3002</p> <p>\u95ee\u8f93\u8d62\u6216\u5e73\u3002</p> <p>\u4f60\u53d1\u73b0\u6211\u4eec\u4e0d\u4f1a\u5173\u5fc3\u9664\u4e86\u524d\u4e09\u4e2a\u6216\u8005\u540e\u4e09\u4e2a\u5b57\u7b26\u4ee5\u5916\u7684\u4e1c\u897f\u3002</p> <p>\u800c\u4e14\u8981\u63a5\u9f99\u5c31\u5fc5\u987b\u5b8c\u5168\u91cd\u5408\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5148\u5b57\u7b26\u4e32hash\u4e00\u4e0b\u524d\u4e09\u4f4d\u548c\u540e\u4e09\u4f4d\uff0c\u7136\u540e\u628a\u524d\u4e09\u4f4d\u5411\u540e\u4e09\u4f4d\u8fde\u8fb9\u3002</p> <p>\u7136\u540e\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u5f20\u6709\u5411\u56fe\u3002</p> <p>\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u5148\u624b\u5fc5\u80dc\u6001\u548c\u5148\u624b\u5fc5\u8d25\u6001\u3002</p> <p>\u5982\u679c\u5f53\u524d\u72b6\u6001\u80fd\u53bb\u5f80\u7684\u72b6\u6001\u90fd\u662f\u5fc5\u80dc\u6001\u6216\u8005\u65e0\u6cd5\u53bb\u5f80\u4efb\u610f\u72b6\u6001\uff0c\u5219\u5b83\u662f\u5148\u624b\u5fc5\u8d25\u6001\u3002</p> <p>\u5982\u679c\u5b83\u80fd\u5230\u8fbe\u81f3\u5c11\u4e00\u4e2a\u5fc5\u8d25\u6001\uff0c\u90a3\u4e48\u4ed6\u662f\u5fc5\u80dc\u6001\u3002</p> <p>\u5176\u4ed6\u7684\u90fd\u662f\u5e73\u5c40\u3002</p> <p>\u90a3\u4e48\u5efa\u53cd\u56fe\u62d3\u6251\u66f4\u65b0\u5373\u53ef\uff0c\u66f4\u65b0\u4e0d\u5230\u7684\u90fd\u662f\u5e73\u5c40\u3002</p> <p>\u53e6\u5916\uff0c\u53ea\u8981\u4e00\u4e2a\u70b9\u786e\u5b9a\u4e86\u5fc5\u80dc\u6216\u8005\u5fc5\u8d25\u6001\uff0c\u90a3\u4e48\u5b83\u4e5f\u53ef\u4ee5\u5165\u961f\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u518d\u88ab\u66f4\u6539\u4e86\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#abc-191d", "title": "ABC 191D", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u5706\uff0c\u95ee\u5706\u4e0a\u548c\u5706\u5185\u6574\u70b9\u4e2a\u6570\u3002</p> <p>\u662f\u67d0\u4e2aHAOI\u7684\u8d85\u7ea7\u52a0\u5f3a\u7248\uff08</p> <p>\u8fd9\u9898\u5361\u7cbe\u5ea6\u7279\u522b\u5413\u4eba\uff0cYL\u5f53\u65f6\u5361 \\(1e-14\\) \u8fc7\u4e86\u3002</p> <p>\u6211\u5361 \\(1e-10\\) \u7206\u4e86\uff0c\u672c\u6765\u662f\u5fd8\u4e86\u8fd9\u4e2a\u9898\u7684\uff0c\u7ed3\u679cDM\u7684\u6bd2\u7624\u5361\u7cbe\u5ea6\u8bfe\u8bb2\u4e86\u8fd9\u4e2a\u3002</p> <p>\u5c31\u56de\u6765\u5199\u4e00\u4e0b\u3002</p> <p>\u53d1\u73b0\u5706\u5fc3\u5750\u6807\u548c\u534a\u5f84\u90fd\u662f\u6d6e\u70b9\u6570\uff0c\u4e0d\u8fc7\u4e0d\u8d85\u8fc7 \\(10^5\\) \u800c\u4e14\u6700\u591a\u6709\u56db\u4f4d\u5c0f\u6570\u70b9\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5148\u7ed9\u6bcf\u4e2a\u70b9\u7684 \\(x,y\\) \u90fd\u4e58\u4e0a \\(10^4\\) \u53d8\u6210\u6574\u6570\u3002</p> <p>\u7136\u540e\u8003\u8651\u52fe\u80a1\u5b9a\u7406+\u679a\u4e3e\u5224\u65ad\u5408\u6cd5\u4e0a\u4e0b\u754c\u5c31\u53ef\u4ee5\u4e86\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-261d", "title": "CF 261D", "text": "<p>\u6ca1\u505a\uff0c\u7a7a\u7740\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-1526c2", "title": "CF 1526C2", "text": "<p>\u95ee\u4e00\u4e2a\u5e8f\u5217\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff0c\u4f7f\u5b50\u5e8f\u5217\u7684\u4efb\u610f\u4f4d\u7f6e\u7684\u524d\u7f00\u548c\u4e0d\u5c0f\u4e8e \\(0\\)\u3002</p> <p>\u5927\u50bb\u903c\u9898\uff0c\u79d2\u4e86\u3002</p> <p>\u8003\u8651\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u7ef4\u62a4\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5403\uff0c\u5982\u679c\u5403\u6b7b\u4e86\u5c31\u628a\u6700\u5c0f\u7684\u5410\u51fa\u6765\u7136\u540e\u7ee7\u7eed\u5403\u3002</p> <p>\u6700\u540e\u8f93\u51fa size \u8d70\u4eba\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-1006f", "title": "CF 1006F", "text": "<p>dm \u8bb2\u7684\u4e00\u9053\u53cc\u5411BFS\u3002</p> <p>\u61d2\u5f97\u5199\u6240\u4ee5\u8f6c\u4e86\u522b\u4eba\u7684sol</p> <p>\u9898\u610f\u662f\u6709\u4e00\u4e2a \\(n\\times m\\) \u7684\u5730\u56fe\uff0c\u7136\u540e\u4ece\u5de6\u4e0a\u89d2\u8d70\u5230\u53f3\u4e0b\u89d2\uff0c\u95ee\u6700\u540e\u5f02\u6216\u7684\u503c\u7b49\u4e8e \\(k\\) \u7684\u8def\u5f84\u6709\u591a\u5c11\u6761\u3002</p> <p>\u601d\u8def\u5c31\u662f\u6298\u534a\u641c\u7d22\uff0c\u53ef\u4ee5\u964d\u4f4e\u5f88\u591a\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u5f53\u5730\u56fe\u5c0f\u7684\u65f6\u5019\uff0c\\(n+m\\) \u5c31\u4e0d\u6ee1\u8db3\u6298\u534a\u7684\u6761\u4ef6\u4e86\uff0c</p> <p>\u6240\u4ee5\u8fd9\u91cc\u7528 \\(n+m+2\\) \u4f5c\u4e3a\u6761\u4ef6\uff0c\u9996\u5148\u6211\u4eec\u5148\u641c\u7d22\u6b65\u6570\u4e3a \\(n+m+2\\) \u7684\u4e00\u534a\u7684\u503c\u4e3a\u641c\u7d22\u7ec8\u70b9\uff0c\u8bb0\u5f55\u5f53\u524d\u7684\u5f02\u6216\u503c\uff0c\u7136\u540e\u518d\u4ece\u7ec8\u70b9\u5f00\u59cb\u641c\u7d22\uff0c</p> <p>\u5f53\u641c\u7d22\u5230 \\(n+m+2\\) \u7684\u4e00\u534a\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5224\u65ad\u5f53\u524d\u70b9\u7684\u4e0e \\(k\\) \u7684\u5f02\u6216\u503c\u662f\u5426\u6709\u6807\u8bb0\u8fc7\uff0c\u6709\u7684\u8bdd\u5c31\u8bf4\u660e\u8fd9\u6574\u4e2a\u4e00\u6761\u8def\u7684\u5f02\u6216\u503c\u7b49\u4e8e \\(k\\) \uff0c\u76f4\u63a5\u52a0\u7ed9 \\(ans\\) \u5c31\u597d\u4e86\u3002</p> <p>\u539f\u6587\u94fe\u63a5\uff1ahttps://blog.csdn.net/Charles_Zaqdt/article/details/81077919</p>"}, {"location": "rec/old/old-cf-at-misc/#arc-084-db", "title": "ARC 084 D/B", "text": "<p>dm \u8bb2\u7684\u4e00\u9053\u6570\u8bbaBFS\u3002</p> <p>\u627e\u51fa\u6570\u4f4d\u548c\u6700\u5c0f\u7684 \\(k\\) \u7684\u500d\u6570\u662f\u591a\u5c11\u3002</p> <p>2e5</p> <p>\u53d1\u73b0\u53ef\u80fd\u4f1a\u70b8 <code>__int128</code> .</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5bf9\u6570\u4f4d\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\u53d1\u73b0\u5982\u679c\u4ece \\(1\\) \u5f00\u59cb\uff0c\u53ea\u7528\u4e24\u79cd\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5f97\u5230\u4efb\u610f\u4e00\u4e2a\u6570\uff08\u5176\u5b9e\u771f\u5b9e\u60c5\u51b5\u4e00\u79cd\u5c31\u53ef\u4ee5\u4e86\uff09</p> <ol> <li>\\(+1\\) \u4e14 cost \u4e3a \\(1\\)</li> <li>\\(\\times 10\\) \u4e14 cost \u4e3a \\(0\\)\u3002</li> </ol> <p>\u6240\u4ee5\u5176\u5b9e\u8fd9\u662f\u4e2a 01BFS\u3002</p> <p>\u4ee4\u6bcf\u4e00\u4e2a\u72b6\u6001\u90fd\u5bf9 \\(k\\) \u53d6\u6a21\uff0c\u7136\u540e\u4ece \\(1\\) \u5f00\u59cb\u3002</p> <p>\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u64cd\u4f5c\u662f cost \u4e3a \\(1\\) \u7684\u64cd\u4f5c\uff0c\u6254\u5230\u961f\u5c3e\uff0c\u53cd\u4e4b\u6254\u5230\u961f\u5934\u3002</p> <p>\u7136\u540e01BFS\u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#abc-203d", "title": "ABC 203D", "text": "<p>\u4e00\u9053 01 \u4e8c\u5206\u7684\u677f\u5b50\uff1f</p> <p>\u8fd9\u4e2a trick \u4e0d\u662f\u5f88\u5e38\u89c1\uff0c\u4f46\u662f\u53ea\u8981\u4e00\u51fa\u5c31\u80fd\u5361\u5230\u4eba\u3002</p> <p>\u8fd9\u9053\u9898\u8981\u6c42\u4f60\u6c42\u51fa\u4e00\u4e2a \\(n\\times n\\) \u7684\u77e9\u9635\u5f53\u4e2d\u7684\u6240\u6709 \\(k\\times k\\) \u5927\u5c0f\u7684\u5b50\u77e9\u9635\u7684\u8d21\u732e\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u4e00\u4e2a\u77e9\u9635\u7684\u8d21\u732e\u5b9a\u4e49\u4e3a\u628a\u77e9\u9635\u6240\u6709\u5143\u7d20\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e4b\u540e\u7684\u7b2c \\(\\lfloor \\dfrac{k^2}{2} \\rfloor +1\\) \u5927\u7684\u6570\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e2d\u4f4d\u6570\uff09</p> <p>\u5927\u5c0f\u662f \\(800^2\\)\u3002</p> <p>\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u8f6c\u5316\u4e3a\u5224\u5b9a\uff1a\u5b58\u4e0d\u5b58\u5728\u4e00\u4e2a\u5b50\u77e9\u9635\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u77e9\u9635\u7684\u8d21\u732e\u6bd4 \\(x\\) \u5c0f\uff1f</p> <p>\u7136\u540e\u6211\u4eec\u8ba9 \\(x\\) \u5c3d\u91cf\u5c0f\uff0c\u5f53\u8fd9\u4e2a\u77e9\u9635\u7684\u8d21\u732e\u5c31\u662f \\(x\\) \u7684\u65f6\u5019\uff0c\u7b54\u6848\u5c31\u662f \\(x\\)\u3002</p> <p>\u4f60\u8003\u8651\u53bb\u4e8c\u5206\u8fd9\u4e2a\u6570\u5b57 \\(x\\)\uff0c\u7136\u540e\u5bf9\u4e8e\u4f60\u4e8c\u5206\u5230\u7684\u77e9\u9635\uff0c\u4ee4\uff1a</p> \\[\\text{submatrix}[i][j]=\\begin{cases}0 &amp; ,\\text{submatrix}[i][j]\\le x\\\\1 &amp; ,\\text{submatrix}[i][j] &gt; x\\end{cases}\\] <p>\u5982\u679c\u8bf4\u8fd9\u4e2a\u5b50\u77e9\u9635\u7684\u548c\u662f \\(&lt;\\lfloor \\dfrac{k^2}{2} \\rfloor +1\\)  \u7684\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u6bd4 \\(x\\) \u5927\u7684\u6570\u5c31\u4e00\u5b9a\u5c11\u4e8e  \\(\\lfloor \\dfrac{k^2}{2} \\rfloor +1\\)  \u4e2a\u3002</p> <p>\u90a3\u4e48\u5b83\u7684\u8d21\u732e\u80af\u5b9a\u6bd4 \\(x\\) \u5c0f\uff0c\u6ee1\u8db3\u8981\u6c42\uff0c\u53cd\u4e4b\u5219\u4e0d\u6ee1\u8db3\u3002</p> <p>\u7136\u540e\u5199\u4e2a\u4e8c\u7ef4\u524d\u7f00\u548c\u641e\u641e\u5c31\u884c\u4e86\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-1059d", "title": "CF 1059D", "text": "<p>\u7ed9\u4e00\u5806\u70b9\uff0c\u662f\u5426\u6709\u4e00\u4e2a\u548c \\(x\\) \u8f74\u76f8\u5207\u7684\u5706\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u70b9\u90fd\u88ab\u5b83\u5305\u542b\u3002</p> <p>\u95ee\u8fd9\u4e2a\u5706\u7684\u534a\u5f84\u6700\u5c0f\u662f\u591a\u5c11\u3002</p> <p>\u9996\u5148\u4f60\u53d1\u73b0\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u70b9\u5bf9 \\(((x_1,y_1),(x_2,y_2))\\) \u6ee1\u8db3 \\(y_1\\times y_2 &lt;0\\) \uff0c\u90a3\u4e48\u5c31\u5f88\u660e\u663e\u65e0\u89e3\u3002</p> <p>\u7136\u540e\u6211\u4eec\u628a\u6240\u6709\u70b9\u8f6c\u5230 \\(x\\) \u8f74\u4e0a\u65b9\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f60\u4e8c\u5206\u5230\u7684 \\(r\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u626b\u63cf\u4e00\u904d\u70b9\u96c6\u5408\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9  \\((x,y)\\) \u5229\u7528\u52fe\u80a1\u5b9a\u7406\u6c42\u51fa\u4e00\u4e2a\u533a\u95f4\uff0c\u4f7f\u5f97\u533a\u95f4\u91cc\u7684\u6bcf\u4e00\u4e2a\u70b9\u5230 \\((x,y)\\) \u7684\u8ddd\u79bb\u5728\u533a\u95f4 \\([y,r]\\) \u5f53\u4e2d\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u533a\u95f4\u6c42\u4e00\u4e2a\u4ea4\u96c6\uff0c\u5982\u679c\u4ea4\u96c6\u4e3a\u7a7a\u96c6\u90a3\u4e48\u8fd9\u4e2a \\(r\\) \u4e0d\u5408\u6cd5\uff0c\u53cd\u4e4b\u5408\u6cd5\u3002</p> <p>\u7136\u540e\u6211\u4eec\u4f7f\u7528\u5b9e\u6570\u4e8c\u5206\uff0c\u4f46\u662f\u56e0\u4e3a\u8fd9\u9898\u5361\u7cbe\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4f7f\u7528 \\(eps\\) \u6765\u5224\u65ad\uff0c\u800c\u662f\u76f4\u63a5\u6309\u6b21\u6570\u5faa\u73af\u3002</p> <p>\u8fd9\u9898\u7cbe\u5ea6\u8981\u6c42 \\(10^{-6}\\) \uff0c\u6240\u4ee5\u4f60\u5927\u6982\u5faa\u73af\u4e2a \\(10^3\\) \u6b21\u5c31\u5dee\u4e0d\u591a\u4e86\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#agc-006d", "title": "AGC 006D", "text": "<p>\u4e5f\u662f\u4e00\u9053\u975e\u5e38\u5999\u7684 01 \u4e8c\u5206\u3002</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u6570\u5b57\u91d1\u5b57\u5854\uff0c\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u662f\u5b83\u4e0b\u4e00\u5c42\u7684\u4e09\u4e2a\u8282\u70b9\u7684\u4e2d\u4f4d\u6570\u3002</p> <p>\u7ed9\u5b9a\u6700\u540e\u4e00\u5c42\uff0c\u6c42\u7b2c\u4e00\u5c42\u6700\u6709\uff0c\\(2e5\\) \u5c42\u3002</p> <p>\u53d1\u73b0\u8981 \\(\\text{O}(n \\log n)\\) \u624d\u884c\u3002</p> <p>\u7136\u540e\u4f60\u8003\u8651\u4e8c\u5206\u9876\u5c42\u8282\u70b9 \\(x\\) \u7684\u6570\u503c\u3002</p> <p>\u5bf9\u4e8e\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u6211\u4eec\u4ee4\u6240\u6709\u7684 \\(\\le x\\) \u7684\u8282\u70b9\u53d8\u6210 \\(0\\) \uff0c\u53cd\u4e4b\u4e3a \\(1\\) \uff08\u548c ABC203D \u4e00\u4e2a\u601d\u8def\uff09\u3002</p> <p>\u7136\u540e\u4f60\u8003\u8651\u5411\u4e0a\u9012\u63a8\u7684\u8fc7\u7a0b\u3002</p> <p>\u4f60\u53d1\u73b0\uff0c\u56e0\u4e3a \\(x\\) \u662f\u6700\u9876\u5c42\u8282\u70b9\uff0c\u6240\u4ee5\u5982\u679c\u5e95\u5c42\u6709\u8fde\u7eed\u7684\u4e24\u4e2a \\(1\\) \u6216\u8005\u8fde\u7eed\u7684\u4e24\u4e2a \\(0\\) \uff0c\u4ed6\u4eec\u5c31\u4f1a\u4e00\u76f4\u5411\u4e0a\u8d70\uff0c\u800c\u4e14\u4e0d\u65ad\u5f80\u4e2d\u95f4\u9760\u3002</p> <p>\u6240\u4ee5\u6700\u9760\u8fd1\u4e2d\u95f4\u7684\u90a3\u4e00\u7ec4\u5c31\u662f\u5854\u9876\u7684 \\(0\\) \u6216\u8005 \\(1\\) \u3002</p> <p>\u5982\u679c\u4f60\u63a8\u51fa\u6765\u5854\u9876\u662f \\(0\\) ,\u90a3\u4e48\u5c31\u6ee1\u8db3\u60c5\u51b5\uff0c\u53cd\u4e4b\u4e0d\u6ee1\u8db3\u3002</p> <p>\u7136\u540e\u4f60\u518d\u7279\u5224\u4e00\u4e0b\u6839\u672c\u6ca1\u6709\u8fde\u7eed\u7684\u6570\u5b57\u7684\u60c5\u51b5\u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-865c", "title": "CF 865C", "text": "<p>\u4e00\u9053\u671f\u671b+\u4e8c\u5206\u3002</p> <p>\u4e5f\u6bd4\u8f83\u5999\u3002</p> <p>\u5e2e PWK \u4fee\u4e86\u4ed6\u7684 \u9898\u89e3\uff0c\u6240\u4ee5\u9898\u610f\u5c31\u7528\u4ed6\u7684\u4e86\uff1a</p> <p>\u4f60\u662f\u4e00\u4e2a up \u4e3b\uff0c\u4f60\u8981\u5f55\u4e00\u6bb5\u901f\u901a RA2YR \u7684\u89c6\u9891\uff0c</p> <p>\u6218\u5f79\u6709 \\(n\\) \u5173\uff0c\u6bcf\u5173\u4f60\u6709 \\(p_i\\%\\) \u7684\u53ef\u80fd\u6027\u82b1 \\(F_i\\) \u7684\u65f6\u95f4\u901a\u8fc7\uff0c\\((1-p_i)\\%\\) \u7684\u53ef\u80fd\u6027\u82b1\u6389 \\(S_i\\) \u7684\u65f6\u95f4\u901a\u8fc7\uff08\u5931\u8bef\u4e86\uff09\uff0c\u5176\u4e2d\u4fdd\u8bc1 \\(F_i&gt;S_i\\)\u3002</p> <p>\u4f46\u56e0\u4e3a\u4f60\u60f3\u201c\u901f\u901a\u201d\uff0c\u4f60\u4e0d\u5e0c\u671b\u4f60\u7684\u89c6\u9891\u957f\u5ea6\u8d85\u8fc7 \\(m\\)\u3002</p> <p>\u5f53\u4f60\u8ba4\u4e3a\u81ea\u5df1\u63a5\u4e0b\u6765\u53ef\u80fd\u5f55\u4e0d\u5b8c\uff08\u63a5\u7740\u5f55\u5f55\u5b8c\u4e0d\u5982\u91cd\u65b0\u5f55\uff09\u65f6\uff0c\u4f60\u4f1a\u91cd\u65b0\u5f00\u59cb\u5f55\uff0c\u6c42\u5f55\u5b8c\u6574\u4e2a\u6e38\u620f\u7684\u65f6\u95f4\u671f\u671b\u3002</p> <p>\u8003\u8651\u8bbe \\(f_{i,j}\\) \u8868\u793a\u6253\u8fc7\u7b2c \\(i\\) \u5173\uff0c\u4f7f\u7528 \\(j\\) \u7684\u65f6\u95f4\u7684\u671f\u671b\u3002</p> <p>\u7136\u540e\u56e0\u4e3a\u662f\u6709\u65f6\u95f4\u9650\u5236\u7684\uff0c\u6240\u4ee5\u4f60\u4f1a\u63a8\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u67ff\u5b50\uff08\u4e5f\u662fPWK\u7684\uff09\uff1a</p> \\[ f(i,j)=\\begin{cases} 0 ,&amp; i=n,j\\le m\\\\ f(0,0),&amp; j &gt;m \\\\  \\min(f(0,0),e1+e2) ,&amp; \\text{otherwise.} \\end{cases} \\] <p>\u5176\u4e2d $e_1=p_{i+1} \\times f(i+1,j+f_{i+1})+f_{i+1}))   $\u3002</p> <p>\\(e_2=p_{i+1}\\times(1-p_{i+1})\\times(f(i+1,j+S_{i+1})+S_{i+1})\\) \u3002</p> <p>\u7136\u540e\u4f60\u53d1\u73b0 \\(f_{0,0}\\) \u4f1a\u5bfc\u81f4\u8f6c\u79fb\u6709\u73af\uff0c\u6240\u4ee5\u628a \\(f_{0,0}\\) \u5f53\u4f5c\u4e00\u4e2a\u5e38\u6570\uff0c\u4ece \\(n\\) \u5f00\u59cb\u5012\u5e8f\u679a\u4e3e\u3002</p> <p>\u7136\u540e\u6700\u4f18\u91cd\u5f00\u65f6\u95f4\u4e00\u5b9a\u662f\u7b49\u4e8e\u671f\u671b\u65f6\u95f4\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u4ed6\u91cd\u5f00\u7684\u65f6\u95f4\u3002</p> <p>\u7136\u540e\u5229\u7528 \\(f_{0,0}\\) \u7684\u503c\u5224\u65ad\u53ef\u884c\u6027\u5373\u53ef \uff08\\(f_{0,0}&lt;mid\\) \uff09\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-1203f1", "title": "CF 1203F1", "text": "<p>\u6709 \\(i\\) \u4e2a\u9879\u76ee\uff0c\u6bcf\u4e00\u4e2a\u9879\u76ee\u6709\u4e00\u4e2a\u9650\u5236\u548c\u4e00\u4e2a\u6743\u503c\uff08\u6743\u503c\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff09\u3002</p> <p>\u4f60\u505a\u4e00\u4e2a\u9879\u76ee\u7684\u8bdd\uff0c\u4f60\u7684\u4fe1\u8a89\u9700\u8981\u8fbe\u5230\u9650\u5236 \\(a_i\\)\uff0c\u505a\u5b8c\u4e4b\u540e\u4f60\u7684\u4fe1\u8a89\u4f1a\u52a0\u4e0a\u6743\u503c \\(b_i\\)\u3002</p> <p>\u505a\u5b8c\u9879\u76ee\u7684\u65f6\u5019\u4fe1\u8a89\u4e0d\u80fd\u4e3a \\(0\\) \uff0c\u4f60\u7684\u521d\u59cb\u4fe1\u8a89\u4e3a \\(r\\) \uff0c\u95ee\u4f60\u80fd\u4e0d\u80fd\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u505a\u5b8c\u6240\u6709\u9879\u76ee\u3002</p> <p>\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\u3002</p> <p>\u4f60\u53d1\u73b0\u505a\u5b8c\u4e00\u4e2a\u9879\u76ee\u4e4b\u540e\uff0c\u4f60\u7684\u4fe1\u8a89\u81f3\u5c11\u662f \\(a_i+b_i\\)\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6309\u7167 \\(a_i+b_i\\) \u5347\u5e8f\u6392\u5e8f\uff0c\u5e76\u4e14\u5728\u6b64\u57fa\u7840\u4e0a\u8ba9\u9650\u5236 \\(a_i\\) \u66f4\u5927\u7684\u6392\u5728\u524d\u9762\u3002</p> <p>\u7136\u540e\u4ece\u5934\u5f00\u59cb\u6a21\u62df\u505a\u9879\u76ee\u7684\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u4f60\u53d1\u73b0 \\(b_i\\) \u7684\u6b63\u8d1f\u4f1a\u5bfc\u81f4\u8d2a\u5fc3\u51fa\u73b0\u5947\u602a\u7684\u9519\u8bef\uff0c\u4f1a WA on test 5\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u6b63\u8d1f\u5206\u5f00\u6392\u5e8f\uff0c\u5faa\u73af\u4e24\u6b21\u7136\u540e\u5224\u65ad\u53ef\u884c\u6027\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\uff08upd on 22.10.03\uff1a\u8fd9\u4e2a\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a Exchange Argument\u3002\uff09</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-814d", "title": "CF 814D", "text": "<p>\u6709 \\(n\\) \u4e2a\u5706\uff0c\u4ed6\u4eec\u53ea\u80fd\u662f\u76f8\u4e92\u5305\u542b\uff0c\u76f8\u79bb\u6216\u8005\u76f8\u5207\u7684\u3002</p> <p>\u5c06\u5176\u5206\u4e3a\u4e24\u7ec4\uff0c\u6bcf\u7ec4\u4e2d\uff0c\u53ea\u6709\u5947\u6570\u6b21\u8986\u76d6\u7684\u624d\u4f1a\u7b97\u5165\u9762\u79ef\uff0c\u6c42\u53ef\u80fd\u7684\u6700\u5927\u9762\u79ef\u3002 \uff08\u7ffb\u8bd1\u662f\u6211\u6254\u5728luogu\u8ba8\u8bba\u533a\u7684\uff09</p> <p>\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u8d2a\u5fc3\uff0c\u628a\u6240\u6709\u8986\u76d6\u6b21\u6570\u662f \\(2\\) \u7684\u5706\u5168\u90e8\u6254\u5230\u4e00\u7ec4\uff0c\u5269\u4e0b\u7684\u4e00\u7ec4\u3002</p> <p>\u8bc1\u660e\u7565\uff08</p> <p>\u7136\u540e\u53c8\u56e0\u4e3a\u5305\u542b\u5173\u7cfb\u662f\u5448\u6811\u5f62\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8ba9\u88ab\u5305\u542b\u7684\u6210\u4e3a\u7236\u4eb2\uff0c\u5916\u5c42\u7684\u6210\u4e3a\u513f\u5b50\uff0c\u7136\u540e\u5728\u6811\u4e0a\u8dd1\u4e00\u904d \\(dfs\\) \u7edf\u8ba1\u5373\u53ef\uff08\u4e0d\u8fc7\u5173\u7cfb\u662f\u6709\u53ef\u80fd\u53d8\u6210\u68ee\u6797\u7684\uff0c\u6240\u4ee5\u8981\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\uff09\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-954g", "title": "CF 954G", "text": "<p>\u4e00\u5171\u6709 \\(n\\) \u9762\u5899\uff0c\u521d\u59cb\u6709 \\(a_i\\) \u4e2a\u5f13\u7bad\u624b\u5728\u7b2c \\(i\\) \u9762\u5899\u7684\u4f4d\u7f6e\u4e0a\u3002\u4e00\u4e2a\u5728 \\(i\\) \u4f4d\u7f6e\u7684\u5f13\u7bad\u624b\u53ef\u4ee5\u4fdd\u62a4 \\(|i - j| \\leq r\\) \u7684\u6240\u6709\u5899 \\(j\\) \u3002</p> <p>\u4f60\u73b0\u5728\u53ef\u4ee5\u589e\u6d3e \\(k\\) \u4e2a\u5f13\u7bad\u624b\u5e76\u4e14\u4efb\u610f\u5206\u914d\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002\u4f60\u9700\u8981\u6700\u5927\u5316\u88ab\u6570\u91cf\u6700\u5c11\u7684\u5f13\u7bad\u624b\u4fdd\u62a4\u7684\u5899\u88ab\u5f13\u7bad\u624b\u4fdd\u62a4\u7684\u6570\u91cf\u3002</p> <p>\\(n \\leq 5 \\times 10^5, 0 \\leq r \\leq n, 0 \\leq k \\leq 10^{18} ,0 \\leq a_i \\leq 10^9\\)</p> <p>\uff08\u9898\u610f\u6765\u81ealuogu\u8ba8\u8bba\u533a\uff09</p> <p>\u8bbe\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684 defence lv \u4e3a \\(d_i\\)</p> <p>\u53d1\u73b0\u8fd9\u4e2a\u9898\u7684\u6761\u4ef6\u662f \u201c\u6700\u5c0f\u503c\u6700\u5927\u201d\u3002</p> <p>\u6240\u4ee5\u5f88\u660e\u663e\u662f\u4e8c\u5206\u7b54\u6848\u3002</p> <p>\u8003\u8651\u4e8c\u5206\u8fd9\u4e2a\u503c \\(mid\\) \uff0c\u6bcf\u6b21 check \u7684\u65f6\u5019\u8003\u8651\u8d2a\u5fc3\u3002</p> <p>\u5982\u679c\u6709\u4e00\u4e2a\u4f4d\u7f6e \\(i\\) \u7684  \\(d_i &lt; mid\\)</p> <p>\u6211\u4eec\u5728\u4f4d\u7f6e \\(\\min(i+r,n)\\) \u653e \\(mid-d_i\\) \u4e2a archer \u5c31\u884c\u4e86\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-845e", "title": "CF 845E", "text": "<p>\u6709\u4e00\u4e2a \\(n\\) \u884c \\(m\\) \u5217\u7684\u7f51\u683c\u3002\u5176\u4e2d\u6709 \\(k+1\\) \u4e2a\u683c\u5b50\u7740\u706b\u4e86\u3002\u6bcf\u4e2a\u65f6\u523b\uff0c\u706b\u4f1a\u8513\u5ef6\u81f3\u76f8\u90bb\u7684\u683c\u5b50\uff08\u516b\u8054\u901a\uff09\u3002</p> <p>\u73b0\u5728\u7ed9\u51fa\u5176\u4e2d \\(k\\) \u4e2a\u7740\u706b\u7684\u683c\u5b50\uff0c\u8bf7\u786e\u5b9a\u7b2c \\(k+1\\) \u683c\u5b50\uff0c\u4f7f\u5f97\u7f51\u683c\u88ab\u70e7\u5b8c\u7684\u7528\u65f6\u6700\u77ed\u3002</p> <p>\u4f60\u53ea\u9700\u8981\u8f93\u51fa\u6700\u77ed\u7528\u65f6\u3002</p> <p>\\(n,m \\le 10^9,k\\le 500\\)\u3002</p> <p>\u53d1\u73b0 \\(n,m\\) \u975e\u5e38\u5927\uff0c\u4f46\u662f \\(k\\) \u975e\u5e38\u5c0f\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u4ece \\(k\\) \u5165\u624b\uff0c\u8003\u8651\u53bb\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u65f6\u523b\uff0c\u6bcf\u4e00\u4e2a\u70b9\u80fd\u8513\u5ef6\u5230\u7684\u4f4d\u7f6e\u3002</p> <p>\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u6bcf\u79d2\u53ea\u6269\u5c55\u4e00\u5c42\u5e76\u4e14\u662f\u516b\u8054\u901a\uff0c\u6240\u4ee5\u53ef\u4ee5 \\(\\text{O}(1)\\) \u7b97\u8fd9\u4e2a\u77e9\u5f62\u7684\u9876\u70b9\u7684\u5750\u6807\u3002</p> <p>\u53c8\u53d1\u73b0\u8fd9\u4e2a\u201c\u65f6\u95f4\u201d\u6ca1\u6cd5\u5f88\u597d\u7684\u6c42\u51fa\u6765\uff0c\u4f46\u662f\u521a\u597d\u5177\u6709\u5355\u8c03\u6027\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u4e8c\u5206\u3002</p> <p>\u6bcf\u6b21\u4e8c\u5206\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u6240\u6709\u77e9\u5f62\u8986\u76d6\u7684\u9762\u79ef\u3002</p> <p>\u7136\u540e\u4f60\u53bb\u770b\u6700\u8fb9\u4e0a\u7684\u90a3\u56db\u4e2a\u89d2\uff08\u56e0\u4e3a\u5f88\u660e\u663e\u6269\u5c55\u5230\u4ed6\u4eec\u7684\u65f6\u95f4\u4e00\u5b9a\u662f\u6bcf\u4e2a\u65b9\u5411\u4e0a\u6700\u665a\u7684\uff09\u7684\u7a7a\u4f59\uff08\u5982\u679c\u6709\uff09\u6709\u6ca1\u6709\u529e\u6cd5\u7528\u4e00\u4e2a\u70b9\u5c31\u80fd\u8986\u76d6\u5b8c\u5c31\u884c\u3002</p> <p>\u56e0\u4e3a\u503c\u57df\u6bd4\u8f83\u5927\u6240\u4ee5\u6211\u4eec\u9700\u8981\u79bb\u6563\u5316\u3002</p> <p>\u8ba1\u7b97\u9762\u79ef\u53ef\u4ee5\u4f7f\u7528\u4e8c\u7ef4\u5dee\u5206\u6216\u8005\u626b\u63cf\u7ebf\u3002</p>"}, {"location": "rec/old/old-cf-at-misc/#cf-547d", "title": "CF 547D", "text": "<p>\u7ed9\u5750\u6807\u7cfb\u5f53\u4e2d\u7684 \\(n\\) \u4e2a\u6574\u70b9\u7ea2\u84dd\u67d3\u8272\uff0c\u8981\u6c42\u540c\u4e00\u4e2a\u76f4\u7ebf\uff08\\(y\\) or \\(x\\) \u65b9\u5411\uff09\u4e0a\u7684\u7ea2\u84dd\u8282\u70b9\u4e2a\u6570\u76f8\u5dee\u4e0d\u8d85\u8fc7\u4e00\u3002</p> <p>\u95ee\u5982\u4f55\u67d3\u8272\uff0c\u591a\u89e3\u4efb\u610f\u5373\u53ef\u3002</p> <p>\u4fdd\u8bc1\u6709\u7b54\u6848\u3002</p> <p>\u9996\u5148\u6211\u4eec\u53d1\u73b0\u4e00\u5b9a\u4f1a\u6709\u7b54\u6848\uff0c\u53c8\u662f\u8981\u6211\u4eec\u628a\u70b9\u5206\u6210\u4e24\u4e2a\u90e8\u5206\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u4e86\u4e8c\u5206\u56fe\uff0c\u624b\u5143\u4e00\u4e0b\u6837\u4f8b\u53ef\u4ee5\u53d1\u73b0\u786e\u5b9e\u662f\u4e8c\u5206\u56fe\u3002</p> <p>\u6240\u4ee5\u76f4\u63a5\u5bf9\u4e8e\u540c\u4e00\u76f4\u7ebf\u4e0a\u7684\u70b9\u5efa\u8fb9\u7136\u540e\u4e8c\u5206\u56fe\u67d3\u8272\u5373\u53ef\u3002</p> <p>\u53ef\u4ee5\u5148 \\(\\text{O}(n \\log n)\\)\u6392\u5e8f\u518d\u5efa\u8fb9\uff0c\u6216\u8005\u7528\u4e00\u4e2a \\(\\text{O}(n)\\) \u7684\u65b9\u6cd5\u5efa\u8fb9\uff0c\u5177\u4f53\u65b9\u6cd5\u89c1\u63d0\u4ea4\u8bb0\u5f55\uff1ahttps://codeforces.com/contest/547/submission/131984717</p>"}, {"location": "rec/old/old-cf-at-sol/", "title": "CF & AT \u9898\u89e3", "text": "<p>\u67d0\u4e9b\u6076\u5fc3\u9898\u5c31\u4e0d\u8865\u4e86\u3002</p> <p>ATCoder\uff0cNowCoder\uff0cCodeforces\u7684\u6bd4\u8d5b\u5b9e\u9645\u4e0a\u90fd\u4f1a\u653e\u5230\u8fd9\u91cc\u9762\u3002</p> <p>\u7136\u540eCF\u7684\u601d\u7ef4\u9898\u4e00\u7c7b\u7684\u4e5f\u4f1a\u5728\u8fd9\u513f\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#codeforces-734", "title": "Codeforces #734", "text": "<p>Contest ID:<code>1551</code></p> <p>\u5728\u5b66\u6821\u548c\u6574\u4e2a\u673a\u623f\u4e00\u8d77VP\u7684\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#a", "title": "A", "text": "<p>\\(1\\) \u5757\u7684\u786c\u5e01\u7528 \\(c_1\\) \u4e2a, \\(2\\) \u5757\u786c\u5e01\u7528 \\(c_2\\)\u4e2a\u3002</p> <p>\u95ee\u4f60\u51d1\u51fa \\(n\\) \u5143\u65f6\u7684 \\(\\min(|c_1-c_2|)\\)</p> <p>\u4e00\u773c\u9898\u3002</p> <p>\u8981 \\(|c_1-c_2|\\)  \u6700\u5c0f\u8bf4\u767d\u4e86\u5c31\u662f\u5c3d\u91cf\u5e73\u5747\u3002</p> <p>\u90a3\u4e48\u5c31\u5c3d\u91cf\u7684\u7528\u4e00\u4e2a \\(1\\) \u7684\u540c\u65f6\u4e5f\u7528\u4e00\u4e2a \\(2\\)\u3002</p> <p>\u6240\u4ee5\u628a \\(n\\) \u9664\u4ee5 \\(3\\)\uff0c\u5f97\u5230 \\(c_1\\) \u548c \\(c_2\\) \u5404\u81ea\u5fc5\u987b\u8981\u6709\u7684\u4e2a\u6570\uff08\u6b64\u65f6 \\(c_1=c_2\\)\uff09\u3002 </p> <p>\u7136\u540e \\(n\\) \u65e0\u975e\u5c31\u662f\u5269\u4e0b \\(0,1,2\\) \u8fd9\u4e09\u79cd\u60c5\u51b5\u3002</p> <p>\u5982\u679c\u4e0d\u5269\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa\u3002</p> <p>\u5982\u679c\u4f59 \\(1\\) \u90a3\u4e48\u591a\u52a0\u4e00\u4e2a \\(1\\) \u5143\u3002</p> <p>\u5982\u679c\u4f59 \\(2\\) \u90a3\u4e48\u591a\u52a0\u4e00\u4e2a \\(2\\) \u5143\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#b1", "title": "B1", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u5b57\u7b26\u53ef\u4ee5\u6d82\u4e0a\u7ea2\u6216\u7eff\uff0c\u6216\u8005\u4e0d\u6d82\u3002</p> <p>\u6d82\u4e0a\u76f8\u540c\u989c\u8272\u7684\u6240\u6709\u5b57\u6bcd\u76f8\u4e92\u4e0d\u80fd\u76f8\u540c\uff0c\u4e14\u7ea2\u8272\u548c\u7eff\u8272\u7684\u4e2a\u6570\u90fd\u4e3a \\(Q\\)\uff0c\u6c42 \\(\\max\\{Q\\}\\)\u3002</p> <p>\u9996\u5148\u8003\u8651\u7b2c\u4e00\u4e2a\u6761\u4ef6\u3002</p> <p>\u8f6c\u5316\u4e00\u4e0b\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e00\u79cd\u5b57\u6bcd\u6700\u591a\u53ea\u80fd\u6709\u4e24\u4e2a\u88ab\u6d82\u4e0a\u989c\u8272\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5f00\u4e00\u4e2a\u6876\u7edf\u8ba1\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u5e76\u5bf9\u5176\u8fdb\u884c\u5224\u65ad\u3002</p> <p>\u518d\u8003\u8651\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u3002</p> <p>\u56e0\u4e3a\u53ea\u4f1a\u6709\u4e24\u79cd\u989c\u8272\uff0c\u6240\u4ee5\u6d82\u4e0a\u989c\u8272\u7684\u70b9\u7684\u4e2a\u6570\u5fc5\u987b\u662f\u5076\u6570\uff08 \\(2\\) \u7684\u500d\u6570\uff09\u3002</p> <p>\u90a3\u4e48\u601d\u8def\u5c31\u51fa\u6765\u4e86\uff0c\u7edf\u8ba1\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e76\u4e14\u7edf\u8ba1\u5b83\u6700\u591a\u6709\u591a\u5c11\u4e2a\u5b57\u6bcd\u53ef\u4ee5\u88ab\u6d82\u4e0a\u989c\u8272\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u5b57\u6bcd\uff0c\u5982\u679c\u5b83\u7684\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e \\(2\\) \u90a3\u4e48\u5c31\u90fd\u53ef\u4ee5\u88ab\u6d82\u8272\uff0c\u5982\u679c\u5927\u4e8e\u7b49\u4e8e \\(3\\) \u5c31\u53ea\u6709\u4e24\u4e2a\u53ef\u4ee5\u88ab\u6d82\u4e0a\u989c\u8272\u3002</p> <p>\u56e0\u4e3a\u6709\u4e24\u79cd\u989c\u8272\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f\u53ef\u4ee5\u88ab\u6d82\u4e0a\u989c\u8272\u7684\u5b57\u6bcd\u4e2a\u6570\u9664\u4ee5 \\(2\\)\u3002</p> <p>\u5982\u679c\u6700\u540e\u53ef\u4ee5\u88ab\u6d82\u4e0a\u989c\u8272\u7684\u5b57\u6bcd\u4e2a\u6570\u662f\u4e2a\u5947\u6570\uff0c\u5c31\u9700\u8981\u5148\u51cf \\(1\\) \u518d\u9664 \\(2\\)\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#b2", "title": "B2", "text": "<p>\u5927\u4f53\u540c B1,\u73b0\u5728\u5b57\u7b26\u4e32\u53d8\u6210\u4e86\u5e8f\u5217\uff0c\u800c\u4e14\u6709 \\(k\\) \u79cd\u4e0d\u540c\u989c\u8272\u3002</p> <p>\u53ea\u8981\u6c42\u4f60\u8f93\u51fa\u65b9\u6848\u5373\u53ef\u3002</p> <p>\u4eceB1\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u73b0\u5728\u6709 \\(k\\) \u79cd\u4e0d\u540c\u989c\u8272\u3002\u90a3\u4e48\u6211\u4eec\u4ecd\u65e7\u662f\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u51fa\u73b0\u591a\u5c11\u6b21\u3002</p> <p>\u5982\u679c\u5927\u4e8e \\(k\\) \u90a3\u4e48\u5c31\u53ea\u6709 \\(k\\) \u4e2a\u53ef\u4ee5\u88ab\u6d82\u8272\u3002</p> <p>\u53cd\u4e4b\u90fd\u53ef\u4ee5\u3002</p> <p>\u7136\u540e\u7edf\u8ba1\u5b8c\u4e4b\u540e\u6211\u4eec\u6309 \\(a[i]\\) \u7684\u5927\u5c0f\u6392\u4e2a\u5e8f\u3002</p> <p>\u4e5f\u5c31\u662f\u628a\u540c\u4e00\u79cd\u90fd\u6254\u5230\u4e00\u8d77\u5904\u7406\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u79cd\uff0c\u6211\u4eec\u53ea\u6d82\u524d \\(k\\) \u4e2a\uff08\u4fdd\u8bc1\u4e0d\u91cd\u590d\u800c\u4e14\u6d82\u591f\uff09\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u8981\u8f93\u51fa\u65b9\u6848\uff0c\u6240\u4ee5\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u5143\u7d20\u7684\u4f4d\u7f6e\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#c", "title": "C", "text": "<p>\u53ea\u7528\u4e94\u4e2a\u5b57\u6bcd \\(\\{a,b,c,d,e\\}\\) \u7ec4\u6210\u4e00\u7bc7\u6587\u7ae0\uff0c</p> <p>\u82e5\u679c\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u6bd4\u5176\u5b83\u7684\u52a0\u8d77\u6765\u90fd\u591a\u90a3\u4e48\u8fd9\u7bc7\u6587\u7ae0\u5c31\u662f\u597d\u7684\u3002</p> <p>\u7ed9\u5b9a\u51e0\u4e2a\u5355\u8bcd\uff0c\u6c42\u6700\u957f\u7684\u597d\u6587\u7ae0\u7684\u5355\u8bcd\u6570\u3002</p> <p>\u770b\u5230\u53ea\u6709\u4e94\u4e2a\u5b57\u6bcd\uff0c\u6211\u76f4\u63a5\u9ad8\u5174\u4e86\u8d77\u6765\u3002</p> <p>\u770b\u5230\u65f6\u96504s\uff0c\u6211\u7684\u5634\u89d2\u5c31\u76f4\u63a5\u626c\u4e86\u8d77\u6765\u3002</p> <p>\u8fd9\u4e0d\u660e\u6446\u7740\u8ba9\u4f60\u6253\u66b4\u529b\u5417\uff1f</p> <p>\u6240\u4ee5\u76f4\u63a5\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u6bcf\u79cd\u5b57\u7b26\u6211\u4eec\u6392\u5e8f\u8d2a\u5fc3\u4e00\u4e0b\uff0c\u5982\u679c\u8bf4\u53ef\u4ee5\u9009\u5f53\u524d\u5355\u8bcd\uff0c\u5373\u66f4\u65b0\u7b54\u6848\u3002</p> <p>\uff08\u8bf4\u662f\u7b80\u5355\u66b4\u529b+\u8d2a\u5fc3\uff0c\u6211\u5374\u5199\u4e86\u534a\u5c0f\u65f6\uff0cwtcl\uff09</p>"}, {"location": "rec/old/old-cf-at-sol/#d1-d2-e-f", "title": "D1 D2 E F", "text": "<p>\u5f85\u8865</p>"}, {"location": "rec/old/old-cf-at-sol/#codeforces-735", "title": "Codeforces #735", "text": "<p>Contest ID:<code>1554</code></p> <p>\u4e94\u9898\u573a\uff0c\u6211\u5c45\u7136\u6709ABCD\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#a_1", "title": "A", "text": "<p>\u95ee\u4f60\u4e00\u4e2a\u5e8f\u5217\u7684\u6240\u6709\u957f\u5ea6\u4e0d\u5c0f\u4e8e \\(2\\) \u7684\u5b50\u533a\u95f4\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e58\u79ef\u7684\u6700\u5927\u503c\u3002</p> <p>\u4ece\u6570\u636e\u8303\u56f4\u5c31\u80fd\u53d1\u73b0\uff0c\u4e00\u5b9a\u662f\u4e2a \\(\\text{O}(T\\times n)\\) \u7684\u7b97\u6cd5\u3002</p> <p>\u6240\u4ee5\u60f3\u5230\u4e86\u5355\u8c03\u961f\u5217\u6216\u8005\u5355\u8c03\u6808\u7ef4\u62a4\u3002</p> <p>\u4f46\u662f\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u4e2a\u5b50\u533a\u95f4\u7684\u957f\u5ea6\u53ea\u80fd\u4e3a \\(2\\)\u3002</p> <p>\u4e3a\u4f55\uff1f</p> <p>\u6211\u4eec\u5c31\u5148\u4ece\u957f\u5ea6\u4e3a \\(2\\) \u7684\u533a\u95f4\u5f00\u59cb\u8003\u8651\u3002</p> <p>\u90a3\u4e48\u5f88\u660e\u663e\u6743\u503c\u5c31\u662f \\(a[l] \\times a[r]\\) \u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(3\\) \u7684\u533a\u95f4\uff0c\u4e14\u91cc\u9762\u7684\u5143\u7d20\u662f \\(\\{a,b,c\\}\\) \uff08\u6309\u987a\u5e8f\uff09\u3002</p> <ul> <li> <p>\u5047\u8bbe \\(b\\) \u662f\u6700\u5927\u7684\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u548c \\(\\min(a,c)\\) \u7ed3\u5408\uff0c\u90a3\u4e48\u5c31\u548c\u957f\u5ea6\u4e3a \\(2\\) \u7684\u6ca1\u6709\u4efb\u4f55\u533a\u522b\u3002</p> </li> <li> <p>\u5047\u8bbe \\(a\\) \u662f\u6700\u5927\u7684\uff0c\u90a3\u4e48\u6709\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\u3002</p> <ol> <li>\\(b\\) \u6bd4 \\(c\\) \u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u7684\u6743\u503c\u4e00\u5b9a\u662f \\(a \\times b\\) \uff0c\u8f6c\u5316\u6210\u4e86\u957f\u5ea6\u4e3a \\(2\\) \u7684\u60c5\u51b5\u3002</li> <li>\\(b\\) \u6bd4 \\(c\\) \u5927\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u7684\u6743\u503c\u5c31\u662f \\(a \\times c\\) \uff0c\u4f46\u662f\u5f88\u660e\u663e\uff0c $a\\times b $ \u4e5f\u5c31\u662f\u957f\u5ea6\u4e3a \\(2\\) \u7684\u65f6\u5019\u7edd\u5bf9\u6bd4\u8fd9\u4e2a \\(a\\times c\\) \u66f4\u4f18\uff08\u56e0\u4e3a\u6211\u4eec\u6700\u7ec8\u8981\u6c42\u7684\u662f\u6700\u5927\u503c\uff09</li> </ol> </li> </ul> <p>\u53cd\u8fc7\u6765\u540c\u7406\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u7ed3\u8bba\u6269\u5c55\u5230 \\(n=4,5,6...\\) \u5c31\u80fd\u8bc1\u660e\u7ed3\u8bba\u6b63\u786e\u3002</p> <p>\u6240\u4ee5\u73b0\u5728\u53ea\u9700\u8981\u8bfb\u5165\u7684\u65f6\u5019\u8ba9\u76f8\u90bb\u7684\u5143\u7d20\u4e24\u4e24\u76f8\u4e58\uff0c\u6c42\u4e58\u79ef\u7684\u6700\u5927\u503c\uff0c\u8fd9\u4e2a\u6700\u5927\u503c\u5c31\u662f\u7b54\u6848\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#b", "title": "B", "text": "<p>\u6c42\u6240\u6709\u4e00\u4e2a\u5e8f\u5217\u91cc\u6240\u6709\u7684 \\(i\\times j -k\\times(a_i \\operatorname{or} a_j)\\) \u7684 \\(\\max \\ \\  (k \\in [1,\\min(n,100)])\\)</p> <p>\uff08tips\uff1a\u4e00\u4e2a\u6570\u6309\u4f4d\u6216\u4e0a\u53e6\u4e00\u4e2a\u6570\uff0c\u8fd9\u4e2a\u6570\u7edd\u5bf9\u4e0d\u4f1a\u51cf\u5c0f\uff09</p> <p>\u6211\u662f\u76f4\u63a5\u51ed\u611f\u89c9\u731c\u7684\u7ed3\u8bba\uff1a\\(i\\in [\\max(n-100,1),n),j=i+1\\) \u7136\u540e\u66b4\u529b\u8dd1\u3002</p> <p>\u8fd9\u91cc\u6709\u4e2a\u4e25\u8c28\u7684\u505a\u6cd5\uff08\u6765\u81ealg\u9898\u89e3\u533a\uff09</p> <p></p>"}, {"location": "rec/old/old-cf-at-sol/#c_1", "title": "C", "text": "<p>\u6c42\u6700\u5c0f\u7684 \\(k\\) \u6ee1\u8db3 \\(k\\not\\in \\{n \\operatorname{xor}0,n \\operatorname{xor}1...n \\operatorname{xor}m\\}\\)</p> <p>\\(n,m\\) \u662f \\(10^9\\) \u7ea7\u522b\u3002</p> <p>\u6839\u636e\u5f02\u6216\u7684\u67d0\u4e2a\u6027\u8d28\uff1a \\(n \\operatorname{xor} k &gt;m \\Leftrightarrow n \\operatorname{xor} k \\ge m +1\\)</p> <p>\u8bbe \\(x_i=(m+1)_2\\) \u7684\u7b2c \\(i\\) \u4f4d\u3002</p> <p>\u8bbe \\(k_i=(k)_2\\) \u7684\u7b2c \\(i\\) \u4f4d\u3002</p> <p>\u90a3\u4e48\u6709\u56db\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\\(x_i=k_i=1\\Rrightarrow k_i=0\\)</li> <li>\\(x_i=k_i=0\\Rrightarrow k_i=0\\)</li> <li>\\(x_i=1,k_i=0\\Rrightarrow k_i=1\\)</li> <li>\\(x_i=0,k_i=1\\Rrightarrow k_i=0\\)</li> </ul> <p>\u7a0d\u5fae\u7528\u4f4d\u8fd0\u7b97\u641e\u4e00\u4e0b\u5c31\u884c\u4e86\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#d", "title": "D", "text": "<p>\u6211\u76ee\u524d\u505a\u8fc7\u6700\u50bb\u903c\u7684\u6784\u9020\u3002</p> <p>\u5bb9\u6613\u53d1\u73b0 <code>aaba+k</code> \u5f62\u5f0f\u7684\u6784\u9020\u662f\u5bf9\u7684\u3002</p> <p>\u5c31\u662f\u524d\u9762\u4e00\u6bb5 <code>a</code> \u6bd4\u540e\u9762\u4e00\u6bb5\u591a\u4e00\u4e2a\uff0c\u7136\u540e\u5728\u4e2d\u95f4\u63d2\u4e00\u4e2a <code>b</code></p> <p>\u5982\u679c <code>n</code> \u662f\u5947\u6570\u5728\u540e\u9762\u8865\u4e00\u4e2a\u975e <code>a\\b</code> \u7684\u5b57\u7b26\u5c31\u884c\u3002</p> <p>\u6ce8\u610f\u7279\u5224 \\(\\text{length}=1\\)</p>"}, {"location": "rec/old/old-cf-at-sol/#e", "title": "E", "text": "<p>\u5f85\u8865</p>"}, {"location": "rec/old/old-cf-at-sol/#edu-112", "title": "Edu #112", "text": "<p>Contest ID:<code>1555</code></p>"}, {"location": "rec/old/old-cf-at-sol/#a_2", "title": "A", "text": "<p>\u6709 \\(6\\) \u7247\u7684\uff08 \\(15min\\) \uff09 ,\\(8\\) \u7247\u7684( \\(20min\\) ), \\(10\\) \u7247\u7684( \\(25min\\) )Pizza\u3002</p> <p>\u73b0\u5728\u9700\u8981\u81f3\u5c11 \\(n\\) \u7247 Pizza\uff0c\u95ee\u6700\u5c0f\u7684\u7b49\u5f85\u65f6\u95f4\u3002</p> <p>\u4e0d\u96be\u53d1\u73b0\u6bcf\u79cd\u5e73\u5747\u4e00\u4e0b\uff0c\u90fd\u662f\\(2.5\\) \u5206\u949f\u4e00\u7247\u3002</p> <p>\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u4f60\u9700\u8981\u7684\u5c0f\u4e8e\u7b49\u4e8e\u516d\u7247\uff0c\u76f4\u63a5 \\(15min\\) \u5c31\u884c\u3002</p> <p>\u7136\u540e\u8003\u8651\u5927\u4e8e\u516d\u600e\u4e48\u505a\u3002</p> <p>\u53d1\u73b0\u5176\u5b9e\u8fd9\u4e09\u4e2a\u6570\u53ef\u4ee5\u51d1\u51fa\u6240\u6709\u5927\u4e8e \\(6\\) \u7684\u5076\u6570\u3002</p> <p>\u53cd\u5411\u601d\u7ef4\u3002</p> <p>\u5982\u679c\u4f60\u505a\u8fc7\u8fd9\u9053\u9898\uff1a P3951 [NOIP2017 \u63d0\u9ad8\u7ec4] \u5c0f\u51ef\u7684\u7591\u60d1</p> <p>\u90a3\u4e48\u53ef\u4ee5\u62d3\u5c55\u6210\u4e09\u5143\u7684\u5076\u6570\u60c5\u51b5\uff0c\u7136\u540e\u5c31\u80fd\u8bc1\u51fa\u8fd9\u4e09\u4e2a\u6570\u6700\u5927\u4e0d\u80fd\u51d1\u51fa\u7684\u5076\u6570\u662f \\(4\\)\uff0c\u90a3\u4e48\u6700\u5927\u7684\u4e0d\u80fd\u51d1\u51fa\u7684\u6570\u5c31\u662f \\(5\\)\u3002</p> <p>\u7136\u540e\u5c31\u6574\u5b8c\u4e86\uff0c\u8fd9\u9898\u76f4\u63a5\u7279\u5224\u5c31\u884c\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#b_1", "title": "B", "text": "<p>\u7ed9\u4e00\u4e2a\u5bbd\u548c\u9ad8\u7ed9\u5b9a\u7684\u623f\u95f4\uff0c\u4e00\u5f20\u5df2\u7ecf\u653e\u597d\u7684\u684c\u5b50\u7684\u5bf9\u89d2\u7ebf\u9876\u70b9\u5750\u6807\u3002</p> <p>\u518d\u7ed9\u5b9a\u4e00\u5f20\u957f\u5bbd\u56fa\u5b9a\u7684\u684c\u5b50\uff0c\u95ee\u539f\u6765\u7684\u684c\u5b50\u81f3\u5c11\u8981\u79fb\u52a8\u591a\u5c11\u4e2a\u5355\u4f4d\u624d\u80fd\u653e\u4e0b\u65b0\u684c\u5b50\uff08\u66fc\u54c8\u987f\u8ddd\u79bb\uff09\u3002</p> <p>\u65b0\u7684\u684c\u5b50\u8981\u6700\u4f18\uff0c\u5c31\u53ea\u80fd\u653e\u5728\u56db\u4e2a\u89d2\u4e0a\uff0c\u53ef\u4ee5\u56db\u79cd\u60c5\u51b5\u90fd\u679a\u4e3e\u3002</p> <p>\u4e5f\u53ef\u4ee5\u7279\u5224\u8d2a\u5fc3\u4e00\u4e0b\uff0c\u6bd4\u8f83\u7b80\u5355\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#c_2", "title": "C", "text": "<p>Alice \u548c Bob \u5728\u4e00\u4e2a \\(2 \\times m\\) \u7684\u77e9\u5f62\u4e0a\u73a9\u6e38\u620f\uff0c\u77e9\u5f62\u7684\u6bcf\u4e00\u4e2a\u683c\u5b50\u4e0a\u90fd\u6709\u4e00\u4e2a\u6570 $ a_{i,j} $</p> <p>Alice \u548c Bob \u4e00\u5f00\u59cb\u7ad9\u5728\u5de6\u4e0a\u89d2\u683c\u5b50 \\((1,1)\\) \u4e0a\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u79fb\u52a8\uff0c\u76f4\u5230\u79fb\u52a8\u5230\u7ec8\u70b9 \\((2,m)\\) \u4e0a\uff0c\u7ecf\u8fc7\u4e00\u4e2a\u683c\u5b50\u65f6\u4f1a\u53d6\u8d70\u683c\u5b50\u4e0a\u7684\u6570\uff0c\u8d62\u5f97\u76f8\u5e94\u7684\u5f97\u5206</p> <p>Alice \u9996\u5148\u5f00\u59cb\u79fb\u52a8\uff0cBob \u4e0d\u80fd\u53d6\u8d70 Alice \u5df2\u7ecf\u53d6\u8d70\u7684\u6570</p> <p>Alice \u671f\u671b\u6700\u5c0f\u5316 Bob \u7684\u5f97\u5206\uff0cBob \u5219\u5e0c\u671b\u6700\u5927\u5316\u81ea\u5df1\u7684\u5f97\u5206</p> <p>\u6c42Bob \u7684\u6700\u5927\u5f97\u5206\u3002</p> <p>\u8bfb\u4e00\u4e0b\u9898\u53d1\u73b0\uff0c\u56e0\u4e3a\u53ea\u6709\u4e24\u884c\u800c\u4e14\u53ea\u80fd\u5411\u53f3\u6216\u8005\u5411\u4e0b\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u4ed6\u4eec\u90fd\u53ea\u80fd\u5411\u4e0b\u4e00\u6b21\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u5165\u624b\u70b9\u3002</p> <p>\u6ce8\u610f\u5230Alice\u8d70\u8fc7\u4e4b\u540e\u6570\u5b57\u5c31\u6ca1\u4e86\uff0c\u800c\u4e14Alice\u5148\u624b\uff0c\u6240\u4ee5Bob\u4e00\u5b9a\u8981\u5c3d\u91cf\u907f\u5f00Alice\u8d70\u8fc7\u7684\u8def\u3002</p> <p></p> <p>\u6bd4\u5982\u4e0a\u56fe\uff0c\u7c89\u8272\u90e8\u5206\u662fAlice\u8d70\u8fc7\u7684\u8def\uff0c\u90a3\u4e48Bob\u80fd\u53d6\u5230\u6570\u5b57\u7684\u53ea\u6709 \\(R1\\) \u6216 \\(R2\\) \u4e24\u90e8\u5206\u3002</p> <p>\u4e5f\u5c31\u662f\u4ed6\u4e0d\u662f\u4ece\u4e0a\u9762\u5148\u8d70\u901a\u518d\u4e0b\u53bb\u5c31\u662f\u5148\u4e0b\u53bb\u7136\u540e\u8d70\u901a\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u679a\u4e3eAlice\u4e0b\u53bb\u7684\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u5229\u7528\u524d\u7f00\u548c\u7ef4\u62a4\u4e00\u4e0b\u6c42\u4e2a \\(\\max\\) \u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#d-e-f", "title": "D E F", "text": "<p>\u5f85\u8865</p>"}, {"location": "rec/old/old-cf-at-sol/#codeforces-736div12", "title": "Codeforces #736(div1+2", "text": "<p>Contest ID:<code>div1 1548,div2 1549</code></p> <p>\u6211\u4f9d\u65e7div2 ABCD\u2026\u2026</p> <p>\u5176\u4ed6\u7684\u76ee\u524d\u8fd8\u4e0d\u4f1a</p>"}, {"location": "rec/old/old-cf-at-sol/#div2a", "title": "div2A", "text": "<p>\u50bb\u903c\u9001\u5206\u9898\u3002</p> <p>\u8ba9\u4f60\u627e\u4e00\u5bf9 \\((a,b)\\) \u6ee1\u8db3 \\(a \\operatorname{mod} P = b \\operatorname{mod} P\\)</p> <p>\\(P\\) \u662f\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e \\(5\\) \u7684\u8d28\u6570\u3002</p> <p>\u6240\u4ee5 \\(P\\) \u4e0d\u53ef\u80fd\u662f\u5076\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4 \\(P-1\\) \u4e00\u5b9a\u662f\u5076\u6570\u3002</p> <p>\u90a3\u4e48\u76f4\u63a5\u627e \\(P-1\\) \u7684\u968f\u4fbf\u4e24\u4e2a\u5927\u4e8e\u7b49\u4e8e\u4e8c\u7684\u56e0\u5b50\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u76f4\u63a5\u8f93\u51fa \\(2\\) \u548c \\((p-1)/2\\) \u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#div2b", "title": "div2B", "text": "<p>\u8003\u8651\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u5728\u7b2c \\(i\\) \u5217\u7684\u5352\u8981\u60f3\u5230\u8fbe\u5bf9\u9762\u4e00\u5b9a\u6ee1\u8db3\u4e00\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff1a</p> <ul> <li> <p>\u7b2c\u4e00\u6392\u7684\u7b2c \\(i\\) \u5217\u6ca1\u6709\u654c\u5175\uff0c\u76f4\u63a5\u8d70\u8fc7\u53bb\u5373\u53ef\u3002</p> </li> <li> <p>\u7b2c\u4e00\u6392\u7684\u7b2c \\(i-1\\) \u6216 \\(i+1\\) \u5217\u6709\u654c\u5175\u4e14\u4e4b\u524d\u6ca1\u6709\u6211\u65b9\u5175\u53bb\u5403\u3002</p> </li> </ul> <p>\u7136\u540e\u7a0d\u5fae\u6a21\u62df\u4e00\u4e0b\u5c31\u884c\u4e86\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#div1a", "title": "div1A", "text": "<p>\u751a\u81f3\u6bd4 div2A\u8fd8SB\u7684zz\u9898\u3002</p> <p>\u770b\u8d77\u6765\u662f\u4ec0\u4e48\u9ad8\u5927\u4e0a\u7684\u56fe\u8bba\uff0c\u7136\u800c\u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u5c31\u5b8c\u4e86\u3002</p> <p>\u7ec6\u8282\u7a0d\u5fae\u6709\u70b9\u5361\u4eba\uff0c\u6ce8\u610f\u4e00\u4e0b\u5c31\u884c\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#div1b-great", "title": "div1B \uff08Great\uff09", "text": "<p>\u554a\u8fd9\u9053\u9898\u6709\u70b9\u6bd2\u7624\uff0c\u6211\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6\u5de6\u53f3\uff08\u8981\u4e0d\u662f\u6bd4\u8d5b\u5ef6\u65f610min\u6211\u771f\u7684\u505a\u4e0d\u8d77\uff09\u3002</p> <p>\u7ed9\u4e00\u4e2a\u5e8f\u5217 \\(a[]\\) \u7684\u533a\u95f4 \\(a_i,a_{i+1},...a_j\\)\u3002</p> <p>\u8fd9\u4e2a\u533a\u95f4\u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a \\(\\ge 2\\) \u7684 \\(m\\)\uff0c\u4f7f \\(a_i \\operatorname{mod} m=a_{i+1} \\operatorname{mod} m =...=a_j  \\operatorname{mod} m\\)</p> <p>\u95ee\u7ed9\u5b9a\u5e8f\u5217 \\(a[]\\) \u7684\u6700\u5927\u597d\u533a\u95f4\u7684\u5927\u5c0f\u3002</p> <p>\u8bf4\u5b9e\u8bdd\u2026\u2026\u6211\u662f\u771f\u7684\u4e0d\u6e05\u695a\u8fd9\u4e2a\u795e\u4ed9\u601d\u8def\u600e\u4e48\u6765\u7684\u3002</p> <p>\u5bf9\u4e8e \\(\\forall x \\in(i,j]\\) \uff0c\u4ee4 \\(a[x]\\) \u51cf\u53bb \\(a[x-1]\\) \uff08\u4e4b\u540e\u8981\u53d6\u7edd\u5bf9\u503c\uff09</p> <p>\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u51cf\u4e86\u4e4b\u540e\uff0c\u5047\u8bbe \\(a[x] \\operatorname{mod} m=k\\) \u3002</p> <p>\u90a3\u4e48 \\(k\\) \u5c31\u4f1a\u88ab\u6d88\u6389\u4e86\uff01\uff01\uff01</p> <p>\u4e5f\u5c31\u662f \\(|a[x]-a[x-1]|  \\operatorname{mod} m =0\\) \uff01\uff01\uff01</p> <p>\u90a3\u4e48\u53cd\u8fc7\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684 \\(\\gcd\\) \u76f8\u540c\uff08\u4e14 \\(\\gcd&gt;1\\)\uff09\u7684\u533a\u95f4\u5c31\u884c\u4e86\uff01\uff01\uff01</p> <p>\u7136\u540e\u53d1\u73b0 \\(\\gcd\\) \u8fd9\u73a9\u610f\u513f\u4e0d\u592a\u597d\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff08\u5e38\u6570\u592a\u5927\u4e86\uff09\uff0c\u5206\u5757\u7684 \\(\\text{O}(n\\sqrt{n})\\) \u5f88\u5bb9\u6613\u672c\u9898\u7684\u67d0\u4e9b\u795e\u4ed9\u6570\u636e\u5361\u6b7b\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5c31\u60f3\u5230\u4e86\u597d\u73a9\u7684 \\(\\text{ST}\\) \u8868\uff01\uff01\uff01\uff01</p> <p>\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5229\u7528  \\(\\text{ST}\\) \u8868\u6765\u7ef4\u62a4\u533a\u95f4\u7684 \\(\\gcd\\)\u3002</p> <p>\u4f46\u662f\u8fd9\u91cc\u8981\u6c42\u7684\u662f\u6700\u957f\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u518d\u5957\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u5c31\u4f1a\u70b8\u3002</p> <p>\u90a3\u4e48\u5c31\u638f\u51fa \\(\\text{O}(n\\log n)\\) \u7684\u4e8c\u5206\u5427\u3002</p> <p>\u6240\u4ee5\u5148\u5dee\u5206\u53d6\u4e2a\u7edd\u5bf9\u503c\u518d\u9884\u5904\u7406\u51fa \\(\\log_2\\) \u3002</p> <p>\u7136\u540e\u5229\u7528 \\(\\text{ST}\\) \u8868\u7ef4\u62a4 \\(\\gcd\\)\u3002</p> <p>\u4e4b\u540e\u679a\u4e3e\u533a\u95f4\u5de6\u7aef\u70b9\uff0c\u540c\u65f6\u4e8c\u5206\u533a\u95f4\u53f3\u7aef\u70b9\u3002</p> <p>\u5e76\u7528\u7ef4\u62a4\u7684\u4fe1\u606f\u8fdb\u884ccheck\u5373\u53ef\u3002</p> <p>\u5e94\u8be5\u662f\u6211\u6700\u8fd1\u505a\u7684\u6700\u6709\u610f\u601d\u7684\u9898\u4e86\u3002</p> <p>\u6b64\u5904\u4e8c\u5206\u5199\u6cd5\u76f8\u8f83\u4e8e\u6211\u5e73\u65f6\u7684\u5199\u6cd5\u7a0d\u5fae\u6709\u70b9\u602a\uff0c\u4e0d\u8fc7\u4e5f\u662f\u5bf9\u7684\u3002</p> <p>\u8fd9\u79cd\u5199\u6cd5\u662f\u4e0d\u4f1a\u53d6\u5230 \\(l\\) \u7684\uff0c\u65b9\u4fbf\u672c\u9898\u66f4\u65b0\u7b54\u6848\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int si=2e5+10;\n#define int long long\nint st[si][20];\nint a[si],logt[si];\nint T,n,res=0;\n\nint gcd(int a,int b){\nif(!b) return a;\nreturn gcd(b,a%b);\n}\nint check(int l,int r){\nreturn gcd(st[l][logt[r-l+1]],st[r-(1&lt;&lt;logt[r-l+1])+1][logt[r-l+1]]);\n}\nvoid STprework(){\nfor(register int i=2;i&lt;=n;++i){\nlogt[i]=logt[i&gt;&gt;1]+1;\n}\nfor(register int i=1;i&lt;=n;++i){\nint o=abs(a[i]-a[i+1]);\nst[i][0]=o;\n}\nfor(register int i=1;i&lt;=logt[n];++i){\nint toj=(n+1)-(1&lt;&lt;i);\nfor(register int j=1;j&lt;=toj;++j){\nst[j][i]=gcd(st[j][i-1],st[j+(1&lt;&lt;(i-1))][i-1]);\n}\n}\n}\n\nsigned main(){\nscanf(\"%lld\",&amp;T);\nwhile(T--){\nscanf(\"%lld\",&amp;n);\nfor(register int i=1;i&lt;=n;++i){\nscanf(\"%lld\",&amp;a[i]);\n}n-=1;\nSTprework();\nres=0;\nfor(register int i=1;i&lt;=n;++i){\nif(st[i][0]==1) continue;\nint l=i,r=n;\nwhile(l&lt;r){\nint mid=(l+r+1)&gt;&gt;1;\nif(check(i,mid)==1) r=mid-1;\nelse l=mid;\n}\nres=max(res,l-i+1);\n}\nres++;\nprintf(\"%lld\\n\",res);\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#codeforces-737div2", "title": "Codeforces #737(div2)", "text": "<p>Contest ID:<code>1557</code></p> <p>\u5bf9\u8fd9\u6b21\u6bd4\u8d5b\u7684\u51fa\u9898\u4eba\u975e\u5e38\u65e0\u8bed\u3002</p> <p>\u6ca1\u6709\u6c34\u5e73\u5c31\u522b\u6765\u51fa\u9898\u597d\u4e0d\u597d\uff1f</p> <p>\u60a8\u53ea\u4f1a\u62ff\u7740\u677f\u5b50\uff0c\u5957\u8def\u9898\u6539\u4e00\u70b9\u70b9\uff0c\u52a0\u52a0\u7801\u91cf\uff0c\u8f93\u51fa\u65b9\u6848\u6765\u6076\u5fc3\u4eba\u5417\uff1f</p> <p>A\u7684\u8d2a\u5fc3\uff0cB\u7684\u79bb\u6563\uff0cC\u7684\u7ec4\u5408\u6570\uff0cD\u7684\u7ebf\u6bb5\u6811\u4f18\u5316DP\uff0c\u90fd\u662f\u8001trick\uff0cE\u51fa\u4e2a\u4ea4\u4e92\uff0c\u70c2\u5230\u5927\u90e8\u5206\u4ea4\u7684\u968f\u673a\u7b97\u6cd5\u90fd\u80fd\u8fc7st\u3002</p> <p>\u6211\u6ca1AK\uff0c\u53ea\u662f\u60f3\u55b7\u4e00\u55b7\u51fa\u9898\u4eba\uff0c\u53cd\u6b63\u8fd9\u6bd4\u8d5b\u98ce\u8bc4\u633a\u5dee\u7684\u3002</p> <p>\u4e0d\u5199\u4e86\uff0c\u6d6a\u8d39\u65f6\u95f4\uff0c\u671f\u5f85 #738 \u80fd\u6709\u8d28\u91cf\u4e00\u70b9\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#atcoder-beginning-contest-214", "title": "Atcoder Beginning Contest 214", "text": "<p>Contest ID:<code>abc_214</code></p> <p>\u56e0\u4e3aAT\u6bd4\u8d5b\u6ca1\u6709\u90a3\u4e48\u9891\u7e41\uff0c\u6240\u4ee5AT\u7684\u9898\u89e3\u4e5f\u90fd\u6254\u5230Codeforces Solutions \u6765\u4e86\u3002</p> <p>\u660e\u660e\u53ef\u4ee5\u5199\u51faEF\u4f46\u662fE\u50bb\u903c\u4e86\u3002</p> <p>\u6211\u4e0d\u914d 8kyu\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#a-b-c", "title": "A B C", "text": "<p>A\u662f\u8bed\u6cd5\u9898\uff0cB\u662f\u66b4\u529b\u679a\u4e3e\uff0cC\u662f\u65ad\u73af\u6210\u94fe\u6a21\u62df</p>"}, {"location": "rec/old/old-cf-at-sol/#d-cf915f", "title": "D &amp; CF915F", "text": "<p>\u8fd9\u662f\u4e2a\u7ecf\u5178 trick\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e24\u9898\u7adf\u7136\u548c\u672c\u6b21D\u9898\u60ca\u4eba\u7684\u76f8\u4f3c\uff1a</p> <ul> <li>P5351 Ruri Loves Maschera\uff08\u8fd9\u9898\u5b9e\u9645\u4e0a\u662f\u70b9\u5206\u6cbb+BIT\uff0c\u548c\u8fd9\u4e2atrick\u6ca1\u592a\u5927\u5173\u7cfb\uff09</li> <li>CF915F Imbalance Value of a Tree</li> </ul> <p>\u5168\u90e8\u90fd\u662f \\(u,v\\) \u4e4b\u95f4\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u4e00\u4e9b\u4fe1\u606f\u7edf\u8ba1\u3002</p> <p>\u7279\u522b\u662f CF915F\uff0c\u4f60\u60ca\u5947\u7684\u53d1\u73b0\u4e00\u4e2a \\(\\min,\\max\\) \u505a\u51cf\u6cd5\u540e\u6c42\u548c\uff0c\u4e00\u4e2a\u76f4\u63a5\u5c31\u662f\u5bf9 \\(\\max\\) \u6c42\u548c\u3002</p> <p>\u6240\u4ee5\u8fd9\u4e24\u9053\u9898\uff0c\u5b8c\u5168\u4e00\u81f4\u3002</p> <p>\u6b64 Trick \u7684\u505a\u6cd5\u5c31\u662f\u5229\u7528\u5e76\u67e5\u96c6\u6309\u987a\u5e8f\u5408\u5e76\u7136\u540e\u8ba1\u7b97\u8d21\u732e\u3002</p> <p>\u8fd9\u9898\u5c31\u662f\u6309\u8fb9\u6743\u503c\u4ece\u5c0f\u5230\u5927\u5408\u5e76\u8fde\u901a\u5757\u7136\u540e\u8ba1\u7b97\u8d21\u732e\u3002</p> <p>\u9996\u5148\u8003\u8651\u7b80\u5355\u8def\u5f84\u4e0a\u7684 \\(w_{\\max}\\)</p> <p>\u6211\u4eec\u5148\u5bf9\u4e8e\u6240\u6709\u4ee3\u8868\u8fb9\u7684\u4e09\u5143\u7ec4 \\((u,v,w)\\) \u6309\u7167 \\(w\\) \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u626b\u63cf\u6bcf\u4e00\u6761\u8fb9\u3002</p> <p>\u7136\u540e\u4f7f\u7528\u5e76\u67e5\u96c6\u8fdb\u884c\u7ef4\u62a4\u8fde\u901a\u5757\uff0c\u6bcf\u4e00\u6b21\u626b\u63cf\u90fd\u628a \\(u,v\\) \u5408\u5e76\u8d77\u6765\u3002</p> <p>\u56e0\u4e3a\u73b0\u5728\u6240\u6709\u4e09\u5143\u7ec4\u6309 \\(w\\) \u5355\u8c03\u4e0d\u4e0b\u964d\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u5bf9\u4e8e\u5f53\u524d\u626b\u63cf\u5230\u7684 \\(w\\)\uff0c\u4ed6\u80fd\u505a\u51fa\u8d21\u732e\u7684\u8def\u5f84\u53ea\u6709 \\(siz[\\text{root}(u)]\\times siz[\\text{root}(v)]\\) \u8fd9\u4e48\u591a\u4e2a\u3002</p> <p>\u4e3a\u5565\uff0c\u4f60\u770b\u540e\u9762\u7684\u6ca1\u6709\u88ab\u52a0\u8fdb\u6765\u7684\u4e09\u5143\u7ec4\uff0c\u6bcf\u4e00\u4e2a\u7684 \\(w\\) \u90fd\u6bd4\u4f60\u5927\uff0c\u90a3\u540e\u9762\u7684\u60c5\u51b5\u4f60\u80af\u5b9a\u6ca1\u6cd5\u505a\u51fa\u8d21\u732e\u3002</p> <p>\u90a3\u4e48\uff0c\u5728\u6bcf\u4e00\u6b21\u5408\u5e76\u7684\u65f6\u5019\u8ba1\u7b97\u8d21\u732e \\(w \\times siz[\\text{root}(u)]\\times siz[\\text{root}(v)]\\) \u5373\u53ef\u3002</p> <p>\u7136\u540e CF915F \u5c31\u5b8c\u5168\u4e00\u6837\uff0c\u70b9\u5316\u8fb9\u76f4\u63a5\u6c42\u4e24\u904d\uff0c\u4e00\u6b21\u5347\u5e8f\u4e00\u6b21\u964d\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u4e24\u4e2a\u603b\u8d21\u732e\u505a\u51cf\u6cd5\u5373\u53ef\u3002</p> <p>\u90a3\u4e00\u9898\u552f\u4e00\u7684\u65b0 Trick \u5c31\u662f\u5bf9\u4e8e\u8dd1 \\(\\min\\) \u7684 \\(\\texttt{dsu}\\) \u7684\u65f6\u5019\uff0c\u5bf9\u4e8e \\((u,v)\\) \u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u662f \\(\\min(val[u],val[v])\\)\u3002</p> <p>\\(\\max\\) \u540c\u7406\u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#e-f-g-h", "title": "E F G H", "text": "<p>\u5f85\u8865</p>"}, {"location": "rec/old/old-cf-at-sol/#codeforces-738", "title": "Codeforces #738", "text": "<p>Contest ID:<code>1559</code></p> <p>CN round \uff0c\u4f53\u9a8c\u8fd8\u53ef\u4ee5\u3002</p> <p>\u53ef\u80fd\u662f\u4eca\u5e74\u7684\u6700\u540e\u4e00\u6b21\u5b9e\u5730CF\u4e86\u3001</p>"}, {"location": "rec/old/old-cf-at-sol/#a_3", "title": "A", "text": "<p>\u7a0d\u5fae\u63a8\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u628a\u6574\u4e2a\u5e8f\u5217\u5168\u90e8 \\(\\&amp;\\) \u8d77\u6765\u53ef\u4ee5\u6700\u4f18\u3002</p> <p>\u7136\u540e\u968f\u4fbf\u6574\u4e00\u6574\u5c31\u53ef\u4ee5\u53d1\u73b0\u4e00\u5b9a\u80fd\u6784\u9020\u51fa\u8fd9\u79cd\u65b9\u6848\u3002</p> <p>\uff08\u4e4b\u540e\u5565\u65f6\u95f4\u4ed4\u7ec6\u5199\u4e0b\u5427\uff09</p>"}, {"location": "rec/old/old-cf-at-sol/#b_2", "title": "B", "text": "<p>\u611f\u89c9\u662f\u4e2a\u5f88\u719f\u6089\u7684trick\uff1f</p> <p>\u5c31\u662f\u7ed9\u4f60\u4e00\u4e2a\u5df2\u7ecf\u586b\u4e0a\u4e24\u79cd\u5b57\u7b26 <code>R,B</code> \u7684\u5b57\u7b26\u4e32\uff08\u6709\u4e9b\u5730\u65b9\u7a7a\u7740\uff09\u3002</p> <p>\u95ee\u4f60\u600e\u4e48\u6837\u8865\u5168\u5269\u4e0b\u7684\u7a7a\u4f59\u80fd\u591f\u4f7f\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\u76f8\u7b49\u7684\u60c5\u51b5\u6700\u5c11\u3002</p> <p>\u4f60\u53ea\u80fd\u586b <code>R,B</code> \u4e24\u4e2a\u5b57\u7b26\u3002</p> <p>\u5c31\u662f\u8d2a\u5fc3\u4e00\u4e0b\uff0c\u56e0\u4e3a\u9700\u8981\u5c3d\u91cf\u7684\u51fa\u73b0 <code>BRBRB</code> \u8fd9\u79cd\u4ea4\u53c9\u7684\u5f62\u5f0f\u3002</p> <p>\u6240\u4ee5\u968f\u4fbf\u5224\u4e00\u4e0b\u5c31\u884c\uff0c\u7ec6\u8282\u89c1\u4ee3\u7801\u3002</p> <p>\u6ce8\u610f\u8981\u5199\u6e05\u695a\u5168\u90e8\u662f <code>?</code> \u7684\u60c5\u51b5</p> <pre><code>while(T--){\nscanf(\"%lld\",&amp;n);\ncin&gt;&gt;s;s=' '+s;\nint i=0,k=0;\nfor(i=1;i&lt;=n;++i) if(s[i]!='?'){k=1;break;}\nif(k){\nfor(register int j=i-1;j&gt;=1;--j){\nif(s[j+1]=='R') s[j]='B';\nelse s[j]='R';\n}\n}\nelse s[1]='B'; for(i=1;i&lt;=n;++i){\nif(s[i]=='?'){\nif(s[i-1]=='R') s[i]='B';\nelse s[i]='R';\n}\n}//\u628a\u6ca1\u6709\u8865\u5168\u7684\u5730\u65b9\u8865\u5168\nfor(i=1;i&lt;=n;++i) cout&lt;&lt;s[i];puts(\"\");\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#c_3", "title": "C", "text": "<p>\u6bd4\u8f83\u7b80\u5355\u7684\u6784\u9020\uff0c\u76f4\u63a5\u653e\u4ee3\u7801\uff08\u538b\u4e86\u884c\uff0c\u4e0d\u662f\u6211\u7684\u6b63\u5e38\u9a6c\u8702\uff09</p> <pre><code>while(T--){\nscanf(\"%lld\",&amp;n);\nfor(register int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;a[i]);\nif(a[1]==1){\nprintf(\"%lld \",n+1);\nfor(register int i=1;i&lt;=n;++i) printf(\"%lld \",i);puts(\"\");continue;\n}\nif(a[n]==0){\nfor(register int i=1;i&lt;=n;++i) printf(\"%lld \",i);\nprintf(\"%lld \",n+1);puts(\"\");continue;\n}\nfor(register int i=1;i&lt;=n;++i){\nif(a[i]==0 &amp;&amp; a[i+1]==1){\nfor(register int j=1;j&lt;=i;++j) cout&lt;&lt;j&lt;&lt;\" \";\ncout&lt;&lt;n+1&lt;&lt;\" \";\nfor(register int j=i+1;j&lt;=n;++j) cout&lt;&lt;j&lt;&lt;\" \";\nbreak;\n}\n}puts(\"\");continue;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#d1", "title": "D1", "text": "<p>\u7ed9\u4f60\u4e24\u4e2a\u72ec\u7acb\u7684\u68ee\u6797\uff0c\u73b0\u5728\u6bcf\u4e2a\u68ee\u6797\u90fd\u6709\u4e00\u4e9b\u8fb9\u3002</p> <p>\u7136\u540e\u5982\u679c\u4f60\u8981\u6dfb\u52a0\u4e00\u6761\u8fb9 \\((u,v)\\) \uff0c\u90a3\u4e48\u4e24\u4e2a\u68ee\u6797\u7684 \\((u,v)\\) \u8fd9\u6761\u8fb9\u90fd\u8981\u52a0\u4e0a\u3002</p> <p>\u95ee\u5728\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u68ee\u6797\u4ecd\u65e7\u662f\u68ee\u6797\u7684\u6761\u4ef6\u4e0b\uff0c\u6700\u591a\u53ef\u4ee5\u52a0\u591a\u5c11\u6761\u8fb9\u3002</p> <p>\\(n\\le1000\\)\u3002</p> <p>\u50bb\u903c\u9898\uff0c\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5757\u7136\u540e\u66b4\u529b\u679a\u4e3e\u6240\u6709\u6ca1\u6709\u8054\u901a\u7684\u70b9\u5bf9\uff0c\u52a0\u8fb9\u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#d2", "title": "D2", "text": "<p>\u540c D1 \uff0c\\(n\\le 10^5\\)</p> <p>\u672c\u6b21\u6bd4\u8d5b\u6700\u96be\u7684\u9898\u3002</p> <p>\u8d5b\u65f6\u6ca1\u505a\u51fa\u6765\uff0c\u8d5b\u540e\u770b\u89c1\u4e00\u4e2a\u795e\u5947\u7684\u505a\u6cd5\uff1a</p> <p>\u5148\u8fde \\(1\\) \uff0c\u7136\u540e\u5bf9\u4e24\u4e2a\u68ee\u6797\u679a\u4e3e\u6bcf\u4e2a\u70b9\u770b\u8ddf \\(1\\) \u6709\u6ca1\u6709\u8fde\uff0c\u5728\u8fd9\u91cc\u9762\u627e\u70b9\u8fde\u7ebf\u3002</p> <p>\u611f\u89c9\u6709\u70b9\u602a\u4f46\u662f\u80fd\u8fc7\uff08</p>"}, {"location": "rec/old/old-cf-at-sol/#e_1", "title": "E", "text": "<p>\\(\\gcd\\) +\u5927\u529b\u5bb9\u65a5+DP</p> <p>\\(\\because\\gcd(a_1,a_2...a_n)=1 \\Leftrightarrow\\sum_{d|\\gcd(a_1,a_2...a_n)}\\mu(d)\\).</p> <p>\\(\\therefore\\) \u8ba1\u7b97\u5bf9\u4e8e\u6bcf\u4e2a \\(d\\) , \\(\\mu(d)\\) \u88ab\u7b97\u4e86\u591a\u5c11\u6b21\uff0c\u8fd9\u4e2a\u76f4\u63a5  \\(\\texttt{dp}\\) \u5373\u53ef\u3002</p> <p>\u4e5f\u5c31\u662f\u679a\u4e3e \\(d\\)\uff0c\u7136\u540e\u8981\u8ba1\u7b97\u6709\u591a\u5c11\u4e2a\u6570\u5217\u6ee1\u8db3 \\(d|a_i\\) \u4e14 \\(\\sum_{i=1}^n a_i\\le m\\)</p> <p>\u601d\u8def\u6765\u81ea lgsdwn(Orz lgd) \u548c Silver187\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconst int si=101000;\nconst int mod=998244353;\nint n,m;\nint prime[si],mu[si];\nbool vis[si];\nvoid Mobius(int n){\nmemset(vis,0,sizeof(vis));\nmu[1]=1,prime[0]=0;\nfor(register int i=2;i&lt;=n;i++){\nif(!vis[i]) prime[++prime[0]]=i,mu[i]=-1;\nfor(register int j=1;j&lt;=prime[0] &amp;&amp; i&lt;=n/prime[j];j++){\nvis[i*prime[j]]=1;\nif(i%prime[j]==0){\nmu[i*prime[j]]=0;\nbreak;\n}\nmu[i*prime[j]]=-mu[i];\n}\n}\n}\nint a[si],b[si];\nint l[si],r[si];\nint f[si],s[si];\nsigned main(){\nscanf(\"%lld%lld\",&amp;n,&amp;m);\nMobius(m);\nfor(register int i=1;i&lt;=n;++i){\nscanf(\"%lld%lld\",&amp;a[i],&amp;b[i]);\n}\nint res=0;\nfor(register int d=1;d&lt;=m;++d){\nif(mu[d]){\nfor(register int i=1;i&lt;=n;++i){\nl[i]=(a[i]+d-1)/d,r[i]=b[i]/d;\n}\nint qwq=m/d;\nfor(register int i=0;i&lt;=qwq;++i){\ns[i]=1;\n}\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1;j&lt;=qwq;++j){\nf[j]=0;\n}\nfor(register int j=l[i];j&lt;=qwq;++j){\nf[j]=s[j-l[i]];\nif(j-r[i]-1&gt;=0) f[j]=(f[j]+mod-s[j-r[i]-1])%mod;\n}\ns[0]=0;\nfor(register int j=1;j&lt;=qwq;++j){\ns[j]=(s[j-1]+f[j])%mod;\n}\n}\nres=(res+mu[d]*s[qwq])%mod;\n}\n}\nres=(res+mod)%mod;\nprintf(\"%lld\\n\",res);\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#codeforces-739div3", "title": "Codeforces # 739\uff08div3\uff09", "text": "<p>Contest ID:<code>1560</code></p> <p>\u6c34\uff0c\u592a\u6c34\u4e86\uff08\uff09</p> <p>FST\u7fa4\u7684\u5176\u4e2d\u516b\u4f4d\u7fa4\u53cb\u4e00\u8d77\u6574\u4e86\u4e2a\u6d3b\uff0c\u516c\u7528\u4e00\u4e2a\u795e\u5947\u7684\u540d\u5b57\u7684\u8d26\u53f7\u4e00\u8d77\u51b2rk1\uff0c\uff08\u5f53\u7136\u56e0\u4e3aF1\u7684\u7f5a\u65f6\u6211\u4eec\u662frk3\uff09</p> <pre><code>Demoe,\u5cf0,tjx,tearing,lgd,bmy,monsters\n</code></pre> <p>\u6211\u5565\u4e5f\u6ca1\u8d21\u732e\uff08\u4ed6\u4eec\u5207\u9898\u592a\u5feb\u4e86\uff09</p> <p>\u4f46\u662f\u56e0\u4e3a\u5206\u914d\u7684\u539f\u56e0\u6ca1\u670940min\u4ee5\u5185AK\uff08\u545c\u545c\uff09</p> <p>\u6211\u5c31\u53ea\u80e1\u4e86\u4e00\u4e2aF1\u548cE\uff0c\u7136\u540eE\u8fd8\u5047\u4e86\u3002</p> <p>\u4e8e\u662f\u540e\u9762\u770b\u5230\u516c\u7528\u53f7AK\u4e86\u4e4b\u540e\u53bb\u5f00A\u9898\u505a\u3002</p> <p>\u540e\u9762\u5199\u5230 D \u9898\u5c31\u6709\u70b9\u56f0\u4e86\uff0c\u61d2\u5f97\u5199EF12\u4e86\uff0c\uff08\u53cd\u6b63F1F2\u80e1\u51fa\u6765\u4e86\u4e4b\u540e\u518d\u8865\uff0cE\u80e1\u4e0d\u51fa\u6765\u770b\u770b\u9898\u89e3\u628a\uff09</p>"}, {"location": "rec/old/old-cf-at-sol/#a_4", "title": "A", "text": "<p>\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u5217\uff0c\u4ece \\(1\\) \u5f00\u59cb\uff0c\u4e00\u76f4\u5f80\u540e\u4e00\u4e2a\u4e00\u4e2a\u7684\u589e\u52a0 \\(1\\)\uff0c\u4f46\u662f\u6ca1\u6709\u4e09\u7684\u500d\u6570\u548c\u4ee5\u4e09\u7ed3\u5c3e\u7684\u6570\u3002</p> <p>\u7136\u540e\u95ee\u6570\u5217\u7b2c \\(k\\) \u9879 \\(1\\le k \\le 1000\\)\u3002</p> <p>\u8bed\u6cd5\u9898\uff1a\u63d0\u524d<code>for</code>\u4e00\u904d\uff0c\u6253\u597d\u4e00\u5343\u9879\u7136\u540e\u76f4\u63a5\u8f93\u51fa\uff0c\u5b8c\u4e86\u3002</p> <p>\u4e0d\u8fc7\u6628\u665a\u9b54\u6014\u4e86\uff0c\u5c45\u7136\u5fd8\u8bb0\u4e86 <code>%</code> \u7684\u5b58\u5728\uff0c\u76f4\u63a5\u5199\u4e86\u4e00\u4e2a\uff1a</p> <pre><code>inline int mod(int x,int p){\nreturn x&lt;0?(x+p)-(((x+p)/p)*p):x-((x/p)*p);\n}\n</code></pre> <p>\u96be\u602a\u6ca1\u6709\u4e00\u5206\u949fA\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#b_3", "title": "B", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u73af\uff0c\u73af\u4e0a\u4ece \\(1 \\sim n\\) \u4f9d\u6b21\u7ad9\u4e86 \\(n\\) \u4e2a\u4eba\uff08\\(n\\) \u662f\u5076\u6570\uff09\u3002</p> <p>\u7136\u540e\u5047\u8bbe\u6709\u4e24\u4e2a\u4eba \\(x,y\\) \u9762\u5bf9\u7740\uff0c\u90a3\u4e48 \\(x,y\\) \u7684\u8fde\u7ebf\u5c31\u4e00\u5b9a\u8fc7\u5706\u5fc3\u3002</p> <p>\u73b0\u5728\u7ed9\u4f60\u4e00\u4e2a\u9762\u5bf9\u7740\u7684\u4e24\u4e2a\u4eba\u7684\u5e8f\u53f7 \\(a,b\\) \uff0c\u518d\u53e6\u5916\u7ed9\u5b9a\u4e00\u4e2a \\(c\\)\uff0c\u6c42 \\(c\\) \u9762\u5bf9\u7684\u4eba\u7684\u5e8f\u53f7\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u73af\uff0c\u8f93\u51fa \\(-1\\)\u3002</p> <p>\u53d1\u73b0\u4e24\u4e2a\u76f8\u5bf9\u70b9\u5e8f\u53f7\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u4e24\u500d\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u73af\u7684 \\(n\\) \uff0c\u7136\u540e\u968f\u4fbf\u5224\u4e00\u4e0b\u5c31\u884c\u3002</p> <pre><code>int R=abs(a-b),n=R&lt;&lt;1;\nif(c&gt;n || (c+R&gt;n &amp;&amp; c&lt;=R) || c+R==a || c+R==b || c-R==a || c-R==b || b&gt;n || a&gt;n){\nputs(\"-1\");continue;\n}\nelse printf(\"%lld\\n\",c&lt;=R?c+R:c-R);\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#c_4", "title": "C", "text": "<p>UPD\uff1a\u8349\uff0c\u8fd9\u9898\u6211\u5b9e\u9645\u4e0aFST\u4e86\uff08\u4e45\u8fdd\u4e86\uff09</p> <p>\u56e0\u4e3a\u6211\u662funofficial\u53c2\u8d5b\u6240\u4ee5\u6ca1\u6d4bst\u3002</p> <p>\u9ebb\u4e86\u3002</p> <p>\u4e4b\u540e\u6709\u65f6\u95f4\u5c31\u8865\u4e00\u53d1\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#d_1", "title": "D", "text": "<p>\u53d1\u73b0\u6253\u51fa \\(2^k\\) \u7684\u4e00\u4e2a\u8868\uff08 \\(1\\le k \\le 31\\) \uff09\u5c31\u80fd\u5f00\u59cb\u4e71\u641e\u3002</p> <p>\u7136\u540e\u6839\u636e\u9898\u76ee\u8981\u6c42\u968f\u4fbf\u66b4\u529b\u5339\u914d\u4e00\u4e0b\u5c31\u884c\u3002</p> <pre><code>int cal(string s,string ss){\nint res=0;\nfor(register int i=0;i&lt;(int)s.size() &amp;&amp; res&lt;(int)ss.size();++i){\nif(s[i]==ss[res]) ++res;\n}return res;\n}\nint main(){\nscanf(\"%d\",&amp;T);\nwhile(T--){\ncin&gt;&gt;s;\nint res=1e9;\nfor(register int i=0;i&lt;109;++i){\nres=min(res,(int)(s.size()-cal(s,a[i])*2+a[i].size()));\n}printf(\"%d\\n\",res);\n}\nreturn 0;\n}//a\u662f\u6253\u7684\u8868\u3002\n</code></pre> <p>\u5176\u5b9e\u6b63\u89e3\u662f\uff1a\u8d2a\u5fc3\uff0c\u786e\u5b9a\u4e86\u53d8\u6210\u7684\u6570 \\(t\\) ,\u7136\u540e\u4e00\u4f4d\u4e00\u4f4d\u5339\u914d\u3002</p> <p>\u6211\u672c\u6765\u60f3\u5199\u8fd9\u4e2a\uff08</p> <p>\u4f46\u6211\u611f\u89c9\u6253\u8868\u5f88\u725b\u903c\u554a\uff0c\u5c31\u6253\u4e86\uff08</p>"}, {"location": "rec/old/old-cf-at-sol/#e_2", "title": "E", "text": "<p>\u5de8\u5927\u591a\u7591\u60d1\u9898\uff0c\u4e0d\u4f1a\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#f1-f2", "title": "F1 &amp;&amp; F2", "text": "<p>\u5bb3\uff0c\u6211\u611f\u89c9\u8fd9\u4e2aF\u662fd2a\u6c34\u5e73\u3002</p> <p>\u9ebb\u4e86\uff0cF1\u5c31\u662fF2\u7684\u7279\u6b8a\u60c5\u51b5\uff0cF2\u5927\u66b4\u641c\u52a0\u4e2a\u5c0f\u526a\u679d\u4f18\u5316\u5c31\u8fc7\u4e86\u3002</p> <p>\u4f46\u662f\uff0c\u5176\u5b9e\u6709\u4e00\u70b9\u4e0d\u592a\u597d\u5199\uff08\uff09</p> <p>\u9898\u76ee\u8981\u6c42\u4f60\u627e\u5230 \u6700\u5c0f\u7684 \u4e0d\u540c\u6570\u5b57\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 \\(k\\) \u4e14\u8fd9\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e \\(n\\) \u7684\u6570\u3002</p> <p>\u53d1\u73b0F2\u7684 \\(k\\) \u90fd\u53ea\u6709 \\(10\\) ,\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5927\u66b4\u641c\uff0c\u4ece\u9ad8\u5230\u4f4e\u4f4d\u4e00\u4e2a\u4e00\u4e2a\u4f4d\u5730\u8bd5\u586b\u3002</p> <p>\u6bcf\u4e00\u4f4d\u4ece \\(1 \\sim 9\\) \u5f00\u59cb\u586b\uff0c\u5f53\u9ad8\u4f4d\u5408\u6cd5\u7684\u65f6\u5019\u7acb\u9a6c\u5411\u4e0b\u586b\uff0c\u76f4\u5230\u6240\u6709\u4f4d\u90fd\u5408\u6cd5\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int si=1e3+10;\nint cnt[si],ans[si];\nint T,k,n;\nstring s;\n\nbool dfs(int now,int val,bool tag){\nif(val&gt;k) return false;\nif(now==n &amp;&amp; val&lt;=k){\nfor(register int i=0;i&lt;n;++i){\nprintf(\"%d\",ans[i]);\n}puts(\"\");\nreturn true;\n}\nfor(register int i=tag?s[now]-'0':0;i&lt;=9;++i){\n++cnt[i],ans[now]=i;\nif(cnt[i]==1){\nif(dfs(now+1,val+1,tag&amp;&amp;i==s[now]-'0')) return true;\n}\nelse if(dfs(now+1,val,tag&amp;&amp;i==s[now]-'0')) return true;\n--cnt[i];\n}\nreturn false;\n}\n\nsigned main(){\nscanf(\"%d\",&amp;T);\nwhile(T--){\nfor(register int i=0;i&lt;=10;++i){\ncnt[i]=ans[i]=0;\n}\ncin&gt;&gt;s;scanf(\"%d\",&amp;k);\nn=(int)s.size();\nif(!dfs(0,0,1)){\nprintf(\"10\");\nfor(register int i=2;i&lt;k;++i){\nprintf(\"%d\",i);\n}puts(\"\");\n}\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#atcoder-beginning-contest-215", "title": "Atcoder Beginning Contest 215", "text": "<p>Contest ID\uff1a<code>abc_125</code></p> <p>\u90e8\u5206\u8865\u9898\u6709\u53c2 \u8003</p>"}, {"location": "rec/old/old-cf-at-sol/#a-b", "title": "A &amp; B", "text": "<p>\u8bed\u6cd5\u9898\u3002</p> <p>B\u7684\u8bdd\u9700\u8981\u624b\u5199 \\(\\log_2\\)\u3002</p> <p>\u81ea\u5e26\u7684 \\(\\log_2\\) \u4e00\u65e6\u4e0a\u4e86 \\(2^{59}\\) \u5de6\u53f3\u5c31\u4f1a\u51fa\u4e8b\uff0c\u6240\u4ee5\u5efa\u8bae\u624b\u5199\u4e0b\u9762\u7684\uff1a</p> <pre><code>unsigned long long Log2EX(unsigned long long x)  {    unsigned long long i=0;\nfor(i=64;i&gt;=0;i--){\nif(1==(x&gt;&gt;i)&amp;0x1) break;\n}\nreturn i;  } </code></pre>"}, {"location": "rec/old/old-cf-at-sol/#c_5", "title": "C", "text": "<p>\u95ee\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u6309\u5b57\u5178\u5e8f\u7684\u7b2c \\(k\\) \u4e2a\u6392\u5217\u3002</p> <p>\u6c34\u9898\uff0c\u4f7f\u7528 <code>next_permutation</code> \u5373\u53ef\u3002\u3001</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6392\u5217\uff0c\u4f46\u662f\u5982\u679c\u8981\u5168\u6392\u5217\u7684\u8bdd\u4e00\u5b9a\u8981\u5148 <code>sort</code></p> <pre><code>    int cnt=0;\nsort(s.begin(),s.end());//\u4e00\u5b9a\u8981sort\ndo{\n++cnt;\nif(cnt==n) cout&lt;&lt;s&lt;&lt;endl;\n}while(next_permutation(s.begin(),s.end()));\n</code></pre> <p>\u5176\u5b9e\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5 <code>break</code> \uff0c\u4e0d\u8fc7\u6ca1\u4ec0\u4e48\u5f71\u54cd\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#d_2", "title": "D", "text": "<p>\u7ed9\u4e00\u4e2a\u5e8f\u5217\uff0c\u8981\u6c42\u4f60\u627e\u51fa\u6240\u6709\u5728\u503c\u57df \\([1,m]\\) \u4e4b\u95f4\u7684 \\(k\\)\uff0c\u6ee1\u8db3 \\(k\\) \u548c\u5e8f\u5217\u91cc\u7684\u6240\u6709\u6570\u90fd\u4e92\u8d28\u3002</p> <p>\u8003\u8651\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u5bf9\u6bcf\u4e2a\u6570\u5206\u89e3\uff0c\u5bf9\u8d28\u6570\u6c42\u5e76\u3002</p> <p>\u90a3\u4e48\u8003\u8651\u6bcf\u4e00\u4e2a \\(i\\)\uff0c\u540c\u6837\u8d28\u56e0\u6570\u5206\u89e3\u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconst int si=1e5+10;\nint n,m,cnt,res;\nint a[si],prime[si];\nbool vis[si],ans[si];\ninline int mod(int x,int p){\nreturn x&lt;0?(x+p)-(((x+p)/p)*p):x-((x/p)*p);\n}\nint tp[si],pos[si];\nvoid Euler(int n){\nfor(register int i=2;i&lt;=n;++i){\nif(tp[i]) continue;\nprime[++cnt]=i,pos[i]=cnt;\nfor(register int j=(i&lt;&lt;1);j&lt;=n;j+=i){\ntp[j]=1;\n}\n}\n}\n\nsigned main(){\ncin&gt;&gt;n&gt;&gt;m;\nEuler(m);\nfor(register int i=1;i&lt;=n;++i){\ncin&gt;&gt;a[i];\n}\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1;j&lt;=cnt &amp;&amp; 1ll*prime[j]*prime[j]&lt;=a[i];++j){\nif(!mod(a[i],prime[j])) vis[j]=true;\nwhile(!mod(a[i],prime[j])) a[i]/=prime[j];\n}\nif(a[i]!=1) vis[pos[a[i]]]=true;\n}\nmemset(ans,true,sizeof ans);\nfor(register int i=1;i&lt;=cnt;++i){\nif(vis[i]) for(register int j=prime[i];j&lt;=m;j+=prime[i]) ans[j]=0;\n}\nfor(register int i=1;i&lt;=m;++i){\nif(ans[i]) res+=1;\n}cout&lt;&lt;res&lt;&lt;endl;\nfor(register int i=1;i&lt;=m;++i){\nif(ans[i]) cout&lt;&lt;i&lt;&lt;endl;\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#e_3", "title": "E", "text": "<p>\u9898\u9762\u5f88\u602a\uff0c\u8fd9\u91cc\u76f4\u63a5\u7ed9\u4e00\u4e2a\u7b80\u5316\u7248</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9009\u62e9\u4e00\u4e2a\u5b50\u5e8f\u5217\u51fa\u6765\uff0c\u6ee1\u8db3\u540c\u4e00\u79cd\u5b57\u7b26\u5728\u8fd9\u4e2a\u5b50\u5e8f\u5217\u91cc\u9762\u90fd\u5728\u4e00\u6bb5\u91cc\uff0c\u6c42\u65b9\u6848\u6570\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\u4e5f\u5c31\u662f\u4e0d\u4f1a\u6709 <code>BBABB</code> \u8fd9\u79cd\u60c5\u51b5\u3002</p> <p>\u5b57\u7b26\u79cd\u7c7b\u5c0f\u4e8e\u5341\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7\u4e00\u5343\u3002</p> <p>\u4e00\u4e2a\u6bd4\u8f83\u677f\u5b50\u7684\u72b6\u538b\uff1f</p> <p>\u8003\u573a\u6ca1\u8c03\u51fa\u6765\u3002</p> <p>\u8bbe \\(f_{i,msk,t}\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u573a\u6bd4\u8d5b\uff0c\u5f53\u524d\u72b6\u6001\u662f \\(msk\\)\uff0c\u6700\u540e\u6253\u7684\u4e00\u573a\u7684\u79cd\u7c7b\u662f \\(t\\)\u3002</p> <p>\u4e14\u7b2c \\(i\\) \u573a\u6bd4\u8d5b\u7684\u79cd\u7c7b\u662f \\(k\\)\u3002</p> <p>\u6240\u4ee5\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <p>\\(\\begin{cases}f_{i,msk,t}=f_{i-1,msk,t}\\\\f_{i,msk,t}=f_{i,msk,t}+f_{i-1,msk,t},(t=k)\\\\f_{i,u\\ \\text{or}\\ 2^{k},k}+=f_{i-1,u,t}\\\\f_{i,2^{k},k}=f_{i,2^{k},k}+1\\end{cases}\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int Mod=998244353;\nconst int si=1028;\nint n,f[si][si][10];\ninline int mod(int x){\nreturn x&lt;0?(x+Mod)-(((x+Mod)/Mod)*Mod):x-((x/Mod)*Mod);\n}\nstring s;\n\nint main(){\ncin&gt;&gt;n&gt;&gt;s;s=' '+s;\nfor(register int i=1;i&lt;=n;++i){\nint k=s[i]-'A';\nfor(register int msk=1;msk&lt;=1024;++msk){\nfor(register int j=0;j&lt;10;++j){\nf[i][msk][j]=f[i-1][msk][j];\nif(j==k) f[i][msk][j]=mod(f[i][msk][j]+f[i-1][msk][k]);\n}\n}\nfor(register int msk=1;msk&lt;=1024;++msk){\nif(msk&amp;(1&lt;&lt;k)) continue;\nfor(register int j=0;j&lt;10;++j){\nf[i][msk|(1&lt;&lt;k)][k]=mod(f[i][msk|(1&lt;&lt;k)][k]+f[i-1][msk][j]);\n}\n}\nf[i][1&lt;&lt;k][k]=mod(f[i][1&lt;&lt;k][k]+1);\n}   int res=0;\nfor(register int i=1;i&lt;=1024;++i){\nfor(register int j=0;j&lt;10;++j){\nres=mod(f[n][i][j]+res);\n}\n}cout&lt;&lt;res&lt;&lt;endl;\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#f", "title": "F", "text": "<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u70b9\uff0c\u5b9a\u4e49\u4e24\u4e2a\u70b9\u5bf9 \\((x_1,y_1),(x_2,y_2)\\) \u7684\u8ddd\u79bb\u4e3a \\(\\min (|x_1-x_2|,|y_1-y_2|)\\)\u3002</p> <p>\u6c42\u4efb\u610f\u4e24\u4e2a\u70b9\u5bf9\u4e4b\u95f4\u8ddd\u79bb\u7684\u6700\u5927\u503c\u3002</p> <p>\\(n\\) \u5728 \\(2\\times 10^5\\) \u7ea7\u522b\uff0c\u5750\u6807\u90fd\u662f \\(10^9\\) \u7ea7\u522b\u3002</p> <p>\u7b2c\u4e00\u53cd\u5e94\u662f\u76f4\u63a5\u66b4\u529b\uff0c\u7136\u540e\u53d1\u73b0\u662f \\(\\text{O}(n^2)\\) \u7ea7\u522b\uff0c\u7206\u70b8\u3002</p> <p>\u7136\u540e\u6709\u4e00\u4e2a\u5206\u522b\u4ece \\(x,y\\) \u8f74\u5927\u529b\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\u7684\u505a\u6cd5\uff0c\u7136\u540e\u53d1\u73b0\u4e0d\u53ef\u505a\u3002</p> <p>\u4e8e\u662f\u5728\u6781\u5ea6\u7edd\u671b\u7684\u65f6\u5019\uff0c\u6211\u770b\u89c1\u4e86\u4e8c\u5206\u3002</p> <p>\u6211\u89c9\u5f97\u8fd9\u4e2a\u4e1c\u897f\u4e5f\u8bb8\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5224\u5b9a\u6027\u95ee\u9898\u3002</p> <p>\u5047\u8bbe \\(\\min (|x_1-x_2|,|y_1-y_2|) \\ge k\\)</p> <p>\u90a3\u4e48\u5f88\u660e\u663e\uff0c \\(|x_1-x_2| \\ge k ,|y_1-y_2| \\ge k\\)</p> <p>\u7136\u540e\u8fd9\u4e1c\u897f\u5f88\u660e\u663e\u5177\u6709\u5355\u8c03\u6027\uff0c\u73b0\u5728\u8003\u8651\u600e\u4e48\u4e8c\u5206 \\(k\\)\u3002</p> <p>\u9996\u5148\u4f60\u5148\u5bf9 \\(x\\) \u5347\u5e8f\u6392\u5e8f\u65b9\u4fbf\u5904\u7406\u3002</p> <p>\u5982\u679c\u5728 \\(k\\) \u53ef\u884c\u7684\u524d\u63d0\u4e0b\u7684\u8bdd\uff0c\u5c31\u5047\u8bbe\u6709\u4e00\u4e2a\u70b9 \\((x_i,y_i)\\)\u3002</p> <p>\u7136\u540e\u518d\u5047\u8bbe \\(y\\) \u6700\u5c0f\u7684\u70b9\u662f \\((x.y)\\)\uff08\u8fd9\u91cc\u7a0d\u5fae\u8d2a\u5fc3\u4e86\u4e00\u4e0b\uff09\u3002</p> <p>\u7136\u540e\u5982\u679c\u8bf4 \\(x_i-x \\ge k\\) \u4e86\uff0c\u90a3\u4e48\u5f88\u660e\u663e\uff0c\u56e0\u4e3a \\(k\\) \u662f\u53ef\u884c\u7684\uff0c\u6240\u4ee5 \\(y_i-y \\ge k\\) \u4e5f\u5c31\u662f\u6709\uff1a</p> <p>\\(A\\begin{cases}x_i-k \\ge x\\\\y_i-k \\ge y\\end{cases}\\)</p> <p>\u4f46\u662f\u4f60\u53d1\u73b0\u53ef\u80fd\u4f1a\u6709\u8fd9\u79cd\u60c5\u51b5\uff1a</p> <pre><code>y\n\\\n|           \u00b7(xx,ymax)\n|         \n|\n|\n|\n|\n|     \u00b7(x_i,y_i)\n|\n| \u00b7(x,ymin)\n---------------------------\\x\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4 \\(y\\) \u7684\u6700\u5927\u503c\u53ef\u80fd\u6bd4 \\(y\\) \u7684\u6700\u5c0f\u503c\u505a\u51fa\u7684\u8d21\u732e\u66f4\u5927\uff0c\u6240\u4ee5\u6700\u5927\u7684 \\(y\\) \u4e5f\u8981\u8dd1\u4e00\u904d\u3002</p> <p>\u540c\u7406\u5c31\u662f \\(B \\begin{cases}x_i+k \\le x\\\\y_i+k \\le y\\end{cases}\\)</p> <p>\u6240\u4ee5\u6211\u4eec\u5728\u4e8c\u5206\u7684\u91cc\u9762\u53bbcheck \\(A,B\\) \u8fd9\u4e24\u4e2a\u6761\u4ef6\u662f\u5426\u6709\u81f3\u5c11\u4e00\u4e2a\u6210\u7acb\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u7136\u540e\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u6309\u7167 \\(x\\) \u6392\u4e00\u4e2a\u5e8f\uff0c\u7136\u540e\u8fdb\u884c\u5206\u6bb5\u53cc\u6307\u9488\u3002</p> <p>\u4ee5 \\(i\\) \u4e3a\u53f3\u7aef\u70b9\uff0c \\(j\\) \u4e3a\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u53f3\u79fb\u5de6\u7aef\u70b9\uff1f</p> <p>\u5c31\u662f \\(j+1\\) \u8fd9\u4e2a\u70b9\uff0c\u4ed6\u7684\u6a2a\u5750\u6807\u548c \\(i\\) \u7684\u5dee\u503c\u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a \\(k\\) \u3002</p> <p>\u90a3\u4e48\u663e\u7136\u5982\u679c\u6211\u5728 \\(i\\) \u5904\u505a\u5230\u4e86 \\(j\\) \uff0c\u90a3\u4e48\u6240\u6709 \\(i\\) \u53f3\u8fb9\u7684\u70b9\u548c \\(j\\) \u7684\u7ec4\u5408\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a \\(j\\) \u4ed6\u5c31\u6c38\u8fdc\u662f\u5408\u6cd5\u7684\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u5df2\u505a\u5230\u7684 \\(j\\) \u4ed6\u7684\u7eb5\u5750\u6807\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u548c\u6bcf\u4e00\u4e2a\u8fdb\u53bb\u7684 \\(i\\) \u7684\u7eb5\u5750\u6807\u51cf\u4e00\u51cf\uff0c</p> <p>\u5982\u679c\u7eb5\u5750\u6807\u4e4b\u5dee\u8981\u5927\u4e8e\u7b49\u4e8e \\(k\\) \uff0c\u800c\u6a2a\u5750\u6807\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86\u4ed6\u7684\u5dee\u503c\u5fc5\u5b9a\u5927\u4e8e\u7b49\u4e8e \\(k\\) \uff0c\u90a3\u4e48\u8fd9\u4e2a \\(k\\) \u5c31\u80af\u5b9a\u662f\u6210\u7acb\u7684\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u9898\uff0c\u5982\u679c\u53ea\u904d\u5386\u4e00\u6b21\u90a3\u4e48\u7b54\u6848\u53ef\u80fd\u4f1a\u88ab\u6f0f\u6389\uff0c\u6240\u4ee5\u8fd8\u5f97\u4ece\u53f3\u5f80\u5de6\u904d\u5386\u4e00\u904d\uff0c\u6b64\u65f6 \\(j\\) \u662f\u53f3\u7aef\u70b9\uff0c \\(i\\) \u662f\u5de6\u7aef\u70b9\u3002</p> <p>\u56e0\u4e3a\u4e0d\u53ef\u6297\u529b\u56e0\u7d20\u8ba9\u6211\u603b\u662f\u5947\u602a\u7684WA\uff0c\u6240\u4ee5\u5bf9\u7740tutorial \u6539\u4e86\u4e00\u4e9b\u5730\u65b9</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define xi first\n#define yi second\nint n;\n\nint main(){\ncin&gt;&gt;n;\nvector&lt;pair&lt;int,int&gt; &gt;v(n);\nfor(register int i=0;i&lt;n;++i){\ncin&gt;&gt;v[i].xi&gt;&gt;v[i].yi;\n}\nsort(v.begin(),v.end());\nint l=0,r=1e9+7;\nwhile(r-l&gt;1){\nint mid=(l+r)&gt;&gt;1;\nqueue&lt;pair&lt;int,int&gt; &gt;q;\nbool f=false;\nint mi=1e9+7,mx=0;\nfor(auto p:v){\nwhile(!q.empty()){\nint x=q.front().xi,y=q.front().yi;\nif(x&gt;p.xi-mid) break;\nmi=min(mi,y),mx=max(mx,y);q.pop();\n}\nif(mi&lt;=p.yi-mid || mx&gt;=p.yi+mid) f=true;\nq.push(p);\n}\nif(f) l=mid;\nelse r=mid;\n}\ncout&lt;&lt;l&lt;&lt;endl;\nreturn 0;\n}\n\n````\n\n### G &amp; H\n&gt;\u4e0d\u4f1a\n\n## Nowcoder PJ 28\n\nContest ID\uff1a`11235`\n\n\u51fa\u9898\u4eba\u662fFST\u7fa4\u7fa4\u53cb\uff1a CSP-Sept ~~~\n\n\u5f88\u6709\u611f\u89c9\uff0c\u5f00\u573a\u4e00\u4e2a\u5c0f\u65f6\u53ea\u8fc7\u4e86A\uff0c\u7136\u540e\u6700\u540e\u534a\u5c0f\u65f6\u76f4\u63a5AK\uff0c\u523a\u6fc0\u3002\n\n\u53e6\u5916\u725b\u5ba2\u7684\u5c0f\u767d\u6708\u8d5b36\u5c31\u4e0d\u5199\u4e86\uff0c\u53ea\u6709E\u611f\u89c9\u6bd4\u8f83\u6709\u4ef7\u503c\u3002\n\n### A\n\n\u53d1\u73b0\u8fd9\u4e2a\u79fb\u52a8\u662f\u6709\u5468\u671f\u6027\u7684\uff0c\u800c\u4e14\u79fb\u52a8\u6b21\u6570\u662f $10^{18}$\u3002\n\n\u6240\u4ee5\u5c31\u662f\u4e2a\u8bc8\u9a97\u9898\uff08\n\n\u76f4\u63a5\u628a\u79fb\u52a8\u6b21\u6570\u6a21\u4e0a\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u7136\u540e\u4ece\u8fd9\u4e2a\u4f59\u6570 $+1$ \u4f4d\u5f00\u59cb\u8f93\u51fa\uff0c\u7136\u540e\u5728\u4ece\u7b2c $1$ \u4f4d\u4e00\u76f4\u8f93\u51fa\u5230\u4f59\u6570\u8fd9\u4e00\u4f4d\u5373\u53ef\u3002\n\n1minAC\uff08\n\n```cpp\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nstring s;\nint n,x;\nsigned main(){\ncin&gt;&gt;n&gt;&gt;x;\ncin&gt;&gt;s;s=' '+s;\nint r=x%n;\nfor(int i=r+1;i&lt;=n;++i) cout&lt;&lt;s[i];\nfor(int i=1;i&lt;=r;++i) cout&lt;&lt;s[i];\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#b_4", "title": "B", "text": "<p>\u6700\u540e\u624dAC\u7684\u9898\u3002</p> <p>\u8fd9\u4e2a\u662f\u5728\u77e9\u9635\u4e0a\u6c42 \\(y\\) \u8f74\u65b9\u5411\u7684 \\(\\texttt{LIS}\\) \uff0c\u7136\u540e\u77e9\u9635\u6700\u5927 \\(5\\times10^3 \\times 10^3\\)</p> <p>\u542c\u4f55\u795e\u8bf4\u6709\u4e00\u79cd \\(\\text{O}(NK)\\) \u7684\u505a\u6cd5\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\u3002</p> <p>\u8003\u8651\u8bbe \\(f_i\\) \u8868\u793a\u957f\u5ea6\u4e3a \\(i\\) \u7684 \\(\\texttt{LIS}\\) \u7684\u6700\u5c0f\u7ed3\u5c3e\uff0c\u8fd9\u6837\u5b50\u65b9\u4fbf\u53bb\u8f6c\u79fb\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u8fd9\u5c31\u662f \\(\\text{O} (n \\log n)\\) \u6c42 \\(\\texttt{LIS}\\) \u7684\u72b6\u6001\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u76f4\u63a5\u591a\u5faa\u73af\u4e00\u6b21\u7136\u540e\u5957\u4e0a\u677f\u5b50\u3002</p> <p>\u7136\u540e\u4f60\u53d1\u73b0\u5728</p> <pre><code>1 5\n1 2 3 4 5\n</code></pre> <p>\u7684\u8fd9\u4e2a\u6570\u636e\u4e0a\u4f60\u4f1a\u8f93\u51fa \\(5\\) \u3002</p> <p>\u4e3a\u5565\u90a3\uff1f</p> <p>\u56e0\u4e3a\u6211\u4eec\u7684\u505a\u6cd5\u4f1a\u5bfc\u81f4\u91cd\u590d\u8986\u76d6\u3002</p> <p>\u5c31\u548c01\u80cc\u5305\u4e00\u4e2a\u9053\u7406\uff0c\u6240\u4ee5<code>reverse</code>\u4e00\u4e0b\u5c31\u597d\u4e86\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\n\nconst int si=1e3+10;\nint k,n;\n#define pb push_back\nvector&lt;int&gt;v[si];\nint f[si];\nint nlogn_lis(){\nint len=0;\nf[0]=-1;\nfor(int i=1;i&lt;=n;++i){\nfor(int j=0;j&lt;(int)v[i].size();++j){\nif(v[i][j]&gt;f[len]) f[++len]=v[i][j];\nelse *lower_bound(f,f+len,v[i][j])=v[i][j];\n}\n}\nreturn len;\n}\n\nsigned main(){\nscanf(\"%lld%lld\",&amp;k,&amp;n);\nfor(int i=1;i&lt;=n;++i){\nfor(int j=1,q;j&lt;=k;++j){\nscanf(\"%lld\",&amp;q);\nv[i].pb(q);\n}\nreverse(v[i].begin(),v[i].end());\n}\nprintf(\"%lld\",nlogn_lis());\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#c_6", "title": "C", "text": "<p>\u5927\u539f\u9898\uff0c\u6d1b\u8c37\u4e0a\u7684\u201c\u56fe\u7684\u904d\u5386\u201d\u5c31\u662f\u57fa\u672c\u4e00\u6837\u7684\u3002</p> <p>\u6211\u672c\u6765\u5199\u7684\u662f\u7f29\u70b9+DP\uff0c\u4f46\u662f\u6302\u4e86\u597d\u591a\u53d1\u3002</p> <p>\u7a81\u7136\u60f3\u8d77\u53ef\u4ee5\u201c\u6b63\u96be\u5219\u53cd\u201d\u7684\u601d\u60f3\u505a\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u80fd\u5230\u8fbe\u7684\u70b9\uff0c</p> <p>\u8bb0\u5f55\u53ef\u4ee5\u5230\u8fd9\u4e2a\u70b9\u6240\u6709\u70b9\u7684\u7f16\u53f7\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u7136\u540e\u5efa\u53cd\u56fe\u8dd1\u4e00\u904d\u5c31\u884c\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int si=1e5+10;\nint n,m,f[si];\nvector&lt;int&gt;g[si];\nvector&lt;int&gt;v;\nvoid dfs(int x,int d){\nif(f[x]) return;\nf[x]=d;\nfor(int i=0;i&lt;g[x].size();i++) dfs(g[x][i],d);\n}\nint main(){\nscanf(\"%d%d\",&amp;n,&amp;m);\nfor(int i=1,u,vv;i&lt;=m;i++){\nscanf(\"%d%d\",&amp;u,&amp;vv);\ng[vv].push_back(u);\n}\nfor(int i=1;i&lt;=n;i++) dfs(i,i); for(int i=1;i&lt;=n;i++) v.push_back(f[i]);\nsort(v.begin(),v.end());\nv.erase(unique(v.begin(),v.end()),v.end());\nfor(int i=0;i&lt;(int)v.size();++i) cout&lt;&lt;v[i]&lt;&lt;\" \";\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#d_3", "title": "D", "text": "<p>\u5f88\u7cbe\u5999\u7684DP\u3002</p> <p>\u53d1\u73b0\u6b63\u7740\u505a\u5f88\u9ebb\u70e6\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u5e8f\u5217\u5012\u8fc7\u6765\uff0c\u53d1\u73b0\u8fd9\u4e1c\u897f\u5f88\u5e73\u51e1\u3002</p> <p>\u8bbe \\(f_i\\) \u8868\u793a\u5012\u8fc7\u6765\u4e4b\u540e\u4ece \\([1,i]\\) \u8fd9\u4e2a\u533a\u95f4\u5168\u90e8\u5403\u5b8c\u7684\u6700\u5927\u503c\u3002</p> <p>\u7136\u540e\u8003\u8651 \\(a_i\\) \uff0c\u4ed6\u4e0d\u662f\u8fd9\u4e2a\u533a\u95f4\u6700\u540e\u4e00\u4e2a\u5403\u7684\u5c31\u662f\u7b2c\u4e00\u4e2a\u5403\u7684\u3002</p> <p>\u6240\u4ee5\u5904\u7406\u51fa \\(\\Delta\\) \u7684\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\u8f6c\u79fb\u5373\u53ef\u3002 </p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconst int si=2e5+10;\nint n;\nint a[si],delta[si];\nint f[si],sum[si];\ninline int cal(int pos){ return ((pos-1)*delta[pos])+a[pos];\n}\nsigned main(){\nscanf(\"%lld\",&amp;n);\nfor(int i=n;i&gt;=1;--i){\nscanf(\"%lld\",&amp;a[i]);\n}\nfor(int i=n;i&gt;=1;--i){\nscanf(\"%lld\",&amp;delta[i]);\n}\nfor(int i=1;i&lt;=n;++i){\nsum[i]=sum[i-1]+delta[i],f[i]=-10737418190000000;\n}\nf[1]=a[1];\nfor(int i=2;i&lt;=n;++i){\nf[i]=max(f[i-1]+sum[i-1]+a[i],f[i-1]+cal(i));\n}\nreturn printf(\"%lld\",f[n]),0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#atcoder-beginning-contest-216", "title": "Atcoder Beginning Contest 216", "text": "<p>Contest ID:<code>abc_216</code></p> <p>\u5f00\u5b66\u524d\u4e00\u5929\u665a\u4e0a\u6709\u8fde\u7740\u7684ABC\u548c\u4e00\u573aCF\uff0c\u53ef\u4ee5\u4e0a\u5927\u5206\u529b\uff01\u3002</p> <p>\u56e0\u4e3a\u660e\u5929\u5c31\u5f00\u5b66\u4e86\u6240\u4ee5\u5c31\u5148\u5495\u8fd9\u4e0d\u5199\u3002</p> <p>\u5230\u65f6\u5019\u8bfe\u8868\u51fa\u6765\u4e4b\u540e\u627e\u7ade\u8d5b\u8bfe\u65f6\u95f4\u4e0a\u6765\u673a\u623f\u5199\u3002</p> <p>G \u662f\u4e2a\u88f8\u7684\u5dee\u5206\u7ea6\u675f\uff0c\u53ef\u60dc\u6ca1\u5199\uff0c\u4e0d\u7136\u5c31\u53ea\u5dee H \u4e86\u3002</p> <p>\u6700\u8fd1\u6253\u7684\u6700\u597d\u7684\u4e00\u6b21ABC\uff08\u53ef\u80fd\u662f\u6c34\u4e86\uff1f\uff09</p>"}, {"location": "rec/old/old-cf-at-sol/#a-b_1", "title": "A &amp; B", "text": "<p>\u90fd\u662f\u8bed\u6cd5\u9898\u3002</p> <p>A\u7684\u8bdd\u7279\u5224\u4e00\u4e0b\uff0cB\u7684\u8bdd\u6574\u4e2a <code>map&lt;pair&lt;string,string&gt;,bool&gt;</code> \u5c31\u8fc7\u4e86</p>"}, {"location": "rec/old/old-cf-at-sol/#c_7", "title": "C", "text": "<p>\u5f88\u5999\uff0c\u4f60\u6709 \\(120\\) \u6b21\u64cd\u4f5c\uff0c\u53ef\u4ee5\u628a\u7ed9\u5b9a\u7684\u503c\u52a0\u4e00\uff0c\u6216\u8005\u628a\u503c\u4e582.</p> <p>\u95ee\u6784\u9020\u4e00\u4e2a \\(2^{64}\\) \u4ee5\u5185\u7684\u6574\u6570\u7684\u65b9\u6848\u3002</p> <p>\u53d1\u73b0 \\(120\\) \u6b21\u5b8c\u5168\u591f\u4e86\u3002\\(120\\) \u4ee5\u5185\u7684\u8bdd\u5c31\u76f4\u63a5\u4e00\u76f4\u52a0\u4e00\u5c31\u53ef\u4ee5\u3002</p> <p>\u53cd\u4e4b\u5982\u679c \\(n\\) \u662f\u5947\u6570\uff0c\u51cf\u4e00\u7136\u540e\u4e00\u76f4\u9664\u4e8c\uff0c\u7136\u540e\u5982\u679c\u53c8\u662f\u5947\u6570\u90a3\u5c31\u91cd\u590d\u3002</p> <p>\u76f4\u5230 \\(n\\) \u4e3a \\(0\\) \u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nlong long n;\n\nint main(){\nscanf(\"%lld\",&amp;n);\nif(n&lt;=120){\nfor(register int i=1;i&lt;=n;++i){\nputchar('A');\n}return 0;\n}\nelse{\nstring s;bool f=false;\nif(n&amp;1) n-=1,f=true;\nwhile(n){\nif(n%2==0) n/=2,s='B'+s;\nif(n&amp;1) n-=1,s='A'+s;\n}\nif(f) s+='A';\ncout&lt;&lt;s&lt;&lt;endl;\n}\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#d_4", "title": "D", "text": "<p>D \u7684\u8bdd\u5c31\u76f4\u63a5\u5f00\u4e00\u4e2a <code>deque</code> \u548c\u4e00\u4e2a <code>queue</code> \u6a21\u62df\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u5f53\u7136\u4f60\u53ef\u4ee5\u5229\u7528\u62d3\u6251\u7684\u601d\u60f3\u76f4\u63a5\u5efa\u56fe\u7136\u540e\u8dd1\u4e00\u4e2a\u62d3\u6251\u3002</p> <pre><code>#define int long long\nint n,m,sz[MAXN],num;\npair&lt;int,int&gt;pos[MAXN];\ndeque&lt;int&gt;a[MAXN];\nqueue&lt;int&gt;q;\nvoid del(int x){\na[x].pop_front();\nif(a[x].size()){\nint u=a[x].front();\nif(pos[u].fr==0) pos[u].fr=x;\nelse pos[u].se=x,q.push(u),num++;\n} }\nsigned main(){\ncin&gt;&gt;n&gt;&gt;m;\nfor(register int i=1;i&lt;=m;++i){\ncin&gt;&gt;sz[i];\nfor(register int j=1;j&lt;=sz[i];++j){\nint tmp;cin&gt;&gt;tmp;\na[i].pb(tmp);\n}\n}\nfor(register int i=1;i&lt;=m;++i){\nint u=a[i][0];\nif(pos[u].fr==0) pos[u].fr=i;\nelse pos[u].se=i,q.push(u),num++;\n}\nwhile(!q.empty()){\nint u=q.front();q.pop();\ndel(pos[u].fr),del(pos[u].se);\n}\nif(num==n) puts(\"Yes\");\nelse puts(\"No\");\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#e_4", "title": "E", "text": "<p>\u5927\u6bd2\u7624\u8d2a\u5fc3\uff0c\u5efa\u4e00\u4e2a\u5927\u6839\u5806\u7136\u540e\u628a\u6240\u6709\u4e1c\u897f\u4e22\u8fdb\u53bb\u7ef4\u62a4\u3002</p> <p>\u7136\u540e\u6bcf\u6b21\u628a\u5806\u9876 \\(top\\) \u4e4b\u540e\uff0c\u628a \\(top-1\\) \u6254\u8fdb\u53bb\u5c31\u53ef\u4ee5\u3002</p> <p>\u8fd9\u6837\u5b50\u8fd8\u4e0d\u592a\u591f\u3002\u9700\u8981\u7a0d\u5fae\u4f18\u5316\u4e00\u4e0b\uff0c\u5c31\u81ea\u5df1\u7406\u89e3\u5427\u3002</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u6211\u6ca1\u505a\u51fa\u6765\uff0c\u90a3\u4efd\u4ee3\u7801\u662f\u6709\u4e2a\u4eba\u8981\u6211\u5e2e\u4ed6\u5403\u7f5a\u65f6\u4ea4\u7684\uff08</p>"}, {"location": "rec/old/old-cf-at-sol/#f_1", "title": "F", "text": "<p>DP\uff0c\u9996\u5148\u628a \\(a\\) \u964d\u5e8f\u6392\u4e00\u904d\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(j \\in [1,n]\\) \uff0c\u5047\u8bbe \\(f_j\\) \u8868\u793a\u9009\u4e0a \\(a_j\\) \uff0c\u4e0d\u7ba1\u5176\u4ed6\u7684\u600e\u4e48\u9009\u6240\u5f97\u5230\u7684\u89e3\u3002</p> <p>\u7136\u540e\u4f60\u53d1\u73b0 \\(a_j\\) \u8981\u6ee1\u8db3 \\(\\ge b_k + \\sum\\limits_{i \\subset S} b_i,S=\\{k+1,k+2,...,n\\}\\)</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u80cc\u5305\uff0c\u4e0d\u8fc7\u9700\u8981\u524d\u7f00\u548c\u4f18\u5316\u3002</p> <pre><code>    const int limit=5000;\nsort(q+1,q+1+n);f[0][0]=1;\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=0;j&lt;=limit;++j){\nf[i][j]=f[i-1][j];\n}\nfor(register int j=q[i].b;j&lt;=limit;++j){\nf[i][j]+=f[i-1][j-q[i].b],mod(f[i][j]);\n}\n}\nfor(register int i=0;i&lt;=n;++i){\nfor(register int j=1;j&lt;=limit;++j){\nf[i][j]+=f[i][j-1],mod(f[i][j]);\n}\n}\nfor(register int i=1;i&lt;=n;++i){\nif(q[i].a&lt;q[i].b) continue;\nans+=f[i-1][q[i].a-q[i].b],mod(ans);\n}printf(\"%lld\\n\",ans);\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#g", "title": "G", "text": "<p>\u88f8\u7684\u5dee\u5206\u7ea6\u675f\u3002</p> <p>\u4f46\u662f\u5199\u6302\u4e86\u545c\u545c\u545c</p> <ul> <li>Reference: https://www.cnblogs.com/registergen/p/abc216_solution.html</li> </ul>"}, {"location": "rec/old/old-cf-at-sol/#deltix-round-summer-2021-cf1556", "title": "Deltix Round, Summer 2021 (CF1556)", "text": "<p>Contest ID:<code>CF1556</code></p> <p>\u8fd9\u573a\u6781\u5ea6\u6bd2\u7624\u554a\u554a\u554a\u554a\uff0cD\u51fa\u4e86\u4e2a\u4ea4\u4e92+\u5927\u6bd2\u7624\u6784\u9020\u3002</p> <p>\u7136\u540eE\u6211\u5f00\u59cb\u5148\u5199\u7684\u66b4\u529b\uff0c\u7136\u540e\u53d1\u73b0\u8981\u7528RMQ\u4f18\u5316\uff0c\u4e8e\u662f\u5199\u4e86\u4e00\u4e2aST\u8868\u3002</p> <p>\u7136\u540e\u8d5b\u540eCFM\u7ed9\u4e86\u6211\u4e00\u7ec4\u6570\u636e\u628a\u6211\u7684\u9519\u8bef\u505a\u6cd5\u53c9\u6389\u4e86\u3002</p> <p>\u4f46\u662f\u5e76\u6ca1\u6709\u5728ST\u91cc\u9762\u51fa\u73b0ovo\uff0c\u6211\u5f53\u65f6\u4ee5\u4e3a\u8981FST\u4e86\uff0c\u4e8e\u662f\u6781\u5ea6\u751f\u6c14\u3002</p> <p>\u65e9\u4e0a\u8d77\u6765\u53d1\u73b0\u5374\u4e0a\u5206\u4e86\uff0c\u56e0\u4e3aE\u7684systest\u592a\u5f31\u4e86\uff01</p> <p>\u7136\u540e\u8d81\u8d70\u4e4b\u524d\u6539\u4e86\u4e00\u4e0b\uff0c\u628a\u9519\u8bef\u505a\u6cd5\u6539\u5bf9\u4e86\uff0c\u5f88\u6709\u611f\u89c9\uff01</p> <p>\u6bd4\u8f83\u53ef\u60dc\u7684\u5c31\u662f\u6ca1\u4e0aCM\uff0c\u545c\u545c\uff0c\u8981\u662fD\u4ea4\u4e92\u90e8\u5206\u4e0d\u5199\u6302\u5c31\u4e0aCM\u4e86\u545c\u545c\u3002</p> <p>\u9898\u89e3\u7684\u8bdd\u4e4b\u540e\u518d\u6765\u5199\uff0c\u4eca\u5929\u5f00\u5b66\u4e86\u6ca1\u65f6\u95f4\u545c\u545c\u545c\u3002</p> <p>\uff08\u542c\u8bf4 tourist \u53ea\u6709rk22\uff0c\u6bd2\u7624\uff01\uff08\u5176\u5b9e\u662f\u56e0\u4e3a\u4ed6\u6700\u540e\u9762\u4e24\u9053\u4f3c\u4e4e\u56e0\u4e3a\u4ec0\u4e48\u6ca1\u505a\uff09</p> <p>\u8fd9\u4e0b\u9762\u7a7a\u7740\u7684\u90fd\u662f\u6ca1\u65f6\u95f4\u5199\u7684\uff08ABC\u7684\u90fd\u662f\u5230\u5b66\u6821\u4e4b\u540e\u6e9c\u53bb\u673a\u623f\u5199\u7684\uff09</p>"}, {"location": "rec/old/old-cf-at-sol/#a_5", "title": "A", "text": "<p>\u731c\u4e86\u4e2a\u7ed3\u8bba\u8fc7\u4e86\u3002</p> <p>\u53d1\u73b0\u5982\u679c \\(c,d\\) \u7684\u5947\u5076\u6027\u4e0d\u540c\uff0c\u80af\u5b9a\u4e0d\u80fd\u6784\u9020\u3002</p> <p>\u6392\u9664\u65e0\u89e3\u4e4b\u540e\uff0c\u5982\u679c\u5168\u662f \\(0\\) \u5c31\u4e0d\u7528\u6784\u9020\uff0c\u7136\u540e \\(c=d\\) \u5c31\u53ea\u9700\u8981\u4e00\u6b65\u3002</p> <p>\u5982\u679c \\(c \\not= d\\) \u7684\u8bdd\uff0c\u7b2c\u4e00\u6b65\u6784\u9020 \\([c,d]\\) \u8fd9\u4e2a\u533a\u95f4\u7684\u4e2d\u4f4d\u6570\uff0c\u7136\u540e\u518d\u5411\u4e0a\u5411\u4e0b\u6784\u9020\u4e00\u6b21\u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#bcde", "title": "BCDE", "text": "<p>\u5495\u7740\uff0c\u4e0d\u60f3\u5199\u4e86\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#fgh", "title": "FGH...", "text": "<p>\u56e0\u4e3a\u662f div1+div2,\u6240\u4ee5\u540e\u4e09\u9898\u73b0\u5728\u771f\u7684\u4e0d\u4f1aqwq</p>"}, {"location": "rec/old/old-cf-at-sol/#codeforces-round-747", "title": "Codeforces Round #747", "text": "<p>Contest ID : <code>1594</code></p> <p>\u5f88\u4e45\u6ca1\u6253\u4e86\uff0c\u73b0\u5728\u505c\u8bfe\u671f\u95f4\u6709\u65f6\u95f4\u90a3\u4e48\u5c31\u6253\u4e86\u4e00\u4e0b\u3002</p> <p>\u4f46\u662f\u624b\u611f\u5f88\u4e0d\u597d\uff0cA \u50bb\u903c\u4e86\uff0cB\u50bb\u903c\u4e86\uff0cE1\u50bb\u903c\u4e86\u3002</p> <p>\u540c\u673a\u623f\u7b2c\u4e00\u6b21\u6253\u7684\u90fd\u540a\u6253\u6211\u3002</p> <p>\u53ea\u6709 ACD /kk</p>"}, {"location": "rec/old/old-cf-at-sol/#a_6", "title": "A", "text": "<p>\u6784\u9020\u4e00\u4e2a\u533a\u95f4 \\(l,r\\) \u4f7f\u5f97\u533a\u95f4\u548c\u4e3a \\(n\\)\u3002</p> <p>\u56e0\u4e3a\u53ef\u4ee5\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u76f4\u63a5 \\([1-n,n]\\)\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#b_5", "title": "B", "text": "<p>\u5927\u7b80\u5355\u9898\uff0c\u50bb\u903c\u4e86\u3002</p> <p>\u95ee\u4f60\u7531 \\(n\\) \u7684\u6574\u6570\u6b21\u5e42\u7ec4\u6210\u6570\u7684\u7b2c \\(k\\) \u5927\u3002</p> <p>\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u505a\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nint T;\nint n,k;\nconst int p=1e9+7;\n\nsigned main(){\nscanf(\"%lld\",&amp;T);\nwhile(T--){\nint res=0;\nint delta=1;\nscanf(\"%lld%lld\",&amp;n,&amp;k);\nfor(register int j=1;j&lt;=32;++j){\nif(k&amp;(1&lt;&lt;(j-1))) res=(res+delta)%p;\ndelta*=n,delta%=p;\n}\nprintf(\"%lld\\n\",res);\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#c_8", "title": "C", "text": "<p>\u8981\u6c42\u4f60\u628a\u5b57\u7b26\u4e32\u6240\u6709\u4f4d\u53d8\u6210\u7ed9\u5b9a\u7684\u5b57\u7b26 \\(ch\\)</p> <p>\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u6570 \\(x\\) \uff0c\u5bf9\u4e8e\u6240\u6709\u7684 \\(s[i],x \\not| \\ \\  i\\)\uff0c\u4ee4\u4ed6\u53d8\u6210 \\(ch\\)\u3002</p> <p>\u95ee\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>\u53d1\u73b0\u6700\u591a\u53ea\u9700\u8981\u4e24\u6b21 : \\(x=n-1.x=n\\)\u3002</p> <p>\u7136\u540e\u4e0d\u7528\u52a8\u4e86\u76f4\u63a5\u7279\u5224 \\(0\\)\u3002</p> <p>\u7136\u540e\u8003\u8651\u7528 \\(i\\times j\\) \u8fd9\u6837\u7c7b\u4f3c\u6b27\u62c9\u7b5b\u7684\u529e\u6cd5\u53bb\u5224\u65ad\u662f\u5426\u80fd\u4e00\u6b21\u5e72\u5b8c\u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#d_5", "title": "D", "text": "<p>\u662f\u4e2a\u5e76\u67e5\u96c6\uff0c\u6709\u70b9\u50cf\u98df\u7269\u94fe\u90a3\u4e00\u9898\u3002</p> <p>\u5185\u9b3c\u53ea\u4f1a\u8bf4\u5047\u8bdd\uff0c\u597d\u4eba\u53ea\u4f1a\u8bf4\u771f\u8bdd\u3002</p> <p>\u7136\u540e\u6bcf\u4e2a\u4eba\u4f1a\u6307\u8ba4\u8c01\u662f\u4ec0\u4e48\u8eab\u4efd\u3002</p> <p>\u95ee\u4f60\u6700\u591a\u6709\u591a\u5c11\u5185\u9b3c\u3002</p> <p>\u8003\u8651\u5206\u7c7b\u8ba8\u8bba\u3002</p> <p>\u5982\u679c A \u8bf4 B \u662f\u597d\u4eba\uff0c\u90a3\u4e48 A \u548c B \u7684\u8eab\u4efd\u80af\u5b9a\u662f\u4e00\u6837\u7684\u3002</p> <p>\u56e0\u4e3a\u5982\u679c A \u662f\u597d\u4eba\uff0c\u8bf4\u771f\u8bdd\uff0c\u90a3\u4e48 B \u4e5f\u662f\u597d\u4eba\u3002</p> <p>\u53cd\u4e4b A \u662f\u5185\u9b3c \uff0c\u8bf4\u5047\u8bdd\uff0c\u90a3\u4e48 B \u4e5f\u662f\u5185\u9b3c\u3002</p> <p>\u5982\u679c A \u8bf4 B \u662f\u5185\u9b3c\uff0c\u90a3\u4e48\u4e5f\u6709\u4e24\u79cd\u60c5\u51b5\u3002</p> <p>\u5982\u679c A \u662f\u597d\u4eba\uff0c\u90a3\u4e48 B \u5c31\u662f\u5185\u9b3c\u3002</p> <p>\u5982\u679c A \u662f\u5185\u9b3c\uff0c\u90a3\u4e48 B \u5c31\u662f\u597d\u4eba \u3002</p> <p>\u7136\u540e\u6211\u4eec\u5c31\u8003\u8651\u5229\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u4ed6\u4eec\u7684\u5173\u7cfb\uff0c\u7136\u540e\u987a\u4fbf\u8fdb\u884c\u5904\u7406\u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long \nint T;\nconst int si=2e5+10;\nint pa[si],dis[si],siz[si],res[si];\nbool vis[si];\nint n,m,ans;\nint root(int x){\nif(pa[x]==x) return pa[x];\nint fa=root(pa[x]);\ndis[x]^=dis[pa[x]];\nreturn pa[x]=fa;\n}\ninline void Union(int u,int v,int ru,int rv,int w){\ndis[ru]=w xor dis[u] xor dis[v];\nsiz[rv]+=siz[ru],pa[ru]=rv;\n}\ninline void init(int n){\nfor(register int i=1;i&lt;=n;++i){\npa[i]=i,dis[i]=0,siz[i]=1;\nvis[i]=false,res[i]=0;\n}\n}\n\nsigned main(){\nscanf(\"%lld\",&amp;T);\nwhile(T--){\nscanf(\"%lld%lld\",&amp;n,&amp;m);\ninit(n);\nbool print_ck=true;\nstring sta;\nfor(register int i=1;i&lt;=m;++i){\nint u,v,tet;\nscanf(\"%lld%lld\",&amp;u,&amp;v);\ncin&gt;&gt;sta;\nif(sta[0]=='c') tet=0;\nelse tet=1;\nint ru=root(u),rv=root(v);\nif(ru==rv){\nif((dis[u] xor dis[v])!=tet){\nif(print_ck) puts(\"-1\");\nprint_ck=false;\n}\n}\nelse Union(u,v,ru,rv,tet);\n}\nif(!print_ck) continue;\nfor(register int i=1;i&lt;=n;++i){\nint ri=root(i);\nif(dis[i]==0) res[ri]++;//pa[i]?\n}\nans=0;\nfor(register int i=1;i&lt;=n;++i){\nif(root(i)!=i) continue;\nans+=max(res[i],siz[i]-res[i]);\n}\nprintf(\"%lld\\n\",ans);\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#e1", "title": "E1", "text": "<p>\u5927\u7b80\u5355\u9898\uff0c\u50bb\u903c\u4e86\u3002</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u8ba9\u5b83\u6d82\u8272\uff0c\u6bcf\u79cd\u6d82\u8272\u6709\u9650\u5236\u3002</p> <p>\u7b54\u6848\u5c31\u662f \\(6 \\times 4^{2^{k}-2}\\)\u3002</p> <p>\u5feb\u901f\u5e42\u5373\u53ef\u3002</p> <pre><code>signed main(){\nint n;\nscanf(\"%lld\",&amp;n);\nint k=(1ll&lt;&lt;n)-2ll;//\u4e00\u5b9a\u8981\u5199 1ll,\u4e0d\u7136 1 \u4f1a\u9ed8\u8ba4 int \u5bfc\u81f4\u7206\u70b8\u3002\nint ans=qpow(4ll,k,p);\nans=(ans*6ll)%p;\nprintf(\"%lld\\n\",ans);\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#e2-f", "title": "E2 &amp; F", "text": "<p>\u8fd8\u4e0d\u4f1a</p>"}, {"location": "rec/old/old-cf-at-sol/#atcoder-beginning-contest-222", "title": "Atcoder Beginning Contest #222", "text": "<p>Contest ID: <code>abc_222</code></p>"}, {"location": "rec/old/old-cf-at-sol/#a-b_2", "title": "A &amp; B", "text": "<p>\u8bed\u6cd5\u9898\u5c31\u4e0d\u63d0\u4e86</p>"}, {"location": "rec/old/old-cf-at-sol/#c_9", "title": "C", "text": "<p>\u9898\u76ee\u7406\u89e3\u53ef\u80fd\u6bd4\u8f83\u56f0\u96be\uff08</p> <p>\u5927\u6982\u662f\u8ba9\u4f60\u5728\u67d0\u79cd\u89c4\u5219\u4e0b\u5224\u65ad\u77f3\u5934\u526a\u5200\u5e03\u7684\u8f93\u8d62\u4e4b\u7c7b\u7684\u3002</p> <p>\u76f4\u63a5\u5927\u6a21\u62df\u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#d_6", "title": "D", "text": "<p>\u7ed9\u4f60\u4e24\u4e2a\u4e0d\u964d\u7684\u5e8f\u5217 \\(a,b\\)\u3002</p> <p>\u8981\u6c42\u4f60\u6784\u9020\u4e00\u4e2a\u5e8f\u5217 \\(c\\) \u4f7f\u5f97\u5bf9\u4e8e\u4efb\u610f\u7684 \\(i\\) \u90fd\u6709 \\(c_i \\in [a_i,b_i]\\)</p> <p>\u503c\u57df \\(3000\\) \uff0c\u957f\u5ea6 \\(3000\\)\u3002</p> <p>\u4e00\u4e2a\u6bd4\u8f83\u57fa\u7840\u7684 dp\u3002</p> <p>\u8bbe \\(f_i\\) \u8868\u793a\u8003\u8651\u5230\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e\u7684\u65f6\u5019\u7684\u65b9\u6848\u6570\u3002</p> <p>\u7136\u540e\u4f60\u53d1\u73b0\u56e0\u4e3a \\([a_i,b_i],[a_{i+1},b_{i+1}]\\) \u662f\u53ef\u80fd\u6709\u91cd\u5408\u7684\u3002</p> <p>\u4f60\u9700\u8981\u53bb\u679a\u4e3e \\(c_i\\) \u5230\u5e95\u9009\u4ec0\u4e48\u7684\u60c5\u51b5\u3002</p> <p>\u53d1\u73b0\u503c\u57df\u4e58\u4e0a\u957f\u5ea6\u4e5f\u53ea\u6709 \\(9\\times 10^6\\) \uff0c\u6240\u4ee5\u8003\u8651\u4e00\u4e2a\u6734\u7d20\u7684 dp\u3002</p> <p>\u8bbe \\(f_{i,j}\\) \u8868\u793a\u8003\u8651\u5230\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e\u65f6\uff0c\\(c_i=j\\) \uff0c\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u5e8f\u5217\u603b\u6570\u3002</p> <p>\u90a3\u4e48\u65b9\u7a0b\u5c31\u662f </p> \\[f_{i,j}=\\begin{cases}\\sum\\limits_{k=0}^{j}f_{i-1,k} &amp; i \\ge 1,j\\in [a_i,b_i]\\\\1 &amp; i=j=0\\\\0 &amp; \\text{otherwise.}\\end{cases}\\] <p>\u4f46\u662f\u53d1\u73b0\u8fd9\u6837\u5b50\u662f \\(\\text{O}(nm^2)\\) \u7684\uff08\\(m\\) \u662f\u503c\u57df\uff09\uff0c\u6240\u4ee5\u8003\u8651\u4f18\u5316\u3002</p> <p>\u7b2c\u4e00\u79cd\u60c5\u51b5\u4f60\u53d1\u73b0\u662f\u4e2a\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4f7f\u7528\u524d\u7f00\u548c\u4f18\u5316\u8fd9\u73a9\u610f\u513f\u3002</p> <p>\u4ee4 \\(S_{i,j}=\\sum\\limits_{k=0}^{j}f_{i,k}\\)\uff0c\u7136\u540e\u7528\u524d\u7f00\u548c\u7684\u5f62\u5f0f\u628a \\(S\\) \u5199\u51fa\u6765\u3002 </p> <p>\u7136\u540e\u56e0\u4e3a\u524d\u7f00\u548c\u662f\u4e2a\u9012\u63a8\u5f0f\uff0c\u6240\u4ee5\u4f60\u5c31\u53ef\u4ee5 \\(\\text{O}(nm)\\) AC\u672c\u9898\u3002</p> <pre><code>    for(register int i=a[1];i&lt;=b[1];++i){\nf[1][i]=1;\n}sum[0]=f[1][0];\nfor(register int i=1;i&lt;=si-10;++i){\nsum[i]=sum[i-1]+f[1][i];\n}\nfor(register int i=2;i&lt;=n;++i){\nfor(register int j=a[i];j&lt;=b[i];++j){\nf[i][j]=sum[j];\n}\nsum[0]=f[i][0];\nfor(register int j=1;j&lt;=si-10;++j){\nsum[j]=(sum[j-1]+f[i][j])%p;\n}\n}int ans=0;\nfor(register int i=a[n];i&lt;=b[n];++i){\nans=(ans+f[n][i])%p;\n}printf(\"%d\\n\",ans%p);\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#e-f", "title": "E F", "text": "<p>\u4fe9DP\uff0c\u4e00\u4e2a\u80cc\u5305+\u6811\u4e0a\u5dee\u5206\u4e00\u4e2a\u6362\u6839\uff0c\u4f46\u662f\u4e0d\u4f1a\u5199\u545c\u545c</p>"}, {"location": "rec/old/old-cf-at-sol/#g_1", "title": "G", "text": "<p>\u539f\u9898\uff1a202. \u6700\u5e78\u8fd0\u7684\u6570\u5b57 - AcWing\u9898\u5e93</p> <p>3696 -- The Luckiest number (poj.org)</p>"}, {"location": "rec/old/old-cf-at-sol/#h", "title": "H", "text": "<p>\u4e0d\u4f1a</p>"}, {"location": "rec/old/old-cf-at-sol/#edu-115", "title": "Edu #115", "text": "<p>Contest ID : <code>1598</code></p> <p>\u7279\u610f\u63d0\u65e9\u56de\u5b66\u6821\u673a\u623f\u6253\u7684\u3002</p> <p>\u673a\u623f\u6253\u7684\u4eba\u4e0d\u662f\u5f88\u591a\uff0c\u4e0d\u8fc7\u8fd9\u573a\u786e\u5b9e\u6709\u70b9\u6bd2\u7624\uff1f</p> <p>G \u9898\u5168\u573a\u53ea\u6709\u4e24\u4e2a\u4ebaAC\uff0ctourist \u51b2\u4e86\u4e00\u4e2a\u5c0f\u65f6\u3002</p> <p>F \u9898 MZX\u795e\u60f3\u4e86\u534a\u5c0f\u65f6\u6ca1\u60f3\u51fa\u6765\uff0cCFM \u548c 45d \u5168\u90e8T\u98de</p> <p>\u4f55\u795e\u7684 D \u548c E\u88ab\u53c9\u7206\u4e86\uff0cYL \u7684 D \u8bfb\u9519\u9898\u4e86\u3002</p> <p>\u4e0d\u8fc7 wqs \u795e \u968f\u4fbf\u4e71\u5207\uff01\uff01orz</p>"}, {"location": "rec/old/old-cf-at-sol/#a_7", "title": "A", "text": "<p>\u5927\u7279\u5224\u9898\uff0c\u53ea\u8981\u6709\u4e00\u5bf9 \\(a_i=b_i=1\\) \u90a3\u4e48\u65e0\u89e3\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#b_6", "title": "B", "text": "<p>\u8fd8\u662f\u5927\u7279\u5224\u9898\u3002</p> <p>\u4f60\u5c31\u8003\u8651\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u70b9\u5bf9 \\((i,j)\\)\u3002</p> <p>\u7136\u540e\u5206 \\((0,0)(0,1)(1,0)\\) \u7684\u60c5\u51b5\u8ba8\u8bba\u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nint T,n;\nconst int si=1e3+10;\nint a[si][10];\n\nsigned main(){\nscanf(\"%lld\",&amp;T);\nwhile(T--){\nscanf(\"%lld\",&amp;n);\nfor(register int i=1;i&lt;=n;++i){\nfor(register int j=1;j&lt;=5;++j){\nscanf(\"%1lld\",&amp;a[i][j]);\n}\n}\nbool f=false;\nfor(register int i=1;i&lt;5;++i){\nfor(register int j=i+1;j&lt;=5;++j){\nint cnt=0,cntt=0,cnttt=0;\nfor(register int k=1;k&lt;=n;++k){\nif(a[k][i]==1 &amp;&amp; a[k][j]==0) ++cnt;\nelse if(a[k][i]==0 &amp;&amp; a[k][j]==1) ++cntt;\nelse if(a[k][i]==1) ++cnttt;\n}\nif(cnt+cntt+cnttt&gt;=n &amp;&amp; cnt+cnttt&gt;=(n&gt;&gt;1) &amp;&amp; cntt+cnttt&gt;=(n&gt;&gt;1)){\nf=true;break;\n}\nif(!f) continue;\n}\n}\nif(f) puts(\"YES\");\nelse puts(\"NO\");\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "rec/old/old-cf-at-sol/#c_10", "title": "C", "text": "<p>\u95ee\u4f60\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5e8f\u5217\uff0c\u6709\u591a\u5c11\u79cd\u53bb\u6389\u4e24\u4e2a\u6570 \\(a_i,a_j\\) \u7684\u65b9\u6848\uff08\\(i&lt;j\\)\uff09\u4f7f\u5f97\u5e8f\u5217\u5e73\u5747\u6570\u4e0d\u53d8\u3002</p> <p>\u76f4\u63a5\u7528\u4e2a <code>unordered_map</code> \u6765\u5904\u7406\u6bcf\u4e00\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002</p> <p>\u4f60\u53d1\u73b0\u8981\u6709\u89e3\uff0c\u90a3\u4e48\u5e73\u5747\u6570\u80af\u5b9a\u662f <code>.0</code> \u6216\u8005 <code>.5</code> \u7ed3\u5c3e\u3002</p> <p>\u8bf4\u767d\u4e86 \\(2sum\\  \\text{mod}\\  n=0\\)\u3002</p> <p>\u7136\u540e\u4e3a\u4e86\u9632\u6b62\u91cd\u590d\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8fd9\u6837\u5b50\u5199\uff1a</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nint T;\nconst int si=2e5+10;\nint n,a[si];\nlong double k=0;\nunordered_map&lt;int,int&gt;mp;\n\nsigned main(){\nscanf(\"%lld\",&amp;T);\nwhile(T--){\nscanf(\"%lld\",&amp;n);\nmp.clear();\nint sum=0;\nfor(register int i=1;i&lt;=n;++i){\nscanf(\"%lld\",&amp;a[i]);sum+=a[i];\n}\nif((sum&lt;&lt;1ll) % n){\nputs(\"0\");\ncontinue;\n}\nint kk=sum*2/n;\nint res=0;\nfor(register int i=1;i&lt;=n;++i){\nres+=mp[kk-a[i]];mp[a[i]]++;\n}\nprintf(\"%lld\\n\",res);\n}\nreturn 0;\n}// \u7528 map \u5e94\u8be5\u53ef\u4ee5\uff0c\u6211\u8fd9\u4e2a\u88ab\u4eba\u5361\u4e86\u545c\u545c\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u5e8f\u5217\u770b\u4f5c\u5347\u5e8f\u6392\u5e8f\u7684\u3002</p> <p>\u7136\u540e\u4f60\u53d1\u73b0\u5339\u914d\u7684\u4e24\u4e2a\u7aef\u70b9\u662f\u5173\u4e8e\u5e73\u5747\u6570\u7684\u4f4d\u7f6e\u8fd1\u4f3c\u5bf9\u79f0\u7684\u3002</p> <p>\u8fd9\u6837\u5b50\u5199\u4f1a\u8ba9\u6bcf\u4e00\u4e2a\u70b9\u5bf9\u7684\u7b54\u6848\u90fd\u5728\u904d\u5386\u5230\u4f4d\u7f6e\u9760\u540e\u7684\u90a3\u4e2a\u70b9\u7684\u65f6\u5019\u624d\u66f4\u65b0\u3002</p> <p>\u90a3\u4e48\u5c31\u907f\u514d\u4e86\u70b9\u5bf9\u7684\u91cd\u590d\u8ba1\u7b97\uff08\u6837\u4f8b\u4e00\u7684 <code>8 8 8 8</code> \u7684\u60c5\u51b5\u4e5f\u80fd\u5b8c\u7f8e\u89e3\u51b3\uff09\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#d_7", "title": "D", "text": "<p>\u5927\u6570\u5b66\u9898\uff08\u5bb9\u65a5+\u7ec4\u5408\uff09</p> <p>\u95ee\u7ed9\u5b9a\u7684\u4e24\u4e2a\u5e8f\u5217 \\(a,b\\) \u4e2d\u9009\u51fa\u4e09\u4e2a\u4f4d\u7f6e \\(i,j,k\\) \u4f7f\u5f97\u4e0b\u5217\u6761\u4ef6\u81f3\u5c11\u6709\u4e00\u4e2a\u6210\u7acb\uff1a</p> <ul> <li>\\(a[i] \\not= a[j] \\not= a[k]\\)</li> <li>\\(b[i] \\not= b[j] \\not= b[k]\\)</li> </ul> <p>\u6709\u591a\u5c11\u79cd\u65b9\u6848\u3002</p> <p>\u8003\u8651\u628a\u4efb\u610f\u9009\u4e09\u4e2a\u4f4d\u7f6e\u7684\u65b9\u6848\u6570\u7b97\u51fa\u6765\uff1a\\(|U|=\\text{C}^{3}_{n}=\\dfrac{n\\times(n-1)\\times(n-2)}{6}\\)</p> <p>\u7136\u540e\u4f60\u8981\u53bb\u6389\u7684\u5c31\u662f\u4e24\u79cd\u90fd\u4e0d\u6ee1\u8db3\u7684\u65b9\u6848\u6570\u3002</p> <p>\u6211\u4eec\u8003\u8651\u5206\u522b\u8bb0\u5f55 \\(a,b\\) \u5f53\u4e2d\u7684\u6bcf\u4e2a\u6570\u5206\u522b\u5728\u81ea\u5df1\u6240\u5904\u7684\u5e8f\u5217\u5f53\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 \\(cnta,cntb\\)\u3002</p> <p>\u4f60\u53d1\u73b0\u4f60\u8981\u5904\u7406\u7684\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u5c31\u662f\u201c\u6709\u76f8\u7b49\u201d\u7684\u60c5\u51b5\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6761\u4ef6\uff0c\u4f60\u90fd\u8981\u5904\u7406\u201c\u6709\u4e24\u4e2a\u76f8\u540c\uff0c\u6709\u4e09\u4e2a\u76f8\u540c\u201d\u7684\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u8fd9\u91cc\u5c31\u53c8\u662f\u5bb9\u65a5\uff0c\u5bf9\u4e8e \\(a\\) \uff08\\(b\\) \u540c\u7406\uff09\uff0c\u6211\u4eec\u8bbe\u4f4d\u7f6e \\(i,j\\) \u51fa\u73b0\u76f8\u540c\u7684\u60c5\u51b5\u96c6\u5408\u4e3a \\(A\\) \uff0c\\(i,k\\) \u76f8\u540c\u7684\u60c5\u51b5\u96c6\u5408\u4e3a \\(B\\) \uff0c\\(j,k\\) \u76f8\u540c\u7684\u60c5\u51b5\u96c6\u5408\u662f \\(C\\)\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f \\(A \\cup B \\cup C\\) \uff0c\u8fd9\u91cc\u5c31\u53ef\u4ee5\u7528\u5bb9\u65a5\u7b97\u3002</p> <p>\u8003\u8651\u4f60\u73b0\u5728\u626b\u5230\u4f4d\u7f6e \\(i\\)\uff0c\u90a3\u4e48\u5728 \\(a\\) \u5f53\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4f4d\u7f6e\u4ed6\u51fa\u73b0\u4e86 \\(cnta_{a_i}\\) \u6b21\uff0c\u5728 \\(b\\) \u91cc\u9762\u51fa\u73b0 \\(cntb _{b_i}\\) \u6b21\uff0c</p> <p>\u90a3\u4e48\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u5728\u4e0d\u7ba1\u91cd\u4e0d\u91cd\u590d\u8ba1\u7b97\u7684\u60c5\u51b5\u4e0b\u5c31\u6709 \\(cnta_{a_i} \\times cntb_{b_i}\\) \u79cd\u53ef\u80fd\u3002</p> <p>\u6211\u4eec\u8003\u8651\u5bf9\u8fd9\u4e2a\u4e1c\u897f\u5bb9\u65a5\u4e00\u4e0b\u6765\u53bb\u91cd\u3002</p> <p>\u56e0\u4e3a\u4f60\u5728\u5176\u4ed6\u5730\u65b9\u8fd8\u53ef\u80fd\u518d\u53d6\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u5b57\u6240\u4ee3\u8868\u7684\u60c5\u51b5\uff0c\u800c\u4e14\u6bcf\u626b\u5230\u4e00\u4e2a \\(a_i\\) \u6216\u8005 \\(b_i\\) \u5c31\u4f1a\u591a\u7b97\u4e00\u6b21/</p> <p>\u90a3\u4e48\u6211\u4eec\u5148\u7ed9\u4ed6\u4eec\u51cf\u53bb \\(cnta_{a_i}+cntb_{b_i}\\)\uff0c</p> <p>\u7136\u540e\u4f60\u53d1\u73b0\u8fd9\u4e2a\u4f4d\u7f6e\u672c\u6765\u7684\u90a3\u4e00\u4e2a\u60c5\u51b5\u88ab\u591a\u51cf\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u52a0\u4e0a \\(1\\)\u3002</p> <p>\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u6240\u80fd\u7ed9\u51fa\u7684\u8d21\u732e\u5199\u51fa\u6765\uff1a\\(S_i=cnta_{a_i}\\times cntb_{b_i}-cnta_{a_i}-cntb_{b_i}+1\\)\u3002</p> <p>\u6240\u4ee5\u6839\u636e\u52a0\u6cd5\u539f\u7406\uff0c\u6211\u4eec\u8981\u6c42\u7684\u90fd\u4e0d\u6ee1\u8db3\u7684\u60c5\u51b5\u5c31\u662f \\(\\sum\\limits^n_{i=1}S_i=\\sum\\limits^{n}_{i=1}[(cnta_{a_i}-1) \\times (cntb_{b_i}-1)]\\)\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f \\(\\text{C}^3_n-\\sum\\limits^{n}_{i=1}[(cnta_{a_i}-1) \\times (cntb_{b_i}-1)]\\)\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#e_5", "title": "E", "text": "<p>\u9898\u610f\u81ea\u5df1\u770b\u539f\u9898\u3002</p> <p>\u53d1\u73b0\u6bcf\u6b21\u4fee\u6539\u683c\u5b50\u53ea\u4f1a\u5f71\u54cd \\(n\\) \u6761\u8def\u5f84\uff0c\u6240\u4ee5\u4f60\u5c31\u6bcf\u6b21\u7ef4\u62a4\u4e00\u4e0b\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5 \\(\\text{O}(nq)\\) \u505a\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#f-g", "title": "F &amp; G", "text": "<p>\u51b2\u4e0d\u52a8\uff0c\u592a\u96be\u529b/kk</p>"}, {"location": "rec/old/old-cf-at-sol/#technocup-2022-elimination-round-2", "title": "Technocup 2022 - Elimination Round 2", "text": "<p>Contest Id:<code>1584,1588,1589</code></p> <p>\u5f53\u7ecf\u5386\u8fc7\u4e00\u4e9b\u53d8\u5316\u4e4b\u540e\u6253\u7684\u7b2c\u4e00\u6b21 CF\u3002</p> <p>\u867d\u7136\u662f VP\u3002</p> <p>\u53e6\u5916\u4e8c\u53f7\u673a\u623f\u53ea\u6709\u6211\u4e00\u4e2a\u4eba\u60f3\u9898\u7684\u611f\u89c9\u786e\u5b9e\u8212\u670d\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#1589a1584a", "title": "1589A,1584A", "text": "<p>\u6784\u9020\u65b9\u7a0b \\(\\dfrac{x}{u}+\\dfrac{y}{v}=\\dfrac{x+y}{u+v}\\) \u7684\u89e3\uff0c\u5176\u4e2d \\(u,v\\) \u7ed9\u5b9a\u4e14 $(x,y)\\not= (0,0) $</p> <p>\u7a0d\u5fae\u4e71\u89e3\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\\(x=-u^2,y=v^2\\) \u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#1589b1584b", "title": "1589B,1584B", "text": "<p>\u731c\u7684\u7ed3\u8bba\uff0c\u6211\u89c9\u5f97\u53ea\u8981 \\(n\\times m\\) \u80fd\u88ab \\(3\\) \u6574\u9664\u90a3\u4e48\u53ef\u4ee5\u5168\u90e8\u5207\u6210 \\(1 \\times 3\\) \u6216\u8005 \\(3 \\times 1\\) \u7684\u3002</p> <p>\u7136\u540e\u5176\u4ed6\u60c5\u51b5\u63a8\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\u662f \\(\\dfrac{n\\times m}{3} +1\\)\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#1589c1584c1588a", "title": "1589C,1584C,1588A", "text": "<p>\u8003\u8651\u5148\u5bf9 \\(a,b\\) \u6392\u5e8f\u3002</p> <p>\u7136\u540e\u5012\u7740\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\uff0c\u5224\u65ad\u4e0b\u5217\u6761\u4ef6\u662f\u5426\u4e0d\u6210\u7acb\u5373\u53ef\u3002</p> <p><code>b[i]-a[i]&gt;1 || b[i]-a[i]&lt;0</code></p> <p>\u6210\u7acb\u8f93\u51fa <code>NO</code> \u8dd1\u8def\uff0c\u53cd\u4e4b\u5faa\u73af\u5b8c\u4e86\u8f93\u51fa <code>YES</code> \u5373\u53ef\u3002</p>"}, {"location": "rec/old/old-cf-at-sol/#d_8", "title": "D", "text": "<p>\u4ea4\u4e92\u9898\uff0c\u6211\u6bd4\u8f83Lazy\u6240\u4ee5\u660e\u5929\u505a\u3002</p>"}, {"location": "sol/", "title": "Index", "text": "<p>\u8fd9\u4e2a\u5b50\u76ee\u5f55 <code>Solution</code> \u4e0b\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u5185\u5bb9\uff1a</p> <ul> <li>\u6a21\u62df\u8d5b\u7684\u9898\u89e3 &amp; \u8d5b\u540e\u603b\u7ed3 &amp; \u6539\u9519</li> <li>\u4e00\u4e9b\u9898\u76ee\u7684\u9898\u89e3\uff08\u73b0\u5728\u4e00\u822c\u4e0d\u600e\u4e48\u5199\uff0c\u5927\u90e8\u5206\u90fd\u4f1a\u5199\u5230 Rec \u91cc\uff0c\u9664\u975e\u5f53\u65f6\u89c9\u5f97\u662f\u6781\u5ea6\u597d\u9898\u624d\u4f1a\u62ff\u51fa\u6765\u5355\u72ec\u5199\uff09\u3002</li> </ul>"}, {"location": "sol/mock/", "title": "Index", "text": "<p>\u8fd9\u91cc\u7528\u6765\u5b58\u653e CWOI \u6a21\u62df\u8d5b\u7684\u9898\u89e3\uff0c\u6216\u8005\u662f\u6211\u81ea\u5df1\u989d\u5916\u6253\u7684\u6a21\u62df\u8d5b\u7684\u9898\u89e3\u3002</p> <p>\u56e0\u4e3a\u6743\u9650\u548c\u4fdd\u5bc6\u7b49\u5404\u65b9\u9762\u9700\u8981\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684\u535a\u5ba2\u662f\u4e0a\u4e86\u9501\u7684\uff0c\u5bc6\u7801\u662f 2022 \u5e74 CWOI Vjudge \u7684\u5e38\u7528\u5bc6\u7801\u3002</p> <p>\u548c Cx \u8001\u5e08\u7684\u5bc6\u7801\u662f\u4e00\u81f4\u7684\uff0c\u5982\u679c\u8be5\u6a21\u62df\u8d5b\u662f 2022 + N \u5e74\u7684\uff0c\u90a3\u4e48\u5bf9\u5e94\u6570\u5b57\u76f8\u5e94\u52a0 N\u3002</p>"}, {"location": "sol/other/noiol2022/", "title": "NOIOL2022 \u9898\u89e3", "text": "<p>\u9898\u9762</p> <p>\u4e00\u5e74\u524d\u7684\u8fd9\u4e2a\u65f6\u5019\u6253\u8fc7\u8fd9\u4e00\u573a\uff0c\u4f46\u662f\u6211\u751a\u81f3\u53ea\u6253\u4e86 T1 \u7684\u6700\u4f4e\u6863\u66b4\u529b\u5206 /xk</p> <p>\u7136\u540e\u90a3\u4e2a\u65f6\u5019\u4e5f\u90fd\u4ece\u6765\u6ca1\u6709\u6539\u9898\uff0c\u6001\u5ea6\u4e0a\u90fd\u662f\u5f88\u6577\u884d\u7684\uff0c\u4e5f\u90fd\u4e0d\u600e\u4e48\u7528\u5fc3\u60f3\u3002</p> <p>\u8fd9\u6b21\u7a0d\u5fae\u597d\u70b9\u4e86\uff0c\u8d77\u7801\u6211\u4f1a T1 \u4e86\u3002</p>"}, {"location": "sol/other/noiol2022/#t1", "title": "T1", "text": "<p>\u8fd9\u4e2a\u95ee\u9898\u8fd8\u662f\u6bd4\u8f83\u5957\u8def\u3002</p> <p>\u663e\u7136\u7684\u6211\u4eec\u5148\u505a\u4e00\u904d\u5168\u5c40\u7684\u89c2\u5bdf\u4e00\u4e0b\uff0c\u7136\u540e\u8003\u8651\u8f6c\u5316\u4e3a\u533a\u95f4\u3002</p> <p>\u5b9e\u5728\u662f\u5957\u8def\u7684\u4e0d\u80fd\u518d\u5957\u8def\u4e86\u3002</p> <p>\u597d\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5047\u8bbe\u94a6\u5b9a\u4e00\u4e2a\u4f4d\u7f6e\u4e3a \\(l\\)\uff0c\\(l\\) \u663e\u7136\u662f\u6210\u529f\u7684\uff0c\u7136\u540e\u539f\u672c\u5c31\u662f\u6210\u529f\u7684\u5143\u7ec4\u76f8\u5bf9\u987a\u5e8f\u4e0d\u4f1a\u6539\u53d8\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u672c\u6765\u4e0d\u662f\u6210\u529f\uff0c\u4f46\u662f\u4ee5 \\(l\\) \u5f00\u5934\u5374\u662f\u6210\u529f\u5e94\u8be5\u662f\u4ec0\u4e48\u60c5\u51b5\uff0c\u4ece\u4e0d\u77e5\u9053\u54ea\u4e2a\u6837\u4f8b\u770b\u5c31\u662f\u7c7b\u4f3c \\(l = 5\\)\uff0c\u7136\u540e\u4f60\u5728 \\(6\\) \u7684\u65f6\u5019\uff0c\u628a \\(5\\) \u5f39\u6389\u4e86\uff0c\u4f46\u662f\u5168\u5c40\u7684\u60c5\u51b5\u4e0b\u8fd8\u6709\u4e00\u4e2a \\(4\\) \u5728\u5e95\u4e0b\u9876\u7740\u3002</p> <p>\u89c2\u5bdf\u624b\u6a21\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c \\(l = 5\\)\uff0c\u8bb0\u5f55 \\(i\\) \u5165\u6808\u7684\u65f6\u5019\uff0c\u6808\u9876\u4e3a \\(lst(i)\\)\uff0c\u90a3\u4e48\u5728 \\(4\\) \u4e4b\u540e\u5982\u679c\u51fa\u73b0 \\(4, 4, 4\\) \u8fd9\u6837\u7684\u8fde\u7eed\u6bb5\uff0c\u663e\u7136\u5c31\u662f\u4e00\u4e2a\u4e00\u4e2a\u4e00\u4e2a\u6210\u529f\u7684\u5143\u7ec4\u3002</p> <p>\u95ee\u9898\u8f6c\u5316\u4e3a\u8003\u8651\u5bf9\u4e8e \\(lst\\)\uff0c\u5728\u7ed9\u5b9a\u533a\u95f4\u5185\u6c42\u6709\u591a\u5c11\u4e2a \\(lst &lt; l\\)\uff0c\u4e3b\u5e2d\u6811\u4e00\u4e0b\u5373\u53ef\uff0c\\(\\log(n)\\)\u3002</p> <p>\u4e5f\u53ef\u4ee5\u5dee\u5206\u4e4b\u540e\u8f6c\u5316\u6210\u4e8c\u7ef4\u6570\u70b9\u4f7f\u7528 Fenwick\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 5e5 + 10;\n\nint root[si];\nint n, q, a[si], b[si];\nclass president_tree {\nprivate:\nstruct node {\nint ls, rs;\nint val;\n} t[si * 40];\nint cnt = 0;\nint Node() {\n++cnt; t[cnt].ls = t[cnt].rs = 0;\nt[cnt].val = 0; return cnt;\n}\ninline void pushup(int p) {\nt[p].val = t[t[p].ls].val + t[t[p].rs].val;\n}\npublic: int build(int l, int r) {\nint p = Node();\nif(l == r) return p;\nint mid = (l + r) &gt;&gt; 1;\nt[p].ls = build(l, mid), t[p].rs = build(mid + 1, r);\npushup(p); return p;\n}\nint insert(int lst, int l, int r, int x) {\nint p = Node();\nif(l == r) { t[p].val = 1; return p; }\nint mid = (l + r) &gt;&gt; 1;\nif(x &lt;= mid) t[p].rs = t[lst].rs, t[p].ls = insert(t[lst].ls, l, mid, x);\nelse t[p].ls = t[lst].ls, t[p].rs = insert(t[lst].rs, mid + 1, r, x);\npushup(p); return p;\n}\nint query(int p, int l, int r, int L, int R) {\nif(L &lt;= l &amp;&amp; r &lt;= R) return t[p].val;\nint ret = 0, mid = (l + r) &gt;&gt; 1;\nif(L &lt;= mid) ret += query(t[p].ls, l, mid, L, R);\nif(R &gt; mid)  ret += query(t[p].rs, mid + 1, r, L, R);\nreturn ret;\n}\n} tr;\n\nstruct obj {\nint l, i;\nbool operator &lt; (const obj &amp;b) {\nreturn l &lt; b.l;\n}\n} w[si];\n\nint L[si], stk[si];\n\nint main() {\n\n// freopen(\"ex_stack1.in\", \"r\", stdin);\n// freopen(\"ex_stack1.out\", \"w\", stdout);\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; q;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; b[i];\n\nint cnt = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nwhile(cnt &amp;&amp; (a[stk[cnt]] == a[i] || b[stk[cnt]] &lt;= b[i])) --cnt;\nL[i] = stk[cnt] + 1;\nstk[++cnt] = i;\n}\nfor(int i = 1; i &lt;= n; ++i) w[i].i = i,w[i].l = L[i];\nsort(w + 1, w + 1 + n), root[0] = tr.build(1, n);\n\nint pp = 1;\nfor(int i = 1; i &lt;= n; ++i) {\nroot[i] = root[i - 1];\nwhile(pp &lt;= n &amp;&amp; w[pp].l == i) root[i] = tr.insert(root[i], 1, n, w[pp].i), ++pp;\n}\n\nfor(int nw = 1; nw &lt;= q; ++nw) {\nint l, r; cin &gt;&gt; l &gt;&gt; r;\ncout &lt;&lt; tr.query(root[l], 1, n, l, r) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre> <p>\u8003\u573a\u601d\u8003\u7684\u65f6\u5019\u95ee\u9898\u51fa\u5728\uff0c\u6211\u4e00\u76f4\u5728\u8003\u8651\u4e0a\u4e00\u4e2a good\uff0c\u7136\u540e\u4e2d\u95f4\u8fd9\u4e00\u6bb5\u53ef\u4ee5\u600e\u4e48\u641e\u6ca1\u60f3\u6e05\u695a\u3002</p> <p>\u8fd8\u662f\u6700\u540e\u53d1\u73b0\u4e86\u8fd9\u4e2a\u8fde\u7eed\u6bb5\u624d\u60f3\u5230\u7684\uff0c\u5176\u5b9e\u4e5f\u662f\uff0c\u8003\u573a\u601d\u8def\u4e0d\u6e05\u6670\uff0c\u611f\u89c9\u4e0d\u592a\u80fd\u62bd\u8c61\u51fa\u95ee\u9898\u5177\u4f53\u5728\u54ea\u91cc\uff1f\u8fd9\u4e2a\u8be5\u548b\u89e3\u51b3\u554a\u3002</p>"}, {"location": "sol/other/noiol2022/#t2", "title": "T2", "text": "<p>\u5c31\uff0c\u4e0d\u59a8\u6309\u7167\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002</p> <p>\u4e3a\u4ec0\u4e48\u5462\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u505a\u7684\u662f\u4e8b\u60c5\u662f\u6bd4\u8f83\u65b9\u4fbf\u7684\u5904\u7406\u4ea4\u96c6\uff0c\u5e76\u4e14\u4fdd\u8bc1\u6ca1\u6709\u5305\u542b\u5173\u7cfb\u3002</p> <p>\u663e\u7136\u5bf9\u4e8e\u4e00\u4e2a\u96c6\u5408\uff0c\u6700\u4f18\u7684\u4e00\u5b9a\u662f\u6ee1\u8db3\u6761\u4ef6\u91cc\u9762\u6700\u5c0f\u7684\u96c6\u5408\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u626b\u4e00\u904d\u6bcf\u4e2a\u96c6\u5408\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u52a8\u6001\u8bb0\u5f55\u5f53\u524d\u8986\u76d6\u4e86\u8fd9\u4e2a\u6761\u4ef6\u7684\u6700\u5c0f\u7684\u96c6\u5408\u662f\u5565\u3002</p> <p>\u8fd9\u4e2a\u56e0\u4e3a\u4ece\u5927\u5230\u5c0f\u4e86\u6240\u4ee5\u76f4\u63a5\u987a\u5e8f\u679a\u4e3e\u5373\u53ef\uff0c\u7136\u540e argue \u4e00\u4e0b\u53ef\u4e0d\u53ef\u884c\u5c31\u884c\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e6 + 10;\n\nstruct obj {\nint siz, id;\nstd::vector&lt;int&gt; v;\nvoid init() { siz = id = 0, v.clear(); }\nbool operator &lt; (const obj &amp;b) const {\nreturn siz &gt; b.siz;\n}\n}p[si];\n\nint n;\nint bel[si], rec[si];\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) {\np[i].init(), bel[i] = 0, p[i].id = i;\ncin &gt;&gt; p[i].siz;\nfor(int j = 0, x; j &lt; p[i].siz; ++j)\ncin &gt;&gt; x, p[i].v.emplace_back(x);\n}\nsort(p + 1, p + 1 + n);\nint u, v;\nint col = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nu = v = 0;\ncol = p[i].id, rec[p[i].id] = i;\nfor(int j = 0; j &lt; p[i].siz; ++j) {\nint t = p[i].v[j];\nint tmp = bel[t]; bel[t] = col;\nif(!tmp) tmp = col;\nif(!u) u = tmp;\nelse if(u != tmp) v = tmp;\nif(u &amp;&amp; v) {\nn = -1;\np[i].siz = -1;\n}\n}\n}\nif(n != -1) cout &lt;&lt; \"NO\" &lt;&lt; endl;\nelse {\nif(u == col || v == col);\nelse if(p[rec[u]].siz &gt; p[rec[v]].siz) u = col;\nelse v = col;\ncout &lt;&lt; \"YES\" &lt;&lt; endl;\ncout &lt;&lt; u &lt;&lt; \" \" &lt;&lt; v &lt;&lt; endl;\n}\n}\nreturn 0;\n}\n</code></pre>"}, {"location": "sol/other/noiol2022/#t3", "title": "T3", "text": "<p>\u4ee5\u4e3a\u81ea\u5df1\u80fd\u505a\u51fa\u6765\u60f3\u4e86\u5927\u534a\u5929\u7ed3\u679c\u4e00\u5206\u6ca1\u6709\uff0c\u6700\u540e\u8d76\u7d27\u53bb\u8865 T1\uff0c\u7ed3\u679c\u624b\u6b8b\u6253\u6302\u4e86\u4e3b\u5e2d\u6811\u3002</p> <p>\u53ef\u4ee5\u4e0d\u7528\u4e09\u7ef4\u504f\u5e8f\uff0c\u5f88\u5999\u7684\u601d\u8def\u3002</p> <p>\u4f60\u5bf9\u4e8e\u8fd9\u79cd \\(\\sum\\sum f(i,j)\\) \u7684\u5f0f\u5b50\uff0c\u5904\u7406\u5957\u8def\u76ee\u524d\u6765\u770b\u65e0\u975e\u5c31\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u6b63\u653b\uff0c\u76f4\u63a5\u8003\u8651\u600e\u4e48\u8f6c\u5316\u8ba1\u7b97\u8d21\u732e\u7684\u65b9\u5f0f\uff0c\u53e6\u5916\u4e00\u79cd\u5c31\u662f\u8003\u8651\u6b63\u96be\u5219\u53cd\uff0c\u6211\u4eec\u6c42\u51fa \\(U\\) \u548c\u7b54\u6848\u7684\u8865\u96c6\u5c31\u884c\u4e86\u3002</p> <p>\u8fd9\u9898\u5c31\u662f\u8003\u8651\uff0c\u5047\u8bbe\u6240\u6709\u4f4d\u7f6e\u90fd\u505a\u4e86\u8d21\u732e\uff0c\u603b\u7b54\u6848\u663e\u7136\u662f \\(2n\\sum a(i,j)\\)\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u7b97\u6709\u591a\u5c11\u4e2a \\(a(i, j)\\) \u6ca1\u505a\u51fa\u8d21\u732e\u5c31\u884c\u3002 </p> <p>\u7b54\u6848\u7684 \\(\\min, \\max\\) \u91cc\u9762\u662f\u7c7b\u4f3c\u7684\uff0c\u8fd9\u91cc\u53ea\u8003\u8651 \\(\\min\\)\uff1a</p> <p>\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2a \\(a(k, i) + a(k, j)\\)\uff0c\u5b83\u4e0d\u4f1a\u5bf9 \\(\\min\\) \u505a\u51fa\u8d21\u732e\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728 \\(k^\\prime\\)\uff0c\u4f7f\u5f97 \\(a(k^\\prime, i) + a(k^\\prime, j) \\le a(k, i) + a(k, j)\\)\u3002\u4e8e\u662f\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a \\(i\\)\uff0c\u6570\u4e00\u4e0b\u6709\u591a\u5c11\u4e2a \\(j\\) \u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u5c31\u884c\u3002</p> <p>\u7136\u540e\u5c31\u5957\u8def\u7684\u79fb\u9879\uff0c\u628a \\(i, j\\) \u5206\u522b\u653e\u5230 \\(\\le\\) \u4e24\u8fb9\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u504f\u5e8f\u3002</p> <p>\u4e8e\u662f\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\uff0c\u5bf9\u4e8e \\(\\max\\) \u540c\u7406\u3002</p> <p>\u8fd9\u91cc\u76f8\u5f53\u4e8e\u53ea\u8003\u8651\u4e86\u6709 \\(3\\) \u884c\u88ab\u9009\u51fa\u6765\u7684\u60c5\u51b5\uff0c\u4e8e\u662f\u6211\u4eec\u679a\u4e3e \\(m!\\) \u79cd\u53ef\u80fd\u505a\u4e00\u4e0b\u5c31\u884c\u3002</p> <p>\u6ce8\u610f\u6211\u4eec \\(\\min, \\max\\) \u540c\u65f6\u505a\u7684\u65f6\u5019\u53ef\u80fd\u4e24\u8fb9\u53d6\u7b49\uff0c\u8003\u8651\u5f3a\u5236\u94a6\u5b9a\u5927\u5c0f\uff0c\u968f\u4fbf\u9009\u4e00\u8fb9\u5c31\u884c\u3002</p> <p>\u590d\u6742\u5ea6 \\(O(n\\log n)\\)\uff0c\u5e26\u4e00\u4e2a \\(4!\\) \u5e38\u6570\u3002\u6811\u72b6\u6570\u7ec4\u8bb0\u5f97\u5f00\u4e24\u500d\u7136\u540e\u5e73\u79fb\u4e00\u4e0b\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u8d1f\u6570\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n#define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 2e5 + 5;\nconst int V = si &lt;&lt; 1;\nconst int inf = 0x3f3f3f3f3f3f3f3fll;\n\nint n, m;\nint a[5][si], ord[] = {1, 2, 3, 4};\n\nclass Fenwick {\nprivate:\nint t[V + 10];\ninline int lowbit(int x) { return x &amp; -x; }\npublic:\nvoid init() { memset(t, 0, sizeof t); }\nvoid add(int x, int v) { while(x &lt;= V) t[x] += v, x += lowbit(x); }\nint que(int x) { int ret = 0; while(x) ret += t[x], x -= lowbit(x); return ret; }\n} tr;\nstruct Operations {\nint tyq, x, y, v;\nOperations() { tyq = x = y = v = 0; }\nOperations(int a, int b, int c, int d) : tyq(a), x(b), y(c), v(d) {}\nbool operator &lt; (const Operations &amp;t) const {\nif(x != t.x) return x &lt; t.x;\nreturn tyq &lt; t.tyq;\n}\n} b[si &lt;&lt; 1];\n\nint solve(int p[]) {\nint e = p[0], f = p[1], g = p[2];\ntr.init(); int ret = 0, cnt = 0; for(int i = 1; i &lt;= n; ++i) {\nb[++cnt] = Operations(1, a[e][i] - a[f][i], a[f][i] - a[g][i], 0);\nb[cnt].x += (e &gt; f), b[cnt].y += (f &gt; g);\nb[++cnt] = Operations(2, a[f][i] - a[e][i], a[g][i] - a[f][i], a[f][i]);\n}\nsort(b + 1, b + 1 + cnt);\nfor(int i = 1; i &lt;= cnt; ++i) {\nauto [tyq, x, y, v] = b[i];\nif(tyq == 1) tr.add(y + si, 1);\nif(tyq == 2) ret += v * tr.que(y + si);\n}\nreturn ret;\n}\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; m &gt;&gt; n;\nfor(int i = 1; i &lt;= m; ++i) {\nfor(int j = 1; j &lt;= n; ++j) {\ncin &gt;&gt; a[i][j];\n}\n}\nfor(int i = m + 1; i &lt;= 4; ++i) {\nfor(int j = 1; j &lt;= n; ++j) {\na[i][j] = a[i - m][j];\n}\n}\n\nint ans = 0;\nfor(int i = 1; i &lt;= 4; ++i) {\nfor(int j = 1; j &lt;= n; ++j) {\nans += (2ll * n * a[i][j]);\n}\n}\n\ndo {\nans -= solve(ord);\n} while(next_permutation(ord, ord + 4));\n\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n</code></pre>"}, {"location": "sol/other/thupc2023-pre/", "title": "THUPC2023 \u521d\u8d5b\u9898\u89e3", "text": "<p>\u597d\u50cf\u662f\u7b2c\u4e09\u6b21\u8fd8\u662f\u7b2c\u4e8c\u6b21\u6253 THUPC \u4e86\uff0c\u4e0a\u6b21\u548c Sept \u8fd8\u6709 clf \u7ec4\u961f\uff0c\u7ed3\u679c\u5927\u5bb6\u90fd\u5f00\u6446\u4e86\uff09</p> <p>\u8fd9\u6b21\u548c JR \u8fd8\u6709 leexzq \u7ec4\u961f\uff0c\u961f\u540d\uff1a<code>\u94f6\u724c\u9009\u624b\u5594\u76ae\u53ea\u56e0</code>\u3002</p> <p>\u6210\u5206\u6bd4\u8f83\u590d\u6742\uff1b</p> <p></p> <p>\u6211\u8d21\u732e\u4e86\u6700\u540e\u4e00\u9898\uff0c\u7b2c\u4e8c\u9898\uff0c\u7b2c\u4e00\u9898\u7684\u4e00\u534a\u3002</p> <p>\u53ea\u5199\u70b9\u6211\u4f1a\u7684\u3002</p> <p>THUPC \u600e\u4e48\u8fd9\u4e48\u559c\u6b22\u5206\u8ba8\u535a\u5f08\u8bba\u548c\u5de5\u4e1a\u9898/zhem</p> <p>\u9898\u9762</p>"}, {"location": "sol/other/thupc2023-pre/#a-", "title": "A - \u5927\u5bcc\u7fc1", "text": "<p>\u9996\u5148\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u4e8b\u60c5\u662f\uff0c\u5982\u679c\u6211\u4eec\u8003\u8651\u65e0\u6743\u6811\u7684\u60c5\u51b5\uff0c\u663e\u7136\u5148\u624b\u6700\u4f18\u7b56\u7565\u662f\u9009 dep \u5c0f\u7684\u3002</p> <p>\u5982\u679c\u540c\u5c42\u6765\u770b\uff0c\u90a3\u4f18\u5148\u9009 siz \u5927\u7684\uff0c\u597d\uff0c\u73b0\u5728\u6211\u4eec\u4f1a\u65e0\u6743\u6811\u4e86\u3002</p> <p>\u90a3\u4e48\u8003\u8651\u5e26\u6743\u600e\u4e48\u505a\uff0c\u4e5f\u5f88\u7b80\u5355\uff0c\u5728\u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5c3d\u91cf\u9009 w \u5c0f\u7684\u5c31\u884c\uff01</p> <p>\u7ed3\u8bba\u6211\u662f\u611f\u6027\u7406\u89e3\u8bc1\u660e\u7684\uff0c\u6216\u8005\u8bf4\u778e\u8499\u611f\u6027\u7406\u89e3\u4e86\u4e00\u4e0b\u76f4\u63a5\u5f00\u83bd\u4e86\uff0c\u6240\u4ee5\u5c31\u4e0d\u653e\u4e0a\u6765\u4e86\uff0c\u6709\u4f1a\u8bc1\u660e\u7684\u4f6c\u53ef\u4ee5\u8bc4\u8bba\u533a\u53d1\u8868\u9ad8\u89c1\uff01</p> <p>\u6240\u4ee5\u6211\u4eec\u5148\u7ed9\u8282\u70b9\u6309\u7167 \\(dep - siz + w\\) \u6392\u5e8f\uff0c\u4f18\u5148\u9009\u8fd9\u4e2a\u6743\u503c\u66f4\u5c0f\u7684\u5c31\u884c\u3002</p> <p>\u7136\u540e\u600e\u4e48\u7ef4\u62a4\u7b54\u6848\u5462\uff1f\u8fd9\u4e2a\u662f\u4e00\u4e2a\u7ecf\u5178 trick \u554a\uff0c\u8981\u67e5\u5b50\u6811\u548c\u7956\u5148\uff0c\u6211\u4eec\u76f4\u63a5 dfs \u5e8f\u62c9\u4e0b\u6765\uff0cFenwick \u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\u3002</p> <p>\u4ee3\u7801\u662f xzq \u5199\u7684\u3002</p> Code <pre><code>//I play to win\n#include&lt;bits/stdc++.h&gt;\n\n#define ll long long\n#define ull unsigned ll\n#define pi pair&lt;int,int&gt;\n#define ld long double\n#define vi vector&lt;int&gt;\n#define all(x) begin(x),end(x)\nusing namespace std;\ninline ll read()\n{\nll x=0,f=1;char c=getchar();\nfor(;!isdigit(c);c=getchar())if(c=='-')f=-1;\nfor(;isdigit(c);c=getchar())x=(x&lt;&lt;3)+(x&lt;&lt;1)+(c^48);\nreturn x*f;\n}\ninline void out(ll x){if(x&gt;9)out(x/10);putchar(x%10^48);}\ninline void print(ll x,char c='\\n'){if(x&lt;0)putchar('-'),x=-x;out(x),putchar(c);}\nconst int N=5e5+10;\nint fa[N],dfn[N],w[N],siz[N],dep[N],id[N];\nvector&lt;int&gt;v[N];\nstruct BIT\n{\nint c[N];\nvoid add(int x,int v){for(;x&lt;N;x+=x&amp;-x)c[x]+=v;}\nint ask(int x){int r=0;for(;x;x&amp;=x-1)r+=c[x];return r;}\n}T[2][2];\nvoid dfs(int x)\n{\nsiz[x]=1,dep[x]=dep[fa[x]]+1,dfn[x]=++dfn[0];\nfor(int y:v[x])dfs(y),siz[x]+=siz[y];\n}\nint main()\n{\nint n=read();\nll ans=0;\nfor(int i=1;i&lt;=n;i++)w[i]=read(),id[i]=i;\nfor(int i=2;i&lt;=n;i++)v[fa[i]=read()].push_back(i);\ndfs(1),sort(id+1,id+n+1,[](int x,int y){return w[x]+dep[x]-siz[x]&lt;w[y]+dep[y]-siz[y];});\nfor(int i=1;i&lt;=n;i++)\n{\nint k=i&amp;1,x=id[i],l=dfn[x],r=dfn[x]+siz[x]-1;\nif(k)ans-=T[k^1][0].ask(l),ans+=T[k^1][1].ask(r)-T[k^1][1].ask(l-1),ans-=w[x];//\u5148\u624b\nelse ans+=T[k^1][0].ask(l),ans-=T[k^1][1].ask(r)-T[k^1][1].ask(l-1);\nT[k][0].add(l,1),T[k][0].add(r+1,-1),T[k][1].add(l,1);\n// cout&lt;&lt;x&lt;&lt;\" \"&lt;&lt;l&lt;&lt;\" \"&lt;&lt;r&lt;&lt;\" \"&lt;&lt;ans&lt;&lt;endl;\n}\nprint(ans);\n}\n</code></pre>"}, {"location": "sol/other/thupc2023-pre/#b-", "title": "B - \u62e7\u87ba\u4e1d", "text": "<p>\u9996\u5148\u89c2\u5bdf\u53d1\u73b0\uff0c\u5982\u679c \\(k \\ge n\\) \u663e\u7136\u4e00\u6b65\u5bf9\u5427\uff0c\u5982\u679c \\(k &lt; n\\) \u7684\u65f6\u5019 \\(k = 1\\) \u663e\u7136\u65e0\u89e3\u5bf9\u5427\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5269\u4e0b\u7684\u90e8\u5206\uff08\\(k &lt; n, k &gt; 1\\)\uff09\u600e\u4e48\u505a\u3002</p> <p>\u624b\u63a8\u6a21\u62df\u53ef\u4ee5\u53d1\u73b0\uff0c\\(k = 2\\) \u7b54\u6848\u662f \\(2^{n - 2}\\)\u3002</p> <p>\\(k \\ge 3\\) \u7684\u624b\u63a8\u5f88\u96be\u53d7\u3002</p> <p>\u6ce8\u610f\u5230\u8fd9\u4e2a\u95ee\u9898\u5177\u6709\u6781\u5176\u660e\u663e\u7684\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u4e8c\u5206\u7ec4\u88c5\u4e86\u591a\u5c11\u4e2a\u6a21\u5757\uff0c\u7136\u540e\u679a\u4e3e\u5929\u6570\uff0c\u663e\u7136\u7684\u7b56\u7565\u662f\u8981\u5e73\u5747\u5206\u914d\uff0c\u56e0\u4e3a\u8001\u677f\u4f1a\u5c3d\u529b\u4e0d\u8ba9\u5c0f E \u8fbe\u6210\u76ee\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6700\u5c0f\u5316\u635f\u5931\u3002</p> <p>\u7136\u540e check \u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\uff0c\u8fd9\u4e2a\u4e1c\u897f\u590d\u6742\u5ea6 \\(O(n^2\\log n)\\)\uff0c\u4e5f\u4e0d\u77e5\u9053\u548b\u4f18\u5316\u3002</p> <p>\u4e8e\u662f\u9009\u62e9\u4e86\u4e0b\u7b56\uff0c\u8003\u8651 OEIS\uff0c\u4e8e\u662f\u6211\u6253\u51fa \\(k = 3\\) \u7684\u524d\u51e0\u9879\uff0c\u8f93\u8fdb OEIS \u4e0b\u53d1\u73b0\u6709\u8fd9\u4e2a\u6570\u5217\uff01\uff01\uff01</p> <p>https://oeis.org/A073941</p> <p>\u7136\u540e\u6211\u6ce8\u610f\u5230\u516c\u5f0f\u662f \\(a(n) = \\lceil \\sum\\limits_{k = 1}^{n - 1} a(k) / 2\\rceil, n \\ge 2, a(1) = 1\\)\u3002</p> <p>\u4e8e\u662f\u6211\u5c1d\u8bd5\u628a\u8fd9\u91cc\u7684\u5e38\u6570\u9879\u66ff\u6362\u6210 \\(k\\) \u76f8\u5173\u7684\u5f0f\u5b50\uff0c\u53d1\u73b0\u53ea\u6709 \\(2\\)\uff0c\u4e8e\u662f\u6211\u4eec\u628a\u5b83\u53d8\u6210 \\(k - 1\\)\u3002</p> <p>\u5e26\u5165\u548c \\(k = 4\\) \u66b4\u529b\u5bf9\u62cd\u53d1\u73b0\u662f\u5bf9\u7684\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u5199\u4e2a\u9ad8\u7cbe\u6216\u8005 py \u4ea4\u4e0a\u53bb\u5c31\u884c\u4e86\uff01\uff01\uff01</p> <p>\u9ad8\u7cbe\u5ea6\u677f\u5b50\u6ca1\u5199\u6574\u9664\uff0c\u5c31\u76f4\u63a5\u73b0\u5b66 py \u4e86\uff1a</p> <p>\u4ee3\u7801\u6211\u5199\u7684\u3002</p> Code <pre><code># author : black_trees\n\nn, k = map(int, input().split())\n\nif k &gt;= n:\n    print(1)\nif k &lt; n and k == 1:\n    print(\"Poor E.S.!\")\nif k &lt; n and k == 2:\n    print(2**(n-2))\nif k &lt; n and k &gt;= 3:\n    ans = 1\n    s = k - 1\n    for i in range(k - 1, n):\n        ans = (s + k - 2) // (k - 1)\n        s = s + ans\n    print(ans)\n</code></pre> <p>\u4e71\u641e\u505a\u6cd5\uff0c\u53ea\u662f\u535a\u541b\u4e00\u7b11\uff0c\u4e0d\u5fc5\u5728\u610f\u3002</p>"}, {"location": "sol/other/thupc2023-pre/#j-", "title": "J - \u6b3a\u8bc8\u6e38\u620f", "text": "<p>\u76d2\uff01</p> <p>\u542c\u8bf4\u662f\u7eb3\u4ec0\u5747\u8861\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u63a8\u5f0f\u5b50\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\uff01</p> <p>\u53ef\u4ee5\u770b\u770b\u53ef\u7231 tyq \u7684\u9898\u89e3\uff1aP9142 [THUPC 2023 \u521d\u8d5b] LIAR GAME! \u9898\u89e3 &amp; \u7eb3\u4ec0\u5747\u8861\u6d45\u63a2</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;cassert&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n// #define int long long\n\nusing namespace std;\nusing i64 = long long;\nusing ldb = long double;\nusing u64 = unsigned long long;\n\nconstexpr i64 safe_mod(i64 x, i64 m) { return x %= m, x &lt; 0 ? x + m : x; }\nconstexpr i64 pow_mod_constexpr(i64 x, i64 n, int m) {\nif(m == 1) return 0;\nunsigned _m = m; uint64_t r = 1, _x = safe_mod(x, m);\nfor(; n; n &gt;&gt;= 1, _x = _x * _x % _m) if(n &amp; 1) r = r * _x % m;\nreturn r;\n}\nconstexpr bool is_prime_constexpr(int n) {\nif(n &lt;= 1) return false;\nif(n == 2 || n == 7 || n == 61) return true;\nif(n % 2 == 0) return false;\ni64 d = n - 1; while(~d &amp; 1) d /= 2;\nfor(i64 a : {2, 7, 61}) {\ni64 t = d, y = pow_mod_constexpr(a, t, n);\nwhile(t != n - 1 &amp;&amp; y != 1 &amp;&amp; y != n - 1) y = y * y % n, t &lt;&lt;= 1;\nif(y != n - 1 &amp;&amp; t % 2 == 0) return false;\n}\nreturn true;\n}\nconstexpr pair&lt;i64, i64&gt; inv_gcd(i64 a, i64 b) {\na = safe_mod(a, b);\nif(a == 0) return {b, 0};\ni64 s = b, t = a, m0 = 0, m1 = 1;\nwhile(t) {\ni64 u = s / t; s -= t * u, m0 -= m1 * u;\ni64 tmp = s; s = t, t = tmp, tmp = m0, m0 = m1, m1 = tmp;\n}\nif(m0 &lt; 0) m0 += b / s;\nreturn {s, m0};\n}\nstruct Barrett_Reduction {\nunsigned m; uint64_t im;\nBarrett_Reduction(unsigned m) :m(m), im(~0ull / m + 1) {}\nunsigned mul(unsigned a, unsigned b) const {\nuint64_t z = (uint64_t)a * b, x = (__uint128_t)z * im &gt;&gt; 64; unsigned v = z - x * m;\nreturn m &lt;= v ? v + m : v;\n}\n};\ntemplate&lt;int m&gt; struct static_modint {\nusing _mint = static_modint;\npublic:\nstatic _mint raw(int v) { _mint x; return x._v = v, x; }\nstatic_modint() :_v(0) {}\ntemplate&lt;class __Tp&gt; static_modint(__Tp v) { i64 x = v % m; _v = x &lt; 0 ? x + m : x; }\nunsigned val() const { return _v; }\n_mint&amp; operator ++ () { if(++_v == m) _v = 0; return *this; }\n_mint&amp; operator -- () { if(!_v--) _v = m - 1; return *this; }\n_mint operator ++ (int) { _mint res = *this; ++*this; return res; }\n_mint operator -- (int) { _mint res = *this; --*this; return res; }\n_mint&amp; operator += (const _mint&amp; rhs) { _v += rhs._v; if(_v &gt;= m) _v -= m; return *this; }\n_mint&amp; operator -= (const _mint&amp; rhs) { _v -= rhs._v; if(_v &gt;= m) _v += m; return *this; }\n_mint&amp; operator *= (const _mint&amp; rhs) { uint64_t z = _v; z *= rhs._v, _v = z % m; return *this; }\n_mint&amp; operator /= (const _mint&amp; rhs) { return *this = *this * rhs.inv(); }\n_mint operator + () const { return *this; }\n_mint operator - () const { return _mint() - *this; }\n_mint pow(i64 n) const { assert(0 &lt;= n); _mint x = *this, r = 1; for(; n; n &gt;&gt;= 1, x *= x) if(n &amp; 1) r *= x; return r; }\n_mint inv() const{ if(prime) { assert(_v); return pow(m - 2); } else { auto eg = inv_gcd(_v, m); assert(eg.first == 1); return eg.second; } }\nfriend _mint operator + (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) += rhs; }\nfriend _mint operator - (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) -= rhs; }\nfriend _mint operator * (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) *= rhs; }\nfriend _mint operator / (const _mint&amp; lhs, const _mint&amp; rhs) { return _mint(lhs) /= rhs; }\nfriend bool operator == (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v == rhs._v; }\nfriend bool operator != (const _mint&amp; lhs, const _mint&amp; rhs) { return lhs._v != rhs._v; }\nprivate:\nunsigned _v;\nstatic constexpr bool prime = is_prime_constexpr(m);\n};\nusing modint = static_modint&lt;998244353&gt;;\n\nconst int si = 2e6 + 10;\n\nint n;\nmodint a[si], b[si];\n\nsigned main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\na[0] = b[0] = 1, a[1] = 2, b[1] = 3;\nfor(int i = 2; i &lt;= n; ++i) {\na[i] = (b[i - 1] + (i - 1) * a[i - 1]);\na[i] = a[i] / i, a[i] *= 2, b[i] = b[i - 1] + a[i];\n}\n\nmodint t = n + 2;\nmodint ans = 2 * t.inv();\ncout &lt;&lt; ans.val() &lt;&lt; \" \";\nfor(int i = 1; i &lt;= n; ++i)\ncout &lt;&lt; (ans = t.inv()).val() &lt;&lt; \" \\n\"[i == n];\n\nmodint ss = 0;\nfor(int i = 0; i &lt;= n; ++i) ss += a[i];\n\nfor(int i = 0; i &lt;= n; ++i)\ncout &lt;&lt; (ans = a[i] / ss).val() &lt;&lt; \" \\n\"[i == n];\n\nreturn 0;\n}\n</code></pre>"}, {"location": "sol/other/thupc2023-pre/#k-", "title": "K - \u4f17\u6570", "text": "<p>JR \u548c xzq \u5c0f\u8ba8\u8bba\u4e86\u4e00\u624b\u5c31\u4f1a\u4e86\uff0c\u6211\u6ca1\u770b\u3002</p> <p>\u5177\u4f53\u5c31\u662f\uff0c\u5047\u8bbe\u5f53\u524d\u6700\u5927\u6570\u662f \\(mx\\)\uff0c\u6709 \\(k\\) \u4e2a \\(mx\\)\uff0c\u5c31\u653e \\(k\\) \u4e2a\u5728\u540e\u9762\uff0c\u7136\u540e\u8003\u8651\u5bf9 \\(mx - 1\\) \u9012\u5f52\u505a\u8fd9\u4e2a\u8fc7\u7a0b\u3002</p> <p>\u4ee3\u7801 xzq \u5199\u7684\uff0cJR \u6253\u6446\u3002</p> Code <pre><code>//I play to win\n#include&lt;bits/stdc++.h&gt;\n\n#define ll long long\n#define ull unsigned ll\n#define pi pair&lt;int,int&gt;\n#define ld long double\n#define vi vector&lt;int&gt;\n#define all(x) begin(x),end(x)\nusing namespace std;\ninline ll read()\n{\nll x=0,f=1;char c=getchar();\nfor(;!isdigit(c);c=getchar())if(c=='-')f=-1;\nfor(;isdigit(c);c=getchar())x=(x&lt;&lt;3)+(x&lt;&lt;1)+(c^48);\nreturn x*f;\n}\ninline void out(ll x){if(x&gt;9)out(x/10);putchar(x%10^48);}\ninline void print(ll x,char c='\\n'){if(x&lt;0)putchar('-'),x=-x;out(x),putchar(c);}\nconst int N=5e5+10;\nll a[N],b[N],s[N];\nint main()\n{\nint n=read();\nll use=0,ans=0;\nfor(int i=1;i&lt;=n;i++)a[i]=b[i]=read();\nsort(b+1,b+n+1);\nfor(int i=1;i&lt;=n;i++)s[i]=b[i]+s[i-1];\nfor(int i=n;i;i--)\n{\nif(a[i]&lt;use)continue;\nint l=upper_bound(b+1,b+n+1,use)-b,r=upper_bound(b+1,b+n+1,a[i])-b-1;\nans+=i*(s[r]-s[l-1]-use*(r-l+1)+(a[i]-use)*(n-r)),use=a[i];\n// cout&lt;&lt;l&lt;&lt;\" \"&lt;&lt;r&lt;&lt;\" \"&lt;&lt;ans&lt;&lt;endl;\n}\nprint(ans);\n}\n</code></pre>"}, {"location": "sol/other/thupc2023-pre/#m-", "title": "M - \u4e16\u754c\u676f", "text": "<p>\u4e2d\u56fd\u961f\u725b\u903c\uff01</p> Code hylxzq <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncout &lt;&lt; \"China\" &lt;&lt; endl;    return 0;\n}\n</code></pre> <pre><code>//I play to win\n#include&lt;bits/stdc++.h&gt;\n\n#define ll long long\n#define ull unsigned ll\n#define pi pair&lt;int,int&gt;\n#define ld long double\n#define vi vector&lt;int&gt;\n#define all(x) begin(x),end(x)\nusing namespace std;\ninline ll read()\n{\nll x=0,f=1;char c=getchar();\nfor(;!isdigit(c);c=getchar())if(c=='-')f=-1;\nfor(;isdigit(c);c=getchar())x=(x&lt;&lt;3)+(x&lt;&lt;1)+(c^48);\nreturn x*f;\n}\ninline void out(ll x){if(x&gt;9)out(x/10);putchar(x%10^48);}\ninline void print(ll x,char c='\\n'){if(x&lt;0)putchar('-'),x=-x;out(x),putchar(c);}\nconst int N=1e5+10;\nint main()\n{\nputs(\"China\");\n}\n</code></pre>"}, {"location": "sol/other/usaco23janbronze/", "title": "USACO23Jan Bronze", "text": "<p>\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u90fd\u662f\u7b80\u5355\u9001\u5206\u9898\u3002</p> <p>\u5f88\u53ef\u60dc\u6211\u573a\u4e0a\u5bf9\u7740 T2 \u60f3\u4e86\u534a\u5929 \\(M \\le 2e5\\)\uff0c\u4e00\u5c0f\u65f6\u540e\u624d\u53d1\u73b0 \\(M \\le 10\\)\u3002</p> <p>\u5c0f\u4e11\u3002</p> <p>\u653e\u4e2a\u4ee3\u7801\u5e94\u8be5\u5c31\u80fd\u7406\u89e3\u4e86\u3002</p> T1 <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;vector&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint n; cin &gt;&gt; n;\nstring s; cin &gt;&gt; s;\ns = ' ' + s;\nint fg = 0, fh = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nif(s[i] == 'G') {fg = i; break; }\n}\nfor(int i = 1; i &lt;= n; ++i) {\nif(s[i] == 'H') {fh = i; break; }\n}\nint lsg = 0, lsh = 0;\nfor(int i = n; i &gt;= 1; --i) {\nif(s[i] == 'G') {lsg = i; break; }\n}\nfor(int i = n; i &gt;= 1; --i) {\nif(s[i] == 'H') {lsh = i; break; }\n}\nstd::vector&lt;int&gt; a(n + 2);\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; a[i];\n\nint leadg = 0, leadh = 0;\nif(a[fg] &gt;= lsg) leadg = fg;\nif(a[fh] &gt;= lsh) leadh = fh;\nint ans = (leadg &amp;&amp; leadh);\nint cnt1 = 0, cnt2 = 0;\nfor(int i = fg; i &gt;= 1; --i) {\nif(s[i] == 'H' &amp;&amp; i != leadh &amp;&amp; a[i] &gt;= leadg) ++cnt1;\n}\nfor(int i = fh; i &gt;= 1; --i) {\nif(s[i] == 'G' &amp;&amp; i != leadg &amp;&amp; a[i] &gt;= leadh) ++cnt2;\n}\nif(leadg &gt; 0) ans += cnt1;\nif(leadh &gt; 0) ans += cnt2;\ncout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> T2 <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e2 + 10;\n\nint n, m;\nint s[si], t[si], c[si];\nint a[si], b[si], p[si], w[si];\nint state[si];\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i) cin &gt;&gt; s[i] &gt;&gt; t[i] &gt;&gt; c[i];\nfor(int i = 1; i &lt;= m; ++i)\ncin &gt;&gt; a[i] &gt;&gt; b[i] &gt;&gt; p[i] &gt;&gt; w[i];\nint ans = 0x3f3f3f3f;\nfor(int msk = 0; msk &lt; (1 &lt;&lt; m); ++msk) {\nmemset(state, 0, sizeof state);\nint ret = 0;\nfor(int i = 1; i &lt;= m; ++i)\nif(msk &gt;&gt; (i - 1) &amp; 1) {\nfor(int j = a[i]; j &lt;= b[i]; ++j)\nstate[j] += p[i];\nret += w[i];\n}\nbool f = true;\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = s[i]; j &lt;= t[i]; ++j) {\nif(state[j] &lt; c[i]) {\nf = false; break;\n}\n}\nif(!f) break;\n}\nif(!f) continue;\nans = min(ans, ret);\n}   cout &lt;&lt; ans &lt;&lt; endl;\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre> T3 <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nstring s; cin &gt;&gt; s;\nint ans = 0x3f3f3f3f;\nint n = s.size(); s = ' ' + s;\nfor(int i = 1; i + 2 &lt;= n; ++i) {\nif(s[i + 1] != 'O') continue;\nint ret = (s[i] != 'M') + (s[i + 2] != 'O');\nret += n - 3, ans = min(ans, ret);\n}\ncout &lt;&lt; ((ans == 0x3f3f3f3f) ? -1 : ans) &lt;&lt; endl;\n}\n\nreturn 0;\n}\n\n// ()()()(?\n</code></pre>"}, {"location": "sol/other/usaco23jansilver/", "title": "USACO23Jan Silver", "text": ""}, {"location": "sol/other/usaco23jansilver/#t1", "title": "T1", "text": "<p>\u8003\u8651\u7c7b\u4f3c\u7f6e\u6362\u73af\u7684\u8fde\u8fb9\u3002</p> <p>\u7136\u540e\u663e\u7136\u4e00\u4e2a\u70b9\u4e0d\u80fd\u6709\u591a\u4e2a\u51fa\u8fb9\uff0c\u4e0d\u7136\u56e0\u4e3a\u540c\u6b65\u53d8\u5316\uff0c\u5b83\u5fc5\u7136\u65e0\u89e3\u3002</p> <p>\u7136\u540e\u4e00\u4e2a\u70b9\u663e\u7136\u53ef\u4ee5\u6709\u591a\u4e2a\u5165\u8fb9\u3002</p> <p>\u4e00\u4e2a\u94fe\u663e\u7136\u76f4\u63a5\u5012\u7740\u505a\u5c31\u884c\u3002</p> <p>\u6ce8\u610f\u5230\u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u6211\u4eec\u7684\u5904\u7406\u65b9\u5f0f\u5e94\u8be5\u662f\u627e\u4e00\u4e2a\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\uff08\u4e14\u6ca1\u6709\u5728\u5e8f\u5217\u91cc\u51fa\u73b0\u8fc7\uff09\uff0c\u65ad\u5f00\uff0c\u7136\u540e\u5c31\u662f\u4e00\u6761\u94fe\u3002</p> <p>\u4f46\u662f\u8fd9\u91cc\u53ea\u6709 52 \u4e2a\u5b57\u7b26\uff0c\u6709\u53ef\u80fd\u627e\u4e0d\u5230\u8fd9\u6837\u7684\u201c\u4e2d\u8f6c\u70b9\u201d\uff0c\u4f46\u662f\u6ce8\u610f\u5230\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u6307\u5411\u4e86\u4e00\u4e2a\u73af\u4e0a\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u70b9\u4f5c\u4e3a\u201c\u4e2d\u8f6c\u201d\u70b9\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7f29\u70b9\uff0c\u53cd\u5411\u5efa\u56fe\uff0c\u5982\u679c\u4e00\u4e2a\u73af\u51fa\u73b0\u5728\u4e86\u5165\u5ea6\u4e0d\u4e3a\u96f6\u7684\u8282\u70b9\uff0c\u663e\u7136\u65e0\u89e3\u3002</p> <p>\u7136\u540e\u6709\u51e0\u4e2a\u5751\u70b9\uff0c\u7f29\u5b8c\u70b9\u4e4b\u540e\u7edf\u8ba1\u7b54\u6848\u8981\u7279\u6b8a\u8003\u8651\u6709\u56e2\u548c\u6ca1\u6709\u56e2\u7684\u60c5\u51b5\uff0c\u7136\u540e\u8fd8\u8981\u53bb\u6389\u91cd\u8fb9\u3002</p> <p>\u7136\u540e\u8fd8\u6709\uff0c\u5982\u679c\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(51\\) \u7684\u73af\u51fa\u73b0\u4e86\uff0c\u53e6\u5916\u4e00\u4e2a\u5b57\u7b26\u662f\u81ea\u73af\uff0c\u4e5f\u4f1a\u5bc4\u6389\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u8fd8\u662f Wa on 10, 13, 14, 15\u3002</p> <p>\u5148\u653e\u7740\u4ee3\u7801\uff0c\u73b0\u5728\u4ea4\u4e0d\u4e86\u3002</p> <p>\u611f\u89c9\u8fd9\u4e2a T1 \u975e\u5e38\u6076\u5fc3\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;map&gt;\n#include &lt;stack&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint n, m;\nint tot = 0, tt = 0;\nint head[si], hd[si];\nstruct Edge { int ver, Next; } e[si &lt;&lt; 1], ee[si &lt;&lt; 1];\ninline void add(int u, int v) { e[tot] = (Edge){v, head[u]}, head[u] = tot++; }\ninline void addd(int u, int v) { ee[tt] = (Edge){v, hd[u]}, hd[u] = tt++; }\nint tyq = 0; // occ of all letters.\n\nint cnt = 0, tim = 0;\nstd::stack&lt;int&gt;st;\nbool ins[si];\nint dfn[si], low[si];\nint c[si], num[si];\nvoid tarjan(int u) {\ndfn[u] = low[u] = ++tim;\nst.push(u), ins[u] = true;\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(!dfn[v]) {\ntarjan(v);\nlow[u] = min(low[u], low[v]);\n}\nelse if(ins[v]) low[u] = min(low[u], dfn[v]);\n}\nif(low[u] == dfn[u]) {\nint x; ++cnt;\ndo {\nx = st.top(), st.pop();\nins[x] = false, c[x] = cnt, num[cnt]++;\n} while(u != x);\n}\n}\nstd::map&lt;char, int&gt;mp, mpp;\nint ind[si], clz = 0, oug[si];\nstd::map&lt;std::pair&lt;int, int&gt;, bool&gt; vis;\nint out[si];\n\nvoid Init() {\nvis.clear();\nmp.clear(), mpp.clear();\nwhile(!st.empty()) st.pop();\ntot = tt = clz = tyq = cnt = tim = 0;\nmemset(ins, false, sizeof ins);\nmemset(c, 0, sizeof c), memset(num, 0, sizeof num);\nmemset(dfn, 0, sizeof dfn), memset(low, 0, sizeof low);\nmemset(head, -1, sizeof head), memset(hd, -1, sizeof hd);\nmemset(ind, 0, sizeof ind), memset(oug, 0, sizeof oug), memset(out, 0, sizeof out);\n}\nint dfs(int u) {\nint ret = num[u];\nfor(int i = hd[u]; ~i; i = ee[i].Next) {\nint v = ee[i].ver;\nret += dfs(v);\n}\nreturn ret;\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\nint T; cin &gt;&gt; T;\nwhile(T--) {\nInit(); bool nosol = false;\nstring s, t;\ncin &gt;&gt; s &gt;&gt; t;\nn = (int)s.size();\ns = ' ' + s, t = ' ' + t;\n\nfor(int i = 1; i &lt;= n; ++i) {\nif(!mpp[s[i]]) mpp[s[i]] = ++tyq;\nif(!mpp[t[i]]) mpp[t[i]] = ++tyq; }\nfor(int i = 1; i &lt;= n; ++i) {\nif(s[i] != t[i]) {\nif(!mp[s[i]]) mp[s[i]] = ++clz;\nif(!mp[t[i]]) mp[t[i]] = ++clz;\nif(vis[{mp[s[i]], mp[t[i]]}]) continue;\nadd(mp[s[i]], mp[t[i]]), ++oug[mp[s[i]]];\nvis[{mp[s[i]], mp[t[i]]}] = true;\nif(oug[mp[s[i]]] &gt; 1) {\nnosol = true;\nbreak;\n}\n}\n}\nfor(int i = 1; i &lt;= n; ++i) {\nif(s[i] == t[i]) {\nif(!mp[s[i]]) continue;\nif(oug[mp[s[i]]]) {\nnosol = true;\nbreak;\n}\n}\n}\nif(nosol) { cout &lt;&lt; \"-1\" &lt;&lt; endl; continue; }\nfor(int i = 1; i &lt;= clz; ++i) {\nif(!dfn[i]) tarjan(i);\n}\nfor(int u = 1; u &lt;= clz; ++u) {\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(c[u] == c[v]) continue;\naddd(c[v], c[u]), ++ind[c[u]], ++out[c[v]];\n}\n}\n\nint ans = 0;\nfor(int i = 1; i &lt;= cnt; ++i) {\nif(ind[i] &gt; 0 &amp;&amp; num[i] &gt; 1) {\nnosol = true;\nbreak;\n}\nif(!ind[i]) {\nans += dfs(i);\nif(num[i] == 1) ans--;\nelse {\nif(!out[i]) {\nif(tyq &lt; 52) ans++;\nelse {\nnosol = true; break;\n}\n}\n}\n}\n}\nif(nosol) { cout &lt;&lt; \"-1\" &lt;&lt; endl; continue; }\ncout &lt;&lt; ans &lt;&lt; endl;\n} return 0;\n}\n\n// ()()()(?`\n</code></pre>"}, {"location": "sol/other/usaco23jansilver/#t2", "title": "T2", "text": "<p>\u8fd8\u6ca1\u6539\u3002</p>"}, {"location": "sol/other/usaco23jansilver/#t3", "title": "T3", "text": "<p>\u8003\u8651\u8d2a\u5fc3\u505a\u4e00\u4e2a\u7c7b\u4f3c\u6b27\u62c9\u8def\u7684\u4e1c\u897f\u3002</p> <p>\u5c31\u662f\u4f60\u5bf9\u4e8e\u4e00\u4e2a\u5947\u6570\uff0c\u4f60\u663e\u7136\u4f1a\u8d70\u8fc7\u53bb\u4e0d\u8d70\u56de\u6765\uff0c\u90a3\u5c31\u5148\u8f6c\uff0c\u7136\u540e\u8f6c\u5230\u53ea\u5269 1 \u4e86\u518d\u8d70\u8fc7\u53bb\uff0c\u4e00\u6bb5\u4e5f\u662f\u4e00\u6837\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u5076\u6570\uff0c\u4f60\u4f1a\u8d70\u56de\u6765\uff0c\u6240\u4ee5\u5176\u5b9e\u53ef\u4ee5\u8003\u8651\u4e00\u6bb5\u4e00\u6bb5\u7684\uff0c\u5148\u8d70\u901a\u7136\u540e\u62c9\u56de\u6765\uff0c\u591a\u7684\u4e5f\u662f\u8f6c\u4e24\u4e0b\u5c31\u6ca1\u4e86\u3002</p> <p>\u56e0\u4e3a\u4fdd\u8bc1\u6709\u89e3\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u7ba1\u90a3\u4e48\u591a\uff0c\u76f4\u63a5\u6784\u9020\u5c31\u884c\u4e86\u3002</p> <p>\u6211\u8d5b\u65f6\u6ca1\u770b\u5230\u8981\u6700\u5c0f\u5316\u6b65\u6570\uff0c\u4f46\u662f\u778e\u6574\u7684\u4e5f\u5bf9\u4e86\uff0c\u5f88\u5de7\u3002</p> Code <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e6 + 10;\n\nint n, a[si], ans[si], tot = 0;\n\nvoid dfs(int u, int lst) {\nif(lst == 0) {\nwhile(a[u]) a[u]--, dfs(u + 1, 0);\nwhile(a[u - 1]) a[u - 1]--, dfs(u - 1, 1);\n}\nelse {\nwhile(a[u - 1]) a[u - 1]--, dfs(u - 1, 1);\nwhile(a[u]) a[u]--, dfs(u + 1, 0);\n}\nans[++tot] = u;\n}\n\nint main() {\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i)\ncin &gt;&gt; a[i];\ndfs(1, 0);\nstring s;\nfor(int i = 1; i &lt; tot; ++i) if(ans[i + 1] &lt; ans[i]) s += 'R';\nelse s += 'L';\nreverse(s.begin(), s.end());\ncout &lt;&lt; s &lt;&lt; endl;\n\n\nreturn 0;\n}\n\n\n// ()()()(?\n</code></pre>"}, {"location": "sol/pro/acwing277/", "title": "ACWing277", "text": ""}, {"location": "sol/pro/acwing277/#acwing277", "title": "Acwing277 \u997c\u5e72", "text": ""}, {"location": "sol/pro/acwing277/#description", "title": "Description", "text": "<p>\u5723\u8bde\u8001\u4eba\u5171\u6709 \\(M\\) \u4e2a\u997c\u5e72\uff0c\u51c6\u5907\u5168\u90e8\u5206\u7ed9 \\(N\\) \u4e2a\u5b69\u5b50\u3002</p> <p>\u6bcf\u4e2a\u5b69\u5b50\u6709\u4e00\u4e2a\u8d2a\u5a6a\u5ea6\uff0c\u7b2c \\(i\\) \u4e2a\u5b69\u5b50\u7684\u8d2a\u5a6a\u5ea6\u4e3a \\(g[i]\\)\u3002</p> <p>\u5982\u679c\u6709 \\(a[i]\\) \u4e2a\u5b69\u5b50\u62ff\u5230\u7684\u997c\u5e72\u6570\u6bd4\u7b2c \\(i\\) \u4e2a\u5b69\u5b50\u591a\uff0c\u90a3\u4e48\u7b2c \\(i\\) \u4e2a\u5b69\u5b50\u4f1a\u4ea7\u751f \\(g[i] \\times a[i]\\) \u7684\u6028\u6c14\u3002</p> <p>\u7ed9\u5b9a \\(N\u3001M\\) \u548c\u5e8f\u5217 \\(g\\)\uff0c\u5723\u8bde\u8001\u4eba\u8bf7\u4f60\u5e2e\u4ed6\u5b89\u6392\u4e00\u79cd\u5206\u914d\u65b9\u5f0f\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5b69\u5b50\u81f3\u5c11\u5206\u5230\u4e00\u5757\u997c\u5e72\uff0c\u5e76\u4e14\u6240\u6709\u5b69\u5b50\u7684\u6028\u6c14\u603b\u548c\u6700\u5c0f\u3002</p> <p>\\(1 \\le N \\le 30\\)\uff0c\\(N \\le M \\le 5000\\)\uff0c\\(1 \\le g_i \\le 10^7\\)</p> <p>\u8981\u6c42\u8f93\u51fa\u65b9\u6848\u3002</p>"}, {"location": "sol/pro/acwing277/#analysis", "title": "Analysis", "text": "<p>\u53d1\u73b0\u76f4\u63a5\u6c42\u89e3\u7684\u8bdd\u5f88\u4e0d\u597d\u641e\uff0c\u56e0\u4e3a\u6bcf\u53d1\u51fa\u4e00\u5757\u997c\u5e72\u7684\u65f6\u5019\uff0c\u4f60\u90fd\u8981\u626b\u4e00\u904d\u8fdb\u884c\u7edf\u8ba1\uff0c\u800c\u4e14\u968f\u7740\u997c\u5e72\u7684\u53d1\u51fa\uff0c\u6028\u6c14\u503c\u662f\u6709\u53ef\u80fd\u51cf\u5c11\u7684\u3002</p> <p>\u56e0\u4e3a\uff0c\u5982\u679c\u7ed9\u7b2c \\(i\\) \u4e2a\u5b69\u5b50\u591a\u5206\u914d\u4e86\u4e00\u4e2a\u7cd6\u679c\uff0c\u5728\u4ed6\u524d\u540e\u7684\u5b69\u5b50\u7684\u6028\u6c14\u503c\u90fd\u662f\u4f1a\u53d7\u5230\u5f71\u54cd\u800c\u6539\u53d8\u7684\uff0c\u627e\u4e0d\u5230\u4e00\u4e2a\u53ef\u4ee5\u53ea\u5f71\u54cd \\(i\\) \u524d\u9762\u6216\u8005\u540e\u9762\u7684 \u201d\u9636\u6bb5\u201c\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u4e00\u4e2a\u6bd4\u8f83\u660e\u663e\u7684\u8d2a\u5fc3\uff0c\u5bf9 \\(g\\) \u964d\u5e8f\u6392\u5e8f\uff0c\u5219\u4ece\u524d\u5f80\u540e\u5206\u914d\u7684\u997c\u5e72\u6570\u91cf\u5fc5\u7136\u5355\u8c03\u4e0d\u4e0a\u5347\u3002</p> <p>\u8fd9\u4e2a\u8bc1\u660e\u53ef\u4ee5\u5229\u7528\u8d2a\u5fc3\u7b97\u6cd5\u4e2d\u7684\u4e00\u4e2a\u7ecf\u5178\u4e0d\u7b49\u5f0f\uff1a\u6392\u5e8f\u4e0d\u7b49\u5f0f\u3002</p> <p>\u5177\u4f53\u8bc1\u660e\u8fc7\u7a0b\u7565\u3002</p> <p>\u6392\u5e8f\u8fc7\u540e\uff0c\u56e0\u4e3a\u4ece\u524d\u5f80\u540e\u5206\u914d\u7684\u997c\u5e72\u6570\u91cf\u5355\u8c03\u4e0d\u4e0a\u5347\uff0c\u90a3\u4e48\u5f53\u524d\u9762\u7684\u5b69\u5b50\u5206\u914d\u7684\u997c\u5e72\u6570\u4e0d\u6539\u53d8\u7684\u65f6\u5019\uff0c</p> <p>\u5982\u679c\u540e\u9762\u7684\u5b69\u5b50\u5206\u914d\u7684\u997c\u5e72\u6570\u91cf\u589e\u52a0\uff0c\u5bf9\u524d\u9762\u7684\u5b69\u5b50\u7684\u6028\u6c14\u503c\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002</p> <p>\u6240\u4ee5\uff0cDP \u7684\u201d\u9636\u6bb5\u201c\u5c31\u6d6e\u73b0\u51fa\u6765\u4e86\uff0c\u5c31\u662f \u201d\u524d \\(i\\) \u4e2a\u5b69\u5b50\u201c \uff08\u6392\u5e8f\u8fc7\u540e\uff09\u3002</p> <p>\u800c\u9898\u76ee\u4e2d\u8fd8\u6709\u4e00\u4e2a\u8981\u7d20 \\(M\\)\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e24\u4e2a\u8981\u7d20\u7ed3\u5408\u8d77\u6765\u5f97\u5230\u4e00\u4e2a DP \u72b6\u6001\uff1a</p> <p>\u8bbe \\(dp_{i,j}\\) \u8868\u793a\u8003\u8651\u524d \\(i\\) \u4e2a\u5b69\u5b50\uff0c\u603b\u5171\u5206\u914d\u4e86 \\(j\\) \u5757\u997c\u5e72\u7684\u6240\u6709\u65b9\u6848\uff0c\u5c5e\u6027\u4e3a\u6028\u6c14\u603b\u548c\u7684 \\(\\min\\)\u3002</p> <p>\u5982\u679c\u76f4\u63a5\u8003\u8651\u5212\u5206\u5b50\u96c6\u7684\u8bdd\uff0c\u662f\u975e\u5e38\u9ebb\u70e6\uff0c\u4e0d\u4fbf\u4e8e\u8f6c\u79fb\u7684\u3002</p> <p>\u8bbe \\(b_i\\) \u4e3a\u6392\u5e8f\u540e\u5904\u5728\u4f4d\u7f6e \\(i\\) \u7684\u5b69\u5b50\u5f53\u524d\u62ff\u5230\u7684\u997c\u5e72\u6570\u91cf\uff0c\u8003\u8651\u5982\u4e0b\u7684\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\\(b_i = b_{i-1}\\) \uff0c\u90a3\u4e48\u8f6c\u79fb\u7684\u65f6\u5019 \\(a_i = a_{i-1}\\)\uff0c\u9700\u8981\u63d0\u524d\u77e5\u9053 \\(a_{i-1}\\)\u3002</li> <li>\\(b_i = b_{i-1}\\) \uff0c\u90a3\u4e48\u8f6c\u79fb\u7684\u65f6\u5019 \\(a_i = a_{i-1} +1\\)\uff0c\u8fd8\u662f\u9700\u8981\u63d0\u524d\u77e5\u9053 \\(a_{i-1}\\)\u3002</li> </ol> <p>\u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u662f\u5728 DP\uff0c\u4f60\u8981\u77e5\u9053 \\(a_{i-1}\\)\uff0c\u5c31\u5fc5\u987b\u8981\u77e5\u9053\u524d\u9762\u6709\u591a\u5c11\u4e2a\u5b69\u5b50\u83b7\u5f97\u7684\u997c\u5e72\u6570\u91cf\u548c \\(i-1\\) \u4e00\u6837\u3002</p> <p>\u8fd9\u6837\u5c31\u9700\u8981\u8bdd\u989d\u5916\u7684\u65f6\u95f4\u53bb\u679a\u4e3e\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6309\u7167\u8fd9\u6837\u63a8\u4e0b\u53bb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u4f1a\u7206\u70b8\uff0c\u65e0\u6cd5\u63a5\u53d7\u3002</p> <p>\u5c31\u50cf\u4e0b\u56fe\u6240\u793a\uff0c\u4f60\u4e0d\u77e5\u9053 \\(?\\) \u7684\u8ddd\u79bb\u5230\u5e95\u6709\u591a\u957f\uff0c\u6240\u4ee5\u9700\u8981\u679a\u4e3e\u3002</p> <p></p> <p>\u4f46\u662f\u89c2\u5bdf\u4e00\u4e0b\uff0c\u5047\u8bbe \\(b_i &gt; 1\\)\uff0c\u4e5f\u5c31\u662f\u4e0b\u56fe\u6240\u793a\u7684\u5de6\u8fb9\u7684\u60c5\u51b5\u3002</p> <p>\u5982\u679c\u6211\u4eec\u7ed9\u524d\u9762\u7684 \\(b\\) \u90fd\u51cf\u53bb \\(1\\)\uff0c\u76f8\u5bf9\u5927\u5c0f\u662f\u6ca1\u6709\u53d8\u7684\uff0c\u6028\u6c14\u503c\u4e5f\u662f\u6ca1\u6709\u589e\u52a0\u7684\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b \\(dp_{i,j} = dp_{i,j - i}\\)\u3002</p> <p>\u800c\u4f60\u679a\u4e3e\u66f4\u65b0\u7684\u65f6\u5019\u4e0d\u53ef\u80fd\u4ece\u4e00\u4e2a\u5206\u914d\u4e86\u66f4\u591a\u997c\u5e72\u7684\u72b6\u6001\u8f6c\u79fb\u5230\u5206\u914d\u4e86\u66f4\u5c11\u7684\u72b6\u6001\u3002</p> <p>\u6240\u4ee5 \\(dp_{i,j - 1}\\) \u4e00\u5b9a\u662f \\(dp_{i,j}\\) \u7684\u5b50\u96c6\uff0c\u5c31\u6ca1\u6709\u540e\u6548\u6027\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f6c\u79fb\u3002</p> <p></p> <p>\u5982\u679c\u662f\u4e0a\u56fe\u53f3\u8fb9\u7684\u60c5\u51b5\uff0c\\(b_i\\) \u7b49\u4e8e \\(1\\)\uff0c\u6211\u4eec\u5c31\u9700\u8981\u77e5\u9053\u524d\u9762\u6709\u591a\u5c11\u4e2a\u5b69\u5b50\u548c \\(b_i\\) \u4e00\u6837\u4e5f\u53ea\u62ff\u5230\u4e86 \\(1\\) \u5757\u3002</p> <p>\u56e0\u4e3a\u6bcf\u4e2a\u5b69\u5b50\u81f3\u5c11\u8981\u62ff\u5230\u4e00\u5757\uff0c\u6240\u4ee5\u4e0d\u80fd\u518d\u51cf\u4e86\u3002</p> <p>\u90a3\u4e48\u5c31\u627e\u5230\u4e00\u4e2a\u4f4d\u7f6e \\(k\\)\uff0c\u4f7f\u5f97 \\(b_k &gt;1,b[k + 1 \\sim i] = 1\\)\u3002</p> <p>\u7136\u540e\u628a \\(b[1\\sim k]\\) \u7684\u90e8\u5206\u8f6c\u5316\u6210\u5de6\u8fb9\u7684\u60c5\u51b5\uff0c\\(b[k+1 \\sim i]\\) \u7684\u90e8\u5206\u5355\u72ec\u8ba1\u7b97\u3002</p> <p>\u56e0\u4e3a\u4f60\u4e0d\u77e5\u9053\u5177\u4f53 \\(k\\) \u5230\u5e95\u662f\u591a\u5c11\uff0c\u6240\u4ee5\u679a\u4e3e\u6240\u6709\u60c5\u51b5\u53d6\u6700\u5c0f\u503c\u5373\u53ef\uff08\u8fd9\u91cc\u5c31\u662f\u5728\u5212\u5206 \\(dp_{i,j}\\)\uff09\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u8fd9\u79cd\u60c5\u51b5\u7684\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[dp_{i,j} = \\min\\limits_{0 \\le k &lt; i}\\{dp_{k,j-(i-k)}+k\\times\\sum\\limits_{l = k+1}^{i} g_l\\}\\] <p>\u540e\u9762\u7684 \\(\\sum\\) \u53ef\u4ee5\u76f4\u63a5\u524d\u7f00\u548c\u505a\u3002</p> <p>\u5f97\u5230\u8fd9\u6837\u7684\u5212\u5206\u65b9\u5f0f\uff08\u7eff\u5b57\u662f\u5bf9\u5e94\u5b50\u96c6\u7684\u610f\u4e49\uff0c\u6a59\u5b57\u662f\u5b50\u96c6\u5bf9\u5e94\u7684\u72b6\u6001\uff09\uff1a</p> <p></p> <p>\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[dp_{i,j} = \\min\\begin{cases}dp_{i,j - i} \\\\ \\min\\{dp_{k,j-(i-k)} + k\\times \\sum\\limits_{l = k + 1}^i g_l\\}\\end{cases}\\] <p>\u521d\u59cb\u5316 \\(dp_{0,0} = 0\\)\uff0c\u5176\u4f59\u4e3a \\(+\\infty\\)\uff0c\u7b54\u6848\u4e3a \\(dp_{n,m}\\)\u3002</p> <p>\u672c\u9898\u8fd8\u8981\u6c42\u8f93\u51fa\u65b9\u6848\uff0c\u6240\u4ee5\u8003\u8651\u8bb0\u5f55\u4e00\u4e2a<code>pair</code> \u6570\u7ec4 \\(pre_{i,j}\\)\uff0c\u8868\u793a\u4f7f \\(dp_{i,j}\\) \u53d1\u751f\u66f4\u65b0\u7684\u72b6\u6001\u7684 \\(i,j\\) \u5206\u522b\u662f\u4ec0\u4e48\u3002</p> <p>\u5728 \\(dp_{i,j}\\) \u53d1\u751f\u66f4\u65b0\u7684\u65f6\u5019\u8bb0\u5f55\u5bf9\u5e94\u7684 \\(pre_{i,j}\\) \u5373\u53ef\u3002</p> <p>\u7136\u540e\u6784\u9020\u65b9\u6848\u7684\u65f6\u5019\u5229\u7528\u9012\u5f52\u6784\u9020\uff0c\u8bbe \\(solve(x,y)\\) \u8868\u793a\u5904\u7406 \\(dp_{x,y}\\) \u5bf9\u7b54\u6848\u9020\u6210\u7684\u5f71\u54cd\u3002</p> <p>\u90a3\u4e48\u5148\u9012\u5f52\u5904\u7406 \\(solve(pre_{x,y}.first,pre_{x,y}.second)\\)\u3002</p> <p>\u9012\u5f52\u5230\u8fb9\u754c \\(x = 0\\) \u5c31\u8fd4\u56de\u3002</p> <p>\u5b9e\u9645\u4e0a\u5c31\u662f\u63a8\u5230\u6700\u524d\u9762\uff08\\(dp_{1,blabla}\\) \u7684\u72b6\u6001\uff09\uff0c\u7136\u540e\u5f80\u540e\u6839\u636e\u4ece\u54ea\u91cc\u8f6c\u79fb\u8fc7\u6765\u8ba1\u7b97\u7b54\u6848\u3002</p> <p>\u4e5f\u5c31\u662f\u518d\u6b21\u6a21\u62df\u4e00\u904d\u8f6c\u79fb\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u3002</p> Code <pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int si = 30 + 10;\nconst int sii = 5e3 + 10;\n\nint n, m;\nint dp[si][sii];\npair&lt;int, int&gt; g[si];\npair&lt;int, int&gt; pre[si][sii];\nint sum[si], ans[si];\n\nvoid solve(int x, int y) {\nif(!x) return;\n// \u5230\u8fbe\u8fb9\u754c\n\nauto [px, py] = pre[x][y];\nsolve(px, py);\n// \u5148\u9012\u5f52\u5904\u7406 pre[x][y]\n\nif(px == x) for(int i = 1; i &lt;= x; ++i) ans[g[i].second] += 1;\n// from dp[x][y - x];\n// \u6b64\u65f6\u7ed9 1 ~ x \u6240\u6709\u6570\u90fd\u52a0\u4e0a 1, \u56e0\u4e3a\u8f6c\u79fb\u7684\u65f6\u5019\u5b83\u4eec\u90fd\u51cf\u53bb\u4e86 1\u3002\nelse for(int i = px + 1; i &lt;= x; ++i)\nans[g[i].second] = 1;\n// from dp[px][y - (x - px)];\n// \u6b64\u65f6\u628a\u72b6\u6001\u5bf9\u5e94\u7684 k + 1 ~ i \u7684\u90e8\u5206\u8bbe\u7f6e\u4e3a 1\u3002\n}\n\nint main() {\ncin &gt;&gt; n &gt;&gt; m;\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; g[i].first;\ng[i].second = i;\n}\nsort(g + 1, g + 1 + n);\nreverse(g + 1, g + 1 + n);\n\nsum[0] = 0;\nfor(int i = 1; i &lt;= n; ++i) sum[i] = sum[i - 1] + g[i].first;\n\nmemset(ans, 0, sizeof ans);\nmemset(dp, 0x3f, sizeof dp);\ndp[0][0] = 0;\n\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = i; j &lt;= m; ++j) {\n// \u6ce8\u610f j \u662f\u4ece i \u5f00\u59cb\u679a\u4e3e\u7684\uff0c\u4e5f\u5c31\u662f\u5148\u4fdd\u8bc1 1 ~ i \u7684\u6bcf\u4e2a\u5b69\u5b50\u81f3\u5c11\u90fd\u6709\u4e00\u5757\u3002\ndp[i][j] = dp[i][j - i], pre[i][j] = {i, j - i};\n\nfor(int k = 0; k &lt; i; ++k) {\nint trans = dp[k][j - (i - k)] + k * (sum[i] - sum[k]);\nif(dp[i][j] &gt; trans) {\ndp[i][j] = trans;\npre[i][j] = {k, j - (i - k)};\n}\n}\n// \u4f60\u521d\u59cb\u5316\u53ea\u521d\u59cb\u5316\u4e86 dp[0][0]\uff0c\u90a3\u4e48\u8981\u8f6c\u79fb\u4e0b\u53bb\u5fc5\u7136\u8981\u5229\u7528\u5230\u5b83\u3002\n// i = j, k = 0 \u7684\u65f6\u5019\u5c31\u4f1a\u5229\u7528\u5230\u3002\n// \u6240\u4ee5\u4e0d\u8981\u5fd8\u8bb0 k \u53ef\u4ee5\u7b49\u4e8e 0\u3002\n}\n}\n\ncout &lt;&lt; dp[n][m] &lt;&lt; endl;\n\nsolve(n, m);\n\nfor(int i = 1; i &lt;= n; ++i) cout &lt;&lt; ans[i] &lt;&lt; \" \";\n\nreturn 0;\n}\n</code></pre> <p>\u590d\u6742\u5ea6 \\(\\text{O}(n^2\\times m)\\)\u3002</p> <pre><code>Tag : \u7ebf\u6027DP/\u6784\u9020\u65b9\u6848/\u601d\u7ef4/\u6392\u5e8f\u4e0d\u7b49\u5f0f\n</code></pre>"}, {"location": "sol/pro/acwing355/", "title": "ACWing355", "text": ""}, {"location": "sol/pro/acwing355/#acwing355", "title": "Acwing355 \u5f02\u8c61\u77f3", "text": "<p>\u8865\u5145\u7ed3\u8bba\u7684\u4e24\u79cd\u8bc1\u660e\u3002</p>"}, {"location": "sol/pro/acwing355/#textquestion", "title": "\\(\\text{Question}\\)", "text": "<p>\u52a8\u6001\u7ef4\u62a4\u6811\u4e0a\u4f7f\u5f97\u88ab\u9009\u4e2d\u70b9\u8054\u901a\u7684\u8fb9\u96c6\u957f\u5ea6\u4e4b\u548c\u7684\u6700\u5c0f\u503c\uff0c\u652f\u6301\u9009\u4e2d\uff0c\u53d6\u6d88\u9009\u4e2d\u67d0\u4e2a\u8282\u70b9\u3002</p> <p>1e5.</p>"}, {"location": "sol/pro/acwing355/#textlemma", "title": "\\(\\text{Lemma}\\)", "text": "<p>\u5c06\u6240\u6709\u88ab\u9009\u4e2d\u7684\u8282\u70b9\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u6210\u4e00\u5708\uff0c\u7b54\u6848\u5c31\u662f\u76f8\u90bb\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u503c\u548c\u7684\u4e8c\u5206\u4e4b\u4e00\u3002</p>"}, {"location": "sol/pro/acwing355/#textproof1", "title": "\\(\\text{Proof1}\\)", "text": "<p>\u5206\u7c7b\u8ba8\u8bba\u8bc1\u6cd5\u3002</p> <p>\u9996\u5148\u6709\u4e00\u4e2a\u7ed3\u8bba\uff0c\u4e00\u4e2a\u5b50\u6811\u5f53\u4e2d\u7684\u6240\u6709\u8282\u70b9\u7684\u65f6\u95f4\u6233\uff08 dfs \u5e8f\uff09\u5fc5\u7136\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u53cd\u8fc7\u6765\u4e5f\u4e00\u6837\u3002</p> <p>\u8003\u8651\u6700\u7b80\u5355\u7684\u4e00\u79cd\u60c5\u51b5\uff1a\u88ab\u9009\u4e2d\u7684\u53ea\u6709\u4e09\u4e2a\u8282\u70b9 \\(a,b,c\\) \uff08\u5df2\u7ecf\u6392\u597d\u5e8f\uff09</p> <p>\u5148\u8d70\u4e00\u904d \\(\\delta(a,b)\\) \uff08\u5bf9\u5e94\u5230\u4ee3\u7801\u91cc\u5c31\u662f\u7ed9\u7b54\u6848\u7d2f\u52a0 \\(\\delta(a,b)\\) \u7684\u957f\u5ea6\uff09\uff0c\u6b64\u65f6 \\(\\delta(a,b)\\) \u88ab\u8986\u76d6\u4e86\u4e00\u6b21\uff0c\u5c06 \\(\\delta(a,b)\\) \u7684\u957f\u5ea6\u7d2f\u52a0\u5230\u7b54\u6848\u5f53\u4e2d\u3002</p> <p>\u6b64\u65f6\u8d70 \\(\\delta(b,c)\\)\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\\(\\delta(b,c)\\) \u4e0d\u7ecf\u8fc7 \\(a\\)\uff0c\u8fd9\u65f6\u53ea\u80fd\u6709\u4e24\u79cd\u60c5\u51b5\uff08\u5176\u5b83\u7684\u53ef\u4ee5\u5f52\u5316\u5230\u8fd9\u4e24\u79cd\uff09</li> <li>\u56fe\u4e2d\u60c5\u51b5 \\(A\\)\uff0c\u6b64\u65f6 \\(\\delta(a,\\text{LCA}(b,c))\\) \u88ab\u8986\u76d6\u4e00\u6b21\uff0c \\(\\delta(b,\\text{LCA}(b,c))\\) \u88ab\u8986\u76d6\u4e24\u6b21 \uff08\u5982\u679c \\(\\text{LCA}(b,c)=b\\) \u5c31\u53ea\u7b97\u4e00\u6b21\uff0c\u4e4b\u540e\u7684\u540c\u7406\uff09\uff0c\\(\\delta(\\text{LCA}(b,c),c)\\) \u88ab\u8986\u76d6\u4e00\u6b21\u3002</li> <li>\u56fe\u4e2d\u60c5\u51b5 \\(B\\)\uff0c\u6b64\u65f6 \\(\\delta(a,\\text{LCA}(a,b))\\) \u88ab\u8986\u76d6\u4e00\u6b21\uff0c\\(\\delta(b,\\text{LCA}(a,b))\\) \u88ab\u8986\u76d6\u4e24\u6b21\uff0c\\(\\delta(\\text{LCA}(a,b),c)\\) \u88ab\u8986\u76d6\u4e00\u6b21\u3002</li> <li>\\(\\delta(b,c)\\) \u7ecf\u8fc7 \\(a\\) \uff0c\u8fd9\u65f6\u53ea\u80fd\u6709\u4e00\u79cd\u60c5\u51b5\uff08\u5176\u5b83\u7684\u4ecd\u7136\u53ef\u4ee5\u5f52\u5316\uff09</li> <li>\u56fe\u4e2d\u60c5\u51b5 \\(C\\)\uff0c\u6b64\u65f6 \\(\\delta(a,b)\\) \u88ab\u8986\u76d6\u4e24\u6b21\uff0c\\(\\delta(a,c)\\) \u88ab\u8986\u76d6\u4e00\u6b21\u3002</li> </ol> <p>\u6700\u540e\u8d70\u4e00\u904d \\(\\delta(a,c)\\)</p> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684 1.1 \uff1a\\(\\delta(a,\\text{LCA}(b,c))\\) \u4ece\u88ab\u8986\u76d6\u4e00\u6b21\u5230\u4e24\u6b21\uff0c\\(\\delta(\\text{LCA}(b,c),c)\\) \u4ece\u4e00\u6b21\u5230\u4e24\u6b21\uff0c\\(\\delta(b,\\text{LCA}(b,c))\\) \u4ecd\u65e7\u662f\u4e24\u6b21\u3002</p> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684 1.2 \uff1a\\(\\delta(a,\\text{LCA}(a,b))\\) \u4ece\u88ab\u8986\u76d6\u4e00\u6b21\u5230\u4e24\u6b21\uff0c\\(\\delta(b,\\text{LCA}(a,b))\\) \u4ecd\u65e7\u662f\u4e24\u6b21\uff0c\\(\\delta(\\text{LCA}(a,b),c)\\) \u4ece\u4e00\u6b21\u5230\u4e24\u6b21\u3002</p> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684 2.1 \uff1a\\(\\delta(a,b)\\) \u4ecd\u65e7\u662f\u4e24\u6b21\uff0c\\(\\delta(a,c)\\) \u4ece\u4e00\u6b21\u5230\u4e24\u6b21\u3002</p> <p></p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u5728\u53ea\u6709\u4e09\u4e2a\u88ab\u9009\u4e2d\u70b9\u7684\u65f6\u5019\uff0c\\(\\text{Lemma}\\) \u4e00\u5b9a\u6210\u7acb\u3002</p> <p>\u6839\u636e\u6570\u5b66\u5f52\u7eb3\u6cd5\u53ef\u4ee5\u5f97\u5230\u4efb\u610f\u591a\u4e2a\u88ab\u9009\u4e2d\u70b9\u7684\u60c5\u51b5\uff0c\\(\\text{Lemma}\\) \u5f97\u8bc1\u3002</p>"}, {"location": "sol/pro/acwing355/#textproof2", "title": "\\(\\text{Proof2}\\)", "text": "<p>\u56e0\u4e3a dfn \u8fde\u7eed\u7684\u4e00\u6bb5\u5fc5\u7136\u5728\u540c\u4e00\u4e2a\u5b50\u6811\u5f53\u4e2d\u3002</p> <p>\u8003\u8651 \\(\\text{Lemma}\\) \u7684\u8fc7\u7a0b\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u4e0d\u65ad\u7684\u8bbf\u95ee\u67d0\u4e2a\u5b50\u6811\uff0c\u5904\u7406\u5b8c\u8fd9\u4e2a\u5b50\u6811\u5f53\u4e2d\u4f1a\u88ab\u7edf\u8ba1\u7684\u8fb9\uff0c\u7136\u540e\u9000\u51fa\u8fd9\u4e2a\u5b50\u6811\u3002</p> <p>\u90a3\u5c31\u76f4\u63a5\u770b\u8fd9\u4e2a\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7684\u8fc7\u7a0b\u672c\u8eab\uff0c\u5047\u8bbe\u4f60\u8fdb\u5165\u5230\u4e86\u4e00\u4e2a\u4ee5 \\(fa\\) \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5f53\u524d\u8d70\u5230\u4e86\u4e00\u4e2a\u6709\u5f02\u8c61\u77f3\u7684\u8282\u70b9 \\(u\\)\u3002</p> <p>\u90a3\u4e48\u4f60\u8fdb\u5165\u8fd9\u4e2a\u5b50\u6811\u7684\u65f6\u5019\uff08\u4e5f\u5c31\u662f\u5904\u7406\u524d\u9762\u7684\u7b54\u6848\u7684\u65f6\u5019\uff09\uff0c\\(fa \\to u\\) \u5b9e\u9645\u4e0a\u5df2\u7ecf\u88ab\u7b97\u8fc7\u4e00\u6b21\u4e86\uff0c\u5f53\u4f60\u7ed9 \\(u\\) \u8fdb\u884c\u7edf\u8ba1\uff08\u4e5f\u5c31\u662f\u8981\u9000\u51fa\u5b50\u6811\u7684\u65f6\u5019\uff09\uff0c\\(fa \\to u\\) \u5c31\u4f1a\u88ab\u518d\u7b97\u4e00\u6b21\uff0c\u5e76\u4e14\u4e4b\u540e\u4e0d\u4f1a\u56de\u6765\u518d\u6b21\u8ba1\u7b97\u3002</p> <p>\u63a8\u5e7f\u8fc7\u540e\u5f97\u5230\uff1a\u4e00\u6761\u8fde\u63a5\u4e24\u4e2a\u6709\u5f02\u8c61\u77f3\u7684\u8282\u70b9\u7684\u8def\u5f84\u5fc5\u7136\u4f1a\u88ab\u8ba1\u7b97\u4e24\u6b21\u3002</p> <p>\u53ef\u4ee5\u77e5\u9053 \\(\\text{Lemma}\\) \u662f\u6b63\u786e\u7684\u3002</p>"}, {"location": "sol/pro/acwing355/#textcode", "title": "\\(\\text{Code}\\)", "text": "\u5b9e\u73b0 <pre><code>#include&lt;set&gt;\n#include&lt;cstring&gt;\n#include&lt;iostream&gt;\nusing namespace std;\nusing i128=__int128;\n\ninline void write(i128 x){\nif(x&lt;0) putchar('-'),x=-x;\nif(x&gt;9) write(x/10);\nputchar(x%10+48);\n}\n\nconstexpr int si=1e5+10;\nconstexpr int inf=0x3f3f3f3f;\nint n,m,tot=0,tim=0;\n\nint head[si];\nstruct Edge{ int ver,Next,w; }e[si&lt;&lt;1];\ninline void add(int u,int v,int w){ e[tot]=(Edge){v,head[u],w},head[u]=tot++; }\n\nint dep[si],f[si][20],dfn[si];\ni128 dis[si];\ninline void dfs(int u,int fa){\ndep[u]=dep[fa]+1,f[u][0]=fa,dfn[u]=++tim;\nfor(register int i=1;i&lt;=19;++i) f[u][i]=f[f[u][i-1]][i-1];\nfor(register int i=head[u];~i;i=e[i].Next){\nint v=e[i].ver,w=e[i].w;\nif(v==fa) continue;\ndis[v]=dis[u]+w,dfs(v,u);\n} return ;\n}\ninline int Lca(int u,int v){\nif(dep[u]&lt;dep[v]) swap(u,v);\nfor(register int i=19;i&gt;=0;--i){\nif(dep[f[u][i]]&gt;=dep[v]) u=f[u][i];\n} if(u==v) return u;\nfor(register int i=19;i&gt;=0;--i){\nif(f[u][i]!=f[v][i]) u=f[u][i],v=f[v][i];\n} return f[u][0];\n}\ninline i128 path(int u,int v){ return 1ll*dis[u]+1ll*dis[v]-2ll*(dis[Lca(u,v)]); }\n\nstd::set&lt;std::pair&lt;int,int&gt;&gt;s;\ni128 ans=0; inline void Insert(int x){\nif(s.size()==2) return (void)s.insert({dfn[x],x});\nauto now=s.insert({dfn[x],x}).first;\nauto Pre=std::prev(now),Nex=std::next(now);\nif(Pre==s.begin()) Pre=--(s.find({inf,inf}));\nif(Nex==(--s.end())) Nex=++(s.begin());\nstd::pair&lt;int,int&gt;u=*Pre,v=*Nex;\nans-=path(u.second,v.second);\nans+=path(u.second,x)+path(x,v.second);\n}\ninline void Delete(int x){  if(s.size()==3) return (void)s.erase(s.find({dfn[x],x}));\nauto now=s.find({dfn[x],x});\nauto Pre=std::prev(now),Nex=std::next(now);\nif(Pre==s.begin()) Pre=--(s.find({inf,inf}));\nif(Nex==(--s.end())) Nex=++(s.begin());\nstd::pair&lt;int,int&gt;u=*Pre,v=*Nex;\nans+=path(u.second,v.second);\nans-=path(u.second,x)+path(x,v.second);\ns.erase(now);\n}\n\nint main(){\nmemset(head,-1,sizeof head);\ncin&gt;&gt;n,s.insert({-1,-1}),s.insert({inf,inf}); //\u5de6\u53f3\u5404\u585e\u4e00\u4e2a\u7a7a\u4f59\u8282\u70b9\u9632\u6b62\u8d8a\u754c\n// \u8fd9\u62db\u662f\u6253 CF \u7684\u65f6\u5019\u8ddf jiangly \u5b66\u7684\nfor(register int i=1;i&lt;n;++i){\nint u,v,w; cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\nadd(u,v,w),add(v,u,w);\n} dfs(1,0);\ncin&gt;&gt;m;\nwhile(m--){\nchar op; cin&gt;&gt;op; int x;\nif(op=='+') cin&gt;&gt;x,Insert(x);\nif(op=='-') cin&gt;&gt;x,Delete(x);\nif(op=='?') write(ans/2),putchar('\\n');\n} return 0;\n}\n</code></pre> <pre><code>Tag : LCA/\u6811\u4e0a\u5dee\u5206/dfs \u5e8f\n</code></pre>"}, {"location": "sol/pro/bzoj3307/", "title": "BZOJ3307", "text": ""}, {"location": "sol/pro/bzoj3307/#bzoj3307", "title": "Bzoj3307 \u96e8\u5929\u7684\u5c3e\u5df4", "text": ""}, {"location": "sol/pro/bzoj3307/#textquestion", "title": "\\(\\text{Question}\\)", "text": "<p>\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6bcf\u6b21\u7ed9 \\((x,y)\\) \u7684\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u53d1\u653e\u4e00\u4e2a\u7b2c \\(z\\) \u79cd\u7269\u54c1\u3002</p> <p>\\(M\\) \u6b21\u64cd\u4f5c\uff0c\u6700\u540e\u8be2\u95ee\u6bcf\u4e2a\u70b9\u6700\u591a\u7684\u662f\u54ea\u4e00\u79cd\u7269\u54c1\u3002</p> <p>\\(1\\le N,M \\le 10^5,1\\le z\\le 10^9\\)</p>"}, {"location": "sol/pro/bzoj3307/#textbrute-force", "title": "\\(\\text{Brute force}\\)", "text": "<p>\u5148\u79bb\u6563\u5316 \\(z\\)\u3002</p> <p>\u8003\u8651\u8bbe\u4e00\u4e2a\u8ba1\u6570\u6570\u7ec4 \\(d\\)\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 \\(x\\)\uff0c\u5206\u522b\u7ef4\u62a4\u7b2c \\(z\\) \u79cd\u7269\u54c1\u5728 \\(x\\) \u4e0a\u6709\u591a\u5c11\u4e2a\u3002</p> <p>\u5148\u6c42\u51fa \\(\\text{LCA}\\) \uff0c\u6bcf\u6b21\u64cd\u4f5c\u4ece \\(x \\to \\text{LCA} \\to y\\) \uff0c\u7136\u540e\u628a\u8def\u5f84\u4e0a\u76f8\u5e94\u7684\u8282\u70b9\u7684 \\(d[x][z]\\) \u52a0\u4e00\u3002</p> <p>\u590d\u6742\u5ea6  \\(\\text{O}(NM)\\)\u3002</p> <p>\u6216\u8005\u53ef\u4ee5\u5229\u7528\u6811\u4e0a\u5dee\u5206\u5bf9\u6bcf\u79cd\u7269\u54c1\u7684\u60c5\u51b5\u5206\u522b\u8fdb\u884c\u4fee\u6539\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe \\(c\\) \u4e3a \\(d\\) \u7684\u5dee\u5206\u6570\u7ec4\uff0c\u6bcf\u6b21\u64cd\u4f5c \\((x,y,z)\\) \uff0c\u4f7f \uff1a</p> \\[c[x][z]+1,c[y][z]+1,c[\\text{LCA(x,y)}][z]-1,c[\\text{Father}(\\text{LCA(x,y)})][z]-1\\] <p>\u6700\u540e\u8fdb\u884c \\(cnt_z\\) \u6b21 dfs\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 \\(u\\)\uff0c\\(d\\) \u5c31\u7b49\u4e8e \\(c\\) \u7684\u5b50\u6811\u548c </p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6c42\u7269\u54c1\u51fa\u73b0\u6b21\u6570\u7684\u6700\u503c\u5373\u53ef\u3002 </p> <p>\u590d\u6742\u5ea6 \\(\\text{O}(N\\times cnt_z)\\)\uff0c\\(cnt_z\\) \u662f\u4e0d\u540c\u7684\u7269\u54c1\u7684\u6570\u91cf\u3002</p> <p>\u8fd9\u4e2a\u505a\u6cd5\u662f\u5bf9\u6bcf\u79cd\u7269\u54c1\u90fd\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5dee\u5206\u5e8f\u5217\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u5dee\u5206\u5e8f\u5217\u662f\u5728\u6811\u4e0a\u7684\u3002</p>"}, {"location": "sol/pro/bzoj3307/#textsolution", "title": "\\(\\text{Solution}\\)", "text": "<p>\u5b9e\u9645\u4e0a \\(\\text{O}(N\\times cnt_z)\\) \u505a\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u8282\u70b9 \\(u\\) \u7ef4\u62a4\u4e86\u4e00\u4e2a\u5e8f\u5217 \\(c[u]\\)\uff0c\\(c[u][z]\\) \u5c31\u8868\u793a \\(z\\) \u8fd9\u79cd\u7269\u54c1\u7684\u5dee\u5206\u5e8f\u5217\u5728 \\(u\\) \u8fd9\u91cc\u7684\u8fd9\u4e00\u9879\u3002</p> <p>\u90a3\u4e48\u4e00\u4e2a\u8282\u70b9 \\(u\\) \u7684\u7b54\u6848\u5c31\u662f\u5b83\u5b50\u6811\u5f53\u4e2d\u6240\u6709\u8282\u70b9\u7684 \\(c[v]\\) \u7684\u5408\u5e76\u8d77\u6765\u4e4b\u540e\u5f97\u5230\u7684\u65b0\u5e8f\u5217\u7684 \\(\\text{max\\_element}\\)\u3002</p> <p>\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 \\(u\\) \u5f00\u4e00\u9897\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u4ee3\u66ff \\(c[u]\\)\uff0c\u540c\u65f6\u652f\u6301\u7ef4\u62a4 \\(c[u]\\) \u5f53\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u8282\u70b9\u7684\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u503c\u57df\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f \\([1,cnt_z]\\)\u3002</p> <p>\u8fdb\u884c\u4e00\u6b21 dfs\uff0c\u90a3\u4e48\u8ba1\u7b97 \\(u\\) \u7684\u7b54\u6848\u7684\u65f6\u5019\uff0c\u5c31\u53ea\u9700\u8981\u628a \\(u\\) \u7684\u6240\u6709\u513f\u5b50\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u548c \\(u\\) \u7684\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ebf\u6bb5\u6811\u5408\u5e76\u5373\u53ef\u5feb\u901f\u5f97\u5230 \\(u\\) \u7684\u7b54\u6848\u3002</p> <p>\u590d\u6742\u5ea6 \\(\\text{O}((N+M)\\log(N+M))\\)</p> <p>\\(\\text{Trick:}\\) \u5bf9\u4e8e\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u4fe1\u606f\u5e8f\u5217\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u5b50\u6811\u548c\u7684\u65b9\u5f0f\u5f97\u5230\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4e00\u9897\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u4ee3\u66ff\u6bcf\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\u5e8f\u5217\uff0c\u7136\u540e\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u8ba1\u7b97\u7b54\u6848\u3002</p>"}, {"location": "sol/pro/bzoj3307/#textcode", "title": "\\(\\text{Code}\\)", "text": "\u96e8\u5929\u7684\u5c3e\u5df4 <pre><code>#include &lt;cmath&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int si = 1e5 + 10;\n\nint n, m;\n\nint tot = 0, head[si];\nstruct Edge {\nint ver,Next;\n}e[si &lt;&lt; 1];\ninline void add(int u, int v) {\ne[tot] = (Edge){v, head[u]}, head[u] = tot++;\n}\n\nint dep[si], f[si][20];\nint lg;\ninline void dfs1(int u,int fa) {\ndep[u] = dep[fa] + 1, f[u][0] = fa;\nfor(int i = 1; i &lt;= lg; ++i) f[u][i] = f[ f[u][i-1] ][i-1];\n\nfor(int i = head[u]; ~i; i = e[i].Next){\nint v = e[i].ver;\nif(v == fa) continue;\ndfs1(v, u);\n}\n}\ninline int Lca(int u, int v) {\nif(dep[u] &lt; dep[v]) swap(u, v);\nfor(int i = lg; i &gt;= 0; --i) if(dep[f[u][i]] &gt;= dep[v]) u = f[u][i];\nif(u == v) return u;\n\nfor(int i = lg; i &gt;= 0; --i) if(f[u][i] != f[v][i]) u = f[u][i], v = f[v][i];\nreturn f[u][0];\n}\n\nint root[si], cnt = 0;\nstruct segment_tree {\nint ls, rs;\nint mx, id;\n}t[si * 80];\ninline void pushup(int p) {\nint lc = t[p].ls, rc = t[p].rs;\n\nif(t[lc].mx &gt;= t[rc].mx) t[p].mx = t[lc].mx, t[p].id = t[lc].id;\nelse t[p].mx = t[rc].mx, t[p].id = t[rc].id;\n}\ninline void change(int &amp;p, int l, int r, int pos, int val) {\nif(!p) p = ++cnt;\n\nif(l == r){\nt[p].mx += val;\nt[p].id = l;\nreturn ;\n}\n\nint mid = l + r &gt;&gt; 1;\nif(pos &lt;= mid) change(t[p].ls, l, mid, pos, val);\nelse change(t[p].rs, mid+1, r, pos, val);\npushup(p);\n}\nint merge(int p, int q, int l, int r) {\nif(!p) return q; if(!q) return p;\n\nif(l == r){\nt[p].mx += t[q].mx;\nreturn p;\n}\n\nint mid = l + r &gt;&gt; 1;\nt[p].ls = merge(t[p].ls, t[q].ls, l, mid);\nt[p].rs = merge(t[p].rs, t[q].rs, mid+1, r);\npushup(p); return p;\n}\n\nint cntz = 0;\nint ans[si];\nint u[si], v[si], z[si], idz[si];\nvoid dfs2(int u,int fa) {\nfor(int i = head[u]; ~i; i = e[i].Next) {\nint v = e[i].ver;\nif(v == fa) continue;\ndfs2(v, u);\nroot[u] = merge(root[u], root[v], 1, cntz);\n}\nans[u] = t[root[u]].mx == 0 ? 0 : t[root[u]].id; return ;\n}\n\nint main() {\ncin &gt;&gt; n &gt;&gt; m, lg = (int)(log(n) / log(2)) + 1;\nmemset(head, -1, sizeof head);\nfor(int i = 1; i &lt; n; ++i) {\nint u, v; cin &gt;&gt; u &gt;&gt; v;\nadd(u, v), add(v, u);\n} dfs1(1, 0);\n\nfor(int i = 1; i &lt;= m; ++i) {\ncin &gt;&gt; u[i] &gt;&gt; v[i] &gt;&gt; z[i];\nidz[i] = z[i];\n}\nsort(idz + 1, idz + 1 + m);\ncntz = unique(idz + 1, idz + 1 + m) - idz - 1;\n\nfor(int i = 1; i &lt;= m ; ++i) {\nint nz = lower_bound(idz + 1, idz + 1 + cntz, z[i]) - idz;\nint lca = Lca(u[i], v[i]);\nint fat = f[lca][0];\nchange(root[u[i]], 1, cntz, nz, 1);\nchange(root[v[i]], 1, cntz, nz, 1);\nchange(root[lca], 1, cntz, nz, -1);\nchange(root[fat], 1, cntz, nz, -1);\n} dfs2(1, 0);\nfor(int i = 1; i &lt;= n; ++i) cout &lt;&lt; idz[ans[i]] &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>Tag : \u7ebf\u6bb5\u6811\u5408\u5e76/LCA/\u6811\u4e0a\u5dee\u5206\n</code></pre>"}, {"location": "sol/pro/cf1637f/", "title": "CF1637F", "text": ""}, {"location": "sol/pro/cf1637f/#cf1637f-towers", "title": "CF1637F Towers", "text": "<p>\u6bd4\u8f83\u6709\u610f\u601d\u7684\u4e00\u4e2a\u70b9\u662f\uff0c\u6211\u6628\u5929\u7ed9\u521d\u4e00\u7684\u795e\u4ed9\u8bb2\u4e86\u4e24\u9053\u6362\u6839\uff08CF708C\uff0cuoj105\uff09\uff0c\u987a\u4fbf\u603b\u7ed3\u4e86\u4e2a\u5957\u8def\u3002</p> <p>\u7136\u540e\u4eca\u5929\u65e9\u4e0a\u6253 VP \u5c31\u9047\u5230\u4e86 =_=</p>"}, {"location": "sol/pro/cf1637f/#textdescrption", "title": "\\(\\text{Descrption}\\)", "text": "<p>You are given a tree which has \\(n\\) vertices with a height \\(h\\) on it.</p> <p>You could put any numbers of tower on vertices, and you could choose the value of the tower \\(e\\).</p> <p>If vertex \\(x\\) is on the path of \\((u,v)\\),and \\(e_u,e_v\\) satisfy \\(\\min(e_u,e_v) \\ge h_x\\), we call vertex \\(x\\) is good.</p> <p>Your goal is to let all vertex become good vertex,and minumim your cost.</p> <p>If you put a tower and its \\(e=value\\), then your total cost will be added \\(value\\).  </p>"}, {"location": "sol/pro/cf1637f/#textsolution", "title": "\\(\\text{Solution}\\)", "text": "<p>\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5982\u679c\u5047\u5b9a\u4e86\u6811\u7684\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u5fc5\u987b\u653e\u4e00\u4e2a tower\u3002</p> <p>\u7136\u540e\u53c8\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5728\u5047\u5b9a\u4e86\u6839\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u8282\u70b9 \\(u\\) \u662f\u6709\u4fe1\u53f7\u7684\u7684\uff0c\u90a3\u4e48 \\(u\\) \u7684\u5b50\u6811\u5f53\u4e2d\u5fc5\u7136\u6709\u81f3\u5c11\u4e00\u4e2a tower\uff0c\u6ee1\u8db3\u8fd9\u4e2a tower \u7684 \\(e\\ge h_u\\) \u3002</p> <p>\u4e0a\u9762\u7684\u7ed3\u8bba\u5168\u90e8\u57fa\u4e8e \u201c\u6839\u8282\u70b9\u5047\u5b9a\u201d \u7684\u60c5\u51b5\u3002</p> <p>\u4f46\u662f\u672c\u9898\u7ed9\u51fa\u7684\u660e\u663e\u662f\u4e00\u9897\u65e0\u6839\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u5f88\u81ea\u7136\u7684\u60f3\u5230\u4e86\u6362\u6839DP\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bbe \\(f_u\\) \u8868\u793a\u4ee5 \\(u\\) \u4e3a\u6839\u8282\u70b9\u7684\u65f6\u5019\uff0c\u4f7f\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53d8\u6210\u6709\u4fe1\u53f7\u7684\u8282\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u8fd9\u4e2a\u6362\u6839\u4e0d\u662f\u5f88\u597d\u5199\u3002</p> <p>\u53c8\u53d1\u73b0\uff0c\u5982\u679c\u8ba9 \\(h\\) \u6700\u5927\u7684\u90a3\u4e00\u4e2a\uff08\u6216\u8005\u5176\u4e2d\u7684\u4e00\u4e2a\uff09\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u5f80\u4e0b\u53d6\u503c\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002</p> <p>\u56e0\u4e3a\u4f60\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u8ba9\u6bcf\u4e2a\u5b50\u6811\u5f53\u4e2d\u90fd\u6709\u4e00\u4e2a \\(e\\) \u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u5b50\u6811\u7684\u6839\u7684 \\(h\\) \u7684 tower\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u53ea\u9700\u8981\u8ba9\u5b83\u7684\u4e24\u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u5b50\u6811\u5f53\u4e2d\u6709\u4e24\u4e2a tower \u7684 \\(e=h_{root}\\) \u5373\u53ef\u3002 </p> <p>\u5982\u679c\u8bf4\u8fd9\u4e2a \\(h\\) \u6700\u5927\u7684\u70b9\u4e0d\u662f \\(root\\) \uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u5728\u67d0\u4e2a\u5b50\u6811\u91cc\u9762\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5b50\u6811\u91cc\u9700\u8981\u591a\u653e\u51e0\u4e2a \\(e=h_{max}\\) \u7684 tower\uff0c\u660e\u663e\u4e0d\u662f\u6700\u4f18\u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5c31\u76f4\u63a5\u4ee4\u8fd9\u4e2a \\(h\\) \u6700\u5927\u7684\u70b9\u4e3a \\(root\\) \uff0c\u7136\u540e\u9012\u5f52\u4e0b\u53bb\u5904\u7406\u5c31\u884c\u4e86\u3002</p>"}, {"location": "sol/pro/cf1637f/#textcode", "title": "\\(\\text{Code}\\)", "text": "\u5b9e\u73b0 <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define int long long\nconstexpr int inf=1e18+1,si=2e5+10;\nint n,height[si],res;\nstruct Edge{\nint head,ver,Next;\n}e[si&lt;&lt;1]; int tot=0,root=0,rt[si];\ninline void add(int u,int v){ e[++tot].ver=v,e[tot].Next=e[u].head,e[u].head=tot; }\ninline pair&lt;int,int&gt; dfs(int u,int fa){\nint max1,max2; max1=max2=0;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver; if(v==fa) continue;\nint now=dfs(v,u).first; if(now&gt;max1) max2=max(max2,max1),max1=now; else max2=max(max2,now);\n} if(fa!=0) res+=max(height[u]-max1,0ll),max1+=max(height[u]-max1,0ll);\nelse res+=max(height[u]-max1,0ll)+max(height[u]-max2,0ll); return make_pair(max1,max2);\n}\nsigned main(){\nscanf(\"%lld\",&amp;n); for(register int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;height[i]);\nfor(register int i=1,u,v;i&lt;n;++i) scanf(\"%lld%lld\",&amp;u,&amp;v),add(u,v),add(v,u);\nfor(register int i=1;i&lt;=n;++i) root=height[i]&gt;height[root]?i:root; dfs(root,0); return printf(\"%lld\\n\",res),0;   // \n}\n</code></pre> <pre><code>Tag : \u6811/\u6811\u5f62DP/\u6362\u6839DP\n</code></pre>"}, {"location": "sol/pro/cf1651e/", "title": "CF1651E", "text": ""}, {"location": "sol/pro/cf1651e/#cf1651e-sum-of-matchings", "title": "CF1651E Sum of Matchings", "text": ""}, {"location": "sol/pro/cf1651e/#textdescription", "title": "\\(\\text{Description}\\)", "text": "<p>\u5b9a\u4e49\u4e00\u5f20\u56fe \\(G\\) \u7684\u6700\u5927\u5339\u914d\u5f53\u4e2d\u7684\u8fb9\u6570\u662f \\(MM(G)\\)\u3002</p> <p>\u7ed9\u4f60\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c\u5de6\u90e8\u8282\u70b9\u7f16\u53f7 \\(1 \\sim n\\)\uff0c\u53f3\u90e8\u8282\u70b9\u7f16\u53f7 \\(n+1 \\sim 2n\\)\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\u5fc5\u7136\u4e3a \\(2\\)\u3002</p> <p>\u8bbe \\(G(l,r,L,R)\\) \u8868\u793a\u5de6\u90e8\u8282\u70b9\u7f16\u53f7\u5728 \\([l,r]\\)\uff0c\u53f3\u90e8\u8282\u70b9\u7f16\u53f7\u5728 \\([L,R]\\) \u4e4b\u95f4\u7684\u8282\u70b9\u548c\u4ed6\u4eec\u76f8\u5173\u7684\u8fb9\u7ec4\u6210\u7684\u5bfc\u51fa\u5b50\u56fe\u3002</p> <p>\u6c42 \\(\\sum MM(G(l,r,L,R))\\)\uff0c\u4fdd\u8bc1 \\(2\\le n\\le 1500\\)\u3002</p>"}, {"location": "sol/pro/cf1651e/#textsolution", "title": "\\(\\text{Solution}\\)", "text": "<p>\u8003\u8651\u6574\u5f20\u56fe\u7684\u5f62\u6001\uff0c\u56e0\u4e3a\u662f\u4e8c\u5206\u56fe\uff08\u4e0d\u542b\u5947\u73af\uff09\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\u5fc5\u7136\u662f \\(2\\)\u3002</p> <p>\u90a3\u4e48\u8fd9\u5f20\u56fe\u5fc5\u7136\u5168\u90e8\u7531\u4e00\u4e9b\u7b80\u5355\u73af\u7ec4\u6210\uff0c\u4e14\u8fd9\u4e9b\u7b80\u5355\u73af\u90fd\u662f\u5076\u73af\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u5076\u73af \\(R\\) \u5982\u679c\u88ab\u5305\u542b\u5728\u4e00\u4e2a\u5bfc\u51fa\u5b50\u56fe \\(G\\prime\\) \u5f53\u4e2d\uff0c\u4ed6\u80fd\u5bf9 \\(MM(G\\prime)\\)\u505a\u7684\u8d21\u732e\u662f\u4ec0\u4e48\u3002</p> <p>\u663e\u7136\u662f \\(\\lceil\\dfrac{edge}{2}\\rceil\\)\uff0c\\(edge\\) \u662f\u8fd9\u4e2a\u5076\u73af \\(R\\) \u5305\u542b\u7684\u8fb9\u6570\uff0c\u8fd9\u4e2a\u7528\u7c7b\u4f3c\u5308\u7259\u5229\u7b97\u6cd5\u7684\u601d\u60f3\u5373\u53ef\u5f97\u5230\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u5076\u73af \\(R\\) \u5fc5\u7136\u4f1a\u88ab\u4e00\u5806\u5b50\u56fe\u6240\u5305\u542b\uff0c\u8bbe\u8fd9\u6837\u7684\u5b50\u56fe\u6570\u91cf\u662f \\(cnt\\)\uff0c\u90a3\u4e48\u4ed6\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f \\(\\lceil\\dfrac{edge}{2}\\rceil\\times cnt\\)\u3002</p> <p>\\(cnt\\) \u4e5f\u6bd4\u8f83\u597d\u7b97\uff0c\u8bb0\u5f55\u5076\u73af\u4e0a\u5c5e\u4e8e\u5de6\u90e8\u548c\u53f3\u90e8\u5206\u522b\u7684\u8282\u70b9\u7f16\u53f7\u6700\u5927\u6700\u5c0f\u503c \\(Lmax,Lmin,Rmax,Rmin\\)</p> <p>\uff08\u53f3\u90e8\u7684\u7b97\u5b8c\u4e4b\u540e\u8981\u51cf\u53bb \\(n\\)\uff09\u3002</p> <p>\u90a3 \\(cnt\\) \u5c31\u5e94\u8be5\u662f\uff1a\\(Lmin\\times(n-Lmax+1)\\times Rmin\\times(n-Rmax+1)\\)\u3002</p> <p>\u5c31\u662f\u4e58\u6cd5\u539f\u7406\u3002</p> <p>\u4f46\u662f\u8fd8\u8981\u8003\u8651\u53e6\u5916\u7684\u4e00\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u88ab\u8fd9\u4e2a\u5b50\u56fe\u5305\u542b\u7684\u4e0d\u662f\u8fd9\u4e2a\u5076\u73af\uff0c\u800c\u662f\u8fd9\u4e2a\u5076\u73af\u4e0a\u7684\u4e00\u6761\u94fe \\((u,v)\\)\u3002</p> <p>\u90a3\u4e48\u8fd9\u6761\u94fe \\((u,v)\\) \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5305\u542b\u5b83\u7684\u5b50\u56fe\u7684 \\(MM\\) \u7684\u8d21\u732e\u5fc5\u7136\u4ecd\u65e7\u662f \\(\\lceil\\dfrac{edge}{2}\\rceil\\)\uff0c\\(edge\\) \u662f\u8fd9\u6761\u94fe \\((u,v)\\) \u5305\u542b\u7684\u8fb9\u6570\u3002</p> <p>\u8fd8\u662f\u9700\u8981\u8ba1\u7b97\u4ed6\u88ab\u591a\u5c11\u4e2a\u5b50\u56fe\u5305\u542b\uff0c\u5e76\u8bb0\u5f55\u94fe\u4e0a\u5de6\u90e8\u548c\u53f3\u90e8\u5206\u522b\u7684\u8282\u70b9\u7f16\u53f7\u6700\u5927\u6700\u5c0f\u503c \\(Lmax,Lmin,Rmax,Rmin\\) \uff08\u53f3\u90e8\u7684\u7b97\u5b8c\u4e4b\u540e\u8fd8\u662f\u8981\u51cf\u53bb \\(n\\)\uff09\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u94fe\u4e0a\u7684\u8282\u70b9\u7f16\u53f7\u5c31\u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u4e86\uff0c\u9700\u8981\u53bb\u6389\u5076\u73af\u5f53\u4e2d\u4e0d\u5728\u8fd9\u4e2a\u94fe\u4e0a\u7684\u8282\u70b9\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u5076\u73af \\(R\\) \u53bb\u6389\u8fd9\u4e2a\u94fe \\((u,v)\\) \u4e4b\u540e\u7684\u5230\u7684\u94fe \\(R-(u,v)\\) \u518d\u8bb0\u5f55\u5b83\u7684 \\(Lmax,Lmin,Rmax,Rmin\\) \u5c31\u53ef\u4ee5\u4e86\u3002</p>"}, {"location": "sol/pro/cf1651e/#textcode", "title": "\\(\\text{Code}\\)", "text": "\u5b9e\u73b0 <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nusing i64=long long;\n\nconstexpr int si=3e3+10,inf=0x3f3f3f3f;\nint n,vis[si];\ni64 a[si],cur,ans=0;\nstd::vector&lt;int&gt;G[si];\ninline int d(int x){ return x&lt;&lt;1; }\ninline void dfs(int u){ a[cur++]=u,vis[u]=1; for(auto v:G[u]) if(!vis[v]) dfs(v); }\ninline void add(int u,int v){ G[u].push_back(v);G[v].push_back(u); }\n\nint main(){\ncin&gt;&gt;n; for(register int i=1,u,v;i&lt;=d(n);++i) cin&gt;&gt;u&gt;&gt;v,add(u,v);\nfor(register int i=1;i&lt;=d(n);++i){\nif(!G[i].size() || vis[i]) continue;\ncur=0,dfs(i); i64 Lmin=inf,Rmin=inf,Lmax=0,Rmax=0;\n// \u5076\u73af\u7684\u60c5\u51b5\nfor(register int j=0;j&lt;cur;++j){\nif(a[j]&lt;=n) Lmin=min(Lmin,a[j]),Lmax=max(Lmax,a[j]);\nelse Rmin=min(Rmin,a[j]-n),Rmax=max(Rmax,a[j]-n);\n} i64 cnt=Lmin*(n-Lmax+1)*Rmin*(n-Rmax+1); ans+=cnt*(cur/2);\n// \u5076\u73af\u4e0a\u7684\u94fe\u7684\u60c5\u51b5\nfor(register int u=0;u&lt;cur;++u){\ni64 Lmin=inf,Rmin=inf,Lmax=0,Rmax=0;\nif(a[u]&lt;=n) Lmin=min(Lmin,a[u]),Lmax=max(Lmax,a[u]);\nelse Rmin=min(Rmin,a[u]-n),Rmax=max(Rmax,a[u]-n);\nint pos=(u+1)%cur,edge_cnt=0; while(pos!=u){ edge_cnt++;\nif(a[pos]&lt;=n) Lmin=min(Lmin,a[pos]),Lmax=max(Lmax,a[pos]);\nelse Rmin=min(Rmin,a[pos]-n),Rmax=max(Rmax,a[pos]-n);\nint Prev=(u-1+cur)%cur,ff=true; i64 O_Lmin=0,O_Rmin=0,O_Lmax=n+1,O_Rmax=n+1;\nif(a[Prev]&lt;=n){\nif(a[Prev]&lt;Lmin) O_Lmin=max(O_Lmin,a[Prev]);\nelse if(a[Prev]&gt;Lmax) O_Lmax=min(O_Lmax,a[Prev]);\nelse ff=false;\n} else{\nif(a[Prev]-n&lt;Rmin) O_Rmin=max(O_Rmin,a[Prev]-n);\nelse if(a[Prev]-n&gt;Rmax) O_Rmax=min(O_Rmax,a[Prev]-n);\nelse ff=false;\n} Prev=(pos+1)%cur;\nif(a[Prev]&lt;=n){\nif(a[Prev]&lt;Lmin) O_Lmin=max(O_Lmin,a[Prev]);\nelse if(a[Prev]&gt;Lmax) O_Lmax=min(O_Lmax,a[Prev]);\nelse ff=false;\n}\nelse{\nif(a[Prev]-n&lt;Rmin) O_Rmin=max(O_Rmin,a[Prev]-n);\nelse if(a[Prev]-n&gt;Rmax) O_Rmax=min(O_Rmax,a[Prev]-n);\nelse ff=false;\n} if(ff) ans+=(Lmin-O_Lmin)*(O_Lmax-Lmax)*(Rmin-O_Rmin)*(O_Rmax-Rmax)*((edge_cnt+1)/2);  pos=(pos   +1)%cur;\n}\n}\n} cout&lt;&lt;ans&lt;&lt;endl; return 0;\n}\n</code></pre> <pre><code>Tag : \u601d\u7ef4/\u8ba1\u6570/\u4e8c\u5206\u56fe\n</code></pre>"}, {"location": "sol/pro/cf35e/", "title": "CF35E \u590d\u76d8", "text": ""}, {"location": "sol/pro/cf35e/#_1", "title": "\u9898\u610f", "text": "<p>\u7ed9\u51fa \\(n\\) \u4e2a\u5e95\u8fb9\u5728 \\(x\\) \u8f74\u4e0a\u7684\u77e9\u5f62\uff0c\u6c42\u5916\u9762\u7684\u8f6e\u5ed3\u7ebf\u9876\u70b9\u3002</p> <p>\\(1\\le n \\le 10^5\\)\uff0c\u8f93\u5165\u4ee5 \\(h_i, l_i, r_i\\) \u7684\u65b9\u5f0f\u7ed9\u51fa\uff0c\u8868\u793a\u6709\u4e00\u4e2a\u8986\u76d6 \\(x \\in [l_i, r_i]\\) \u7684\u9ad8\u4e3a \\(h_i\\) \u7684\u77e9\u5f62\u3002</p>"}, {"location": "sol/pro/cf35e/#_2", "title": "\u9898\u89e3", "text": "<p>\u9996\u5148\u8003\u8651\u79bb\u6563\u5316\u7136\u540e\u76f4\u63a5\u4e00\u4e2a\u626b\u63cf\u7ebf\u626b\u8fc7\u53bb\uff08\u4ece\u5de6\u5230\u53f3\uff09\u3002</p> <p>\u7136\u540e\u6ce8\u610f\u5230\u62d0\u70b9\u53ea\u4f1a\u5728\u6574\u4f53\u6700\u5927\u9ad8\u5ea6\u53d8\u5316\u7684\u65f6\u5019\u51fa\u73b0\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u76f4\u63a5\u7ef4\u62a4\u4e00\u4e0b\u626b\u63cf\u7ebf\u4e0a\u7684 \\(y\\) \u7684\u6700\u5927\u503c\uff0c\u8bb0 \\(maxy\\) \u8868\u793a\u7ebf\u6bb5\u6811\u4e0a\u4e00\u4e2a\u8282\u70b9\u5185\u88ab\u8986\u76d6\u5230\u7684\u6700\u9ad8 \\(y\\) \u503c\uff0c\u8bb0 \\(cnt\\) \u8868\u793a\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\u81ea\u8eab\u88ab\u8986\u76d6\u7684\u6b21\u6570\uff0c\u8bb0 \\(len\\) \u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u6bb5\u5185\u603b\u5171\u88ab\u8986\u76d6\u7684\u957f\u5ea6\uff08\u8bb0\u5f55\u8fd9\u4e2a\u662f\u4e3a\u4e86\u5224\u65ad\u662f\u5426\u80fd\u66f4\u65b0 \\(maxy\\)\uff09</p> <p>\u4ee4\u7b2c \\(i\\) \u6bb5\u4e3a \\([raw(i), raw(i + 1)]\\)\uff0c\u4ee4\u7ebf\u6bb5\u6811\u4e0a\u7684 \\([l, r]\\) \u7ef4\u62a4\u7b2c \\(l \\sim r\\) \u6bb5\u3002 </p> <p>\u4fee\u6539\u7684\u65f6\u5019\u6ce8\u610f\uff0c\u5982\u679c\u5bf9\u4e8e\u626b\u63cf\u7ebf\u4e0a\u7684 \\([l, r]\\)\uff0c\u64cd\u4f5c\u65f6\u5e94\u5f53\u4fee\u6539\u7ebf\u6bb5\u6811\u4e0a\u7684 \\([val(l), val(r) - 1]\\)\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u6bb5\uff0c\u7ef4\u62a4\u70b9\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002</p> <p>\u8fd9\u91cc\u7684 Pushup \u65b9\u5f0f\u548c\u4e3b\u6d41\u4e0d\u592a\u4e00\u6837\uff0c\u5728 Change \u5230\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u4ecd\u7136\u9700\u8981\u505a\u7c7b\u4f3c Pushup \u7684\u5904\u7406\uff0c\u8fd9\u6837\u53ef\u4ee5\u7701\u53bb Pushdown\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e Pushup\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684 \\(cnt &gt; 0\\)\uff0c\u90a3\u4e48\u4ee4 \\(len = raw(r + 1) - raw(l)\\) \u5e76\u4ee4 \\(maxy = raw(r + 1)\\)\uff0c\u5426\u5219\u8003\u8651\u4ece\u513f\u5b50\u8282\u70b9\u66f4\u65b0 \\(len\\)\uff0c\u5982\u679c\u66f4\u65b0\u5b8c\u4e4b\u540e \\(len &gt; 0\\)\uff0c\u518d\u4ece\u5b50\u6811\u66f4\u65b0 \\(maxy\\)\u3002</p> <p>\u7136\u540e\u5728\u4fee\u6539\u7684\u65f6\u5019\u4e5f\u8981\u76f4\u63a5\u5904\u7406\u66f4\u6539\uff0c\u65b9\u5f0f\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5728\u5904\u7406 \\(cnt = 0\\) \u7684\u60c5\u51b5\u7684\u65f6\u5019\uff0c\u9700\u8981\u5148\u5224\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff08\u4e0d\u7136\u8981\u989d\u5916\u518d\u5f00\u7a7a\u95f4\uff09\uff0c\u7136\u540e\u518d\u4ece\u5b50\u6811\u4e0a\u4f20\u4fe1\u606f\uff0c\u8fd9\u91cc\u5c31\u7b97\u4fee\u6539\u4e86 \\(cnt\\)\uff0c\u8fd8\u662f\u9700\u8981\u8003\u8651\u7528\u513f\u5b50\u8282\u70b9\u4fe1\u606f\u66f4\u65b0 \\(maxy\\)\uff0c\u4e0d\u7136\u6ca1\u6cd5\u5904\u7406\u6709\u591a\u4e2a\u77e9\u5f62\u7684\u66f4\u6539\u5806\u5728\u4e00\u8d77\u7684\u60c5\u51b5\uff08\u6709\u53ef\u80fd\u5f53\u524d\u8282\u70b9\u76f4\u63a5\u88ab\u8986\u76d6\u7684\u6b21\u6570\u4e3a\u96f6\u4e86\uff0c\u4f46\u662f\u513f\u5b50\u8282\u70b9\u5e76\u6ca1\u6709\uff09\u3002</p> <p>\u90a3\u4e48\u6bcf\u6b21\u66f4\u65b0\u5b8c\u6211\u4eec\u53ea\u9700\u8981\u8be2\u7ebf\u6bb5\u6811\u6811\u6839\u7684 \\(maxy\\) \u5373\u53ef\uff0c\u5e76\u548c\u4fee\u6539\u524d\u7684 \\(maxy^{\\prime}\\) \u6bd4\u8f83\uff0c\u5982\u679c\u53d1\u751f\u6539\u53d8\uff0c\u5c31\u76f4\u63a5\u628a \\((x, maxy), (x, maxy^{\\prime})\\) \u6254\u8fdb Vector \u5c31\u884c\u3002</p> <p>\u8fd8\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u505a\u6cd5\u662f\u5728\u6bcf\u6b21 Query \u4e4b\u540e\u76f4\u63a5\u6bd4\u5bf9\u5e76\u66f4\u65b0\u7b54\u6848\uff0c\u6240\u4ee5\u5982\u679c\u5728\u4e00\u4e2a \\(x\\) \u4e0a\u6709\u591a\u4e2a\u66f4\u6539\u8981\u5904\u7406\uff0c\u9700\u8981\u4e00\u53e3\u6c14\u5168\u90e8\u5904\u7406\u5b8c\u518d\u66f4\u65b0\uff0c\u5426\u5219\u4f1a\u591a\u51fa\u6765\u4e00\u4e9b\u5b9e\u9645\u4e0a\u4e0d\u5b58\u5728\u7684\u9876\u70b9\u3002</p> <p>\u6700\u540e\u7a7a\u95f4\u8bb0\u5f97\u5f00\u591f\uff0c\u4e0d\u7136\u4f1a RE on #22.</p> Code - \u4fdd\u7559\u6ce8\u91ca\u7248\u672c <pre><code>// author : black_trees\n\n#include &lt;cmath&gt;\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;utility&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\n#define endl '\\n'\n// #define int long long\n\nusing namespace std;\nusing i64 = long long;\n\nconst int si = 1e5 + 10;\n\nint n, m; // m \u662f\u79bb\u6563\u5316\u4e4b\u540e\u7684\u503c\u57df\u4e0a\u754c(1~m).\nstd::vector&lt;int&gt; v;\nint raw[si * 3];\nint val(int x) { return lower_bound(v.begin(), v.end(), x) - v.begin(); }\n\nstruct Tuple {\nint l, r, k;\nvoid trans() {\nint vl = val(l), vr = val(r), vk = val(k);\nraw[vl] = l, raw[vr] = r, raw[vk] = k, l = vl, r = vr, k = vk;\n} bool operator &lt; (const Tuple &amp;b) const {\nif(l == b.l) return r &gt; b.r;  // \u8fd9\u91cc\u662f\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\uff0c\u540e\u9762\u7528\u540c\u65f6\u8ba1\u7b97\u89e3\u51b3\u4e86\u3002\nreturn l &lt; b.l;\n}\n} a[si], b[si &lt;&lt; 1]; // \u8fd9\u91cc\u662f\u540c\u65f6\u5b58\u8f93\u5165\u7684\u4fe1\u606f\u548c\u4e09\u5143\u7ec4\u4fe1\u606f\u7684\n\n// how to maintain maxy??\nclass SegTree {\nprivate:\nstruct Node {\nint l, r;\nint cnt, len, mxy;\nint Len() { return raw[r + 1] - raw[l]; } } t[si * 11]; // \u53ef\u80fd\u8981\u5f00\u5927\u4e00\u70b9\uff0c\u56e0\u4e3a\u503c\u57df\uff1f\ninline void pushup(int p) {\nif(t[p].cnt &gt; 0) t[p].len = t[p].Len(), t[p].mxy = raw[t[p].r + 1];\nelse {  t[p].len = t[p &lt;&lt; 1].len + t[p &lt;&lt; 1 | 1].len;\nif(t[p].len &gt; 0) t[p].mxy = max(t[p &lt;&lt; 1].mxy, t[p &lt;&lt; 1 | 1].mxy);\nelse t[p].mxy = 0;\n}\n}\npublic:\nvoid build(int p, int l, int r) {\nt[p].l = l, t[p].r = r, t[p].mxy = t[p].len = t[p].cnt = 0;\n// if(abs(l) &gt; 1e9 || abs(r) &gt; 1e9) exit(2);\n// if(p &gt; 8e5 + 80) exit(p);\nif(l == r) return;\nint mid = (l + r) &gt;&gt; 1;\nbuild(p &lt;&lt; 1, l, mid), build(p &lt;&lt; 1 | 1, mid + 1, r);\n}\nvoid change(int p, int l, int r, int v) {\nint nl = t[p].l, nr = t[p].r;\nif(l &lt;= nl &amp;&amp; nr &lt;= r) {\nt[p].cnt += v;\nif(t[p].cnt &gt; 0) t[p].len = t[p].Len(), t[p].mxy = raw[t[p].r + 1];\nelse {\nif(nl == nr) t[p].len = 0, t[p].mxy = 0;\nelse {\nt[p].len = t[p &lt;&lt; 1].len + t[p &lt;&lt; 1 | 1].len;\nif(t[p].len &gt; 0) t[p].mxy = max(t[p &lt;&lt; 1].mxy, t[p &lt;&lt; 1 | 1].mxy);\nelse t[p].mxy = 0;\n}\n}\nreturn;\n}\nint mid = (nl + nr) &gt;&gt; 1;\nif(l &lt;= mid) change(p &lt;&lt; 1, l, r, v);\nif(r &gt; mid) change(p &lt;&lt; 1 | 1, l, r, v);\npushup(p);\n}\nint Query_global() { return t[1].mxy; } } tr; std::vector&lt;std::pair&lt;int, int&gt; &gt; ans;\n\nsigned main() {\n\nfreopen(\"input.txt\", \"r\", stdin);\nfreopen(\"output.txt\", \"w\", stdout);\n\ncin.tie(0) -&gt; sync_with_stdio(false);\ncin.exceptions(cin.failbit | cin.badbit);\n\ncin &gt;&gt; n, v.push_back(0);\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; a[i].k &gt;&gt; a[i].l &gt;&gt; a[i].r;\nv.push_back(a[i].k), v.push_back(a[i].l), v.push_back(a[i].r);\n}\nsort(v.begin(), v.end()); v.erase(unique(v.begin(), v.end()), v.end());\nfor(int i = 1; i &lt;= n; ++i) a[i].trans();\ntr.build(1, 1, (int)v.size() + 1);\n\nfor(int i = 1; i &lt;= n; ++i) {\nb[i] = (Tuple){a[i].l, a[i].k, 1};\nb[i + n] = (Tuple){a[i].r, a[i].k, -1};\n}\nsort(b + 1, b + 1 + n + n);\n\n/*\n// for(int i = 1; i &lt;= n + n; ++i)\n// cout &lt;&lt; i &lt;&lt; \" -&gt; \" &lt;&lt; raw[b[i].l] &lt;&lt; \" \" &lt;&lt; raw[b[i].r] &lt;&lt; \" \" &lt;&lt; b[i].k &lt;&lt; endl;\n// cout &lt;&lt; \"====\" &lt;&lt; endl;\n    int nowy = 0;\n    for(int i = 1; i &lt;= n + n; ++i) {\n        int x = raw[b[i].l], l = val(0), r = b[i].r, v = b[i].k;\n// cout &lt;&lt; i &lt;&lt; \" -&gt; \" &lt;&lt; l &lt;&lt; \" \" &lt;&lt; r &lt;&lt; \" \" &lt;&lt; v &lt;&lt; endl;\n        tr.change(1, l, r - 1, v);\n        int nmxy = tr.Query_global();\n// cout &lt;&lt; i &lt;&lt; \" -&gt; \" &lt;&lt; nowy &lt;&lt; \" \" &lt;&lt; nmxy &lt;&lt; endl;\n        if(nmxy != nowy) {\n            ans.push_back(make_pair(x, nowy));\n            ans.push_back(make_pair(x, nmxy));\n            nowy = nmxy;\n        }\n    } // sweeping line\n*/\nint nowy = 0;   for(int i = 1; i &lt;= n + n; ) {\nint x = raw[b[i].l];\nint l, r, v;\nwhile(true) {\nl = val(0), r = b[i].r, v = b[i].k;\ntr.change(1, l, r - 1, v);\nif(raw[b[i + 1].l] != x) break;\ni++;\n}\nint nmxy = tr.Query_global();   if(nmxy != nowy) {\nans.push_back(make_pair(x, nowy));\nans.push_back(make_pair(x, nmxy));\nnowy = nmxy;\n}\ni++;\n}\n\n// ans.erase(unique(ans.begin(), ans.end()), ans.end());\ncout &lt;&lt; ans.size() &lt;&lt; endl;\nfor(auto [x, y] : ans) cout &lt;&lt; x &lt;&lt; \" \" &lt;&lt; y &lt;&lt; endl;\n\n// \u7b2c i \u6bb5\u662f [raw(i), raw(i + 1)]\n// \u6240\u4ee5\u5982\u679c\u52a0\u5165\u4e86\u4e00\u4e2a\u5143\u7ec4 (x, l, r, +-1);\uff08\u5b58\u7684 val\uff09\n// \u4fee\u6539\u662f change(l, r - 1)\u3002\n\n// \u73b0\u5728\u7684\u95ee\u9898\u51fa\u5728\u5904\u7406\u4fe1\u606f\u7684\u5730\u65b9\uff0c\u800c\u4e14\u80af\u5b9a\u4e0d\u662f\u8d4b\u503c\u7684\u9519\u8bef\uff0c\u5e94\u8be5\u662f\u67d0\u4e2a\u987a\u5e8f\u9519\u4e86\u6216\u8005\u8986\u76d6\u4e86\u4e0d\u5e94\u8be5\u8986\u76d6\u7684\u503c\u3002\n// \u597d\uff0c\u73b0\u5728\u5904\u7406\u4fe1\u606f\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u73b0\u5728\u8981\u505a\u7684\u5e94\u8be5\u662f\u8003\u8651\u600e\u4e48\u5904\u7406\u90a3\u4e2a\u91cd\u5408\u7684\u5730\u65b9\u3002\n// \u80fd\u4e0d\u80fd\u8003\u8651\u628a\u540c\u4e00\u4e2a $x$ \u4f4d\u7f6e\u7684\u5143\u7ec4\u5168\u90e8\u540c\u65f6\u505a\u66f4\u6539\uff1f\u5e94\u8be5\u53ef\u4ee5\uff0c\u660e\u5929\u6765\u6539, 11\u70b9\u4e86\uff0c\u5148\u7761\u89c9\u3002\n// \u786e\u5b9e\u53ef\u4ee5\uff0c\u4f46\u662f\u73b0\u5728\u95ee\u9898\u662f\u4e00\u76f4 Re22\uff0ccf \u8bf4 line 54 RE\uff0c\u6211\u6ca1\u770b\u51fa\u6765\u554a\uff0c\u6570\u7ec4\u4e5f\u5f00\u591f\u4e86\uff1f\n// \u7a81\u7136\u60f3\u8d77\u53ef\u80fd\u662f p RE\u4e86\uff0c\u7528 exit \u8bd5\u4e00\u8bd5\u3002\n// \u6211\u8349\uff0c\u771f\u7684\u662f\uff0c\u6539\u4e86\u4e0b\u5c31\u8fc7\u4e86\u3002\n// \u611f\u89c9\u8fd9\u4e2a\u662f\u975e\u5e38 Educational\u7684\uff0c\u7279\u522b\u662f\u601d\u8003\u548c\u8c03\u8bd5\u8fc7\u7a0b\u3002\nreturn 0;\n}\n\n// done:\n// \u597d\u50cf\u8fd9\u4e2a maxy \u7ef4\u62a4\u4e4b\u540e\u5355\u8c03\u4e0d\u964d\u4e86\uff1f\n// \u6413\u4e00\u4e2a\u6570\u636e\u8bd5\u8bd5\uff0c\u679c\u7136\u5355\u8c03\u4e0d\u964d\u4e86\uff0c\u53ef\u80fd\u8981\u6539\u6539 maxy \u7684\u7ef4\u62a4\uff1f\n// \u662f\u4e0d\u662f\u56e0\u4e3a cnt = 0 \u6216\u8005 len = 0 \u4e4b\u540e maxy \u6ca1\u6709\u5f3a\u5236\u4f20\u9012\u4e0a\u53bb\uff1f\n// \u786e\u5b9e\uff0c\u6539\u4e86\u4e00\u4e0b maxy \u7684 update \u65b9\u5f0f\u5c31\u884c\u4e86\u3002\n\n// \u5148\u8981\u79bb\u6563\u5316\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8f93\u5165\u5148\u8f6c\u5316\u6210\u4e24\u4e2a\u4e09\u5143\u7ec4\uff0c\u7136\u540e\u628a\u4e09\u5143\u7ec4\u76f4\u63a5\u5b58\u8d77\u6765\n// \u8fd9\u4e2a\u65f6\u5019\u4e0d\u7740\u6025\u6392\u5e8f\uff0c\u5148\u8f93\u5165\u5b8c\uff0c\u7136\u540e\u628a\u6bcf\u4e00\u4e2a\u6570\u5b57\u90fd\u6254\u8fdbvector\u91cc\u9762\u79bb\u6563\u5316\u3002\n// \u8bb0 val(i) \u8868\u793a i \u79bb\u6563\u540e\u7684\u7ed3\u679c\uff0craw(i) \u8868\u793a i \u79bb\u6563\u524d\u7684\u7ed3\u679c\u3002\n// \u54ce\u54ce\uff0c\u53cd\u6b63 2e5 \u4e2a\u4e09\u5143\u7ec4\uff0c\u591a\u51e0\u4e2a log \u4e5f\u6ca1\u6709\u5173\u7cfb\uff0craw \u76f4\u63a5\u8bb0\u5f55\uff0cval \u76f4\u63a5\u6bcf\u6b21 log \u4e8c\u5206\u4e00\u4e0b\u5c31\u884c\u3002\n// \u5b9e\u73b0\u65b9\u4fbf\u53ef\u4ee5\u5728\u4e09\u5143\u7ec4\u7684\u7ed3\u6784\u4f53\u91cc\u9762\u76f4\u63a5\u7528\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u6765\u628a raw -&gt; val.\n// \u8fd9\u662f\u79bb\u6563\u5316\u7684\u90e8\u5206\u3002\n//\n</code></pre>"}, {"location": "sol/pro/cf35e/#_3", "title": "\u8c03\u8bd5\u590d\u76d8", "text": "<p>Debug \u8fd9\u4e2a\u9898\u7684\u8fc7\u7a0b\u611f\u89c9\u5f88\u6709\u5fc5\u8981\u8bb0\u4e0b\u6765\uff0c\u6211\u4e4b\u524d\u51e0\u4e4e\u6ca1\u6709\u600e\u4e48\u8fd9\u6837\u7528\u5fc3\u7684\u601d\u8003\u8c03\u8bd5\u8fc7\uff0c\u53ef\u80fd\u4e5f\u662f\u6c34\u5e73\u6da8\u4e0d\u4e0a\u53bb\u7684\u539f\u56e0\u5427\u3002</p> <p>\u9996\u5148\u6211\u8ba4\u4e3a\u5982\u679c\u4e00\u4e2a\u5730\u65b9\u6709\u91cd\u590d\u7684\uff0c\u8ba1\u7b97\u65f6\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898\uff0c\u6240\u4ee5\u5199\u4e86\u4e00\u4e2a cmp\u3002</p> <p>\u7136\u540e\u7406\u4e86\u4e00\u904d\u601d\u8def\u5199\u51fa\u4e86\u4ee3\u7801\uff0c\u8fc7\u4e0d\u4e86 sample1\uff0c\u770b\u4e86\u4e00\u4e0b output\u3002</p> <p>\u53d1\u73b0\u662f\u5c11\u4e86\u4e00\u4e9b\u9876\u70b9\u6ca1\u6709\u8f93\u51fa\uff0c\u89c2\u5bdf\u8f93\u51fa\u4e86\u7684\u70b9\u53d1\u73b0\u4e00\u4e2a\u89c4\u5f8b\uff0c\u4f3c\u4e4e\u5f53 \\(h = 4\\) \u51fa\u73b0\u4e4b\u540e\uff0c\u5c31\u7b97\u5b83\u88ab\u5220\u6389\u4e86\uff0c\\(h = 2\\) \u8fd8\u662f\u4e0d\u4f1a\u88ab\u8ba1\u7b97\uff0c\u76f4\u63a5\u88ab ignore \u4e86\u3002</p> <p>\u6211\u731c\u662f \\(maxy\\) \u6ca1\u80fd\u5728 \\(-v\\) \u4e4b\u540e\u66f4\u65b0\u6210\u529f\uff0c\u4e8e\u662f\u5b9a\u4f4d\u5230 maxy \u7684\u66f4\u65b0\u90a3\u4e2a\u5730\u65b9\uff0c\u53d1\u73b0 cnt, len \u8fd9\u4e24\u4e2a\u4e1c\u897f\u5c31\u662f\u548c\u626b\u63cf\u7ebf\u6a21\u677f\u4e00\u6837\u7684\uff0c\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u5c31\u66f4\u786e\u5b9a maxy \u51fa\u4e8b\u60c5\u4e86\u3002</p> <p>\u7136\u540e\u601d\u8003\u4e86\u4e00\u4e0b\u539f\u56e0\uff0c\u53d1\u73b0\u662f\u6ca1\u6709\u6309 len \u66f4\u65b0\uff0c\u4e8e\u662f\u91cd\u6784\u5199\u51fa\u4ee3\u7801\uff0c\u5728 \\(cnt = 0\\) \u7684\u65f6\u5019\u591a\u52a0\u4e86\u7279\u5224\uff0c\u5148\u5224 \\(len\\) \u518d\u8003\u8651\u662f\u5426\u9700\u8981\u4ece\u513f\u5b50\u8282\u70b9\u7684 maxy \u4e0a\u4f20\u4fe1\u606f\u3002</p> <p>\u6b64\u65f6\u8fc7\u4e86 sample1\uff0c\u4f46\u662f\u8f93\u51fa\u987a\u5e8f\u6709\u95ee\u9898\uff0c\u601d\u8003\u4e86\u4e00\u4e0b\u5e94\u8be5\u662f\u8981\u52a0\u4e00\u4e2a\u7279\u5224\uff1f</p> <p>\u4f46\u662f\u8f93\u51fa\u6b64\u65f6\u5e76\u6ca1\u6709\u53d8\u5316\uff0c\u653e\u4e0b\u8fd9\u4e2a\u4f11\u606f\u4e86\u4e00\u4f1a\uff0c\u56de\u6765\u53d1\u73b0\u6211\u4e4b\u524d\u7684\u4ee3\u7801\u6709\u4e2a <code>sort(ans.begin(), ans.end())</code>\uff0c\u8d76\u7d27\u5220\u6389\u4e86\uff0c\u7136\u540e\u53d1\u73b0\u5176\u5b9e\u4e0d\u9700\u8981\u7279\u5224\uff0c\u7136\u540e\u5c31\u8fc7\u4e86 sample1\u3002</p> <p>\u4f46\u662f Wa on 2\uff0c\u53d1\u73b0\u597d\u50cf\u8fd8\u6709\u70b9\u95ee\u9898\uff0c\u5177\u4f53\u662f\u5565\u6211\u5fd8\u8bb0\u4e86\uff0c\u53cd\u6b63\u6539\u4e86\u4e00\u4e0b\u8fc7\u4e86 2\uff0cWa on 3.</p> <p>\u4e0a cf \u7ffb\u51fa #3 \u7684\u6570\u636e\uff0c\u624b\u5143\u753b\u56fe\uff0c\u5bf9\u6bd4\u4e86\u4e00\u4e0b output \u548c forward\uff0c\u53d1\u73b0\u662f\u5728\u6709\u591a\u4e2a\u5904\u7406\u91cd\u5408\u7684\u65f6\u5019\u6ca1\u6709\u5f04\u597d\uff0c\u4e4b\u524d\u6709\u7684 data \u8fd9\u91cc\u5e76\u6ca1\u6709\u5220\uff0c\u88ab ignore \u6389\u6362\u6210\u4e86\u5728\u8fd9\u91cc\u65b0\u66f4\u65b0\u7684\u4e00\u4e2a data\u3002</p> <p>\u4e8e\u662f\u731c\u6d4b\u53c8\u662f maxy \u51fa\u95ee\u9898\u4e86\uff0c\u601d\u8003\u4e86\u4e00\u4f1a\u53d1\u73b0\u786e\u5b9e\uff0cchange \u5b8c\u4e86\u4e5f\u662f\u9700\u8981\u8003\u8651\u4ece\u513f\u5b50\u66f4\u65b0\u7684\uff0c\u4e0d\u7136\u4e4b\u524d\u7684\u4fe1\u606f\u53ef\u80fd\u5c31\u4f20\u4e0d\u4e0a\u6765\u3002</p> <p>\u7136\u540e\u8fc7\u4e86 #21, RE on #22\uff0c\u53d1\u73b0\u53ef\u80fd\u662f\u6570\u7ec4\u6ca1\u5f00\u591f\uff0c\u5f00\u4e86\u4e4b\u540e\u987a\u624b\u5f00\u4e86 long long\uff0c\u4f46\u662f\u6ca1\u7528\u3002</p> <p>\u770b CF \u4e00\u76f4\u7ed9\u6211\u63d0\u793a line 54 out of bounds\uff0c\u4e0d\u61c2\uff0c\u4e8e\u662f\u7528\u7c7b\u4f3c assert \u7684\u65b9\u5f0f\u5224\u4e86\u4e00\u4e0b l, r\u3002</p> <p>\u4f46\u662f\u6ca1\u7528\u554a\u3002</p> <p>\u7a81\u7136\u601d\u8003\u5230\u53ef\u80fd \\(p\\) \u4f1a\u8d8a\u754c\uff0c<code>exit(p)</code> \u53d1\u73b0 p &gt; si * 8 \u4e86\uff0c\u4e8e\u662f\u5f00\u5927\uff0c\u4f46\u662f MLE on 1\uff0c\u5173\u6389 long long \u5c31\u8fc7\u4e86\u3002 </p> <p>debug \u8fc7\u7a0b\u5168\u90e8\u5f55\u4e86\u5c4f\u7684\uff0c\u5728 bilibili \u4e0a\u9762\uff1a</p> <ul> <li>\u7b2c\u4e00\u90e8\u5206\uff0c\u5e27\u7387\u5f88\u4f4e\uff0c\u6bd4\u7279\u7387\u5f88\u4f4e\u3002</li> <li>\u7b2c\u4e8c\u90e8\u5206\uff0c\u5e27\u7387\u5f88\u9ad8\uff0c\u6bd4\u7279\u7387\u5f88\u4f4e\u3002</li> <li>\u7b2c\u4e09\u90e8\u5206\uff0c\u5e27\u7387\u5f88\u9ad8\uff0c\u6bd4\u7279\u7387\u8fd8\u884c\u3002</li> </ul>"}, {"location": "sol/pro/cf713c/", "title": "CF713C", "text": ""}, {"location": "sol/pro/cf713c/#description", "title": "Description", "text": "<p>\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u957f\u5ea6\u4e3a \\(n\\)\u3002</p> <p>\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u628a \\(a\\) \u4e2d\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u52a0\u4e00\u6216\u8005\u51cf\u4e00\uff0c\u4ee3\u4ef7\u4e3a \\(1\\)\u3002</p> <p>\u6c42\u4f7f\u5f97\u539f\u5e8f\u5217\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p> <p>\\(1\\le n \\le 3\\times10^3, 1\\le a_i \\le 10^9\\)\u3002</p>"}, {"location": "sol/pro/cf713c/#analysis", "title": "Analysis", "text": "<p>\u672c\u9898\u548c POJ3666 \u5341\u5206\u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\uff0c\u672c\u9898\u8981\u6c42\u7684\u662f\u4e25\u683c\u5355\u8c03\u9012\u589e\uff0c\u800c POJ3666 \u5219\u8981\u6c42\u975e\u4e25\u683c\u5355\u8c03\u9012\u589e\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u7ecf\u5178 Trick\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(a_i\\)\uff0c\u8ba9\u5b83\u51cf\u53bb \\(i\\)\uff0c\u672c\u9898\u7684\u4e25\u683c\u5355\u8c03\u9012\u589e\u5c31\u8f6c\u5316\u4e3a\u4e86\u975e\u4e25\u683c\u5355\u8c03\u9012\u589e\u3002</p> <p>\u7ecf\u8fc7\u5206\u6790\u4e4b\u540e\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5f15\u7406\uff08\u8f6c\u5316\u4e3a\u975e\u4e25\u683c\u4e4b\u540e\uff09\uff1a</p>"}, {"location": "sol/pro/cf713c/#lemma", "title": "Lemma", "text": "<p>\u8bbe\u6700\u540e\u5f97\u5230\u7684\u5e8f\u5217\u4e3a \\(b\\)\uff0c\\(S_a,S_b\\) \u5206\u522b\u4e3a \\(a,b\\) \u5f53\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u6570\u7ec4\u6210\u7684\u96c6\u5408\u3002</p> <p>\u5fc5\u7136\u5b58\u5728\u4e00\u7ec4\u6700\u4f18\u89e3\uff0c\u4f7f\u5f97 \\(S_b \\subset S_a\\)\u3002</p>"}, {"location": "sol/pro/cf713c/#proof", "title": "Proof", "text": "<p>\u9996\u5148\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u6784\u9020\u4e00\u4e2a\u975e\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\u5e8f\u5217 \\(b\\)\uff0c\u4f7f\u5f97 \\(\\sum\\limits_{i=1}^{n} |a_i -b_i|\\) \u6700\u5c0f\u3002</p> <p></p> <p>\u8003\u8651\u8fd9\u6837\u7684\u4e00\u5f20\u56fe\uff0c\u5176\u4e2d \\(re\\) \u8868\u793a\u5bf9 \\(a\\) \u6392\u5e8f\u4e4b\u540e\u5f97\u5230\u7684\u5e8f\u5217\uff0c\u6a59\u8272\u70b9\u8868\u793a \\(b\\)\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a \\(re_i,re_{i+1}\\)\uff0c\u628a\u6240\u6709\u5728 \\([re_i,re_{i+1}]\\) \u8fd9\u4e2a\u533a\u95f4\u7684 \\(b\\) \u90fd\u627e\u51fa\u6765\uff08\u4e0a\u56fe\u88ab\u6846\u8d77\u6765\u7684\u90e8\u5206\uff09\u3002</p> <p>\u7edf\u8ba1 \\(b_i\\) \u5bf9\u5e94\u7684 \\(a_i\\) \u5927\u4e8e\u7b49\u4e8e \\(re_{i+1}\\) \u7684\u4e2a\u6570 \\(y\\)\uff0c\u5c0f\u4e8e\u7b49\u4e8e \\(re_i\\) \u7684\u4e2a\u6570 \\(x\\)\u3002</p> <p>\u5982\u679c \\(x &gt; y\\) \uff0c\u90a3\u4e48\u628a\u88ab\u6846\u8d77\u6765\u7684\u8fd9\u90e8\u5206\u6574\u4f53\u5411\u4e0b\u5e73\u79fb \\(d\\) \u4e2a\u5355\u4f4d\uff0c\u4f7f\u5f97\u5b83\u4eec\u5f53\u4e2d\u7684\u6700\u4f4e\u70b9\u7b49\u4e8e \\(re_i\\)\uff0c\u603b\u4ee3\u4ef7\u5c31\u4f1a\u589e\u52a0 \\(d(y-x)\\)\uff0c\u56e0\u4e3a \\(x &gt;y\\)\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u603b\u4ee3\u4ef7\u4f1a\u51cf\u5c0f\uff0c\u5c31\u4f1a\u66f4\u4f18\u3002</p> <p>\\(x &lt; y\\) \u7684\u65f6\u5019\u540c\u7406\uff0c\\(x=y\\) \u7684\u65f6\u5019\u4efb\u610f\u9009\u4e00\u4e2a\u65b9\u5f0f\u5e73\u79fb\u5373\u53ef\u3002</p> <p>\u5f52\u7eb3\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u4efb\u4f55\u4e00\u4e2a \\(b_i\\) \uff0c\u53ea\u8981\u5b83\u4e0d\u5c5e\u4e8e \\(S_a\\)\uff0c\u603b\u662f\u53ef\u4ee5\u628a\u5b83\u53d8\u6210 \\(S_a\\) \u5f53\u4e2d\u7684\u67d0\u4e00\u4e2a\u6570\uff0c\u4e14\u6700\u7ec8\u7b54\u6848\u4e0d\u4f1a\u66f4\u52a3\u3002</p> <p>\u5f15\u7406\u5f97\u8bc1\u3002</p>"}, {"location": "sol/pro/cf713c/#method", "title": "Method", "text": "<p>\u6839\u636e\u5f15\u7406\u4ee5\u53ca\u5176\u8bc1\u660e\u8fc7\u7a0b\uff0c\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a DP \u72b6\u6001\uff1a</p> <p>\u8bbe \\(dp_{i,j}\\) \u8868\u793a\uff0c\u8003\u8651\u4f7f \\(a_1 \\sim a_i\\) \u5168\u90e8\u6ee1\u8db3\u6761\u4ef6\uff0c\u4e14\u4f7f \\(a_i\\) \u53d8\u4e3a \\(re_j\\) \u65f6\u7684\u72b6\u6001\u96c6\u5408\u3002</p> <p>\\(dp_{i,j}\\) \u7684\u5c5e\u6027\u662f\uff1a\u201c\u603b\u4ee3\u4ef7\u7684\u6700\u5c0f\u503c\u201d\u3002</p> <p>\u6700\u7ec8\u7b54\u6848\u662f\u6240\u6709 \\(dp_{n,i}\\) \u7684\u6700\u5c0f\u503c\uff0c\u5176\u4e2d \\(i \\in [1, n]\\)\u3002</p> <p>\u8003\u8651\u4ece\u201c\u4e0a\u4e00\u6b21\u51b3\u7b56\u201d\u8fdb\u884c\u8f6c\u79fb\uff08\u5373\u662f\u679a\u4e3e\u4e0a\u4e00\u6b21\u51b3\u7b56\u9009\u4e86\u4ec0\u4e48\uff09\uff0c\u53ef\u4ee5\u5c06\u72b6\u6001\u96c6\u5408\u5212\u5206\u5982\u4e0b\uff1a</p> <p></p> <p>\u90a3\u4e48\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b9\u7a0b\uff1a</p> \\[dp_{i,j} = \\min\\limits_{0\\le k \\le j}\\{dp_{i-1,k}\\} + |a_i - re_j|\\] <p>\u5199\u51fa\u4ee3\u7801\uff1a</p> <pre><code>memset(dp, 0x3f,sizeof dp), dp[0][0] = 0;\nfor(int i = 1; i &lt;= n; ++i) {\nfor(int j = 1; j &lt;= n; ++j) {\nfor(int k = 0; k &lt;= j; ++k) {\ndp[i][j] = min(dp[i][j], dp[i - 1][k]);\ndp[i][j] += abs(a[i] - re[j]);\n}\n// \u56e0\u4e3a\u521d\u59cb\u5316\u53ea\u521d\u59cb\u5316\u4e86 dp[0][0]\uff0c\u6240\u4ee5 k \u8981\u4ece 0 \u5f00\u59cb\u3002\n// \u5426\u5219\u4ece dp[1][1] \u5f00\u59cb\u7684 dp \u503c\u5c31\u4e0d\u4f1a\u88ab\u66f4\u65b0\uff0c\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u7b54\u6848\u3002\n}\n}\n</code></pre> <p>\u590d\u6742\u5ea6\u662f \\(\\text{O}(n^3)\\) \u7684\uff0c\u9700\u8981\u4f18\u5316\u3002</p> <p>\u74f6\u9888\u5728\u4e8e\u6bcf\u6b21\u679a\u4e3e \\(k\\) \u6c42\u51fa \\(dp_{i - 1,k}\\) \u7684\u201c\u5019\u9009\u96c6\u5408\u201d\u4e2d\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u53d1\u73b0\u5f53\u5916\u5c42\u5faa\u73af\u7684 \\(i\\) \u56fa\u5b9a\uff0c\\(j\\) \u6bcf\u6b21\u589e\u5927 \\(1\\) \u7684\u65f6\u5019\uff0c\\(dp_{i-1,k}\\) \u7684\u5019\u9009\u96c6\u5408\u53ea\u4f1a\u65b0\u52a0\u5165\u4e00\u4e2a\u503c\uff1a \\(dp_{i-1,j}\\)\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u5f53\u524d\u5019\u9009\u96c6\u5408\u5f53\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u6bcf\u6b21\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u8fdb\u884c\u8f6c\u79fb\u3002</p> <p>\u90a3\u4e48\u6bcf\u6b21\u8f6c\u79fb\u7684\u590d\u6742\u5ea6\u5c31\u4ece \\(\\text{O}(n)\\) \u4f18\u5316\u5230\u4e86 \\(\\text{O}(1)\\)\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a \\(\\text{O}(n^2)\\)\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002</p> Code <pre><code>int main() { cin &gt;&gt; n;\nfor(int i = 1; i &lt;= n; ++i) {\ncin &gt;&gt; a[i];\na[i] -= i, re[i] = a[i];\n}\nsort(re + 1, re + 1 + n);\n\n// \u521d\u59cb\u5316\u5199\u6cd5\u548c n^3 \u505a\u6cd5\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u672c\u8d28\u4e00\u6837\u3002\nfor(int i = 1; i &lt;= n; ++i) {\ndp[1][i] = abs(a[1] - re[i]);\n}\nfor(int i = 2; i &lt;= n; ++i) {\ni64 minv = 2e18;\nfor(int j = 1; j &lt;= n; ++j) {\nminv = min(minv, dp[i - 1][j]);\ndp[i][j] = minv + abs(a[i] - re[j]);\n}\n}\n\ni64 res = 2e18;\nfor(int i = 1; i &lt;= n; ++i) {\nres = min(res, dp[n][i]);\n}\ncout &lt;&lt; res &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u5f53\u7136\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5bf9 \\(re\\) \u8fdb\u884c\u4e00\u6b21\u53bb\u91cd\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u53ef\u4ee5\u964d\u5230 \\(\\text{O}(n \\times |S_a|)\\)\u3002</p>"}, {"location": "sol/pro/uoj105/", "title": "UOJ105", "text": ""}, {"location": "sol/pro/uoj105/#uoj105-beads-and-wires", "title": "UOJ105 Beads and wires", "text": "<p>\u4e00\u9053\u4e2a\u4eba\u8ba4\u4e3a\u975e\u5e38\u68d2\u7684\u9898\uff0c\u5361\u4e86\u6211\u63a5\u8fd1\u4e00\u5929\u7684\u65f6\u95f4\u3002</p> <p>\u867d\u7136YL\u6012\u65a5\u8fd9\u9898\u5957\u8def \uff0c\u4e0d\u8fc7\u4ed6\u4e5f\u8bf4\u8fd9\u9898\u60f3\u8d77\u6765\u5bb9\u6613\uff0c\u63a8\u8d77\u6765\u4e00\u822c\uff0c\u5b9e\u73b0\u5f88\u6076\u5fc3\uff08</p>"}, {"location": "sol/pro/uoj105/#textdecription", "title": "\\(\\text{Decription}\\)", "text": "<p>\u95ee\u9898\uff1a\u4f60\u6709 \\(n\\) \u4e2a\u73e0\u5b50\uff0c\u521d\u59cb\u4f60\u53ef\u4ee5\u9009\u4efb\u610f\u7684\u4e00\u4e2a\u73e0\u5b50\uff0c\u4e4b\u540e\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u7684\u64cd\u4f5c\uff1a 1. \u628a\u4e00\u9897\u65b0\u7684\u73e0\u5b50 \\(v\\) \u548c\u5df2\u7ecf\u9009\u4e86\u7684\u67d0\u4e00\u4e2a\u73e0\u5b50 \\(u\\) \u7528\u7ea2\u8272\u8fb9 (u,v) \u76f8\u8fde\u3002 2. \u628a\u4e00\u9897\u65b0\u7684\u73e0\u5b50 \\(w\\) \u63d2\u5165\u5230\u7528\u7ea2\u8272\u8fb9\u94fe\u63a5\u7684\u4e24\u4e2a\u8282\u70b9 \\(u,v\\) \u5f53\u4e2d\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u5c06 \\(u,w\\) \u548c \\(v,w\\) \u5206\u522b\u7528\u84dd\u8272\u8fb9\u76f8\u8fde\uff0c\u7136\u540e\u5220\u9664 \\((u,v)\\) \u8fd9\u6761\u7ea2\u8272\u8fb9\u3002 \u73b0\u5728\u7ed9\u5b9a\u4f60\u6240\u6709\u64cd\u4f5c\u5b8c\u4e86\u4e4b\u540e\u7684\u60c5\u51b5\uff0c\u5e76\u8bf4\u660e\u4e24\u4e2a\u76f8\u4e92\u94fe\u63a5\u7684\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\uff0c\u4f46\u662f\u4f60\u4e0d\u77e5\u9053\u8fb9\u7684\u989c\u8272\u3002 \u8981\u4f60\u627e\u5230\u4e00\u79cd\u53ef\u80fd\u7684\u65b9\u6848\u4f7f\u5f97\u4f60\u7684\u5f97\u5206\u6700\u5927\uff0c\u5b9a\u4e49\u4f60\u7684\u5f97\u5206\u4e3a\u6240\u6709\u64cd\u4f5c\u5b8c\u4e86\u4e4b\u540e\u7684\u84dd\u8272\u8fb9\u6743\u503c\u4e4b\u548c\u3002 \u8f93\u51fa\u8fd9\u4e2a\u6700\u5927\u7684\u5f97\u5206\u3002\\(n \\le 5\\times 10^5\\)\u3002</p>"}, {"location": "sol/pro/uoj105/#textsolution", "title": "\\(\\text{Solution}\\)", "text": "<p>\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u540e\u7ed9\u51fa\u7684\u60c5\u51b5\u4e00\u5b9a\u662f\u4e00\u9897\u65e0\u6839\u7684\u5e26\u6743\u6811\u3002</p> <p>\u7136\u540e\u53d1\u73b0\u84dd\u8272\u7684\u8fb9\u4e00\u5b9a\u662f\u4e00\u6761\u7531\u4e09\u4e2a\u8fde\u7eed\u8282\u70b9\u548c\u94fe\u63a5\u4ed6\u4eec\u7684\u4e24\u6761\u8fb9\u6784\u6210\u7684\u4e00\u6761\u94fe\u3002</p> <p>\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u8bf4\u84dd\u8272\u8fb9\u53ea\u80fd\u5728\u7ea2\u8272\u8fb9\u7684\u57fa\u7840\u4e0a\u201c\u63d2\u5165\u201d\u6765\u751f\u6210\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u73b0\u5728\u94a6\u5b9a\u4e00\u6761\u84dd\u8272\u94fe \\((u,v,w)\\) \u4e14 \\(w\\) \u662f\u88ab\u63d2\u5165\u5230 \\((u,v)\\) \u7684\u90a3\u4e2a\u8282\u70b9\uff0c\\(w\\) \u4e00\u5b9a\u4e0d\u80fd\u662f\u53e6\u5916\u4e00\u6761\u84dd\u8272\u94fe\u4e2d\u88ab\u201c\u63d2\u5165\u201d\u7684\u70b9\uff08\u6211\u4eec\u79f0\u8fd9\u4e2a\u70b9\u4e3a\u84dd\u8272\u94fe\u7684\u4e2d\u70b9\uff09\u3002</p> <p>\u6240\u4ee5\uff0c\u5982\u679c\u4e24\u6761\u84dd\u8272\u7684\u94fe\u6709\u91cd\u53e0\u90e8\u5206\uff0c\u65e0\u975e\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u8fd9\u4e24\u6761\u94fe\u5f53\u4e2d\u5206\u522b\u6709\u4e00\u4e2a\u7aef\u70b9\u548c\u53e6\u5916\u4e00\u6761\u94fe\u7684\u90a3\u4e2a\u7aef\u70b9\u662f\u76f8\u8fde\u7684\uff08\u4e24\u7aef\u76f8\u4ea4\uff09\u3002</li> <li>\u8fd9\u4e24\u6761\u94fe\u5f53\u4e2d\u6709\u4e00\u4e2a\u6761\u94fe\u7684\u4e2d\u70b9\u662f\u53e6\u5916\u4e00\u6761\u94fe\u7684\u7aef\u70b9\uff08\u4e5f\u5c31\u662f\u6ca1\u6709\u4e00\u4e2a\u8282\u70b9\u662f\u540c\u65f6\u505a\u4e24\u6761\u84dd\u8272\u94fe\u7684\u7aef\u70b9\u7684\uff09\u3002</li> </ol> <p>\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u63a8\u51fa\u5047\u5b9a\u4e86\u4e00\u4e2a\u6839\u8282\u70b9\u7684\u65f6\u5019\u7684\u7b54\u6848\uff0c\u5e76\u8003\u8651\u4e00\u4e2a \\(\\text{O}(n^2)\\) \u7684\u505a\u6cd5\uff08\u6bcf\u4e2a\u70b9\u8dd1\u4e00\u6b21 dfs\uff09\u3002</p> <p>\u5047\u8bbe \\(f_{u,0/1}\\) \u8868\u793a \\(u\\) \u4e0d\u662f/\u662f\u4e00\u6761\u84dd\u8272\u94fe\u7684\u4e2d\u70b9\uff0c\u5728\u4ee5 \\(u\\) \u4e3a\u6839\u7684\u5b50\u6811\u5f53\u4e2d\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5206\u6570\u3002</p> <p>\\(f_{u,0}\\) \u5f88\u597d\u63a8\uff0c\u65e2\u7136\u5b83\u4e0d\u662f\u4e00\u6761\u84dd\u8272\u94fe\u7684\u4e2d\u70b9\uff0c\u5e76\u4e14\u73b0\u5728\u662f\u5728 \\(u\\) \u7684\u5b50\u6811\u5f53\u4e2d\u8003\u8651\uff0c\u90a3\u4e48\u6211\u4eec\u679a\u4e3e \\(u\\) \u7684\u6bcf\u4e00\u4e2a\u513f\u5b50\u4e3a\u4e2d\u70b9\u7684\u60c5\u51b5\u8fdb\u884c\u8f6c\u79fb\u5373\u53ef\uff0c\u5f53\u7136\u4e0d\u8981\u5fd8\u8bb0\u8003\u8651 \\(u\\) \u548c \\(v\\) \u8fde\u7684\u662f\u7ea2\u8272\u8fb9\u7684\u60c5\u51b5\u3002</p> <p>\\(f_{u,0}=\\sum \\max(f_{v,0},f_{v,1}+w_{u,v})\\)</p> <p>\\(f_{u,1}\\) \u4e5f\u5f88\u597d\u8003\u8651\uff0c\u56e0\u4e3a \\(u\\) \u53ea\u80fd\u662f\u4e00\u6761\u84dd\u8272\u94fe\u7684\u4e2d\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u4f5c\u4e3a\u8fd9\u4e00\u6761\u84dd\u8272\u94fe\u7684\u7aef\u70b9\u7684\u513f\u5b50 \\(v\\) \uff0c\u5176\u4ed6\u7684\u513f\u5b50\u53ef\u4ee5\u7528 \\(u\\) \u4e0d\u662f\u4e2d\u70b9\u7684\u60c5\u51b5\u8f6c\u79fb\uff08\u6839\u636e\u4e0a\u9762\u7684\u60c5\u51b52\uff09\u3002</p> <p>\u6240\u4ee5\u8f6c\u79fb\u7684\u65f6\u5019\u53ef\u4ee5\u5229\u7528 \\(f_{u,0}\\) \u6263\u6389\u5f53\u524d\u513f\u5b50 \\(v\\) \u5728 \\(f_{u,0}\\) \u5f53\u4e2d\u505a\u7684\u8d21\u732e \\(\\max(f_{v,0},f_{v,1}+w_{u,v})\\)\uff0c\u518d\u52a0\u4e0a \\(v\\) \u5728\u5f53\u524d\u60c5\u51b5\u505a\u7684\u8d21\u732e \\(f_{v,0}+w_{u,v}\\)\u3002</p> <p>\\(f_{u,1}=f_{u,0}+\\max\\{f_{v,0}+w_{u,v}-\\max(f_{v,0},f_{v,1}+w_{u,v})\\}\\)</p> <p>\u597d\uff0c\u73b0\u5728\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u4e3a\u6839\u7684\u60c5\u51b5\u90fd\u505a\u4e00\u6b21DP\uff0c\u5c31\u53ef\u4ee5\u62ff\u5230 57pts \u7684\u597d\u6210\u7ee9\u4e86\u3002</p> <p>\u53d1\u73b0\u8fd9\u4e2a\u505a\u6cd5\u975e\u5e38\u7b26\u5408\u6362\u6839DP\u7684\u5f62\u5f0f\uff0c\u6839\u8282\u70b9\u7684\u53d8\u5316\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\uff0c\u5e76\u4e14\u66b4\u529b\u505a\u6cd5\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6839\u8fdb\u884cDP\u3002</p> <p>\u6240\u4ee5\u8003\u8651\u628a\u539f\u672c \\(\\text{O}(n)\\) \u7684\u66b4\u529b\u6362\u6839\u4f18\u5316\u5230 \\(\\text{O}(1)\\)\u3002</p> <p>\u73b0\u5728\uff0c\u5047\u8bbe\u6839\u4ece\u7236\u4eb2\u8282\u70b9 \\(u\\) \u53d8\u6210\u4e86\u513f\u5b50\u8282\u70b9 \\(v\\) \uff0c\u4f1a\u6709\u4ec0\u4e48\u5f71\u54cd\u5462\uff1f</p> <p>\u660e\u663e\uff0c\\(v\\) \u5728\u7b2c\u4e00\u6b21 dfs \u7684\u65f6\u5019\u5bf9 \\(u\\) \u7684\u8d21\u732e\u6ca1\u6709\u4e86\uff0c\u800c\u8f6c\u79fb\u65b9\u7a0b\u91cc\u9762\u53c8\u6709\u6700\u5927\u503c\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u4e3a\u4e86\u8f6c\u79fb\uff0c\u9700\u8981\u8bb0\u5f55\u6b21\u5927\u503c\uff08\u8fd9\u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684 trick\uff09\u3002\u4e5f\u5c31\u662f\u5728\u629b\u6389 \\(v\\) \u4e4b\u540e\uff0c\u5728 \\(u\\) \u7684\u513f\u5b50\u5f53\u4e2d\u8d21\u732e\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u3002</p> <p>\u56e0\u4e3a\u6362\u6839\u4e4b\u540e\uff0c\\(u\\) \u4f1a\u53d8\u6210 \\(v\\) \u7684\u7236\u4eb2\uff0c\u90a3\u4e48\u76f8\u5bf9\u7684\uff0c\u4ece \\(u\\) \u7684\u72b6\u6001\u8f6c\u79fb\u5230 \\(v\\) \uff0c\u8ba1\u7b97 \\(u\\) \u73b0\u5728\u5bf9 \\(v\\) \u7684\u8d21\u732e\u65f6\uff0c\u9700\u8981\u53bb\u9664 \\(v\\) \u7ed9 \\(u\\) \u7684\u8d21\u732e\uff0c\u76f4\u63a5\u505a\u52a0\u51cf\u6cd5\u4e0d\u597d\u7ef4\u62a4\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u76f4\u63a5\u7ef4\u62a4\u6263\u6389\u8d21\u732e\u4e4b\u540e\u7684\u503c\u3002</p> <p>\u6211\u4eec\u8bbe \\(dp_{u,0/1,v}\\) \u8868\u793a\u5728\u8f6c\u79fb \\(f_{u,0/1}\\) \u8fd9\u4e2a\u72b6\u6001\u7684\u65f6\u5019\uff0c\u4e0d\u8003\u8651\u4ee5 \\(v\\) \u4e3a\u6839\u7684\u5b50\u6811 \uff0c\u5728 \\(u\\) \u7684\u5b50\u6811\u5f53\u4e2d\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u5206\u6570\u3002</p> <p>\u56e0\u4e3a\u5728 \\(f_{u,0}\\) \u8fd9\u4e2a\u72b6\u6001\u7684\u65f6\u5019\uff0c\\(v\\) \u7684\u8d21\u732e\u5c31\u662f \\(\\max(f_{v,0},f_{v,1}+w_{u,v})\\) \uff0c\u5e76\u4e14 \\(f_{u,0}\\) \u662f\u5bf9\u6bcf\u4e2a\u513f\u5b50\u7684\u8d21\u732e\u6c42\u548c\uff0c\u6240\u4ee5\u4e0d\u6d89\u53ca\u5230\u6700\u5927\u503c\u53d8\u5316\u7684\u95ee\u9898\uff0c\u76f4\u63a5\u5728 \\(f_{u,0}\\) \u5f53\u4e2d\u51cf\u53bb\u5373\u53ef\u3002</p> <p>\\(dp_{u,0/1,v}=f_{u,0}-\\max(f_{v,0},f_{v,1}+w_{u,v})\\)</p> <p>\u800c\u8003\u8651 \\(f_{u,1}\\) \u7684\u65f6\u5019\uff0c\\(v\\) \u6709\u53ef\u80fd\u7ed9 \\(f_{u,1}\\) \u8d21\u732e\u6700\u5927\u7684 \\(f_{v,0}+w_{u,v}-\\max(f_{v,0},f_{v,1}+w_{u,v})\\)\u3002</p> <p>\u6240\u4ee5\u8fd8\u9700\u8981\u8bb0\u5f55\u6700\u5927\u503c\u6b21\u5927\u503c\u6765\u8fdb\u884c\u8f6c\u79fb\u3002</p> <p>\\(dp_{u,0/1,v}=\\begin{cases} dp_{u,0,v}+max_1 &amp; \\text{trans}_v \\ \\text{is not the max contribute}\\\\ dp_{u,0,v}+max_2 &amp; \\text{otherwise.}\\end{cases}\\)</p> <p>\u5176\u4e2d \\(trans_v=f_{v,0}+w_{u,v}-\\max(f_{v,0},f_{v,1}+w_{u,v})\\)</p> <p>\\(max_1,max_2\\) \u662f\u5728\u7b2c\u4e00\u6b21 dfs \u7684\u65f6\u5019\u8bb0\u5f55\u7684 \\(u\\) \u6240\u6709\u7684\u513f\u5b50 \\(trans_v\\) \u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u3002</p> <p>\u7136\u540e\u6362\u6839\u7684\u65f6\u5019\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u7684\u513f\u5b50\uff0c\u5148\u628a \\(f_{u,0} = dp_{u,0,v},f_{u,1} = dp_{u,1,v}\\)\u3002</p> <p>\u7136\u540e\u91cd\u65b0\u8ba1\u7b97 \\(u\\) \u5bf9 \\(v\\) \u7684\u8d21\u732e\uff08\u6362\u6839\uff09\uff0c\u4e0d\u8fc7\u56e0\u4e3a \\(fa\\) \u5728\u5f53\u524d\u60c5\u51b5\u53d8\u6210\u4e86 \\(u\\) \u7684\u513f\u5b50\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u628a \\(fa\\) \u5bf9 \\(u\\) \u7684\u8d21\u732e\u8ba1\u7b97\u51fa\u6765\u3002</p> <p>\u8ba1\u7b97\u5b8c\u4e86\u4e4b\u540e\u5728\u7b54\u6848\u91cc\u53d6\u4e2a\u6700\u5927\u503c\u5373\u53ef\u3002</p>"}, {"location": "sol/pro/uoj105/#textcode", "title": "\\(\\text{Code}\\)", "text": "\u5b9e\u73b0 <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconstexpr int si=5e5+10;\nconstexpr int inf=0x3f3f3f3f;\nint n;\nstruct Tree{\nint head,ver,Next,w;\n}e[si&lt;&lt;1];\nint tot=0;\ninline void add(int u,int v,int w){\ne[++tot].ver=v,e[tot].Next=e[u].head;\ne[tot].w=w,e[u].head=tot;\n}\nint father[si],len[si]; // father \u548c len \u662f\u65b9\u4fbf dfs2 \u7684\u8f6c\u79fb\u7528\u7684\u3002\nint f[si][2];\nstd::vector&lt;int&gt;son[si]; // \u8bb0\u5f55\u513f\u5b50\uff0c\u4fbf\u4e8e\u8f6c\u79fb\nstd::vector&lt;int&gt;dp[si][2];\nstd::vector&lt;int&gt;mx[si]; // \u8bb0\u5f55 u \u7684\u6bcf\u4e00\u4e2a\u513f\u5b50\u7684 trans\uff0c\u5982\u679c\u5f53\u524d\u513f\u5b50\u7684 trans \u662f\u6700\u5927\u7684\uff0c\u90a3\u4e48\u66ff\u6362\u6210\u6b21\u5927\u503c\u518d\u8ba1\u7b97\u3002\n\ninline void dfs1(int u,int fa){\nint max1,max2; max1=max2=-inf;\nf[u][0]=0,f[u][1]=-inf;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver,w=e[i].w;\nif(v==fa) continue;\nlen[v]=w,father[v]=u,son[u].push_back(v); // \u8bb0\u5f55\u4fe1\u606f\ndfs1(v,u),f[u][0]+=max(f[v][0],f[v][1]+w); // \u8f6c\u79fb\nint trans=f[v][0]+w-max(f[v][0],f[v][1]+len[v]);\nif(trans&gt;max1) max2=max(max2,max1),max1=trans;\nelse max2=max(trans,max2); // \u8bb0\u5f55\u6b21\u5927\u503c\u3002\n} f[u][1]=f[u][0]+max1;\nfor(register int i=e[u].head;i;i=e[i].Next){\nint v=e[i].ver,w=e[i].w;\nif(v==fa) continue;\ndp[u][0].push_back(f[u][0]-max(f[v][0],f[v][1]+w));\nint trans=f[v][0]+w-max(f[v][0],f[v][1]+len[v]);\nif(trans==max1) dp[u][1].push_back(dp[u][0].back()+max2),mx[u].push_back(max2);\nelse dp[u][1].push_back(dp[u][0].back()+max1),mx[u].push_back(max1);\n} return ;\n} int res=0;\ninline void dfs2(int u){\nfor(register unsigned i=0;i&lt;son[u].size();++i){\nf[u][0]=dp[u][0][i],f[u][1]=dp[u][1][i];\nif(father[u]){\nf[u][0]+=max(f[father[u]][0],f[father[u]][1]+len[u]);\nf[u][1]=f[u][0]+max(mx[u][i],f[father[u]][0]+len[u]-max(f[father[u]][0],f[father[u]][1]+len[u]));\n// \u6bcf\u6b21\u90fd\u9700\u8981\u518d\u7b97\u4e00\u904d\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u53ea\u7b97\u4e00\u6b21\u7136\u540e\u8bb0\u4e0b\u6765\uff09\n// \u73b0\u5728\u4e3a\u4e86\u8ba1\u7b97 fa \u5bf9 u \u7684\u8d21\u732e\uff0c\u5148\u628a u \u6682\u65f6\u5f53\u4f5c\u6839\u8282\u70b9\uff0c\u4ece\u5b83\u7684\u7236\u4eb2\u548c\u539f\u6765\u7684\u513f\u5b50\u5f53\u4e2d\u8f6c\u79fb\u3002\n// \u76f8\u5f53\u4e8e\u662f\u628a fa \u6dfb\u52a0\u5230\u4e86 u \u7684\u513f\u5b50\u5f53\u4e2d\uff0c\u518d\u8dd1\u4e00\u6b21\u7c7b\u4f3c dfs1 \u91cc\u9762\u7684 dp \u7684\u8fc7\u7a0b\u6765\u66f4\u65b0\u3002\n} res=max(res,f[son[u][i]][0]+max(f[u][0],f[u][1]+len[son[u][i]])); // \u8bb0\u5f55\u5f53\u524d\u60c5\u51b5\u7684\u7b54\u6848\ndfs2(son[u][i]);\n} return ;\n}\n\nint main(){\nscanf(\"%d\",&amp;n);\nfor(register int i=1,u,v,w;i&lt;n;++i){\nscanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w);\nadd(u,v,w),add(v,u,w);\n} dfs1(1,0),dfs2(1);\nreturn printf(\"%d\\n\",res),0;\n}\n</code></pre> <p>\u8bb0\u5f55\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u5229\u7528<code>std::multiset</code>\uff0c\u628a\u4ece\u4e0b\u5230\u4e0a\u7684\u65f6\u5019\u628a\u6240\u6709 \\(trans\\) \u6254\u8fdb\u53bb\uff0c\u7136\u540e\u4ece\u4e0a\u5230\u4e0b\u8f6c\u79fb\u7684\u65f6\u5019\u5224\u5f53\u524d\u7684 \\(trans\\) \u662f\u4e0d\u662f <code>multiset</code> \u5f53\u524d\u7684\u6700\u5927\u503c\u5c31\u53ef\u4ee5\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u5220\u9664\u8fd9\u4e2a\u503c\u5e76\u7528\u6b21\u5927\u503c\u66f4\u65b0\uff0c\u53cd\u4e4b\u76f4\u63a5\u7528\u6700\u5927\u503c\u66f4\u65b0\u5373\u53ef\u3002 </p> <p>\u4e0d\u8fc7\u590d\u6742\u5ea6\u4f1a\u591a\u4e00\u4e2a \\(\\log\\)\u3002</p> <pre><code>Tag : \u6811/\u6811\u5f62DP/\u6362\u6839DP\n</code></pre>"}]}